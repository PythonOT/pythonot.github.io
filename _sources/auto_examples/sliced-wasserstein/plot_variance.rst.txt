
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/sliced-wasserstein/plot_variance.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_sliced-wasserstein_plot_variance.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_sliced-wasserstein_plot_variance.py:


==============================
2D Sliced Wasserstein Distance
==============================

This example illustrates the computation of the sliced Wasserstein Distance as
proposed in [31].

[31] Bonneel, Nicolas, et al. "Sliced and radon wasserstein barycenters of
measures." Journal of Mathematical Imaging and Vision 51.1 (2015): 22-45

.. GENERATED FROM PYTHON SOURCE LINES 14-24

.. code-block:: default


    # Author: Adrien Corenflos <adrien.corenflos@aalto.fi>
    #
    # License: MIT License

    import matplotlib.pylab as pl
    import numpy as np

    import ot








.. GENERATED FROM PYTHON SOURCE LINES 25-27

Generate data
-------------

.. GENERATED FROM PYTHON SOURCE LINES 29-43

.. code-block:: default


    n = 500  # nb samples

    mu_s = np.array([0, 0])
    cov_s = np.array([[1, 0], [0, 1]])

    mu_t = np.array([4, 4])
    cov_t = np.array([[1, -.8], [-.8, 1]])

    xs = ot.datasets.make_2D_samples_gauss(n, mu_s, cov_s)
    xt = ot.datasets.make_2D_samples_gauss(n, mu_t, cov_t)

    a, b = np.ones((n,)) / n, np.ones((n,)) / n  # uniform distribution on samples








.. GENERATED FROM PYTHON SOURCE LINES 44-46

Plot data
---------

.. GENERATED FROM PYTHON SOURCE LINES 48-55

.. code-block:: default


    pl.figure(1)
    pl.plot(xs[:, 0], xs[:, 1], '+b', label='Source samples')
    pl.plot(xt[:, 0], xt[:, 1], 'xr', label='Target samples')
    pl.legend(loc=0)
    pl.title('Source and target distributions')




.. image-sg:: /auto_examples/sliced-wasserstein/images/sphx_glr_plot_variance_001.png
   :alt: Source and target distributions
   :srcset: /auto_examples/sliced-wasserstein/images/sphx_glr_plot_variance_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Text(0.5, 1.0, 'Source and target distributions')



.. GENERATED FROM PYTHON SOURCE LINES 56-58

Sliced Wasserstein distance for different seeds and number of projections
-------------------------------------------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 58-63

.. code-block:: default


    n_seed = 50
    n_projections_arr = np.logspace(0, 3, 25, dtype=int)
    res = np.empty((n_seed, 25))








.. GENERATED FROM PYTHON SOURCE LINES 64-71

.. code-block:: default

    for seed in range(n_seed):
        for i, n_projections in enumerate(n_projections_arr):
            res[seed, i] = ot.sliced_wasserstein_distance(xs, xt, a, b, n_projections, seed=seed)

    res_mean = np.mean(res, axis=0)
    res_std = np.std(res, axis=0)








.. GENERATED FROM PYTHON SOURCE LINES 72-74

Plot Sliced Wasserstein Distance
--------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 74-87

.. code-block:: default


    pl.figure(2)
    pl.plot(n_projections_arr, res_mean, label="SWD")
    pl.fill_between(n_projections_arr, res_mean - 2 * res_std, res_mean + 2 * res_std, alpha=0.5)

    pl.legend()
    pl.xscale('log')

    pl.xlabel("Number of projections")
    pl.ylabel("Distance")
    pl.title('Sliced Wasserstein Distance with 95% confidence inverval')

    pl.show()



.. image-sg:: /auto_examples/sliced-wasserstein/images/sphx_glr_plot_variance_002.png
   :alt: Sliced Wasserstein Distance with 95% confidence inverval
   :srcset: /auto_examples/sliced-wasserstein/images/sphx_glr_plot_variance_002.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  10.373 seconds)


.. _sphx_glr_download_auto_examples_sliced-wasserstein_plot_variance.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_variance.py <plot_variance.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_variance.ipynb <plot_variance.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
