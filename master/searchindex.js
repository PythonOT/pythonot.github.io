Search.setIndex({"docnames": ["all", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_gaussian_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_entropic_semirelaxed_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_fgw_solvers", "auto_examples/gromov/plot_gnn_TFGW", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/plot_semirelaxed_fgw", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_COOT", "auto_examples/others/plot_EWCA", "auto_examples/others/plot_SSNB", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_dmmot", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_learning_weights_with_COOT", "auto_examples/others/plot_logo", "auto_examples/others/plot_lowrank_sinkhorn", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_compute_wasserstein_circle", "auto_examples/plot_optim_OTreg", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "code_of_conduct", "contributing", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.coot", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gnn", "gen_modules/ot.gromov", "gen_modules/ot.lowrank", "gen_modules/ot.lp", "gen_modules/ot.mapping", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "quickstart", "releases", "sg_execution_times"], "filenames": ["all.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_gaussian_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_entropic_semirelaxed_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_fgw_solvers.rst", "auto_examples/gromov/plot_gnn_TFGW.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/plot_semirelaxed_fgw.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_COOT.rst", "auto_examples/others/plot_EWCA.rst", "auto_examples/others/plot_SSNB.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_dmmot.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_learning_weights_with_COOT.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_lowrank_sinkhorn.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_compute_wasserstein_circle.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "code_of_conduct.rst", "contributing.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.coot.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gnn.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lowrank.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.mapping.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "quickstart.rst", "releases.rst", "sg_execution_times.rst"], "titles": ["API and modules", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Gaussian Bures-Wasserstein barycenters", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example", "Plot Fused-Gromov-Wasserstein", "Comparison of Fused Gromov-Wasserstein solvers", "Graph classification with Tempate Based Fused Gromov Wasserstein", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Semi-relaxed (Fused) Gromov-Wasserstein example", "Computation times", "Examples gallery", "Row and column alignments with CO-Optimal Transport", "Entropic Wasserstein Component Analysis", "Smooth and Strongly Convex Nearest Brenier Potentials", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Computing d-dimensional Barycenters via d-MMOT", "Optimal transport with factored couplings", "Learning sample marginal distribution with CO-Optimal Transport", "Logo of the POT toolbox", "Low rank Sinkhorn", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth and sparse OT example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different ground metrics", "OT distances in 1D", "OT distance on the Circle", "Regularized OT with generic solver", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Code of conduct", "Contributing to POT", "Contributors", "ot.backend", "ot.bregman", "ot.coot", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gnn", "ot.gromov", "ot.lowrank", "ot.lp", "ot.mapping", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Quick start guide", "Releases", "Computation times"], "terms": {"The": [0, 2, 7, 10, 12, 27, 29, 34, 35, 42, 44, 45, 47, 53, 56, 59, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99], "list": [0, 5, 10, 29, 66, 72, 74, 75, 76, 77, 80, 81, 82, 83, 85, 90, 93, 95, 96, 97, 99], "automat": [0, 6, 7, 47, 85, 98, 99], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 74, 75, 77, 79, 82, 85, 86, 88, 89, 90, 94, 95, 97, 98, 99], "sub": [0, 90, 97, 98], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 22, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 53, 56, 58, 59, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "follow": [0, 6, 7, 8, 11, 35, 47, 53, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 97, 98, 99], "lp": [0, 7, 14, 17, 18, 39, 45, 59, 75, 76, 77, 78, 86, 87, 92, 94, 95, 97, 98, 99, 100], "bregman": [0, 10, 11, 12, 13, 14, 15, 19, 21, 22, 23, 32, 34, 50, 53, 56, 60, 77, 79, 80, 83, 85, 87, 88, 94, 96, 97, 99], "optim": [0, 1, 3, 5, 8, 9, 14, 20, 25, 26, 29, 30, 31, 32, 33, 34, 37, 39, 42, 43, 45, 51, 52, 60, 61, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100], "util": [0, 2, 6, 7, 10, 11, 13, 33, 45, 47, 51, 53, 66, 74, 85, 86, 98], "dataset": [0, 1, 7, 8, 10, 11, 13, 19, 21, 22, 23, 25, 27, 29, 34, 41, 42, 43, 44, 45, 49, 50, 54, 55, 56, 58, 60, 62, 65, 66, 67, 68, 69, 79, 83, 93, 98, 99], "gromov": [0, 9, 29, 38, 70, 73, 77, 78, 81, 82, 87, 88, 95, 97, 99, 100], "smooth": [0, 11, 39, 52, 61, 73, 77, 78, 86, 89, 97, 98, 99, 100], "stochast": [0, 1, 2, 5, 33, 39, 52, 73, 75, 83, 89, 97, 98, 99, 100], "partial": [0, 66, 69, 70, 73, 78, 93, 97, 99, 100], "regpath": 0, "unbalanc": [0, 70, 73, 75, 77, 78, 88, 89, 90, 95, 97, 99, 100], "map": [0, 1, 5, 28, 39, 42, 51, 69, 73, 77, 78, 81, 83, 85, 93, 95, 97, 99, 100], "ar": [0, 7, 12, 14, 16, 21, 27, 29, 30, 32, 35, 36, 37, 42, 44, 45, 47, 51, 53, 55, 56, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "due": [0, 77, 85, 98, 99], "addit": [0, 72, 76, 85, 90, 97, 98], "depend": [0, 36, 74, 82, 83, 86, 87, 98, 99], "dr": [0, 41, 43, 97, 98], "pymanopt": [0, 79, 97, 98], "autograd": [0, 4, 79, 97, 98, 99], "plot": [0, 2, 7, 10, 11, 13, 30, 32, 36, 37, 38, 39, 42, 45, 47, 49, 60, 98, 99, 100], "matplotlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 99], "barycent": [0, 9, 18, 38, 52, 62, 70, 73, 75, 77, 78, 81, 83, 85, 91, 94, 95, 97, 99, 100], "A": [0, 3, 10, 11, 12, 13, 17, 24, 25, 26, 27, 29, 32, 41, 43, 45, 50, 51, 53, 60, 66, 72, 75, 77, 79, 80, 81, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99], "m": [0, 2, 6, 7, 8, 10, 11, 13, 16, 21, 22, 25, 26, 30, 31, 32, 33, 36, 37, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 58, 60, 63, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "reg": [0, 1, 5, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 32, 34, 36, 41, 43, 49, 51, 53, 55, 56, 58, 60, 66, 67, 68, 69, 75, 77, 79, 80, 81, 83, 84, 85, 87, 88, 90, 92, 93, 94, 97, 98, 99], "weight": [0, 10, 11, 12, 13, 14, 15, 16, 17, 30, 32, 36, 37, 44, 45, 47, 53, 56, 66, 68, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 98, 99], "none": [0, 2, 5, 13, 15, 16, 29, 30, 31, 32, 33, 36, 37, 40, 41, 47, 53, 59, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 99], "method": [0, 7, 13, 29, 32, 42, 49, 51, 72, 75, 76, 77, 79, 83, 85, 86, 92, 93, 94, 95, 97, 98, 99], "sinkhorn": [0, 8, 14, 18, 19, 21, 23, 32, 34, 39, 50, 52, 60, 73, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 89, 92, 94, 95, 96, 97, 99, 100], "numitermax": [0, 14, 15, 19, 21, 22, 23, 32, 34, 49, 51, 53, 56, 60, 75, 77, 80, 83, 84, 85, 86, 87, 88, 92, 93, 94, 96], "10000": [0, 74, 75, 83, 93], "stopthr": [0, 75, 77, 79, 80, 83, 84, 85, 86, 87, 88, 92, 94, 96, 99], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "0001": [0, 75, 87, 90], "verbos": [0, 19, 22, 25, 26, 31, 32, 34, 36, 40, 45, 47, 50, 54, 60, 65, 67, 75, 76, 77, 79, 80, 83, 85, 86, 87, 88, 92, 94, 96], "fals": [0, 13, 26, 29, 30, 32, 33, 36, 37, 41, 45, 47, 49, 50, 59, 63, 68, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96], "log": [0, 13, 22, 29, 30, 31, 32, 34, 36, 37, 40, 45, 47, 49, 51, 60, 62, 63, 67, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 98, 99], "warn": [0, 15, 19, 21, 22, 23, 27, 32, 34, 49, 50, 53, 56, 60, 66, 72, 75, 77, 84, 95, 99], "true": [0, 1, 2, 3, 4, 6, 7, 8, 10, 13, 16, 17, 19, 22, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 40, 43, 45, 47, 48, 49, 50, 51, 53, 54, 60, 63, 65, 67, 68, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98, 99], "kwarg": [0, 75, 77, 78, 80, 83, 86, 87, 88, 89, 94, 95, 96], "sourc": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "comput": [0, 2, 6, 7, 8, 11, 36, 39, 42, 47, 49, 50, 54, 55, 59, 62, 63, 65, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 97, 99], "entrop": [0, 9, 15, 18, 32, 34, 38, 39, 52, 67, 70, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 92, 93, 94, 95, 96, 97, 99, 100], "regular": [0, 9, 10, 12, 15, 18, 19, 20, 21, 22, 26, 28, 32, 34, 36, 38, 42, 49, 50, 56, 61, 66, 70, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100], "wasserstein": [0, 9, 18, 38, 45, 52, 58, 64, 70, 73, 75, 77, 78, 79, 81, 82, 83, 85, 87, 88, 91, 94, 95, 97, 99, 100], "distribut": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 18, 24, 25, 28, 31, 35, 39, 42, 44, 46, 49, 52, 53, 57, 58, 59, 60, 61, 64, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 83, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 99, 100], "mathbf": [0, 6, 30, 36, 37, 41, 53, 69, 75, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96], "solv": [0, 2, 21, 27, 42, 47, 48, 69, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 99], "problem": [0, 6, 7, 8, 10, 11, 21, 22, 27, 42, 45, 47, 48, 66, 69, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99], "mathop": [0, 75, 76, 77, 79, 80, 83, 84, 85, 87, 88, 92, 93, 94, 95, 96], "arg": [0, 74, 75, 76, 77, 79, 80, 83, 85, 87, 88, 92, 93, 94, 95, 96, 98], "min": [0, 30, 32, 36, 41, 43, 53, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 98], "_": [0, 25, 36, 40, 42, 47, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98], "quad": [0, 6, 75, 76, 77, 79, 80, 83, 85, 86, 87, 88, 92, 93, 94, 95, 96, 98], "sum_i": [0, 31, 74, 75, 85, 92, 93, 94, 95, 96, 98], "w_": [0, 36, 75, 83, 85, 94], "_i": [0, 41, 75, 79, 85, 90, 92, 93, 94, 95, 96], "where": [0, 4, 6, 7, 29, 36, 42, 47, 51, 53, 69, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 98, 99], "cdot": [0, 41, 69, 75, 77, 79, 84, 85, 86, 87, 88, 93, 94, 98], "distanc": [0, 3, 8, 9, 29, 30, 33, 35, 36, 37, 40, 53, 61, 63, 64, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 91, 92, 94, 95, 97, 99, 100], "see": [0, 2, 5, 8, 53, 72, 74, 75, 77, 78, 79, 81, 83, 84, 85, 86, 88, 90, 92, 93, 94, 98, 99], "sinkhorn_stabil": [0, 75, 77, 94, 98], "sinkhorn_log": [0, 75, 76, 77, 79, 98, 99], "train": [0, 20, 26, 43, 47, 75, 77, 78, 79, 82, 85, 94, 98, 99], "column": [0, 6, 30, 32, 37, 39, 52, 55, 75, 76, 85, 90, 92, 94, 100], "matrix": [0, 2, 6, 8, 10, 11, 13, 20, 24, 26, 29, 35, 36, 44, 45, 47, 49, 56, 57, 58, 60, 66, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "respect": [0, 6, 17, 33, 36, 53, 71, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 94, 97, 98, 99], "term": [0, 8, 42, 56, 60, 75, 76, 77, 79, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 98, 99], "cost": [0, 21, 27, 34, 40, 43, 44, 45, 47, 49, 50, 51, 54, 55, 56, 57, 65, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "algorithm": [0, 15, 32, 34, 35, 45, 50, 66, 72, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 92, 93, 94, 96, 97, 98, 99], "us": [0, 2, 3, 6, 7, 8, 10, 11, 20, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 51, 53, 54, 60, 65, 66, 67, 69, 71, 72, 74, 75, 80, 82, 83, 84, 91, 96, 99, 100], "knopp": [0, 73, 74, 75, 94, 97, 98, 99], "scale": [0, 30, 32, 35, 37, 41, 48, 51, 66, 75, 77, 84, 85, 86, 92, 93, 94, 95, 97, 98, 99], "propos": [0, 3, 6, 8, 10, 11, 13, 17, 33, 41, 43, 60, 62, 63, 66, 75, 77, 80, 81, 83, 85, 86, 88, 93, 94, 96, 98, 99], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 29, 31, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 67, 68, 69, 75, 77, 84, 85, 86, 87, 88, 90, 91, 94, 95, 97, 98], "paramet": [0, 2, 5, 6, 7, 8, 12, 19, 21, 22, 23, 29, 31, 32, 33, 34, 35, 36, 46, 50, 56, 59, 60, 65, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "arrai": [0, 2, 6, 7, 10, 11, 12, 13, 15, 16, 17, 22, 24, 29, 34, 35, 36, 41, 44, 48, 53, 56, 62, 66, 67, 68, 69, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99], "like": [0, 2, 53, 72, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 93, 94, 95, 96, 99], "shape": [0, 2, 3, 4, 7, 10, 11, 13, 14, 17, 20, 22, 24, 26, 27, 29, 30, 31, 32, 35, 36, 37, 43, 48, 53, 66, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "dim": [0, 4, 33, 35, 75, 84, 85, 91, 94, 95], "n_hist": [0, 75, 85, 94], "size": [0, 4, 6, 8, 15, 20, 26, 30, 32, 33, 36, 37, 40, 42, 53, 59, 71, 74, 75, 76, 77, 78, 79, 82, 83, 85, 90, 93, 95, 99], "loss": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 19, 25, 26, 31, 32, 33, 36, 44, 47, 56, 57, 60, 66, 67, 68, 69, 75, 77, 83, 85, 86, 87, 88, 92, 93, 94, 95, 97, 98, 99], "float": [0, 1, 5, 6, 7, 8, 12, 16, 29, 35, 45, 47, 53, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "str": [0, 32, 34, 36, 53, 67, 69, 75, 77, 78, 79, 83, 84, 85, 86, 92, 93, 94, 95], "option": [0, 53, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99], "solver": [0, 9, 11, 31, 34, 38, 39, 45, 48, 54, 61, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 99, 100], "either": [0, 25, 69, 75, 77, 79, 83, 85, 94], "each": [0, 6, 8, 29, 32, 33, 36, 53, 75, 76, 77, 81, 82, 83, 84, 85, 86, 92, 93, 94, 95, 97, 98, 99], "histogram": [0, 47, 75, 76, 78, 80, 84, 85, 88, 90, 92, 94, 95, 96, 97, 98, 99], "simplex": [0, 2, 6, 7, 36, 47, 75, 85, 92, 95, 97, 98], "barycentr": [0, 25, 42, 75, 77, 81, 85, 86, 94, 98], "coodin": [0, 75, 94], "int": [0, 2, 33, 35, 36, 41, 42, 49, 62, 63, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 98], "max": [0, 10, 11, 13, 30, 32, 34, 35, 36, 37, 41, 44, 49, 50, 53, 54, 55, 57, 58, 59, 60, 65, 66, 68, 69, 74, 75, 77, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "number": [0, 1, 5, 6, 8, 14, 15, 17, 19, 21, 22, 23, 29, 31, 32, 34, 35, 36, 49, 50, 53, 56, 60, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "iter": [0, 1, 2, 5, 6, 7, 10, 11, 15, 19, 21, 22, 23, 32, 34, 35, 40, 42, 43, 45, 47, 49, 53, 56, 60, 66, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 96, 97, 98, 99], "stop": [0, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 92, 94, 96], "threshold": [0, 29, 74, 75, 76, 77, 79, 80, 83, 84, 85, 86, 87, 88, 89, 92, 94, 96, 98], "error": [0, 7, 29, 32, 34, 36, 66, 72, 74, 75, 77, 79, 83, 84, 85, 86, 88, 92, 94, 97, 98, 99], "bool": [0, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96], "print": [0, 1, 2, 4, 5, 6, 8, 30, 32, 33, 34, 36, 37, 40, 45, 47, 51, 53, 67, 72, 75, 76, 77, 79, 80, 83, 85, 86, 87, 88, 92, 94, 96, 99], "inform": [0, 25, 26, 32, 33, 36, 40, 47, 50, 51, 71, 72, 75, 76, 77, 79, 80, 83, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98], "along": [0, 2, 6, 7, 74, 75, 77, 79, 80, 83, 85, 86, 87, 88, 90, 92, 94, 95, 96], "record": [0, 7, 72, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 92, 93, 94, 96], "rais": [0, 72, 74, 75, 84, 85, 88, 95, 99], "doesn": [0, 75, 84], "t": [0, 6, 7, 10, 11, 13, 16, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 47, 48, 53, 59, 63, 66, 68, 69, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "converg": [0, 2, 15, 19, 21, 22, 23, 32, 34, 35, 49, 53, 56, 60, 75, 77, 83, 84, 85, 87, 97, 98, 99], "return": [0, 2, 3, 4, 5, 6, 8, 16, 17, 20, 23, 24, 26, 29, 30, 32, 33, 34, 35, 37, 53, 59, 60, 68, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "dict": [0, 36, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96], "dictionari": [0, 2, 38, 39, 73, 75, 76, 77, 80, 81, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "onli": [0, 6, 14, 31, 42, 53, 74, 75, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99], "benam": [0, 10, 11, 75, 88, 94, 97, 98], "j": [0, 2, 10, 11, 12, 16, 17, 20, 22, 26, 30, 31, 32, 35, 36, 37, 40, 41, 47, 48, 53, 60, 68, 69, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 90, 92, 93, 94, 95, 97, 98], "d": [0, 10, 11, 14, 24, 29, 32, 34, 36, 39, 42, 52, 53, 60, 67, 75, 77, 78, 79, 80, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 100], "carlier": [0, 10, 11, 75, 81, 85, 88, 94, 97, 98], "g": [0, 4, 8, 10, 11, 20, 22, 26, 29, 30, 31, 32, 33, 36, 37, 42, 45, 49, 50, 51, 53, 54, 56, 60, 65, 66, 68, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97], "cuturi": [0, 8, 10, 11, 13, 32, 34, 42, 43, 49, 51, 73, 75, 77, 79, 81, 83, 84, 85, 86, 88, 92, 93, 94, 97, 98], "nenna": [0, 10, 11, 75, 88, 94, 97, 98], "l": [0, 8, 10, 11, 13, 31, 32, 34, 42, 63, 66, 68, 75, 76, 77, 79, 83, 85, 86, 88, 90, 91, 92, 94, 97, 98], "peyr\u00e9": [0, 8, 10, 11, 32, 34, 49, 51, 60, 66, 73, 75, 77, 81, 83, 84, 85, 87, 88, 93, 94, 97, 98], "2015": [0, 3, 10, 11, 60, 62, 75, 77, 87, 88, 91, 94, 97, 98], "project": [0, 2, 3, 4, 5, 6, 7, 10, 11, 15, 19, 21, 22, 23, 29, 30, 32, 34, 36, 37, 45, 47, 49, 50, 53, 56, 59, 60, 66, 67, 71, 72, 73, 75, 77, 79, 81, 83, 85, 86, 88, 91, 92, 94, 95, 97, 98, 99], "transport": [0, 3, 5, 10, 11, 26, 29, 30, 32, 33, 34, 37, 39, 42, 52, 60, 61, 66, 67, 70, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 99, 100], "siam": [0, 10, 11, 20, 26, 60, 75, 77, 81, 85, 87, 88, 94, 97, 98], "journal": [0, 3, 10, 11, 20, 26, 34, 60, 62, 75, 77, 81, 83, 85, 87, 88, 91, 94, 96, 97, 98, 99], "scientif": [0, 10, 11, 75, 88, 94, 97, 98, 99], "37": [0, 5, 10, 11, 13, 45, 60, 75, 85, 88, 94, 97, 98, 99], "2": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25, 26, 29, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100], "a1111": [0, 10, 11, 75, 88, 94, 97, 98], "a1138": [0, 10, 11, 75, 88, 94, 97, 98], "barycenter_unbalanc": [0, 66, 94, 98], "reg_m": [0, 69, 77, 88, 94, 98], "1000": [0, 5, 8, 14, 22, 24, 32, 43, 45, 47, 51, 59, 74, 75, 77, 79, 81, 83, 88, 94], "1e": [0, 2, 7, 8, 10, 11, 13, 15, 19, 20, 21, 22, 25, 26, 27, 31, 32, 35, 45, 47, 48, 49, 53, 54, 55, 56, 58, 60, 66, 68, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 99], "06": [0, 18, 25, 32, 38, 43, 51, 54, 60, 75, 76, 77, 79, 81, 85, 86, 88, 94, 100], "u_": [0, 91, 94], "sinkhorn_unbalanc": [0, 65, 69, 94, 98], "reg_mi": [0, 94], "margin": [0, 32, 34, 39, 52, 68, 73, 75, 76, 83, 85, 86, 88, 90, 94, 95, 97, 98, 99, 100], "relax": [0, 32, 38, 39, 42, 65, 73, 77, 83, 87, 90, 92, 94, 97, 98, 99, 100], "hyperparamet": [0, 94], "gener": [0, 3, 7, 11, 12, 13, 16, 18, 34, 35, 39, 40, 42, 48, 51, 53, 57, 59, 61, 67, 72, 73, 74, 75, 77, 78, 79, 80, 83, 85, 86, 87, 89, 91, 92, 93, 94, 95, 96, 97, 99, 100], "10": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 47, 49, 50, 54, 55, 59, 60, 62, 63, 65, 66, 67, 68, 69, 75, 77, 79, 83, 84, 85, 86, 87, 92, 94, 97, 98], "dimens": [0, 7, 35, 43, 74, 75, 79, 82, 83, 85, 88, 90, 91, 94, 99], "ground": [0, 39, 58, 61, 75, 77, 85, 89, 92, 93, 94, 97, 98, 100], "metric": [0, 21, 22, 34, 39, 45, 48, 53, 58, 61, 67, 75, 77, 83, 84, 85, 87, 88, 89, 90, 93, 94, 95, 97, 98, 99, 100], "entropi": [0, 50, 65, 74, 75, 79, 83, 84, 92, 94, 97, 98], "If": [0, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 94, 95, 96, 97, 98, 99], "uniform": [0, 4, 6, 36, 42, 44, 46, 50, 53, 56, 62, 63, 68, 69, 74, 75, 76, 77, 80, 82, 83, 85, 86, 91, 94, 95, 96, 98, 99], "chizat": [0, 66, 75, 77, 88, 94, 97, 98], "schmitzer": [0, 66, 75, 77, 88, 94, 97, 98], "b": [0, 6, 7, 11, 14, 22, 24, 27, 31, 34, 35, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "vialard": [0, 66, 75, 77, 88, 94, 97, 98], "f": [0, 3, 4, 10, 13, 20, 26, 30, 31, 33, 36, 37, 41, 42, 47, 51, 53, 60, 63, 66, 74, 75, 76, 77, 79, 82, 83, 85, 87, 88, 91, 93, 94, 95, 97, 98, 99], "x": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 49, 50, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "2016": [0, 11, 25, 26, 32, 34, 43, 51, 66, 75, 77, 79, 83, 85, 86, 88, 93, 94, 97, 98, 99], "arxiv": [0, 17, 57, 60, 66, 75, 77, 79, 85, 87, 92, 94, 95, 97, 98], "preprin": [0, 94], "1607": [0, 66, 75, 77, 94, 97, 98], "05816": [0, 66, 75, 77, 94, 97, 98], "binary_search_circl": [0, 85], "u_valu": [0, 85], "v_valu": [0, 85], "u_weight": [0, 85], "v_weight": [0, 85], "p": [0, 2, 4, 7, 22, 29, 30, 31, 32, 34, 35, 36, 37, 43, 48, 49, 53, 59, 63, 67, 68, 69, 74, 75, 76, 77, 78, 79, 80, 83, 85, 88, 91, 92, 95, 96, 97, 98, 99], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98], "lm": [0, 85], "tm": [0, 59, 85], "tp": [0, 59, 68, 85], "ep": [0, 8, 13, 35, 74, 77, 81, 85], "require_sort": [0, 85], "circl": [0, 39, 43, 53, 61, 73, 85, 95, 97, 100], "binari": [0, 36, 78, 85], "search": [0, 29, 30, 37, 53, 75, 83, 85, 87, 97, 98, 99], "44": [0, 60, 85, 88, 97, 99], "sampl": [0, 1, 6, 20, 26, 36, 39, 42, 43, 44, 46, 48, 51, 52, 53, 56, 59, 62, 63, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100], "need": [0, 42, 45, 53, 72, 74, 75, 79, 82, 85, 86, 89, 98, 99], "": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 19, 20, 21, 22, 23, 26, 27, 30, 31, 32, 34, 35, 36, 37, 39, 41, 45, 47, 49, 50, 53, 54, 55, 58, 59, 60, 64, 65, 66, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100], "cong": [0, 85], "thei": [0, 71, 82, 85, 98, 99], "mathbb": [0, 42, 75, 83, 85, 86, 91, 93, 95, 98], "r": [0, 3, 4, 7, 8, 10, 11, 13, 22, 25, 26, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 54, 55, 58, 59, 60, 63, 65, 66, 67, 68, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99], "take": [0, 59, 71, 83, 85, 86, 87, 90, 93, 94, 98, 99], "valu": [0, 7, 27, 29, 31, 45, 53, 58, 59, 66, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 94, 95, 98, 99], "modulo": [0, 85], "subset": [0, 33, 85, 86, 95], "requir": [0, 29, 42, 74, 77, 83, 85, 86, 95, 97, 98, 99], "first": [0, 2, 3, 30, 31, 33, 34, 36, 37, 42, 72, 74, 75, 76, 77, 83, 84, 85, 86, 90, 92, 95, 97, 98], "find": [0, 29, 35, 51, 74, 85, 86, 87, 97, 98, 99], "coordin": [0, 12, 31, 35, 74, 76, 79, 83, 85, 86, 93, 94, 95, 97, 98], "e": [0, 47, 71, 75, 82, 83, 85, 86, 91, 95, 97, 98], "atan2": [0, 74, 85, 95], "w_p": [0, 85, 91, 98], "u": [0, 1, 2, 3, 5, 6, 14, 41, 42, 47, 53, 63, 66, 72, 75, 79, 85, 86, 88, 91, 93, 94, 95, 97, 98, 99], "v": [0, 1, 5, 18, 28, 29, 30, 32, 37, 39, 41, 51, 52, 53, 63, 66, 74, 75, 77, 78, 85, 86, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100], "inf_": [0, 84, 85], "theta": [0, 1, 5, 8, 16, 25, 59, 75, 78, 85, 91], "int_0": [0, 85], "f_u": [0, 85], "q": [0, 31, 34, 36, 49, 66, 67, 74, 75, 76, 83, 84, 85, 88, 90, 95, 98], "f_v": [0, 85], "mathrm": [0, 4, 42, 59, 69, 75, 77, 79, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95], "cdf": [0, 85], "For": [0, 27, 32, 34, 36, 51, 53, 67, 72, 75, 76, 83, 85, 86, 87, 90, 93, 94, 95, 98, 99], "x_1": [0, 40, 42, 53, 85, 86, 95], "x_2": [0, 40, 42, 53, 85, 95], "get": [0, 2, 30, 32, 35, 36, 37, 75, 77, 79, 83, 85, 95, 97, 98, 99], "frac": [0, 4, 40, 47, 74, 75, 77, 79, 83, 85, 88, 90, 91, 92, 93, 95, 96, 98], "pi": [0, 1, 5, 8, 17, 24, 25, 29, 40, 41, 43, 47, 57, 59, 63, 79, 85, 86, 93, 95, 99], "get_coordinate_circl": [0, 85, 95], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 74, 85, 91, 97, 99], "backend": [0, 2, 3, 5, 6, 7, 9, 23, 32, 34, 47, 53, 73, 75, 77, 80, 83, 84, 85, 86, 87, 91, 93, 94, 95, 96, 97, 99, 100], "tensorflow": [0, 74, 85, 91, 97, 98, 99], "jax": [0, 74, 85, 91, 95, 97, 98, 99], "support": [0, 3, 5, 7, 18, 19, 39, 73, 75, 76, 80, 85, 91, 99, 100], "ndarrai": [0, 29, 35, 74, 75, 78, 79, 85, 87, 88, 89, 90, 91, 92, 93, 95], "n": [0, 2, 4, 6, 7, 8, 10, 11, 13, 14, 16, 17, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 49, 50, 51, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98], "domain": [0, 27, 28, 30, 32, 60, 75, 77, 78, 79, 81, 83, 84, 85, 86, 87, 89, 91, 92, 94, 95, 97, 99, 100], "target": [0, 1, 6, 7, 8, 24, 25, 28, 35, 39, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 68, 75, 76, 77, 78, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "default": [0, 42, 53, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 98, 99], "power": [0, 53, 74, 85, 91], "lower": [0, 14, 19, 23, 34, 42, 53, 77, 84, 85, 86], "bound": [0, 42, 77, 84, 85, 86, 97, 99], "dc": [0, 85], "upper": [0, 41, 42, 65, 77, 85, 86], "condit": [0, 31, 32, 34, 60, 73, 74, 77, 80, 83, 85, 86, 87, 96, 97, 98, 99], "sort": [0, 41, 72, 74, 85, 98], "also": [0, 2, 53, 72, 74, 75, 81, 82, 83, 85, 86, 95, 97, 98, 99], "associ": [0, 47, 77, 83, 85, 88, 91, 95], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 74, 75, 91, 99, 100], "np": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 74, 75, 77, 78, 85, 88, 90, 91, 92, 94, 95, 98, 99], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 70, 75, 77, 78, 82, 83, 84, 85, 87, 88, 90, 91, 94, 95, 97, 98], "8": [0, 2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 47, 48, 49, 51, 54, 56, 57, 60, 61, 62, 66, 67, 68, 69, 76, 77, 83, 85, 86, 93, 94, 95, 97, 98], "4": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 62, 65, 66, 67, 68, 69, 71, 75, 76, 77, 81, 83, 85, 86, 88, 90, 94, 95, 97, 98], "7": [0, 10, 12, 13, 17, 19, 20, 21, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 40, 43, 45, 47, 48, 51, 53, 56, 57, 58, 60, 66, 69, 76, 77, 84, 85, 87, 90, 92, 93, 95, 97, 98], "delon": [0, 17, 77, 81, 85, 97], "juli": [0, 8, 85, 97, 99], "julien": [0, 85, 97], "salomon": [0, 85, 97], "andrei": [0, 85, 97], "sobolevski": [0, 85, 97], "fast": [0, 54, 75, 83, 85, 97, 98, 99], "mong": [0, 24, 45, 85, 88, 97, 99], "appli": [0, 25, 71, 76, 77, 81, 85, 94, 95, 97], "mathemat": [0, 3, 62, 72, 75, 81, 83, 85, 88, 91, 97, 98, 99], "70": [0, 1, 4, 5, 8, 30, 31, 32, 37, 54, 60, 85, 97], "2010": [0, 85, 88, 97], "2239": [0, 85, 97], "2258": [0, 85, 97], "dist": [0, 6, 8, 21, 29, 31, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 65, 66, 68, 69, 79, 83, 85, 90, 95, 98, 99], "x1": [0, 2, 3, 14, 15, 20, 24, 26, 33, 40, 41, 48, 53, 59, 79, 95], "x2": [0, 3, 14, 15, 20, 24, 26, 33, 40, 48, 53, 59, 79, 95, 99], "sqeuclidean": [0, 21, 22, 53, 57, 58, 75, 77, 84, 85, 93, 95], "w": [0, 6, 7, 8, 16, 32, 35, 36, 42, 48, 53, 67, 69, 75, 76, 77, 79, 81, 82, 83, 85, 91, 92, 93, 94, 95, 97, 98, 99], "between": [0, 2, 3, 6, 15, 17, 20, 29, 30, 32, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 53, 61, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 94, 95, 96, 97, 99, 100], "thi": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 17, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 53, 54, 55, 59, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99], "compat": [0, 53, 74, 75, 79, 80, 82, 83, 85, 86, 92, 93, 95, 96, 99], "work": [0, 12, 53, 72, 74, 75, 80, 83, 84, 85, 87, 95, 96, 99], "from": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 20, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], "all": [0, 10, 11, 13, 27, 29, 32, 35, 36, 39, 48, 53, 66, 71, 72, 74, 75, 77, 80, 81, 83, 85, 90, 94, 95, 96, 97, 98, 99, 100], "n1": [0, 40, 47, 53, 95], "n2": [0, 30, 31, 32, 37, 40, 47, 53, 95], "callabl": [0, 53, 77, 79, 83, 87, 93, 95, 99], "euclidean": [0, 11, 29, 30, 32, 37, 48, 53, 57, 58, 77, 79, 84, 85, 86, 92, 95, 98, 99], "On": [0, 53, 77, 81, 85, 95, 97, 98, 99], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 74, 75, 77, 79, 83, 85, 86, 88, 90, 91, 94, 95, 97, 98, 99], "accept": [0, 53, 71, 72, 74, 77, 85, 86, 95, 99], "scipi": [0, 29, 34, 35, 53, 59, 67, 72, 74, 85, 88, 92, 94, 95, 97, 98, 99], "spatial": [0, 34, 35, 53, 67, 88, 95], "cdist": [0, 34, 35, 53, 67, 88, 95], "braycurti": [0, 53, 95], "canberra": [0, 53, 95], "chebyshev": [0, 53, 95], "cityblock": [0, 53, 57, 85, 95], "correl": [0, 53, 95], "cosin": [0, 53, 95], "dice": [0, 53, 95], "ham": [0, 53, 95, 99], "jaccard": [0, 53, 95], "kulczynski1": [0, 53, 95], "mahalanobi": [0, 53, 95], "match": [0, 34, 53, 77, 83, 95, 97, 98], "minkowski": [0, 45, 53, 85, 95], "rogerstanimoto": [0, 53, 95], "russellrao": [0, 53, 95], "seuclidean": [0, 53, 95], "sokalmichen": [0, 53, 95], "sokalsneath": [0, 53, 95], "wminkowski": [0, 53, 95], "yule": [0, 53, 95], "norm": [0, 15, 29, 32, 34, 41, 43, 53, 69, 74, 76, 77, 83, 85, 95, 99], "rank": [0, 39, 46, 52, 53, 73, 78, 80, 84, 89, 92, 95, 97, 99, 100], "given": [0, 2, 30, 32, 35, 36, 37, 42, 47, 53, 74, 75, 77, 79, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 99], "type": [0, 72, 74, 75, 77, 78, 81, 82, 83, 85, 87, 88, 90, 91, 92, 93, 95, 98, 99], "emd": [0, 19, 21, 23, 31, 44, 46, 48, 57, 73, 75, 76, 77, 85, 86, 87, 88, 91, 92, 94, 96, 97, 99], "100000": [0, 51, 77, 85, 87, 94], "center_du": [0, 85], "numthread": [0, 85, 99], "check_margin": [0, 85], "earth": [0, 77, 85, 97, 99], "mover": [0, 77, 85, 97, 99], "gamma": [0, 53, 68, 69, 75, 77, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96, 98], "langl": [0, 75, 77, 83, 84, 85, 86, 87, 88, 91, 93, 94], "rangle_f": [0, 75, 77, 83, 85, 86, 87, 88, 93, 94], "geq": [0, 69, 75, 77, 83, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98], "note": [0, 27, 45, 53, 74, 75, 77, 79, 82, 83, 85, 86, 88, 89, 92, 95, 97, 98, 99], "c": [0, 2, 7, 8, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 51, 53, 56, 57, 59, 63, 68, 69, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "order": [0, 6, 16, 21, 27, 29, 42, 53, 74, 77, 79, 82, 85, 86, 89, 95, 97, 98], "float64": [0, 3, 7, 10, 11, 13, 14, 17, 20, 24, 26, 32, 34, 35, 45, 50, 54, 55, 58, 60, 65, 66, 75, 85], "format": [0, 1, 2, 3, 4, 5, 8, 22, 40, 53, 68, 72, 74, 82, 85, 95, 97, 99], "It": [0, 2, 11, 19, 21, 22, 25, 26, 27, 31, 32, 34, 54, 60, 67, 72, 73, 83, 85, 93, 97, 98, 99], "convert": [0, 6, 20, 24, 26, 35, 74, 77, 85, 86, 95, 99], "But": [0, 80, 83, 85, 96, 98, 99], "cpu": [0, 2, 3, 7, 74, 80, 83, 85, 96, 97, 99], "which": [0, 2, 29, 42, 47, 53, 71, 74, 75, 76, 77, 80, 82, 83, 85, 86, 87, 89, 90, 95, 96, 97, 98, 99], "can": [0, 2, 6, 42, 45, 53, 69, 72, 75, 77, 79, 80, 83, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 98, 99], "lead": [0, 6, 53, 74, 75, 80, 83, 85, 87, 96, 98, 99], "copi": [0, 7, 10, 30, 32, 37, 66, 72, 74, 80, 83, 85, 96, 98], "overhead": [0, 75, 80, 83, 85, 96, 98], "gpu": [0, 73, 74, 75, 80, 83, 85, 96, 97, 99], "cast": [0, 83, 85, 98], "plan": [0, 2, 9, 30, 32, 37, 39, 46, 48, 49, 54, 55, 68, 69, 75, 76, 80, 81, 83, 84, 85, 88, 90, 92, 93, 94, 95, 98, 99, 100], "data": [0, 2, 3, 7, 13, 32, 34, 36, 42, 45, 53, 57, 72, 74, 75, 76, 77, 81, 83, 85, 86, 97, 98, 99], "provid": [0, 2, 36, 53, 72, 73, 74, 75, 77, 81, 83, 85, 87, 90, 94, 97, 98, 99], "input": [0, 13, 17, 66, 74, 75, 76, 77, 80, 83, 85, 86, 92, 94, 95, 96, 98, 99], "prioriti": [0, 85], "an": [0, 2, 7, 8, 20, 24, 26, 29, 35, 42, 45, 53, 55, 71, 72, 74, 75, 77, 80, 83, 85, 86, 87, 88, 90, 92, 93, 94, 95, 97, 99], "integ": [0, 29, 83, 85, 99], "tensor": [0, 2, 3, 6, 7, 33, 47, 74, 82, 83, 85, 87, 95, 98, 99], "might": [0, 15, 19, 21, 22, 23, 27, 32, 34, 49, 53, 56, 60, 74, 75, 83, 85, 98, 99], "result": [0, 2, 53, 71, 72, 74, 83, 85, 95, 98, 99], "precis": [0, 47, 74, 75, 77, 83, 85, 99], "behaviour": [0, 83, 85], "unwant": [0, 83, 85], "pleas": [0, 72, 74, 83, 85, 97], "make": [0, 30, 32, 37, 53, 57, 65, 66, 71, 72, 74, 78, 83, 85, 97, 98, 99], "sure": [0, 72, 83, 85, 97], "point": [0, 15, 17, 31, 32, 34, 35, 45, 48, 50, 51, 59, 72, 75, 77, 79, 81, 83, 85, 86, 88, 95, 97, 98, 99], "vector": [0, 6, 74, 75, 76, 77, 82, 84, 85, 90, 91, 94, 95, 97, 98, 99], "do": [0, 8, 21, 27, 34, 53, 67, 71, 72, 74, 75, 85, 95, 98, 99], "sum": [0, 2, 5, 6, 7, 11, 12, 13, 14, 30, 32, 33, 34, 36, 37, 43, 44, 49, 53, 56, 58, 60, 63, 65, 68, 69, 74, 75, 77, 79, 83, 84, 85, 87, 88, 90, 91, 92, 93, 95, 97, 98], "same": [0, 25, 30, 34, 37, 53, 67, 74, 76, 85, 94, 95, 98, 99], "empti": [0, 62, 63, 77, 80, 85, 95, 96, 99], "nt": [0, 6, 36, 75, 77, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 96], "maximum": [0, 4, 15, 29, 35, 53, 59, 74, 75, 77, 79, 83, 85, 87, 90, 92, 95], "befor": [0, 29, 72, 74, 77, 85, 99], "ha": [0, 2, 6, 8, 53, 73, 75, 77, 83, 85, 86, 88, 95, 97, 98, 99], "contain": [0, 10, 11, 13, 66, 76, 80, 83, 85, 86, 90, 95, 96, 97, 98, 99], "dual": [0, 8, 9, 11, 39, 45, 75, 76, 78, 80, 83, 85, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100], "variabl": [0, 36, 75, 77, 80, 83, 85, 86, 90, 92, 93, 96, 98, 99], "otherwis": [0, 71, 74, 83, 85, 95], "boolean": [0, 74, 75, 77, 81, 85, 95], "center": [0, 41, 53, 79, 85, 99], "potenti": [0, 5, 8, 32, 39, 52, 75, 77, 83, 85, 86, 92, 93, 94, 95, 97, 99, 100], "center_ot_du": [0, 85], "openmp": [0, 85, 99], "compil": [0, 85, 97, 98, 99], "choos": [0, 29, 59, 75, 79, 85, 98], "thread": [0, 85], "parallel": [0, 85, 95, 98, 99], "select": [0, 33, 50, 77, 81, 83, 85, 98], "highest": [0, 85], "possibl": [0, 72, 77, 85, 95, 98, 99], "check": [0, 72, 74, 75, 85, 95, 98, 99], "mass": [0, 2, 22, 30, 32, 53, 67, 69, 77, 83, 85, 88, 97, 98, 99], "equal": [0, 22, 42, 48, 57, 74, 85, 90], "skip": [0, 85], "exit": [0, 80, 85, 96, 99], "statu": [0, 80, 85, 95, 96, 99], "simpl": [0, 2, 6, 12, 35, 47, 53, 78, 85, 95, 98, 99], "obviou": [0, 85], "solut": [0, 45, 48, 53, 75, 77, 81, 85, 90, 95, 98, 99], "perform": [0, 2, 3, 7, 29, 42, 45, 50, 72, 77, 83, 85, 86, 95, 97, 98, 99], "convers": [0, 29, 85], "bonneel": [0, 3, 62, 73, 85, 91, 97, 98], "van": [0, 83, 85, 97, 98], "de": [0, 75, 85, 97, 98], "pann": [0, 85, 97, 98], "pari": [0, 14, 15, 33, 42, 49, 85, 97, 98], "heidrich": [0, 85, 97, 98], "2011": [0, 81, 83, 85, 97, 98], "decemb": [0, 74, 85, 97, 98, 99], "displac": [0, 58, 85, 95, 97, 98], "interpol": [0, 2, 7, 12, 16, 19, 21, 23, 27, 31, 35, 36, 42, 44, 49, 53, 56, 57, 75, 77, 83, 85, 86, 88, 97, 98, 99], "lagrangian": [0, 85, 88, 90, 97, 98], "In": [0, 2, 3, 6, 7, 8, 32, 34, 36, 40, 42, 47, 48, 49, 53, 71, 72, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 89, 91, 92, 97, 98, 99], "acm": [0, 75, 85, 97, 98], "transact": [0, 60, 75, 77, 85, 87, 97, 98], "graphic": [0, 75, 85, 97, 98, 99], "tog": [0, 75, 85, 97, 98], "vol": [0, 8, 60, 77, 81, 85, 87, 97, 98], "30": [0, 1, 3, 4, 5, 8, 11, 19, 20, 21, 23, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 41, 42, 43, 49, 50, 53, 54, 60, 77, 85, 97, 98, 100], "No": [0, 2, 36, 45, 72, 85, 97, 98], "6": [0, 2, 5, 7, 11, 13, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 30, 32, 33, 34, 36, 43, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 65, 66, 67, 68, 69, 76, 77, 83, 85, 86, 90, 93, 95, 97, 98], "158": [0, 60, 85, 97, 98], "cg": [0, 32, 34, 60, 75, 77, 80, 83, 85, 86, 92, 94, 96, 98, 99], "emd2": [0, 6, 8, 58, 73, 85, 94, 97, 99], "process": [0, 25, 26, 30, 32, 33, 37, 40, 47, 50, 51, 53, 75, 76, 77, 83, 85, 86, 92, 93, 94, 97, 98, 99], "return_matrix": [0, 85], "min_": [0, 4, 6, 7, 8, 47, 69, 75, 79, 83, 85, 86, 88, 90, 94, 98], "nb": [0, 7, 10, 11, 13, 20, 26, 30, 32, 34, 35, 37, 43, 44, 45, 46, 50, 54, 55, 56, 57, 58, 60, 62, 63, 65, 66, 67, 68, 69, 83, 85, 87, 89], "multipl": [0, 58, 75, 81, 83, 85, 92, 93, 94, 95, 99], "deprec": [0, 7, 10, 29, 66, 85, 95], "emd2_1d": [0, 85, 98], "x_a": [0, 85], "x_b": [0, 85], "dens": [0, 74, 83, 85, 95], "1d": [0, 9, 18, 31, 39, 45, 61, 70, 73, 78, 83, 85, 87, 89, 95, 97, 98, 99, 100], "measur": [0, 3, 7, 14, 17, 31, 42, 51, 62, 75, 76, 77, 79, 83, 85, 91, 93, 94, 95, 97, 98], "sum_j": [0, 31, 85, 92, 93, 96], "gamma_": [0, 53, 75, 77, 85, 87, 88, 93, 94, 96, 98], "ij": [0, 41, 85, 96], "when": [0, 2, 45, 59, 69, 71, 72, 75, 76, 79, 81, 83, 85, 88, 90, 95, 97, 99], "y": [0, 1, 4, 8, 10, 15, 17, 19, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 36, 41, 42, 43, 47, 49, 63, 66, 74, 75, 76, 77, 78, 79, 83, 85, 86, 88, 90, 91, 92, 95, 97, 98], "detail": [0, 71, 72, 74, 79, 81, 85, 98, 99], "dirac": [0, 14, 44, 56, 85], "locat": [0, 14, 17, 74, 75, 85], "real": [0, 85], "line": [0, 20, 24, 26, 35, 53, 75, 83, 85, 87, 89, 98, 99], "string": [0, 75, 76, 77, 81, 83, 85, 93, 94, 95], "implement": [0, 5, 53, 72, 73, 74, 75, 79, 85, 92, 95, 98, 99], "faster": [0, 85, 99], "math": [0, 29, 53, 85, 88, 92, 98], "spars": [0, 29, 39, 45, 53, 61, 74, 75, 78, 79, 83, 85, 89, 92, 94, 95, 97, 98, 99, 100], "represent": [0, 30, 32, 36, 37, 51, 63, 71, 77, 83, 85, 87, 91, 92, 93, 97, 98], "coo_matrix": [0, 74, 85], "set": [0, 8, 19, 21, 23, 28, 29, 33, 39, 42, 45, 53, 71, 74, 75, 77, 78, 82, 83, 85, 87, 90, 95, 97, 98, 100], "2017": [0, 8, 42, 75, 77, 81, 85, 86, 96, 97, 98, 99], "2018": [0, 8, 51, 77, 81, 85, 88, 92, 93, 97, 98, 99], "multidimension": [0, 35, 85], "emd_1d": [0, 54, 85, 98, 99], "instead": [0, 5, 8, 10, 36, 66, 74, 75, 76, 85, 86, 95, 97, 98, 99], "factored_optimal_transport": [0, 46, 80], "xa": [0, 80, 96], "xb": [0, 3, 15, 46, 80, 96], "100": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 23, 25, 29, 32, 34, 35, 36, 41, 43, 45, 46, 48, 49, 50, 53, 54, 55, 58, 59, 60, 65, 66, 67, 68, 74, 75, 76, 77, 79, 80, 83, 85, 86, 88, 91, 95, 99], "x0": [0, 4, 29, 80, 85, 91], "07": [0, 26, 28, 34, 43, 51, 52, 54, 60, 64, 67, 75, 76, 80, 81, 84, 85, 88, 100], "factor": [0, 39, 49, 52, 74, 84, 89, 95, 97, 98, 99, 100], "intermedi": [0, 5, 45, 80], "40": [0, 1, 4, 5, 8, 26, 28, 30, 32, 34, 36, 37, 53, 54, 60, 69, 80, 90, 97, 98, 100], "mu": [0, 3, 6, 7, 16, 25, 26, 29, 31, 42, 59, 67, 77, 79, 80, 81, 86, 91, 98], "w_2": [0, 59, 80, 85, 98], "mu_a": [0, 80], "mu_b": [0, 80, 81], "empir": [0, 2, 3, 28, 39, 46, 57, 61, 73, 75, 77, 78, 80, 81, 85, 89, 95, 96, 97, 98, 99, 100], "And": [0, 80, 81], "two": [0, 2, 3, 10, 20, 22, 31, 40, 47, 51, 53, 55, 58, 66, 72, 74, 75, 76, 77, 80, 81, 83, 85, 90, 94, 95, 96, 97, 98, 99], "gradient": [0, 2, 6, 7, 8, 9, 31, 32, 34, 39, 42, 43, 45, 47, 60, 73, 74, 75, 77, 79, 80, 83, 85, 86, 87, 88, 90, 92, 93, 96, 97, 98, 99, 100], "39": [0, 1, 45, 60, 80, 96, 97, 98], "rel": [0, 19, 31, 32, 34, 35, 60, 75, 77, 80, 83, 86, 87, 96], "variat": [0, 11, 58, 80, 83, 87, 96, 98], "ga": [0, 46, 80], "gb": [0, 46, 80], "forrow": [0, 80, 97, 98], "h\u00fctter": [0, 80, 97, 98], "nitzan": [0, 80, 97, 98], "rigollet": [0, 75, 80, 97, 98], "schiebing": [0, 80, 97, 98], "weed": [0, 75, 77, 80, 97, 98], "2019": [0, 3, 29, 31, 32, 34, 50, 75, 77, 80, 83, 85, 91, 97, 98, 99], "april": [0, 75, 80, 97, 98], "statist": [0, 8, 42, 75, 77, 80, 85, 86, 92, 97, 98], "via": [0, 2, 3, 36, 39, 52, 71, 75, 77, 78, 80, 83, 97, 98, 100], "coupl": [0, 25, 39, 52, 75, 76, 77, 80, 83, 84, 89, 97, 98, 99, 100], "22nd": [0, 75, 80, 97, 98], "intern": [0, 2, 3, 7, 8, 13, 29, 30, 31, 32, 34, 36, 37, 42, 49, 51, 63, 75, 77, 80, 83, 84, 85, 86, 87, 88, 91, 92, 93, 97, 98], "confer": [0, 2, 3, 8, 13, 29, 30, 31, 32, 34, 36, 37, 42, 49, 51, 63, 75, 77, 80, 83, 84, 85, 86, 87, 88, 91, 92, 93, 97, 98], "artifici": [0, 8, 42, 75, 77, 80, 86, 92, 97, 98], "intellig": [0, 8, 42, 60, 75, 77, 80, 86, 87, 92, 97, 98], "pp": [0, 3, 8, 34, 60, 75, 77, 80, 81, 87, 91, 97, 98], "2454": [0, 80, 97, 98], "2465": [0, 80, 97, 98], "pmlr": [0, 3, 8, 13, 42, 75, 77, 80, 86, 97, 98], "fused_gromov_wasserstein": [0, 30, 31, 32, 37, 83, 98, 99], "c1": [0, 2, 16, 30, 31, 32, 34, 37, 67, 68, 69, 83, 87, 88, 98], "c2": [0, 2, 16, 30, 31, 32, 34, 37, 67, 68, 69, 83, 88, 98], "loss_fun": [0, 31, 83], "square_loss": [0, 31, 32, 34, 35, 83], "symmetr": [0, 30, 37, 74, 83, 98, 99], "alpha": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 17, 19, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 36, 37, 41, 42, 46, 48, 51, 53, 58, 59, 62, 63, 65, 66, 68, 69, 75, 76, 77, 82, 83, 84, 85, 87, 89, 92, 93, 99], "armijo": [0, 83, 87, 99], "g0": [0, 30, 37, 44, 46, 54, 56, 60, 83, 87, 88, 94, 96, 99], "max_it": [0, 19, 22, 25, 26, 34, 35, 49, 77, 83, 92, 99], "tol_rel": [0, 32, 83], "09": [0, 34, 51, 54, 60, 75, 77, 83, 87, 92], "tol_ab": [0, 83], "fuse": [0, 38, 73, 82, 83, 97, 98, 99, 100], "c_1": [0, 31, 83, 86, 87, 88], "y_1": [0, 83], "c_2": [0, 30, 31, 37, 83, 86, 88], "y_2": [0, 83], "pairwis": [0, 30, 32, 37, 77, 83], "node": [0, 2, 29, 32, 33, 34, 82, 83, 97], "featur": [0, 29, 32, 33, 47, 72, 75, 76, 82, 83, 97], "matric": [0, 7, 32, 34, 35, 40, 47, 53, 60, 74, 75, 76, 77, 79, 82, 83, 85, 87, 88, 89, 95, 96, 97, 98, 99], "24": [0, 31, 32, 34, 43, 60, 76, 83, 97, 98, 99], "sum_": [0, 4, 6, 53, 75, 76, 77, 79, 81, 83, 85, 86, 87, 88, 91, 93, 94, 98], "k": [0, 2, 6, 8, 13, 14, 15, 22, 29, 30, 31, 32, 36, 37, 41, 42, 43, 45, 48, 53, 55, 59, 74, 75, 76, 77, 79, 81, 82, 83, 85, 86, 88, 90, 98], "across": [0, 30, 32, 83, 93], "space": [0, 17, 33, 34, 35, 42, 67, 71, 74, 75, 76, 77, 81, 83, 85, 88, 91, 97, 98, 99], "account": [0, 59, 71, 72, 83, 86, 99], "misfit": [0, 83], "similar": [0, 8, 27, 53, 77, 83, 90, 98], "trade": [0, 36, 82, 83], "off": [0, 2, 4, 12, 13, 16, 20, 22, 24, 26, 30, 32, 33, 36, 37, 48, 49, 60, 72, 82, 83], "conjug": [0, 83, 92], "done": [0, 6, 47, 48, 53, 83, 95, 98, 99], "limit": [0, 74, 83, 99], "memori": [0, 74, 75, 83, 85, 93, 95, 97, 98, 99], "repres": [0, 21, 27, 29, 42, 71, 75, 83, 85, 98], "structur": [0, 29, 32, 34, 36, 74, 82, 83, 97, 98, 99], "let": [0, 83, 85, 87], "its": [0, 1, 2, 5, 25, 30, 32, 36, 37, 42, 53, 59, 71, 74, 75, 77, 82, 83, 86, 87, 88, 91, 95, 97, 98, 99], "taken": [0, 36, 83, 95, 98], "assum": [0, 81, 83, 99], "symmetri": [0, 83], "test": [0, 29, 33, 43, 72, 74, 83, 87, 95, 97, 99], "conduct": [0, 83, 87], "els": [0, 2, 3, 7, 12, 17, 22, 29, 30, 32, 36, 37, 41, 45, 59, 77, 79, 81, 82, 83, 94], "resp": [0, 83, 87], "asymmetr": [0, 83], "step": [0, 1, 2, 3, 5, 6, 7, 8, 29, 33, 47, 72, 74, 75, 83, 85, 87], "found": [0, 29, 45, 72, 77, 83, 86, 98], "research": [0, 73, 83, 97, 98, 99], "close": [0, 29, 53, 77, 81, 83, 85, 95, 98], "form": [0, 6, 8, 53, 77, 81, 83, 85, 90, 95, 98, 99], "issu": [0, 71, 72, 75, 83, 95, 97, 98], "initi": [0, 14, 73, 75, 76, 79, 82, 83, 84, 85, 87, 88, 94, 96, 98, 99], "pq": [0, 83], "must": [0, 83, 92, 94, 95], "satisfi": [0, 83, 87], "constraint": [0, 32, 34, 45, 75, 83, 84, 85, 86, 87, 92, 95, 98, 99], "absolut": [0, 19, 31, 32, 34, 60, 74, 76, 83, 87, 96], "directli": [0, 53, 83, 88, 98], "pass": [0, 72, 83, 85, 88, 92, 93, 95], "vayer": [0, 2, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 47, 73, 76, 79, 82, 83, 87, 97, 98], "titouan": [0, 29, 30, 31, 32, 34, 37, 73, 82, 83, 87, 97], "chapel": [0, 29, 31, 32, 34, 67, 68, 69, 73, 83, 88, 90, 94, 97, 98], "laetitia": [0, 29, 31, 32, 34, 67, 69, 73, 83, 97], "flamari": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 16, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 43, 44, 46, 47, 48, 51, 53, 54, 55, 56, 57, 58, 60, 68, 73, 75, 76, 77, 79, 82, 83, 86, 87, 90, 93, 94, 97, 98], "r\u00e9mi": [0, 2, 3, 7, 14, 16, 29, 30, 31, 32, 33, 34, 37, 73, 75, 77, 82, 83, 87, 97, 98], "tavenard": [0, 29, 31, 32, 34, 73, 83, 97, 98], "romain": [0, 29, 31, 32, 34, 73, 83, 97], "courti": [0, 2, 7, 8, 12, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 47, 51, 53, 60, 63, 73, 75, 76, 77, 79, 82, 83, 85, 86, 87, 91, 93, 97, 98], "nicola": [0, 3, 7, 12, 29, 30, 31, 32, 34, 35, 37, 53, 62, 73, 75, 77, 82, 83, 87, 91, 97, 98], "applic": [0, 27, 29, 30, 31, 32, 34, 37, 60, 75, 77, 81, 83, 85, 87, 88, 96, 97], "graph": [0, 31, 34, 38, 39, 53, 73, 74, 82, 83, 87, 97, 98, 99, 100], "machin": [0, 2, 3, 8, 13, 29, 31, 32, 34, 36, 49, 60, 75, 77, 83, 84, 85, 87, 88, 97, 98, 99], "learn": [0, 2, 3, 6, 8, 13, 25, 29, 30, 31, 32, 34, 37, 38, 39, 49, 51, 52, 63, 72, 73, 75, 76, 77, 82, 83, 84, 85, 87, 88, 91, 92, 93, 94, 95, 97, 98, 99, 100], "icml": [0, 2, 29, 31, 32, 34, 36, 79, 83, 88, 95, 97, 98], "47": [0, 40, 47, 60, 76, 83, 97, 99], "chowdhuri": [0, 83, 97], "m\u00e9moli": [0, 83, 97, 98], "network": [0, 8, 33, 82, 83, 97, 98, 99], "stabl": [0, 5, 74, 83, 97, 98, 99], "invari": [0, 83, 97], "infer": [0, 74, 83, 97], "ima": [0, 83, 97], "757": [0, 83, 97], "787": [0, 83, 97], "fused_gromov_wasserstein2": [0, 83, 99], "fgw": [0, 30, 32, 37, 38, 39, 73, 82, 83, 97, 99, 100], "differenti": [0, 6, 7, 47, 83, 97, 98, 99], "wrt": [0, 2, 74, 77, 83, 95], "quadrat": [0, 9, 39, 69, 77, 78, 83, 87, 88, 89, 93, 94, 95, 97, 99, 100], "38": [0, 1, 2, 36, 60, 83, 97, 98], "vincent": [0, 2, 30, 32, 33, 34, 36, 37, 73, 82, 83, 87, 97, 98], "cuaz": [0, 2, 30, 32, 33, 34, 36, 37, 73, 82, 83, 87, 97, 98], "corn": [0, 2, 30, 33, 36, 37, 82, 83, 87, 97, 98], "onlin": [0, 2, 36, 53, 71, 83, 97, 98, 99], "2021": [0, 2, 17, 30, 34, 36, 37, 49, 68, 74, 77, 79, 83, 84, 85, 87, 90, 94, 97, 98, 99], "gromov_barycent": [0, 35, 83, 98, 99], "lambda": [0, 29, 83, 88, 90, 98], "tol": [0, 22, 32, 35, 49, 77, 83, 88, 92], "stop_criterion": [0, 83, 99], "warmstartt": [0, 83], "init_c": [0, 83, 99], "random_st": [0, 2, 33, 35, 36, 41, 78, 79, 83, 93], "leq": [0, 83, 85, 87, 88, 98], "block": [0, 2, 27, 33, 72, 75, 76, 79, 83, 86, 97, 98], "descent": [0, 2, 6, 7, 32, 45, 47, 76, 79, 83, 84, 85, 86, 87, 97, 98], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 74, 75, 77, 83, 85, 86, 93, 95, 97, 98, 99], "lambda_": [0, 83, 98], "gw": [0, 24, 30, 37, 83, 87, 88, 97, 99], "base": [0, 30, 32, 34, 37, 38, 39, 72, 73, 75, 77, 82, 83, 92, 95, 97, 98, 99, 100], "specif": [0, 35, 71, 72, 74, 75, 77, 83, 94, 98, 99], "criterion": [0, 33, 83, 84, 98], "estim": [0, 9, 22, 28, 31, 32, 34, 39, 42, 45, 51, 72, 73, 75, 77, 78, 81, 83, 85, 86, 87, 93, 95, 97, 99, 100], "warmstart": [0, 32, 75, 76, 83, 94, 99], "success": [0, 83], "random": [0, 2, 3, 5, 6, 8, 14, 15, 20, 22, 24, 26, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 49, 51, 59, 63, 67, 68, 69, 74, 77, 78, 79, 82, 83, 84, 91, 93, 95, 99], "user": [0, 60, 72, 74, 83, 97, 98, 99], "randomst": [0, 2, 6, 20, 24, 26, 35, 41, 42, 51, 77, 78, 79, 83, 91, 93, 95], "instanc": [0, 5, 71, 74, 78, 79, 83, 87, 93, 95, 98, 99], "fix": [0, 36, 47, 72, 75, 79, 81, 82, 83, 85, 88, 92, 97, 99], "seed": [0, 3, 5, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 45, 46, 47, 68, 69, 74, 77, 78, 83, 91, 95], "reproduc": [0, 11, 72, 83, 93, 98], "permut": [0, 2, 3, 7, 83], "arbitrarili": [0, 83], "kei": [0, 76, 83], "evalu": [0, 74, 75, 76, 83, 84, 85, 99], "12": [0, 1, 5, 9, 13, 14, 19, 26, 32, 34, 36, 43, 47, 52, 60, 77, 83, 85, 88, 97, 98, 99, 100], "gabriel": [0, 8, 32, 34, 73, 83, 88, 97, 98], "marco": [0, 8, 30, 32, 34, 37, 42, 73, 75, 77, 82, 83, 85, 86, 87, 88, 97, 98], "justin": [0, 32, 34, 83, 88, 97, 98], "solomon": [0, 32, 34, 75, 83, 88, 97, 98], "averag": [0, 32, 34, 74, 77, 79, 83, 88, 93, 97, 98], "kernel": [0, 25, 32, 77, 83, 86, 88, 95, 97, 98], "gromov_wasserstein": [0, 2, 30, 31, 34, 37, 83, 98, 99], "_1": [0, 41, 75, 77, 83, 85, 88, 98], "kl_loss": [0, 83, 99], "minim": [0, 2, 3, 4, 6, 7, 29, 30, 32, 36, 37, 47, 79, 83, 85, 87, 92, 94, 95, 98, 99], "13": [0, 13, 19, 26, 31, 32, 43, 53, 58, 60, 61, 83, 88, 97, 98, 99], "facundo": [0, 83, 97, 98], "approach": [0, 11, 19, 21, 23, 27, 45, 75, 77, 83, 85, 97, 98], "object": [0, 1, 2, 3, 4, 5, 8, 35, 45, 54, 55, 58, 59, 74, 75, 76, 77, 83, 85, 92, 94, 95, 97, 98, 99], "foundat": [0, 83, 88, 97, 98, 99], "11": [0, 5, 10, 19, 26, 32, 34, 36, 38, 43, 52, 60, 66, 68, 79, 83, 96, 97, 98, 100], "417": [0, 83, 97, 98, 99], "487": [0, 83, 97, 98], "gromov_wasserstein2": [0, 2, 83, 98, 99], "To": [0, 8, 74, 75, 83, 88, 95, 97, 98], "recov": [0, 2, 8, 83, 93, 94, 98, 99], "defin": [0, 5, 8, 35, 40, 51, 53, 71, 74, 75, 77, 83, 85, 86, 90, 92, 95, 98, 99], "d_": [0, 83], "sqrt": [0, 4, 16, 36, 43, 49, 63, 74, 81, 83, 88, 91], "gw_dist": [0, 30, 34, 37, 83], "lowrank_sinkhorn": [0, 49, 84], "x_": [0, 47, 75, 77, 84, 85, 86, 91], "x_t": [0, 75, 77, 84, 86, 91, 95], "rescale_cost": [0, 49, 84], "init": [0, 35, 45, 49, 83, 84, 99], "reg_init": [0, 84], "seed_init": [0, 84], "49": [0, 40, 47, 60, 76, 84, 97, 99], "gamma_init": [0, 49, 84], "rescal": [0, 49, 84], "2000": [0, 3, 4, 7, 8, 17, 45, 49, 68, 84], "under": [0, 72, 75, 76, 77, 84, 97], "low": [0, 36, 39, 42, 46, 52, 53, 73, 78, 80, 84, 89, 95, 97, 99, 100], "nonneg": [0, 83, 84], "mathcal": [0, 16, 40, 42, 77, 78, 81, 82, 83, 84, 86, 91, 95, 98], "diag": [0, 53, 74, 75, 84, 95, 98], "top": [0, 13, 41, 72, 83, 84, 89], "rangl": [0, 75, 84, 86, 91], "h": [0, 6, 13, 16, 29, 32, 34, 68, 75, 78, 79, 82, 83, 84, 86, 90, 94, 95, 97, 98], "dim_a": [0, 75, 84, 88, 90, 94], "dim_b": [0, 75, 84, 88, 90, 94], "three": [0, 84, 94], "decomposit": [0, 35, 84], "both": [0, 2, 7, 25, 53, 68, 71, 75, 76, 84, 85, 86, 90, 94, 98, 99], "n_samples_a": [0, 75, 84, 91], "n_samples_b": [0, 75, 84, 91], "consid": [0, 7, 27, 29, 36, 40, 42, 71, 72, 75, 84, 85, 88, 95, 98], "strategi": [0, 83, 84], "determinist": [0, 84], "kmean": [0, 84], "state": [0, 84, 85, 99], "theori": [0, 77, 81, 84, 97, 98], "constant": [0, 77, 83, 84, 85, 86], "mirror": [0, 83, 84], "scheme": [0, 76, 84], "dykstra": [0, 49, 84], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 74, 76, 83, 84, 85, 87, 92, 95, 97, 98, 99], "lazy_plan": [0, 49, 84, 95], "value_linear": [0, 84, 95, 99], "65": [0, 45, 49, 60, 67, 84, 97], "scetbon": [0, 49, 84, 97], "max_sliced_wasserstein_dist": [0, 91], "n_project": [0, 3, 4, 62, 63, 91], "50": [0, 1, 3, 4, 5, 6, 8, 11, 15, 17, 22, 32, 33, 34, 36, 41, 42, 44, 45, 49, 54, 56, 60, 68, 75, 85, 88, 91, 92, 97, 99], "mont": [0, 91], "carlo": [0, 91], "approxim": [0, 8, 11, 25, 42, 75, 76, 83, 85, 86, 87, 91, 97, 98], "slice": [0, 9, 64, 73, 78, 85, 95, 97, 98, 99, 100], "swd": [0, 62, 91], "_p": [0, 91, 98], "nu": [0, 3, 4, 7, 31, 42, 77, 79, 85, 86, 91], "underset": [0, 85, 91], "_in": [0, 91], "theta_": [0, 91], "stand": [0, 91], "pushforward": [0, 91], "ni": [0, 91], "mapsto": [0, 83, 91], "case": [0, 27, 53, 68, 72, 74, 76, 85, 90, 91, 92, 94, 97, 99], "sliced_wasserstein_dist": [0, 3, 62, 91, 99], "20": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 19, 25, 26, 29, 30, 31, 32, 33, 34, 37, 40, 41, 43, 45, 47, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 75, 83, 85, 91, 97, 98, 99, 100], "normal": [0, 4, 10, 11, 13, 14, 29, 30, 32, 37, 58, 66, 74, 77, 79, 82, 91, 95, 99], "35": [0, 1, 4, 5, 9, 22, 33, 43, 49, 60, 91, 97, 98, 99, 100], "deshpand": [0, 91, 97, 98], "hu": [0, 91, 97, 98], "sun": [0, 91, 97, 98], "pyrro": [0, 91, 97, 98], "siddiqui": [0, 91, 97, 98], "koyejo": [0, 91, 97, 98], "schwing": [0, 91, 97, 98], "gan": [0, 9, 39, 91, 97, 98, 99, 100], "proceed": [0, 13, 75, 91, 92, 97, 98], "ieee": [0, 60, 77, 87, 91, 97, 98], "cvf": [0, 91, 97, 98], "vision": [0, 3, 62, 91, 97, 98], "pattern": [0, 60, 77, 87, 91, 97, 98], "recognit": [0, 91, 97, 98], "10648": [0, 91, 97, 98], "10656": [0, 91, 97, 98], "semidiscrete_wasserstein2_unif_circl": [0, 59, 85], "mu_n": [0, 4, 8, 85, 91], "alpha_i": [0, 85, 91], "x_i": [0, 4, 31, 85, 86, 91, 98], "left": [0, 6, 13, 19, 23, 41, 47, 74, 75, 77, 81, 83, 85, 89, 91, 92, 93, 95, 96], "right": [0, 6, 13, 14, 30, 32, 37, 42, 47, 53, 65, 71, 72, 75, 77, 81, 83, 85, 91, 92, 93, 95, 96, 99], "alpha_k": [0, 85], "unif": [0, 2, 4, 6, 14, 15, 17, 31, 34, 35, 36, 44, 45, 46, 47, 51, 57, 59, 67, 85, 91, 93, 95], "delta_": [0, 4, 31, 85, 91, 92, 98], "02111111": [0, 85], "46": [0, 60, 63, 85, 91, 97, 99], "bonet": [0, 4, 59, 63, 73, 85, 91, 97], "berg": [0, 63, 85, 91, 97], "septier": [0, 63, 85, 91, 97], "drumetz": [0, 63, 85, 91, 97], "pham": [0, 63, 85, 91, 97], "2023": [0, 32, 41, 63, 79, 83, 85, 91, 92, 97, 99], "spheric": [0, 9, 39, 64, 73, 85, 91, 97, 100], "omega": [0, 69, 75, 87, 88, 92, 93, 94, 98], "By": [0, 75, 79, 83, 90, 94, 98], "too": [0, 75, 79, 98], "small": [0, 2, 7, 53, 72, 75, 77, 79, 83, 85, 97, 98, 99], "should": [0, 27, 47, 69, 72, 74, 75, 77, 79, 83, 85, 90, 92, 94, 95, 97, 98, 99], "enough": [0, 29, 75, 79, 98], "you": [0, 15, 19, 21, 22, 23, 29, 32, 34, 49, 53, 56, 60, 72, 74, 75, 79, 82, 86, 89, 97, 98, 99], "sharper": [0, 75, 98], "avoid": [0, 72, 74, 75, 77, 79, 88, 98, 99], "numer": [0, 34, 53, 66, 74, 75, 77, 79, 88, 95, 97, 98, 99], "last": [0, 33, 53, 75, 76, 90, 98, 99], "veri": [0, 27, 53, 75, 83, 95, 97, 98, 99], "slow": [0, 75, 79, 98, 99], "practic": [0, 8, 72, 75, 77, 79, 86, 98], "even": [0, 10, 11, 66, 67, 74, 75, 98, 99], "reason": [0, 71, 75, 98, 99], "finit": [0, 74, 75, 85, 95, 98], "why": [0, 72, 75, 99], "sinkhorn_epsilon_sc": [0, 75, 77, 98], "reli": [0, 75, 83, 97, 98], "warm": [0, 75, 98, 99], "start": [0, 36, 45, 53, 72, 74, 75, 79, 90, 95, 97, 99], "sometim": [0, 75, 98], "better": [0, 8, 50, 75, 92, 98, 99], "greedi": [0, 75, 97, 98, 99], "version": [0, 59, 71, 72, 74, 75, 87, 90, 97, 98, 99], "greenkhorn": [0, 73, 75, 98, 99], "speedup": [0, 75, 98, 99], "screen": [0, 39, 52, 75, 78, 89, 97, 98, 100], "screenkhorn": [0, 39, 52, 73, 75, 78, 89, 98, 99, 100], "aim": [0, 4, 8, 69, 75, 77, 95, 98], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 27, 29, 30, 31, 32, 33, 34, 36, 37, 40, 42, 47, 48, 53, 59, 67, 68, 71, 72, 73, 74, 75, 77, 83, 85, 88, 90, 98, 99], "strongli": [0, 39, 52, 72, 75, 77, 83, 86, 97, 98, 99, 100], "recommend": [0, 72, 75, 83, 98, 99], "those": [0, 12, 53, 75, 77, 83, 85, 94, 95, 98], "tupl": [0, 75, 76, 85, 87, 94, 95], "logarithm": [0, 74, 75, 94], "36552929": [0, 75, 98], "13447071": [0, 75, 98], "lightspe": [0, 75, 77, 92, 94, 97, 98], "advanc": [0, 33, 40, 47, 50, 51, 71, 75, 76, 77, 92, 93, 94, 97, 98], "neural": [0, 8, 25, 26, 32, 33, 40, 47, 50, 51, 75, 76, 77, 82, 83, 86, 92, 93, 94, 97, 98, 99], "system": [0, 25, 26, 32, 33, 40, 47, 50, 51, 72, 74, 75, 77, 83, 86, 92, 93, 94, 97, 98], "nip": [0, 25, 26, 75, 77, 86, 92, 94, 97, 98], "26": [0, 36, 38, 43, 49, 50, 60, 75, 77, 92, 94, 97, 98, 99, 100], "2013": [0, 75, 77, 92, 94, 95, 97, 98], "9": [0, 2, 4, 8, 11, 17, 19, 22, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 46, 47, 48, 51, 54, 60, 67, 75, 77, 90, 92, 94, 97, 98], "stabil": [0, 75, 85, 94, 97, 98, 99], "preprint": [0, 17, 60, 66, 75, 77, 79, 85, 87, 94, 97, 98], "1610": [0, 75, 94, 97, 98], "06519": [0, 75, 94, 97, 98], "34": [0, 5, 43, 60, 68, 70, 75, 94, 97, 98, 100], "feydi": [0, 75, 97, 98], "s\u00e9journ\u00e9": [0, 75, 97, 98], "amari": [0, 75, 97, 98], "trouv\u00e9": [0, 75, 97, 98], "mmd": [0, 75, 97, 98], "diverg": [0, 8, 58, 69, 74, 75, 83, 87, 94, 97, 98, 99], "2681": [0, 75, 97, 98], "2690": [0, 75, 97, 98], "unregular": [0, 75, 77, 86, 87, 90, 92, 94], "sinkhorn_knopp": [0, 75, 94, 98], "classic": [0, 45, 75, 86, 94, 98, 99], "epsilon": [0, 13, 30, 32, 34, 50, 65, 74, 75, 76, 83, 94, 98, 99], "sinkhorn2": [0, 58, 75, 97, 99], "without": [0, 45, 71, 72, 74, 75, 83, 90, 97, 99], "contribut": [0, 71, 75, 98, 99], "26894142136999516": [0, 75], "21": [0, 43, 60, 75, 97, 98], "altschul": [0, 75, 97, 98], "Near": [0, 75, 97, 98], "linear": [0, 1, 5, 8, 25, 26, 28, 33, 38, 39, 68, 73, 74, 75, 76, 77, 79, 81, 83, 85, 86, 87, 90, 94, 95, 97, 98, 99, 100], "31": [0, 1, 3, 5, 43, 53, 60, 62, 75, 81, 91, 97, 98, 99], "sinkhorn_lpl1_mm": [0, 77, 98], "labels_a": [0, 77], "eta": [0, 7, 25, 26, 77, 85, 86], "numinneritermax": [0, 15, 75, 77, 86, 87], "200": [0, 1, 4, 5, 8, 14, 15, 32, 45, 54, 59, 60, 62, 63, 77, 83, 87, 88, 99], "stopinnerthr": [0, 77, 86], "non": [0, 42, 55, 66, 68, 72, 73, 74, 75, 77, 85, 87, 90, 92, 94, 95, 97, 98, 99], "convex": [0, 36, 39, 52, 57, 77, 85, 86, 87, 92, 97, 98, 100], "group": [0, 19, 21, 77, 97, 99], "lasso": [0, 19, 21, 77, 90, 97, 99], "omega_": [0, 77, 98], "omega_g": [0, 77], "_c": [0, 77], "index": [0, 2, 76, 77, 90, 93, 94, 95, 97], "class": [0, 2, 5, 8, 22, 27, 33, 41, 42, 73, 75, 78, 79, 82, 86, 99], "label": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 19, 21, 22, 23, 25, 27, 29, 33, 34, 36, 41, 42, 43, 44, 45, 46, 50, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 75, 77, 78, 79, 95, 98, 99], "inner": [0, 75, 77, 83, 86], "tuia": [0, 60, 75, 77, 87, 97, 98], "rakotomamonji": [0, 43, 50, 60, 73, 75, 77, 79, 87, 97, 98], "adapt": [0, 27, 28, 42, 60, 71, 75, 77, 78, 83, 85, 87, 89, 95, 97, 99, 100], "analysi": [0, 39, 52, 60, 72, 75, 77, 79, 81, 85, 87, 96, 97, 99, 100], "99": [0, 2, 60, 77, 87, 97, 98, 99], "1510": [0, 60, 77, 87, 97, 98], "06567": [0, 60, 77, 87, 97, 98], "reg_typ": [0, 55, 77, 92, 94, 98], "reg_": [0, 19, 20, 21, 22, 23, 26, 27, 77, 94], "m1": [0, 16, 57, 84, 94], "kl": [0, 55, 65, 74, 75, 76, 83, 92, 94, 97, 98, 99], "m2": [0, 6, 16, 57, 58, 84, 94], "neg": [0, 1, 5, 68, 74, 75, 83, 85, 90, 92, 94, 97], "kullback": [0, 32, 34, 65, 69, 74, 83, 92, 94, 98], "leibler": [0, 32, 34, 65, 69, 74, 83, 92, 94, 98], "25": [0, 5, 8, 11, 29, 31, 33, 43, 49, 59, 60, 63, 88, 90, 94, 97, 98, 99], "unnorm": [0, 88, 94], "One": [0, 86, 94, 97, 98, 99], "mani": [0, 94, 99], "length": [0, 74, 76, 85, 90, 93, 94, 95], "scalar": [0, 29, 74, 75, 76, 94, 95], "balanc": [0, 94, 95, 98], "inf": [0, 29, 77, 94], "semi": [0, 28, 38, 39, 73, 77, 78, 83, 87, 90, 92, 93, 94, 95, 97, 98, 99, 100], "have": [0, 8, 27, 36, 53, 71, 72, 74, 83, 85, 94, 95, 98, 99], "sinkhorn_reg_sc": [0, 94], "text": [0, 1, 4, 5, 6, 8, 14, 16, 20, 22, 24, 25, 44, 46, 47, 53, 56, 60, 62, 63, 65, 72, 75, 77, 81, 83, 85, 86, 90, 94, 95, 98], "ot_dist": [0, 94], "51122814": [0, 94], "18807032": [0, 94], "frogner": [0, 94, 97, 98], "zhang": [0, 94, 97, 98], "mobahi": [0, 94, 97, 98], "araya": [0, 94, 97, 98], "polo": [0, 94, 97, 98], "poggio": [0, 94, 97, 98], "sinkhorn_knopp_unbalanc": [0, 94, 98], "sinkhorn_stabilized_unbalanc": [0, 94, 98], "sinkhorn_reg_scaling_unbalanc": [0, 94], "sinkhorn_unbalanced2": [0, 94, 98], "parameterss": [0, 94], "round": [0, 2, 30, 32, 34, 36, 37, 53, 88, 94], "31912858": [0, 94], "sim": [0, 77, 86, 91], "et": [0, 3, 62, 68, 75, 85, 91, 97, 98], "al": [0, 3, 62, 68, 75, 85, 91, 97, 98], "radon": [0, 3, 62, 91, 97, 98], "imag": [0, 3, 11, 12, 28, 35, 39, 42, 53, 60, 62, 75, 77, 86, 87, 91, 95, 97, 98, 99, 100], "51": [0, 3, 32, 34, 60, 62, 83, 85, 91, 97, 98], "22": [0, 3, 5, 33, 38, 43, 60, 62, 75, 91, 97, 98, 99, 100], "45": [0, 3, 17, 60, 62, 85, 91, 94, 97, 98, 99], "sliced_wasserstein_spher": [0, 63, 91], "discrep": [0, 63, 83, 88, 91], "ssw_p": [0, 91], "int_": [0, 91], "sigma": [0, 8, 22, 24, 25, 26, 29, 40, 77, 78, 81, 86, 91, 95], "foral": [0, 75, 83, 85, 86, 91, 95], "tx": [0, 12, 16, 91], "_2": [0, 42, 75, 77, 81, 83, 86, 90, 91, 95], "keepdim": [0, 43, 63, 74, 91], "sliced_wasserstein_sphere_unif": [0, 4, 91], "ssw_2": [0, 4, 91], "42": [0, 2, 3, 5, 17, 20, 24, 26, 36, 41, 46, 60, 70, 85, 91, 97, 99], "randn": [0, 1, 3, 5, 6, 8, 15, 24, 31, 34, 40, 43, 47, 51, 63, 67, 74, 91, 99], "500": [0, 3, 4, 5, 6, 8, 20, 26, 32, 45, 59, 74, 76, 83, 91, 92], "ssw": [0, 4, 91], "allclos": [0, 74, 91], "01734": [0, 91], "atol": [0, 74, 91], "unbalanced_typ": 0, "n_thread": 0, "plan_init": 0, "potentials_init": 0, "grad": [0, 2, 3, 4, 6, 7, 43, 47, 74, 83, 92, 93], "autodiff": [0, 97, 99], "discret": [0, 20, 25, 26, 36, 45, 60, 73, 75, 77, 85, 86, 87, 93, 97, 98, 99], "otresult": [0, 95], "t_": [0, 83], "m_": [0, 31, 90, 98], "lambda_r": 0, "lambda_u": 0, "penal": [0, 39, 70, 78, 90, 94, 97, 100], "exact": [0, 18, 39, 52, 60, 70, 75, 78, 85, 88, 89, 94, 95, 97, 98, 99, 100], "array_lik": [0, 77, 86, 95], "l2": [0, 10, 11, 39, 45, 55, 66, 70, 78, 83, 90, 92, 94, 97, 98, 99, 100], "tv": [0, 58], "avail": [0, 27, 71, 72, 74, 97, 98, 99], "omp": 0, "_type_": 0, "toler": [0, 35, 74, 76, 81, 88, 92], "implicit": 0, "output": [0, 5, 8, 35, 72, 75, 77, 83, 93, 95, 97, 98, 99], "other": [0, 2, 6, 7, 43, 52, 53, 71, 72, 83, 84, 92, 93, 95, 97, 99, 100], "detach": [0, 1, 2, 3, 4, 5, 6, 7, 8, 33, 47, 74], "save": [0, 33, 48, 75, 83], "re": [0, 62, 63, 67, 68, 74, 85, 95], "obtain": [0, 59, 77, 90, 98], "more": [0, 30, 32, 37, 47, 53, 72, 74, 75, 79, 81, 85, 98, 99], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 78, 85, 92, 95, 98, 99], "origin": [0, 2, 25, 29, 72, 73, 85, 92, 98, 99], "paper": [0, 11, 75, 97, 98, 99], "formul": [0, 88, 92, 97, 98], "torch": [0, 2, 3, 4, 6, 7, 8, 33, 47, 74, 82, 98, 99], "backward": [0, 1, 2, 3, 5, 6, 7, 8, 33, 47], "chang": [0, 1, 5, 25, 72, 74, 75, 85, 98, 99], "mode": [0, 1, 5, 25, 77], "17": [0, 19, 26, 43, 60, 85, 92, 97, 98], "41": [0, 1, 7, 53, 60, 90, 94, 97, 99], "blondel": [0, 51, 73, 77, 92, 93, 97, 98, 99], "segui": [0, 14, 51, 77, 92, 93, 97, 98], "rolet": [0, 51, 73, 77, 92, 93, 97, 98], "twenti": [0, 92, 97, 98], "aistat": [0, 75, 77, 92, 97, 98], "wu": [0, 68, 90, 94, 97], "f\u00e9vott": [0, 68, 90, 94, 97], "gasso": [0, 50, 68, 75, 88, 90, 94, 97, 98], "through": [0, 68, 90, 94, 97, 98], "regress": [0, 68, 72, 90, 94, 97], "neurip": [0, 32, 50, 83, 88, 90, 94, 97, 98], "solve_gromov": [0, 99], "ca": 0, "cb": [0, 16, 41, 81], "whether": [0, 74, 83, 85, 95], "wass": 0, "Not": [0, 74], "correspond": [0, 6, 7, 27, 53, 77, 79, 83, 85, 86, 90, 98, 99], "yet": [0, 83, 98, 99], "semirelax": 0, "value_quad": [0, 95, 99], "part": [0, 2, 95, 97, 99], "loss_linear_term": 0, "loss_quad_term": 0, "includ": [0, 71, 72, 76, 79, 83, 85, 95, 98, 99], "48": [0, 30, 37, 53, 60, 83, 87, 97, 99], "right_margin": 0, "marginal_b": [0, 95], "29": [0, 5, 43, 60, 77, 81, 88, 97, 98, 99], "36th": [0, 97, 98], "c\u00e9dric": [0, 30, 32, 34, 36, 37, 73, 82, 83, 87, 97], "2022": [0, 33, 77, 81, 83, 85, 97], "iclr": [0, 30, 32, 37, 83, 87, 92, 97], "alaya": [0, 50, 73, 75, 88, 97, 98], "2020": [0, 8, 13, 40, 42, 47, 75, 76, 77, 82, 86, 88, 97, 98, 99], "posit": [0, 2, 7, 10, 11, 13, 36, 50, 53, 54, 55, 58, 60, 65, 66, 71, 74, 77, 81, 85, 87, 88, 89, 97, 98], "unlabel": [0, 77, 88, 97, 98], "solve_sampl": [0, 49, 99], "lazi": [0, 95, 97, 99], "batch_siz": [0, 33, 36, 51, 77, 83, 93, 95], "95": [0, 29, 30, 32, 35, 37, 60, 62, 63, 99], "x_init": [0, 14, 15, 75, 85], "y_j": [0, 31, 98], "squar": [0, 6, 35, 42, 53, 57, 58, 74, 77, 79, 83, 84, 86, 91, 92, 95, 97, 98, 99], "otresultlazi": 0, "reduc": [0, 95], "batch": [0, 7, 8, 33, 75, 77, 82, 83, 85, 93, 95], "larg": [0, 8, 27, 51, 74, 77, 79, 88, 93, 97, 98, 99], "soler": 0, "geomloss": [0, 97, 98, 99], "complex": [0, 83, 98], "o": [0, 1, 5, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 35, 36, 45, 48, 53, 82, 83, 97, 98, 99], "effici": [0, 73, 75, 85, 97, 98, 99], "cuda": [0, 3, 7, 73, 99], "pykeop": 0, "forc": [0, 74, 98], "geomloss_onlin": 0, "pre": [0, 53, 74, 75, 98], "geomloss_tensor": 0, "multiscal": 0, "geomloss_multiscal": 0, "plai": 0, "speed": [0, 98, 99], "factored_solution_lazi": 0, "full": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 74, 75, 93, 95, 97, 99], "factored_solut": 0, "gaussian": [0, 7, 8, 10, 18, 24, 25, 26, 29, 39, 45, 49, 50, 54, 55, 58, 60, 65, 66, 73, 74, 77, 78, 86, 95, 97, 98, 99, 100], "bure": [0, 18, 39, 81, 99, 100], "teh": 0, "mu_": [0, 34, 42, 44, 56, 59, 62, 67, 68, 69, 77, 81, 98], "mu_t": [0, 34, 42, 44, 56, 62, 67, 68, 69, 77, 81, 98], "lvert": [0, 81], "_t": [0, 81], "rvert": [0, 81], "sigma_": [0, 77, 81], "sigma_t": [0, 77, 81], "tr": [0, 81], "covari": [0, 77, 78, 81, 98], "mean": [0, 7, 10, 11, 13, 30, 32, 33, 37, 41, 45, 50, 54, 55, 58, 59, 60, 62, 63, 65, 66, 74, 75, 78, 79, 81, 82, 85, 98, 99], "bw_dist": 0, "multivari": 0, "independ": [0, 22, 85, 98, 99], "w_dist": 0, "tic": [0, 11, 31, 45, 95, 99], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 72, 74, 95, 98, 99, 100], "matlab": [0, 73, 95], "toc": [0, 11, 31, 45, 95, 99], "messag": [0, 72, 75, 95, 99], "elaps": [0, 11, 31, 95], "toq": [0, 95], "julia": [0, 95], "type_a": [0, 74, 91, 95, 99], "bin": [0, 7, 10, 11, 13, 45, 50, 54, 55, 58, 60, 65, 66, 78, 85, 95, 98], "expect": [0, 8, 47, 71, 72, 75, 95, 97, 98], "pytorch": [0, 9, 39, 47, 73, 74, 78, 82, 89, 93, 95, 97, 98, 99, 100], "wasserstein_1d": [0, 7, 59, 85, 98, 99], "dimension": [0, 34, 39, 52, 67, 75, 78, 79, 83, 85, 97, 98, 99, 100], "15": [0, 5, 8, 13, 14, 19, 23, 26, 29, 31, 32, 41, 43, 47, 49, 60, 67, 77, 85, 94, 97, 98, 99], "formal": [0, 75, 85], "so": [0, 2, 8, 32, 45, 69, 83, 85, 95, 97, 98, 99], "wai": [0, 20, 72, 85, 98], "build": [0, 8, 29, 72, 77, 85, 97, 98, 99], "individu": [0, 71, 85], "quantil": [0, 85, 88], "integr": [0, 85], "them": [0, 30, 37, 74, 77, 85, 88, 99], "prefer": [0, 72, 79, 85], "whenev": [0, 85], "differ": [0, 2, 17, 32, 39, 45, 49, 53, 61, 71, 75, 76, 77, 83, 85, 89, 94, 97, 98, 99, 100], "over": [0, 8, 36, 74, 75, 83, 85, 86, 88, 95], "least": [0, 72, 85, 86], "chap": [0, 85], "atom": [0, 75, 83, 85], "been": [0, 8, 73, 85, 88, 95, 97, 98, 99], "prior": [0, 72, 75, 85, 98], "being": [0, 45, 53, 72, 77, 85, 98, 99], "wasserstein_circl": [0, 59, 85], "ot_": [0, 85, 98], "cdf_u": [0, 85], "cdf_v": [0, 85], "w_1": [0, 85, 98], "levm": [0, 85], "hundries": [0, 85, 97], "shayan": [0, 85, 97], "marcel": [0, 85, 97], "klatt": [0, 85, 97], "axel": [0, 85, 97], "munk": [0, 85, 97], "circular": [0, 29, 85, 97], "direct": [0, 36, 58, 85, 87, 92, 97, 99], "innov": [0, 85, 97], "bicentenni": [0, 85, 97], "tribut": [0, 85, 97], "florenc": [0, 85, 97], "nightingal": [0, 85, 97], "singapor": [0, 85, 97], "springer": [0, 85, 97], "natur": [0, 74, 85, 97], "57": [0, 60, 77, 81, 85, 97, 99], "82": [0, 53, 60, 85, 97, 99], "weak_optimal_transport": [0, 44, 96], "weak": [0, 39, 52, 73, 78, 89, 97, 98, 99, 100], "_j": [0, 79, 85, 92, 93, 96], "guess": [0, 87, 96], "indep": [0, 87, 96], "joint": [0, 36, 75, 83, 86, 87, 96, 97, 98, 99], "densiti": [0, 87, 96], "numitermaxemd": [0, 87, 96], "stopthr2": [0, 87, 96], "gozlan": [0, 17, 85, 96, 97, 98], "roberto": [0, 96, 97, 98], "samson": [0, 96, 97, 98], "tetali": [0, 96, 97, 98], "kantorovich": [0, 85, 96, 97, 98], "dualiti": [0, 96, 97, 98], "273": [0, 85, 96, 97, 98], "3327": [0, 96, 97, 98], "3405": [0, 96, 97, 98], "go": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 99], "end": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 77, 85, 86, 90, 98], "download": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69], "author": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 69, 97], "remi": [1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 16, 19, 20, 21, 22, 24, 25, 26, 27, 33, 40, 43, 44, 46, 47, 48, 53, 54, 55, 56, 57, 58], "polytechniqu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 17, 44, 46, 48], "edu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 17, 44, 45, 46, 48, 98], "licens": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 69], "mit": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 69, 97], "sphinx_gallery_thumbnail_numb": [1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 17, 20, 21, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 46, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68], "pyplot": [1, 4, 5, 8, 10, 12, 13, 15, 17, 20, 24, 26, 29, 31, 33, 35, 42, 45, 47, 48], "pl": [1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 16, 17, 19, 21, 22, 23, 25, 27, 30, 31, 32, 33, 34, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69], "manual_se": [1, 3, 4, 5, 8, 33], "n_source_sampl": [1, 5, 19, 23, 25, 77], "n_target_sampl": [1, 5, 19, 23, 25, 77], "noise_level": [1, 5, 25], "make_data_classif": [1, 19, 21, 22, 23, 25, 27], "gaussrot": [1, 25], "nz": [1, 22, 25, 43, 78], "xt": [1, 5, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 34, 42, 43, 44, 46, 56, 57, 59, 62, 63, 67, 68, 69, 75, 77, 81, 86, 89, 90, 93, 98, 99], "yt": [1, 19, 21, 22, 23, 25, 27, 31, 43, 77], "one": [1, 3, 5, 7, 20, 24, 25, 26, 29, 33, 35, 36, 51, 53, 72, 74, 75, 77, 78, 85, 90, 98, 99], "varianc": [1, 5, 25, 34], "figur": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72], "clf": [1, 2, 3, 4, 5, 8, 11, 16, 22, 24, 25, 30, 31, 32, 33, 35, 36, 37, 40, 42, 47, 48, 53, 57, 58, 66, 68], "scatter": [1, 2, 3, 4, 5, 6, 8, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 27, 31, 33, 34, 35, 36, 41, 42, 43, 53, 59, 63, 67, 68, 69], "marker": [1, 5, 14, 16, 17, 19, 21, 22, 23, 25, 27, 33, 36, 41, 43], "legend": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 19, 21, 22, 23, 24, 25, 27, 33, 36, 41, 42, 43, 44, 45, 46, 50, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 68], "loc": [1, 5, 14, 19, 21, 23, 24, 25, 27, 30, 32, 37, 41, 42, 43, 44, 46, 56, 57, 62, 63, 65, 68], "titl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 49, 53, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 89, 97], "requires_grad": [1, 6, 47], "adam": [1, 5, 33, 83], "lr": [1, 2, 3, 4, 5, 6, 7, 8, 33, 47, 51, 93], "n_iter": [1, 4, 5, 8], "rang": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 22, 29, 30, 32, 33, 35, 36, 37, 40, 41, 42, 45, 47, 48, 53, 58, 59, 62, 63, 66, 68, 69, 99], "nois": [1, 5, 8, 29, 67, 78], "minu": [1, 5], "becaus": [1, 5, 85, 98, 99], "maxim": [1, 5, 85, 93, 94, 99], "te": [1, 5], "loss_dual_entrop": [1, 5], "append": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 29, 30, 32, 33, 35, 36, 37, 45, 47, 49, 66, 67, 95], "3d": [1, 4, 5, 8, 10, 11, 17, 63, 66], "zero_grad": [1, 5, 8], "grid": [1, 4, 5, 6, 8, 63], "xlabel": [1, 4, 5, 6, 8, 20, 26, 31, 33, 36, 40, 41, 47, 53, 58, 59, 62, 63], "ge": [1, 56, 60], "plan_dual_entrop": [1, 5], "20204949002248407": 1, "19": [1, 12, 18, 19, 26, 43, 45, 51, 60, 77, 93, 97, 98, 99, 100], "585030818558447": 1, "420782540623815": 1, "36": [1, 3, 5, 60, 90, 94, 97, 98], "067627542616066": 1, "1261413952035": 1, "6981095645214": 1, "60": [1, 3, 4, 5, 7, 8, 10, 11, 13, 32, 33, 34, 36, 45, 50, 54, 55, 60, 65, 66, 85, 97], "491724144307064": 1, "730225592522466": 1, "80": [1, 4, 5, 8, 11, 14, 32, 36, 54, 60, 99], "84756735312763": 1, "90": [1, 5, 8, 17, 32, 53, 54, 58, 60, 99], "89171432019944": 1, "90938302841333": 1, "110": [1, 5, 8, 32, 54, 60], "91772084105272": 1, "120": [1, 5, 8, 32, 49, 50, 54, 60, 63], "92254131983757": 1, "130": [1, 5, 8, 32, 54, 60, 99], "92571600870045": 1, "140": [1, 5, 8, 32, 54, 60, 99], "92786695902233": 1, "150": [1, 4, 5, 8, 17, 19, 21, 23, 27, 32, 45, 48, 54, 59, 60, 99], "92928692286417": 1, "160": [1, 5, 8, 32, 45, 54, 60, 99], "93032554325316": 1, "170": [1, 5, 8, 32, 37, 38, 54, 60, 99, 100], "93107391366535": 1, "180": [1, 5, 8, 32, 45, 54, 60], "93162931036703": 1, "190": [1, 5, 8, 32, 54, 60], "93204741896595": 1, "plot2d_samples_mat": [1, 21, 44, 46, 56, 57], "zorder": [1, 2, 5, 36, 41, 48], "01": [1, 9, 10, 18, 19, 23, 28, 30, 31, 32, 34, 37, 38, 43, 51, 54, 58, 60, 61, 66, 67, 70, 75, 88, 90, 100], "loss_dual_quadrat": 1, "gq": 1, "plan_dual_quadrat": 1, "0018442196020623663": 1, "468234323218862": 1, "25265161668023": 1, "79477972824864": 1, "886833745509286": 1, "453640049108095": 1, "31470088914582": 1, "576690968351265": 1, "681519697414615": 1, "75093409425963": 1, "773741369366945": 1, "78454242879181": 1, "790640195296916": 1, "79450222392385": 1, "796965173434295": 1, "798584845838874": 1, "799683789543394": 1, "80042442750385": 1, "800934638164385": 1, "801272803602906": 1, "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 85, 98, 100], "script": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 99], "minut": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69], "959": [1, 9, 100], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 99], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 98, 99], "plot_dual_ot_pytorch": [1, 9, 100], "ipynb": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 74, 95, 99, 100], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 97, 99, 100], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 72, 99], "express": [2, 6, 71, 98], "model": [2, 3, 5, 33, 97, 98, 99], "actual": [2, 98], "proport": [2, 30, 32, 36, 37, 53, 75, 77, 78, 89], "sbm": [2, 30, 32, 33, 36, 37], "allow": [2, 6, 34, 35, 40, 42, 47, 67, 72, 76, 88, 98, 99], "accur": 2, "simultan": 2, "properti": [2, 8, 77, 83, 85, 86, 95, 97, 98], "sklearn": [2, 33, 35, 36, 41, 95, 99], "manifold": [2, 33, 35, 36, 79, 98], "md": [2, 36, 99], "pylab": [2, 3, 6, 7, 11, 14, 16, 17, 19, 21, 22, 23, 25, 27, 30, 32, 34, 36, 37, 40, 41, 43, 44, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69], "ot": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 54, 56, 61, 62, 63, 65, 66, 67, 68, 69, 72, 73, 97, 99, 100], "rng": [2, 6, 20, 24, 26, 35, 41, 42, 51], "def": [2, 3, 4, 5, 6, 8, 16, 17, 20, 22, 24, 26, 29, 30, 32, 33, 34, 35, 36, 37, 59, 60, 68, 74, 95], "get_sbm": 2, "nc": [2, 36], "ratio": 2, "nbpc": 2, "astyp": [2, 3, 14, 15, 17, 20, 24, 26, 32, 34, 35, 36, 42], "zero": [2, 3, 4, 6, 8, 10, 11, 30, 32, 34, 36, 37, 47, 53, 55, 57, 58, 59, 66, 74, 76, 77, 83, 85, 95, 99], "rand": [2, 4, 8, 24, 43, 45, 46, 67, 69, 74], "ey": [2, 36, 74], "05": [2, 5, 19, 25, 26, 32, 34, 38, 43, 49, 51, 54, 60, 64, 69, 74, 75, 77, 83, 85, 86, 90, 100], "ones": [2, 8, 14, 15, 29, 30, 31, 32, 36, 37, 45, 53, 56, 62, 63, 68, 69, 74, 77, 83], "2d": [2, 17, 18, 19, 21, 22, 23, 27, 36, 39, 44, 46, 53, 57, 61, 64, 68, 70, 75, 78, 85, 88, 89, 94, 95, 98, 99, 100], "dissimilar": [2, 35, 36], "precomput": [2, 35, 36, 98], "fit_transform": [2, 33, 35, 36, 77], "plot_graph": [2, 36], "color": [2, 4, 5, 6, 7, 10, 13, 15, 16, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 42, 45, 47, 48, 53, 56, 59, 63, 67, 68, 69, 77, 89, 95, 98, 99, 100], "c0": [2, 5, 16, 36, 41, 68, 69], "edgecolor": [2, 15, 16, 36, 41], "cmap": [2, 5, 10, 12, 13, 22, 29, 31, 34, 36, 41, 53, 66, 67, 69], "tab10": [2, 36, 41], "vmax": [2, 22, 29, 36, 41, 47, 53], "subplot": [2, 4, 5, 8, 10, 11, 12, 13, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 40, 43, 44, 46, 47, 49, 53, 57, 58, 60, 66, 67, 68, 69, 89], "axi": [2, 3, 4, 5, 12, 13, 15, 16, 17, 20, 22, 24, 26, 30, 32, 33, 36, 37, 41, 42, 48, 49, 57, 59, 60, 62, 63, 67, 69, 74, 79, 92, 95], "imshow": [2, 12, 13, 19, 20, 21, 23, 24, 26, 27, 31, 34, 36, 40, 41, 44, 47, 49, 53, 56, 57, 60, 67, 69], "nearest": [2, 19, 21, 23, 27, 31, 36, 39, 44, 49, 52, 56, 57, 77, 86, 97, 99, 100], "adjac": [2, 29, 82], "home": [2, 5, 7, 10, 15, 19, 21, 22, 23, 29, 32, 34, 36, 45, 49, 50, 53, 56, 59, 60, 66], "circleci": [2, 5, 7, 10, 15, 19, 21, 22, 23, 29, 32, 34, 36, 45, 49, 50, 53, 56, 59, 60, 66, 99], "plot_optim_gromov_pytorch": [2, 9, 100], "81": [2, 60], "userwarn": [2, 5, 7, 15, 19, 21, 22, 23, 32, 34, 36, 49, 50, 53, 56, 60, 66], "colormap": [2, 10, 36, 41, 66], "ignor": [2, 36, 45, 47, 74, 77, 87, 99], "diagon": [2, 27, 29, 74, 81, 95], "want": [2, 8, 15, 19, 21, 22, 23, 32, 34, 47, 49, 53, 56, 60, 98, 99], "up": [2, 72, 99], "min_weight_gw": 2, "a2": [2, 10, 11, 13, 15, 45, 66], "nb_iter_max": [2, 3, 7], "min_a": [2, 98], "our": [2, 3, 7, 97, 98, 99], "c1_torch": 2, "c2_torch": 2, "a0": 2, "random_init": 2, "a1_torch": 2, "requires_grad_": [2, 3, 4, 7], "a2_torch": 2, "loss_it": [2, 3, 7], "clone": [2, 3, 4, 7, 72, 74], "03d": [2, 33], "no_grad": [2, 3, 6, 7, 47], "zero_": [2, 3, 6, 7, 47], "proj_simplex": [2, 6, 7, 47], "a1": [2, 10, 11, 13, 15, 45, 66], "a0_est": 2, "loss_iter0": 2, "29850312": 2, "20157616": 2, "49992072": 2, "clear": 2, "noe": 2, "receiv": [2, 72], "most": [2, 75, 95, 98, 99], "show": [2, 7, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 66, 67, 68, 69, 71, 85], "here": [2, 4, 68, 83, 85, 97, 98, 99], "previous": 2, "t_unif": 2, "label_unif": 2, "argmax": [2, 30, 32, 33, 36, 37, 40, 47, 74, 86], "t_est": 2, "label_est": 2, "est": 2, "7760154087783518": 2, "5785554952306606": 2, "7708789474385981": 2, "6510858680020267": 2, "now": [2, 4, 53, 74, 98, 99], "seen": [2, 75, 85, 98], "probabl": [2, 7, 17, 33, 36, 47, 77, 81, 83, 85, 97], "link": [2, 30, 32, 72, 97, 99], "graph_compression_gw": 2, "nb_node": 2, "clamp": 2, "a0_est2": 2, "c0_est2": 2, "loss_iter2": 2, "5e": [2, 13, 22, 34, 35, 68], "vmin": [2, 29, 41, 47, 53], "colorbar": [2, 36, 41, 53], "29985821": 2, "18926744": 2, "51087435": 2, "0x7f045516f490": 2, "536": [2, 9, 99, 100], "liutku": [3, 97, 98], "simsekli": [3, 97, 98], "majewski": [3, 97, 98], "durmu": [3, 97, 98], "st\u00f6ter": [3, 97, 98], "mai": [3, 71, 72, 83, 85, 88, 90, 97, 98, 99], "nonparametr": [3, 97, 98], "diffus": [3, 97, 98], "4104": [3, 97, 98], "4113": [3, 97, 98], "load": [3, 20, 26, 53, 98], "i1": [3, 14, 17, 20, 24, 26], "imread": [3, 12, 13, 14, 17, 20, 24, 26, 35], "redcross": [3, 12, 14, 17], "png": [3, 12, 13, 14, 17, 35, 48], "i2": [3, 14, 17, 20, 24, 26], "tooth": [3, 12, 17], "sz": [3, 14, 17], "xx": [3, 5, 14], "yy": [3, 5, 14], "meshgrid": [3, 4, 5, 14, 17, 74], "arang": [3, 7, 10, 11, 13, 14, 17, 31, 40, 41, 43, 45, 47, 49, 50, 54, 55, 57, 58, 60, 65, 66, 74, 75, 95], "stack": [3, 14, 16, 17, 36, 42, 74], "32": [3, 5, 13, 14, 18, 43, 60, 79, 83, 97, 98, 100], "x3": [3, 14, 15], "collect": [3, 10, 11, 35, 59, 66, 75], "pathcollect": [3, 35, 59], "0x7f044d316020": 3, "devic": [3, 7, 74, 98, 99], "is_avail": [3, 7], "x1_torch": 3, "x2_torch": 3, "1e3": 3, "x_all": 3, "gen": 3, "5e1": 3, "ax": [3, 4, 10, 12, 13, 15, 17, 41, 47, 53, 63, 66, 74, 87, 98], "_update_plot": [3, 4, 8, 17, 68], "ani": [3, 4, 8, 17, 42, 45, 68, 71, 72, 74, 76, 77, 83, 85, 86, 87, 90, 95, 97, 98], "funcanim": [3, 4, 8, 17, 68], "gcf": [3, 4, 8, 10, 66, 68], "interv": [3, 4, 8, 17, 62, 63, 68, 74], "repeat_delai": [3, 4, 8, 17, 68], "onc": [3, 4, 8, 17, 68], "loop": [3, 4, 8, 17, 32, 53, 68, 77, 83, 97], "reflect": [3, 4, 8, 17, 68], "x3_torch": 3, "xbinit": 3, "16": [3, 7, 8, 9, 15, 19, 26, 31, 36, 40, 43, 47, 60, 74, 76, 79, 85, 90, 97, 98, 100], "xbary_torch": 3, "56": [3, 9, 60, 85, 97, 99, 100], "928": [3, 9, 100], "plot_sliced_wass_grad_flow_pytorch": [3, 9, 100], "transform": [4, 19, 20, 21, 23, 25, 27, 77, 83, 93, 95, 98], "cl\u00e9ment": [4, 59, 63, 73], "clement": [4, 59, 63], "univ": [4, 22, 23, 40, 47, 59, 63, 68, 69], "ub": [4, 40, 47, 59, 63, 68, 69], "fr": [4, 7, 10, 11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 36, 40, 41, 42, 43, 47, 49, 54, 55, 56, 57, 58, 59, 63, 65, 66, 67, 68, 69], "nn": [4, 5, 8, 33, 99], "function": [4, 7, 10, 12, 35, 42, 53, 66, 68, 72, 75, 82, 83, 97, 98, 99], "plot_spher": 4, "xlist": 4, "linspac": [4, 5, 10, 15, 29, 58, 59, 66, 74, 99], "ylist": 4, "z": [4, 10, 36, 50, 63, 66, 73, 75, 85, 92, 95, 97, 98], "plot_wirefram": [4, 63], "grai": [4, 63], "bottom": [4, 13, 53], "half": 4, "set_titl": [4, 10, 13, 15, 47], "0x7f046ccad780": 4, "xvisu": [4, 8], "sw": 4, "grad_x": 4, "item": [4, 29, 30, 32, 33, 37, 72], "semilogi": [4, 6, 8], "21224276721477509": 4, "23": [4, 5, 6, 8, 43, 58, 60, 85, 97, 98, 99], "52222222222222": [4, 5, 6, 8], "ivisu": [4, 8], "fig": [4, 12, 13, 15, 17, 34, 35, 40, 41, 47, 57, 63, 67], "add_subplot": [4, 10, 17, 34, 66, 67], "set_xlim": [4, 15, 63], "set_ylim": [4, 15, 63], "048": [4, 9, 100], "plot_ssw_unif_torch": [4, 9, 100], "nvisu": [5, 60], "300": [5, 13, 18, 32, 36, 45, 49, 100], "ax_bound": 5, "mlp": [5, 8], "modul": [5, 8, 33, 50, 53, 72, 75, 79, 82, 86, 89, 97, 99], "__init__": [5, 8, 33, 77, 95], "self": [5, 8, 33, 77, 95], "super": [5, 8, 33], "fc1": [5, 8], "fc2": [5, 8], "relu": [5, 8], "heavisid": [5, 8], "fn": [5, 8], "forward": [5, 8, 33, 82, 98], "ravel": [5, 29, 68, 69, 92, 95], "doubl": [5, 47, 53], "005": [5, 33, 49, 69], "n_batch": 5, "iperm": 5, "randint": [5, 20, 26, 29, 33, 45], "ipermt": 5, "xsi": 5, "xti": 5, "257329928299894": 5, "890456785604673": 5, "58037947236615": 5, "18": [5, 19, 26, 29, 43, 51, 60, 88, 93, 97, 98], "440996850749865": 5, "12608610815788": 5, "275903405782387": 5, "27": [5, 36, 43, 60, 75, 77, 97, 99], "268827591939186": 5, "79159074243252": 5, "63488731570214": 5, "12722861847872": 5, "696522621311644": 5, "33": [5, 34, 40, 43, 45, 47, 50, 52, 60, 75, 76, 97, 98, 100], "46949401889149": 5, "64206913098603": 5, "15381635153295": 5, "28321242161009": 5, "520585380642636": 5, "676096587323535": 5, "45865441165184": 5, "43596310348253": 5, "26194570410683": 5, "01278968196742": 5, "210": [5, 32, 99], "87401169938976": 5, "220": [5, 32, 99], "12820568044987": 5, "230": [5, 32, 45], "6372243096062": 5, "240": [5, 32, 99], "65926621902025": 5, "250": [5, 32, 45, 57, 61, 70, 100], "527425475361845": 5, "260": [5, 32, 99], "126583681704034": 5, "270": [5, 32], "735871196038286": 5, "280": [5, 32, 45, 99], "157560505651844": 5, "290": [5, 32, 99], "070647347170436": 5, "27069736487665": 5, "310": [5, 16, 18, 32, 99, 100], "40325557106319": 5, "320": [5, 11, 32, 45], "75151933211852": 5, "330": [5, 32], "50578707289677": 5, "340": [5, 32, 99], "833572391120526": 5, "350": [5, 32, 99], "54009720287946": 5, "360": [5, 32, 36, 38, 99, 100], "54715464928039": 5, "370": [5, 32], "63597866286179": 5, "380": [5, 32, 99], "85734724064162": 5, "390": [5, 32], "22195044833466": 5, "400": [5, 32, 45, 99], "54526255143114": 5, "410": [5, 32, 99], "20288271113561": 5, "420": [5, 32], "14673091868496": 5, "430": [5, 32], "32427691564021": 5, "440": [5, 32], "51095472212393": 5, "450": [5, 32], "56664149963812": 5, "460": [5, 32], "557146416121796": 5, "470": [5, 32], "7012331965002": 5, "480": [5, 32], "754363123393354": 5, "490": [5, 32], "129209682796": 5, "nv": [5, 68], "xl": 5, "yl": 5, "xg": [5, 8], "concaten": [5, 6, 15, 24, 43, 48, 59, 67, 69, 74, 90, 95], "wxg": 5, "exp": [5, 23, 53, 59, 74, 79, 93, 98], "iv": [5, 59, 68], "gg": [5, 31], "wt": [5, 81, 93], "reshap": [5, 20, 24, 26, 29, 33, 35, 43, 45, 49, 50, 54, 55, 58, 60, 65, 67, 68, 74, 75, 88, 90], "pcolormesh": 5, "green": [5, 7], "plot_stoch_continuous_ot_pytorch": [5, 9, 100], "159": [5, 60], "doe": [5, 53, 72, 74, 83, 98, 99], "handl": [5, 7, 95, 98, 99], "quadmesh": 5, "http": [5, 50, 53, 57, 71, 74, 75, 92, 95, 97, 98, 99], "org": [5, 50, 57, 71, 74, 75, 92, 95, 97, 98, 99], "tutori": [5, 72, 98], "legend_guid": 5, "html": [5, 53, 72, 74, 97], "custom": 5, "handler": 5, "173": [5, 60], "187": [5, 60], "52": [5, 9, 33, 41, 42, 52, 60, 79, 97, 99, 100], "702": [5, 9, 100], "mix": [6, 7, 47], "word": [6, 98], "suppos": [6, 75, 98], "s_k": 6, "w_k": [6, 98], "belong": [6, 34, 67, 86, 90], "delta_k": 6, "observ": [6, 75, 78], "pot": [6, 7, 12, 19, 34, 35, 40, 42, 47, 51, 52, 67, 69, 73, 74, 76, 84, 95, 99, 100], "nt1": 6, "ns1": 6, "xs1": [6, 22], "xs2": [6, 22, 59], "s_1": 6, "s_2": 6, "0x7f046cb78910": 6, "h2": [6, 30, 32, 37, 83], "2e": [6, 50, 55, 68], "rate": [6, 83, 85, 93], "niter": [6, 45, 47, 85], "get_loss": 6, "mv": 6, "mixtur": 6, "09980706": 6, "90019294": 6, "dot": [6, 10, 11, 16, 22, 24, 30, 32, 34, 37, 45, 46, 53, 66, 67, 74, 95], "c3": [6, 16, 30, 32, 37, 48], "0x7f046ccaf460": 6, "575": [6, 9, 100], "plot_unmix_optim_torch": [6, 9, 100], "refer": [7, 30, 32, 37, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 94, 95, 96], "ensur": [7, 29, 72, 85, 98], "remain": 7, "illustr": [7, 10, 11, 12, 13, 14, 15, 16, 17, 29, 30, 31, 32, 33, 36, 37, 41, 43, 44, 46, 47, 49, 50, 53, 54, 55, 56, 59, 60, 62, 63, 65, 66, 68, 72, 99], "within": [7, 71, 74, 83], "framework": [7, 36, 99], "ncourti": [7, 12, 34, 35], "irisa": [7, 12, 29, 31, 34, 35, 56, 67], "mpl": 7, "make_1d_gauss": [7, 10, 11, 13, 45, 49, 50, 54, 55, 58, 60, 65, 66], "gauss": [7, 49, 50, 54, 55, 58, 65, 77], "red": [7, 20, 26, 31, 33, 42, 53], "to_rgb": [7, 16], "blue": [7, 12, 20, 26, 31, 33, 34, 40, 41, 42, 47, 53], "dtype": [7, 10, 11, 13, 45, 50, 54, 55, 58, 60, 62, 63, 65, 66, 74, 75, 99], "std": [7, 10, 11, 13, 31, 45, 50, 54, 55, 58, 59, 60, 62, 63, 65, 66, 74, 78, 83, 99], "enforc": [7, 42, 77, 98], "x_torch": 7, "a_torch": 7, "b_torch": 7, "800": [7, 32, 45], "figsiz": [7, 11, 12, 13, 15, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 32, 33, 35, 37, 41, 43, 45, 47, 49, 50, 51, 54, 55, 57, 60, 63, 65, 66], "onto": [7, 19, 21, 23, 77, 83, 92, 95, 98], "curv": [7, 47], "everi": [7, 36, 42, 76, 77, 83, 97], "lw": [7, 13, 30, 32, 37, 41, 53], "evolut": [7, 36, 59, 75, 83, 97], "fontsiz": [7, 13, 29, 30, 31, 32, 33, 34, 36, 37, 41, 53, 63, 68], "solver_1d": [7, 59], "than": [7, 53, 74, 83, 98, 99], "revers": [7, 74], "throw": [7, 99], "futur": [7, 29, 99], "releas": [7, 10, 66, 97, 98], "mt": [7, 81], "transpos": [7, 40, 47, 74, 99], "ndim": [7, 29], "trigger": [7, 76], "aten": 7, "src": 7, "nativ": 7, "tensorshap": 7, "cpp": 7, "3637": 7, "cw": 7, "contigu": 7, "tw": [7, 82, 97], "bary_torch": 7, "instant": 7, "369": [7, 9, 100], "plot_wass1d_torch": [7, 9, 100], "fit": [8, 24, 26, 27, 35, 42, 75, 77, 85, 86, 95, 98, 99], "g_": 8, "realist": 8, "drawn": [8, 78, 89], "indistinguish": 8, "mu_d": 8, "arjovsky2017": 8, "access": [8, 53, 97], "cannot": [8, 27, 45, 77, 94, 98, 99], "genevay2018": 8, "studi": 8, "fatras2019": 8, "arjovski": 8, "chintala": 8, "bottou": 8, "adversari": [8, 98], "214": 8, "223": 8, "genevai": [8, 51, 93, 97, 98], "aud": [8, 97], "fatra": [8, 51, 56, 73, 97], "zine": 8, "gribonv": 8, "june": 8, "asymptot": 8, "23nd": 8, "108": [8, 60, 99], "n_dim": 8, "n_featur": [8, 33, 41, 77, 82, 95], "get_data": 8, "n_sampl": [8, 15, 34, 35, 41, 67, 77, 95], "angl": [8, 16, 24, 59], "cat": 8, "co": [8, 24, 39, 43, 52, 57, 59, 63, 76, 95, 97, 100], "sin": [8, 24, 29, 43, 57, 59, 63, 95], "0x7f046cbc75b0": 8, "fc3": 8, "rmsprop": 8, "00019": 8, "doc": [8, 72, 74, 99], "size_batch": 8, "stati": 8, "n_visu": 8, "xnvisu": 8, "ab": [8, 31, 34, 58, 74, 92, 95, 98], "xn": 8, "xd": 8, "smapl": [8, 99], "compt": 8, "del": 8, "9009847640991211": 8, "10964284837245941": 8, "04564394801855087": 8, "03516071289777756": 8, "05013977363705635": 8, "058588504791259766": 8, "03730057179927826": 8, "04171676188707352": 8, "03168988972902298": 8, "031197285279631615": 8, "03596879169344902": 8, "03272819146513939": 8, "032379165291786194": 8, "03959248960018158": 8, "029337508603930473": 8, "05796702206134796": 8, "034939464181661606": 8, "022607704624533653": 8, "04347885772585869": 8, "1164197325706482": 8, "75": [8, 60, 99], "125": [8, 10, 45, 48, 60], "175": [8, 45, 60, 99], "199": [8, 60, 88, 99], "xtick": [8, 11, 19, 21, 23, 27, 31, 41, 58, 68, 69], "ytick": [8, 11, 19, 21, 23, 27, 31, 41, 69], "xlim": [8, 35, 41, 53, 58, 59], "ylim": [8, 35, 41, 58, 59], "0x7f0447f1c5b0": 8, "905": [8, 9, 100], "plot_wass2_gan_torch": [8, 9, 100], "04": [9, 19, 25, 26, 31, 32, 34, 38, 51, 54, 60, 61, 100], "08": [9, 51, 54, 60, 74, 77, 89, 100], "021": [9, 33], "execut": [9, 18, 28, 38, 52, 61, 64, 70, 85, 98, 99, 100], "file": [9, 18, 28, 38, 39, 48, 52, 61, 64, 70, 98, 99, 100], "auto_exampl": [9, 18, 28, 38, 52, 61, 64, 70], "mem": [9, 18, 28, 38, 52, 61, 64, 70, 100], "mb": [9, 16, 18, 28, 38, 52, 61, 64, 70, 81, 100], "minibatch": [9, 39, 93, 98, 100], "flow": [9, 39, 78, 95, 97, 98, 99, 100], "00": [9, 18, 19, 22, 25, 26, 28, 31, 32, 34, 38, 52, 60, 61, 64, 67, 70, 90, 100], "continu": [9, 36, 39, 45, 75, 77, 85, 93, 98, 100], "embed": [9, 32, 33, 34, 35, 39, 83, 97, 98, 100], "sphere": [9, 39, 42, 91, 100], "03": [9, 19, 25, 31, 32, 34, 38, 43, 48, 50, 51, 52, 54, 60, 63, 70, 88, 100], "unmix": [9, 36, 39, 75, 83, 95, 97, 98, 99, 100], "unic": [10, 11, 19, 20, 21, 22, 24, 25, 26, 27, 33, 40, 43, 47, 54, 55, 56, 57, 58, 85], "plt": [10, 12, 13, 15, 17, 20, 24, 26, 29, 35, 42], "necessari": [10, 11, 66, 67, 71, 72, 85, 97, 98, 99], "mpl_toolkit": [10, 11, 34, 66, 67], "mplot3d": [10, 11, 34, 66, 67], "axes3d": [10, 11, 34, 66, 67], "noqa": [10, 11, 34, 66, 67], "polycollect": [10, 11, 66], "creat": [10, 11, 13, 29, 33, 66, 71, 72, 73, 74, 89, 97, 99], "vstack": [10, 11, 13, 31, 33, 45, 66], "n_distribut": [10, 11, 13, 66], "dist0": [10, 11, 13, 66], "l2bari": [10, 11, 66], "bary_l2": [10, 11, 66], "bary_wass": [10, 11, 66], "ax1": [10, 31, 34, 35, 40, 47, 67], "ax2": [10, 31, 34, 35, 40, 47, 67], "tight_layout": [10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 40, 41, 43, 47, 49, 53, 57, 58, 66], "num": [10, 13, 74], "black": [10, 30, 32, 36, 37, 40, 42, 47, 89], "n_alpha": 10, "alpha_list": 10, "b_l2": [10, 66], "b_wass": [10, 66], "cm": [10, 12, 29, 41, 66], "get_cmap": [10, 41, 66], "viridi": [10, 29, 66], "vert": [10, 66], "enumer": [10, 13, 29, 30, 32, 36, 37, 41, 58, 59, 62, 63, 66], "zip": [10, 13, 17, 36, 39, 66, 97], "poli": [10, 66], "facecolor": [10, 16, 41, 48, 66], "set_alpha": [10, 66], "add_collection3d": [10, 66], "zdir": [10, 66], "set_xlabel": [10, 63, 66], "set_xlim3d": [10, 66], "set_ylabel": [10, 13, 53, 63, 66], "set_ylim3d": [10, 66], "set_zlabel": [10, 63, 66], "set_zlim3d": [10, 66], "plot_barycenter_1d": [10, 18, 100], "103": [10, 47, 52, 60, 100], "matplotlibdeprecationwarn": [10, 66], "wa": [10, 53, 66, 74, 98, 99], "remov": [10, 66, 71, 74, 85, 90, 95, 99], "minor": [10, 66, 99], "later": [10, 30, 32, 37, 66, 77], "name": [10, 22, 66, 74, 83, 95, 97, 98], "obj": [10, 45, 66, 85, 92], "649": [10, 18, 100], "standard": [11, 74, 78, 82, 83, 86, 95, 99], "scienc": [11, 20, 26, 60, 77, 87, 97, 98], "343": [11, 99], "cvx": [11, 45], "bary_wass2": 11, "0036084651947021484": 11, "21659517288208008": 11, "005081892013549805": 11, "08685302734375": 11, "0011327266693115234": 11, "02308058738708496": 11, "nbm": 11, "len": [11, 13, 15, 29, 30, 32, 33, 35, 36, 37, 41, 45, 53, 92, 95], "nbm2": 11, "501": [11, 18, 100], "plot_barycenter_lp_vs_entrop": [11, 18, 100], "design": [12, 30, 34, 35, 37, 40, 42, 51, 60, 67, 69, 83, 90, 98, 99], "how": [12, 25, 30, 33, 34, 35, 36, 37, 40, 42, 47, 51, 53, 58, 59, 67, 69, 75, 99], "pathlib": [12, 13, 20, 24, 26, 35], "path": [12, 13, 20, 24, 26, 35, 39, 70, 72, 78, 90, 97, 99, 100], "four": [12, 35], "construct": [12, 16, 35, 71, 74, 77, 90], "this_fil": [12, 13, 20, 24, 26, 35], "realpath": [12, 13, 20, 24, 26, 35], "__file__": [12, 13, 20, 24, 26, 35], "data_path": [12, 13, 20, 24, 26, 35], "join": [12, 13, 20, 24, 26, 35, 74, 97], "parent": [12, 13, 20, 24, 26, 35], "f1": [12, 13], "f2": [12, 13, 30, 32, 37, 83], "f3": [12, 30, 32, 37], "heart": [12, 13, 17], "f4": 12, "duck": [12, 13, 14], "nb_imag": 12, "corner": [12, 98], "bilinear": [12, 16, 53], "v1": [12, 16, 30, 32, 37], "v2": [12, 16, 30, 32, 37], "v3": [12, 16], "v4": [12, 16], "suptitl": [12, 29], "004": [12, 33, 68, 70, 100], "ty": [12, 16], "tmp1": [12, 16], "tmp2": [12, 16], "elif": [12, 30, 32, 36, 37], "call": [12, 45, 51, 69, 75, 77, 83, 85, 86, 87, 93, 95, 98, 99], "convolutional_barycenter2d": [12, 13, 75, 99], "660": [12, 18, 32, 100], "plot_convolutional_barycent": [12, 18, 100], "janati": [13, 65, 66, 73, 75, 97, 98], "gramfort": [13, 73, 75, 97, 98], "37th": [13, 75, 97, 98], "119": [13, 15, 18, 60, 75, 97, 98, 100], "4692": [13, 75, 97, 98], "4701": [13, 75, 97, 98], "hicham": [13, 65, 66, 73, 97], "janati100": 13, "gmail": [13, 19, 20, 21, 25, 26, 27, 30, 32, 34, 35, 37, 50, 51], "com": [13, 19, 20, 21, 25, 26, 27, 30, 32, 34, 35, 37, 50, 51, 72, 74, 92, 95, 97, 99], "barycenter_debias": [13, 75], "convolutional_barycenter2d_debias": [13, 75, 99], "bar": [13, 90], "bars_debias": 13, "indianr": 13, "gold": [13, 74], "sharei": [13, 31], "bar_debias": 13, "varepsilon": [13, 76], "3f": [13, 22, 68], "asarrai": 13, "displai": [13, 21, 27, 53, 75], "img": [13, 20, 24, 26, 35], "grei": [13, 36, 41, 45], "bars_sinkhorn": 13, "7e": 13, "all_bar": 13, "jj": 13, "ax_row": 13, "ii": 13, "set_xtick": [13, 17, 63], "set_ytick": [13, 17, 63], "spine": 13, "set_vis": 13, "plot_debiased_barycent": [13, 18, 100], "vivien": [14, 92, 97], "iip": 14, "ist": 14, "kyoto": 14, "ac": 14, "jp": 14, "eduardo": [14, 15, 73], "fernand": [14, 15, 73], "montesuma": [14, 15, 73], "universit": [14, 15], "saclai": [14, 15, 33], "measures_loc": [14, 15, 75, 85], "measures_weight": [14, 15, 75, 85], "free_support_barycent": [14, 75, 98, 99], "free_support_sinkhorn_barycent": [14, 15, 75], "658": [14, 18, 100], "plot_free_support_barycent": [14, 18, 100], "calcul": [15, 40, 74, 75, 76, 83], "understood": 15, "cloud": [15, 35], "linalg": [15, 16, 29, 32, 34, 67, 74], "x4": 15, "multivariate_norm": 15, "a3": 15, "a4": 15, "steelblu": 15, "float32": 15, "xb_init": 15, "subplot2grid": [15, 35], "_sinkhorn": [15, 19, 21, 22, 23, 32, 34, 53, 56, 60], "531": [15, 19, 21, 22, 26, 28, 32, 34, 53, 56, 60, 100], "did": [15, 19, 21, 22, 23, 32, 34, 49, 53, 56, 60, 83, 99], "increas": [15, 19, 21, 22, 23, 32, 34, 49, 53, 56, 60, 88], "plot_free_support_sinkhorn_barycent": [15, 18, 100], "patch": [16, 40, 41, 47], "ellips": 16, "c4": 16, "m3": 16, "m4": 16, "draw_cov": 16, "nstd": 16, "eigsort": 16, "cov": [16, 67], "val": [16, 74], "vec": 16, "eigh": [16, 74], "argsort": [16, 74], "degre": 16, "arctan2": [16, 74], "ell": 16, "xy": 16, "width": [16, 30, 32, 37, 41, 75], "height": [16, 75], "fill": [16, 27, 65, 74, 77], "gca": [16, 41], "add_artist": [16, 40, 47], "m_1": 16, "sigma_1": 16, "m_2": 16, "sigma_2": 16, "m_3": 16, "sigma_3": 16, "m_4": 16, "sigma_4": 16, "basi": 16, "nb_interp": 16, "bures_wasserstein_barycent": 16, "plot_gaussian_barycent": [16, 18, 100], "saint": [17, 85, 97], "dizier": [17, 85, 97], "live": [17, 36, 72, 85, 97], "subspac": [17, 79, 85, 97, 98], "2105": [17, 85, 97], "09755": [17, 85, 97], "eloi": [17, 42, 73], "tangui": [17, 34, 42, 73, 83], "sub_sample_factor": 17, "i3": 17, "uu": 17, "vv": 17, "x_list": [17, 85], "im": [17, 24, 26, 41, 53], "a_list": [17, 85], "p1": [17, 22, 30, 32, 33, 37, 48], "p2": [17, 22, 30, 32, 33, 37, 48], "p3": [17, 30, 32, 37], "p_list": [17, 85], "n_samples_bari": [17, 85], "send": [17, 72], "visual": [17, 21, 27, 33, 40, 54, 55], "x_visu": 17, "xi": 17, "view_init": [17, 63], "azim": 17, "set_ztick": [17, 63], "generalized_free_support_barycent": 17, "elev": 17, "_init": 17, "init_func": 17, "frame": 17, "136": [17, 45, 60], "blit": 17, "59": [17, 18, 42, 60, 77, 81, 85, 86, 97, 98, 99, 100], "409": [17, 18, 99, 100], "plot_generalized_free_support_barycent": [17, 18, 100], "02": [18, 19, 25, 26, 28, 32, 34, 38, 43, 51, 52, 54, 60, 61, 64, 67, 70, 88, 100], "607": 18, "demo": [18, 39, 70, 78, 85, 95, 98, 100], "debias": [18, 39, 73, 75, 78, 95, 97, 98, 99, 100], "convolut": [18, 39, 73, 75, 97, 99, 100], "free": [18, 39, 71, 72, 73, 75, 85, 88, 97, 99, 100], "introduc": [19, 20, 21, 22, 23, 25, 27, 98, 99], "otda": [19, 22, 23, 28, 39, 77, 78, 95, 99, 100], "current": [19, 72, 73, 76, 77, 83, 87, 90, 92, 97, 99], "stanisla": [19, 20, 21, 25, 26, 27, 73, 97], "chambon": [19, 20, 21, 25, 26, 27, 73, 97], "stan": [19, 20, 21, 25, 26, 27], "3gauss": [19, 21, 23, 27], "3gauss2": [19, 21, 23, 27], "ot_emd": [19, 20, 21, 23, 26, 53, 98], "da": [19, 20, 21, 22, 23, 24, 25, 26, 27, 73, 86, 98, 99], "emdtransport": [19, 20, 21, 23, 26, 98, 99], "ot_sinkhorn": [19, 20, 21, 22, 23, 26, 53], "sinkhorntransport": [19, 20, 21, 22, 23, 26, 27, 98], "ot_lpl1": [19, 21], "sinkhornlpl1transport": [19, 21, 98, 99], "reg_cl": [19, 21, 77], "1e0": [19, 21, 25, 26, 43], "l1l2": [19, 77], "ot_l1l2": 19, "sinkhornl1l2transport": [19, 98, 99], "2e0": 19, "transp_xs_emd": [19, 20, 21, 23, 26], "transp_xs_sinkhorn": [19, 20, 21, 23, 26], "transp_xs_lpl1": [19, 21], "transp_xs_l1l2": 19, "747": [19, 21, 23], "763061e": 19, "000000e": [19, 25, 26, 31, 32, 34, 60], "081861e": 19, "689583e": 19, "681200e": 19, "862280e": 19, "179100e": 19, "195813e": 19, "821987e": 19, "211501e": 19, "029326e": 19, "808932e": 19, "216608e": 19, "305436e": 19, "792762e": 19, "019666e": 19, "617012e": 19, "785968e": 19, "804295e": 19, "794348e": 19, "778259e": 19, "335304e": 19, "709292e": 19, "772608e": 19, "187777e": 19, "650678e": 19, "768734e": 19, "190456e": 19, "874332e": 19, "768700e": 19, "876119e": 19, "318292e": 19, "767482e": 19, "894485e": 19, "218588e": 19, "765491e": 19, "127725e": 19, "990989e": 19, "762434e": 19, "734384e": 19, "056738e": 19, "14": [19, 24, 26, 36, 42, 43, 46, 52, 53, 60, 67, 74, 77, 83, 86, 97, 98, 100], "759833e": 19, "478250e": 19, "601472e": 19, "758374e": 19, "294698e": 19, "458518e": 19, "757601e": 19, "396351e": 19, "727032e": 19, "756624e": 19, "562652e": 19, "771489e": 19, "754377e": 19, "281229e": 19, "247758e": 19, "753747e": 19, "587988e": 19, "292424e": 19, "753162e": 19, "336538e": 19, "849492e": 19, "param_img": [19, 23], "coupling_": [19, 21, 22, 23, 27, 77], "nemdtransport": [19, 21, 23, 27], "nsinkhorntransport": [19, 21, 23, 27], "nsinkhornlpl1transport": [19, 21], "nsinkhornl1l2transport": 19, "transp": [19, 21, 23, 24, 27, 69], "479": [19, 28, 45, 100], "plot_otda_class": [19, 28, 100], "present": [20, 25, 27, 68, 72], "transfer": [20, 98], "ferradan": [20, 26, 60, 77, 87, 97, 98], "papadaki": [20, 26, 60, 77, 87, 97, 98], "peyr": [20, 26], "aujol": [20, 26, 60, 77, 87, 97, 98], "2014": [20, 26, 60, 75, 77, 85, 87, 97, 98], "1853": [20, 26, 60, 77, 87, 97, 98], "1882": [20, 26, 60, 77, 87, 97, 98], "im2mat": [20, 24, 26, 35], "pixel": [20, 24, 35], "per": [20, 24, 26, 35, 55, 85, 92], "mat2im": [20, 24, 26], "back": [20, 24, 26, 72, 77, 86], "minmax": [20, 24, 26], "clip": [20, 24, 26, 74], "ocean_dai": [20, 24, 26], "jpg": [20, 24, 26], "256": [20, 24, 26], "ocean_sunset": [20, 24, 26], "idx1": [20, 26], "idx2": [20, 26], "ylabel": [20, 26, 31, 36, 41, 53, 62, 63, 69], "predict": [20, 42, 77, 83, 86], "out": [20, 25, 33, 77, 91], "transp_xt_emd": 20, "inverse_transform": [20, 24, 77, 98], "transp_xt_sinkhorn": 20, "i1t": [20, 24], "i2t": [20, 24], "557": [20, 28, 100], "plot_otda_color_imag": [20, 28, 100], "explicit": [21, 27, 71, 77, 95], "some": [21, 27, 67, 72, 73, 77, 85, 88, 95, 97, 98, 99], "quantiti": [21, 27, 36], "greater": [21, 27, 99], "coeffici": [21, 27, 36, 75, 76, 83, 85, 87, 90], "give": [21, 27, 53, 69, 72, 74, 83, 90, 99], "understand": [21, 27], "what": [21, 27, 71, 72, 98], "n_samples_sourc": [21, 27], "n_samples_target": [21, 27], "main": [21, 72, 85, 98, 99], "765": [21, 28, 45, 100], "plot_otda_d2": [21, 28, 100], "ievgen": [22, 23, 73, 75, 77, 97], "redko": [22, 23, 40, 47, 73, 75, 76, 77, 97], "st": [22, 23, 79], "etienn": [22, 23], "1985": 22, "dec1": 22, "dec2": 22, "pt": 22, "dect": 22, "ys1": 22, "2gauss_prop": 22, "bia": [22, 25, 26, 77, 81, 86], "ys2": 22, "all_xr": 22, "all_yr": 22, "plot_ax": 22, "dec": 22, "set1": 22, "2f": [22, 53], "85": [22, 60, 99], "046431138906241": 22, "129455496299416": 22, "print_g": 22, "jcpottransport": 22, "ws1": 22, "proportions_": [22, 77], "log_": [22, 77], "d2": [22, 40, 47], "ws2": 22, "prop": [22, 88], "err": [22, 32, 34, 54, 67], "069551e": 22, "h_re": 22, "1f": 22, "729": [22, 28, 100], "plot_otda_jcpot": [22, 28, 100], "ot_emd_laplac": 23, "emdlaplacetransport": 23, "reg_lap": [23, 77], "reg_src": [23, 77], "transp_xs_emd_laplac": 23, "1149": 23, "runtimewarn": [23, 32, 34, 59, 66], "overflow": [23, 66, 97, 99], "encount": [23, 32, 34, 59, 66], "nemdlaplacetransport": 23, "989": [23, 28, 100], "plot_otda_laplacian": [23, 28, 100], "anglet": 24, "ae": 24, "empirical_bures_wasserstein_map": 24, "xst": 24, "agw": 24, "bgw": 24, "empirical_gaussian_gromov_wasserstein_map": 24, "xstgw": 24, "lineartransport": [24, 98], "lineargwtransport": 24, "xtsgw": 24, "i1tgw": 24, "i2tgw": 24, "invers": [24, 30, 32, 37, 68, 74, 77, 85, 90], "790": [24, 28, 32, 100], "plot_otda_linear_map": [24, 28, 100], "mappingtransport": [25, 26, 98], "perrot": [25, 26, 73, 77, 86, 97, 98], "habrard": [25, 26, 77, 86, 97, 98], "xs_new": 25, "ot_mapping_linear": [25, 26], "transp_xs_linear": 25, "transp_xs_linear_new": 25, "ot_mapping_gaussian": [25, 26], "transp_xs_gaussian": 25, "transp_xs_gaussian_new": 25, "delta": [25, 26, 47, 90], "190105e": 25, "170411e": 25, "700201e": 25, "169845e": 25, "356805e": 25, "169664e": 25, "344581e": 25, "169558e": 25, "549048e": 25, "169490e": 25, "619901e": 25, "169453e": 25, "982881e": 25, "208325e": 25, "153391e": 25, "305356e": 25, "150638e": 25, "628072e": 25, "149220e": 25, "416721e": 25, "148278e": 25, "270372e": 25, "147579e": 25, "685396e": 25, "147070e": 25, "226155e": 25, "146654e": 25, "002728e": 25, "146340e": 25, "575830e": 25, "146055e": 25, "889490e": 25, "145822e": 25, "605308e": 25, "bari": [25, 29, 45], "031": [25, 28, 100], "plot_otda_map": [25, 28, 100], "image_emd": 26, "image_sinkhorn": 26, "x1tl": 26, "image_mapping_linear": 26, "x1tn": 26, "image_mapping_gaussian": 26, "797245e": 26, "758014e": 26, "182822e": 26, "757026e": 26, "620752e": 26, "756521e": 26, "875691e": 26, "756218e": 26, "725224e": 26, "756015e": 26, "153553e": 26, "755868e": 26, "348118e": 26, "755759e": 26, "234582e": 26, "755673e": 26, "893582e": 26, "755604e": 26, "942771e": 26, "755547e": 26, "206000e": 26, "755500e": 26, "695056e": 26, "755460e": 26, "307154e": 26, "755426e": 26, "944208e": 26, "755395e": 26, "715960e": 26, "755369e": 26, "515613e": 26, "755345e": 26, "367864e": 26, "755324e": 26, "197885e": 26, "755305e": 26, "071067e": 26, "755303e": 26, "898122e": 26, "842001e": 26, "780145e": 26, "358084e": 26, "778490e": 26, "296544e": 26, "777841e": 26, "648247e": 26, "777495e": 26, "948923e": 26, "777284e": 26, "184075e": 26, "777135e": 26, "396988e": 26, "777027e": 26, "059322e": 26, "776945e": 26, "619816e": 26, "776880e": 26, "672789e": 26, "776827e": 26, "971430e": 26, "plot_otda_mapping_colors_imag": [26, 28, 100], "ot_sinkhorn_un": 27, "transp_xs_sinkhorn_un": 27, "ot_sinkhorn_semi": 27, "transp_xs_sinkhorn_semi": 27, "modifi": 27, "involv": [27, 72], "infinit": [27, 77], "daili": 27, "element": [27, 29, 53, 74, 75, 77, 83, 85, 90, 95], "recal": [27, 90], "cost_": [27, 77], "exhibit": [27, 77], "nunsupervis": 27, "nsemi": 27, "897": [27, 28, 100], "plot_otda_semi_supervis": [27, 28, 100], "28": [28, 43, 60, 88, 90, 97, 98, 99], "767": 28, "multi": [28, 39, 73, 74, 75, 77, 78, 85, 95, 97, 98, 99, 100], "shift": [28, 39, 75, 77, 78, 95, 97, 98, 99, 100], "laplacian": [28, 39, 73, 77, 78, 95, 97, 98, 100], "unsupervis": [28, 39, 77, 78, 95, 98, 100], "supervis": [28, 39, 75, 77, 78, 95, 97, 98, 99, 100], "networkx": [29, 30, 32, 33, 36, 37], "nx": [29, 33, 74, 83, 84, 85, 87, 95, 99], "csgraph": 29, "shortest_path": 29, "mcol": 29, "fgw_barycent": [29, 83, 98, 99], "find_thresh": 29, "sup": 29, "trick": [29, 88, 98], "adequ": 29, "sai": 29, "connect": [29, 30, 32, 36, 37], "linesearch": [29, 83, 87, 99], "reconstruct": [29, 36, 83, 92, 99], "come": [29, 72, 86, 98, 99], "n_node": [29, 33, 36, 82], "begin": [29, 77, 85, 86, 90], "thresh": 29, "cprime": 29, "sp_to_adjac": 29, "sc": 29, "argmin": [29, 30, 32, 37, 42, 74, 77, 86], "threshinf": 29, "threshsup": 29, "minimum": [29, 74, 77, 83, 85, 87, 98, 99], "new": [29, 42, 74, 77, 86, 95, 98], "zeros_lik": 29, "fill_diagon": [29, 36], "build_noisy_circular_graph": 29, "with_nois": 29, "structure_nois": 29, "noisi": [29, 47], "add_nodes_from": 29, "add_nod": [29, 30, 32, 37], "attr_nam": 29, "add_edg": [29, 30, 32, 37], "randomint": 29, "graph_color": 29, "nx_graph": 29, "cnorm": 29, "cpick": 29, "scalarmapp": 29, "set_arrai": 29, "val_map": 29, "get_node_attribut": 29, "to_rgba": 29, "ad": [29, 30, 32, 47, 72, 74, 77, 81, 85, 88, 90, 95, 98, 99], "plot_barycenter_fgw": [29, 38, 100], "93": [29, 36, 60, 99], "deprecationwarn": 29, "extract": [29, 53, 74, 95], "singl": [29, 32, 35, 77, 83, 86, 97], "your": [29, 72, 97, 98], "oper": [29, 32, 34, 72, 77, 79, 81, 85, 86, 97, 98], "109": [29, 60], "po": [29, 30, 32, 33, 35, 37, 77], "kamada_kawai_layout": 29, "draw": 29, "node_color": [29, 30, 32, 33, 37], "with_label": [29, 33], "node_s": [29, 30, 32, 37], "indic": [29, 33, 41, 72, 74, 82, 85, 90, 95], "adjacency_matrix": 29, "todens": [29, 74], "sizebari": 29, "from_numpy_arrai": 29, "544": [29, 38, 99, 100], "sr": [30, 37, 87, 99], "g1": [30, 32, 37, 57], "g2": [30, 32, 37, 57], "reweigh": [30, 37], "srgw": [30, 37, 83], "These": [30, 37, 72], "endow": [30, 32, 37], "srfgw": [30, 37, 83], "cedvincentcuaz": [30, 32, 34, 37], "entropic_semirelaxed_gromov_wasserstein": [30, 83], "entropic_semirelaxed_fused_gromov_wasserstein": [30, 83], "commun": [30, 32, 36, 37, 71, 98], "stochastic_block_model": [30, 32, 36, 37], "n3": [30, 32, 37], "g3": [30, 32, 37], "to_numpy_arrai": [30, 32, 36, 37], "h3": [30, 32, 37], "edg": [30, 32, 33, 37, 82], "weight_intra_g2": [30, 32, 37], "weight_inter_g2": [30, 32, 37], "weight_intra_g3": [30, 32, 37], "weight_inter_g3": [30, 32, 37], "weightedg2": [30, 32, 37], "part_g2": [30, 32, 37], "weightedg3": [30, 32, 37], "part_g3": [30, 32, 37], "srgw_e": 30, "ot_23": [30, 37], "log_23": [30, 37], "srgw_23": [30, 37], "srgw_dist": [30, 37], "ot_32": [30, 37], "log_32": [30, 37], "srgw_32": [30, 37], "2560185185185185": [30, 37], "06000000014822844": 30, "1577777782120945": 30, "adjust": [30, 32], "intens": [30, 32, 36], "proportionali": [30, 32], "sent": [30, 32, 98], "draw_graph": [30, 32, 37], "nodes_color_part": [30, 32, 37], "gweight": [30, 32, 37], "edge_color": [30, 32, 37], "shiftx": [30, 32, 37], "spring_layout": [30, 32, 33, 37], "alpha_edg": [30, 32, 37], "width_edg": [30, 32, 37], "draw_networkx_edg": [30, 32, 37], "visibl": [30, 32, 37, 99], "activ": [30, 32, 37, 74, 75, 90], "edgelist_activ": [30, 32, 37], "edgelist_deactiv": [30, 32, 37], "edgelist": [30, 32, 37], "draw_networkx_nod": [30, 32, 37], "nodelist": [30, 32, 33, 37], "scaled_gweight": [30, 32, 37], "nodes_s": [30, 32, 37], "draw_transp_colored_srgw": [30, 37], "part_g1": [30, 32, 37], "pos1": [30, 32, 37], "pos2": [30, 32, 37], "switchx": [30, 32, 37], "seed_g1": [30, 32, 37], "seed_g2": [30, 32, 37], "starting_color": [30, 32, 37], "partit": [30, 32, 37, 42, 77, 86], "part1": [30, 32, 37], "unique_color": [30, 32, 37], "uniqu": [30, 32, 37, 41, 74, 85, 98], "nodes_color_part1": [30, 32, 37], "nodes_color_part2": [30, 32, 37], "assign": [30, 32, 36, 37, 75, 76, 82, 83], "k1": [30, 32, 37], "max_tk1": [30, 32], "k2": [30, 32, 37], "seed_g3": [30, 32, 37], "121": [30, 33, 34, 37, 53, 60, 67, 99], "h_2": [30, 37, 83], "c_3": [30, 37, 86], "hbar2": [30, 37], "122": [30, 33, 34, 37, 53, 60, 67, 99], "hbar3": [30, 37], "h_3": [30, 37], "intra": [30, 32, 36, 37, 88], "fgw_alpha": [30, 37], "fgw_dist": [30, 32, 37, 83], "srfgw_e": 30, "srfgw_23": [30, 37], "srfgw_dist": [30, 37], "srfgw_32": [30, 37], "3808950805674537": 30, "0325729126416439": 30, "24125701598915783": 30, "f_2": [30, 37, 83], "f_3": [30, 37], "372": [30, 38, 99, 100], "plot_entropic_semirelaxed_fgw": [30, 38, 100], "sig": 31, "sig2": 31, "phi": [31, 42, 77, 85, 86, 90], "phi2": 31, "a_i": [31, 75, 85, 98], "b_j": [31, 75, 85, 98], "w1": [31, 79], "w2": [31, 59, 79], "got": 31, "l_x": 31, "l_y": 31, "gridspec": 31, "set_aspect": 31, "auto": [31, 41], "ax3": [31, 35, 67], "sharex": 31, "gwg": 31, "logw": 31, "reload_ext": 31, "wgw": 31, "734412e": 31, "508254e": 31, "875326e": 31, "226158e": 31, "189327e": 31, "456740e": 31, "189279e": 31, "622743e": 31, "552714e": 31, "0016548633575439453": 31, "683978e": 31, "860061e": 31, "134468e": 31, "239175e": 31, "182948e": 31, "682787e": 31, "677113e": 31, "visu": 31, "645": [31, 38, 100], "plot_fgw": [31, 38, 100], "attribut": [32, 74, 77, 83, 95, 99], "altern": [32, 53, 72, 83, 86, 98, 99], "63": [32, 60, 83, 97], "64": [32, 60, 83, 97, 99], "further": [32, 53, 71, 72, 99], "xu": [32, 34, 83, 97], "luo": [32, 34, 83, 97], "zha": [32, 34, 83, 97], "duke": [32, 34, 83, 97], "li": [32, 83, 97], "tang": [32, 83, 97], "kong": [32, 83, 97], "liu": [32, 83, 92, 97], "blanchet": [32, 83, 97], "ma": [32, 79, 83, 97, 98], "chu": [32, 83, 97], "wang": [32, 83, 97], "lin": [32, 83, 97], "zhao": [32, 83, 97], "zhu": [32, 83, 97], "mixup": [32, 83, 97], "level": [32, 34, 71, 75, 77, 78, 83, 95, 97, 98], "classif": [32, 38, 39, 78, 83, 97, 99, 100], "thirti": [32, 83, 97], "seventh": [32, 83, 97], "entropic_fused_gromov_wasserstein": [32, 83], "bapg_fused_gromov_wasserstein": [32, 83], "add": [32, 36, 67, 72, 85, 88, 95, 99], "start_cg": 32, "t_cg": 32, "log_cg": 32, "end_cg": 32, "time_cg": 32, "proxim": [32, 34, 83, 99], "start_ppa": 32, "t_ppa": 32, "log_ppa": 32, "ppa": [32, 34, 83, 99], "end_ppa": 32, "time_ppa": 32, "start_pgd": 32, "t_pgd": 32, "log_pgd": 32, "pgd": [32, 34, 83], "end_pgd": 32, "time_pgd": 32, "start_bapg": 32, "t_bapg": 32, "log_bapg": 32, "marginal_loss": [32, 83], "end_bapg": 32, "time_bapg": 32, "sparsiti": [32, 34, 36, 55, 83, 92, 97, 98, 99], "t_cg_sparsiti": 32, "t_ppa_spars": 32, "t_pgd_sparsiti": 32, "t_bapg_spars": 32, "tend": [32, 34, 53], "produc": [32, 34, 85], "feasibl": [32, 34, 85], "err_cg": 32, "err_ppa": 32, "err_pgd": 32, "err_bapg": 32, "271184e": 32, "211305e": 32, "640431e": 32, "059879e": 32, "024660e": 32, "637523e": 32, "866445e": 32, "936346e": 32, "243555e": 32, "831410e": 32, "891614e": 32, "149450e": 32, "473216e": 32, "854134e": 32, "724554e": 32, "747973e": 32, "850574e": 32, "244899e": 32, "559817e": 32, "841819e": 32, "279017e": 32, "755571e": 32, "819396e": 32, "870728e": 32, "242264e": 32, "784264e": 32, "283767e": 32, "513222e": 32, "772225e": 32, "191339e": 32, "203845e": 32, "764565e": [32, 60], "034974e": 32, "660790e": 32, "761179e": 32, "000610e": 32, "385291e": 32, "536990e": 32, "472502e": 32, "129779e": 32, "936118e": 32, "334121e": 32, "852583e": 32, "134797e": 32, "177453e": 32, "236970e": 32, "465712e": 32, "858590e": 32, "312306e": 32, "789776e": 32, "493878e": 32, "029873e": 32, "095678e": 32, "177744e": 32, "257392e": 32, "242762e": 32, "125684e": 32, "770321e": 32, "368455e": 32, "094853e": 32, "159374e": 32, "564338e": 32, "974174e": 32, "297098e": 32, "639787e": 32, "106686e": 32, "716049e": 32, "433353e": 32, "227167e": 32, "080617e": 32, "980812e": 32, "912468e": 32, "858901e": 32, "805235e": 32, "740559e": 32, "658655e": 32, "557834e": 32, "440242e": 32, "310793e": 32, "175881e": 32, "1152": [32, 34], "divid": [32, 34, 53, 59, 66], "042086e": 32, "151311e": 32, "992882e": 32, "972309e": 32, "101506e": 32, "379844e": 32, "797194e": 32, "337741e": 32, "510": 32, "984020e": 32, "520": [32, 99], "720212e": 32, "530": [32, 99], "534028e": 32, "540": 32, "417109e": 32, "550": 32, "364311e": 32, "560": 32, "372351e": 32, "570": [32, 99], "438312e": 32, "580": 32, "558368e": 32, "590": 32, "726958e": 32, "600": [32, 45], "936418e": 32, "610": [32, 99], "176966e": 32, "620": 32, "436877e": 32, "630": 32, "702796e": 32, "640": 32, "960175e": 32, "650": 32, "193888e": 32, "389046e": 32, "670": 32, "531979e": 32, "680": 32, "611295e": 32, "690": 32, "618871e": 32, "700": [32, 45], "550627e": 32, "710": 32, "406954e": 32, "720": 32, "192695e": 32, "730": [32, 88, 97, 98], "916691e": 32, "740": 32, "590932e": 32, "750": 32, "229430e": 32, "760": 32, "846976e": 32, "770": 32, "457933e": 32, "780": 32, "075230e": 32, "709643e": 32, "369414e": 32, "810": [32, 45], "060184e": 32, "820": 32, "785186e": 32, "830": 32, "545590e": 32, "840": 32, "340916e": 32, "850": 32, "169442e": 32, "860": 32, "028566e": 32, "870": 32, "150926e": 32, "880": 32, "254840e": 32, "890": 32, "560795e": 32, "900": [32, 45], "033105e": 32, "910": 32, "638947e": 32, "920": 32, "349865e": 32, "930": 32, "142583e": 32, "940": 32, "999120e": 32, "950": 32, "906371e": 32, "960": 32, "855388e": 32, "970": 32, "840590e": 32, "980": 32, "859006e": 32, "990": 32, "909627e": 32, "981055e": 32, "110756e": 32, "139916e": 32, "158952e": 32, "159648e": 32, "159715e": 32, "159728e": 32, "159732e": 32, "159733e": 32, "710197e": 32, "722091e": 32, "141907e": 32, "705361e": 32, "217013e": 32, "780133e": 32, "754405e": 32, "618865e": 32, "155365e": 32, "467885e": 32, "234502e": 32, "427166e": 32, "580081e": 32, "480216e": 32, "016301e": 32, "489908e": 32, "527976e": 32, "724086e": 32, "505381e": 32, "890667e": 32, "660689e": 32, "596126e": 32, "580415e": 32, "573214e": 32, "554877e": 32, "506710e": 32, "413884e": 32, "273670e": 32, "099326e": 32, "144168e": 32, "415348e": 32, "942604e": 32, "761838e": 32, "844073e": 32, "135983e": 32, "585715e": 32, "152819e": 32, "808727e": 32, "533873e": 32, "314610e": 32, "140922e": 32, "004962e": 32, "001810e": 32, "208638e": 32, "619328e": 32, "189212e": 32, "880145e": 32, "660812e": 32, "506527e": 32, "398538e": 32, "323025e": 32, "270041e": 32, "232558e": 32, "205670e": 32, "185991e": 32, "171195e": 32, "159695e": 32, "150412e": 32, "142611e": 32, "135798e": 32, "129637e": 32, "123902e": 32, "118440e": 32, "113149e": 32, "107960e": 32, "102825e": 32, "097715e": 32, "092609e": 32, "087492e": 32, "082355e": 32, "077194e": 32, "072003e": 32, "066779e": 32, "061523e": 32, "056231e": 32, "050905e": 32, "045543e": 32, "040145e": 32, "034711e": 32, "029242e": 32, "023737e": 32, "018197e": 32, "012621e": 32, "007010e": 32, "001365e": 32, "995684e": 32, "989968e": 32, "984218e": 32, "978434e": 32, "972615e": 32, "966762e": 32, "960875e": 32, "954955e": 32, "949001e": 32, "943013e": 32, "936992e": 32, "930938e": 32, "924851e": 32, "918731e": 32, "912579e": 32, "3761179313933098": 32, "3671471715862439": 32, "21736592892258028": 32, "2576635020911173": 32, "proportionn": 32, "draw_transp_colored_gw": 32, "141": [32, 60, 85, 97, 99], "marg": 32, "runtim": 32, "142": [32, 60, 99], "143": [32, 60, 99], "144": [32, 60, 99], "bapg": [32, 99], "046": [32, 38, 100], "plot_fgw_solv": [32, 38, 100], "gnn": [33, 73, 97, 99], "templat": [33, 46, 73, 82, 97, 99], "53": [33, 60, 82, 97], "sonia": [33, 73], "mazelet": [33, 73], "en": [33, 98], "random_split": 33, "torch_geometr": 33, "loader": 33, "dataload": 33, "to_networkx": 33, "one_hot": 33, "stochastic_blockmodel_graph": 33, "graphdata": 33, "gcnconv": 33, "tfgwpool": [33, 82], "tsne": 33, "n_graph": [33, 82], "n_node_class": 33, "block_sizes1": 33, "block_sizes2": 33, "num_class": 33, "graphs1": 33, "edge_index": [33, 82], "graphs2": 33, "split": [33, 42, 79], "train_graph": 33, "test_graph": 33, "train_load": 33, "shuffl": [33, 41], "test_load": 33, "to_undirect": 33, "draw_networkx": 33, "tab": 33, "pooling_tfgw": 33, "n_templat": [33, 82], "n_template_nod": [33, 82], "n_class": [33, 77], "n_hidden_lay": 33, "feature_init_mean": [33, 82], "feature_init_std": [33, 82], "conv": 33, "x_latent": 33, "latent": 33, "n_epoch": 33, "store": [33, 77, 95], "embeddings_for_tsn": 33, "weight_decai": 33, "0005": 33, "crossentropyloss": 33, "all_accuraci": 33, "all_loss": 33, "epoch": [33, 36, 83], "acc": 33, "latent_embed": 33, "pred": 33, "train_correct": 33, "train_acc": 33, "4f": 33, "accuraci": [33, 75], "test_acc": 33, "test_correct": 33, "hstack": [33, 43], "000": 33, "6519": 33, "5200": 33, "001": [33, 36, 49, 57, 75, 77, 79, 86, 92], "6222": 33, "7400": 33, "002": 33, "5858": 33, "0000": 33, "003": 33, "5570": 33, "5235": 33, "9800": 33, "4945": 33, "9600": 33, "006": 33, "4595": 33, "007": 33, "4248": 33, "008": 33, "3867": 33, "009": 33, "3455": 33, "010": 33, "3008": 33, "011": 33, "2525": 33, "012": 33, "2050": 33, "013": 33, "1598": 33, "014": 33, "1277": 33, "015": 33, "1046": 33, "016": 33, "0875": 33, "017": 33, "0725": 33, "018": 33, "0554": 33, "019": 33, "0355": 33, "020": 33, "0194": 33, "0095": 33, "022": 33, "0052": 33, "023": 33, "0047": 33, "024": 33, "0054": [33, 45], "tsne_embed": 33, "n_compon": [33, 35], "perplex": 33, "class_0": 33, "class_1": 33, "tsne_embeddings_0": 33, "tsne_embeddings_1": 33, "after": [33, 43, 45, 97], "075": [33, 38, 100], "plot_gnn_tfgw": [33, 38, 100], "compar": [34, 42, 49, 53, 72, 77, 98], "Then": [34, 36, 59, 85, 98], "kerdoncuff": [34, 73, 83, 97, 98], "emonet": [34, 83, 97, 98], "marc": [34, 83, 97, 98], "mjl": [34, 97, 98], "erwan": [34, 35, 73], "vautier": [34, 35, 73], "lapost": 34, "net": 34, "sp": [34, 35, 45, 67, 88], "demonstr": [34, 67, 72, 99], "purpos": [34, 67, 98], "cov_": [34, 44, 56, 62, 67, 68, 69, 81], "cov_t": [34, 44, 56, 62, 67, 68, 69, 81], "make_2d_samples_gauss": [34, 44, 56, 62, 67, 68, 69], "sqrtm": [34, 67, 74], "gw0": 34, "log0": [34, 67], "entropic_gromov_wasserstein": [34, 83, 98], "gwe": 34, "loge": 34, "gw0_sparsiti": 34, "gw_sparsiti": 34, "gwe_spars": 34, "err0": 34, "131": [34, 60, 67], "algo": [34, 53, 75], "132": [34, 60, 67, 99], "nfeasibl": 34, "133": [34, 60, 67], "606056e": 34, "330020e": 34, "022552e": 34, "276036e": 34, "023674e": 34, "098033e": 34, "063453e": 34, "820952e": 34, "205038e": 34, "027228e": 34, "501837e": 34, "088545e": 34, "191147e": 34, "684324e": 34, "209223e": 34, "076331e": 34, "140465e": 34, "876462e": 34, "040056e": 34, "334508e": 34, "018997e": 34, "123553e": 34, "184445e": 34, "0450183690192505": 34, "037612941478320075": 34, "03823623173438275": 34, "pgw": 34, "plog": 34, "pointwise_gromov_wasserstein": [34, 83], "sgw": 34, "slog": [34, 75], "sampled_gromov_wasserstein": [34, 83], "pointwis": [34, 99], "gw_dist_estim": 34, "gw_dist_std": 34, "toarrai": [34, 74, 90], "18551015414186553": 34, "14981263716330115": 34, "0013724960658236956": 34, "896": [34, 38, 100], "plot_gromov": [34, 38, 100], "pca": [35, 99], "smacof_md": 35, "3000": [35, 45], "stress": 35, "declar": 35, "npo": 35, "isometri": 35, "n_init": 35, "embedding_": 35, "nmd": 35, "cross": 35, "triangl": 35, "star": 35, "lambdast": 35, "ct01": 35, "ct02": 35, "ct13": 35, "ct23": 35, "help": [35, 72, 85, 98, 99], "consist": [35, 72, 74, 75, 85, 86, 98], "rotat": [35, 53], "npost01": 35, "npost02": 35, "npost13": 35, "npost23": 35, "ax4": 35, "ax5": 35, "ax6": 35, "ax7": 35, "ax8": 35, "ax9": 35, "ax10": 35, "ax11": 35, "ax12": 35, "0x7f045515b100": 35, "368": [35, 38, 60, 61, 100], "plot_gromov_barycent": [35, 38, 100], "denot": [36, 53, 75, 77, 85, 86], "c_": [36, 53, 83], "p_": [36, 83], "combin": [36, 98], "sigma_d": 36, "sum_d": [36, 83], "vari": 36, "extens": [36, 97, 99], "aforement": 36, "unattribut": 36, "uniformli": 36, "cedric": 36, "inria": [36, 41, 65, 66], "gromov_wasserstein_linear_unmix": [36, 83], "gromov_wasserstein_dictionary_learn": [36, 83], "fused_gromov_wasserstein_linear_unmix": [36, 83], "fused_gromov_wasserstein_dictionary_learn": [36, 83], "inter": 36, "nlabel": 36, "p_inter": 36, "p_intra": 36, "n_cluster": 36, "high": [36, 72, 85], "int32": 36, "idx_c": 36, "plot_gromov_wasserstein_dictionary_learn": [36, 38, 100], "promot": [36, 83, 98], "cdict_gw": 36, "learning_r": [36, 83], "nonnegative_symmetr": [36, 83], "tol_out": [36, 83], "tol_inn": [36, 83], "max_iter_out": [36, 83], "max_iter_inn": [36, 83], "use_log": [36, 83], "use_adam_optim": [36, 83], "loss_epoch": 36, "cumul": [36, 74], "953112610254339": 36, "870506085615615": 36, "586919304261687": 36, "321169703260051": 36, "137666349304383": 36, "511267738804133": 36, "4705867381721": 36, "479482336491914": 36, "38487532808975": 36, "284150029686458": 36, "shade": 36, "dark": [36, 99], "white": 36, "idx_atom": 36, "scaled_atom": 36, "reconstruction_error": 36, "cembed": [36, 83], "unmixings2d": 36, "extrem": 36, "linewidth": [36, 41, 48, 63], "979234027346345": 36, "hot": 36, "encod": [36, 77, 95], "dataset_featur": 36, "cdict_fgw": 36, "ydict_fgw": 36, "learning_rate_c": [36, 83], "learning_rate_i": [36, 83], "515908087775927": 36, "686020543856817": 36, "33895332036806": 36, "924912177011792": 36, "982701561389539": 36, "655073121586973": 36, "68533848944199": 36, "558219865468751": 36, "4610797336980896": 36, "3314490965030394": 36, "max_featur": 36, "min_featur": 36, "catom": 36, "fatom": 36, "scaled_f": 36, "yembed": [36, 83], "122943089716582": 36, "semirelaxed_gromov_wasserstein": [37, 83], "semirelaxed_fused_gromov_wasserstein": [37, 83], "105007529006411": 37, "18000000000000005": 37, "3801783670429393": 37, "04004733478713954": 37, "24196480586404343": 37, "plot_semirelaxed_fgw": [37, 38, 100], "475": 38, "tempat": [38, 39, 100], "comparison": [38, 39, 53, 60, 98, 100], "introduct": [39, 61, 98, 100], "row": [39, 52, 74, 75, 76, 83, 85, 90, 95, 100], "align": [39, 52, 71, 76, 77, 81, 85, 98, 100], "discrimin": [39, 52, 79, 97, 99, 100], "logo": [39, 52, 98, 99, 100], "toolbox": [39, 52, 73, 98, 99, 100], "brenier": [39, 52, 77, 86, 97, 98, 99, 100], "mmot": [39, 52, 78, 85, 98, 100], "compon": [39, 42, 52, 77, 79, 95, 97, 98, 99, 100], "auto_examples_python": 39, "auto_examples_jupyt": 39, "arbitrari": 40, "n_1": [40, 47], "d_1": [40, 47], "n_2": [40, 47], "d_2": [40, 47], "quang": [40, 47], "hui": [40, 47], "tran": [40, 47], "connectionpatch": [40, 47], "coot": [40, 95], "co_optimal_transport": [40, 47], "co_optimal_transport2": [40, 47], "coot2": [40, 47], "d1": [40, 47], "pi_sampl": [40, 47, 76], "pi_featur": [40, 47, 76], "coot_dist": 40, "5f": 40, "yaxi": [40, 41, 47], "tick_right": [40, 47], "xaxi": [40, 47], "tick_top": [40, 47], "xya": [40, 47], "xyb": [40, 47], "con": [40, 47], "coordsa": [40, 47], "transdata": [40, 47], "coordsb": [40, 47], "10903416567681642": 40, "0987568083692249": 40, "09685398028260428": 40, "09685": 40, "519": [40, 52, 100], "plot_coot": [40, 52, 100], "colla": [41, 79, 97], "breloi": [41, 79, 97], "antoin": [41, 73, 92, 97], "make_blob": 41, "ticker": 41, "mticker": 41, "esp": 41, "cluster_std": 41, "x_y_lim": 41, "linestyl": [41, 59], "pi_": [41, 79, 86], "powernorm": 41, "aspect": [41, 98], "orient": [41, 71], "vertic": [41, 48], "shrink": [41, 53], "ticks_loc": 41, "get_ytick": 41, "tolist": 41, "set_major_loc": 41, "fixedloc": 41, "set_yticklabel": 41, "get_tick": 41, "tick_param": 41, "labels": 41, "class_": 41, "idx_min": 41, "idx_max": 41, "rect": 41, "rectangl": 41, "add_patch": 41, "_n": [41, 75], "x_label": 41, "547": [41, 52, 99, 100], "plot_ewca": [41, 52, 100], "ssnb": [42, 77, 86, 99], "58": [42, 60, 77, 85, 86, 97, 99], "varphi": [42, 77, 86], "lipschitz": [42, 77, 86, 98], "nabla": [42, 77, 85, 86, 92], "approx": [42, 77, 86], "ambient": [42, 77, 95], "impos": [42, 77], "global": [42, 77, 95, 99], "unit": [42, 91, 98], "mu_x": [42, 47], "sign": [42, 46, 74, 77, 81, 99], "wish": [42, 72], "style": 42, "lbrace": 42, "rbrace": 42, "well": [42, 72, 74, 85, 86, 95, 98], "particular": [42, 99], "varphi_l": [42, 86], "varphi_u": [42, 86], "theorem": [42, 77, 81, 86, 98], "sens": [42, 53, 75, 85, 97, 98], "definit": [42, 74, 98], "e_k": [42, 77, 86], "optimis": [42, 77, 86], "amount": [42, 85, 88, 98, 99], "few": [42, 53, 99], "sinc": [42, 85, 98, 99], "quit": [42, 98, 99], "computation": 42, "expens": 42, "cvxpy": [42, 77, 86], "fran\u00e7oi": [42, 77, 86], "pierr": [42, 77, 86], "pati": [42, 77, 86, 97], "alexandr": [42, 73, 77, 86, 97], "aspremont": [42, 77, 86, 97], "page": [42, 72, 77, 86, 97, 99], "1222": [42, 77, 86, 97], "1232": [42, 77, 86, 97], "adrien": [42, 62, 73, 77, 86, 97], "taylor": [42, 77, 86, 97], "phd": [42, 77, 86, 97], "thesi": [42, 77, 86, 97], "cathol": [42, 77, 86, 97], "univers": [42, 77, 86, 97], "louvain": [42, 77, 86, 97], "la": [42, 77, 86, 97], "neuv": [42, 77, 86, 97], "belgium": [42, 77, 86, 97], "n_fitting_sampl": 42, "xs_class": 42, "dodgerblu": 42, "nearest_brenier_potential_fit": [42, 77], "init_method": [42, 86], "gradient_lipschitz_const": [42, 77, 86], "n_predict_sampl": 42, "ys_class": 42, "phi_lu": [42, 86], "g_lu": [42, 77, 86], "nearest_brenier_potential_predict_bound": [42, 77], "708": [42, 52, 67, 70, 100], "plot_ssnb": [42, 52, 100], "wda": [43, 73, 99], "fda": [43, 98], "floor": [43, 74], "nbnois": 43, "pfda": 43, "projfda": 43, "maxit": [43, 75, 79], "p0": [43, 79], "pwda": 43, "projwda": 43, "3042776946697494e": 43, "65147154e": 43, "4401037686381040e": 43, "16760501e": 43, "2234351238819928e": 43, "30555049e": 43, "2169879996364462e": 43, "39115407e": 43, "1924746118060602e": 43, "25387848e": 43, "1177409528990749e": 43, "70993539e": 43, "0862213476139048e": 43, "52716830e": 43, "0747229322240269e": 43, "34923131e": 43, "0678766065261684e": 43, "74029183e": 43, "0621337155459647e": 43, "03651803e": 43, "0577080390746939e": 43, "59605592e": 43, "0543140912472148e": 43, "28883715e": 43, "0470236926310577e": 43, "47528039e": 43, "0445628467498224e": 43, "03183254e": 43, "0364189455866245e": 43, "31006504e": 43, "0303977563823823e": 43, "39885352e": 43, "0301476238242911e": 43, "17467624e": 43, "0292344306414324e": 43, "79959907e": 43, "0271888325518124e": 43, "94408237e": 43, "0183214741002155e": 43, "98322994e": 43, "9762636217090053e": 43, "03196875e": 43, "8225627240876070e": 43, "36012863e": 43, "0855506616050116e": 43, "92702943e": 43, "8001027160864295e": 43, "01920255e": 43, "3687486090807947e": 43, "01780640e": 43, "3431203993360381e": 43, "23716793e": 43, "3118645266923005e": 43, "90753137e": 43, "3067593392325469e": 43, "02767925e": 43, "3064856262240019e": 43, "07925279e": 43, "3060699763593800e": 43, "95215754e": 43, "3060442760754873e": 43, "77368118e": 43, "3060442709529139e": 43, "34108449e": 43, "3060442708435561e": 43, "52599061e": 43, "3060442707674844e": 43, "07742368e": 43, "3060442707600512e": 43, "36125504e": 43, "termin": 43, "reach": [43, 99], "xsp": 43, "xtp": 43, "xspw": 43, "xtpw": 43, "036": [43, 52, 100], "plot_wda": [43, 52, 100], "xr": [44, 46, 56, 57, 62], "gweak": 44, "622": [44, 52, 100], "plot_weakot_vs_ot": [44, 52, 100], "quickli": [45, 53, 72, 99], "qualiti": [45, 99], "primal": [45, 85, 93], "ronak": [45, 73, 85, 97], "mehta": [45, 73, 85, 97], "ronakrm": 45, "wisc": 45, "xizheng": [45, 73], "yu": [45, 73], "xyu354": 45, "0x7f046e9ed930": 45, "l2_bari": 45, "lp_bari": 45, "lp_log": 45, "interior": [45, 85, 98], "fun": [45, 53, 95], "dmmot_monge_1dgrid_optim": [45, 85], "4000": 45, "lr_init": [45, 85], "lr_decai": [45, 85], "997": 45, "dmmot_obj": 45, "optimizewarn": 45, "detect": [45, 74, 98], "sol": [45, 99], "linprog": [45, 98], "a_eq": 45, "b_eq": 45, "302": [45, 99], "4286255836487": 45, "999774740910517": 45, "9995": 45, "gradnorm": 45, "739": 45, "7831": 45, "0914": 45, "6322": 45, "0583": 45, "434": 45, "3777": 45, "4220": 45, "252": 45, "9269": 45, "2317": 45, "168": [45, 60], "8668": 45, "2116": 45, "384": 45, "2968": 45, "1755": 45, "647": 45, "6758": 45, "1343": 45, "786": 45, "2442": 45, "1021": 45, "3703": 45, "0662": 45, "0539": 45, "741": 45, "7304": 45, "1100": 45, "0348": 45, "621": 45, "4660": 45, "1200": 45, "0338": 45, "764": 45, "3429": 45, "1300": 45, "0200": 45, "556": [45, 99], "2338": 45, "1400": 45, "0182": 45, "8329": 45, "1500": 45, "0103": 45, "579": 45, "8241": 45, "1600": 45, "0075": 45, "638": 45, "2570": 45, "1700": 45, "0045": 45, "1562": 45, "1800": 45, "0035": 45, "8625": 45, "1900": 45, "0032": 45, "1939": 45, "0022": 45, "442": 45, "4975": 45, "2100": 45, "0015": 45, "61": [45, 60, 97, 100], "0901": 45, "2200": 45, "0016": 45, "464": 45, "9430": 45, "2300": [45, 97, 98], "0014": 45, "382": 45, "5650": 45, "2400": 45, "0011": 45, "287": [45, 99], "2281": 45, "2500": 45, "355": 45, "6796": 45, "2600": 45, "0010": 45, "1357": 45, "2700": 45, "289": 45, "6964": 45, "2800": 45, "184": [45, 60, 99], "4234": 45, "2900": 45, "0009": 45, "246": 45, "5847": 45, "3299": 45, "3100": 45, "185": [45, 60], "9355": 45, "3200": 45, "263": [45, 85], "0209": 45, "3300": 45, "3132": 45, "3400": 45, "231": [45, 99], "4044": 45, "3500": 45, "226": 45, "3184": 45, "3600": 45, "211": 45, "4237": 45, "3700": 45, "233": 45, "2981": 45, "3800": 45, "299": 45, "0853": 45, "3900": 45, "262": [45, 99], "4271": 45, "2457146644592285": 45, "0008940778156514197": 45, "dmmot": 45, "0x7f046e590a30": 45, "pseudorandom": 45, "vecsiz": [45, 85], "artist": 45, "put": [45, 59], "whose": [45, 76, 81, 83, 85, 90], "underscor": 45, "argument": [45, 74, 77, 86, 87, 95, 99], "0x7f046ceca1d0": 45, "bary_log": 45, "1964": 45, "284": [45, 99], "3413": 45, "9858": 45, "3320": 45, "2204": 45, "7755": 45, "156": [45, 60, 99], "3650": 45, "4874": 45, "229": [45, 85], "6258": 45, "3684": 45, "238": [45, 99], "1008": 45, "3353": 45, "3034": 45, "2220": 45, "267": [45, 99], "4771": 45, "1678": 45, "1315": 45, "0706": 45, "271": 45, "7241": 45, "0567": 45, "269": 45, "5960": 45, "0420": 45, "8386": 45, "0345": 45, "8676": 45, "0230": 45, "8679": 45, "0145": 45, "217": [45, 99], "0122": 45, "244": 45, "9326": 45, "0089": 45, "207": [45, 99], "8076": 45, "0064": 45, "3682": 45, "208": [45, 99], "5713": 45, "0042": 45, "196": [45, 60], "3110": 45, "189": [45, 60, 99], "1930": 45, "0028": 45, "152": [45, 60], "9444": 45, "0025": 45, "154": [45, 60], "9903": 45, "0023": 45, "165": [45, 60], "5778": 45, "0020": 45, "162": [45, 60], "6161": 45, "0019": 45, "148": [45, 60, 99], "9564": 45, "0018": 45, "7780": 45, "0017": 45, "8478": 45, "145": [45, 60, 66, 99], "0931": 45, "128": [45, 60, 77, 85, 97], "1718": 45, "0x7f044e476470": 45, "025": [45, 52, 100], "plot_dmmot": [45, 52, 100], "og": 46, "456": [46, 52, 100], "plot_factored_coupl": [46, 52, 100], "mu_i": [47, 81, 98], "clean": [47, 99], "y_": [47, 77, 83], "contamin": 47, "outlier": 47, "intuit": [47, 72], "182": [47, 60], "y_noisi": 47, "nrow": 47, "ncol": 47, "wy_samp": [47, 76], "07507868": 47, "08001347": 47, "09469872": 47, "1001999": 47, "10001527": 47, "10001687": 47, "09999904": 47, "09979829": 47, "11466591": 47, "13551386": 47, "clearli": [47, 98], "complet": [47, 72, 98, 99], "successfulli": 47, "010389716046318498": 47, "plot_learning_weights_with_coot": [47, 52, 100], "letter": 48, "o1": 48, "o2": 48, "translat": 48, "t1": 48, "t2": [48, 68, 90], "horizont": 48, "sx": 48, "sy": [48, 72], "markerfacecolor": 48, "markeredgecolor": 48, "savefig": 48, "svg": 48, "dpi": 48, "transpar": 48, "bbox_inch": 48, "tight": 48, "43": [48, 60, 75, 77, 81, 85, 97, 98, 99], "375": [48, 99], "darkgrai": 48, "logo_dark": 48, "056": [48, 52, 100], "plot_logo": [48, 52, 100], "laur\u00e8n": [49, 73], "david": [49, 73], "lauren": 49, "ip": 49, "plot1d_mat": [49, 50, 51, 54, 55, 60, 65], "list_reg": 49, "list_p_sin": 49, "list_rank": 49, "list_p_lr": 49, "lowrank": [49, 95, 99], "585": [49, 52, 58, 61, 100], "plot_lowrank_sinkhorn": [49, 52, 100], "b\u00e9rar": [50, 75, 97, 98], "mokhtar": [50, 73, 97], "mokhtarzahdi": 50, "lambd": [50, 54, 55, 56], "ns_budget": [50, 75], "budget": [50, 75], "kept": [50, 75, 99], "nt_budget": [50, 75], "g_screen": 50, "restrict": [50, 75], "_screenkhorn": 50, "bottleneck": [50, 75], "instal": [50, 72, 75, 85, 98, 99], "pypi": [50, 75, 97, 99], "020986042861303855": 50, "kappa": [50, 75], "7476531411890917": 50, "cardin": [50, 75, 95], "isel": 50, "jsel": 50, "392": [50, 52, 100], "plot_screenkhorn_1d": [50, 52, 100], "librari": [51, 73, 77, 86, 97, 98, 99], "bach": [51, 93, 97, 98], "bhushan": [51, 77, 93, 97, 98], "damodaran": [51, 77, 93, 97, 98], "kilian": [51, 56, 73, 97], "n_sourc": [51, 93], "n_target": [51, 58, 93], "x_sourc": 51, "y_target": 51, "sag": [51, 93], "sag_pi": 51, "solve_semi_dual_entrop": 51, "55553509e": 51, "96395660e": 51, "76579142e": 51, "31178196e": 51, "21640234e": 51, "25357448e": 51, "30225078e": 51, "37891338e": 51, "56123975e": 51, "61451746e": 51, "31505947e": 51, "33831456e": 51, "61515202e": 51, "34246014e": 51, "28734709e": 51, "07550428e": 51, "85500870e": 51, "52288517e": 51, "08262628e": 51, "21423583e": 51, "16904253e": 51, "03825797e": 51, "87178503e": 51, "18391107e": 51, "15462212e": 51, "65987989e": 51, "23177216e": 51, "39440107e": 51, "semicontinu": 51, "asgd": [51, 93], "asgd_pi": 51, "log_asgd": 51, "beta": [51, 75, 85, 92, 93, 99], "87919564": 51, "64972912": 51, "90370867": 51, "65425719": 51, "46885467": 51, "30171991": 51, "77560865": 51, "50927934": 51, "40235686": 51, "91006054": 51, "82169674": 51, "44871332e": 51, "00795848e": 51, "75697554e": 51, "40659699e": 51, "20593540e": 51, "31205385e": 51, "34063837e": 51, "80242597e": 51, "40238837e": 51, "68032820e": 51, "26513361e": 51, "36373920e": 51, "52546195e": 51, "40772739e": 51, "31054753e": 51, "19774150e": 51, "29902872e": 51, "49410422e": 51, "06078986e": 51, "22200805e": 51, "05396464e": 51, "03575289e": 51, "84056467e": 51, "19573357e": 51, "02994053e": 51, "72385417e": 51, "28420336e": 51, "47716225e": 51, "sinkhorn_pi": 51, "55553508e": 51, "96395661e": 51, "31178193e": 51, "30225079e": 51, "37891333e": 51, "56123974e": 51, "33831455e": 51, "61515201e": 51, "07550425e": 51, "85500876e": 51, "52288523e": 51, "08262629e": 51, "16904255e": 51, "03825804e": 51, "87178504e": 51, "23177217e": 51, "39440105e": 51, "sgd": [51, 83, 93], "sgd_dual_pi": 51, "log_sgd": 51, "solve_dual_entrop": 51, "92075753": 51, "80864372": 51, "07370578": 51, "0179414": 51, "60239916": 51, "8141425": 51, "11122763": 51, "346688": 51, "47228889": 51, "57636303": 51, "9534778": 51, "21021974e": 51, "26940978e": 51, "09590373e": 51, "59858662e": 51, "65652588e": 51, "83627521e": 51, "27260904e": 51, "58648690e": 51, "49188637e": 51, "03096858e": 51, "44340331e": 51, "37764488e": 51, "14582303e": 51, "32484188e": 51, "15372556e": 51, "26187284e": 51, "79941580e": 51, "58297483e": 51, "36009581e": 51, "15632652e": 51, "07006729e": 51, "61709962e": 51, "99740394e": 51, "13377026e": 51, "88094057e": 51, "36124884e": 51, "09671824e": 51, "24045368e": 51, "537": [51, 52, 99, 100], "plot_stochast": [51, 52, 100], "586": 52, "aureli": 53, "boisbunon": [53, 97], "pip": [53, 72, 98, 99], "conda": [53, 98], "forg": [53, 98], "alwai": [53, 72, 77, 98, 99], "document": [53, 73, 74, 97, 98, 99], "pythonot": [53, 74, 97, 99], "github": [53, 72, 74, 92, 95, 97, 98, 99], "io": [53, 97, 99], "Or": 53, "inlin": 53, "caf\u00e9": 53, "croissant": 53, "manhattan": 53, "quick": [53, 97, 99], "googl": 53, "fiction": 53, "product": [53, 74, 77, 81, 90, 95, 98], "sale": 53, "bakery_po": 53, "bakery_prod": 53, "describ": [53, 72, 75, 83], "sold": 53, "cafe_po": 53, "cafe_prod": 53, "imap": 53, "shop": 53, "npz": 53, "cafe": 53, "89": [53, 60, 77, 99], "73": [53, 60], "88": [53, 60, 99], "92": [53, 60, 99], "91": [53, 60, 99], "441": [53, 75, 85, 97], "next": [53, 83, 85, 90, 98, 99], "ec": 53, "thing": 53, "fontweight": 53, "bold": 53, "va": 53, "coolwarm": 53, "cbar": 53, "use_gridspec": 53, "cell": 53, "awai": 53, "thu": [53, 95], "costli": 53, "while": [53, 77, 83, 85, 86, 98, 99], "time_emd": 53, "section": [53, 84, 98, 99], "good": [53, 71, 72, 98], "plane": 53, "easili": [53, 85, 98], "interpret": 53, "10838179": 53, "pseudo": 53, "oslash": 53, "wise": [53, 74, 95, 98], "divis": [53, 77], "Be": [53, 74], "care": [53, 74], "nit": 53, "ot_sink_algo": 53, "atleast_2d": 53, "equival": [53, 54, 77, 81, 83, 86, 88], "2g": 53, "0008": 53, "notic": 53, "deliv": 53, "fraction": 53, "reg_paramet": 53, "logspac": [53, 59, 62, 63, 68], "w_sinkhorn_reg": 53, "time_sinkhorn_reg": 53, "max_ot": 53, "seri": 53, "someth": [53, 72], "although": [53, 85], "972222222222223": 53, "impact": [53, 98], "higher": [53, 83, 92], "much": [53, 72, 75, 99], "littl": [53, 85], "673": [53, 61, 88, 97, 98, 100], "plot_intro_ot": [53, 61, 100], "0x7f04578c25f0": 54, "861463e": 54, "860154e": 54, "144529e": 54, "130143e": 54, "178815e": 54, "426078e": 54, "661047e": 54, "233110e": 54, "338932e": 54, "776627e": 54, "293340e": 54, "235791e": 54, "637176e": 54, "740051e": 54, "529356e": 54, "450071e": 54, "193632e": 54, "449812e": 54, "294505e": 54, "857493e": 54, "822723e": 54, "595": [54, 61, 66, 100], "plot_ot_1d": [54, 61, 100], "constrain": [55, 77, 92, 97, 98, 99], "togeth": 55, "0x7f046e85eb60": 55, "gsm": 55, "smooth_ot_du": [55, 98], "max_nz": [55, 92, 95], "entri": [55, 74, 85], "permit": 55, "gsc": 55, "sparsity_constrain": [55, 92], "977": [55, 61, 100], "plot_ot_1d_smooth": [55, 61, 100], "empirical_sinkhorn": [56, 75, 98], "427": [56, 61, 100], "plot_ot_2d_sampl": [56, 61, 100], "stole": 57, "idea": [57, 85, 98], "pdf": [57, 59, 72, 98], "1706": 57, "07650": 57, "strictli": [57, 85, 98], "mp": 57, "l1": [57, 76], "gp": 57, "xtot": 57, "plot_ot_l1_vs_l2": [57, 61, 100], "lst_m": 58, "d_emd": 58, "d_emd2": 58, "d_tv": 58, "0x7f046cfe6c80": 58, "d_sinkhorn": 58, "d_sinkhorn2": 58, "plot_compute_emd": [58, 61, 100], "special": [59, 74], "pdf_von_mis": 59, "endpoint": 59, "mu1": 59, "kappa1": 59, "mu_target": 59, "pdf1": 59, "pdf_t": 59, "mu2": 59, "kappa2": 59, "vonmis": 59, "0x7f046cfe5570": 59, "period": 59, "attain": [59, 88], "antipod": 59, "contrari": 59, "n_try": 59, "deal": [59, 88], "xts2": 59, "l_w2_circl": 59, "l_w2": 59, "w2_circl": 59, "m_w2_circl": 59, "std_w2_circl": 59, "m_w2": 59, "std_w2": 59, "fill_between": [59, 62, 63], "vline": 59, "ymin": 59, "ymax": 59, "737": 59, "tc": 59, "mask_end": 59, "ctp": 59, "ctm": 59, "dcptm": 59, "dcmtp": 59, "invalid": [59, 66], "vm": 59, "073": [59, 61, 100], "plot_compute_wasserstein_circl": [59, 61, 100], "df": [60, 87, 98], "gl2": 60, "frob": 60, "760578e": 60, "669467e": 60, "457501e": 60, "111116e": 60, "665639e": 60, "298130e": 60, "827855e": 60, "664378e": 60, "572776e": 60, "260396e": 60, "664077e": 60, "811855e": 60, "015066e": 60, "663912e": 60, "936787e": 60, "653393e": 60, "663852e": 60, "555826e": 60, "916369e": 60, "663814e": 60, "305693e": 60, "836245e": 60, "663785e": 60, "760450e": 60, "929009e": 60, "663767e": 60, "078011e": 60, "793559e": 60, "663751e": 60, "525192e": 60, "584755e": 60, "663737e": 60, "396466e": 60, "396951e": 60, "663727e": 60, "086938e": 60, "012700e": 60, "663720e": 60, "042609e": 60, "725769e": 60, "663713e": 60, "160914e": 60, "922568e": 60, "663707e": 60, "823502e": 60, "361187e": 60, "663702e": 60, "022440e": 60, "028438e": 60, "663697e": 60, "181249e": 60, "292634e": 60, "663692e": 60, "698532e": 60, "489527e": 60, "663687e": 60, "258253e": 60, "420712e": 60, "663682e": 60, "741118e": 60, "560349e": 60, "663678e": 60, "624135e": 60, "365715e": 60, "663673e": 60, "645179e": 60, "400714e": 60, "663670e": 60, "957237e": 60, "256196e": 60, "663666e": 60, "261541e": 60, "762450e": 60, "663663e": 60, "851305e": 60, "079948e": 60, "663660e": 60, "942296e": 60, "231320e": 60, "663657e": 60, "092896e": 60, "481860e": 60, "663653e": 60, "924361e": 60, "201470e": 60, "663651e": 60, "625455e": 60, "704189e": 60, "663648e": 60, "641123e": 60, "730250e": 60, "663645e": 60, "566666e": 60, "606377e": 60, "663643e": 60, "338514e": 60, "226810e": 60, "663641e": 60, "222711e": 60, "034152e": 60, "663639e": 60, "221805e": 60, "032642e": 60, "663637e": 60, "440781e": 60, "396935e": 60, "663634e": 60, "520091e": 60, "528875e": 60, "663632e": 60, "288193e": 60, "143080e": 60, "663630e": 60, "123055e": 60, "868347e": 60, "663628e": 60, "024487e": 60, "704365e": 60, "663627e": 60, "079606e": 60, "796061e": 60, "663625e": 60, "172093e": 60, "949922e": 60, "663623e": 60, "047880e": 60, "743277e": 60, "663621e": 60, "010577e": 60, "681217e": 60, "663619e": 60, "064438e": 60, "770820e": 60, "663618e": 60, "882375e": 60, "644049e": 60, "663616e": 60, "532647e": 60, "419505e": 60, "663615e": 60, "930189e": 60, "652001e": 60, "663613e": 60, "728955e": 60, "452161e": 60, "663612e": 60, "524214e": 60, "584459e": 60, "663610e": 60, "088418e": 60, "511958e": 60, "663609e": 60, "639430e": 60, "270902e": 60, "663608e": 60, "662611e": 60, "108397e": 60, "663607e": 60, "133700e": 60, "186767e": 60, "54": [60, 82, 97], "663605e": 60, "648141e": 60, "272349e": 60, "55": [60, 85, 97, 99], "663604e": 60, "557516e": 60, "090911e": 60, "663603e": 60, "304213e": 60, "215131e": 60, "663602e": 60, "353809e": 60, "057021e": 60, "663601e": 60, "968279e": 60, "325603e": 60, "663600e": 60, "367159e": 60, "059240e": 60, "663599e": 60, "610790e": 60, "334102e": 60, "663598e": 60, "787466e": 60, "628015e": 60, "62": [60, 83, 97, 99], "663596e": 60, "937777e": 60, "154166e": 60, "599432e": 60, "315190e": 60, "663595e": 60, "813048e": 60, "670555e": 60, "663594e": 60, "724600e": 60, "523409e": 60, "66": [60, 67, 75, 77, 97, 98, 99], "663593e": 60, "081892e": 60, "011779e": 60, "67": [60, 99], "663592e": 60, "948732e": 60, "896260e": 60, "68": 60, "663591e": 60, "941833e": 60, "221188e": 60, "69": [60, 88], "663590e": 60, "213739e": 60, "673523e": 60, "663589e": 60, "127355e": 60, "529811e": 60, "71": 60, "663588e": 60, "349251e": 60, "235363e": 60, "72": [60, 99], "007084e": 60, "329722e": 60, "663587e": 60, "880265e": 60, "118744e": 60, "74": 60, "663586e": 60, "931950e": 60, "204723e": 60, "663585e": 60, "981309e": 60, "286832e": 60, "76": [60, 99], "663584e": 60, "952959e": 60, "576082e": 60, "77": 60, "544857e": 60, "560750e": 60, "78": [60, 97], "663583e": 60, "237579e": 60, "049564e": 60, "79": [60, 94, 99], "663582e": 60, "382386e": 60, "290460e": 60, "646051e": 60, "065503e": 60, "663581e": 60, "197994e": 60, "983702e": 60, "663580e": 60, "072764e": 60, "775370e": 60, "83": 60, "994645e": 60, "645410e": 60, "84": [60, 99], "663579e": 60, "842721e": 60, "056248e": 60, "663578e": 60, "276486e": 60, "450691e": 60, "86": [60, 99], "737346e": 60, "217366e": 60, "87": [60, 88, 99], "663577e": 60, "282043e": 60, "123508e": 60, "663576e": 60, "020937e": 60, "689135e": 60, "431951e": 60, "709310e": 60, "663575e": 60, "052335e": 60, "077789e": 60, "500538e": 60, "823407e": 60, "663574e": 60, "063176e": 60, "095821e": 60, "663573e": 60, "576367e": 60, "949549e": 60, "94": 60, "224681e": 60, "364492e": 60, "663572e": 60, "673221e": 60, "110670e": 60, "96": 60, "635561e": 60, "048017e": 60, "97": 60, "663571e": 60, "527236e": 60, "867807e": 60, "98": [60, 88], "788548e": 60, "638946e": 60, "663570e": 60, "727141e": 60, "536791e": 60, "127278e": 60, "202445e": 60, "101": 60, "663569e": 60, "637504e": 60, "387670e": 60, "102": 60, "922750e": 60, "862195e": 60, "663568e": 60, "076454e": 60, "117891e": 60, "104": 60, "911509e": 60, "843492e": 60, "105": 60, "663567e": 60, "403398e": 60, "998215e": 60, "106": [60, 99], "439790e": 60, "058755e": 60, "107": [60, 99], "634542e": 60, "382735e": 60, "663566e": 60, "452203e": 60, "079401e": 60, "852991e": 60, "746137e": 60, "663565e": 60, "165490e": 60, "602434e": 60, "111": 60, "450250e": 60, "076149e": 60, "112": 60, "663564e": 60, "685294e": 60, "467159e": 60, "113": [60, 99], "821800e": 60, "694245e": 60, "114": [60, 99], "237390e": 60, "722040e": 60, "115": 60, "663563e": 60, "992842e": 60, "315219e": 60, "116": [60, 99], "166739e": 60, "604506e": 60, "117": 60, "086064e": 60, "470297e": 60, "118": [60, 99], "663562e": 60, "435945e": 60, "052346e": 60, "292497e": 60, "813711e": 60, "663561e": 60, "366209e": 60, "936334e": 60, "138746e": 60, "557935e": 60, "009637e": 60, "343153e": 60, "123": [60, 66], "663560e": 60, "386258e": 60, "969683e": 60, "124": [60, 99], "927442e": 60, "206415e": 60, "081681e": 60, "463000e": 60, "126": [60, 99], "663559e": 60, "759123e": 60, "926406e": 60, "127": [60, 99], "890771e": 60, "145409e": 60, "971315e": 60, "279398e": 60, "129": 60, "663558e": 60, "101983e": 60, "496771e": 60, "035645e": 60, "386414e": 60, "984492e": 60, "301317e": 60, "663557e": 60, "849064e": 60, "076024e": 60, "795703e": 60, "987255e": 60, "134": [60, 99], "624087e": 60, "701762e": 60, "135": 60, "689557e": 60, "810673e": 60, "663556e": 60, "644308e": 60, "735399e": 60, "137": [60, 99], "618007e": 60, "691644e": 60, "138": [60, 99], "483013e": 60, "467075e": 60, "139": [60, 99], "663555e": 60, "708771e": 60, "842636e": 60, "013847e": 60, "350146e": 60, "721217e": 60, "863339e": 60, "663554e": 60, "027911e": 60, "373540e": 60, "935449e": 60, "677151e": 60, "790030e": 60, "351982e": 60, "249094e": 60, "146": [60, 99], "663553e": 60, "423360e": 60, "367836e": 60, "147": 60, "541112e": 60, "563722e": 60, "491601e": 60, "481358e": 60, "149": 60, "466407e": 60, "439446e": 60, "663552e": 60, "801524e": 60, "996929e": 60, "151": 60, "714107e": 60, "851507e": 60, "491257e": 60, "480784e": 60, "153": 60, "513799e": 60, "518282e": 60, "663551e": 60, "354539e": 60, "253345e": 60, "155": [60, 99], "233818e": 60, "052519e": 60, "576219e": 60, "622121e": 60, "157": [60, 99], "452791e": 60, "416792e": 60, "663550e": 60, "262867e": 60, "100843e": 60, "316379e": 60, "189863e": 60, "295447e": 60, "155041e": 60, "161": 60, "283286e": 60, "134810e": 60, "569222e": 60, "610479e": 60, "163": 60, "663549e": 60, "172942e": 60, "951247e": 60, "164": 60, "399809e": 60, "328651e": 60, "229432e": 60, "045221e": 60, "166": 60, "326191e": 60, "206184e": 60, "167": 60, "663548e": 60, "209694e": 60, "012384e": 60, "372136e": 60, "282614e": 60, "169": [60, 99], "338395e": 60, "226484e": 60, "416497e": 60, "356410e": 60, "171": 60, "298576e": 60, "160242e": 60, "172": [60, 99], "663547e": 60, "190590e": 60, "980603e": 60, "167083e": 60, "941497e": 60, "174": [60, 62, 64, 99, 100], "069425e": 60, "779038e": 60, "217780e": 60, "025834e": 60, "176": [60, 99], "140754e": 60, "897697e": 60, "177": 60, "663546e": 60, "160707e": 60, "930890e": 60, "178": [60, 99], "101798e": 60, "832892e": 60, "179": 60, "114904e": 60, "854694e": 60, "064022e": 60, "770049e": 60, "181": [60, 99], "258231e": 60, "540149e": 60, "213120e": 60, "018080e": 60, "183": 60, "663545e": 60, "164296e": 60, "936859e": 60, "188762e": 60, "977559e": 60, "394153e": 60, "562760e": 60, "186": 60, "028656e": 60, "711216e": 60, "115348e": 60, "855431e": 60, "188": 60, "663544e": 60, "768310e": 60, "625002e": 60, "021806e": 60, "699820e": 60, "086303e": 60, "807113e": 60, "191": [60, 99], "879008e": 60, "643416e": 60, "192": 60, "050210e": 60, "747071e": 60, "193": 60, "002463e": 60, "667641e": 60, "194": 60, "663543e": 60, "062747e": 60, "767925e": 60, "195": [60, 99], "348538e": 60, "555170e": 60, "992512e": 60, "329589e": 60, "197": 60, "558020e": 60, "590018e": 60, "198": [60, 99], "993772e": 60, "662507e": 60, "588499e": 60, "428734e": 60, "737134e": 60, "453459e": 60, "692289e": 60, "617643e": 60, "614437e": 60, "464513e": 60, "612639e": 60, "102965e": 60, "003963e": 60, "611291e": 60, "371098e": 60, "348827e": 60, "610468e": 60, "110558e": 60, "230389e": 60, "610198e": 60, "672927e": 60, "693743e": 60, "610130e": 60, "232417e": 60, "814742e": 60, "610090e": 60, "513455e": 60, "046887e": 60, "610002e": 60, "443507e": 60, "764057e": 60, "609996e": 60, "657071e": 60, "887869e": 60, "609948e": 60, "998735e": 60, "827807e": 60, "609695e": 60, "569217e": 60, "525962e": 60, "609533e": 60, "010779e": 60, "626881e": 60, "609520e": 60, "043897e": 60, "294681e": 60, "609465e": 60, "415246e": 60, "496718e": 60, "609386e": 60, "898605e": 60, "883745e": 60, "609324e": 60, "837052e": 60, "175060e": 60, "609298e": 60, "617826e": 60, "603564e": 60, "609184e": 60, "080015e": 60, "139305e": 60, "609083e": 60, "273206e": 60, "009411e": 60, "608988e": 60, "940805e": 60, "558681e": 60, "608853e": 60, "380030e": 60, "348223e": 60, "608844e": 60, "185045e": 60, "341930e": 60, "608824e": 60, "279113e": 60, "057868e": 60, "608819e": 60, "156821e": 60, "078753e": 60, "608783e": 60, "205746e": 60, "548567e": 60, "608764e": 60, "189894e": 60, "914259e": 60, "608755e": 60, "474607e": 60, "807303e": 60, "608737e": 60, "144227e": 60, "840760e": 60, "608676e": 60, "775335e": 60, "073291e": 60, "608638e": 60, "348020e": 60, "777116e": 60, "608627e": 60, "863136e": 60, "104023e": 60, "608529e": 60, "110230e": 60, "828482e": 60, "608487e": 60, "641106e": 60, "248184e": 60, "608409e": 60, "823638e": 60, "758383e": 60, "608373e": 60, "256641e": 60, "629519e": 60, "608338e": 60, "132444e": 60, "429691e": 60, "608310e": 60, "786649e": 60, "873484e": 60, "608260e": 60, "103848e": 60, "991794e": 60, "608206e": 60, "321265e": 60, "341279e": 60, "608201e": 60, "054747e": 60, "912648e": 60, "608195e": 60, "198335e": 60, "751739e": 60, "608193e": 60, "458736e": 60, "360328e": 60, "608159e": 60, "153759e": 60, "463587e": 60, "608115e": 60, "738314e": 60, "403523e": 60, "608108e": 60, "960032e": 60, "368161e": 60, "608081e": 60, "675447e": 60, "694254e": 60, "608072e": 60, "976340e": 60, "610383e": 60, "608046e": 60, "604130e": 60, "579515e": 60, "608020e": 60, "617036e": 60, "600226e": 60, "608014e": 60, "957795e": 60, "364188e": 60, "608011e": 60, "292411e": 60, "078211e": 60, "607998e": 60, "431795e": 60, "355831e": 60, "607964e": 60, "127054e": 60, "420225e": 60, "607947e": 60, "021878e": 60, "643126e": 60, "560621e": 60, "725288e": 60, "607900e": 60, "929781e": 60, "710793e": 60, "607890e": 60, "740229e": 60, "229659e": 60, "607858e": 60, "039550e": 60, "279306e": 60, "607836e": 60, "319545e": 60, "121612e": 60, "607826e": 60, "378947e": 60, "025624e": 60, "607808e": 60, "145102e": 60, "841105e": 60, "607776e": 60, "941743e": 60, "121889e": 60, "607743e": 60, "087422e": 60, "356037e": 60, "607741e": 60, "310249e": 60, "106541e": 60, "607738e": 60, "682752e": 60, "705425e": 60, "607691e": 60, "913936e": 60, "684709e": 60, "607671e": 60, "288855e": 60, "072055e": 60, "607654e": 60, "002448e": 60, "611590e": 60, "607641e": 60, "209492e": 60, "319792e": 60, "607632e": 60, "588467e": 60, "984199e": 60, "607619e": 60, "050388e": 60, "294196e": 60, "607618e": 60, "417493e": 60, "513973e": 60, "607598e": 60, "210509e": 60, "946012e": 60, "607591e": 60, "392914e": 60, "062009e": 60, "607579e": 60, "759587e": 60, "247415e": 60, "607574e": 60, "760280e": 60, "437356e": 60, "607556e": 60, "146469e": 60, "843012e": 60, "607550e": 60, "689456e": 60, "930984e": 60, "065631e": 60, "535705e": 60, "607539e": 60, "555681e": 60, "053852e": 60, "607528e": 60, "177470e": 60, "153798e": 60, "607527e": 60, "306068e": 60, "529648e": 60, "607514e": 60, "816045e": 60, "256440e": 60, "607511e": 60, "301970e": 60, "700442e": 60, "607504e": 60, "281072e": 60, "881840e": 60, "607503e": 60, "821886e": 60, "257370e": 60, "607480e": 60, "403013e": 60, "255315e": 60, "169298e": 60, "879624e": 60, "607473e": 60, "235982e": 60, "809227e": 60, "607470e": 60, "717105e": 60, "760195e": 60, "148402e": 60, "883374e": 60, "reg1": [60, 87], "reg2": [60, 87], "gel2": 60, "gcg": [60, 77, 98], "693084e": 60, "610202e": 60, "147342e": 60, "288260e": 60, "610179e": 60, "406304e": 60, "264402e": 60, "610174e": 60, "352083e": 60, "397436e": 60, "plot_optim_otreg": [60, 61, 100], "948": 61, "corenflo": [62, 73, 97], "aalto": 62, "fi": [62, 66], "n_seed": [62, 63], "n_projections_arr": [62, 63], "res_mean": [62, 63], "res_std": [62, 63], "xscale": [62, 63], "confid": [62, 63], "plot_vari": [62, 64, 100], "mgrid": 63, "30j": 63, "plot_surfac": 63, "set_zlim": 63, "tick": 63, "ssw_1": 63, "232": [63, 64, 99, 100], "plot_variance_ssw": [63, 64, 100], "406": 64, "uot": [65, 90, 97, 98], "491": [65, 70, 100], "plot_uot_1d": [65, 70, 100], "n_weight": 66, "weight_list": 66, "1022": 66, "kv": 66, "1027": 66, "ktu": 66, "1034": 66, "974": 66, "615": 66, "455": 66, "361": [66, 99], "plot_uot_barycenter_1d": [66, 70, 100], "429": [66, 70, 100], "n_nois": [67, 69], "w0": 67, "partial_wasserstein": [67, 69, 98], "entropic_partial_wasserstein": [67, 98], "partial_w_dist": 67, "jet": [67, 69], "47910182636916243": 67, "5034205945081646": 67, "res0": 67, "partial_gromov_wasserstein": [67, 98], "entropic_partial_gromov_wasserstein": [67, 98], "partial_gw_dist": [67, 88], "611280e": 67, "345385e": 67, "584346e": 67, "659015e": 67, "38071035222889": 67, "59015303098326": 67, "478237e": 67, "894947e": 67, "251769e": 67, "596705e": 67, "808371e": 67, "136110e": 67, "859072e": 67, "136043e": 67, "11743971783944865": 67, "9136043100219415": 67, "plot_partial_wass_and_gromov": [67, 70, 100], "haoran": 68, "final_gamma": 68, "t_list": [68, 90], "g_list": [68, 90], "regularization_path": 68, "semi_relax": [68, 90], "t_list2": 68, "g_list2": 68, "selected_gamma": 68, "compute_transport_plan": 68, "ell_2": [68, 69, 94], "g_list_v": 68, "l_2": 68, "plot_regpath": [68, 70, 100], "_f": [69, 98], "div": [69, 94], "ell_1": 69, "reg_m_kl": 69, "reg_m_l2": 69, "entropic_kl_uot": 69, "kl_uot": 69, "mm_unbalanc": 69, "l2_uot": 69, "partial_ot": 69, "618": [69, 70, 100], "plot_unbalanced_ot": [69, 70, 100], "interest": [71, 98], "foster": [71, 98], "open": [71, 72, 73, 97, 98, 99], "welcom": [71, 97], "environ": [71, 98, 99], "contributor": [71, 97, 99], "maintain": [71, 74, 97, 99], "particip": 71, "harass": 71, "experi": 71, "everyon": 71, "regardless": [71, 99], "ag": 71, "bodi": 71, "disabl": [71, 98], "ethnic": 71, "gender": 71, "ident": [71, 74, 86], "nation": 71, "person": [71, 73], "appear": [71, 75], "race": 71, "religion": 71, "sexual": 71, "behavior": [71, 72, 99], "inclus": [71, 72], "languag": [71, 73, 98], "Being": 71, "viewpoint": 71, "gracefulli": 71, "critic": 71, "focus": 71, "best": [71, 72, 83, 98], "empathi": 71, "toward": 71, "member": [71, 97], "unaccept": 71, "imageri": 71, "unwelcom": 71, "attent": 71, "troll": 71, "insult": 71, "derogatori": 71, "comment": 71, "polit": 71, "attack": 71, "public": [71, 72, 99], "privat": 71, "publish": [71, 97], "physic": 71, "electron": 71, "address": [71, 72, 98, 99], "permiss": 71, "could": [71, 99], "inappropri": 71, "profession": 71, "clarifi": 71, "appropri": [71, 72, 95], "fair": [71, 85], "correct": [71, 72, 85, 97, 99], "action": [71, 99], "edit": [71, 72], "reject": 71, "commit": [71, 72, 74, 99], "wiki": 71, "ban": 71, "temporarili": 71, "perman": 71, "deem": 71, "threaten": 71, "offens": 71, "harm": 71, "offici": [71, 99], "mail": [71, 72, 97], "post": 71, "social": 71, "media": 71, "act": 71, "appoint": 71, "offlin": 71, "event": 71, "abus": 71, "report": [71, 72, 97, 99], "contact": 71, "team": [71, 72, 99], "complaint": 71, "review": [71, 72], "investig": [71, 98], "circumst": 71, "oblig": 71, "confidenti": 71, "regard": [71, 99], "incid": 71, "polici": 71, "separ": [71, 98, 99], "who": [71, 99], "faith": 71, "face": [71, 88], "temporari": 71, "repercuss": 71, "determin": [71, 75, 79, 83, 93], "leadership": 71, "coven": 71, "thank": [72, 73, 90, 99], "workflow": 72, "fork": 72, "repositori": [72, 99], "develop": [72, 97, 98, 99], "branch": [72, 99], "click": 72, "button": 72, "guid": [72, 97, 99], "repo": [72, 99], "local": [72, 98, 99], "disk": 72, "git": 72, "yourlogin": 72, "cd": 72, "hold": 72, "checkout": 72, "my": 72, "never": [72, 99], "master": [72, 95, 97, 99], "modified_fil": 72, "push": [72, 98, 99], "instruct": 72, "email": 72, "committ": 72, "abov": [72, 83, 89, 90, 98, 99], "seem": 72, "magic": 72, "look": [72, 90], "web": 72, "ask": [72, 97, 99], "friend": 72, "anoth": [72, 77, 85, 98], "compli": 72, "rule": [72, 87], "submit": 72, "pep8": [72, 99], "guidelin": [72, 97], "mention": 72, "descript": 72, "docstr": [72, 95, 99], "usag": 72, "doctest": [72, 99], "prefix": 72, "mrg": 72, "readi": 72, "merg": [72, 99], "core": [72, 99], "approv": [72, 99], "elig": 72, "incomplet": [72, 99], "wip": 72, "progress": 72, "matur": 72, "duplic": 72, "broad": 72, "api": [72, 74, 82, 97, 99], "seek": [72, 98], "collabor": 72, "often": [72, 98], "benefit": [72, 73, 97], "task": 72, "pr": [72, 74, 99], "folder": [72, 97, 99], "coverag": [72, 99], "enhanc": 72, "verifi": 72, "manner": 72, "modif": 72, "grant": 72, "desir": [72, 75, 83, 85, 86, 95], "fail": [72, 85, 98, 99], "At": [72, 98], "paragraph": 72, "narr": 72, "literatur": [72, 98], "common": [72, 98], "program": [72, 75, 77, 85, 87, 97, 98, 99], "tool": [72, 98], "pyflak": 72, "autopep8": 72, "easi": [72, 97, 98], "redund": 72, "bonu": 72, "benchmark": [72, 74, 99], "profil": 72, "track": [72, 83, 99], "feel": 72, "snippet": 72, "highlight": [72, 99], "platform": [72, 99], "__version__": 72, "about": [72, 75, 95, 98, 99], "gist": 72, "except": 72, "traceback": 72, "great": 72, "pick": [72, 93], "tracker": 72, "resolv": [72, 81], "knowledg": [72, 98], "assist": [72, 97], "area": [72, 98], "greatli": [72, 98, 99], "appreci": 72, "experienc": 72, "concentr": 72, "glad": 72, "restructuredtext": 72, "etc": [72, 76], "directori": 72, "editor": 72, "noplot": 72, "place": [72, 99], "viewabl": 72, "browser": 72, "pillow": 72, "write": [72, 74], "keep": [72, 98, 99], "compromis": 72, "reader": [72, 98], "hand": 72, "wave": 72, "explan": 72, "inspir": 72, "scikit": [72, 95, 98, 99], "wrapper": [73, 77, 86, 98, 99], "ci": [73, 99], "michael": [73, 85], "l\u00e9o": [73, 97], "gautheron": [73, 97], "nathali": [73, 97], "gayraud": [73, 97], "debug": [73, 85, 99], "alain": [73, 97], "jcpot": [73, 97, 99], "minhui": 73, "huang": [73, 79, 97, 98], "robust": [73, 79, 97, 98, 99], "nathan": [73, 99], "cassereau": [73, 99], "camil": 73, "le": [73, 95], "coz": 73, "theo": 73, "gnassoun": 73, "wassertstein": 73, "layer": [73, 82, 97, 99], "lot": [73, 99], "would": [73, 74, 99], "variou": [73, 95, 99], "mathieu": [73, 92, 99], "financ": [73, 97], "manpow": [73, 97], "partner": [73, 97], "lib": 74, "goal": [74, 93], "agnost": 74, "cupi": [74, 97, 98, 99], "nonetheless": 74, "achiev": 74, "imit": 74, "As": [74, 85, 98, 99], "convent": [74, 77], "list_to_arrai": [74, 95], "get_backend": [74, 99], "know": 74, "op": 74, "numpy_op": 74, "np_config": 74, "enable_numpy_behavior": 74, "intel": 74, "xeon": 74, "6248": 74, "50ghz": 74, "tesla": 74, "v100": 74, "sxm2": 74, "32gb": 74, "date": [74, 99], "8th": 74, "316": [74, 99], "pull": [74, 99], "bitsize32": 74, "bit": 74, "devicecpugpu": 74, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 74, "00080": 74, "00220": 74, "01510": 74, "00950": 74, "01930": 74, "00510": 74, "0293": 74, "00050": 74, "00130": 74, "00970": 74, "00570": 74, "01150": 74, "00290": 74, "0173": 74, "5000": 74, "00090": 74, "00160": 74, "01100": 74, "00580": 74, "0166": 74, "00210": 74, "01450": 74, "00560": 74, "01180": 74, "0168": 74, "20000": 74, "00690": 74, "00430": 74, "02780": 74, "00590": 74, "00300": 74, "0165": 74, "50000": [74, 90], "07070": 74, "03140": 74, "13950": 74, "00740": 74, "01250": 74, "00350": 74, "0198": 74, "nbsp": 74, "bitsize64": 74, "00200": 74, "01540": 74, "00930": 74, "01910": 74, "0328": 74, "00940": 74, "01140": 74, "0169": 74, "00170": 74, "01200": 74, "01160": 74, "00340": 74, "00270": 74, "01770": 74, "0167": 74, "01460": 74, "00750": 74, "04360": 74, "14670": 74, "05680": 74, "24680": 74, "00770": 74, "00450": 74, "0204": 74, "get_available_backend_implement": 74, "proper": [74, 99], "typeerror": 74, "get_backend_list": 74, "instanti": [74, 95, 98, 99], "side": [74, 90], "effect": [74, 98], "alloc": [74, 98, 99], "func": [74, 95], "to_numpi": 74, "abstract": 74, "jaxbackend": 74, "numpybackend": 74, "torchbackend": [74, 99], "cupybackend": 74, "tensorflowbackend": 74, "__name__": 74, "__type__": 74, "rtol": 74, "equal_nan": 74, "evenli": 74, "array_equ": 74, "assert_same_dtype_devic": 74, "arctang": 74, "bitsiz": 74, "a_min": 74, "a_max": 74, "sequenc": 74, "exist": [74, 75, 98, 99], "col": 74, "cumsum": 74, "device_typ": 74, "dtype_devic": 74, "eigenvalu": [74, 77, 81], "eigenvector": 74, "einsum": 74, "subscript": 74, "operand": 74, "einstein": 74, "summat": 74, "eliminate_zero": 74, "smaller": [74, 99], "csr_matrix": 74, "exponenti": [74, 75], "flip": 74, "from_numpi": 74, "fill_valu": 74, "inv": 74, "is_floating_point": 74, "isfinit": 74, "infin": [74, 94], "isinf": 74, "isnan": 74, "nan": 74, "isspars": 74, "kl_div": 74, "stat": 74, "specifi": [74, 77, 92, 95, 99], "logsumexp": [74, 79, 98], "matmul": 74, "amax": 74, "arithmet": 74, "median": [74, 77, 95], "amin": 74, "nan_to_num": 74, "posinf": 74, "neginf": 74, "replac": [74, 83, 98, 99], "frobeniu": 74, "outer": 74, "expon": 74, "prod": 74, "qr": 74, "repeat": 74, "searchsort": 74, "insert": 74, "set_gradi": [74, 99], "equat": [74, 75, 83, 86, 93, 98], "sort2": 74, "ngeativ": 74, "root": [74, 97, 98], "squeez": 74, "deviat": [74, 78, 82, 83], "take_along_axi": 74, "arr": 74, "gather": [74, 77, 86], "tile": 74, "rep": 74, "tocsr": 74, "compress": 74, "trace": 74, "dim0": 74, "dim1": 74, "swap": 74, "return_invers": 74, "chosen": [74, 95, 98], "zero_pad": 74, "pad_width": 74, "pad": 74, "cp": 74, "relat": [75, 83, 97, 98, 99], "s_": 75, "empirical_sinkhorn_diverg": [75, 98, 99], "barycenter_sinkhorn": 75, "barycenter_stabil": 75, "tau": [75, 79, 94], "10000000000": 75, "mast": 75, "strength": 75, "stabthr": 75, "goe": [75, 97, 98], "butscher": [75, 97, 98], "nguyen": [75, 97, 98], "guiba": [75, 97, 98], "geometr": [75, 82, 97, 98, 99], "islazi": 75, "batchsiz": 75, "updat": [75, 83, 85, 86, 90, 93, 95, 99], "99977301e": 75, "26989344e": 75, "empirical_sinkhorn2": [75, 98], "53978687e": 75, "frechet": [75, 85], "w_i": [75, 81, 85], "measure_weight": [75, 85], "k_i": [75, 85], "There": [75, 85, 98], "arnaud": [75, 85], "doucet": [75, 85, 97, 98], "\u00e1lvarez": [75, 85, 97], "esteban": [75, 85, 97], "pedro": [75, 85, 97], "744": [75, 85, 97], "762": [75, 85, 97], "geometricbar": 75, "alldistribt": 75, "geometricmean": 75, "jcpot_barycent": 75, "lambda_k": 75, "gamma_k": 75, "th": [75, 76, 85, 90, 92], "n_k": 75, "unknown": 75, "nsk": 75, "control": [75, 77, 83, 85], "devi": [75, 77], "projc": 75, "projr": 75, "maxfun": 75, "pgtol": 75, "written": [75, 85], "u_i": 75, "ldot": [75, 85], "v_j": [75, 86], "regularis": 75, "bfg": [75, 92, 94, 98], "lbfg": 75, "final": [75, 85, 98, 99], "gain": 75, "packag": [75, 95, 98, 99], "isn": 75, "epsilon0": 75, "print_period": 75, "decreas": [75, 77, 86], "tabl": 75, "m0": 75, "h0": 75, "reg0": 75, "dh": 75, "m_0": 75, "_0": [75, 95], "n_atom": 75, "dim_prior": 75, "trust": [75, 79], "nakhostin": [75, 97], "corpetti": [75, 97], "planetari": [75, 97], "workshop": [75, 77, 83, 97, 98], "hyperspectr": [75, 97], "signal": [75, 97, 98], "remot": [75, 97], "whisper": [75, 97], "wx_samp": 76, "wx_feat": 76, "wy_feat": 76, "m_samp": 76, "m_feat": 76, "nits_bcd": 76, "tol_bcd": 76, "eval_bcd": 76, "nits_ot": 76, "tol_sinkhorn": 76, "method_sinkhorn": 76, "early_stopping_tol": 76, "xf": 76, "yf": 76, "alpha_": 76, "alpha_f": 76, "varepsilon_": 76, "varepsilon_f": 76, "n_sample_x": 76, "n_feature_x": 76, "n_sample_i": 76, "n_feature_i": 76, "duals_sampl": 76, "duals_featur": 76, "bcd": [76, 77, 79, 83, 86], "previou": [76, 90], "multipli": [76, 95], "earli": [76, 99], "pi_samp": 76, "pi_feat": 76, "pair": [76, 95], "ny_sampstem": 76, "alpha_1": 76, "alpha_2": 76, "varepsilon_1": 76, "varepsilon_2": 76, "distribution_estimation_uniform": 77, "emd_laplac": 77, "knn": 77, "sim_param": 77, "n_": [77, 85, 86], "s_i": 77, "s_j": 77, "n_t": 77, "t_i": 77, "t_j": 77, "neighbor": 77, "bandwidth": [77, 86], "otml": [77, 83, 97, 98], "sinkhorn_l1l2_gl": [77, 98, 99], "keyword": [77, 95], "transform_label": 77, "inverse_transform_label": 77, "y_t": 77, "transp_x": 77, "transp_xt": 77, "propag": 77, "transp_i": 77, "soft": 77, "nb_class": 77, "similarity_param": 77, "max_inner_it": 77, "inner_tol": 77, "distribution_estim": 77, "out_of_sample_map": 77, "disp": 77, "occur": [77, 98], "kind": [77, 85, 98], "emploi": 77, "limit_max": 77, "10e": 77, "849": 77, "858": 77, "nk_source_sampl": 77, "sign_eig": [77, 81], "skew": [77, 81], "desolneux": [77, 81, 97], "salmona": [77, 81, 97], "1178": [77, 81, 97], "1198": [77, 81, 97], "discuss": [77, 81, 83, 87, 97, 98, 99], "remark": [77, 81, 98], "daigon": 77, "knott": [77, 81, 97, 98], "smith": [77, 81, 97, 98], "1984": [77, 81, 97, 98], "verbose2": [77, 86], "jointli": [77, 86], "mapping_": 77, "nearestbrenierpotenti": [77, 86], "strongly_convex_const": [77, 86], "yield": 77, "simpler": [77, 99], "strong": [77, 86, 98], "initialis": [77, 86], "lpl1": 77, "infti": 77, "loglog": [77, 95], "pooladian": [77, 97], "aram": [77, 97], "jonathan": [77, 97], "nile": [77, 97], "2109": [77, 97], "12004": [77, 97], "unbalancedsinkhorntransport": 77, "reduct": [79, 83, 95, 97, 99], "explicitli": [79, 82, 86, 89, 99], "u0": 79, "sinkhorn_method": 79, "maxiter_sink": 79, "maxiter_mm": 79, "stiefel": [79, 98], "eather": 79, "mm": 79, "major": [79, 98, 99], "fisher": [79, 88, 98], "ridg": 79, "proj": [79, 91], "projection_robust_wasserstein": 79, "max_": [79, 90, 92, 93], "stepsiz": 79, "riemannian": [79, 97, 98], "lai": [79, 97, 98], "split_class": 79, "limits_i": 79, "limits_": 79, "neq": [79, 85, 98], "steepest": 79, "trustregion": 79, "region": 79, "wasserstaiun": 79, "1608": [79, 97, 98], "08063": [79, 97, 98], "num_it": 81, "still": [81, 98, 99], "sigma_b": 81, "sigma_i": 81, "agueh": [81, 85, 97, 98], "904": [81, 85, 97, 98], "924": [81, 85, 97, 98], "bures_wasserstein_dist": 81, "ct": [81, 99], "bures_wasserstein_map": [81, 98], "empirical_bures_wasserstein_barycent": 81, "empirical_bures_wasserstein_dist": 81, "empirical_gaussian_gromov_wasserstein_dist": 81, "gaussien": 81, "dt": 81, "_refer": [81, 83, 93], "gaussian_gromov_wasserstein_dist": 81, "gaussian_gromov_wasserstein_map": 81, "fgw_distance_to_templ": 82, "g_edg": 82, "tplt_adjac": 82, "g_featur": 82, "tplt_featur": 82, "tplt_weight": 82, "multi_alpha": 82, "n_edg": 82, "n_templates_nod": 82, "n_tplt": 82, "n_tplt_node": 82, "train_node_weight": 82, "tfgw": [82, 97], "pool": [82, 99], "tfgw_": 82, "overlin": 82, "fgw_": [82, 83], "_k": 82, "character": 82, "law": 82, "twpool": 82, "kown": 82, "tw_": 82, "charactersis": 82, "b\u00e9cigneul": [82, 97], "ganea": [82, 97], "chen": [82, 97], "barzilai": [82, 97], "jaakkola": [82, 97], "wasserstein_distance_to_templ": 82, "discard": [83, 85], "decompos": 83, "proposit": [83, 84, 92, 93], "h_1": 83, "f_1": 83, "necessarili": 83, "correctli": [83, 99], "bapg_fused_gromov_wasserstein2": 83, "bapg_gromov_wasserstein": 83, "bapg_gromov_wasserstein2": 83, "recommand": 83, "correcli": 83, "gw_distance_estim": 83, "nb_samples_p": 83, "nb_samples_q": 83, "unbias": 83, "csr": 83, "sebban": 83, "mlj": 83, "entropic_fused_gromov_barycent": [83, 99], "init_i": 83, "fixed_structur": [83, 99], "fixed_featur": [83, 99], "dure": [83, 85], "Such": 83, "suggest": 83, "entropic_fused_gromov_wasserstein2": 83, "asymetr": 83, "entropic_gromov_barycent": [83, 98], "entropic_gromov_wasserstein2": 83, "geometri": 83, "howev": [83, 98], "entropic_semirelaxed_fused_gromov_wasserstein2": 83, "entropic_semirelaxed_gromov_wasserstein2": 83, "init_x": [83, 99], "eq": [83, 92], "cdict_init": 83, "ydict_init": 83, "_d": 83, "distibut": 83, "cdict": 83, "ydict": 83, "randomli": 83, "consecut": 83, "cdict_best_st": 83, "compos": 83, "ydict_best_st": 83, "w_d": 83, "emb": 83, "depict": 83, "span": [83, 85], "current_loss": 83, "gw_2": 83, "gwggrad": 83, "constc": 83, "hc1": 83, "hc2": 83, "h1": 83, "gwloss": 83, "init_matrix": 83, "otim": 83, "read": [83, 97], "2b": 83, "init_matrix_semirelax": 83, "anymor": 83, "fc2t": 83, "threshold_plan": 83, "frank": 83, "wolf": 83, "_iter": 83, "pn": 83, "delet": [83, 90], "violat": [83, 85, 98], "nb_samples_grad": 83, "assel": [83, 97], "cluster": [83, 97], "semirelaxed_fused_gromov_wasserstein2": 83, "semirelaxed_gromov_wasserstein2": 83, "solve_gromov_linesearch": [83, 87, 99], "deltag": 83, "cost_g": 83, "alpha_min": [83, 87], "alpha_max": [83, 87], "fw": 83, "fc": [83, 87], "useless": [83, 99], "solve_semirelaxed_gromov_linesearch": [83, 87], "ones_p": 83, "tensor_product": 83, "ten": 83, "update_feature_matrix": 83, "update_kl_loss": 83, "accord": [83, 95], "update_square_loss": 83, "compute_lr_sqeuclidean_matrix": 84, "won": 84, "alpha0": [85, 87], "beta0": 85, "below": [85, 97, 99], "basic": 85, "alpha_0": 85, "beta_0": 85, "check_number_thread": 85, "request": [85, 91, 97], "valid": 85, "estimate_dual_null_weight": 85, "rather": 85, "coars": 85, "emd_c": 85, "max_j": 85, "max_i": 85, "beta_j": [85, 92], "y_init": 85, "nu_i": 85, "b_l": 85, "y_l": 85, "a_": 85, "d_i": 85, "p_i": 85, "p_ix_": 85, "rightarrow": 85, "don": 85, "ill": 85, "anywai": 85, "ipm": 85, "cvxopt": [85, 98, 99], "glpk": 85, "mosek": 85, "dmmot_monge_1dgrid_loss": 85, "concurr": 85, "prime": 85, "textrm": 85, "i_1": 85, "i_d": 85, "i_2": 85, "a_1": 85, "i_i": 85, "qquad": 85, "vdot": 85, "i_": 85, "jefferi": [85, 97], "kline": [85, 97], "vishnu": [85, 97], "suresh": [85, 97], "lokhand": [85, 97], "glenn": [85, 97], "fung": [85, 97], "vika": [85, 97], "singh": [85, 97], "eleventh": [85, 92, 97], "265": [85, 97], "leonid": 85, "transloc": 85, "dokl": 85, "akad": 85, "nauk": 85, "sssr": 85, "227": 85, "1942": 85, "995": 85, "print_rat": 85, "a_d": 85, "z_j": [85, 92, 95], "a_j": 85, "subject": [85, 99], "z_": 85, "i_j": 85, "jin": 85, "a_2": 85, "nonumb": 85, "z_1": 85, "move": [85, 98, 99], "decai": 85, "olvi": 85, "mangasarian": 85, "rr": 85, "meyer": 85, "nonlinear": [85, 86, 98], "perturb": 85, "745": 85, "752": 85, "1979": 85, "ferri": 85, "1991": 85, "variant": [86, 98, 99], "joint_ot_mapping_kernel": [86, 98], "kerneltyp": 86, "2_f": 86, "2_": 86, "supplementari": 86, "materi": 86, "joint_ot_mapping_linear": [86, 98], "neutral": 86, "x_class": 86, "x_n": 86, "v_1": 86, "v_n": 86, "g_i": 86, "g_1": 86, "g_n": 86, "varphi_1": 86, "varphi_n": 86, "i_k": 86, "varphi_i": 86, "varphi_j": 86, "g_j": 86, "x_j": 86, "fact": 86, "polytop": 86, "qcqp": 86, "eco": 86, "basetransport": [86, 98, 99], "y_class": 86, "statement": 86, "typo": 86, "varphi_": 86, "line_search": 87, "line_search_armijo": 87, "reg_1": 87, "reg_2": 87, "generic_conditional_gradi": 87, "lp_solver": 87, "lp_semi_relaxed_ot": 87, "gcg_linesearch": 87, "xk": 87, "pk": 87, "gfk": 87, "old_fval": 87, "x_k": 87, "p_k": 87, "fa": 87, "const": 87, "semirelaxed_cg": 87, "solve_1d_linesearch_quad": 87, "bx": 87, "entropic_partial_gromov_wasserstein2": 88, "gwgrad_parti": 88, "n_p": 88, "n_u": 88, "nb_dummi": 88, "gwloss_parti": 88, "thre": 88, "costfr": 88, "dummi": [88, 99], "instabl": 88, "popul": 88, "partial_gromov_wasserstein2": 88, "especi": [88, 98], "smoother": 88, "repartit": 88, "reservoir": [88, 98], "caffarelli": [88, 97, 98], "mccann": [88, 97, 98], "boundari": [88, 97, 98], "amper": [88, 97, 98], "obstacl": [88, 97, 98], "annal": [88, 97, 98], "partial_wasserstein_lagrang": 88, "partial_wasserstein2": [88, 98], "rao": 88, "tune": 88, "shown": [89, 98], "na": 89, "thr": 89, "noth": 89, "complement_schur": 90, "m_current": 90, "id_pop": 90, "schur": 90, "complement": 90, "aris": 90, "bmatrix": 90, "m_k": 90, "h_a": 90, "th_a": 90, "backslash": 90, "r_": 90, "depriv": 90, "compute_next_remov": 90, "current_gamma": 90, "largest": 90, "vanish": [90, 98], "phi_j": 90, "delta_j": 90, "intercept": 90, "slope": 90, "next_removal_gamma": 90, "next_removal_index": 90, "gamma_list": 90, "pi_list": 90, "piecewis": 90, "flatten": 90, "19722222": 90, "05555556": 90, "24722222": 90, "construct_augmented_h": 90, "active_index": 90, "hc": 90, "hrhr": 90, "augment": 90, "_h": 90, "h_": 90, "h_r": 90, "h_c": 90, "h_augment": 90, "fully_relaxed_path": 90, "itmax": 90, "reformul": 90, "min_t": 90, "99958333e": 90, "00000000e": 90, "88888889e": 90, "99938889e": 90, "ot_next_gamma": 90, "hth": 90, "hty": 90, "inact": 90, "_a": 90, "next_gamma": 90, "next_active_index": 90, "recast_ot_as_lasso": 90, "recast": 90, "1_m": 90, "1_n": 90, "particularli": [90, 98], "uot2": 90, "recast_semi_relaxed_as_lasso": 90, "hr": 90, "auxiliari": 90, "constitut": 90, "semi_relaxed_next_gamma": 90, "phi_u": 90, "delta_u": 90, "hra": 90, "ri": 90, "ra": 90, "ith": 90, "lagrang": [90, 95], "semi_relaxed_path": 90, "99980556e": 90, "94444444e": 90, "get_random_project": 91, "proc": 92, "1710": 92, "06276": 92, "mblondel": 92, "puigcerv": [92, 97], "2209": 92, "15466": 92, "dual_obj_grad": 92, "regul": 92, "delta_omega": 92, "grad_alpha": 92, "grad_beta": 92, "get_plan_from_du": 92, "retriev": 92, "get_plan_from_semi_du": 92, "projection_simplex": 92, "substack": [92, 95], "z_i": [92, 95], "semi_dual_obj_grad": 92, "max_omega": 92, "decent": 92, "nbb": 92, "nonzero": 92, "sinhorn": 92, "smooth_ot_semi_du": [92, 98], "solve_du": 92, "solve_semi_du": 92, "negentropi": 92, "sup_": 92, "intend": 92, "appar": 92, "sparsityconstrain": 92, "squaredl2": 92, "averaged_sgd_entropic_transport": 93, "300000": 93, "contin": 93, "alg": 93, "ave_v": 93, "batch_grad_du": 93, "batch_alpha": 93, "batch_beta": 93, "partial_": 93, "b_": 93, "l_v": 93, "b_v": 93, "l_u": 93, "b_u": 93, "c_transform_entrop": 93, "coordinate_grad_semi_du": 93, "bewar": 93, "dual_loss": 93, "sag_entropic_transport": 93, "sgd_entropic_regular": 93, "barycenter_unbalanced_sinkhorn": 94, "barycenter_unbalanced_stabil": [94, 98], "absorpt": 94, "lbfgsb_unbalanc": 94, "reg_div": 94, "regm_div": 94, "div_m": 94, "quantifi": 94, "mm_unbalanced2": 94, "b_i": 94, "check_param": 95, "miss": 95, "check_random_st": 95, "turn": 95, "singleton": 95, "alreadi": [95, 98, 99], "valueerror": 95, "clean_zero": [95, 99], "cost_norm": 95, "return_valu": 95, "lin_squar": 95, "euclidean_dist": 95, "n_samples_1": 95, "n_samples_2": 95, "y1": 95, "get_lowrank_lazytensor": 95, "lazytensor": [95, 99], "get_parameter_pair": 95, "param_1": 95, "param_2": 95, "is_all_finit": 95, "label_norm": 95, "smallest": 95, "omit": 95, "labels_to_mask": 95, "n_label": 95, "mask": 95, "lst": 95, "parmap": 95, "nproc": 95, "multiprocess": 95, "closest": 95, "orthogon": 95, "projection_sparse_simplex": 95, "anastasio": 95, "kyrillidi": 95, "stephen": 95, "becker": 95, "volkan": 95, "cevher": 95, "christoph": 95, "koch": 95, "1206": 95, "1529": 95, "reduce_lazytensor": 95, "get_param": 95, "deep": 95, "subobject": 95, "param": 95, "set_param": 95, "nest": 95, "pipelin": 95, "latter": 95, "__": 95, "getitem": 95, "fly": 95, "sparse_plan": 95, "symbol": 95, "keop": 95, "potential_a": 95, "potential_b": 95, "marginal_a": 95, "a_to_b": 95, "b_to_a": 95, "citat": 95, "plain": 95, "bibtex": [95, 97], "extra": 95, "decor": 95, "mark": 95, "blob": 95, "parenthes": 95, "some_funct": 95, "undefinedparamet": 95, "undefin": 95, "ransport": 96, "sever": [97, 98, 99], "websit": 97, "jmlr": [97, 99], "aur\u00e9li": 97, "nemo": 97, "fournier": 97, "antoni": 97, "schutz": 97, "danica": 97, "sutherland": 97, "alexand": 97, "tong": 97, "articl": 97, "flamary2021pot": 97, "mi": 97, "aur": 97, "lie": [97, 98], "year": [97, 98, 99], "volum": 97, "url": 97, "v22": 97, "451": 97, "linux": [97, 99], "macosx": [97, 99], "window": [97, 99], "cython": [97, 98, 99], "latest": 97, "archiv": 97, "abl": 97, "easier": [97, 98], "wd": 97, "wd_reg": 97, "t_reg": [97, 98], "ba": 97, "question": 97, "slack": 97, "channel": 97, "gitter": 97, "bug": [97, 99], "2292": [97, 98], "38th": [97, 98], "roussillon": 97, "gori": 97, "scalabl": 97, "brain": 97, "tractogram": 97, "medic": 97, "intervent": 97, "miccai": 97, "shenzhen": 97, "china": 97, "octob": 97, "iii": 97, "636": 97, "644": 97, "charlier": 97, "glaun": 97, "collin": 97, "durif": 97, "3457": 97, "3462": 97, "pointer": [98, 99], "concret": 98, "book": 98, "ml": 98, "gaspard": 98, "1781": 98, "overal": 98, "difficult": 98, "kantorovitch": 98, "share": 98, "disjoint": 98, "favor": 98, "popular": 98, "jensen": 98, "shannon": 98, "meaning": 98, "becam": 98, "overcom": 98, "spectra": 98, "itself": 98, "context": 98, "recent": [98, 99], "rapidli": 98, "grow": 98, "novel": [98, 99], "abil": 98, "extend": 98, "proven": 98, "nearli": [98, 99], "exactli": 98, "filter": 98, "known": 98, "affin": 98, "hi": 98, "semin": 98, "procedur": 98, "slower": 98, "tu": 98, "kullbach": 98, "similarli": 98, "pure": 98, "densifi": 98, "lost": 98, "soon": 98, "_q": 98, "overlap": 98, "choic": [98, 99], "long": 98, "w_kw": 98, "mu_k": 98, "b_k": 98, "brought": 98, "eponym": 98, "interfac": 98, "classifi": [98, 99], "xs_map": 98, "inherit": 98, "w_u": 98, "interestingli": 98, "fr\u00e9chet": 98, "w_kw_u": 98, "barycenter_unbalanced_sinkhorn_unbalanc": 98, "surplu": 98, "resolut": 98, "c1_": 98, "c2_": 98, "realign": 98, "ck": 98, "fusion": 98, "coin": 98, "partli": 98, "linearli": 98, "projector": 98, "min_p": 98, "mu_j": 98, "hard": [98, 99], "seamlessli": [98, 99], "incur": 98, "far": 98, "lazili": [98, 99], "prevent": [98, 99], "unwarr": 98, "pot_backend_disable_": 98, "export": 98, "pot_backend_disable_tensorflow": 98, "longer": 98, "hopefulli": [98, 99], "disappear": 98, "becom": 98, "fulli": 98, "importerror": 98, "shortli": 98, "readm": [98, 99], "tri": [98, 99], "quicker": [98, 99], "configur": 98, "nterpol": 98, "cc": 98, "9386": 98, "www": 98, "toronto": 98, "annals2010": 98, "2002": 98, "08276": 98, "_gw": 99, "specififi": 99, "mismatch": 99, "587": 99, "593": 99, "596": 99, "601": 99, "606": 99, "534": 99, "611": 99, "among": 99, "uss": 99, "rak": 99, "improv": 99, "x10": 99, "x100": 99, "million": 99, "central": 99, "unifi": 99, "notat": 99, "betwen": 99, "wb": 99, "value_bw": 99, "encourag": 99, "press": 99, "happen": 99, "deactiv": 99, "526": 99, "535": 99, "tweak": 99, "525": 99, "callback": 99, "507": 99, "533": 99, "wheel": 99, "old": 99, "i686": 99, "arch": 99, "543": 99, "upgrad": 99, "flexibl": 99, "539": 99, "559": 99, "551": 99, "563": 99, "571": 99, "un": 99, "578": 99, "581": 99, "582": 99, "584": 99, "568": 99, "outsid": 99, "502": 99, "504": 99, "unnecessari": 99, "516": 99, "566": 99, "572": 99, "567": 99, "569": 99, "574": 99, "573": 99, "576": 99, "august": 99, "submodul": 99, "front": 99, "unregist": 99, "celebr": 99, "neighborhood": 99, "streamlin": 99, "timeout": 99, "runner": 99, "made": 99, "428": 99, "376": 99, "387": 99, "388": 99, "437": 99, "395": 99, "393": 99, "394": 99, "371": 99, "373": 99, "374": 99, "hit": 99, "stderr": 99, "cerr": 99, "stream": 99, "377": 99, "378": 99, "379": 99, "beyond": 99, "certain": 99, "slightli": 99, "46k": 99, "roughli": 99, "381": 99, "386": 99, "389": 99, "391": 99, "around": 99, "402": 99, "built": 99, "403": 99, "setuptool": 99, "408": 99, "404": 99, "412": 99, "413": 99, "render": 99, "subcal": 99, "421": 99, "422": 99, "break": 99, "try": 99, "424": 99, "425": 99, "notabl": 99, "less": 99, "background": 99, "359": 99, "358": 99, "brand": 99, "357": 99, "minigalleri": 99, "334": 99, "336": 99, "341": 99, "319": 99, "362": 99, "364": 99, "363": 99, "valfunct": 99, "337": 99, "338": 99, "abi": 99, "346": 99, "349": 99, "feed": 99, "345": 99, "backpropag": 99, "351": 99, "352": 99, "tag": 99, "332": 99, "namespac": 99, "331": 99, "333": 99, "enabl": 99, "bring": 99, "older": 99, "realli": 99, "315": 99, "code_of_conduct": 99, "322": 99, "308": 99, "326": 99, "305": 99, "306": 99, "309": 99, "sinkhornl1l2": 99, "311": 99, "313": 99, "317": 99, "3018": 99, "novemb": 99, "nice": 99, "mechan": 99, "wassersein": 99, "moment": 99, "ott": 99, "devias": 99, "sinkorn": 99, "simplifi": 99, "pyproject": 99, "toml": 99, "pe": 99, "aarch64": 99, "raspberri": 99, "android": 99, "phone": 99, "maco": 99, "arm": 99, "processor": 99, "softwar": 99, "cite": 99, "usual": 99, "peopl": 99, "kamel": 99, "guerda": 99, "ai": 99, "idri": 99, "249": 99, "282": 99, "294": 99, "304": 99, "303": 99, "274": 99, "291": 99, "275": 99, "293": 99, "259": 99, "cleanup": 99, "298": 99, "smartphon": 99, "236": 99, "253": 99, "202": 99, "203": 99, "introductori": 99, "leak": 99, "254": 99, "288": 99, "278": 99, "258": 99, "234": 99, "241": 99, "242": 99, "215": 99, "281": 99, "286": 99, "infeas": 99, "201": 99, "codecov": 99, "296": 99, "flake8": 99, "setup": 99, "flag": 99, "organ": 99, "own": 99, "host": 99, "offer": 99, "readthedoc": 99, "beauti": 99, "huge": 99, "travi": 99, "laplac": 99, "acknoledg": 99, "bad": 99, "wassertein": 99, "jump": 99, "wild": 99, "fundament": 99, "month": 99, "until": 99, "python3stat": 99, "exempl": 99, "labeld": 99, "relev": 99, "64bit": 99, "acknowledg": 99, "past": 99, "manylinux": 99, "sep": 99, "rewrit": 99, "unmaintain": 99, "cudamat": 99, "keed": 99, "were": 99, "happi": 99, "stai": 99, "stuff": 99, "markdown": 99, "pipi": 99, "renam": 99, "compliant": 99, "big": 99, "plug": 99, "unus": 99, "unicodedecodeerror": 99, "ascii": 99, "pytest": 99, "pep": 99, "du": 99, "jul": 99, "reloc": 99, "removimg": 99, "apr": 99, "tarnsport": 99, "paralel": 99, "jan": 99, "nov": 99, "oct": 99, "061": 100}, "objects": {"": [[0, 0, 0, "-", "ot"]], "ot": [[74, 0, 0, "-", "backend"], [0, 3, 1, "", "barycenter"], [0, 3, 1, "", "barycenter_unbalanced"], [0, 3, 1, "", "binary_search_circle"], [75, 0, 0, "-", "bregman"], [76, 0, 0, "-", "coot"], [77, 0, 0, "-", "da"], [78, 0, 0, "-", "datasets"], [0, 3, 1, "", "dist"], [79, 0, 0, "-", "dr"], [0, 3, 1, "", "emd"], [0, 3, 1, "", "emd2"], [0, 3, 1, "", "emd2_1d"], [0, 3, 1, "", "emd_1d"], [80, 0, 0, "-", "factored"], [0, 3, 1, "", "factored_optimal_transport"], [0, 3, 1, "", "fused_gromov_wasserstein"], [0, 3, 1, "", "fused_gromov_wasserstein2"], [81, 0, 0, "-", "gaussian"], [82, 0, 0, "-", "gnn"], [83, 0, 0, "-", "gromov"], [0, 3, 1, "", "gromov_barycenters"], [0, 3, 1, "", "gromov_wasserstein"], [0, 3, 1, "", "gromov_wasserstein2"], [84, 0, 0, "-", "lowrank"], [0, 3, 1, "", "lowrank_sinkhorn"], [85, 0, 0, "-", "lp"], [86, 0, 0, "-", "mapping"], [0, 3, 1, "", "max_sliced_wasserstein_distance"], [87, 0, 0, "-", "optim"], [88, 0, 0, "-", "partial"], [89, 0, 0, "-", "plot"], [90, 0, 0, "-", "regpath"], [0, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [0, 3, 1, "", "sinkhorn"], [0, 3, 1, "", "sinkhorn2"], [0, 3, 1, "", "sinkhorn_lpl1_mm"], [0, 3, 1, "", "sinkhorn_unbalanced"], [0, 3, 1, "", "sinkhorn_unbalanced2"], [91, 0, 0, "-", "sliced"], [0, 3, 1, "", "sliced_wasserstein_distance"], [0, 3, 1, "", "sliced_wasserstein_sphere"], [0, 3, 1, "", "sliced_wasserstein_sphere_unif"], [92, 0, 0, "-", "smooth"], [0, 3, 1, "", "solve"], [0, 3, 1, "", "solve_gromov"], [0, 3, 1, "", "solve_sample"], [93, 0, 0, "-", "stochastic"], [0, 3, 1, "", "tic"], [0, 3, 1, "", "toc"], [0, 3, 1, "", "toq"], [94, 0, 0, "-", "unbalanced"], [0, 3, 1, "", "unif"], [95, 0, 0, "-", "utils"], [0, 3, 1, "", "wasserstein_1d"], [0, 3, 1, "", "wasserstein_circle"], [96, 0, 0, "-", "weak"], [0, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[74, 1, 1, "id0", "Backend"], [74, 1, 1, "id84", "CupyBackend"], [74, 1, 1, "id165", "JaxBackend"], [74, 1, 1, "id246", "NumpyBackend"], [74, 1, 1, "id327", "TensorflowBackend"], [74, 1, 1, "id408", "TorchBackend"], [74, 3, 1, "id489", "get_available_backend_implementations"], [74, 3, 1, "id490", "get_backend"], [74, 3, 1, "id491", "get_backend_list"], [74, 3, 1, "id492", "to_numpy"]], "ot.backend.Backend": [[74, 2, 1, "id1", "abs"], [74, 2, 1, "id2", "allclose"], [74, 2, 1, "id3", "any"], [74, 2, 1, "id4", "arange"], [74, 2, 1, "id5", "argmax"], [74, 2, 1, "id6", "argmin"], [74, 2, 1, "id7", "argsort"], [74, 2, 1, "id8", "array_equal"], [74, 2, 1, "id9", "assert_same_dtype_device"], [74, 2, 1, "id10", "atan2"], [74, 2, 1, "id11", "bitsize"], [74, 2, 1, "id12", "clip"], [74, 2, 1, "id13", "concatenate"], [74, 2, 1, "id14", "coo_matrix"], [74, 2, 1, "id15", "copy"], [74, 2, 1, "id16", "cumsum"], [74, 2, 1, "id17", "detach"], [74, 2, 1, "id18", "device_type"], [74, 2, 1, "id19", "diag"], [74, 2, 1, "id20", "dot"], [74, 2, 1, "id21", "dtype_device"], [74, 2, 1, "id22", "eigh"], [74, 2, 1, "id23", "einsum"], [74, 2, 1, "id24", "eliminate_zeros"], [74, 2, 1, "id25", "exp"], [74, 2, 1, "id26", "eye"], [74, 2, 1, "id27", "flip"], [74, 2, 1, "id28", "floor"], [74, 2, 1, "id29", "from_numpy"], [74, 2, 1, "id30", "full"], [74, 2, 1, "id31", "inv"], [74, 2, 1, "id32", "is_floating_point"], [74, 2, 1, "id33", "isfinite"], [74, 2, 1, "id34", "isinf"], [74, 2, 1, "id35", "isnan"], [74, 2, 1, "id36", "issparse"], [74, 2, 1, "id37", "kl_div"], [74, 2, 1, "id38", "linspace"], [74, 2, 1, "id39", "log"], [74, 2, 1, "id40", "logsumexp"], [74, 2, 1, "id41", "matmul"], [74, 2, 1, "id42", "max"], [74, 2, 1, "id43", "maximum"], [74, 2, 1, "id44", "mean"], [74, 2, 1, "id45", "median"], [74, 2, 1, "id46", "meshgrid"], [74, 2, 1, "id47", "min"], [74, 2, 1, "id48", "minimum"], [74, 2, 1, "id49", "nan_to_num"], [74, 2, 1, "id50", "norm"], [74, 2, 1, "id51", "ones"], [74, 2, 1, "id52", "outer"], [74, 2, 1, "id53", "power"], [74, 2, 1, "id54", "prod"], [74, 2, 1, "id55", "qr"], [74, 2, 1, "id56", "rand"], [74, 2, 1, "id57", "randn"], [74, 2, 1, "id58", "repeat"], [74, 2, 1, "id59", "reshape"], [74, 2, 1, "id60", "searchsorted"], [74, 2, 1, "id61", "seed"], [74, 2, 1, "id62", "set_gradients"], [74, 2, 1, "id63", "sign"], [74, 2, 1, "id64", "solve"], [74, 2, 1, "id65", "sort"], [74, 2, 1, "id66", "sort2"], [74, 2, 1, "id67", "sqrt"], [74, 2, 1, "id68", "sqrtm"], [74, 2, 1, "id69", "squeeze"], [74, 2, 1, "id70", "stack"], [74, 2, 1, "id71", "std"], [74, 2, 1, "id72", "sum"], [74, 2, 1, "id73", "take_along_axis"], [74, 2, 1, "id74", "tile"], [74, 2, 1, "id75", "to_numpy"], [74, 2, 1, "id76", "tocsr"], [74, 2, 1, "id77", "todense"], [74, 2, 1, "id78", "trace"], [74, 2, 1, "id79", "transpose"], [74, 2, 1, "id80", "unique"], [74, 2, 1, "id81", "where"], [74, 2, 1, "id82", "zero_pad"], [74, 2, 1, "id83", "zeros"]], "ot.backend.CupyBackend": [[74, 2, 1, "id85", "abs"], [74, 2, 1, "id86", "allclose"], [74, 2, 1, "id87", "any"], [74, 2, 1, "id88", "arange"], [74, 2, 1, "id89", "argmax"], [74, 2, 1, "id90", "argmin"], [74, 2, 1, "id91", "argsort"], [74, 2, 1, "id92", "array_equal"], [74, 2, 1, "id93", "assert_same_dtype_device"], [74, 2, 1, "id94", "atan2"], [74, 2, 1, "id95", "bitsize"], [74, 2, 1, "id96", "clip"], [74, 2, 1, "id97", "concatenate"], [74, 2, 1, "id98", "coo_matrix"], [74, 2, 1, "id99", "copy"], [74, 2, 1, "id100", "cumsum"], [74, 2, 1, "id101", "device_type"], [74, 2, 1, "id102", "diag"], [74, 2, 1, "id103", "dot"], [74, 2, 1, "id104", "dtype_device"], [74, 2, 1, "id105", "eigh"], [74, 2, 1, "id106", "einsum"], [74, 2, 1, "id107", "eliminate_zeros"], [74, 2, 1, "id108", "exp"], [74, 2, 1, "id109", "eye"], [74, 2, 1, "id110", "flip"], [74, 2, 1, "id111", "floor"], [74, 2, 1, "id112", "full"], [74, 2, 1, "id113", "inv"], [74, 2, 1, "id114", "is_floating_point"], [74, 2, 1, "id115", "isfinite"], [74, 2, 1, "id116", "isinf"], [74, 2, 1, "id117", "isnan"], [74, 2, 1, "id118", "issparse"], [74, 2, 1, "id119", "kl_div"], [74, 2, 1, "id120", "linspace"], [74, 2, 1, "id121", "log"], [74, 2, 1, "id122", "logsumexp"], [74, 2, 1, "id123", "matmul"], [74, 2, 1, "id124", "max"], [74, 2, 1, "id125", "maximum"], [74, 2, 1, "id126", "mean"], [74, 2, 1, "id127", "median"], [74, 2, 1, "id128", "meshgrid"], [74, 2, 1, "id129", "min"], [74, 2, 1, "id130", "minimum"], [74, 2, 1, "id131", "nan_to_num"], [74, 2, 1, "id132", "norm"], [74, 2, 1, "id133", "ones"], [74, 2, 1, "id134", "outer"], [74, 2, 1, "id135", "power"], [74, 2, 1, "id136", "prod"], [74, 2, 1, "id137", "qr"], [74, 2, 1, "id138", "rand"], [74, 2, 1, "id139", "randn"], [74, 2, 1, "id140", "repeat"], [74, 2, 1, "id141", "reshape"], [74, 2, 1, "id142", "searchsorted"], [74, 2, 1, "id143", "seed"], [74, 2, 1, "id144", "set_gradients"], [74, 2, 1, "id145", "sign"], [74, 2, 1, "id146", "solve"], [74, 2, 1, "id147", "sort"], [74, 2, 1, "id148", "sort2"], [74, 2, 1, "id149", "sqrt"], [74, 2, 1, "id150", "sqrtm"], [74, 2, 1, "id151", "squeeze"], [74, 2, 1, "id152", "stack"], [74, 2, 1, "id153", "std"], [74, 2, 1, "id154", "sum"], [74, 2, 1, "id155", "take_along_axis"], [74, 2, 1, "id156", "tile"], [74, 2, 1, "id157", "tocsr"], [74, 2, 1, "id158", "todense"], [74, 2, 1, "id159", "trace"], [74, 2, 1, "id160", "transpose"], [74, 2, 1, "id161", "unique"], [74, 2, 1, "id162", "where"], [74, 2, 1, "id163", "zero_pad"], [74, 2, 1, "id164", "zeros"]], "ot.backend.JaxBackend": [[74, 2, 1, "id166", "abs"], [74, 2, 1, "id167", "allclose"], [74, 2, 1, "id168", "any"], [74, 2, 1, "id169", "arange"], [74, 2, 1, "id170", "argmax"], [74, 2, 1, "id171", "argmin"], [74, 2, 1, "id172", "argsort"], [74, 2, 1, "id173", "array_equal"], [74, 2, 1, "id174", "assert_same_dtype_device"], [74, 2, 1, "id175", "atan2"], [74, 2, 1, "id176", "bitsize"], [74, 2, 1, "id177", "clip"], [74, 2, 1, "id178", "concatenate"], [74, 2, 1, "id179", "coo_matrix"], [74, 2, 1, "id180", "copy"], [74, 2, 1, "id181", "cumsum"], [74, 2, 1, "id182", "device_type"], [74, 2, 1, "id183", "diag"], [74, 2, 1, "id184", "dot"], [74, 2, 1, "id185", "dtype_device"], [74, 2, 1, "id186", "eigh"], [74, 2, 1, "id187", "einsum"], [74, 2, 1, "id188", "eliminate_zeros"], [74, 2, 1, "id189", "exp"], [74, 2, 1, "id190", "eye"], [74, 2, 1, "id191", "flip"], [74, 2, 1, "id192", "floor"], [74, 2, 1, "id193", "full"], [74, 2, 1, "id194", "inv"], [74, 2, 1, "id195", "is_floating_point"], [74, 2, 1, "id196", "isfinite"], [74, 2, 1, "id197", "isinf"], [74, 2, 1, "id198", "isnan"], [74, 2, 1, "id199", "issparse"], [74, 2, 1, "id200", "kl_div"], [74, 2, 1, "id201", "linspace"], [74, 2, 1, "id202", "log"], [74, 2, 1, "id203", "logsumexp"], [74, 2, 1, "id204", "matmul"], [74, 2, 1, "id205", "max"], [74, 2, 1, "id206", "maximum"], [74, 2, 1, "id207", "mean"], [74, 2, 1, "id208", "median"], [74, 2, 1, "id209", "meshgrid"], [74, 2, 1, "id210", "min"], [74, 2, 1, "id211", "minimum"], [74, 2, 1, "id212", "nan_to_num"], [74, 2, 1, "id213", "norm"], [74, 2, 1, "id214", "ones"], [74, 2, 1, "id215", "outer"], [74, 2, 1, "id216", "power"], [74, 2, 1, "id217", "prod"], [74, 2, 1, "id218", "qr"], [74, 2, 1, "id219", "rand"], [74, 2, 1, "id220", "randn"], [74, 2, 1, "id221", "repeat"], [74, 2, 1, "id222", "reshape"], [74, 2, 1, "id223", "searchsorted"], [74, 2, 1, "id224", "seed"], [74, 2, 1, "id225", "set_gradients"], [74, 2, 1, "id226", "sign"], [74, 2, 1, "id227", "solve"], [74, 2, 1, "id228", "sort"], [74, 2, 1, "id229", "sort2"], [74, 2, 1, "id230", "sqrt"], [74, 2, 1, "id231", "sqrtm"], [74, 2, 1, "id232", "squeeze"], [74, 2, 1, "id233", "stack"], [74, 2, 1, "id234", "std"], [74, 2, 1, "id235", "sum"], [74, 2, 1, "id236", "take_along_axis"], [74, 2, 1, "id237", "tile"], [74, 2, 1, "id238", "tocsr"], [74, 2, 1, "id239", "todense"], [74, 2, 1, "id240", "trace"], [74, 2, 1, "id241", "transpose"], [74, 2, 1, "id242", "unique"], [74, 2, 1, "id243", "where"], [74, 2, 1, "id244", "zero_pad"], [74, 2, 1, "id245", "zeros"]], "ot.backend.NumpyBackend": [[74, 2, 1, "id247", "abs"], [74, 2, 1, "id248", "allclose"], [74, 2, 1, "id249", "any"], [74, 2, 1, "id250", "arange"], [74, 2, 1, "id251", "argmax"], [74, 2, 1, "id252", "argmin"], [74, 2, 1, "id253", "argsort"], [74, 2, 1, "id254", "array_equal"], [74, 2, 1, "id255", "assert_same_dtype_device"], [74, 2, 1, "id256", "atan2"], [74, 2, 1, "id257", "bitsize"], [74, 2, 1, "id258", "clip"], [74, 2, 1, "id259", "concatenate"], [74, 2, 1, "id260", "coo_matrix"], [74, 2, 1, "id261", "copy"], [74, 2, 1, "id262", "cumsum"], [74, 2, 1, "id263", "device_type"], [74, 2, 1, "id264", "diag"], [74, 2, 1, "id265", "dot"], [74, 2, 1, "id266", "dtype_device"], [74, 2, 1, "id267", "eigh"], [74, 2, 1, "id268", "einsum"], [74, 2, 1, "id269", "eliminate_zeros"], [74, 2, 1, "id270", "exp"], [74, 2, 1, "id271", "eye"], [74, 2, 1, "id272", "flip"], [74, 2, 1, "id273", "floor"], [74, 2, 1, "id274", "full"], [74, 2, 1, "id275", "inv"], [74, 2, 1, "id276", "is_floating_point"], [74, 2, 1, "id277", "isfinite"], [74, 2, 1, "id278", "isinf"], [74, 2, 1, "id279", "isnan"], [74, 2, 1, "id280", "issparse"], [74, 2, 1, "id281", "kl_div"], [74, 2, 1, "id282", "linspace"], [74, 2, 1, "id283", "log"], [74, 2, 1, "id284", "logsumexp"], [74, 2, 1, "id285", "matmul"], [74, 2, 1, "id286", "max"], [74, 2, 1, "id287", "maximum"], [74, 2, 1, "id288", "mean"], [74, 2, 1, "id289", "median"], [74, 2, 1, "id290", "meshgrid"], [74, 2, 1, "id291", "min"], [74, 2, 1, "id292", "minimum"], [74, 2, 1, "id293", "nan_to_num"], [74, 2, 1, "id294", "norm"], [74, 2, 1, "id295", "ones"], [74, 2, 1, "id296", "outer"], [74, 2, 1, "id297", "power"], [74, 2, 1, "id298", "prod"], [74, 2, 1, "id299", "qr"], [74, 2, 1, "id300", "rand"], [74, 2, 1, "id301", "randn"], [74, 2, 1, "id302", "repeat"], [74, 2, 1, "id303", "reshape"], [74, 2, 1, "id304", "searchsorted"], [74, 2, 1, "id305", "seed"], [74, 2, 1, "id306", "set_gradients"], [74, 2, 1, "id307", "sign"], [74, 2, 1, "id308", "solve"], [74, 2, 1, "id309", "sort"], [74, 2, 1, "id310", "sort2"], [74, 2, 1, "id311", "sqrt"], [74, 2, 1, "id312", "sqrtm"], [74, 2, 1, "id313", "squeeze"], [74, 2, 1, "id314", "stack"], [74, 2, 1, "id315", "std"], [74, 2, 1, "id316", "sum"], [74, 2, 1, "id317", "take_along_axis"], [74, 2, 1, "id318", "tile"], [74, 2, 1, "id319", "tocsr"], [74, 2, 1, "id320", "todense"], [74, 2, 1, "id321", "trace"], [74, 2, 1, "id322", "transpose"], [74, 2, 1, "id323", "unique"], [74, 2, 1, "id324", "where"], [74, 2, 1, "id325", "zero_pad"], [74, 2, 1, "id326", "zeros"]], "ot.backend.TensorflowBackend": [[74, 2, 1, "id328", "abs"], [74, 2, 1, "id329", "allclose"], [74, 2, 1, "id330", "any"], [74, 2, 1, "id331", "arange"], [74, 2, 1, "id332", "argmax"], [74, 2, 1, "id333", "argmin"], [74, 2, 1, "id334", "argsort"], [74, 2, 1, "id335", "array_equal"], [74, 2, 1, "id336", "assert_same_dtype_device"], [74, 2, 1, "id337", "atan2"], [74, 2, 1, "id338", "bitsize"], [74, 2, 1, "id339", "clip"], [74, 2, 1, "id340", "concatenate"], [74, 2, 1, "id341", "coo_matrix"], [74, 2, 1, "id342", "copy"], [74, 2, 1, "id343", "cumsum"], [74, 2, 1, "id344", "device_type"], [74, 2, 1, "id345", "diag"], [74, 2, 1, "id346", "dot"], [74, 2, 1, "id347", "dtype_device"], [74, 2, 1, "id348", "eigh"], [74, 2, 1, "id349", "einsum"], [74, 2, 1, "id350", "eliminate_zeros"], [74, 2, 1, "id351", "exp"], [74, 2, 1, "id352", "eye"], [74, 2, 1, "id353", "flip"], [74, 2, 1, "id354", "floor"], [74, 2, 1, "id355", "full"], [74, 2, 1, "id356", "inv"], [74, 2, 1, "id357", "is_floating_point"], [74, 2, 1, "id358", "isfinite"], [74, 2, 1, "id359", "isinf"], [74, 2, 1, "id360", "isnan"], [74, 2, 1, "id361", "issparse"], [74, 2, 1, "id362", "kl_div"], [74, 2, 1, "id363", "linspace"], [74, 2, 1, "id364", "log"], [74, 2, 1, "id365", "logsumexp"], [74, 2, 1, "id366", "matmul"], [74, 2, 1, "id367", "max"], [74, 2, 1, "id368", "maximum"], [74, 2, 1, "id369", "mean"], [74, 2, 1, "id370", "median"], [74, 2, 1, "id371", "meshgrid"], [74, 2, 1, "id372", "min"], [74, 2, 1, "id373", "minimum"], [74, 2, 1, "id374", "nan_to_num"], [74, 2, 1, "id375", "norm"], [74, 2, 1, "id376", "ones"], [74, 2, 1, "id377", "outer"], [74, 2, 1, "id378", "power"], [74, 2, 1, "id379", "prod"], [74, 2, 1, "id380", "qr"], [74, 2, 1, "id381", "rand"], [74, 2, 1, "id382", "randn"], [74, 2, 1, "id383", "repeat"], [74, 2, 1, "id384", "reshape"], [74, 2, 1, "id385", "searchsorted"], [74, 2, 1, "id386", "seed"], [74, 2, 1, "id387", "set_gradients"], [74, 2, 1, "id388", "sign"], [74, 2, 1, "id389", "solve"], [74, 2, 1, "id390", "sort"], [74, 2, 1, "id391", "sort2"], [74, 2, 1, "id392", "sqrt"], [74, 2, 1, "id393", "sqrtm"], [74, 2, 1, "id394", "squeeze"], [74, 2, 1, "id395", "stack"], [74, 2, 1, "id396", "std"], [74, 2, 1, "id397", "sum"], [74, 2, 1, "id398", "take_along_axis"], [74, 2, 1, "id399", "tile"], [74, 2, 1, "id400", "tocsr"], [74, 2, 1, "id401", "todense"], [74, 2, 1, "id402", "trace"], [74, 2, 1, "id403", "transpose"], [74, 2, 1, "id404", "unique"], [74, 2, 1, "id405", "where"], [74, 2, 1, "id406", "zero_pad"], [74, 2, 1, "id407", "zeros"]], "ot.backend.TorchBackend": [[74, 2, 1, "id409", "abs"], [74, 2, 1, "id410", "allclose"], [74, 2, 1, "id411", "any"], [74, 2, 1, "id412", "arange"], [74, 2, 1, "id413", "argmax"], [74, 2, 1, "id414", "argmin"], [74, 2, 1, "id415", "argsort"], [74, 2, 1, "id416", "array_equal"], [74, 2, 1, "id417", "assert_same_dtype_device"], [74, 2, 1, "id418", "atan2"], [74, 2, 1, "id419", "bitsize"], [74, 2, 1, "id420", "clip"], [74, 2, 1, "id421", "concatenate"], [74, 2, 1, "id422", "coo_matrix"], [74, 2, 1, "id423", "copy"], [74, 2, 1, "id424", "cumsum"], [74, 2, 1, "id425", "device_type"], [74, 2, 1, "id426", "diag"], [74, 2, 1, "id427", "dot"], [74, 2, 1, "id428", "dtype_device"], [74, 2, 1, "id429", "eigh"], [74, 2, 1, "id430", "einsum"], [74, 2, 1, "id431", "eliminate_zeros"], [74, 2, 1, "id432", "exp"], [74, 2, 1, "id433", "eye"], [74, 2, 1, "id434", "flip"], [74, 2, 1, "id435", "floor"], [74, 2, 1, "id436", "full"], [74, 2, 1, "id437", "inv"], [74, 2, 1, "id438", "is_floating_point"], [74, 2, 1, "id439", "isfinite"], [74, 2, 1, "id440", "isinf"], [74, 2, 1, "id441", "isnan"], [74, 2, 1, "id442", "issparse"], [74, 2, 1, "id443", "kl_div"], [74, 2, 1, "id444", "linspace"], [74, 2, 1, "id445", "log"], [74, 2, 1, "id446", "logsumexp"], [74, 2, 1, "id447", "matmul"], [74, 2, 1, "id448", "max"], [74, 2, 1, "id449", "maximum"], [74, 2, 1, "id450", "mean"], [74, 2, 1, "id451", "median"], [74, 2, 1, "id452", "meshgrid"], [74, 2, 1, "id453", "min"], [74, 2, 1, "id454", "minimum"], [74, 2, 1, "id455", "nan_to_num"], [74, 2, 1, "id456", "norm"], [74, 2, 1, "id457", "ones"], [74, 2, 1, "id458", "outer"], [74, 2, 1, "id459", "power"], [74, 2, 1, "id460", "prod"], [74, 2, 1, "id461", "qr"], [74, 2, 1, "id462", "rand"], [74, 2, 1, "id463", "randn"], [74, 2, 1, "id464", "repeat"], [74, 2, 1, "id465", "reshape"], [74, 2, 1, "id466", "searchsorted"], [74, 2, 1, "id467", "seed"], [74, 2, 1, "id468", "set_gradients"], [74, 2, 1, "id469", "sign"], [74, 2, 1, "id470", "solve"], [74, 2, 1, "id471", "sort"], [74, 2, 1, "id472", "sort2"], [74, 2, 1, "id473", "sqrt"], [74, 2, 1, "id474", "sqrtm"], [74, 2, 1, "id475", "squeeze"], [74, 2, 1, "id476", "stack"], [74, 2, 1, "id477", "std"], [74, 2, 1, "id478", "sum"], [74, 2, 1, "id479", "take_along_axis"], [74, 2, 1, "id480", "tile"], [74, 2, 1, "id481", "tocsr"], [74, 2, 1, "id482", "todense"], [74, 2, 1, "id483", "trace"], [74, 2, 1, "id484", "transpose"], [74, 2, 1, "id485", "unique"], [74, 2, 1, "id486", "where"], [74, 2, 1, "id487", "zero_pad"], [74, 2, 1, "id488", "zeros"]], "ot.bregman": [[75, 3, 1, "", "barycenter"], [75, 3, 1, "", "barycenter_debiased"], [75, 3, 1, "", "barycenter_sinkhorn"], [75, 3, 1, "", "barycenter_stabilized"], [75, 3, 1, "", "convolutional_barycenter2d"], [75, 3, 1, "", "convolutional_barycenter2d_debiased"], [75, 3, 1, "", "empirical_sinkhorn"], [75, 3, 1, "", "empirical_sinkhorn2"], [75, 3, 1, "", "free_support_sinkhorn_barycenter"], [75, 3, 1, "", "geometricBar"], [75, 3, 1, "", "geometricMean"], [75, 3, 1, "", "greenkhorn"], [75, 3, 1, "", "jcpot_barycenter"], [75, 3, 1, "", "projC"], [75, 3, 1, "", "projR"], [75, 3, 1, "", "screenkhorn"], [75, 3, 1, "", "sinkhorn"], [75, 3, 1, "", "sinkhorn2"], [75, 3, 1, "", "sinkhorn_epsilon_scaling"], [75, 3, 1, "", "sinkhorn_knopp"], [75, 3, 1, "", "sinkhorn_log"], [75, 3, 1, "", "sinkhorn_stabilized"], [75, 3, 1, "", "unmix"]], "ot.coot": [[76, 3, 1, "id0", "co_optimal_transport"], [76, 3, 1, "id4", "co_optimal_transport2"]], "ot.da": [[77, 1, 1, "id0", "BaseTransport"], [77, 1, 1, "id46", "EMDLaplaceTransport"], [77, 1, 1, "id53", "EMDTransport"], [77, 1, 1, "id59", "JCPOTTransport"], [77, 1, 1, "id72", "LinearGWTransport"], [77, 1, 1, "id76", "LinearTransport"], [77, 1, 1, "id83", "MappingTransport"], [77, 1, 1, "id90", "NearestBrenierPotential"], [77, 1, 1, "id98", "SinkhornL1l2Transport"], [77, 1, 1, "id106", "SinkhornLpl1Transport"], [77, 1, 1, "id113", "SinkhornTransport"], [77, 1, 1, "id125", "UnbalancedSinkhornTransport"], [77, 3, 1, "id132", "distribution_estimation_uniform"], [77, 3, 1, "id133", "emd_laplace"], [77, 3, 1, "id137", "sinkhorn_l1l2_gl"], [77, 3, 1, "id141", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[77, 2, 1, "id38", "fit"], [77, 2, 1, "id39", "fit_transform"], [77, 2, 1, "id40", "inverse_transform"], [77, 2, 1, "id41", "inverse_transform_labels"], [77, 2, 1, "id42", "transform"], [77, 2, 1, "id43", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[77, 4, 1, "id47", "coupling_"], [77, 2, 1, "id52", "fit"]], "ot.da.EMDTransport": [[77, 4, 1, "id54", "coupling_"], [77, 2, 1, "id58", "fit"]], "ot.da.JCPOTTransport": [[77, 4, 1, "id60", "coupling_"], [77, 2, 1, "id66", "fit"], [77, 2, 1, "id67", "inverse_transform_labels"], [77, 4, 1, "id62", "log_"], [77, 4, 1, "id61", "proportions_"], [77, 2, 1, "id68", "transform"], [77, 2, 1, "id69", "transform_labels"]], "ot.da.LinearGWTransport": [[77, 2, 1, "id75", "fit"]], "ot.da.LinearTransport": [[77, 2, 1, "id80", "fit"], [77, 2, 1, "id81", "inverse_transform"], [77, 2, 1, "id82", "transform"]], "ot.da.MappingTransport": [[77, 4, 1, "id84", "coupling_"], [77, 2, 1, "id88", "fit"], [77, 4, 1, "id86", "log_"], [77, 4, 1, "id85", "mapping_"], [77, 2, 1, "id89", "transform"]], "ot.da.NearestBrenierPotential": [[77, 2, 1, "id93", "fit"], [77, 2, 1, "id95", "transform"]], "ot.da.SinkhornL1l2Transport": [[77, 4, 1, "id99", "coupling_"], [77, 2, 1, "id105", "fit"], [77, 4, 1, "id100", "log_"]], "ot.da.SinkhornLpl1Transport": [[77, 4, 1, "id107", "coupling_"], [77, 2, 1, "id112", "fit"]], "ot.da.SinkhornTransport": [[77, 4, 1, "id114", "coupling_"], [77, 2, 1, "id122", "fit"], [77, 2, 1, "id123", "inverse_transform"], [77, 4, 1, "id115", "log_"], [77, 2, 1, "id124", "transform"]], "ot.da.UnbalancedSinkhornTransport": [[77, 4, 1, "id126", "coupling_"], [77, 2, 1, "id131", "fit"], [77, 4, 1, "id127", "log_"]], "ot.datasets": [[78, 3, 1, "id0", "make_1D_gauss"], [78, 3, 1, "id1", "make_2D_samples_gauss"], [78, 3, 1, "id2", "make_data_classif"]], "ot.dr": [[79, 3, 1, "id0", "dist"], [79, 3, 1, "id4", "ewca"], [79, 3, 1, "id7", "fda"], [79, 3, 1, "id8", "logsumexp"], [79, 3, 1, "id9", "projection_robust_wasserstein"], [79, 3, 1, "id12", "sinkhorn"], [79, 3, 1, "id13", "sinkhorn_log"], [79, 3, 1, "id14", "split_classes"], [79, 3, 1, "id15", "wda"]], "ot.factored": [[80, 3, 1, "id0", "factored_optimal_transport"]], "ot.gaussian": [[81, 3, 1, "id0", "bures_wasserstein_barycenter"], [81, 3, 1, "id18", "bures_wasserstein_distance"], [81, 3, 1, "id21", "bures_wasserstein_mapping"], [81, 3, 1, "id25", "empirical_bures_wasserstein_barycenter"], [81, 3, 1, "id28", "empirical_bures_wasserstein_distance"], [81, 3, 1, "id31", "empirical_bures_wasserstein_mapping"], [81, 3, 1, "id35", "empirical_gaussian_gromov_wasserstein_distance"], [81, 3, 1, "id38", "empirical_gaussian_gromov_wasserstein_mapping"], [81, 3, 1, "id40", "gaussian_gromov_wasserstein_distance"], [81, 3, 1, "id43", "gaussian_gromov_wasserstein_mapping"]], "ot.gnn": [[82, 3, 1, "", "FGW_distance_to_templates"], [82, 1, 1, "", "TFGWPooling"], [82, 1, 1, "", "TWPooling"], [82, 3, 1, "", "wasserstein_distance_to_templates"]], "ot.gnn.TFGWPooling": [[82, 2, 1, "", "forward"]], "ot.gnn.TWPooling": [[82, 2, 1, "", "forward"]], "ot.gromov": [[83, 3, 1, "", "BAPG_fused_gromov_wasserstein"], [83, 3, 1, "", "BAPG_fused_gromov_wasserstein2"], [83, 3, 1, "", "BAPG_gromov_wasserstein"], [83, 3, 1, "", "BAPG_gromov_wasserstein2"], [83, 3, 1, "", "GW_distance_estimation"], [83, 3, 1, "", "entropic_fused_gromov_barycenters"], [83, 3, 1, "", "entropic_fused_gromov_wasserstein"], [83, 3, 1, "", "entropic_fused_gromov_wasserstein2"], [83, 3, 1, "", "entropic_gromov_barycenters"], [83, 3, 1, "", "entropic_gromov_wasserstein"], [83, 3, 1, "", "entropic_gromov_wasserstein2"], [83, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein"], [83, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein2"], [83, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein"], [83, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein2"], [83, 3, 1, "", "fgw_barycenters"], [83, 3, 1, "", "fused_gromov_wasserstein"], [83, 3, 1, "", "fused_gromov_wasserstein2"], [83, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [83, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [83, 3, 1, "", "gromov_barycenters"], [83, 3, 1, "", "gromov_wasserstein"], [83, 3, 1, "", "gromov_wasserstein2"], [83, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [83, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [83, 3, 1, "", "gwggrad"], [83, 3, 1, "", "gwloss"], [83, 3, 1, "", "init_matrix"], [83, 3, 1, "", "init_matrix_semirelaxed"], [83, 3, 1, "", "pointwise_gromov_wasserstein"], [83, 3, 1, "", "sampled_gromov_wasserstein"], [83, 3, 1, "", "semirelaxed_fused_gromov_wasserstein"], [83, 3, 1, "", "semirelaxed_fused_gromov_wasserstein2"], [83, 3, 1, "", "semirelaxed_gromov_wasserstein"], [83, 3, 1, "", "semirelaxed_gromov_wasserstein2"], [83, 3, 1, "", "solve_gromov_linesearch"], [83, 3, 1, "", "solve_semirelaxed_gromov_linesearch"], [83, 3, 1, "", "tensor_product"], [83, 3, 1, "", "update_feature_matrix"], [83, 3, 1, "", "update_kl_loss"], [83, 3, 1, "", "update_square_loss"]], "ot.lowrank": [[84, 3, 1, "id0", "compute_lr_sqeuclidean_matrix"], [84, 3, 1, "id4", "lowrank_sinkhorn"]], "ot.lp": [[85, 3, 1, "", "barycenter"], [85, 3, 1, "", "binary_search_circle"], [85, 3, 1, "", "center_ot_dual"], [85, 3, 1, "", "check_number_threads"], [85, 3, 1, "", "dmmot_monge_1dgrid_loss"], [85, 3, 1, "", "dmmot_monge_1dgrid_optimize"], [85, 3, 1, "id0", "emd"], [85, 3, 1, "id17", "emd2"], [85, 3, 1, "", "emd2_1d"], [85, 3, 1, "", "emd_1d"], [85, 3, 1, "", "estimate_dual_null_weights"], [85, 3, 1, "id24", "free_support_barycenter"], [85, 3, 1, "id28", "generalized_free_support_barycenter"], [85, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [85, 3, 1, "", "wasserstein_1d"], [85, 3, 1, "", "wasserstein_circle"]], "ot.mapping": [[86, 3, 1, "id0", "joint_OT_mapping_kernel"], [86, 3, 1, "id8", "joint_OT_mapping_linear"], [86, 3, 1, "id11", "nearest_brenier_potential_fit"], [86, 3, 1, "id13", "nearest_brenier_potential_predict_bounds"]], "ot.optim": [[87, 3, 1, "id0", "cg"], [87, 3, 1, "id13", "gcg"], [87, 3, 1, "id17", "generic_conditional_gradient"], [87, 3, 1, "id23", "line_search_armijo"], [87, 3, 1, "id24", "semirelaxed_cg"], [87, 3, 1, "id27", "solve_1d_linesearch_quad"]], "ot.partial": [[88, 3, 1, "id0", "entropic_partial_gromov_wasserstein"], [88, 3, 1, "id17", "entropic_partial_gromov_wasserstein2"], [88, 3, 1, "id21", "entropic_partial_wasserstein"], [88, 3, 1, "id24", "gwgrad_partial"], [88, 3, 1, "id27", "gwloss_partial"], [88, 3, 1, "id28", "partial_gromov_wasserstein"], [88, 3, 1, "id31", "partial_gromov_wasserstein2"], [88, 3, 1, "id34", "partial_wasserstein"], [88, 3, 1, "id37", "partial_wasserstein2"], [88, 3, 1, "id40", "partial_wasserstein_lagrange"]], "ot.plot": [[89, 3, 1, "id0", "plot1D_mat"], [89, 3, 1, "id1", "plot2D_samples_mat"]], "ot.regpath": [[90, 3, 1, "id0", "complement_schur"], [90, 3, 1, "id12", "compute_next_removal"], [90, 3, 1, "id15", "compute_transport_plan"], [90, 3, 1, "id18", "construct_augmented_H"], [90, 3, 1, "id19", "fully_relaxed_path"], [90, 3, 1, "id21", "ot_next_gamma"], [90, 3, 1, "id23", "recast_ot_as_lasso"], [90, 3, 1, "id25", "recast_semi_relaxed_as_lasso"], [90, 3, 1, "id26", "regularization_path"], [90, 3, 1, "id28", "semi_relaxed_next_gamma"], [90, 3, 1, "id30", "semi_relaxed_path"]], "ot.sliced": [[91, 3, 1, "id0", "get_random_projections"], [91, 3, 1, "id5", "max_sliced_wasserstein_distance"], [91, 3, 1, "id7", "sliced_wasserstein_distance"], [91, 3, 1, "id9", "sliced_wasserstein_sphere"], [91, 3, 1, "id11", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[92, 1, 1, "id0", "NegEntropy"], [92, 1, 1, "id10", "Regularization"], [92, 1, 1, "id14", "SparsityConstrained"], [92, 1, 1, "id18", "SquaredL2"], [92, 3, 1, "id22", "dual_obj_grad"], [92, 3, 1, "id23", "get_plan_from_dual"], [92, 3, 1, "id24", "get_plan_from_semi_dual"], [92, 3, 1, "id25", "projection_simplex"], [92, 3, 1, "id26", "semi_dual_obj_grad"], [92, 3, 1, "id27", "smooth_ot_dual"], [92, 3, 1, "id32", "smooth_ot_semi_dual"], [92, 3, 1, "id37", "solve_dual"], [92, 3, 1, "id38", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[92, 2, 1, "id7", "Omega"], [92, 2, 1, "id8", "delta_Omega"], [92, 2, 1, "id9", "max_Omega"]], "ot.smooth.Regularization": [[92, 2, 1, "id11", "Omega"], [92, 2, 1, "id12", "delta_Omega"], [92, 2, 1, "id13", "max_Omega"]], "ot.smooth.SparsityConstrained": [[92, 2, 1, "id15", "Omega"], [92, 2, 1, "id16", "delta_Omega"], [92, 2, 1, "id17", "max_Omega"]], "ot.smooth.SquaredL2": [[92, 2, 1, "id19", "Omega"], [92, 2, 1, "id20", "delta_Omega"], [92, 2, 1, "id21", "max_Omega"]], "ot.stochastic": [[93, 3, 1, "id0", "averaged_sgd_entropic_transport"], [93, 3, 1, "id14", "batch_grad_dual"], [93, 3, 1, "id16", "c_transform_entropic"], [93, 3, 1, "id18", "coordinate_grad_semi_dual"], [93, 3, 1, "id20", "loss_dual_entropic"], [93, 3, 1, "id22", "loss_dual_quadratic"], [93, 3, 1, "id24", "plan_dual_entropic"], [93, 3, 1, "id26", "plan_dual_quadratic"], [93, 3, 1, "id28", "sag_entropic_transport"], [93, 3, 1, "id30", "sgd_entropic_regularization"], [93, 3, 1, "id32", "solve_dual_entropic"], [93, 3, 1, "id34", "solve_semi_dual_entropic"]], "ot.unbalanced": [[94, 3, 1, "id0", "barycenter_unbalanced"], [94, 3, 1, "id25", "barycenter_unbalanced_sinkhorn"], [94, 3, 1, "id29", "barycenter_unbalanced_stabilized"], [94, 3, 1, "id33", "lbfgsb_unbalanced"], [94, 3, 1, "id35", "mm_unbalanced"], [94, 3, 1, "id38", "mm_unbalanced2"], [94, 3, 1, "id40", "sinkhorn_knopp_unbalanced"], [94, 3, 1, "id44", "sinkhorn_stabilized_unbalanced"], [94, 3, 1, "id48", "sinkhorn_unbalanced"], [94, 3, 1, "id54", "sinkhorn_unbalanced2"]], "ot.utils": [[95, 1, 1, "id12", "BaseEstimator"], [95, 1, 1, "id15", "LazyTensor"], [95, 1, 1, "id16", "OTResult"], [95, 6, 1, "", "UndefinedParameter"], [95, 3, 1, "id46", "check_params"], [95, 3, 1, "id47", "check_random_state"], [95, 3, 1, "id48", "clean_zeros"], [95, 3, 1, "id49", "cost_normalization"], [95, 1, 1, "id50", "deprecated"], [95, 3, 1, "id51", "dist"], [95, 3, 1, "id52", "dist0"], [95, 3, 1, "id53", "dots"], [95, 3, 1, "id54", "euclidean_distances"], [95, 3, 1, "id55", "get_coordinate_circle"], [95, 3, 1, "id56", "get_lowrank_lazytensor"], [95, 3, 1, "id57", "get_parameter_pair"], [95, 3, 1, "id58", "is_all_finite"], [95, 3, 1, "id59", "kernel"], [95, 3, 1, "id60", "label_normalization"], [95, 3, 1, "id61", "labels_to_masks"], [95, 3, 1, "id62", "laplacian"], [95, 3, 1, "id63", "list_to_array"], [95, 3, 1, "id64", "parmap"], [95, 3, 1, "id65", "proj_simplex"], [95, 3, 1, "id66", "projection_sparse_simplex"], [95, 3, 1, "id67", "reduce_lazytensor"], [95, 3, 1, "id68", "tic"], [95, 3, 1, "id69", "toc"], [95, 3, 1, "id70", "toq"], [95, 3, 1, "id71", "unif"]], "ot.utils.BaseEstimator": [[95, 2, 1, "id13", "get_params"], [95, 2, 1, "id14", "set_params"]], "ot.utils.OTResult": [[95, 5, 1, "id29", "a_to_b"], [95, 5, 1, "id30", "b_to_a"], [95, 5, 1, "id31", "citation"], [95, 5, 1, "id32", "lazy_plan"], [95, 5, 1, "id33", "log"], [95, 5, 1, "id34", "marginal_a"], [95, 5, 1, "id35", "marginal_b"], [95, 5, 1, "id36", "marginals"], [95, 5, 1, "id37", "plan"], [95, 5, 1, "id38", "potential_a"], [95, 5, 1, "id39", "potential_b"], [95, 5, 1, "id40", "potentials"], [95, 5, 1, "id41", "sparse_plan"], [95, 5, 1, "id42", "status"], [95, 5, 1, "id43", "value"], [95, 5, 1, "id44", "value_linear"], [95, 5, 1, "id45", "value_quad"]], "ot.weak": [[96, 3, 1, "id0", "weak_optimal_transport"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "modul": [0, 98], "main": 0, "ot": [0, 1, 5, 19, 20, 21, 22, 23, 24, 25, 26, 39, 44, 46, 53, 55, 57, 58, 59, 60, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98], "function": [0, 34, 74, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "refer": [0, 91, 97, 98], "dual": [1, 5, 51, 53], "solver": [1, 32, 60, 98], "entrop": [1, 5, 11, 30, 41, 60, 69, 98], "quadrat": [1, 98], "regular": [1, 11, 23, 30, 39, 53, 60, 68, 69, 98], "pytorch": [1, 2, 3, 5, 6, 7, 8], "data": [1, 4, 5, 6, 8, 10, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 35, 41, 43, 44, 46, 47, 48, 49, 50, 54, 55, 56, 58, 59, 60, 62, 63, 65, 66, 68, 69], "gener": [1, 2, 4, 5, 6, 8, 10, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 41, 43, 44, 45, 46, 47, 49, 50, 54, 55, 56, 58, 60, 62, 63, 65, 66, 68, 69, 98], "plot": [1, 4, 5, 6, 8, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 41, 43, 44, 46, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 62, 63, 65, 66, 67, 68, 69, 89], "convert": [1, 5], "torch": [1, 5], "tensor": [1, 5], "estim": [1, 2, 5, 6, 24, 25, 26, 36, 47, 98], "variabl": [1, 5, 53], "plan": [1, 5, 34, 41, 53, 67], "optim": [2, 6, 19, 21, 22, 23, 27, 40, 44, 46, 47, 50, 53, 54, 56, 57, 65, 68, 69, 87, 97, 98], "gromov": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 67, 83, 98], "wasserstein": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 53, 59, 62, 63, 66, 67, 98], "distanc": [2, 6, 21, 27, 31, 32, 34, 39, 45, 47, 58, 59, 62, 67, 98], "graph": [2, 29, 30, 32, 33, 36, 37], "gw": [2, 31, 34, 98], "w": 2, "r": 2, "t": 2, "weight": [2, 6], "templat": 2, "structur": [2, 31], "commun": 2, "cluster": [2, 30, 32, 36, 37], "uniform": [2, 57, 59], "compress": 2, "slice": [3, 4, 39, 62, 63, 91], "barycent": [3, 7, 10, 11, 12, 13, 14, 15, 16, 17, 29, 35, 39, 45, 66, 98], "gradient": [3, 4], "flow": [3, 7], "anim": [3, 4, 8, 17, 68], "trajectori": [3, 4, 8], "along": [3, 4, 8], "iter": [3, 4, 8], "comput": [3, 9, 10, 12, 13, 14, 16, 17, 18, 28, 29, 30, 31, 32, 34, 35, 37, 38, 41, 43, 44, 45, 46, 51, 52, 53, 56, 58, 61, 64, 66, 67, 68, 69, 70, 98, 100], "descent": [3, 4], "spheric": [4, 63], "embed": [4, 36], "sphere": 4, "sampl": [4, 5, 8, 19, 21, 22, 23, 24, 25, 27, 34, 47, 57, 67], "continu": [5, 51], "deep": 5, "densiti": 5, "target": [5, 19, 21, 22, 23, 27], "given": 5, "sourc": [5, 6, 19, 21, 22, 23, 27], "unmix": 6, "model": [6, 8, 30, 32, 36, 37], "wrt": 6, "converg": 6, "object": 6, "reweight": 6, "distribut": [6, 14, 15, 16, 21, 26, 34, 45, 47, 50, 54, 55, 56, 62, 63, 65, 66, 67, 98], "1d": [7, 10, 11, 13, 54, 58, 65, 66], "2": [8, 19, 21, 22, 23, 27, 30, 32, 36, 37, 45, 57, 63, 99], "minibatch": 8, "gan": 8, "train": [8, 33], "visual": [8, 12, 13, 30, 31, 32, 35, 36, 37, 47, 53], "time": [9, 18, 28, 38, 52, 53, 61, 64, 70, 100], "demo": [10, 13, 17, 66], "barycentr": [10, 66], "interpol": [10, 15, 66], "exact": [11, 44, 46, 69], "lp": [11, 85], "v": [11, 27, 44, 49], "gaussian": [11, 13, 16, 34, 67, 81], "stair": 11, "dirac": 11, "final": 11, "figur": 11, "convolut": [12, 98], "exampl": [12, 30, 34, 35, 37, 39, 51, 55, 67, 69, 76, 77, 78, 79, 81, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98], "prepar": [12, 35], "debias": 13, "sinkhorn": [13, 15, 22, 49, 51, 53, 54, 56, 58, 65, 98], "2d": [13, 14, 15, 34, 43, 56, 62, 67, 69], "imag": [13, 20, 24, 26], "free": [14, 15, 98], "support": [14, 15, 97, 98], "paramet": [15, 53], "inspect": 15, "empir": [15, 21, 56], "bure": 16, "defin": 16, "covari": 16, "them": [16, 19, 20, 21, 22, 23, 25, 34, 67], "project": [17, 41, 43, 62, 63], "match": [17, 30, 32, 37], "rotat": 17, "domain": [19, 21, 22, 23, 25, 26, 39, 98], "adapt": [19, 20, 21, 22, 23, 24, 25, 26, 39, 98], "instanti": [19, 20, 21, 22, 23, 25], "differ": [19, 20, 21, 23, 25, 27, 57, 58, 59, 62, 63], "transport": [19, 20, 21, 22, 23, 24, 25, 27, 31, 40, 41, 44, 46, 47, 50, 51, 53, 54, 56, 57, 65, 68, 69, 97, 98], "algorithm": [19, 20, 21, 22, 23, 25, 51, 53], "fit": [19, 20, 21, 22, 23, 25], "fig": [19, 21, 22, 23, 27], "1": [19, 21, 22, 23, 27, 36, 57, 99], "coupl": [19, 21, 22, 23, 27, 46], "color": [20, 26], "origin": [20, 26, 45], "scatter": 20, "new": [20, 72, 99], "matrix": [21, 27, 31, 50, 51, 53, 54, 55, 65], "pairwis": [21, 27], "method": [21, 27, 34, 45], "3": [21, 27, 30, 32, 36, 37, 99], "multi": 22, "shift": 22, "all": 22, "jcpot": 22, "run": 22, "oracl": 22, "known": 22, "proport": 22, "laplacian": 23, "linear": [24, 36], "map": [24, 25, 26, 53, 86, 98], "load": 24, "transform": [24, 26], "pixel": 26, "transfer": 26, "valu": 26, "otda": [27, 98], "unsupervis": 27, "semi": [27, 30, 37, 51, 68], "supervis": 27, "set": 27, "onto": 27, "us": [29, 33, 76, 77, 78, 79, 81, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98], "fgw": [29, 31, 98], "relax": [30, 37, 68], "fuse": [30, 31, 32, 33, 36, 37, 39], "two": [30, 32, 34, 37, 67], "follow": [30, 32, 36, 37], "stochast": [30, 32, 34, 36, 37, 51, 93], "block": [30, 32, 36, 37], "diverg": [30, 37], "add": [30, 37], "node": [30, 36, 37], "featur": [30, 31, 36, 37, 99], "creat": 31, "matric": [31, 51, 57], "across": 31, "comparison": 32, "classif": 33, "tempat": 33, "base": 33, "pool": 33, "architectur": 33, "tfgw": 33, "layer": 33, "3d": [34, 67], "kernel": 34, "normal": 34, "displai": 34, "scalabl": 34, "ani": 34, "loss": [34, 50, 53, 54, 55, 58, 65], "smacof": 35, "md": 35, "dictionari": 36, "learn": [36, 47], "dataset": [36, 57, 78], "compos": 36, "from": 36, "atom": 36, "space": 36, "endow": 36, "attribut": [36, 71], "galleri": 39, "pot": [39, 48, 53, 72, 97, 98], "backend": [39, 74, 98], "other": [39, 98], "problem": [39, 51, 53], "unbalanc": [39, 65, 66, 68, 69, 94, 98], "partial": [39, 57, 67, 88, 98], "row": [40, 47], "column": [40, 47], "align": [40, 47], "co": [40, 47], "compon": 41, "analysi": [41, 43, 98], "ewca": [41, 79], "first": [41, 53, 99], "smooth": [42, 55, 92], "strongli": 42, "convex": 42, "nearest": 42, "brenier": 42, "potenti": 42, "discrimin": [43, 98], "fisher": 43, "weak": [44, 96], "an": [44, 46, 98], "solut": [44, 46], "d": 45, "dimension": 45, "via": 45, "mmot": 45, "minim": 45, "among": 45, "identifi": 45, "compar": [45, 51, 59], "both": 45, "more": 45, "than": 45, "mani": 45, "factor": [46, 80], "margin": 47, "coot": [47, 76], "respect": 47, "logo": 48, "toolbox": [48, 53, 97], "clear": 48, "background": 48, "dark": 48, "low": 49, "rank": 49, "solv": [49, 50, 53, 54, 55, 60, 65, 98], "screen": 50, "screenkhorn": 50, "discret": 51, "case": [51, 98], "result": [51, 69], "introduct": 53, "python": [53, 97], "instal": [53, 97], "import": 53, "get": 53, "help": 53, "bakeri": 53, "citi": 53, "cost": 53, "emd": [53, 54, 56, 58, 60, 98], "vari": 53, "spars": 55, "between": [56, 59, 98], "ground": 57, "metric": 57, "circl": [57, 59], "euclidean": 59, "von": 59, "mise": 59, "kappa": 59, "frobeniu": 60, "norm": 60, "seed": [62, 63], "number": [62, 63], "": 63, "mass": 65, "one": 67, "path": 68, "l2": [68, 69], "penal": 68, "fulli": 68, "regpath": [68, 90], "uot": [68, 69], "kl": 69, "code": [71, 97], "conduct": [71, 97], "our": 71, "pledg": 71, "standard": 71, "respons": 71, "scope": 71, "enforc": 71, "contribut": [72, 97], "how": [72, 98], "pull": 72, "request": 72, "checklist": 72, "file": 72, "bug": 72, "contributor": [72, 73], "tip": 72, "document": 72, "creator": 73, "maintain": 73, "acknowledg": [73, 97], "perform": 74, "class": [74, 77, 92, 95, 98], "bregman": [75, 98], "depend": [75, 97], "co_optimal_transport": 76, "co_optimal_transport2": 76, "da": 77, "basetransport": 77, "emdlaplacetransport": 77, "emdtransport": 77, "jcpottransport": 77, "lineargwtransport": 77, "lineartransport": 77, "mappingtransport": 77, "sinkhornl1l2transport": 77, "sinkhornlpl1transport": 77, "sinkhorntransport": 77, "make_1d_gauss": 78, "make_2d_samples_gauss": 78, "make_data_classif": 78, "dr": 79, "fda": 79, "wda": [79, 98], "bures_wasserstein_barycent": 81, "empirical_bures_wasserstein_map": 81, "empirical_gaussian_gromov_wasserstein_map": 81, "gnn": 82, "lowrank": 84, "free_support_barycent": 85, "generalized_free_support_barycent": 85, "nearest_brenier_potential_fit": 86, "nearest_brenier_potential_predict_bound": 86, "cg": 87, "gcg": 87, "entropic_partial_gromov_wasserstein": 88, "entropic_partial_wasserstein": 88, "partial_gromov_wasserstein": 88, "partial_wasserstein": 88, "plot1d_mat": 89, "plot2d_samples_mat": 89, "compute_transport_plan": 90, "regularization_path": 90, "smooth_ot_du": 92, "loss_dual_entrop": 93, "loss_dual_quadrat": 93, "plan_dual_entrop": 93, "plan_dual_quadrat": 93, "solve_dual_entrop": 93, "solve_semi_dual_entrop": 93, "mm_unbalanc": 94, "util": 95, "dist0": 95, "proj_simplex": 95, "baseestim": 95, "except": 95, "content": 97, "cite": 97, "pip": 97, "anaconda": 97, "conda": 97, "forg": 97, "post": 97, "check": 97, "short": 97, "notebook": 97, "indic": 97, "tabl": 97, "quick": 98, "start": 98, "guid": 98, "why": 98, "when": 98, "emd2": 98, "special": 98, "sinkhorn2": 98, "group": 98, "lasso": 98, "fix": 98, "convolutional_barycenter2d": 98, "mong": 98, "extens": 98, "g": 98, "applic": 98, "multipl": 98, "cpu": 98, "gpu": 98, "work": 98, "acceler": 98, "list": 98, "compat": 98, "faq": 98, "releas": 99, "0": 99, "9": 99, "3dev": 99, "close": 99, "issu": 99, "8": 99, "7": 99, "6": 99, "5": 99, "deprec": 99, "4": 99, "v0": 99, "11": 99, "10": 99, "pre": 99}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API and modules": [[0, "api-and-modules"]], "Main ot functions": [[0, "module-ot"]], "References:": [[0, "references"], [91, "references"], [91, "id12"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[1, "dual-ot-solvers-for-entropic-and-quadratic-regularized-ot-with-pytorch"]], "Data generation": [[1, "data-generation"], [4, "data-generation"], [5, "data-generation"], [8, "data-generation"]], "Plot data": [[1, "plot-data"], [4, "plot-data"], [5, "plot-data"], [6, "plot-data"], [8, "plot-data"], [24, "plot-data"], [25, "plot-data"], [29, "plot-data"], [31, "plot-data"], [33, "plot-data"], [41, "plot-data"], [43, "plot-data"], [56, "plot-data"], [58, "plot-data"], [59, "plot-data"], [62, "plot-data"], [63, "plot-data"], [66, "plot-data"], [68, "plot-data"]], "Convert data to torch tensors": [[1, "convert-data-to-torch-tensors"], [5, "convert-data-to-torch-tensors"]], "Estimating dual variables for entropic OT": [[1, "estimating-dual-variables-for-entropic-ot"]], "Plot the estimated entropic OT plan": [[1, "plot-the-estimated-entropic-ot-plan"]], "Estimating dual variables for quadratic OT": [[1, "estimating-dual-variables-for-quadratic-ot"]], "Plot the estimated quadratic OT plan": [[1, "plot-the-estimated-quadratic-ot-plan"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[2, "optimizing-the-gromov-wasserstein-distance-with-pytorch"]], "Graph generation": [[2, "graph-generation"]], "Optimizing GW w.r.t. the weights on a template structure": [[2, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Community clustering with uniform and estimated weights": [[2, "community-clustering-with-uniform-and-estimated-weights"]], "Graph compression with GW": [[2, "graph-compression-with-gw"]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[3, "sliced-wasserstein-barycenter-and-gradient-flow-with-pytorch"]], "Sliced Wasserstein gradient flow with Pytorch": [[3, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Animate trajectories of the gradient flow along iteration": [[3, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Compute the Sliced Wasserstein Barycenter": [[3, "compute-the-sliced-wasserstein-barycenter"]], "Animate trajectories of the barycenter along gradient descent": [[3, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[4, "spherical-sliced-wasserstein-embedding-on-sphere"]], "Gradient descent": [[4, "gradient-descent"]], "Plot trajectories of generated samples along iterations": [[4, "plot-trajectories-of-generated-samples-along-iterations"], [8, "plot-trajectories-of-generated-samples-along-iterations"]], "Animate trajectories of generated samples along iteration": [[4, "animate-trajectories-of-generated-samples-along-iteration"], [8, "animate-trajectories-of-generated-samples-along-iteration"]], "Continuous OT plan estimation with Pytorch": [[5, "continuous-ot-plan-estimation-with-pytorch"]], "Estimating deep dual variables for entropic OT": [[5, "estimating-deep-dual-variables-for-entropic-ot"]], "Plot the density on target for a given source sample": [[5, "plot-the-density-on-target-for-a-given-source-sample"]], "Wasserstein unmixing with PyTorch": [[6, "wasserstein-unmixing-with-pytorch"]], "Generate data": [[6, "generate-data"], [10, "generate-data"], [14, "generate-data"], [19, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [27, "generate-data"], [29, "generate-data"], [31, "generate-data"], [33, "generate-data"], [41, "generate-data"], [43, "generate-data"], [47, "generate-data"], [49, "generate-data"], [50, "generate-data"], [54, "generate-data"], [55, "generate-data"], [56, "generate-data"], [58, "generate-data"], [60, "generate-data"], [62, "generate-data"], [63, "generate-data"], [65, "generate-data"], [66, "generate-data"], [68, "generate-data"], [69, "generate-data"]], "Optimization of the model wrt the Wasserstein distance": [[6, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Estimated weights and convergence of the objective": [[6, "estimated-weights-and-convergence-of-the-objective"]], "Plotting the reweighted source distribution": [[6, "plotting-the-reweighted-source-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[7, "wasserstein-1d-flow-and-barycenter-with-pytorch"]], "Wasserstein barycenter": [[7, "wasserstein-barycenter"]], "Wasserstein 2 Minibatch GAN with PyTorch": [[8, "wasserstein-2-minibatch-gan-with-pytorch"]], "Generator Model": [[8, "generator-model"]], "Training the model": [[8, "training-the-model"]], "Generate and visualize data": [[8, "generate-and-visualize-data"]], "Computation times": [[9, "computation-times"], [18, "computation-times"], [28, "computation-times"], [38, "computation-times"], [52, "computation-times"], [61, "computation-times"], [64, "computation-times"], [70, "computation-times"], [100, "computation-times"]], "1D Wasserstein barycenter demo": [[10, "d-wasserstein-barycenter-demo"]], "Barycenter computation": [[10, "barycenter-computation"], [29, "barycenter-computation"], [35, "barycenter-computation"], [66, "barycenter-computation"]], "Barycentric interpolation": [[10, "barycentric-interpolation"], [66, "barycentric-interpolation"]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[11, "d-wasserstein-barycenter-exact-lp-vs-entropic-regularization"]], "Gaussian Data": [[11, "gaussian-data"]], "Stair Data": [[11, "stair-data"]], "Dirac Data": [[11, "dirac-data"]], "Final figure": [[11, "final-figure"]], "Convolutional Wasserstein Barycenter example": [[12, "convolutional-wasserstein-barycenter-example"]], "Data preparation": [[12, "data-preparation"], [35, "data-preparation"]], "Barycenter computation and visualization": [[12, "barycenter-computation-and-visualization"], [13, "barycenter-computation-and-visualization"]], "Debiased Sinkhorn barycenter demo": [[13, "debiased-sinkhorn-barycenter-demo"]], "Debiased barycenter of 1D Gaussians": [[13, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[13, "debiased-barycenter-of-2d-images"]], "2D free support Wasserstein barycenters of distributions": [[14, "d-free-support-wasserstein-barycenters-of-distributions"]], "Compute free support Wasserstein barycenter": [[14, "compute-free-support-wasserstein-barycenter"]], "Plot the Wasserstein barycenter": [[14, "plot-the-wasserstein-barycenter"], [14, "id1"]], "2D free support Sinkhorn barycenters of distributions": [[15, "d-free-support-sinkhorn-barycenters-of-distributions"]], "General Parameters": [[15, "general-parameters"]], "Generate Data": [[15, "generate-data"]], "Inspect generated distributions": [[15, "inspect-generated-distributions"]], "Interpolating Empirical Distributions": [[15, "interpolating-empirical-distributions"]], "Gaussian Bures-Wasserstein barycenters": [[16, "gaussian-bures-wasserstein-barycenters"]], "Define Gaussian Covariances and distributions": [[16, "define-gaussian-covariances-and-distributions"]], "Plot the distributions": [[16, "plot-the-distributions"]], "Compute Bures-Wasserstein barycenters and plot them": [[16, "compute-bures-wasserstein-barycenters-and-plot-them"]], "Generalized Wasserstein Barycenter Demo": [[17, "generalized-wasserstein-barycenter-demo"]], "Generate and plot data": [[17, "generate-and-plot-data"]], "Barycenter computation and plot": [[17, "barycenter-computation-and-plot"]], "Plotting projection matches": [[17, "plotting-projection-matches"]], "Rotation animation": [[17, "rotation-animation"]], "OT for domain adaptation": [[19, "ot-for-domain-adaptation"]], "Instantiate the different transport algorithms and fit them": [[19, "instantiate-the-different-transport-algorithms-and-fit-them"], [20, "instantiate-the-different-transport-algorithms-and-fit-them"], [21, "instantiate-the-different-transport-algorithms-and-fit-them"], [23, "instantiate-the-different-transport-algorithms-and-fit-them"], [25, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Fig 1 : plots source and target samples": [[19, "fig-1-plots-source-and-target-samples"], [22, "fig-1-plots-source-and-target-samples"], [23, "fig-1-plots-source-and-target-samples"]], "Fig 2 : plot optimal couplings and transported samples": [[19, "fig-2-plot-optimal-couplings-and-transported-samples"], [22, "fig-2-plot-optimal-couplings-and-transported-samples"], [23, "fig-2-plot-optimal-couplings-and-transported-samples"]], "OT for image color adaptation": [[20, "ot-for-image-color-adaptation"]], "Plot original image": [[20, "plot-original-image"]], "Scatter plot of colors": [[20, "scatter-plot-of-colors"]], "Plot new images": [[20, "plot-new-images"]], "OT for domain adaptation on empirical distributions": [[21, "ot-for-domain-adaptation-on-empirical-distributions"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[21, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [27, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plots optimal couplings for the different methods": [[21, "fig-2-plots-optimal-couplings-for-the-different-methods"], [27, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[21, "fig-3-plot-transported-samples"], [27, "fig-3-plot-transported-samples"]], "OT for multi-source target shift": [[22, "ot-for-multi-source-target-shift"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[22, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate JCPOT adaptation algorithm and fit it": [[22, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Run oracle transport algorithm with known proportions": [[22, "run-oracle-transport-algorithm-with-known-proportions"]], "OT with Laplacian regularization for domain adaptation": [[23, "ot-with-laplacian-regularization-for-domain-adaptation"]], "Linear OT mapping estimation": [[24, "linear-ot-mapping-estimation"]], "Estimate linear mapping and transport": [[24, "estimate-linear-mapping-and-transport"]], "Plot transported samples": [[24, "plot-transported-samples"], [25, "plot-transported-samples"]], "Load image data": [[24, "load-image-data"]], "Estimate mapping and adapt": [[24, "estimate-mapping-and-adapt"]], "Plot transformed images": [[24, "plot-transformed-images"], [26, "plot-transformed-images"]], "OT mapping estimation for domain adaptation": [[25, "ot-mapping-estimation-for-domain-adaptation"]], "OT for image color adaptation with mapping estimation": [[26, "ot-for-image-color-adaptation-with-mapping-estimation"]], "Domain adaptation for pixel distribution transfer": [[26, "domain-adaptation-for-pixel-distribution-transfer"]], "Plot original images": [[26, "plot-original-images"]], "Plot pixel values distribution": [[26, "plot-pixel-values-distribution"]], "OTDA unsupervised vs semi-supervised setting": [[27, "otda-unsupervised-vs-semi-supervised-setting"]], "Transport source samples onto target samples": [[27, "transport-source-samples-onto-target-samples"]], "Plot graphs barycenter using FGW": [[29, "plot-graphs-barycenter-using-fgw"]], "Plot Barycenter": [[29, "plot-barycenter"]], "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example": [[30, "entropic-regularized-semi-relaxed-fused-gromov-wasserstein-example"]], "Generate two graphs following Stochastic Block models of 2 and 3 clusters.": [[30, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [32, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [37, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"]], "Compute their entropic-regularized semi-relaxed Gromov-Wasserstein divergences": [[30, "compute-their-entropic-regularized-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the entropic-regularized semi-relaxed Gromov-Wasserstein matchings": [[30, "visualization-of-the-entropic-regularized-semi-relaxed-gromov-wasserstein-matchings"]], "Add node features": [[30, "add-node-features"], [37, "add-node-features"]], "Compute their semi-relaxed Fused Gromov-Wasserstein divergences": [[30, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"], [37, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"]], "Visualization of the entropic semi-relaxed Fused Gromov-Wasserstein matchings": [[30, "visualization-of-the-entropic-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Plot Fused-Gromov-Wasserstein": [[31, "plot-fused-gromov-wasserstein"]], "Create structure matrices and across-feature distance matrix": [[31, "create-structure-matrices-and-across-feature-distance-matrix"]], "Plot matrices": [[31, "plot-matrices"]], "Compute FGW/GW": [[31, "compute-fgw-gw"]], "Visualize transport matrices": [[31, "visualize-transport-matrices"]], "Comparison of Fused Gromov-Wasserstein solvers": [[32, "comparison-of-fused-gromov-wasserstein-solvers"]], "Compute their Fused Gromov-Wasserstein distances": [[32, "compute-their-fused-gromov-wasserstein-distances"]], "Visualization of the Fused Gromov-Wasserstein matchings": [[32, "visualization-of-the-fused-gromov-wasserstein-matchings"]], "Graph classification with Tempate Based Fused Gromov Wasserstein": [[33, "graph-classification-with-tempate-based-fused-gromov-wasserstein"]], "Pooling architecture using the TFGW layer": [[33, "pooling-architecture-using-the-tfgw-layer"]], "Graph classification training": [[33, "graph-classification-training"]], "Gromov-Wasserstein example": [[34, "gromov-wasserstein-example"]], "Sample two Gaussian distributions (2D and 3D)": [[34, "sample-two-gaussian-distributions-2d-and-3d"]], "Plotting the distributions": [[34, "plotting-the-distributions"]], "Compute distance kernels, normalize them and then display": [[34, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute Gromov-Wasserstein plans and distance": [[34, "compute-gromov-wasserstein-plans-and-distance"]], "Compute GW with scalable stochastic methods with any loss function": [[34, "compute-gw-with-scalable-stochastic-methods-with-any-loss-function"]], "Gromov-Wasserstein Barycenter example": [[35, "gromov-wasserstein-barycenter-example"]], "Smacof MDS": [[35, "smacof-mds"]], "Visualization": [[35, "visualization"]], "(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[36, "fused-gromov-wasserstein-linear-dictionary-learning"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[36, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Estimate the Gromov-Wasserstein dictionary from the dataset": [[36, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Visualization of the estimated dictionary atoms": [[36, "visualization-of-the-estimated-dictionary-atoms"], [36, "id1"]], "Visualization of the embedding space": [[36, "visualization-of-the-embedding-space"], [36, "id2"]], "Endow the dataset with node features": [[36, "endow-the-dataset-with-node-features"]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[36, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Semi-relaxed (Fused) Gromov-Wasserstein example": [[37, "semi-relaxed-fused-gromov-wasserstein-example"]], "Compute their semi-relaxed Gromov-Wasserstein divergences": [[37, "compute-their-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the semi-relaxed Gromov-Wasserstein matchings": [[37, "visualization-of-the-semi-relaxed-gromov-wasserstein-matchings"]], "Visualization of the semi-relaxed Fused Gromov-Wasserstein matchings": [[37, "visualization-of-the-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Examples gallery": [[39, "examples-gallery"]], "OT and regularized OT": [[39, "ot-and-regularized-ot"]], "POT backend examples": [[39, "pot-backend-examples"]], "Wasserstein barycenters": [[39, "wasserstein-barycenters"]], "Domain adaptation examples": [[39, "domain-adaptation-examples"]], "Gromov and Fused-Gromov-Wasserstein": [[39, "gromov-and-fused-gromov-wasserstein"]], "Other OT problems": [[39, "other-ot-problems"]], "Sliced Wasserstein Distance": [[39, "sliced-wasserstein-distance"]], "Unbalanced and Partial OT": [[39, "unbalanced-and-partial-ot"]], "Row and column alignments with CO-Optimal Transport": [[40, "row-and-column-alignments-with-co-optimal-transport"]], "Entropic Wasserstein Component Analysis": [[41, "entropic-wasserstein-component-analysis"]], "Compute EWCA": [[41, "compute-ewca"]], "Plot data, first component, and projected data": [[41, "plot-data-first-component-and-projected-data"]], "Plot transport plan": [[41, "plot-transport-plan"]], "Smooth and Strongly Convex Nearest Brenier Potentials": [[42, "smooth-and-strongly-convex-nearest-brenier-potentials"]], "Wasserstein Discriminant Analysis": [[43, "wasserstein-discriminant-analysis"], [98, "wasserstein-discriminant-analysis"]], "Compute Fisher Discriminant Analysis": [[43, "compute-fisher-discriminant-analysis"]], "Compute Wasserstein Discriminant Analysis": [[43, "compute-wasserstein-discriminant-analysis"]], "Plot 2D projections": [[43, "plot-2d-projections"]], "Weak Optimal Transport VS exact Optimal Transport": [[44, "weak-optimal-transport-vs-exact-optimal-transport"]], "Generate data an plot it": [[44, "generate-data-an-plot-it"], [46, "generate-data-an-plot-it"]], "Compute Weak OT and exact OT solutions": [[44, "compute-weak-ot-and-exact-ot-solutions"]], "Plot weak OT and exact OT solutions": [[44, "plot-weak-ot-and-exact-ot-solutions"]], "Computing d-dimensional Barycenters via d-MMOT": [[45, "computing-d-dimensional-barycenters-via-d-mmot"]], "Generating 2 distributions": [[45, "generating-2-distributions"]], "Minimize the distances among distributions, identify the Barycenter": [[45, "minimize-the-distances-among-distributions-identify-the-barycenter"]], "Compare Barycenters in both methods": [[45, "compare-barycenters-in-both-methods"], [45, "id1"]], "More than 2 distributions": [[45, "more-than-2-distributions"]], "Minimizing Distances Among Many Distributions": [[45, "minimizing-distances-among-many-distributions"]], "Compare with original distributions": [[45, "compare-with-original-distributions"]], "Optimal transport with factored couplings": [[46, "optimal-transport-with-factored-couplings"]], "Compute Factored OT and exact OT solutions": [[46, "compute-factored-ot-and-exact-ot-solutions"]], "Plot factored OT and exact OT solutions": [[46, "plot-factored-ot-and-exact-ot-solutions"]], "Learning sample marginal distribution with CO-Optimal Transport": [[47, "learning-sample-marginal-distribution-with-co-optimal-transport"]], "Optimize the COOT distance with respect to the sample marginal distribution": [[47, "optimize-the-coot-distance-with-respect-to-the-sample-marginal-distribution"]], "Visualizing the row and column alignments with the estimated sample marginal distribution": [[47, "visualizing-the-row-and-column-alignments-with-the-estimated-sample-marginal-distribution"]], "Logo of the POT toolbox": [[48, "logo-of-the-pot-toolbox"]], "Data for logo": [[48, "data-for-logo"]], "Plot the logo (clear background)": [[48, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[48, "plot-the-logo-dark-background"]], "Low rank Sinkhorn": [[49, "low-rank-sinkhorn"]], "Solve Low rank sinkhorn": [[49, "solve-low-rank-sinkhorn"]], "Sinkhorn vs Low Rank Sinkhorn": [[49, "sinkhorn-vs-low-rank-sinkhorn"]], "Screened optimal transport (Screenkhorn)": [[50, "screened-optimal-transport-screenkhorn"]], "Plot distributions and loss matrix": [[50, "plot-distributions-and-loss-matrix"], [54, "plot-distributions-and-loss-matrix"], [55, "plot-distributions-and-loss-matrix"], [65, "plot-distributions-and-loss-matrix"]], "Solve Screenkhorn": [[50, "solve-screenkhorn"]], "Stochastic examples": [[51, "stochastic-examples"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[51, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Discrete case": [[51, "discrete-case"]], "Semi-Continuous Case": [[51, "semi-continuous-case"]], "Plot Transportation Matrices": [[51, "plot-transportation-matrices"], [51, "id2"]], "Compute the Transportation Matrix for the Dual Problem": [[51, "compute-the-transportation-matrix-for-the-dual-problem"]], "Semi-continuous case": [[51, "id1"]], "Compare the results with the Sinkhorn algorithm": [[51, "compare-the-results-with-the-sinkhorn-algorithm"]], "Introduction to Optimal Transport with Python": [[53, "introduction-to-optimal-transport-with-python"]], "POT Python Optimal Transport Toolbox": [[53, "pot-python-optimal-transport-toolbox"]], "POT installation": [[53, "pot-installation"]], "Import the toolbox": [[53, "import-the-toolbox"]], "Getting help": [[53, "getting-help"]], "First OT Problem": [[53, "first-ot-problem"]], "Plotting bakeries in the city": [[53, "plotting-bakeries-in-the-city"]], "Cost matrix": [[53, "cost-matrix"]], "Solving the OT problem with ot.emd": [[53, "solving-the-ot-problem-with-ot-emd"]], "Transportation plan visualization": [[53, "transportation-plan-visualization"]], "OT loss and dual variables": [[53, "ot-loss-and-dual-variables"]], "Regularized OT with Sinkhorn": [[53, "regularized-ot-with-sinkhorn"]], "Algorithm": [[53, "algorithm"]], "Plot the matrix and the map": [[53, "plot-the-matrix-and-the-map"]], "Varying the regularization parameter in Sinkhorn": [[53, "varying-the-regularization-parameter-in-sinkhorn"]], "Wasserstein loss and computational time": [[53, "wasserstein-loss-and-computational-time"]], "Optimal Transport for 1D distributions": [[54, "optimal-transport-for-1d-distributions"]], "Solve EMD": [[54, "solve-emd"], [60, "solve-emd"]], "Solve Sinkhorn": [[54, "solve-sinkhorn"]], "Smooth and sparse OT example": [[55, "smooth-and-sparse-ot-example"]], "Solve Smooth OT": [[55, "solve-smooth-ot"]], "Optimal Transport between 2D empirical distributions": [[56, "optimal-transport-between-2d-empirical-distributions"]], "Compute EMD": [[56, "compute-emd"]], "Compute Sinkhorn": [[56, "compute-sinkhorn"]], "Empirical Sinkhorn": [[56, "empirical-sinkhorn"]], "Optimal Transport with different ground metrics": [[57, "optimal-transport-with-different-ground-metrics"]], "Dataset 1 : uniform sampling": [[57, "dataset-1-uniform-sampling"]], "Dataset 1 : Plot OT Matrices": [[57, "dataset-1-plot-ot-matrices"]], "Dataset 2 : Partial circle": [[57, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[57, "dataset-2-plot-ot-matrices"]], "OT distances in 1D": [[58, "ot-distances-in-1d"]], "Compute EMD for the different losses": [[58, "compute-emd-for-the-different-losses"]], "Compute Sinkhorn for the different losses": [[58, "compute-sinkhorn-for-the-different-losses"]], "OT distance on the Circle": [[59, "ot-distance-on-the-circle"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[59, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Wasserstein distance between von Mises and uniform for different kappa": [[59, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Regularized OT with generic solver": [[60, "regularized-ot-with-generic-solver"]], "Solve EMD with Frobenius norm regularization": [[60, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[60, "solve-emd-with-entropic-regularization"]], "Solve EMD with Frobenius norm + entropic regularization": [[60, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Sliced Wasserstein Distance on 2D distributions": [[62, "sliced-wasserstein-distance-on-2d-distributions"]], "Sliced Wasserstein distance for different seeds and number of projections": [[62, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Plot Sliced Wasserstein Distance": [[62, "plot-sliced-wasserstein-distance"]], "Spherical Sliced Wasserstein on distributions in S^2": [[63, "spherical-sliced-wasserstein-on-distributions-in-s-2"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[63, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Plot Spherical Sliced Wasserstein": [[63, "plot-spherical-sliced-wasserstein"]], "1D Unbalanced optimal transport": [[65, "d-unbalanced-optimal-transport"]], "Solve Unbalanced Sinkhorn": [[65, "solve-unbalanced-sinkhorn"]], "plot the transported mass": [[65, "plot-the-transported-mass"]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[66, "d-wasserstein-barycenter-demo-for-unbalanced-distributions"]], "Partial Wasserstein and Gromov-Wasserstein example": [[67, "partial-wasserstein-and-gromov-wasserstein-example"]], "Sample two 2D Gaussian distributions and plot them": [[67, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Compute partial Wasserstein plans and distance": [[67, "compute-partial-wasserstein-plans-and-distance"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[67, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Compute partial Gromov-Wasserstein plans and distance": [[67, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Regularization path of l2-penalized unbalanced optimal transport": [[68, "regularization-path-of-l2-penalized-unbalanced-optimal-transport"]], "Compute semi-relaxed and fully relaxed regularization paths": [[68, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Plot the regularization path": [[68, "plot-the-regularization-path"]], "Animation of the regpath for UOT l2": [[68, "animation-of-the-regpath-for-uot-l2"]], "Plot the semi-relaxed regularization path": [[68, "plot-the-semi-relaxed-regularization-path"]], "Animation of the regpath for semi-relaxed UOT l2": [[68, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "2D examples of exact and entropic unbalanced optimal transport": [[69, "d-examples-of-exact-and-entropic-unbalanced-optimal-transport"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[69, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Plot the results": [[69, "plot-the-results"]], "Code of conduct": [[71, "code-of-conduct"]], "Our Pledge": [[71, "our-pledge"]], "Our Standards": [[71, "our-standards"]], "Our Responsibilities": [[71, "our-responsibilities"]], "Scope": [[71, "scope"]], "Enforcement": [[71, "enforcement"]], "Attribution": [[71, "attribution"]], "Contributing to POT": [[72, "contributing-to-pot"]], "How to contribute": [[72, "how-to-contribute"]], "Pull Request Checklist": [[72, "pull-request-checklist"]], "Filing bugs": [[72, "filing-bugs"]], "New contributor tips": [[72, "new-contributor-tips"]], "Documentation": [[72, "documentation"]], "Contributors": [[73, "contributors"], [73, "contributors"]], "Creators and Maintainers": [[73, "creators-and-maintainers"]], "Acknowledgments": [[73, "acknowledgments"]], "ot.backend": [[74, "module-ot.backend"]], "Performance": [[74, "performance"]], "Functions": [[74, "functions"], [76, "functions"], [77, "functions"], [78, "functions"], [79, "functions"], [80, "functions"], [81, "functions"], [84, "functions"], [85, "functions"], [86, "functions"], [87, "functions"], [88, "functions"], [89, "functions"], [90, "functions"], [91, "functions"], [92, "functions"], [93, "functions"], [94, "functions"], [95, "functions"], [96, "functions"]], "Classes": [[74, "classes"], [77, "classes"], [92, "classes"], [95, "classes"]], "ot.bregman": [[75, "module-ot.bregman"]], "Dependency": [[75, null]], "ot.coot": [[76, "module-ot.coot"]], "Examples using ot.coot.co_optimal_transport": [[76, "examples-using-ot-coot-co-optimal-transport"]], "Examples using ot.coot.co_optimal_transport2": [[76, "examples-using-ot-coot-co-optimal-transport2"]], "ot.da": [[77, "module-ot.da"]], "Examples using ot.da.BaseTransport": [[77, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[77, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[77, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[77, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearGWTransport": [[77, "examples-using-ot-da-lineargwtransport"]], "Examples using ot.da.LinearTransport": [[77, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[77, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[77, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[77, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[77, "examples-using-ot-da-sinkhorntransport"]], "ot.datasets": [[78, "module-ot.datasets"]], "Examples using ot.datasets.make_1D_gauss": [[78, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[78, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[78, "examples-using-ot-datasets-make-data-classif"]], "ot.dr": [[79, "module-ot.dr"]], "Examples using ot.dr.ewca": [[79, "examples-using-ot-dr-ewca"]], "Examples using ot.dr.fda": [[79, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[79, "examples-using-ot-dr-wda"]], "ot.factored": [[80, "module-ot.factored"]], "ot.gaussian": [[81, "module-ot.gaussian"]], "Examples using ot.gaussian.bures_wasserstein_barycenter": [[81, "examples-using-ot-gaussian-bures-wasserstein-barycenter"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[81, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "Examples using ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping": [[81, "examples-using-ot-gaussian-empirical-gaussian-gromov-wasserstein-mapping"]], "ot.gnn": [[82, "module-ot.gnn"]], "ot.gromov": [[83, "module-ot.gromov"]], "ot.lowrank": [[84, "module-ot.lowrank"]], "ot.lp": [[85, "module-ot.lp"]], "Examples using ot.lp.free_support_barycenter": [[85, "examples-using-ot-lp-free-support-barycenter"]], "Examples using ot.lp.generalized_free_support_barycenter": [[85, "examples-using-ot-lp-generalized-free-support-barycenter"]], "ot.mapping": [[86, "module-ot.mapping"]], "Examples using ot.mapping.nearest_brenier_potential_fit": [[86, "examples-using-ot-mapping-nearest-brenier-potential-fit"]], "Examples using ot.mapping.nearest_brenier_potential_predict_bounds": [[86, "examples-using-ot-mapping-nearest-brenier-potential-predict-bounds"]], "ot.optim": [[87, "module-ot.optim"]], "Examples using ot.optim.cg": [[87, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[87, "examples-using-ot-optim-gcg"]], "ot.partial": [[88, "module-ot.partial"]], "Examples using ot.partial.entropic_partial_gromov_wasserstein": [[88, "examples-using-ot-partial-entropic-partial-gromov-wasserstein"]], "Examples using ot.partial.entropic_partial_wasserstein": [[88, "examples-using-ot-partial-entropic-partial-wasserstein"]], "Examples using ot.partial.partial_gromov_wasserstein": [[88, "examples-using-ot-partial-partial-gromov-wasserstein"]], "Examples using ot.partial.partial_wasserstein": [[88, "examples-using-ot-partial-partial-wasserstein"]], "ot.plot": [[89, "module-ot.plot"]], "Examples using ot.plot.plot1D_mat": [[89, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[89, "examples-using-ot-plot-plot2d-samples-mat"]], "ot.regpath": [[90, "module-ot.regpath"]], "Examples using ot.regpath.compute_transport_plan": [[90, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[90, "examples-using-ot-regpath-regularization-path"]], "ot.sliced": [[91, "module-ot.sliced"]], "ot.smooth": [[92, "module-ot.smooth"]], "Examples using ot.smooth.smooth_ot_dual": [[92, "examples-using-ot-smooth-smooth-ot-dual"]], "ot.stochastic": [[93, "module-ot.stochastic"]], "Examples using ot.stochastic.loss_dual_entropic": [[93, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[93, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[93, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[93, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[93, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[93, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "ot.unbalanced": [[94, "module-ot.unbalanced"]], "Examples using ot.unbalanced.mm_unbalanced": [[94, "examples-using-ot-unbalanced-mm-unbalanced"]], "ot.utils": [[95, "module-ot.utils"]], "Examples using ot.utils.dist0": [[95, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_simplex": [[95, "examples-using-ot-utils-proj-simplex"]], "Examples using ot.utils.BaseEstimator": [[95, "examples-using-ot-utils-baseestimator"]], "Exceptions": [[95, "exceptions"]], "ot.weak": [[96, "module-ot.weak"]], "POT: Python Optimal Transport": [[97, "pot-python-optimal-transport"], [97, "pot-python-optimal-transport"]], "Contents": [[97, "contents"]], "Using and citing the toolbox": [[97, "using-and-citing-the-toolbox"]], "Installation": [[97, "installation"]], "Pip installation": [[97, "pip-installation"]], "Anaconda installation with conda-forge": [[97, "anaconda-installation-with-conda-forge"]], "Post installation check": [[97, "post-installation-check"]], "Dependencies": [[97, "dependencies"]], "Examples": [[97, "examples"]], "Short examples": [[97, "short-examples"]], "Examples and Notebooks": [[97, "examples-and-notebooks"]], "Acknowledgements": [[97, "acknowledgements"]], "Contributions and code of conduct": [[97, "contributions-and-code-of-conduct"]], "Support": [[97, "support"]], "References": [[97, "references"], [98, "references"]], "Indices and tables": [[97, "indices-and-tables"]], "Quick start guide": [[98, "quick-start-guide"]], "Why Optimal Transport ?": [[98, "why-optimal-transport"]], "When to use OT": [[98, "when-to-use-ot"]], "Wasserstein distance between distributions": [[98, "wasserstein-distance-between-distributions"]], "OT for mapping estimation": [[98, "ot-for-mapping-estimation"]], "When to use POT": [[98, "when-to-use-pot"]], "When not to use POT": [[98, "when-not-to-use-pot"]], "Optimal transport and Wasserstein distance": [[98, "optimal-transport-and-wasserstein-distance"]], "Solving optimal transport": [[98, "solving-optimal-transport"]], "Examples of use for ot.emd": [[98, "examples-of-use-for-ot-emd"]], "Computing Wasserstein distance": [[98, "computing-wasserstein-distance"]], "Examples of use for ot.emd2": [[98, "examples-of-use-for-ot-emd2"]], "Special cases": [[98, "special-cases"]], "Regularized Optimal Transport": [[98, "regularized-optimal-transport"]], "Entropic regularized OT": [[98, "entropic-regularized-ot"]], "Examples of use for ot.sinkhorn": [[98, "examples-of-use-for-ot-sinkhorn"]], "Examples of use for ot.sinkhorn2": [[98, "examples-of-use-for-ot-sinkhorn2"]], "Other regularizations": [[98, "other-regularizations"]], "Quadratic regularization": [[98, "quadratic-regularization"]], "Examples of use of quadratic regularization": [[98, "examples-of-use-of-quadratic-regularization"]], "Group Lasso regularization": [[98, "group-lasso-regularization"]], "Examples of group Lasso regularization": [[98, "examples-of-group-lasso-regularization"]], "Generic solvers": [[98, "generic-solvers"]], "Examples of the generic solvers": [[98, "examples-of-the-generic-solvers"]], "Wasserstein Barycenters": [[98, "wasserstein-barycenters"]], "Barycenters with fixed support": [[98, "barycenters-with-fixed-support"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[98, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[98, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Barycenters with free support": [[98, "barycenters-with-free-support"]], "Examples of free support barycenter estimation": [[98, "examples-of-free-support-barycenter-estimation"]], "Monge mapping and Domain adaptation": [[98, "monge-mapping-and-domain-adaptation"]], "Monge Mapping estimation": [[98, "monge-mapping-estimation"]], "Domain adaptation classes": [[98, "domain-adaptation-classes"]], "Examples of the use of OTDA classes": [[98, "examples-of-the-use-of-otda-classes"]], "Unbalanced and partial OT": [[98, "unbalanced-and-partial-ot"]], "Unbalanced optimal transport": [[98, "unbalanced-optimal-transport"]], "Examples of Unbalanced OT": [[98, "examples-of-unbalanced-ot"]], "Unbalanced Barycenters": [[98, "unbalanced-barycenters"]], "Examples of Unbalanced OT barycenters": [[98, "examples-of-unbalanced-ot-barycenters"]], "Partial optimal transport": [[98, "partial-optimal-transport"]], "Examples of Partial OT": [[98, "examples-of-partial-ot"]], "Gromov Wasserstein and extensions": [[98, "gromov-wasserstein-and-extensions"]], "Gromov Wasserstein(GW)": [[98, "gromov-wasserstein-gw"]], "Examples of computation of GW, regularized G and FGW": [[98, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Gromov Wasserstein barycenters": [[98, "gromov-wasserstein-barycenters"]], "Examples of GW, regularized G and FGW barycenters": [[98, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Other applications": [[98, "other-applications"]], "Examples of the use of WDA": [[98, "examples-of-the-use-of-wda"]], "Solving OT with Multiple backends on CPU/GPU": [[98, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "How it works": [[98, "how-it-works"]], "GPU acceleration": [[98, "gpu-acceleration"]], "List of compatible Backends": [[98, "list-of-compatible-backends"]], "List of compatible modules": [[98, "list-of-compatible-modules"]], "FAQ": [[98, "faq"]], "Releases": [[99, "releases"]], "0.9.3dev": [[99, "dev"]], "New features": [[99, "new-features"], [99, "id2"], [99, "id5"], [99, "id8"], [99, "id13"], [99, "id16"]], "Closed issues": [[99, "closed-issues"], [99, "id3"], [99, "id6"], [99, "id9"], [99, "id11"], [99, "id14"], [99, "id17"], [99, "id19"], [99, "id22"], [99, "id25"], [99, "id28"]], "0.9.2": [[99, "id1"]], "0.9.1": [[99, "id4"]], "0.8.2": [[99, "id7"]], "0.8.1.0": [[99, "id10"]], "0.8.1": [[99, "id12"]], "0.8.0": [[99, "id15"]], "0.7.0": [[99, "id18"]], "Features": [[99, "features"], [99, "id21"], [99, "id24"], [99, "id27"]], "0.6.0": [[99, "id20"]], "0.5.0": [[99, "id23"]], "Deprecation": [[99, "deprecation"]], "0.4": [[99, "id26"]], "0.3.1": [[99, "id29"]], "0.3": [[99, "id30"]], "V0.2": [[99, "v0-2"]], "0.1.11": [[99, "id31"]], "0.1.10": [[99, "id32"]], "0.1.9": [[99, "id33"]], "0.1.7": [[99, "id34"]], "0.1.3": [[99, "id35"]], "First pre-release": [[99, "first-pre-release"]]}, "indexentries": {"barycenter() (in module ot)": [[0, "ot.barycenter"]], "barycenter_unbalanced() (in module ot)": [[0, "ot.barycenter_unbalanced"]], "binary_search_circle() (in module ot)": [[0, "ot.binary_search_circle"]], "dist() (in module ot)": [[0, "ot.dist"]], "emd() (in module ot)": [[0, "ot.emd"]], "emd2() (in module ot)": [[0, "ot.emd2"]], "emd2_1d() (in module ot)": [[0, "ot.emd2_1d"]], "emd_1d() (in module ot)": [[0, "ot.emd_1d"]], "factored_optimal_transport() (in module ot)": [[0, "ot.factored_optimal_transport"]], "fused_gromov_wasserstein() (in module ot)": [[0, "ot.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot)": [[0, "ot.fused_gromov_wasserstein2"]], "gromov_barycenters() (in module ot)": [[0, "ot.gromov_barycenters"]], "gromov_wasserstein() (in module ot)": [[0, "ot.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot)": [[0, "ot.gromov_wasserstein2"]], "lowrank_sinkhorn() (in module ot)": [[0, "ot.lowrank_sinkhorn"]], "max_sliced_wasserstein_distance() (in module ot)": [[0, "ot.max_sliced_wasserstein_distance"]], "module": [[0, "module-ot"], [74, "module-ot.backend"], [75, "module-ot.bregman"], [76, "module-ot.coot"], [77, "module-ot.da"], [78, "module-ot.datasets"], [79, "module-ot.dr"], [80, "module-ot.factored"], [81, "module-ot.gaussian"], [82, "module-ot.gnn"], [83, "module-ot.gromov"], [84, "module-ot.lowrank"], [85, "module-ot.lp"], [86, "module-ot.mapping"], [87, "module-ot.optim"], [88, "module-ot.partial"], [89, "module-ot.plot"], [90, "module-ot.regpath"], [91, "module-ot.sliced"], [92, "module-ot.smooth"], [93, "module-ot.stochastic"], [94, "module-ot.unbalanced"], [95, "module-ot.utils"], [96, "module-ot.weak"]], "ot": [[0, "module-ot"]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[0, "ot.semidiscrete_wasserstein2_unif_circle"]], "sinkhorn() (in module ot)": [[0, "ot.sinkhorn"]], "sinkhorn2() (in module ot)": [[0, "ot.sinkhorn2"]], "sinkhorn_lpl1_mm() (in module ot)": [[0, "ot.sinkhorn_lpl1_mm"]], "sinkhorn_unbalanced() (in module ot)": [[0, "ot.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot)": [[0, "ot.sinkhorn_unbalanced2"]], "sliced_wasserstein_distance() (in module ot)": [[0, "ot.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot)": [[0, "ot.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot)": [[0, "ot.sliced_wasserstein_sphere_unif"]], "solve() (in module ot)": [[0, "ot.solve"]], "solve_gromov() (in module ot)": [[0, "ot.solve_gromov"]], "solve_sample() (in module ot)": [[0, "ot.solve_sample"]], "tic() (in module ot)": [[0, "ot.tic"]], "toc() (in module ot)": [[0, "ot.toc"]], "toq() (in module ot)": [[0, "ot.toq"]], "unif() (in module ot)": [[0, "ot.unif"]], "wasserstein_1d() (in module ot)": [[0, "ot.wasserstein_1d"]], "wasserstein_circle() (in module ot)": [[0, "ot.wasserstein_circle"]], "weak_optimal_transport() (in module ot)": [[0, "ot.weak_optimal_transport"]], "backend (class in ot.backend)": [[74, "id0"], [74, "ot.backend.Backend"]], "cupybackend (class in ot.backend)": [[74, "id84"], [74, "ot.backend.CupyBackend"]], "jaxbackend (class in ot.backend)": [[74, "id165"], [74, "ot.backend.JaxBackend"]], "numpybackend (class in ot.backend)": [[74, "id246"], [74, "ot.backend.NumpyBackend"]], "tensorflowbackend (class in ot.backend)": [[74, "id327"], [74, "ot.backend.TensorflowBackend"]], "torchbackend (class in ot.backend)": [[74, "id408"], [74, "ot.backend.TorchBackend"]], "abs() (ot.backend.backend method)": [[74, "id1"], [74, "ot.backend.Backend.abs"]], "abs() (ot.backend.cupybackend method)": [[74, "id85"], [74, "ot.backend.CupyBackend.abs"]], "abs() (ot.backend.jaxbackend method)": [[74, "id166"], [74, "ot.backend.JaxBackend.abs"]], "abs() (ot.backend.numpybackend method)": [[74, "id247"], [74, "ot.backend.NumpyBackend.abs"]], "abs() (ot.backend.tensorflowbackend method)": [[74, "id328"], [74, "ot.backend.TensorflowBackend.abs"]], "abs() (ot.backend.torchbackend method)": [[74, "id409"], [74, "ot.backend.TorchBackend.abs"]], "allclose() (ot.backend.backend method)": [[74, "id2"], [74, "ot.backend.Backend.allclose"]], "allclose() (ot.backend.cupybackend method)": [[74, "id86"], [74, "ot.backend.CupyBackend.allclose"]], "allclose() (ot.backend.jaxbackend method)": [[74, "id167"], [74, "ot.backend.JaxBackend.allclose"]], "allclose() (ot.backend.numpybackend method)": [[74, "id248"], [74, "ot.backend.NumpyBackend.allclose"]], "allclose() (ot.backend.tensorflowbackend method)": [[74, "id329"], [74, "ot.backend.TensorflowBackend.allclose"]], "allclose() (ot.backend.torchbackend method)": [[74, "id410"], [74, "ot.backend.TorchBackend.allclose"]], "any() (ot.backend.backend method)": [[74, "id3"], [74, "ot.backend.Backend.any"]], "any() (ot.backend.cupybackend method)": [[74, "id87"], [74, "ot.backend.CupyBackend.any"]], "any() (ot.backend.jaxbackend method)": [[74, "id168"], [74, "ot.backend.JaxBackend.any"]], "any() (ot.backend.numpybackend method)": [[74, "id249"], [74, "ot.backend.NumpyBackend.any"]], "any() (ot.backend.tensorflowbackend method)": [[74, "id330"], [74, "ot.backend.TensorflowBackend.any"]], "any() (ot.backend.torchbackend method)": [[74, "id411"], [74, "ot.backend.TorchBackend.any"]], "arange() (ot.backend.backend method)": [[74, "id4"], [74, "ot.backend.Backend.arange"]], "arange() (ot.backend.cupybackend method)": [[74, "id88"], [74, "ot.backend.CupyBackend.arange"]], "arange() (ot.backend.jaxbackend method)": [[74, "id169"], [74, "ot.backend.JaxBackend.arange"]], "arange() (ot.backend.numpybackend method)": [[74, "id250"], [74, "ot.backend.NumpyBackend.arange"]], "arange() (ot.backend.tensorflowbackend method)": [[74, "id331"], [74, "ot.backend.TensorflowBackend.arange"]], "arange() (ot.backend.torchbackend method)": [[74, "id412"], [74, "ot.backend.TorchBackend.arange"]], "argmax() (ot.backend.backend method)": [[74, "id5"], [74, "ot.backend.Backend.argmax"]], "argmax() (ot.backend.cupybackend method)": [[74, "id89"], [74, "ot.backend.CupyBackend.argmax"]], "argmax() (ot.backend.jaxbackend method)": [[74, "id170"], [74, "ot.backend.JaxBackend.argmax"]], "argmax() (ot.backend.numpybackend method)": [[74, "id251"], [74, "ot.backend.NumpyBackend.argmax"]], "argmax() (ot.backend.tensorflowbackend method)": [[74, "id332"], [74, "ot.backend.TensorflowBackend.argmax"]], "argmax() (ot.backend.torchbackend method)": [[74, "id413"], [74, "ot.backend.TorchBackend.argmax"]], "argmin() (ot.backend.backend method)": [[74, "id6"], [74, "ot.backend.Backend.argmin"]], "argmin() (ot.backend.cupybackend method)": [[74, "id90"], [74, "ot.backend.CupyBackend.argmin"]], "argmin() (ot.backend.jaxbackend method)": [[74, "id171"], [74, "ot.backend.JaxBackend.argmin"]], "argmin() (ot.backend.numpybackend method)": [[74, "id252"], [74, "ot.backend.NumpyBackend.argmin"]], "argmin() (ot.backend.tensorflowbackend method)": [[74, "id333"], [74, "ot.backend.TensorflowBackend.argmin"]], "argmin() (ot.backend.torchbackend method)": [[74, "id414"], [74, "ot.backend.TorchBackend.argmin"]], "argsort() (ot.backend.backend method)": [[74, "id7"], [74, "ot.backend.Backend.argsort"]], "argsort() (ot.backend.cupybackend method)": [[74, "id91"], [74, "ot.backend.CupyBackend.argsort"]], "argsort() (ot.backend.jaxbackend method)": [[74, "id172"], [74, "ot.backend.JaxBackend.argsort"]], "argsort() (ot.backend.numpybackend method)": [[74, "id253"], [74, "ot.backend.NumpyBackend.argsort"]], "argsort() (ot.backend.tensorflowbackend method)": [[74, "id334"], [74, "ot.backend.TensorflowBackend.argsort"]], "argsort() (ot.backend.torchbackend method)": [[74, "id415"], [74, "ot.backend.TorchBackend.argsort"]], "array_equal() (ot.backend.backend method)": [[74, "id8"], [74, "ot.backend.Backend.array_equal"]], "array_equal() (ot.backend.cupybackend method)": [[74, "id92"], [74, "ot.backend.CupyBackend.array_equal"]], "array_equal() (ot.backend.jaxbackend method)": [[74, "id173"], [74, "ot.backend.JaxBackend.array_equal"]], "array_equal() (ot.backend.numpybackend method)": [[74, "id254"], [74, "ot.backend.NumpyBackend.array_equal"]], "array_equal() (ot.backend.tensorflowbackend method)": [[74, "id335"], [74, "ot.backend.TensorflowBackend.array_equal"]], "array_equal() (ot.backend.torchbackend method)": [[74, "id416"], [74, "ot.backend.TorchBackend.array_equal"]], "assert_same_dtype_device() (ot.backend.backend method)": [[74, "id9"], [74, "ot.backend.Backend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[74, "id93"], [74, "ot.backend.CupyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[74, "id174"], [74, "ot.backend.JaxBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[74, "id255"], [74, "ot.backend.NumpyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[74, "id336"], [74, "ot.backend.TensorflowBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[74, "id417"], [74, "ot.backend.TorchBackend.assert_same_dtype_device"]], "atan2() (ot.backend.backend method)": [[74, "id10"], [74, "ot.backend.Backend.atan2"]], "atan2() (ot.backend.cupybackend method)": [[74, "id94"], [74, "ot.backend.CupyBackend.atan2"]], "atan2() (ot.backend.jaxbackend method)": [[74, "id175"], [74, "ot.backend.JaxBackend.atan2"]], "atan2() (ot.backend.numpybackend method)": [[74, "id256"], [74, "ot.backend.NumpyBackend.atan2"]], "atan2() (ot.backend.tensorflowbackend method)": [[74, "id337"], [74, "ot.backend.TensorflowBackend.atan2"]], "atan2() (ot.backend.torchbackend method)": [[74, "id418"], [74, "ot.backend.TorchBackend.atan2"]], "bitsize() (ot.backend.backend method)": [[74, "id11"], [74, "ot.backend.Backend.bitsize"]], "bitsize() (ot.backend.cupybackend method)": [[74, "id95"], [74, "ot.backend.CupyBackend.bitsize"]], "bitsize() (ot.backend.jaxbackend method)": [[74, "id176"], [74, "ot.backend.JaxBackend.bitsize"]], "bitsize() (ot.backend.numpybackend method)": [[74, "id257"], [74, "ot.backend.NumpyBackend.bitsize"]], "bitsize() (ot.backend.tensorflowbackend method)": [[74, "id338"], [74, "ot.backend.TensorflowBackend.bitsize"]], "bitsize() (ot.backend.torchbackend method)": [[74, "id419"], [74, "ot.backend.TorchBackend.bitsize"]], "clip() (ot.backend.backend method)": [[74, "id12"], [74, "ot.backend.Backend.clip"]], "clip() (ot.backend.cupybackend method)": [[74, "id96"], [74, "ot.backend.CupyBackend.clip"]], "clip() (ot.backend.jaxbackend method)": [[74, "id177"], [74, "ot.backend.JaxBackend.clip"]], "clip() (ot.backend.numpybackend method)": [[74, "id258"], [74, "ot.backend.NumpyBackend.clip"]], "clip() (ot.backend.tensorflowbackend method)": [[74, "id339"], [74, "ot.backend.TensorflowBackend.clip"]], "clip() (ot.backend.torchbackend method)": [[74, "id420"], [74, "ot.backend.TorchBackend.clip"]], "concatenate() (ot.backend.backend method)": [[74, "id13"], [74, "ot.backend.Backend.concatenate"]], "concatenate() (ot.backend.cupybackend method)": [[74, "id97"], [74, "ot.backend.CupyBackend.concatenate"]], "concatenate() (ot.backend.jaxbackend method)": [[74, "id178"], [74, "ot.backend.JaxBackend.concatenate"]], "concatenate() (ot.backend.numpybackend method)": [[74, "id259"], [74, "ot.backend.NumpyBackend.concatenate"]], "concatenate() (ot.backend.tensorflowbackend method)": [[74, "id340"], [74, "ot.backend.TensorflowBackend.concatenate"]], "concatenate() (ot.backend.torchbackend method)": [[74, "id421"], [74, "ot.backend.TorchBackend.concatenate"]], "coo_matrix() (ot.backend.backend method)": [[74, "id14"], [74, "ot.backend.Backend.coo_matrix"]], "coo_matrix() (ot.backend.cupybackend method)": [[74, "id98"], [74, "ot.backend.CupyBackend.coo_matrix"]], "coo_matrix() (ot.backend.jaxbackend method)": [[74, "id179"], [74, "ot.backend.JaxBackend.coo_matrix"]], "coo_matrix() (ot.backend.numpybackend method)": [[74, "id260"], [74, "ot.backend.NumpyBackend.coo_matrix"]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[74, "id341"], [74, "ot.backend.TensorflowBackend.coo_matrix"]], "coo_matrix() (ot.backend.torchbackend method)": [[74, "id422"], [74, "ot.backend.TorchBackend.coo_matrix"]], "copy() (ot.backend.backend method)": [[74, "id15"], [74, "ot.backend.Backend.copy"]], "copy() (ot.backend.cupybackend method)": [[74, "id99"], [74, "ot.backend.CupyBackend.copy"]], "copy() (ot.backend.jaxbackend method)": [[74, "id180"], [74, "ot.backend.JaxBackend.copy"]], "copy() (ot.backend.numpybackend method)": [[74, "id261"], [74, "ot.backend.NumpyBackend.copy"]], "copy() (ot.backend.tensorflowbackend method)": [[74, "id342"], [74, "ot.backend.TensorflowBackend.copy"]], "copy() (ot.backend.torchbackend method)": [[74, "id423"], [74, "ot.backend.TorchBackend.copy"]], "cumsum() (ot.backend.backend method)": [[74, "id16"], [74, "ot.backend.Backend.cumsum"]], "cumsum() (ot.backend.cupybackend method)": [[74, "id100"], [74, "ot.backend.CupyBackend.cumsum"]], "cumsum() (ot.backend.jaxbackend method)": [[74, "id181"], [74, "ot.backend.JaxBackend.cumsum"]], "cumsum() (ot.backend.numpybackend method)": [[74, "id262"], [74, "ot.backend.NumpyBackend.cumsum"]], "cumsum() (ot.backend.tensorflowbackend method)": [[74, "id343"], [74, "ot.backend.TensorflowBackend.cumsum"]], "cumsum() (ot.backend.torchbackend method)": [[74, "id424"], [74, "ot.backend.TorchBackend.cumsum"]], "detach() (ot.backend.backend method)": [[74, "id17"], [74, "ot.backend.Backend.detach"]], "device_type() (ot.backend.backend method)": [[74, "id18"], [74, "ot.backend.Backend.device_type"]], "device_type() (ot.backend.cupybackend method)": [[74, "id101"], [74, "ot.backend.CupyBackend.device_type"]], "device_type() (ot.backend.jaxbackend method)": [[74, "id182"], [74, "ot.backend.JaxBackend.device_type"]], "device_type() (ot.backend.numpybackend method)": [[74, "id263"], [74, "ot.backend.NumpyBackend.device_type"]], "device_type() (ot.backend.tensorflowbackend method)": [[74, "id344"], [74, "ot.backend.TensorflowBackend.device_type"]], "device_type() (ot.backend.torchbackend method)": [[74, "id425"], [74, "ot.backend.TorchBackend.device_type"]], "diag() (ot.backend.backend method)": [[74, "id19"], [74, "ot.backend.Backend.diag"]], "diag() (ot.backend.cupybackend method)": [[74, "id102"], [74, "ot.backend.CupyBackend.diag"]], "diag() (ot.backend.jaxbackend method)": [[74, "id183"], [74, "ot.backend.JaxBackend.diag"]], "diag() (ot.backend.numpybackend method)": [[74, "id264"], [74, "ot.backend.NumpyBackend.diag"]], "diag() (ot.backend.tensorflowbackend method)": [[74, "id345"], [74, "ot.backend.TensorflowBackend.diag"]], "diag() (ot.backend.torchbackend method)": [[74, "id426"], [74, "ot.backend.TorchBackend.diag"]], "dot() (ot.backend.backend method)": [[74, "id20"], [74, "ot.backend.Backend.dot"]], "dot() (ot.backend.cupybackend method)": [[74, "id103"], [74, "ot.backend.CupyBackend.dot"]], "dot() (ot.backend.jaxbackend method)": [[74, "id184"], [74, "ot.backend.JaxBackend.dot"]], "dot() (ot.backend.numpybackend method)": [[74, "id265"], [74, "ot.backend.NumpyBackend.dot"]], "dot() (ot.backend.tensorflowbackend method)": [[74, "id346"], [74, "ot.backend.TensorflowBackend.dot"]], "dot() (ot.backend.torchbackend method)": [[74, "id427"], [74, "ot.backend.TorchBackend.dot"]], "dtype_device() (ot.backend.backend method)": [[74, "id21"], [74, "ot.backend.Backend.dtype_device"]], "dtype_device() (ot.backend.cupybackend method)": [[74, "id104"], [74, "ot.backend.CupyBackend.dtype_device"]], "dtype_device() (ot.backend.jaxbackend method)": [[74, "id185"], [74, "ot.backend.JaxBackend.dtype_device"]], "dtype_device() (ot.backend.numpybackend method)": [[74, "id266"], [74, "ot.backend.NumpyBackend.dtype_device"]], "dtype_device() (ot.backend.tensorflowbackend method)": [[74, "id347"], [74, "ot.backend.TensorflowBackend.dtype_device"]], "dtype_device() (ot.backend.torchbackend method)": [[74, "id428"], [74, "ot.backend.TorchBackend.dtype_device"]], "eigh() (ot.backend.backend method)": [[74, "id22"], [74, "ot.backend.Backend.eigh"]], "eigh() (ot.backend.cupybackend method)": [[74, "id105"], [74, "ot.backend.CupyBackend.eigh"]], "eigh() (ot.backend.jaxbackend method)": [[74, "id186"], [74, "ot.backend.JaxBackend.eigh"]], "eigh() (ot.backend.numpybackend method)": [[74, "id267"], [74, "ot.backend.NumpyBackend.eigh"]], "eigh() (ot.backend.tensorflowbackend method)": [[74, "id348"], [74, "ot.backend.TensorflowBackend.eigh"]], "eigh() (ot.backend.torchbackend method)": [[74, "id429"], [74, "ot.backend.TorchBackend.eigh"]], "einsum() (ot.backend.backend method)": [[74, "id23"], [74, "ot.backend.Backend.einsum"]], "einsum() (ot.backend.cupybackend method)": [[74, "id106"], [74, "ot.backend.CupyBackend.einsum"]], "einsum() (ot.backend.jaxbackend method)": [[74, "id187"], [74, "ot.backend.JaxBackend.einsum"]], "einsum() (ot.backend.numpybackend method)": [[74, "id268"], [74, "ot.backend.NumpyBackend.einsum"]], "einsum() (ot.backend.tensorflowbackend method)": [[74, "id349"], [74, "ot.backend.TensorflowBackend.einsum"]], "einsum() (ot.backend.torchbackend method)": [[74, "id430"], [74, "ot.backend.TorchBackend.einsum"]], "eliminate_zeros() (ot.backend.backend method)": [[74, "id24"], [74, "ot.backend.Backend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.cupybackend method)": [[74, "id107"], [74, "ot.backend.CupyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[74, "id188"], [74, "ot.backend.JaxBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.numpybackend method)": [[74, "id269"], [74, "ot.backend.NumpyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[74, "id350"], [74, "ot.backend.TensorflowBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.torchbackend method)": [[74, "id431"], [74, "ot.backend.TorchBackend.eliminate_zeros"]], "exp() (ot.backend.backend method)": [[74, "id25"], [74, "ot.backend.Backend.exp"]], "exp() (ot.backend.cupybackend method)": [[74, "id108"], [74, "ot.backend.CupyBackend.exp"]], "exp() (ot.backend.jaxbackend method)": [[74, "id189"], [74, "ot.backend.JaxBackend.exp"]], "exp() (ot.backend.numpybackend method)": [[74, "id270"], [74, "ot.backend.NumpyBackend.exp"]], "exp() (ot.backend.tensorflowbackend method)": [[74, "id351"], [74, "ot.backend.TensorflowBackend.exp"]], "exp() (ot.backend.torchbackend method)": [[74, "id432"], [74, "ot.backend.TorchBackend.exp"]], "eye() (ot.backend.backend method)": [[74, "id26"], [74, "ot.backend.Backend.eye"]], "eye() (ot.backend.cupybackend method)": [[74, "id109"], [74, "ot.backend.CupyBackend.eye"]], "eye() (ot.backend.jaxbackend method)": [[74, "id190"], [74, "ot.backend.JaxBackend.eye"]], "eye() (ot.backend.numpybackend method)": [[74, "id271"], [74, "ot.backend.NumpyBackend.eye"]], "eye() (ot.backend.tensorflowbackend method)": [[74, "id352"], [74, "ot.backend.TensorflowBackend.eye"]], "eye() (ot.backend.torchbackend method)": [[74, "id433"], [74, "ot.backend.TorchBackend.eye"]], "flip() (ot.backend.backend method)": [[74, "id27"], [74, "ot.backend.Backend.flip"]], "flip() (ot.backend.cupybackend method)": [[74, "id110"], [74, "ot.backend.CupyBackend.flip"]], "flip() (ot.backend.jaxbackend method)": [[74, "id191"], [74, "ot.backend.JaxBackend.flip"]], "flip() (ot.backend.numpybackend method)": [[74, "id272"], [74, "ot.backend.NumpyBackend.flip"]], "flip() (ot.backend.tensorflowbackend method)": [[74, "id353"], [74, "ot.backend.TensorflowBackend.flip"]], "flip() (ot.backend.torchbackend method)": [[74, "id434"], [74, "ot.backend.TorchBackend.flip"]], "floor() (ot.backend.backend method)": [[74, "id28"], [74, "ot.backend.Backend.floor"]], "floor() (ot.backend.cupybackend method)": [[74, "id111"], [74, "ot.backend.CupyBackend.floor"]], "floor() (ot.backend.jaxbackend method)": [[74, "id192"], [74, "ot.backend.JaxBackend.floor"]], "floor() (ot.backend.numpybackend method)": [[74, "id273"], [74, "ot.backend.NumpyBackend.floor"]], "floor() (ot.backend.tensorflowbackend method)": [[74, "id354"], [74, "ot.backend.TensorflowBackend.floor"]], "floor() (ot.backend.torchbackend method)": [[74, "id435"], [74, "ot.backend.TorchBackend.floor"]], "from_numpy() (ot.backend.backend method)": [[74, "id29"], [74, "ot.backend.Backend.from_numpy"]], "full() (ot.backend.backend method)": [[74, "id30"], [74, "ot.backend.Backend.full"]], "full() (ot.backend.cupybackend method)": [[74, "id112"], [74, "ot.backend.CupyBackend.full"]], "full() (ot.backend.jaxbackend method)": [[74, "id193"], [74, "ot.backend.JaxBackend.full"]], "full() (ot.backend.numpybackend method)": [[74, "id274"], [74, "ot.backend.NumpyBackend.full"]], "full() (ot.backend.tensorflowbackend method)": [[74, "id355"], [74, "ot.backend.TensorflowBackend.full"]], "full() (ot.backend.torchbackend method)": [[74, "id436"], [74, "ot.backend.TorchBackend.full"]], "get_available_backend_implementations() (in module ot.backend)": [[74, "id489"], [74, "ot.backend.get_available_backend_implementations"]], "get_backend() (in module ot.backend)": [[74, "id490"], [74, "ot.backend.get_backend"]], "get_backend_list() (in module ot.backend)": [[74, "id491"], [74, "ot.backend.get_backend_list"]], "inv() (ot.backend.backend method)": [[74, "id31"], [74, "ot.backend.Backend.inv"]], "inv() (ot.backend.cupybackend method)": [[74, "id113"], [74, "ot.backend.CupyBackend.inv"]], "inv() (ot.backend.jaxbackend method)": [[74, "id194"], [74, "ot.backend.JaxBackend.inv"]], "inv() (ot.backend.numpybackend method)": [[74, "id275"], [74, "ot.backend.NumpyBackend.inv"]], "inv() (ot.backend.tensorflowbackend method)": [[74, "id356"], [74, "ot.backend.TensorflowBackend.inv"]], "inv() (ot.backend.torchbackend method)": [[74, "id437"], [74, "ot.backend.TorchBackend.inv"]], "is_floating_point() (ot.backend.backend method)": [[74, "id32"], [74, "ot.backend.Backend.is_floating_point"]], "is_floating_point() (ot.backend.cupybackend method)": [[74, "id114"], [74, "ot.backend.CupyBackend.is_floating_point"]], "is_floating_point() (ot.backend.jaxbackend method)": [[74, "id195"], [74, "ot.backend.JaxBackend.is_floating_point"]], "is_floating_point() (ot.backend.numpybackend method)": [[74, "id276"], [74, "ot.backend.NumpyBackend.is_floating_point"]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[74, "id357"], [74, "ot.backend.TensorflowBackend.is_floating_point"]], "is_floating_point() (ot.backend.torchbackend method)": [[74, "id438"], [74, "ot.backend.TorchBackend.is_floating_point"]], "isfinite() (ot.backend.backend method)": [[74, "id33"], [74, "ot.backend.Backend.isfinite"]], "isfinite() (ot.backend.cupybackend method)": [[74, "id115"], [74, "ot.backend.CupyBackend.isfinite"]], "isfinite() (ot.backend.jaxbackend method)": [[74, "id196"], [74, "ot.backend.JaxBackend.isfinite"]], "isfinite() (ot.backend.numpybackend method)": [[74, "id277"], [74, "ot.backend.NumpyBackend.isfinite"]], "isfinite() (ot.backend.tensorflowbackend method)": [[74, "id358"], [74, "ot.backend.TensorflowBackend.isfinite"]], "isfinite() (ot.backend.torchbackend method)": [[74, "id439"], [74, "ot.backend.TorchBackend.isfinite"]], "isinf() (ot.backend.backend method)": [[74, "id34"], [74, "ot.backend.Backend.isinf"]], "isinf() (ot.backend.cupybackend method)": [[74, "id116"], [74, "ot.backend.CupyBackend.isinf"]], "isinf() (ot.backend.jaxbackend method)": [[74, "id197"], [74, "ot.backend.JaxBackend.isinf"]], "isinf() (ot.backend.numpybackend method)": [[74, "id278"], [74, "ot.backend.NumpyBackend.isinf"]], "isinf() (ot.backend.tensorflowbackend method)": [[74, "id359"], [74, "ot.backend.TensorflowBackend.isinf"]], "isinf() (ot.backend.torchbackend method)": [[74, "id440"], [74, "ot.backend.TorchBackend.isinf"]], "isnan() (ot.backend.backend method)": [[74, "id35"], [74, "ot.backend.Backend.isnan"]], "isnan() (ot.backend.cupybackend method)": [[74, "id117"], [74, "ot.backend.CupyBackend.isnan"]], "isnan() (ot.backend.jaxbackend method)": [[74, "id198"], [74, "ot.backend.JaxBackend.isnan"]], "isnan() (ot.backend.numpybackend method)": [[74, "id279"], [74, "ot.backend.NumpyBackend.isnan"]], "isnan() (ot.backend.tensorflowbackend method)": [[74, "id360"], [74, "ot.backend.TensorflowBackend.isnan"]], "isnan() (ot.backend.torchbackend method)": [[74, "id441"], [74, "ot.backend.TorchBackend.isnan"]], "issparse() (ot.backend.backend method)": [[74, "id36"], [74, "ot.backend.Backend.issparse"]], "issparse() (ot.backend.cupybackend method)": [[74, "id118"], [74, "ot.backend.CupyBackend.issparse"]], "issparse() (ot.backend.jaxbackend method)": [[74, "id199"], [74, "ot.backend.JaxBackend.issparse"]], "issparse() (ot.backend.numpybackend method)": [[74, "id280"], [74, "ot.backend.NumpyBackend.issparse"]], "issparse() (ot.backend.tensorflowbackend method)": [[74, "id361"], [74, "ot.backend.TensorflowBackend.issparse"]], "issparse() (ot.backend.torchbackend method)": [[74, "id442"], [74, "ot.backend.TorchBackend.issparse"]], "kl_div() (ot.backend.backend method)": [[74, "id37"], [74, "ot.backend.Backend.kl_div"]], "kl_div() (ot.backend.cupybackend method)": [[74, "id119"], [74, "ot.backend.CupyBackend.kl_div"]], "kl_div() (ot.backend.jaxbackend method)": [[74, "id200"], [74, "ot.backend.JaxBackend.kl_div"]], "kl_div() (ot.backend.numpybackend method)": [[74, "id281"], [74, "ot.backend.NumpyBackend.kl_div"]], "kl_div() (ot.backend.tensorflowbackend method)": [[74, "id362"], [74, "ot.backend.TensorflowBackend.kl_div"]], "kl_div() (ot.backend.torchbackend method)": [[74, "id443"], [74, "ot.backend.TorchBackend.kl_div"]], "linspace() (ot.backend.backend method)": [[74, "id38"], [74, "ot.backend.Backend.linspace"]], "linspace() (ot.backend.cupybackend method)": [[74, "id120"], [74, "ot.backend.CupyBackend.linspace"]], "linspace() (ot.backend.jaxbackend method)": [[74, "id201"], [74, "ot.backend.JaxBackend.linspace"]], "linspace() (ot.backend.numpybackend method)": [[74, "id282"], [74, "ot.backend.NumpyBackend.linspace"]], "linspace() (ot.backend.tensorflowbackend method)": [[74, "id363"], [74, "ot.backend.TensorflowBackend.linspace"]], "linspace() (ot.backend.torchbackend method)": [[74, "id444"], [74, "ot.backend.TorchBackend.linspace"]], "log() (ot.backend.backend method)": [[74, "id39"], [74, "ot.backend.Backend.log"]], "log() (ot.backend.cupybackend method)": [[74, "id121"], [74, "ot.backend.CupyBackend.log"]], "log() (ot.backend.jaxbackend method)": [[74, "id202"], [74, "ot.backend.JaxBackend.log"]], "log() (ot.backend.numpybackend method)": [[74, "id283"], [74, "ot.backend.NumpyBackend.log"]], "log() (ot.backend.tensorflowbackend method)": [[74, "id364"], [74, "ot.backend.TensorflowBackend.log"]], "log() (ot.backend.torchbackend method)": [[74, "id445"], [74, "ot.backend.TorchBackend.log"]], "logsumexp() (ot.backend.backend method)": [[74, "id40"], [74, "ot.backend.Backend.logsumexp"]], "logsumexp() (ot.backend.cupybackend method)": [[74, "id122"], [74, "ot.backend.CupyBackend.logsumexp"]], "logsumexp() (ot.backend.jaxbackend method)": [[74, "id203"], [74, "ot.backend.JaxBackend.logsumexp"]], "logsumexp() (ot.backend.numpybackend method)": [[74, "id284"], [74, "ot.backend.NumpyBackend.logsumexp"]], "logsumexp() (ot.backend.tensorflowbackend method)": [[74, "id365"], [74, "ot.backend.TensorflowBackend.logsumexp"]], "logsumexp() (ot.backend.torchbackend method)": [[74, "id446"], [74, "ot.backend.TorchBackend.logsumexp"]], "matmul() (ot.backend.backend method)": [[74, "id41"], [74, "ot.backend.Backend.matmul"]], "matmul() (ot.backend.cupybackend method)": [[74, "id123"], [74, "ot.backend.CupyBackend.matmul"]], "matmul() (ot.backend.jaxbackend method)": [[74, "id204"], [74, "ot.backend.JaxBackend.matmul"]], "matmul() (ot.backend.numpybackend method)": [[74, "id285"], [74, "ot.backend.NumpyBackend.matmul"]], "matmul() (ot.backend.tensorflowbackend method)": [[74, "id366"], [74, "ot.backend.TensorflowBackend.matmul"]], "matmul() (ot.backend.torchbackend method)": [[74, "id447"], [74, "ot.backend.TorchBackend.matmul"]], "max() (ot.backend.backend method)": [[74, "id42"], [74, "ot.backend.Backend.max"]], "max() (ot.backend.cupybackend method)": [[74, "id124"], [74, "ot.backend.CupyBackend.max"]], "max() (ot.backend.jaxbackend method)": [[74, "id205"], [74, "ot.backend.JaxBackend.max"]], "max() (ot.backend.numpybackend method)": [[74, "id286"], [74, "ot.backend.NumpyBackend.max"]], "max() (ot.backend.tensorflowbackend method)": [[74, "id367"], [74, "ot.backend.TensorflowBackend.max"]], "max() (ot.backend.torchbackend method)": [[74, "id448"], [74, "ot.backend.TorchBackend.max"]], "maximum() (ot.backend.backend method)": [[74, "id43"], [74, "ot.backend.Backend.maximum"]], "maximum() (ot.backend.cupybackend method)": [[74, "id125"], [74, "ot.backend.CupyBackend.maximum"]], "maximum() (ot.backend.jaxbackend method)": [[74, "id206"], [74, "ot.backend.JaxBackend.maximum"]], "maximum() (ot.backend.numpybackend method)": [[74, "id287"], [74, "ot.backend.NumpyBackend.maximum"]], "maximum() (ot.backend.tensorflowbackend method)": [[74, "id368"], [74, "ot.backend.TensorflowBackend.maximum"]], "maximum() (ot.backend.torchbackend method)": [[74, "id449"], [74, "ot.backend.TorchBackend.maximum"]], "mean() (ot.backend.backend method)": [[74, "id44"], [74, "ot.backend.Backend.mean"]], "mean() (ot.backend.cupybackend method)": [[74, "id126"], [74, "ot.backend.CupyBackend.mean"]], "mean() (ot.backend.jaxbackend method)": [[74, "id207"], [74, "ot.backend.JaxBackend.mean"]], "mean() (ot.backend.numpybackend method)": [[74, "id288"], [74, "ot.backend.NumpyBackend.mean"]], "mean() (ot.backend.tensorflowbackend method)": [[74, "id369"], [74, "ot.backend.TensorflowBackend.mean"]], "mean() (ot.backend.torchbackend method)": [[74, "id450"], [74, "ot.backend.TorchBackend.mean"]], "median() (ot.backend.backend method)": [[74, "id45"], [74, "ot.backend.Backend.median"]], "median() (ot.backend.cupybackend method)": [[74, "id127"], [74, "ot.backend.CupyBackend.median"]], "median() (ot.backend.jaxbackend method)": [[74, "id208"], [74, "ot.backend.JaxBackend.median"]], "median() (ot.backend.numpybackend method)": [[74, "id289"], [74, "ot.backend.NumpyBackend.median"]], "median() (ot.backend.tensorflowbackend method)": [[74, "id370"], [74, "ot.backend.TensorflowBackend.median"]], "median() (ot.backend.torchbackend method)": [[74, "id451"], [74, "ot.backend.TorchBackend.median"]], "meshgrid() (ot.backend.backend method)": [[74, "id46"], [74, "ot.backend.Backend.meshgrid"]], "meshgrid() (ot.backend.cupybackend method)": [[74, "id128"], [74, "ot.backend.CupyBackend.meshgrid"]], "meshgrid() (ot.backend.jaxbackend method)": [[74, "id209"], [74, "ot.backend.JaxBackend.meshgrid"]], "meshgrid() (ot.backend.numpybackend method)": [[74, "id290"], [74, "ot.backend.NumpyBackend.meshgrid"]], "meshgrid() (ot.backend.tensorflowbackend method)": [[74, "id371"], [74, "ot.backend.TensorflowBackend.meshgrid"]], "meshgrid() (ot.backend.torchbackend method)": [[74, "id452"], [74, "ot.backend.TorchBackend.meshgrid"]], "min() (ot.backend.backend method)": [[74, "id47"], [74, "ot.backend.Backend.min"]], "min() (ot.backend.cupybackend method)": [[74, "id129"], [74, "ot.backend.CupyBackend.min"]], "min() (ot.backend.jaxbackend method)": [[74, "id210"], [74, "ot.backend.JaxBackend.min"]], "min() (ot.backend.numpybackend method)": [[74, "id291"], [74, "ot.backend.NumpyBackend.min"]], "min() (ot.backend.tensorflowbackend method)": [[74, "id372"], [74, "ot.backend.TensorflowBackend.min"]], "min() (ot.backend.torchbackend method)": [[74, "id453"], [74, "ot.backend.TorchBackend.min"]], "minimum() (ot.backend.backend method)": [[74, "id48"], [74, "ot.backend.Backend.minimum"]], "minimum() (ot.backend.cupybackend method)": [[74, "id130"], [74, "ot.backend.CupyBackend.minimum"]], "minimum() (ot.backend.jaxbackend method)": [[74, "id211"], [74, "ot.backend.JaxBackend.minimum"]], "minimum() (ot.backend.numpybackend method)": [[74, "id292"], [74, "ot.backend.NumpyBackend.minimum"]], "minimum() (ot.backend.tensorflowbackend method)": [[74, "id373"], [74, "ot.backend.TensorflowBackend.minimum"]], "minimum() (ot.backend.torchbackend method)": [[74, "id454"], [74, "ot.backend.TorchBackend.minimum"]], "nan_to_num() (ot.backend.backend method)": [[74, "id49"], [74, "ot.backend.Backend.nan_to_num"]], "nan_to_num() (ot.backend.cupybackend method)": [[74, "id131"], [74, "ot.backend.CupyBackend.nan_to_num"]], "nan_to_num() (ot.backend.jaxbackend method)": [[74, "id212"], [74, "ot.backend.JaxBackend.nan_to_num"]], "nan_to_num() (ot.backend.numpybackend method)": [[74, "id293"], [74, "ot.backend.NumpyBackend.nan_to_num"]], "nan_to_num() (ot.backend.tensorflowbackend method)": [[74, "id374"], [74, "ot.backend.TensorflowBackend.nan_to_num"]], "nan_to_num() (ot.backend.torchbackend method)": [[74, "id455"], [74, "ot.backend.TorchBackend.nan_to_num"]], "norm() (ot.backend.backend method)": [[74, "id50"], [74, "ot.backend.Backend.norm"]], "norm() (ot.backend.cupybackend method)": [[74, "id132"], [74, "ot.backend.CupyBackend.norm"]], "norm() (ot.backend.jaxbackend method)": [[74, "id213"], [74, "ot.backend.JaxBackend.norm"]], "norm() (ot.backend.numpybackend method)": [[74, "id294"], [74, "ot.backend.NumpyBackend.norm"]], "norm() (ot.backend.tensorflowbackend method)": [[74, "id375"], [74, "ot.backend.TensorflowBackend.norm"]], "norm() (ot.backend.torchbackend method)": [[74, "id456"], [74, "ot.backend.TorchBackend.norm"]], "ones() (ot.backend.backend method)": [[74, "id51"], [74, "ot.backend.Backend.ones"]], "ones() (ot.backend.cupybackend method)": [[74, "id133"], [74, "ot.backend.CupyBackend.ones"]], "ones() (ot.backend.jaxbackend method)": [[74, "id214"], [74, "ot.backend.JaxBackend.ones"]], "ones() (ot.backend.numpybackend method)": [[74, "id295"], [74, "ot.backend.NumpyBackend.ones"]], "ones() (ot.backend.tensorflowbackend method)": [[74, "id376"], [74, "ot.backend.TensorflowBackend.ones"]], "ones() (ot.backend.torchbackend method)": [[74, "id457"], [74, "ot.backend.TorchBackend.ones"]], "ot.backend": [[74, "module-ot.backend"]], "outer() (ot.backend.backend method)": [[74, "id52"], [74, "ot.backend.Backend.outer"]], "outer() (ot.backend.cupybackend method)": [[74, "id134"], [74, "ot.backend.CupyBackend.outer"]], "outer() (ot.backend.jaxbackend method)": [[74, "id215"], [74, "ot.backend.JaxBackend.outer"]], "outer() (ot.backend.numpybackend method)": [[74, "id296"], [74, "ot.backend.NumpyBackend.outer"]], "outer() (ot.backend.tensorflowbackend method)": [[74, "id377"], [74, "ot.backend.TensorflowBackend.outer"]], "outer() (ot.backend.torchbackend method)": [[74, "id458"], [74, "ot.backend.TorchBackend.outer"]], "power() (ot.backend.backend method)": [[74, "id53"], [74, "ot.backend.Backend.power"]], "power() (ot.backend.cupybackend method)": [[74, "id135"], [74, "ot.backend.CupyBackend.power"]], "power() (ot.backend.jaxbackend method)": [[74, "id216"], [74, "ot.backend.JaxBackend.power"]], "power() (ot.backend.numpybackend method)": [[74, "id297"], [74, "ot.backend.NumpyBackend.power"]], "power() (ot.backend.tensorflowbackend method)": [[74, "id378"], [74, "ot.backend.TensorflowBackend.power"]], "power() (ot.backend.torchbackend method)": [[74, "id459"], [74, "ot.backend.TorchBackend.power"]], "prod() (ot.backend.backend method)": [[74, "id54"], [74, "ot.backend.Backend.prod"]], "prod() (ot.backend.cupybackend method)": [[74, "id136"], [74, "ot.backend.CupyBackend.prod"]], "prod() (ot.backend.jaxbackend method)": [[74, "id217"], [74, "ot.backend.JaxBackend.prod"]], "prod() (ot.backend.numpybackend method)": [[74, "id298"], [74, "ot.backend.NumpyBackend.prod"]], "prod() (ot.backend.tensorflowbackend method)": [[74, "id379"], [74, "ot.backend.TensorflowBackend.prod"]], "prod() (ot.backend.torchbackend method)": [[74, "id460"], [74, "ot.backend.TorchBackend.prod"]], "qr() (ot.backend.backend method)": [[74, "id55"], [74, "ot.backend.Backend.qr"]], "qr() (ot.backend.cupybackend method)": [[74, "id137"], [74, "ot.backend.CupyBackend.qr"]], "qr() (ot.backend.jaxbackend method)": [[74, "id218"], [74, "ot.backend.JaxBackend.qr"]], "qr() (ot.backend.numpybackend method)": [[74, "id299"], [74, "ot.backend.NumpyBackend.qr"]], "qr() (ot.backend.tensorflowbackend method)": [[74, "id380"], [74, "ot.backend.TensorflowBackend.qr"]], "qr() (ot.backend.torchbackend method)": [[74, "id461"], [74, "ot.backend.TorchBackend.qr"]], "rand() (ot.backend.backend method)": [[74, "id56"], [74, "ot.backend.Backend.rand"]], "rand() (ot.backend.cupybackend method)": [[74, "id138"], [74, "ot.backend.CupyBackend.rand"]], "rand() (ot.backend.jaxbackend method)": [[74, "id219"], [74, "ot.backend.JaxBackend.rand"]], "rand() (ot.backend.numpybackend method)": [[74, "id300"], [74, "ot.backend.NumpyBackend.rand"]], "rand() (ot.backend.tensorflowbackend method)": [[74, "id381"], [74, "ot.backend.TensorflowBackend.rand"]], "rand() (ot.backend.torchbackend method)": [[74, "id462"], [74, "ot.backend.TorchBackend.rand"]], "randn() (ot.backend.backend method)": [[74, "id57"], [74, "ot.backend.Backend.randn"]], "randn() (ot.backend.cupybackend method)": [[74, "id139"], [74, "ot.backend.CupyBackend.randn"]], "randn() (ot.backend.jaxbackend method)": [[74, "id220"], [74, "ot.backend.JaxBackend.randn"]], "randn() (ot.backend.numpybackend method)": [[74, "id301"], [74, "ot.backend.NumpyBackend.randn"]], "randn() (ot.backend.tensorflowbackend method)": [[74, "id382"], [74, "ot.backend.TensorflowBackend.randn"]], "randn() (ot.backend.torchbackend method)": [[74, "id463"], [74, "ot.backend.TorchBackend.randn"]], "repeat() (ot.backend.backend method)": [[74, "id58"], [74, "ot.backend.Backend.repeat"]], "repeat() (ot.backend.cupybackend method)": [[74, "id140"], [74, "ot.backend.CupyBackend.repeat"]], "repeat() (ot.backend.jaxbackend method)": [[74, "id221"], [74, "ot.backend.JaxBackend.repeat"]], "repeat() (ot.backend.numpybackend method)": [[74, "id302"], [74, "ot.backend.NumpyBackend.repeat"]], "repeat() (ot.backend.tensorflowbackend method)": [[74, "id383"], [74, "ot.backend.TensorflowBackend.repeat"]], "repeat() (ot.backend.torchbackend method)": [[74, "id464"], [74, "ot.backend.TorchBackend.repeat"]], "reshape() (ot.backend.backend method)": [[74, "id59"], [74, "ot.backend.Backend.reshape"]], "reshape() (ot.backend.cupybackend method)": [[74, "id141"], [74, "ot.backend.CupyBackend.reshape"]], "reshape() (ot.backend.jaxbackend method)": [[74, "id222"], [74, "ot.backend.JaxBackend.reshape"]], "reshape() (ot.backend.numpybackend method)": [[74, "id303"], [74, "ot.backend.NumpyBackend.reshape"]], "reshape() (ot.backend.tensorflowbackend method)": [[74, "id384"], [74, "ot.backend.TensorflowBackend.reshape"]], "reshape() (ot.backend.torchbackend method)": [[74, "id465"], [74, "ot.backend.TorchBackend.reshape"]], "searchsorted() (ot.backend.backend method)": [[74, "id60"], [74, "ot.backend.Backend.searchsorted"]], "searchsorted() (ot.backend.cupybackend method)": [[74, "id142"], [74, "ot.backend.CupyBackend.searchsorted"]], "searchsorted() (ot.backend.jaxbackend method)": [[74, "id223"], [74, "ot.backend.JaxBackend.searchsorted"]], "searchsorted() (ot.backend.numpybackend method)": [[74, "id304"], [74, "ot.backend.NumpyBackend.searchsorted"]], "searchsorted() (ot.backend.tensorflowbackend method)": [[74, "id385"], [74, "ot.backend.TensorflowBackend.searchsorted"]], "searchsorted() (ot.backend.torchbackend method)": [[74, "id466"], [74, "ot.backend.TorchBackend.searchsorted"]], "seed() (ot.backend.backend method)": [[74, "id61"], [74, "ot.backend.Backend.seed"]], "seed() (ot.backend.cupybackend method)": [[74, "id143"], [74, "ot.backend.CupyBackend.seed"]], "seed() (ot.backend.jaxbackend method)": [[74, "id224"], [74, "ot.backend.JaxBackend.seed"]], "seed() (ot.backend.numpybackend method)": [[74, "id305"], [74, "ot.backend.NumpyBackend.seed"]], "seed() (ot.backend.tensorflowbackend method)": [[74, "id386"], [74, "ot.backend.TensorflowBackend.seed"]], "seed() (ot.backend.torchbackend method)": [[74, "id467"], [74, "ot.backend.TorchBackend.seed"]], "set_gradients() (ot.backend.backend method)": [[74, "id62"], [74, "ot.backend.Backend.set_gradients"]], "set_gradients() (ot.backend.cupybackend method)": [[74, "id144"], [74, "ot.backend.CupyBackend.set_gradients"]], "set_gradients() (ot.backend.jaxbackend method)": [[74, "id225"], [74, "ot.backend.JaxBackend.set_gradients"]], "set_gradients() (ot.backend.numpybackend method)": [[74, "id306"], [74, "ot.backend.NumpyBackend.set_gradients"]], "set_gradients() (ot.backend.tensorflowbackend method)": [[74, "id387"], [74, "ot.backend.TensorflowBackend.set_gradients"]], "set_gradients() (ot.backend.torchbackend method)": [[74, "id468"], [74, "ot.backend.TorchBackend.set_gradients"]], "sign() (ot.backend.backend method)": [[74, "id63"], [74, "ot.backend.Backend.sign"]], "sign() (ot.backend.cupybackend method)": [[74, "id145"], [74, "ot.backend.CupyBackend.sign"]], "sign() (ot.backend.jaxbackend method)": [[74, "id226"], [74, "ot.backend.JaxBackend.sign"]], "sign() (ot.backend.numpybackend method)": [[74, "id307"], [74, "ot.backend.NumpyBackend.sign"]], "sign() (ot.backend.tensorflowbackend method)": [[74, "id388"], [74, "ot.backend.TensorflowBackend.sign"]], "sign() (ot.backend.torchbackend method)": [[74, "id469"], [74, "ot.backend.TorchBackend.sign"]], "solve() (ot.backend.backend method)": [[74, "id64"], [74, "ot.backend.Backend.solve"]], "solve() (ot.backend.cupybackend method)": [[74, "id146"], [74, "ot.backend.CupyBackend.solve"]], "solve() (ot.backend.jaxbackend method)": [[74, "id227"], [74, "ot.backend.JaxBackend.solve"]], "solve() (ot.backend.numpybackend method)": [[74, "id308"], [74, "ot.backend.NumpyBackend.solve"]], "solve() (ot.backend.tensorflowbackend method)": [[74, "id389"], [74, "ot.backend.TensorflowBackend.solve"]], "solve() (ot.backend.torchbackend method)": [[74, "id470"], [74, "ot.backend.TorchBackend.solve"]], "sort() (ot.backend.backend method)": [[74, "id65"], [74, "ot.backend.Backend.sort"]], "sort() (ot.backend.cupybackend method)": [[74, "id147"], [74, "ot.backend.CupyBackend.sort"]], "sort() (ot.backend.jaxbackend method)": [[74, "id228"], [74, "ot.backend.JaxBackend.sort"]], "sort() (ot.backend.numpybackend method)": [[74, "id309"], [74, "ot.backend.NumpyBackend.sort"]], "sort() (ot.backend.tensorflowbackend method)": [[74, "id390"], [74, "ot.backend.TensorflowBackend.sort"]], "sort() (ot.backend.torchbackend method)": [[74, "id471"], [74, "ot.backend.TorchBackend.sort"]], "sort2() (ot.backend.backend method)": [[74, "id66"], [74, "ot.backend.Backend.sort2"]], "sort2() (ot.backend.cupybackend method)": [[74, "id148"], [74, "ot.backend.CupyBackend.sort2"]], "sort2() (ot.backend.jaxbackend method)": [[74, "id229"], [74, "ot.backend.JaxBackend.sort2"]], "sort2() (ot.backend.numpybackend method)": [[74, "id310"], [74, "ot.backend.NumpyBackend.sort2"]], "sort2() (ot.backend.tensorflowbackend method)": [[74, "id391"], [74, "ot.backend.TensorflowBackend.sort2"]], "sort2() (ot.backend.torchbackend method)": [[74, "id472"], [74, "ot.backend.TorchBackend.sort2"]], "sqrt() (ot.backend.backend method)": [[74, "id67"], [74, "ot.backend.Backend.sqrt"]], "sqrt() (ot.backend.cupybackend method)": [[74, "id149"], [74, "ot.backend.CupyBackend.sqrt"]], "sqrt() (ot.backend.jaxbackend method)": [[74, "id230"], [74, "ot.backend.JaxBackend.sqrt"]], "sqrt() (ot.backend.numpybackend method)": [[74, "id311"], [74, "ot.backend.NumpyBackend.sqrt"]], "sqrt() (ot.backend.tensorflowbackend method)": [[74, "id392"], [74, "ot.backend.TensorflowBackend.sqrt"]], "sqrt() (ot.backend.torchbackend method)": [[74, "id473"], [74, "ot.backend.TorchBackend.sqrt"]], "sqrtm() (ot.backend.backend method)": [[74, "id68"], [74, "ot.backend.Backend.sqrtm"]], "sqrtm() (ot.backend.cupybackend method)": [[74, "id150"], [74, "ot.backend.CupyBackend.sqrtm"]], "sqrtm() (ot.backend.jaxbackend method)": [[74, "id231"], [74, "ot.backend.JaxBackend.sqrtm"]], "sqrtm() (ot.backend.numpybackend method)": [[74, "id312"], [74, "ot.backend.NumpyBackend.sqrtm"]], "sqrtm() (ot.backend.tensorflowbackend method)": [[74, "id393"], [74, "ot.backend.TensorflowBackend.sqrtm"]], "sqrtm() (ot.backend.torchbackend method)": [[74, "id474"], [74, "ot.backend.TorchBackend.sqrtm"]], "squeeze() (ot.backend.backend method)": [[74, "id69"], [74, "ot.backend.Backend.squeeze"]], "squeeze() (ot.backend.cupybackend method)": [[74, "id151"], [74, "ot.backend.CupyBackend.squeeze"]], "squeeze() (ot.backend.jaxbackend method)": [[74, "id232"], [74, "ot.backend.JaxBackend.squeeze"]], "squeeze() (ot.backend.numpybackend method)": [[74, "id313"], [74, "ot.backend.NumpyBackend.squeeze"]], "squeeze() (ot.backend.tensorflowbackend method)": [[74, "id394"], [74, "ot.backend.TensorflowBackend.squeeze"]], "squeeze() (ot.backend.torchbackend method)": [[74, "id475"], [74, "ot.backend.TorchBackend.squeeze"]], "stack() (ot.backend.backend method)": [[74, "id70"], [74, "ot.backend.Backend.stack"]], "stack() (ot.backend.cupybackend method)": [[74, "id152"], [74, "ot.backend.CupyBackend.stack"]], "stack() (ot.backend.jaxbackend method)": [[74, "id233"], [74, "ot.backend.JaxBackend.stack"]], "stack() (ot.backend.numpybackend method)": [[74, "id314"], [74, "ot.backend.NumpyBackend.stack"]], "stack() (ot.backend.tensorflowbackend method)": [[74, "id395"], [74, "ot.backend.TensorflowBackend.stack"]], "stack() (ot.backend.torchbackend method)": [[74, "id476"], [74, "ot.backend.TorchBackend.stack"]], "std() (ot.backend.backend method)": [[74, "id71"], [74, "ot.backend.Backend.std"]], "std() (ot.backend.cupybackend method)": [[74, "id153"], [74, "ot.backend.CupyBackend.std"]], "std() (ot.backend.jaxbackend method)": [[74, "id234"], [74, "ot.backend.JaxBackend.std"]], "std() (ot.backend.numpybackend method)": [[74, "id315"], [74, "ot.backend.NumpyBackend.std"]], "std() (ot.backend.tensorflowbackend method)": [[74, "id396"], [74, "ot.backend.TensorflowBackend.std"]], "std() (ot.backend.torchbackend method)": [[74, "id477"], [74, "ot.backend.TorchBackend.std"]], "sum() (ot.backend.backend method)": [[74, "id72"], [74, "ot.backend.Backend.sum"]], "sum() (ot.backend.cupybackend method)": [[74, "id154"], [74, "ot.backend.CupyBackend.sum"]], "sum() (ot.backend.jaxbackend method)": [[74, "id235"], [74, "ot.backend.JaxBackend.sum"]], "sum() (ot.backend.numpybackend method)": [[74, "id316"], [74, "ot.backend.NumpyBackend.sum"]], "sum() (ot.backend.tensorflowbackend method)": [[74, "id397"], [74, "ot.backend.TensorflowBackend.sum"]], "sum() (ot.backend.torchbackend method)": [[74, "id478"], [74, "ot.backend.TorchBackend.sum"]], "take_along_axis() (ot.backend.backend method)": [[74, "id73"], [74, "ot.backend.Backend.take_along_axis"]], "take_along_axis() (ot.backend.cupybackend method)": [[74, "id155"], [74, "ot.backend.CupyBackend.take_along_axis"]], "take_along_axis() (ot.backend.jaxbackend method)": [[74, "id236"], [74, "ot.backend.JaxBackend.take_along_axis"]], "take_along_axis() (ot.backend.numpybackend method)": [[74, "id317"], [74, "ot.backend.NumpyBackend.take_along_axis"]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[74, "id398"], [74, "ot.backend.TensorflowBackend.take_along_axis"]], "take_along_axis() (ot.backend.torchbackend method)": [[74, "id479"], [74, "ot.backend.TorchBackend.take_along_axis"]], "tile() (ot.backend.backend method)": [[74, "id74"], [74, "ot.backend.Backend.tile"]], "tile() (ot.backend.cupybackend method)": [[74, "id156"], [74, "ot.backend.CupyBackend.tile"]], "tile() (ot.backend.jaxbackend method)": [[74, "id237"], [74, "ot.backend.JaxBackend.tile"]], "tile() (ot.backend.numpybackend method)": [[74, "id318"], [74, "ot.backend.NumpyBackend.tile"]], "tile() (ot.backend.tensorflowbackend method)": [[74, "id399"], [74, "ot.backend.TensorflowBackend.tile"]], "tile() (ot.backend.torchbackend method)": [[74, "id480"], [74, "ot.backend.TorchBackend.tile"]], "to_numpy() (in module ot.backend)": [[74, "id492"], [74, "ot.backend.to_numpy"]], "to_numpy() (ot.backend.backend method)": [[74, "id75"], [74, "ot.backend.Backend.to_numpy"]], "tocsr() (ot.backend.backend method)": [[74, "id76"], [74, "ot.backend.Backend.tocsr"]], "tocsr() (ot.backend.cupybackend method)": [[74, "id157"], [74, "ot.backend.CupyBackend.tocsr"]], "tocsr() (ot.backend.jaxbackend method)": [[74, "id238"], [74, "ot.backend.JaxBackend.tocsr"]], "tocsr() (ot.backend.numpybackend method)": [[74, "id319"], [74, "ot.backend.NumpyBackend.tocsr"]], "tocsr() (ot.backend.tensorflowbackend method)": [[74, "id400"], [74, "ot.backend.TensorflowBackend.tocsr"]], "tocsr() (ot.backend.torchbackend method)": [[74, "id481"], [74, "ot.backend.TorchBackend.tocsr"]], "todense() (ot.backend.backend method)": [[74, "id77"], [74, "ot.backend.Backend.todense"]], "todense() (ot.backend.cupybackend method)": [[74, "id158"], [74, "ot.backend.CupyBackend.todense"]], "todense() (ot.backend.jaxbackend method)": [[74, "id239"], [74, "ot.backend.JaxBackend.todense"]], "todense() (ot.backend.numpybackend method)": [[74, "id320"], [74, "ot.backend.NumpyBackend.todense"]], "todense() (ot.backend.tensorflowbackend method)": [[74, "id401"], [74, "ot.backend.TensorflowBackend.todense"]], "todense() (ot.backend.torchbackend method)": [[74, "id482"], [74, "ot.backend.TorchBackend.todense"]], "trace() (ot.backend.backend method)": [[74, "id78"], [74, "ot.backend.Backend.trace"]], "trace() (ot.backend.cupybackend method)": [[74, "id159"], [74, "ot.backend.CupyBackend.trace"]], "trace() (ot.backend.jaxbackend method)": [[74, "id240"], [74, "ot.backend.JaxBackend.trace"]], "trace() (ot.backend.numpybackend method)": [[74, "id321"], [74, "ot.backend.NumpyBackend.trace"]], "trace() (ot.backend.tensorflowbackend method)": [[74, "id402"], [74, "ot.backend.TensorflowBackend.trace"]], "trace() (ot.backend.torchbackend method)": [[74, "id483"], [74, "ot.backend.TorchBackend.trace"]], "transpose() (ot.backend.backend method)": [[74, "id79"], [74, "ot.backend.Backend.transpose"]], "transpose() (ot.backend.cupybackend method)": [[74, "id160"], [74, "ot.backend.CupyBackend.transpose"]], "transpose() (ot.backend.jaxbackend method)": [[74, "id241"], [74, "ot.backend.JaxBackend.transpose"]], "transpose() (ot.backend.numpybackend method)": [[74, "id322"], [74, "ot.backend.NumpyBackend.transpose"]], "transpose() (ot.backend.tensorflowbackend method)": [[74, "id403"], [74, "ot.backend.TensorflowBackend.transpose"]], "transpose() (ot.backend.torchbackend method)": [[74, "id484"], [74, "ot.backend.TorchBackend.transpose"]], "unique() (ot.backend.backend method)": [[74, "id80"], [74, "ot.backend.Backend.unique"]], "unique() (ot.backend.cupybackend method)": [[74, "id161"], [74, "ot.backend.CupyBackend.unique"]], "unique() (ot.backend.jaxbackend method)": [[74, "id242"], [74, "ot.backend.JaxBackend.unique"]], "unique() (ot.backend.numpybackend method)": [[74, "id323"], [74, "ot.backend.NumpyBackend.unique"]], "unique() (ot.backend.tensorflowbackend method)": [[74, "id404"], [74, "ot.backend.TensorflowBackend.unique"]], "unique() (ot.backend.torchbackend method)": [[74, "id485"], [74, "ot.backend.TorchBackend.unique"]], "where() (ot.backend.backend method)": [[74, "id81"], [74, "ot.backend.Backend.where"]], "where() (ot.backend.cupybackend method)": [[74, "id162"], [74, "ot.backend.CupyBackend.where"]], "where() (ot.backend.jaxbackend method)": [[74, "id243"], [74, "ot.backend.JaxBackend.where"]], "where() (ot.backend.numpybackend method)": [[74, "id324"], [74, "ot.backend.NumpyBackend.where"]], "where() (ot.backend.tensorflowbackend method)": [[74, "id405"], [74, "ot.backend.TensorflowBackend.where"]], "where() (ot.backend.torchbackend method)": [[74, "id486"], [74, "ot.backend.TorchBackend.where"]], "zero_pad() (ot.backend.backend method)": [[74, "id82"], [74, "ot.backend.Backend.zero_pad"]], "zero_pad() (ot.backend.cupybackend method)": [[74, "id163"], [74, "ot.backend.CupyBackend.zero_pad"]], "zero_pad() (ot.backend.jaxbackend method)": [[74, "id244"], [74, "ot.backend.JaxBackend.zero_pad"]], "zero_pad() (ot.backend.numpybackend method)": [[74, "id325"], [74, "ot.backend.NumpyBackend.zero_pad"]], "zero_pad() (ot.backend.tensorflowbackend method)": [[74, "id406"], [74, "ot.backend.TensorflowBackend.zero_pad"]], "zero_pad() (ot.backend.torchbackend method)": [[74, "id487"], [74, "ot.backend.TorchBackend.zero_pad"]], "zeros() (ot.backend.backend method)": [[74, "id83"], [74, "ot.backend.Backend.zeros"]], "zeros() (ot.backend.cupybackend method)": [[74, "id164"], [74, "ot.backend.CupyBackend.zeros"]], "zeros() (ot.backend.jaxbackend method)": [[74, "id245"], [74, "ot.backend.JaxBackend.zeros"]], "zeros() (ot.backend.numpybackend method)": [[74, "id326"], [74, "ot.backend.NumpyBackend.zeros"]], "zeros() (ot.backend.tensorflowbackend method)": [[74, "id407"], [74, "ot.backend.TensorflowBackend.zeros"]], "zeros() (ot.backend.torchbackend method)": [[74, "id488"], [74, "ot.backend.TorchBackend.zeros"]], "barycenter() (in module ot.bregman)": [[75, "ot.bregman.barycenter"]], "barycenter_debiased() (in module ot.bregman)": [[75, "ot.bregman.barycenter_debiased"]], "barycenter_sinkhorn() (in module ot.bregman)": [[75, "ot.bregman.barycenter_sinkhorn"]], "barycenter_stabilized() (in module ot.bregman)": [[75, "ot.bregman.barycenter_stabilized"]], "convolutional_barycenter2d() (in module ot.bregman)": [[75, "ot.bregman.convolutional_barycenter2d"]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[75, "ot.bregman.convolutional_barycenter2d_debiased"]], "empirical_sinkhorn() (in module ot.bregman)": [[75, "ot.bregman.empirical_sinkhorn"]], "empirical_sinkhorn2() (in module ot.bregman)": [[75, "ot.bregman.empirical_sinkhorn2"]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[75, "ot.bregman.free_support_sinkhorn_barycenter"]], "geometricbar() (in module ot.bregman)": [[75, "ot.bregman.geometricBar"]], "geometricmean() (in module ot.bregman)": [[75, "ot.bregman.geometricMean"]], "greenkhorn() (in module ot.bregman)": [[75, "ot.bregman.greenkhorn"]], "jcpot_barycenter() (in module ot.bregman)": [[75, "ot.bregman.jcpot_barycenter"]], "ot.bregman": [[75, "module-ot.bregman"]], "projc() (in module ot.bregman)": [[75, "ot.bregman.projC"]], "projr() (in module ot.bregman)": [[75, "ot.bregman.projR"]], "screenkhorn() (in module ot.bregman)": [[75, "ot.bregman.screenkhorn"]], "sinkhorn() (in module ot.bregman)": [[75, "ot.bregman.sinkhorn"]], "sinkhorn2() (in module ot.bregman)": [[75, "ot.bregman.sinkhorn2"]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[75, "ot.bregman.sinkhorn_epsilon_scaling"]], "sinkhorn_knopp() (in module ot.bregman)": [[75, "ot.bregman.sinkhorn_knopp"]], "sinkhorn_log() (in module ot.bregman)": [[75, "ot.bregman.sinkhorn_log"]], "sinkhorn_stabilized() (in module ot.bregman)": [[75, "ot.bregman.sinkhorn_stabilized"]], "unmix() (in module ot.bregman)": [[75, "ot.bregman.unmix"]], "co_optimal_transport() (in module ot.coot)": [[76, "id0"], [76, "ot.coot.co_optimal_transport"]], "co_optimal_transport2() (in module ot.coot)": [[76, "id4"], [76, "ot.coot.co_optimal_transport2"]], "ot.coot": [[76, "module-ot.coot"]], "basetransport (class in ot.da)": [[77, "id0"], [77, "ot.da.BaseTransport"]], "emdlaplacetransport (class in ot.da)": [[77, "id46"], [77, "ot.da.EMDLaplaceTransport"]], "emdtransport (class in ot.da)": [[77, "id53"], [77, "ot.da.EMDTransport"]], "jcpottransport (class in ot.da)": [[77, "id59"], [77, "ot.da.JCPOTTransport"]], "lineargwtransport (class in ot.da)": [[77, "id72"], [77, "ot.da.LinearGWTransport"]], "lineartransport (class in ot.da)": [[77, "id76"], [77, "ot.da.LinearTransport"]], "mappingtransport (class in ot.da)": [[77, "id83"], [77, "ot.da.MappingTransport"]], "nearestbrenierpotential (class in ot.da)": [[77, "id90"], [77, "ot.da.NearestBrenierPotential"]], "sinkhornl1l2transport (class in ot.da)": [[77, "id98"], [77, "ot.da.SinkhornL1l2Transport"]], "sinkhornlpl1transport (class in ot.da)": [[77, "id106"], [77, "ot.da.SinkhornLpl1Transport"]], "sinkhorntransport (class in ot.da)": [[77, "id113"], [77, "ot.da.SinkhornTransport"]], "unbalancedsinkhorntransport (class in ot.da)": [[77, "id125"], [77, "ot.da.UnbalancedSinkhornTransport"]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[77, "id47"], [77, "ot.da.EMDLaplaceTransport.coupling_"]], "coupling_ (ot.da.emdtransport attribute)": [[77, "id54"], [77, "ot.da.EMDTransport.coupling_"]], "coupling_ (ot.da.jcpottransport attribute)": [[77, "id60"], [77, "ot.da.JCPOTTransport.coupling_"]], "coupling_ (ot.da.mappingtransport attribute)": [[77, "id84"], [77, "ot.da.MappingTransport.coupling_"]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[77, "id99"], [77, "ot.da.SinkhornL1l2Transport.coupling_"]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[77, "id107"], [77, "ot.da.SinkhornLpl1Transport.coupling_"]], "coupling_ (ot.da.sinkhorntransport attribute)": [[77, "id114"], [77, "ot.da.SinkhornTransport.coupling_"]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[77, "id126"], [77, "ot.da.UnbalancedSinkhornTransport.coupling_"]], "distribution_estimation_uniform() (in module ot.da)": [[77, "id132"], [77, "ot.da.distribution_estimation_uniform"]], "emd_laplace() (in module ot.da)": [[77, "id133"], [77, "ot.da.emd_laplace"]], "fit() (ot.da.basetransport method)": [[77, "id38"], [77, "ot.da.BaseTransport.fit"]], "fit() (ot.da.emdlaplacetransport method)": [[77, "id52"], [77, "ot.da.EMDLaplaceTransport.fit"]], "fit() (ot.da.emdtransport method)": [[77, "id58"], [77, "ot.da.EMDTransport.fit"]], "fit() (ot.da.jcpottransport method)": [[77, "id66"], [77, "ot.da.JCPOTTransport.fit"]], "fit() (ot.da.lineargwtransport method)": [[77, "id75"], [77, "ot.da.LinearGWTransport.fit"]], "fit() (ot.da.lineartransport method)": [[77, "id80"], [77, "ot.da.LinearTransport.fit"]], "fit() (ot.da.mappingtransport method)": [[77, "id88"], [77, "ot.da.MappingTransport.fit"]], "fit() (ot.da.nearestbrenierpotential method)": [[77, "id93"], [77, "ot.da.NearestBrenierPotential.fit"]], "fit() (ot.da.sinkhornl1l2transport method)": [[77, "id105"], [77, "ot.da.SinkhornL1l2Transport.fit"]], "fit() (ot.da.sinkhornlpl1transport method)": [[77, "id112"], [77, "ot.da.SinkhornLpl1Transport.fit"]], "fit() (ot.da.sinkhorntransport method)": [[77, "id122"], [77, "ot.da.SinkhornTransport.fit"]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[77, "id131"], [77, "ot.da.UnbalancedSinkhornTransport.fit"]], "fit_transform() (ot.da.basetransport method)": [[77, "id39"], [77, "ot.da.BaseTransport.fit_transform"]], "inverse_transform() (ot.da.basetransport method)": [[77, "id40"], [77, "ot.da.BaseTransport.inverse_transform"]], "inverse_transform() (ot.da.lineartransport method)": [[77, "id81"], [77, "ot.da.LinearTransport.inverse_transform"]], "inverse_transform() (ot.da.sinkhorntransport method)": [[77, "id123"], [77, "ot.da.SinkhornTransport.inverse_transform"]], "inverse_transform_labels() (ot.da.basetransport method)": [[77, "id41"], [77, "ot.da.BaseTransport.inverse_transform_labels"]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[77, "id67"], [77, "ot.da.JCPOTTransport.inverse_transform_labels"]], "log_ (ot.da.jcpottransport attribute)": [[77, "id62"], [77, "ot.da.JCPOTTransport.log_"]], "log_ (ot.da.mappingtransport attribute)": [[77, "id86"], [77, "ot.da.MappingTransport.log_"]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[77, "id100"], [77, "ot.da.SinkhornL1l2Transport.log_"]], "log_ (ot.da.sinkhorntransport attribute)": [[77, "id115"], [77, "ot.da.SinkhornTransport.log_"]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[77, "id127"], [77, "ot.da.UnbalancedSinkhornTransport.log_"]], "mapping_ (ot.da.mappingtransport attribute)": [[77, "id85"], [77, "ot.da.MappingTransport.mapping_"]], "ot.da": [[77, "module-ot.da"]], "proportions_ (ot.da.jcpottransport attribute)": [[77, "id61"], [77, "ot.da.JCPOTTransport.proportions_"]], "sinkhorn_l1l2_gl() (in module ot.da)": [[77, "id137"], [77, "ot.da.sinkhorn_l1l2_gl"]], "sinkhorn_lpl1_mm() (in module ot.da)": [[77, "id141"], [77, "ot.da.sinkhorn_lpl1_mm"]], "transform() (ot.da.basetransport method)": [[77, "id42"], [77, "ot.da.BaseTransport.transform"]], "transform() (ot.da.jcpottransport method)": [[77, "id68"], [77, "ot.da.JCPOTTransport.transform"]], "transform() (ot.da.lineartransport method)": [[77, "id82"], [77, "ot.da.LinearTransport.transform"]], "transform() (ot.da.mappingtransport method)": [[77, "id89"], [77, "ot.da.MappingTransport.transform"]], "transform() (ot.da.nearestbrenierpotential method)": [[77, "id95"], [77, "ot.da.NearestBrenierPotential.transform"]], "transform() (ot.da.sinkhorntransport method)": [[77, "id124"], [77, "ot.da.SinkhornTransport.transform"]], "transform_labels() (ot.da.basetransport method)": [[77, "id43"], [77, "ot.da.BaseTransport.transform_labels"]], "transform_labels() (ot.da.jcpottransport method)": [[77, "id69"], [77, "ot.da.JCPOTTransport.transform_labels"]], "make_1d_gauss() (in module ot.datasets)": [[78, "id0"], [78, "ot.datasets.make_1D_gauss"]], "make_2d_samples_gauss() (in module ot.datasets)": [[78, "id1"], [78, "ot.datasets.make_2D_samples_gauss"]], "make_data_classif() (in module ot.datasets)": [[78, "id2"], [78, "ot.datasets.make_data_classif"]], "ot.datasets": [[78, "module-ot.datasets"]], "dist() (in module ot.dr)": [[79, "id0"], [79, "ot.dr.dist"]], "ewca() (in module ot.dr)": [[79, "id4"], [79, "ot.dr.ewca"]], "fda() (in module ot.dr)": [[79, "id7"], [79, "ot.dr.fda"]], "logsumexp() (in module ot.dr)": [[79, "id8"], [79, "ot.dr.logsumexp"]], "ot.dr": [[79, "module-ot.dr"]], "projection_robust_wasserstein() (in module ot.dr)": [[79, "id9"], [79, "ot.dr.projection_robust_wasserstein"]], "sinkhorn() (in module ot.dr)": [[79, "id12"], [79, "ot.dr.sinkhorn"]], "sinkhorn_log() (in module ot.dr)": [[79, "id13"], [79, "ot.dr.sinkhorn_log"]], "split_classes() (in module ot.dr)": [[79, "id14"], [79, "ot.dr.split_classes"]], "wda() (in module ot.dr)": [[79, "id15"], [79, "ot.dr.wda"]], "factored_optimal_transport() (in module ot.factored)": [[80, "id0"], [80, "ot.factored.factored_optimal_transport"]], "ot.factored": [[80, "module-ot.factored"]], "bures_wasserstein_barycenter() (in module ot.gaussian)": [[81, "id0"], [81, "ot.gaussian.bures_wasserstein_barycenter"]], "bures_wasserstein_distance() (in module ot.gaussian)": [[81, "id18"], [81, "ot.gaussian.bures_wasserstein_distance"]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[81, "id21"], [81, "ot.gaussian.bures_wasserstein_mapping"]], "empirical_bures_wasserstein_barycenter() (in module ot.gaussian)": [[81, "id25"], [81, "ot.gaussian.empirical_bures_wasserstein_barycenter"]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[81, "id28"], [81, "ot.gaussian.empirical_bures_wasserstein_distance"]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[81, "id31"], [81, "ot.gaussian.empirical_bures_wasserstein_mapping"]], "empirical_gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[81, "id35"], [81, "ot.gaussian.empirical_gaussian_gromov_wasserstein_distance"]], "empirical_gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[81, "id38"], [81, "ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping"]], "gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[81, "id40"], [81, "ot.gaussian.gaussian_gromov_wasserstein_distance"]], "gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[81, "id43"], [81, "ot.gaussian.gaussian_gromov_wasserstein_mapping"]], "ot.gaussian": [[81, "module-ot.gaussian"]], "fgw_distance_to_templates() (in module ot.gnn)": [[82, "ot.gnn.FGW_distance_to_templates"]], "tfgwpooling (class in ot.gnn)": [[82, "ot.gnn.TFGWPooling"]], "twpooling (class in ot.gnn)": [[82, "ot.gnn.TWPooling"]], "forward() (ot.gnn.tfgwpooling method)": [[82, "ot.gnn.TFGWPooling.forward"]], "forward() (ot.gnn.twpooling method)": [[82, "ot.gnn.TWPooling.forward"]], "ot.gnn": [[82, "module-ot.gnn"]], "wasserstein_distance_to_templates() (in module ot.gnn)": [[82, "ot.gnn.wasserstein_distance_to_templates"]], "bapg_fused_gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.BAPG_fused_gromov_wasserstein"]], "bapg_fused_gromov_wasserstein2() (in module ot.gromov)": [[83, "ot.gromov.BAPG_fused_gromov_wasserstein2"]], "bapg_gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.BAPG_gromov_wasserstein"]], "bapg_gromov_wasserstein2() (in module ot.gromov)": [[83, "ot.gromov.BAPG_gromov_wasserstein2"]], "gw_distance_estimation() (in module ot.gromov)": [[83, "ot.gromov.GW_distance_estimation"]], "entropic_fused_gromov_barycenters() (in module ot.gromov)": [[83, "ot.gromov.entropic_fused_gromov_barycenters"]], "entropic_fused_gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.entropic_fused_gromov_wasserstein"]], "entropic_fused_gromov_wasserstein2() (in module ot.gromov)": [[83, "ot.gromov.entropic_fused_gromov_wasserstein2"]], "entropic_gromov_barycenters() (in module ot.gromov)": [[83, "ot.gromov.entropic_gromov_barycenters"]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.entropic_gromov_wasserstein"]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[83, "ot.gromov.entropic_gromov_wasserstein2"]], "entropic_semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein"]], "entropic_semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[83, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein2"]], "entropic_semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.entropic_semirelaxed_gromov_wasserstein"]], "entropic_semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[83, "ot.gromov.entropic_semirelaxed_gromov_wasserstein2"]], "fgw_barycenters() (in module ot.gromov)": [[83, "ot.gromov.fgw_barycenters"]], "fused_gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[83, "ot.gromov.fused_gromov_wasserstein2"]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[83, "ot.gromov.fused_gromov_wasserstein_dictionary_learning"]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[83, "ot.gromov.fused_gromov_wasserstein_linear_unmixing"]], "gromov_barycenters() (in module ot.gromov)": [[83, "ot.gromov.gromov_barycenters"]], "gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot.gromov)": [[83, "ot.gromov.gromov_wasserstein2"]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[83, "ot.gromov.gromov_wasserstein_dictionary_learning"]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[83, "ot.gromov.gromov_wasserstein_linear_unmixing"]], "gwggrad() (in module ot.gromov)": [[83, "ot.gromov.gwggrad"]], "gwloss() (in module ot.gromov)": [[83, "ot.gromov.gwloss"]], "init_matrix() (in module ot.gromov)": [[83, "ot.gromov.init_matrix"]], "init_matrix_semirelaxed() (in module ot.gromov)": [[83, "ot.gromov.init_matrix_semirelaxed"]], "ot.gromov": [[83, "module-ot.gromov"]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.pointwise_gromov_wasserstein"]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.sampled_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.semirelaxed_fused_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[83, "ot.gromov.semirelaxed_fused_gromov_wasserstein2"]], "semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[83, "ot.gromov.semirelaxed_gromov_wasserstein"]], "semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[83, "ot.gromov.semirelaxed_gromov_wasserstein2"]], "solve_gromov_linesearch() (in module ot.gromov)": [[83, "ot.gromov.solve_gromov_linesearch"]], "solve_semirelaxed_gromov_linesearch() (in module ot.gromov)": [[83, "ot.gromov.solve_semirelaxed_gromov_linesearch"]], "tensor_product() (in module ot.gromov)": [[83, "ot.gromov.tensor_product"]], "update_feature_matrix() (in module ot.gromov)": [[83, "ot.gromov.update_feature_matrix"]], "update_kl_loss() (in module ot.gromov)": [[83, "ot.gromov.update_kl_loss"]], "update_square_loss() (in module ot.gromov)": [[83, "ot.gromov.update_square_loss"]], "compute_lr_sqeuclidean_matrix() (in module ot.lowrank)": [[84, "id0"], [84, "ot.lowrank.compute_lr_sqeuclidean_matrix"]], "lowrank_sinkhorn() (in module ot.lowrank)": [[84, "id4"], [84, "ot.lowrank.lowrank_sinkhorn"]], "ot.lowrank": [[84, "module-ot.lowrank"]], "barycenter() (in module ot.lp)": [[85, "ot.lp.barycenter"]], "binary_search_circle() (in module ot.lp)": [[85, "ot.lp.binary_search_circle"]], "center_ot_dual() (in module ot.lp)": [[85, "ot.lp.center_ot_dual"]], "check_number_threads() (in module ot.lp)": [[85, "ot.lp.check_number_threads"]], "dmmot_monge_1dgrid_loss() (in module ot.lp)": [[85, "ot.lp.dmmot_monge_1dgrid_loss"]], "dmmot_monge_1dgrid_optimize() (in module ot.lp)": [[85, "ot.lp.dmmot_monge_1dgrid_optimize"]], "emd() (in module ot.lp)": [[85, "id0"], [85, "ot.lp.emd"]], "emd2() (in module ot.lp)": [[85, "id17"], [85, "ot.lp.emd2"]], "emd2_1d() (in module ot.lp)": [[85, "ot.lp.emd2_1d"]], "emd_1d() (in module ot.lp)": [[85, "ot.lp.emd_1d"]], "estimate_dual_null_weights() (in module ot.lp)": [[85, "ot.lp.estimate_dual_null_weights"]], "free_support_barycenter() (in module ot.lp)": [[85, "id24"], [85, "ot.lp.free_support_barycenter"]], "generalized_free_support_barycenter() (in module ot.lp)": [[85, "id28"], [85, "ot.lp.generalized_free_support_barycenter"]], "ot.lp": [[85, "module-ot.lp"]], "semidiscrete_wasserstein2_unif_circle() (in module ot.lp)": [[85, "ot.lp.semidiscrete_wasserstein2_unif_circle"]], "wasserstein_1d() (in module ot.lp)": [[85, "ot.lp.wasserstein_1d"]], "wasserstein_circle() (in module ot.lp)": [[85, "ot.lp.wasserstein_circle"]], "joint_ot_mapping_kernel() (in module ot.mapping)": [[86, "id0"], [86, "ot.mapping.joint_OT_mapping_kernel"]], "joint_ot_mapping_linear() (in module ot.mapping)": [[86, "id8"], [86, "ot.mapping.joint_OT_mapping_linear"]], "nearest_brenier_potential_fit() (in module ot.mapping)": [[86, "id11"], [86, "ot.mapping.nearest_brenier_potential_fit"]], "nearest_brenier_potential_predict_bounds() (in module ot.mapping)": [[86, "id13"], [86, "ot.mapping.nearest_brenier_potential_predict_bounds"]], "ot.mapping": [[86, "module-ot.mapping"]], "cg() (in module ot.optim)": [[87, "id0"], [87, "ot.optim.cg"]], "gcg() (in module ot.optim)": [[87, "id13"], [87, "ot.optim.gcg"]], "generic_conditional_gradient() (in module ot.optim)": [[87, "id17"], [87, "ot.optim.generic_conditional_gradient"]], "line_search_armijo() (in module ot.optim)": [[87, "id23"], [87, "ot.optim.line_search_armijo"]], "ot.optim": [[87, "module-ot.optim"]], "semirelaxed_cg() (in module ot.optim)": [[87, "id24"], [87, "ot.optim.semirelaxed_cg"]], "solve_1d_linesearch_quad() (in module ot.optim)": [[87, "id27"], [87, "ot.optim.solve_1d_linesearch_quad"]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[88, "id0"], [88, "ot.partial.entropic_partial_gromov_wasserstein"]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[88, "id17"], [88, "ot.partial.entropic_partial_gromov_wasserstein2"]], "entropic_partial_wasserstein() (in module ot.partial)": [[88, "id21"], [88, "ot.partial.entropic_partial_wasserstein"]], "gwgrad_partial() (in module ot.partial)": [[88, "id24"], [88, "ot.partial.gwgrad_partial"]], "gwloss_partial() (in module ot.partial)": [[88, "id27"], [88, "ot.partial.gwloss_partial"]], "ot.partial": [[88, "module-ot.partial"]], "partial_gromov_wasserstein() (in module ot.partial)": [[88, "id28"], [88, "ot.partial.partial_gromov_wasserstein"]], "partial_gromov_wasserstein2() (in module ot.partial)": [[88, "id31"], [88, "ot.partial.partial_gromov_wasserstein2"]], "partial_wasserstein() (in module ot.partial)": [[88, "id34"], [88, "ot.partial.partial_wasserstein"]], "partial_wasserstein2() (in module ot.partial)": [[88, "id37"], [88, "ot.partial.partial_wasserstein2"]], "partial_wasserstein_lagrange() (in module ot.partial)": [[88, "id40"], [88, "ot.partial.partial_wasserstein_lagrange"]], "ot.plot": [[89, "module-ot.plot"]], "plot1d_mat() (in module ot.plot)": [[89, "id0"], [89, "ot.plot.plot1D_mat"]], "plot2d_samples_mat() (in module ot.plot)": [[89, "id1"], [89, "ot.plot.plot2D_samples_mat"]], "complement_schur() (in module ot.regpath)": [[90, "id0"], [90, "ot.regpath.complement_schur"]], "compute_next_removal() (in module ot.regpath)": [[90, "id12"], [90, "ot.regpath.compute_next_removal"]], "compute_transport_plan() (in module ot.regpath)": [[90, "id15"], [90, "ot.regpath.compute_transport_plan"]], "construct_augmented_h() (in module ot.regpath)": [[90, "id18"], [90, "ot.regpath.construct_augmented_H"]], "fully_relaxed_path() (in module ot.regpath)": [[90, "id19"], [90, "ot.regpath.fully_relaxed_path"]], "ot.regpath": [[90, "module-ot.regpath"]], "ot_next_gamma() (in module ot.regpath)": [[90, "id21"], [90, "ot.regpath.ot_next_gamma"]], "recast_ot_as_lasso() (in module ot.regpath)": [[90, "id23"], [90, "ot.regpath.recast_ot_as_lasso"]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[90, "id25"], [90, "ot.regpath.recast_semi_relaxed_as_lasso"]], "regularization_path() (in module ot.regpath)": [[90, "id26"], [90, "ot.regpath.regularization_path"]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[90, "id28"], [90, "ot.regpath.semi_relaxed_next_gamma"]], "semi_relaxed_path() (in module ot.regpath)": [[90, "id30"], [90, "ot.regpath.semi_relaxed_path"]], "get_random_projections() (in module ot.sliced)": [[91, "id0"], [91, "ot.sliced.get_random_projections"]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[91, "id5"], [91, "ot.sliced.max_sliced_wasserstein_distance"]], "ot.sliced": [[91, "module-ot.sliced"]], "sliced_wasserstein_distance() (in module ot.sliced)": [[91, "id7"], [91, "ot.sliced.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[91, "id9"], [91, "ot.sliced.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[91, "id11"], [91, "ot.sliced.sliced_wasserstein_sphere_unif"]], "negentropy (class in ot.smooth)": [[92, "id0"], [92, "ot.smooth.NegEntropy"]], "omega() (ot.smooth.negentropy method)": [[92, "id7"], [92, "ot.smooth.NegEntropy.Omega"]], "omega() (ot.smooth.regularization method)": [[92, "id11"], [92, "ot.smooth.Regularization.Omega"]], "omega() (ot.smooth.sparsityconstrained method)": [[92, "id15"], [92, "ot.smooth.SparsityConstrained.Omega"]], "omega() (ot.smooth.squaredl2 method)": [[92, "id19"], [92, "ot.smooth.SquaredL2.Omega"]], "regularization (class in ot.smooth)": [[92, "id10"], [92, "ot.smooth.Regularization"]], "sparsityconstrained (class in ot.smooth)": [[92, "id14"], [92, "ot.smooth.SparsityConstrained"]], "squaredl2 (class in ot.smooth)": [[92, "id18"], [92, "ot.smooth.SquaredL2"]], "delta_omega() (ot.smooth.negentropy method)": [[92, "id8"], [92, "ot.smooth.NegEntropy.delta_Omega"]], "delta_omega() (ot.smooth.regularization method)": [[92, "id12"], [92, "ot.smooth.Regularization.delta_Omega"]], "delta_omega() (ot.smooth.sparsityconstrained method)": [[92, "id16"], [92, "ot.smooth.SparsityConstrained.delta_Omega"]], "delta_omega() (ot.smooth.squaredl2 method)": [[92, "id20"], [92, "ot.smooth.SquaredL2.delta_Omega"]], "dual_obj_grad() (in module ot.smooth)": [[92, "id22"], [92, "ot.smooth.dual_obj_grad"]], "get_plan_from_dual() (in module ot.smooth)": [[92, "id23"], [92, "ot.smooth.get_plan_from_dual"]], "get_plan_from_semi_dual() (in module ot.smooth)": [[92, "id24"], [92, "ot.smooth.get_plan_from_semi_dual"]], "max_omega() (ot.smooth.negentropy method)": [[92, "id9"], [92, "ot.smooth.NegEntropy.max_Omega"]], "max_omega() (ot.smooth.regularization method)": [[92, "id13"], [92, "ot.smooth.Regularization.max_Omega"]], "max_omega() (ot.smooth.sparsityconstrained method)": [[92, "id17"], [92, "ot.smooth.SparsityConstrained.max_Omega"]], "max_omega() (ot.smooth.squaredl2 method)": [[92, "id21"], [92, "ot.smooth.SquaredL2.max_Omega"]], "ot.smooth": [[92, "module-ot.smooth"]], "projection_simplex() (in module ot.smooth)": [[92, "id25"], [92, "ot.smooth.projection_simplex"]], "semi_dual_obj_grad() (in module ot.smooth)": [[92, "id26"], [92, "ot.smooth.semi_dual_obj_grad"]], "smooth_ot_dual() (in module ot.smooth)": [[92, "id27"], [92, "ot.smooth.smooth_ot_dual"]], "smooth_ot_semi_dual() (in module ot.smooth)": [[92, "id32"], [92, "ot.smooth.smooth_ot_semi_dual"]], "solve_dual() (in module ot.smooth)": [[92, "id37"], [92, "ot.smooth.solve_dual"]], "solve_semi_dual() (in module ot.smooth)": [[92, "id38"], [92, "ot.smooth.solve_semi_dual"]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[93, "id0"], [93, "ot.stochastic.averaged_sgd_entropic_transport"]], "batch_grad_dual() (in module ot.stochastic)": [[93, "id14"], [93, "ot.stochastic.batch_grad_dual"]], "c_transform_entropic() (in module ot.stochastic)": [[93, "id16"], [93, "ot.stochastic.c_transform_entropic"]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[93, "id18"], [93, "ot.stochastic.coordinate_grad_semi_dual"]], "loss_dual_entropic() (in module ot.stochastic)": [[93, "id20"], [93, "ot.stochastic.loss_dual_entropic"]], "loss_dual_quadratic() (in module ot.stochastic)": [[93, "id22"], [93, "ot.stochastic.loss_dual_quadratic"]], "ot.stochastic": [[93, "module-ot.stochastic"]], "plan_dual_entropic() (in module ot.stochastic)": [[93, "id24"], [93, "ot.stochastic.plan_dual_entropic"]], "plan_dual_quadratic() (in module ot.stochastic)": [[93, "id26"], [93, "ot.stochastic.plan_dual_quadratic"]], "sag_entropic_transport() (in module ot.stochastic)": [[93, "id28"], [93, "ot.stochastic.sag_entropic_transport"]], "sgd_entropic_regularization() (in module ot.stochastic)": [[93, "id30"], [93, "ot.stochastic.sgd_entropic_regularization"]], "solve_dual_entropic() (in module ot.stochastic)": [[93, "id32"], [93, "ot.stochastic.solve_dual_entropic"]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[93, "id34"], [93, "ot.stochastic.solve_semi_dual_entropic"]], "barycenter_unbalanced() (in module ot.unbalanced)": [[94, "id0"], [94, "ot.unbalanced.barycenter_unbalanced"]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[94, "id25"], [94, "ot.unbalanced.barycenter_unbalanced_sinkhorn"]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[94, "id29"], [94, "ot.unbalanced.barycenter_unbalanced_stabilized"]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[94, "id33"], [94, "ot.unbalanced.lbfgsb_unbalanced"]], "mm_unbalanced() (in module ot.unbalanced)": [[94, "id35"], [94, "ot.unbalanced.mm_unbalanced"]], "mm_unbalanced2() (in module ot.unbalanced)": [[94, "id38"], [94, "ot.unbalanced.mm_unbalanced2"]], "ot.unbalanced": [[94, "module-ot.unbalanced"]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[94, "id40"], [94, "ot.unbalanced.sinkhorn_knopp_unbalanced"]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[94, "id44"], [94, "ot.unbalanced.sinkhorn_stabilized_unbalanced"]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[94, "id48"], [94, "ot.unbalanced.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[94, "id54"], [94, "ot.unbalanced.sinkhorn_unbalanced2"]], "baseestimator (class in ot.utils)": [[95, "id12"], [95, "ot.utils.BaseEstimator"]], "lazytensor (class in ot.utils)": [[95, "id15"], [95, "ot.utils.LazyTensor"]], "otresult (class in ot.utils)": [[95, "id16"], [95, "ot.utils.OTResult"]], "undefinedparameter": [[95, "ot.utils.UndefinedParameter"]], "a_to_b (ot.utils.otresult property)": [[95, "id29"], [95, "ot.utils.OTResult.a_to_b"]], "b_to_a (ot.utils.otresult property)": [[95, "id30"], [95, "ot.utils.OTResult.b_to_a"]], "check_params() (in module ot.utils)": [[95, "id46"], [95, "ot.utils.check_params"]], "check_random_state() (in module ot.utils)": [[95, "id47"], [95, "ot.utils.check_random_state"]], "citation (ot.utils.otresult property)": [[95, "id31"], [95, "ot.utils.OTResult.citation"]], "clean_zeros() (in module ot.utils)": [[95, "id48"], [95, "ot.utils.clean_zeros"]], "cost_normalization() (in module ot.utils)": [[95, "id49"], [95, "ot.utils.cost_normalization"]], "deprecated (class in ot.utils)": [[95, "id50"], [95, "ot.utils.deprecated"]], "dist() (in module ot.utils)": [[95, "id51"], [95, "ot.utils.dist"]], "dist0() (in module ot.utils)": [[95, "id52"], [95, "ot.utils.dist0"]], "dots() (in module ot.utils)": [[95, "id53"], [95, "ot.utils.dots"]], "euclidean_distances() (in module ot.utils)": [[95, "id54"], [95, "ot.utils.euclidean_distances"]], "get_coordinate_circle() (in module ot.utils)": [[95, "id55"], [95, "ot.utils.get_coordinate_circle"]], "get_lowrank_lazytensor() (in module ot.utils)": [[95, "id56"], [95, "ot.utils.get_lowrank_lazytensor"]], "get_parameter_pair() (in module ot.utils)": [[95, "id57"], [95, "ot.utils.get_parameter_pair"]], "get_params() (ot.utils.baseestimator method)": [[95, "id13"], [95, "ot.utils.BaseEstimator.get_params"]], "is_all_finite() (in module ot.utils)": [[95, "id58"], [95, "ot.utils.is_all_finite"]], "kernel() (in module ot.utils)": [[95, "id59"], [95, "ot.utils.kernel"]], "label_normalization() (in module ot.utils)": [[95, "id60"], [95, "ot.utils.label_normalization"]], "labels_to_masks() (in module ot.utils)": [[95, "id61"], [95, "ot.utils.labels_to_masks"]], "laplacian() (in module ot.utils)": [[95, "id62"], [95, "ot.utils.laplacian"]], "lazy_plan (ot.utils.otresult attribute)": [[95, "id25"], [95, "ot.utils.OTResult.lazy_plan"]], "lazy_plan (ot.utils.otresult property)": [[95, "id0"], [95, "id32"]], "list_to_array() (in module ot.utils)": [[95, "id63"], [95, "ot.utils.list_to_array"]], "log (ot.utils.otresult property)": [[95, "id33"], [95, "ot.utils.OTResult.log"]], "marginal_a (ot.utils.otresult attribute)": [[95, "id27"], [95, "ot.utils.OTResult.marginal_a"]], "marginal_a (ot.utils.otresult property)": [[95, "id1"], [95, "id34"]], "marginal_b (ot.utils.otresult attribute)": [[95, "id28"], [95, "ot.utils.OTResult.marginal_b"]], "marginal_b (ot.utils.otresult property)": [[95, "id2"], [95, "id35"]], "marginals (ot.utils.otresult attribute)": [[95, "id26"], [95, "ot.utils.OTResult.marginals"]], "marginals (ot.utils.otresult property)": [[95, "id3"], [95, "id36"]], "ot.utils": [[95, "module-ot.utils"]], "parmap() (in module ot.utils)": [[95, "id64"], [95, "ot.utils.parmap"]], "plan (ot.utils.otresult attribute)": [[95, "id23"], [95, "ot.utils.OTResult.plan"]], "plan (ot.utils.otresult property)": [[95, "id37"], [95, "id4"]], "potential_a (ot.utils.otresult attribute)": [[95, "id18"], [95, "ot.utils.OTResult.potential_a"]], "potential_a (ot.utils.otresult property)": [[95, "id38"], [95, "id5"]], "potential_b (ot.utils.otresult attribute)": [[95, "id19"], [95, "ot.utils.OTResult.potential_b"]], "potential_b (ot.utils.otresult property)": [[95, "id39"], [95, "id6"]], "potentials (ot.utils.otresult attribute)": [[95, "id17"], [95, "ot.utils.OTResult.potentials"]], "potentials (ot.utils.otresult property)": [[95, "id40"], [95, "id7"]], "proj_simplex() (in module ot.utils)": [[95, "id65"], [95, "ot.utils.proj_simplex"]], "projection_sparse_simplex() (in module ot.utils)": [[95, "id66"], [95, "ot.utils.projection_sparse_simplex"]], "reduce_lazytensor() (in module ot.utils)": [[95, "id67"], [95, "ot.utils.reduce_lazytensor"]], "set_params() (ot.utils.baseestimator method)": [[95, "id14"], [95, "ot.utils.BaseEstimator.set_params"]], "sparse_plan (ot.utils.otresult attribute)": [[95, "id24"], [95, "ot.utils.OTResult.sparse_plan"]], "sparse_plan (ot.utils.otresult property)": [[95, "id41"], [95, "id8"]], "status (ot.utils.otresult property)": [[95, "id42"], [95, "ot.utils.OTResult.status"]], "tic() (in module ot.utils)": [[95, "id68"], [95, "ot.utils.tic"]], "toc() (in module ot.utils)": [[95, "id69"], [95, "ot.utils.toc"]], "toq() (in module ot.utils)": [[95, "id70"], [95, "ot.utils.toq"]], "unif() (in module ot.utils)": [[95, "id71"], [95, "ot.utils.unif"]], "value (ot.utils.otresult attribute)": [[95, "id20"], [95, "ot.utils.OTResult.value"]], "value (ot.utils.otresult property)": [[95, "id43"], [95, "id9"]], "value_linear (ot.utils.otresult attribute)": [[95, "id21"], [95, "ot.utils.OTResult.value_linear"]], "value_linear (ot.utils.otresult property)": [[95, "id10"], [95, "id44"]], "value_quad (ot.utils.otresult attribute)": [[95, "id22"], [95, "ot.utils.OTResult.value_quad"]], "value_quad (ot.utils.otresult property)": [[95, "id11"], [95, "id45"]], "ot.weak": [[96, "module-ot.weak"]], "weak_optimal_transport() (in module ot.weak)": [[96, "id0"], [96, "ot.weak.weak_optimal_transport"]]}})