Search.setIndex({"docnames": [".github/CODE_OF_CONDUCT", ".github/CONTRIBUTING", "all", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_logo", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_optim_OTreg", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gromov", "gen_modules/ot.lp", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "quickstart", "releases"], "filenames": [".github/CODE_OF_CONDUCT.rst", ".github/CONTRIBUTING.rst", "all.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "quickstart.rst", "releases.rst"], "titles": ["Code of Conduct", "Contributing to POT", "API and modules", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Plot Fused-gromov-Wasserstein", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Computation times", "Examples gallery", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Optimal transport with factored couplings", "Logo of the POT toolbox", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth optimal transport example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different gournd metrics", "OT distances in 1D", "Regularized OT with generic solver", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Contributors", "ot.backend", "ot.bregman", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gromov", "ot.lp", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Quick start guide", "Releases"], "terms": {"In": [0, 1, 2, 4, 5, 7, 8, 9, 33, 39, 43, 61, 64, 65, 67, 70, 72, 73, 78, 79, 80], "interest": [0, 79], "foster": [0, 79], "an": [0, 1, 2, 4, 8, 9, 20, 24, 26, 29, 32, 43, 60, 61, 62, 65, 66, 67, 68, 69, 71, 73, 74, 76, 80], "open": [0, 1, 59, 78, 79, 80], "welcom": [0, 78], "environ": 0, "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 27, 29, 30, 31, 33, 39, 43, 55, 56, 59, 60, 61, 67, 69, 71, 79, 80], "contributor": [0, 78, 80], "maintain": [0, 60, 78, 80], "make": [0, 1, 2, 43, 47, 53, 54, 60, 63, 67, 78, 79, 80], "particip": 0, "project": [0, 1, 2, 4, 5, 6, 7, 8, 11, 12, 16, 19, 21, 22, 23, 27, 29, 31, 32, 33, 40, 43, 46, 49, 54, 55, 59, 61, 64, 66, 67, 69, 72, 73, 75, 76, 78, 79, 80], "commun": [0, 33, 79], "harass": 0, "free": [0, 1, 18, 35, 59, 61, 67, 69, 78, 80], "experi": 0, "everyon": 0, "regardless": [0, 80], "ag": 0, "bodi": 0, "size": [0, 2, 7, 9, 16, 20, 26, 33, 43, 60, 61, 62, 63, 64, 66, 68, 71, 74, 76, 80], "disabl": 0, "ethnic": 0, "gender": 0, "ident": [0, 60, 62], "express": [0, 4, 7, 79], "level": [0, 61, 62, 63, 76, 79], "nation": 0, "person": [0, 59], "appear": [0, 61], "race": 0, "religion": 0, "sexual": 0, "orient": 0, "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 36, 37, 38, 39, 40, 42, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 56, 58, 60, 72, 80], "behavior": [0, 1, 80], "contribut": [0, 79, 80], "creat": [0, 1, 11, 12, 14, 29, 32, 54, 59, 60, 70, 78, 80], "posit": [0, 2, 4, 8, 11, 12, 14, 33, 40, 43, 44, 45, 48, 49, 53, 54, 60, 67, 68, 69, 70, 78, 79], "includ": [0, 1, 64, 76, 79, 80], "us": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 20, 25, 26, 27, 31, 32, 33, 34, 35, 36, 39, 41, 43, 44, 49, 53, 54, 55, 57, 60, 65, 72, 77, 80], "inclus": [0, 1], "languag": [0, 59, 79], "Being": 0, "respect": [0, 2, 7, 17, 33, 43, 60, 61, 62, 64, 66, 67, 75, 78, 79, 80], "differ": [0, 2, 4, 17, 32, 35, 43, 50, 61, 62, 67, 68, 70, 75, 78, 79, 80], "viewpoint": 0, "gracefulli": 0, "accept": [0, 1, 2, 43, 67, 76, 80], "construct": [0, 13, 32, 60, 62, 71], "critic": 0, "focus": 0, "what": [0, 1, 21, 27, 79], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 22, 27, 29, 30, 31, 32, 33, 35, 37, 39, 40, 41, 43, 46, 48, 51, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "best": [0, 1, 66, 79], "show": [0, 4, 8, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 67], "empathi": 0, "toward": 0, "other": [0, 1, 4, 7, 8, 36, 43, 66, 74, 76, 78, 80], "member": [0, 78], "unaccept": 0, "The": [0, 1, 2, 4, 8, 13, 27, 29, 31, 32, 33, 37, 43, 46, 55, 56, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80], "imageri": 0, "unwelcom": 0, "attent": 0, "advanc": [0, 2, 40, 41, 61, 62, 73, 74, 75, 78, 79], "troll": 0, "insult": 0, "derogatori": 0, "comment": 0, "polit": 0, "attack": 0, "public": [0, 1, 80], "privat": 0, "publish": 0, "inform": [0, 1, 2, 25, 26, 33, 40, 41, 61, 62, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 78, 79], "physic": 0, "electron": 0, "address": [0, 1, 79], "without": [0, 1, 60, 61, 66, 71, 78, 80], "explicit": [0, 21, 27, 62, 64, 70, 76], "permiss": 0, "which": [0, 2, 4, 29, 32, 43, 60, 61, 62, 65, 66, 67, 68, 70, 71, 77, 78, 79, 80], "could": [0, 80], "reason": [0, 2, 61, 79, 80], "consid": [0, 1, 2, 8, 27, 29, 33, 61, 67, 69, 76, 79], "inappropri": 0, "profession": 0, "set": [0, 2, 4, 9, 19, 21, 23, 28, 29, 32, 33, 35, 43, 60, 61, 62, 63, 66, 67, 71, 76, 78, 79], "ar": [0, 1, 2, 8, 13, 15, 21, 27, 29, 32, 33, 37, 41, 43, 46, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "clarifi": 0, "expect": [0, 1, 2, 9, 61, 76, 78, 79], "take": [0, 71, 74, 75, 79], "appropri": [0, 1, 76], "fair": [0, 67], "correct": [0, 1, 67, 78, 80], "action": [0, 80], "ani": [0, 1, 5, 9, 17, 56, 60, 68, 71, 76, 78, 79], "instanc": [0, 2, 6, 63, 66, 76, 79, 80], "have": [0, 1, 2, 9, 27, 33, 43, 60, 66, 67, 76, 79, 80], "right": [0, 1, 2, 7, 14, 15, 43, 53, 61, 62, 66, 72, 73, 74, 77, 80], "remov": [0, 55, 60, 67, 71, 76, 80], "edit": [0, 1], "reject": 0, "commit": [0, 1, 60, 80], "wiki": 0, "issu": [0, 1, 2, 61, 66, 68, 76, 78, 79], "align": [0, 62, 79], "thi": [0, 1, 2, 4, 5, 7, 8, 9, 11, 12, 13, 14, 17, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 43, 44, 45, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 67, 71, 72, 73, 74, 76, 77, 78, 79, 80], "ban": 0, "temporarili": 0, "perman": 0, "thei": [0, 2, 79, 80], "deem": 0, "threaten": 0, "offens": 0, "harm": 0, "appli": [0, 2, 25, 62, 76], "both": [0, 2, 4, 8, 25, 43, 56, 61, 67, 71, 79, 80], "within": [0, 8, 60, 66], "space": [0, 2, 17, 31, 32, 55, 60, 61, 66, 67, 69, 72, 78, 79, 80], "when": [0, 1, 2, 4, 32, 57, 61, 64, 66, 67, 68, 69, 71, 76, 78, 80], "individu": [0, 2], "repres": [0, 2, 21, 27, 29, 61, 66, 67, 79], "its": [0, 2, 3, 4, 6, 25, 33, 43, 60, 61, 68, 69, 72, 78, 79, 80], "offici": [0, 80], "e": [0, 2, 61, 66, 67, 72, 76, 78], "mail": [0, 1, 78], "post": 0, "via": [0, 2, 4, 5, 33, 61, 65, 66, 68, 78, 79], "social": 0, "media": 0, "account": [0, 1, 2, 66], "act": 0, "appoint": 0, "onlin": [0, 2, 4, 33, 43, 66, 78, 79], "offlin": 0, "event": 0, "represent": [0, 2, 33, 41, 74, 78, 79], "mai": [0, 1, 5, 67, 69, 71, 78, 79, 80], "further": [0, 1, 43], "defin": [0, 6, 9, 32, 41, 43, 60, 61, 62, 67, 71, 73, 79, 80], "abus": 0, "otherwis": [0, 2, 60, 66, 67, 76], "report": [0, 1, 78, 80], "contact": 0, "team": [0, 1, 80], "all": [0, 1, 2, 11, 12, 14, 27, 29, 32, 33, 35, 39, 43, 54, 60, 61, 62, 65, 66, 67, 71, 75, 76, 77, 78, 79, 80], "complaint": 0, "review": [0, 1], "investig": [0, 79], "result": [0, 1, 2, 4, 43, 60, 66, 67, 76, 79, 80], "necessari": [0, 1, 11, 12, 54, 55, 67, 68, 78, 80], "circumst": 0, "oblig": 0, "confidenti": 0, "regard": 0, "incid": 0, "detail": [0, 1, 2, 67, 79, 80], "specif": [0, 1, 2, 32, 61, 62, 66, 75, 79, 80], "polici": 0, "separ": [0, 79, 80], "who": [0, 80], "do": [0, 1, 2, 9, 21, 27, 31, 32, 43, 55, 60, 61, 67, 76, 79, 80], "follow": [0, 1, 2, 7, 8, 9, 12, 32, 43, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 78, 79, 80], "good": [0, 1, 43, 79], "faith": 0, "face": [0, 69], "temporari": 0, "repercuss": 0, "determin": [0, 61], "": [0, 1, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 19, 20, 21, 22, 23, 26, 27, 30, 32, 33, 40, 43, 44, 45, 48, 49, 53, 54, 56, 57, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80], "leadership": 0, "adapt": [0, 2, 27, 28, 49, 61, 62, 63, 66, 68, 70, 76, 78, 80], "from": [0, 1, 2, 4, 6, 7, 8, 9, 11, 12, 13, 14, 20, 22, 24, 26, 29, 30, 31, 32, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "coven": 0, "version": [0, 1, 2, 4, 32, 33, 60, 61, 71, 78, 79, 80], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25, 26, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 62, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79], "4": [0, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 56, 57, 61, 66, 69, 71, 74, 75, 78, 79], "avail": [0, 1, 2, 27, 60, 78, 79, 80], "http": [0, 6, 40, 43, 47, 60, 61, 73, 76, 78, 79, 80], "org": [0, 6, 40, 47, 60, 61, 73, 78, 79, 80], "first": [1, 2, 4, 5, 30, 33, 60, 61, 66, 67, 71, 73, 76, 78, 79], "off": [1, 2, 4, 13, 14, 20, 22, 24, 26, 33, 39, 49, 66], "thank": [1, 59, 71, 80], "you": [1, 2, 16, 19, 21, 22, 23, 27, 31, 32, 43, 46, 49, 60, 61, 64, 70, 78, 79, 80], "prefer": [1, 2], "workflow": 1, "fork": 1, "main": [1, 21, 67, 79, 80], "repositori": [1, 80], "github": [1, 43, 60, 73, 76, 78, 79, 80], "clone": [1, 4, 5, 8, 60], "develop": [1, 78, 79, 80], "branch": [1, 80], "step": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 29, 60, 61, 66, 68], "click": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57], "button": 1, "top": [1, 14, 66, 70], "page": [1, 78, 80], "copi": [1, 2, 8, 11, 54, 60, 65, 66, 67, 77, 79], "code": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 61, 63, 67, 73, 76, 79, 80], "under": [1, 61, 62, 78], "your": [1, 78, 79], "user": [1, 2, 49, 66, 78, 79, 80], "For": [1, 2, 27, 31, 33, 41, 43, 55, 61, 68, 71, 74, 79, 80], "more": [1, 2, 43, 61, 67, 79, 80], "see": [1, 2, 4, 6, 9, 43, 60, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 79, 80], "guid": [1, 78, 80], "repo": [1, 80], "local": [1, 4, 32, 33, 79], "disk": 1, "git": 1, "com": [1, 14, 19, 20, 21, 25, 26, 27, 31, 32, 40, 41, 60, 73, 76, 78, 80], "yourlogin": 1, "cd": 1, "featur": [1, 2, 29, 61, 66, 68, 78], "hold": 1, "chang": [1, 3, 4, 6, 25, 32, 33, 60, 61, 67, 79, 80], "checkout": 1, "b": [1, 2, 7, 8, 12, 15, 16, 22, 24, 27, 30, 31, 32, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "my": 1, "alwai": [1, 43, 62, 79, 80], "It": [1, 2, 4, 12, 19, 21, 22, 25, 26, 27, 30, 31, 44, 45, 49, 55, 66, 67, 74, 78, 79, 80], "practic": [1, 2, 9, 61, 64, 79], "never": [1, 80], "work": [1, 2, 13, 43, 60, 61, 65, 66, 67, 68, 76, 77, 80], "master": [1, 76, 78, 80], "add": [1, 33, 55, 67, 69, 76, 80], "modified_fil": 1, "record": [1, 2, 8, 61, 62, 65, 66, 67, 68, 69, 73, 74, 75, 77], "push": [1, 79, 80], "u": [1, 2, 3, 4, 5, 6, 7, 15, 16, 43, 54, 61, 64, 69, 72, 74, 75, 78, 79, 80], "origin": [1, 2, 4, 25, 29, 59, 67, 73, 79, 80], "instruct": 1, "send": [1, 17], "email": 1, "committ": 1, "If": [1, 2, 32, 61, 62, 63, 64, 65, 66, 67, 68, 73, 75, 76, 77, 78, 79, 80], "abov": [1, 66, 70, 71, 79, 80], "seem": 1, "like": [1, 2, 4, 43, 59, 61, 62, 65, 66, 67, 68, 74, 75, 76, 77, 80], "magic": 1, "pleas": [1, 2, 60, 67, 78], "look": [1, 71], "up": [1, 4, 80], "web": 1, "ask": [1, 78, 80], "friend": 1, "anoth": [1, 62, 67, 79], "help": [1, 32, 67, 79, 80], "recommend": [1, 2, 61, 79, 80], "compli": 1, "rule": [1, 68], "befor": [1, 2, 62, 67, 80], "submit": 1, "pep8": [1, 80], "guidelin": [1, 78], "titl": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 36, 37, 38, 43, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 70, 78], "describ": [1, 43, 61, 66], "mention": 1, "number": [1, 2, 3, 6, 7, 9, 15, 16, 17, 19, 21, 22, 23, 27, 29, 30, 31, 32, 33, 40, 43, 46, 49, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "descript": 1, "sure": [1, 2, 67, 78], "link": [1, 4, 78, 80], "back": [1, 20, 24, 26], "method": [1, 2, 8, 14, 29, 41, 61, 62, 64, 66, 67, 68, 73, 74, 75, 76, 78, 79, 80], "should": [1, 2, 27, 57, 60, 61, 62, 64, 66, 67, 71, 73, 76, 78, 79, 80], "docstr": [1, 76, 80], "sampl": [1, 2, 3, 7, 20, 26, 33, 36, 37, 38, 39, 41, 43, 46, 51, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80], "usag": 1, "present": [1, 20, 25, 27, 56, 66], "doctest": [1, 80], "prefix": 1, "mrg": 1, "readi": 1, "merg": [1, 80], "complet": [1, 79, 80], "two": [1, 2, 4, 5, 20, 22, 30, 41, 43, 48, 60, 61, 62, 65, 66, 67, 71, 75, 77, 78, 79, 80], "core": [1, 80], "2": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "approv": 1, "elig": 1, "incomplet": [1, 80], "where": [1, 2, 7, 8, 29, 33, 41, 43, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77, 79, 80], "receiv": [1, 4], "full": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 74, 76, 78, 80], "wip": 1, "indic": [1, 29, 60, 71], "progress": 1, "matur": 1, "someth": [1, 43], "avoid": [1, 2, 60, 61, 62, 64, 69, 79], "duplic": 1, "broad": 1, "function": [1, 2, 8, 12, 13, 32, 43, 56, 78, 79, 80], "api": [1, 60, 78, 79, 80], "seek": [1, 79], "collabor": 1, "often": [1, 79], "benefit": [1, 59, 78], "task": 1, "list": [1, 2, 6, 11, 29, 32, 54, 60, 61, 62, 65, 66, 67, 71, 74, 76, 77, 78, 80], "pr": [1, 60, 80], "ad": [1, 29, 60, 62, 67, 69, 71, 76, 79, 80], "addit": [1, 2, 67, 71, 78, 79], "provid": [1, 2, 4, 33, 43, 59, 60, 61, 62, 66, 67, 71, 78, 79, 80], "least": [1, 2, 62], "one": [1, 3, 5, 6, 8, 20, 24, 25, 26, 29, 32, 33, 41, 43, 60, 61, 62, 63, 67, 71, 79, 80], "script": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 80], "folder": [1, 78, 80], "refer": [1, 2, 8, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 77], "demonstr": [1, 31, 55, 80], "why": [1, 2, 61, 80], "possibl": [1, 2, 62, 67, 76, 79, 80], "compar": [1, 43, 79], "high": [1, 33], "coverag": [1, 80], "test": [1, 29, 36, 60, 78, 80], "enhanc": 1, "fix": [1, 2, 33, 61, 64, 66, 67, 69, 73, 78, 80], "non": [1, 54, 56, 59, 60, 61, 67, 68, 71, 73, 75, 78, 79, 80], "regress": [1, 56, 71, 75, 78], "These": 1, "verifi": 1, "manner": 1, "modif": 1, "base": [1, 2, 61, 62, 66, 73, 76, 79, 80], "grant": 1, "consist": [1, 32, 60, 61, 62, 67, 79], "desir": [1, 61, 66, 67, 76], "case": [1, 2, 27, 43, 56, 60, 67, 71, 72, 78], "time": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 61, 62, 66, 74, 76, 78, 79, 80], "fail": [1, 67, 79, 80], "pass": [1, 2, 66, 69, 73, 76], "At": [1, 79], "paragraph": 1, "narr": 1, "literatur": [1, 79], "pdf": [1, 47, 79], "can": [1, 2, 4, 7, 43, 57, 61, 62, 64, 65, 66, 67, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80], "also": [1, 2, 4, 43, 60, 61, 62, 66, 76, 78, 79, 80], "check": [1, 2, 60, 61, 67, 76, 79, 80], "common": [1, 79], "program": [1, 61, 67, 78, 79, 80], "error": [1, 2, 8, 16, 29, 33, 54, 60, 61, 62, 64, 66, 67, 69, 73, 75, 78, 79, 80], "tool": [1, 79], "No": [1, 2, 4, 33, 67, 78, 79], "pyflak": 1, "warn": [1, 2, 4, 16, 19, 21, 22, 23, 27, 31, 32, 33, 40, 43, 46, 49, 54, 61, 62, 76, 80], "pip": [1, 43, 79, 80], "instal": [1, 40, 61, 79, 80], "path": [1, 12, 13, 14, 20, 24, 26, 32, 35, 58, 63, 71, 78, 80], "modul": [1, 6, 9, 40, 43, 61, 64, 70, 78, 80], "py": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 76, 80], "autopep8": 1, "some": [1, 21, 27, 55, 59, 62, 67, 69, 76, 78, 79, 80], "easi": [1, 78, 79], "redund": 1, "bonu": 1, "point": [1, 2, 12, 16, 17, 30, 32, 39, 40, 41, 61, 64, 67, 69, 76, 78, 79, 80], "perform": [1, 2, 4, 5, 8, 40, 66, 67, 76, 79, 80], "analysi": [1, 2, 35, 42, 49, 61, 62, 64, 67, 68, 77, 78, 80], "benchmark": [1, 60, 80], "profil": 1, "output": [1, 2, 6, 9, 32, 61, 76, 78, 79, 80], "track": [1, 66, 80], "feel": 1, "found": [1, 2, 29, 66, 68, 79], "wish": 1, "implement": [1, 2, 6, 43, 59, 60, 61, 64, 67, 73, 76, 79, 80], "being": [1, 2, 43, 62, 79, 80], "current": [1, 12, 19, 62, 66, 71, 73, 79, 80], "ensur": [1, 8, 67, 79], "snippet": 1, "messag": [1, 2, 61, 76, 80], "format": [1, 2, 3, 4, 5, 6, 9, 22, 43, 56, 60, 67, 76, 78, 80], "block": [1, 2, 4, 27, 61, 62, 64, 66, 78, 79], "highlight": [1, 80], "oper": [1, 62, 64, 79], "system": [1, 2, 25, 26, 40, 41, 60, 61, 62, 73, 74, 75, 78, 79], "type": [1, 2, 60, 61, 62, 63, 66, 67, 68, 69, 71, 72, 73, 74, 76, 79, 80], "well": [1, 60, 76, 79], "python": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 60, 76, 79, 80], "numpi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 64, 67, 69, 71, 72, 75, 76, 78, 79, 80], "scipi": [1, 2, 29, 31, 32, 43, 55, 60, 69, 73, 75, 76, 78, 79, 80], "run": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 78, 80], "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 62, 64, 67, 69, 70, 71, 74, 75, 76, 78, 79, 80], "platform": [1, 80], "print": [1, 2, 3, 4, 6, 7, 9, 31, 33, 41, 43, 55, 61, 62, 64, 65, 66, 67, 68, 69, 73, 75, 77, 80], "sy": [1, 39], "__version__": 1, "ot": [1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 46, 50, 51, 53, 54, 55, 56, 57, 59, 78, 80], "about": [1, 61, 79, 80], "estim": [1, 10, 22, 28, 31, 35, 41, 59, 61, 62, 63, 66, 67, 74, 76, 78, 80], "involv": [1, 27], "shape": [1, 2, 4, 5, 8, 11, 12, 14, 15, 17, 20, 22, 24, 26, 27, 29, 30, 32, 33, 36, 39, 43, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79], "data": [1, 2, 4, 5, 8, 14, 33, 43, 47, 60, 61, 62, 66, 67, 68, 78, 79, 80], "reproduc": [1, 2, 12, 66, 79], "gist": 1, "except": 1, "rais": [1, 2, 60, 61, 67, 69, 76, 80], "traceback": 1, "A": [1, 2, 5, 11, 12, 13, 14, 17, 24, 25, 26, 27, 29, 36, 40, 41, 43, 49, 54, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80], "great": 1, "wai": [1, 2, 20, 79], "start": [1, 2, 33, 43, 60, 61, 64, 71, 76, 78, 80], "pick": [1, 74], "item": [1, 29], "tracker": 1, "resolv": 1, "allow": [1, 4, 7, 31, 32, 55, 69, 79, 80], "much": [1, 43, 61], "prior": [1, 2, 61, 79], "knowledg": [1, 79], "assist": 1, "area": [1, 79], "greatli": [1, 79, 80], "appreci": 1, "experienc": 1, "concentr": 1, "glad": 1, "sort": [1, 2, 60, 79], "restructuredtext": 1, "tutori": [1, 6, 79], "etc": 1, "live": [1, 17, 33, 67, 78], "sourc": [1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "doc": [1, 9, 60, 80], "directori": 1, "text": [1, 3, 6, 7, 9, 15, 20, 22, 24, 25, 37, 38, 43, 46, 49, 51, 53, 61, 67, 71, 76, 79], "editor": 1, "gener": [1, 2, 5, 8, 12, 13, 14, 18, 31, 32, 35, 39, 41, 43, 47, 50, 55, 59, 60, 61, 62, 63, 65, 67, 68, 70, 72, 73, 75, 76, 77, 78, 80], "html": [1, 6, 43, 60, 78], "altern": [1, 43, 62, 79], "quickli": [1, 43], "galleri": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 78, 80], "noplot": 1, "place": [1, 80], "build": [1, 2, 9, 29, 62, 78, 79, 80], "viewabl": 1, "browser": 1, "need": [1, 2, 43, 55, 61, 64, 67, 70, 79, 80], "sphinx": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 80], "matplotlib": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 80], "pillow": 1, "write": [1, 60], "keep": [1, 40, 79, 80], "compromis": 1, "between": [1, 2, 4, 5, 7, 16, 17, 20, 29, 32, 33, 35, 37, 38, 39, 43, 50, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 80], "mathemat": [1, 2, 5, 51, 61, 66, 67, 69, 72, 78, 79, 80], "algorithm": [1, 2, 16, 32, 40, 54, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 77, 78, 79, 80], "give": [1, 21, 27, 43, 57, 60, 66, 71, 80], "intuit": 1, "reader": [1, 79], "doe": [1, 6, 43, 60, 66, 79, 80], "small": [1, 2, 4, 8, 43, 61, 64, 66, 67, 78, 79, 80], "hand": 1, "wave": 1, "explan": 1, "figur": [1, 3, 4, 5, 6, 7, 8, 9, 11, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57], "come": [1, 29, 79, 80], "illustr": [1, 8, 11, 12, 13, 14, 15, 16, 17, 29, 30, 33, 36, 37, 38, 40, 43, 44, 45, 46, 49, 51, 53, 54, 56, 80], "strongli": [1, 2, 61, 79, 80], "inpir": 1, "scikit": [1, 76, 79, 80], "learn": [1, 2, 4, 5, 7, 9, 14, 25, 29, 30, 34, 35, 41, 59, 61, 62, 66, 67, 68, 69, 74, 75, 76, 78, 79, 80], "automat": [2, 7, 8, 67, 79, 80], "sub": [2, 71, 78, 79], "lp": [2, 8, 15, 17, 18, 35, 61, 62, 63, 68, 73, 75, 76, 78, 79, 80], "bregman": [2, 11, 12, 13, 14, 15, 16, 19, 21, 22, 23, 27, 31, 40, 43, 46, 49, 62, 65, 67, 68, 69, 75, 77, 78, 80], "optim": [2, 3, 5, 6, 9, 10, 12, 15, 20, 25, 26, 29, 30, 35, 41, 42, 49, 50, 58, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 80], "util": [2, 4, 7, 8, 11, 12, 14, 41, 43, 54, 60, 62, 74, 79], "dataset": [2, 3, 8, 9, 11, 12, 14, 19, 21, 22, 23, 25, 27, 29, 31, 36, 37, 40, 44, 45, 46, 48, 49, 51, 53, 54, 55, 56, 57, 64, 66, 74, 79, 80], "gromov": [2, 10, 29, 34, 58, 59, 63, 68, 69, 76, 78, 80], "smooth": [2, 12, 35, 50, 59, 63, 70, 78, 79, 80], "stochast": [2, 3, 4, 6, 35, 42, 59, 61, 66, 70, 78, 79, 80], "partial": [2, 57, 58, 59, 63, 74, 78, 80], "regpath": 2, "unbalanc": [2, 55, 58, 59, 61, 62, 63, 69, 70, 71, 76, 78, 80], "due": [2, 62, 79, 80], "depend": [2, 33, 60, 66, 79, 80], "dr": [2, 36, 78, 79], "pymanopt": [2, 64, 78, 79], "autograd": [2, 64, 78, 79, 80], "gpu": [2, 59, 60, 61, 65, 66, 67, 77, 80], "cupi": [2, 60, 78, 79, 80], "cuda": [2, 5, 8, 59, 80], "plot": [2, 4, 8, 11, 12, 14, 33, 34, 35, 49, 66, 79, 80], "barycent": [2, 10, 18, 34, 51, 58, 59, 61, 62, 63, 66, 67, 72, 75, 76, 78, 80], "m": [2, 4, 7, 8, 9, 11, 12, 14, 21, 22, 25, 26, 30, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80], "reg": [2, 3, 6, 11, 12, 13, 14, 16, 19, 20, 21, 22, 23, 27, 31, 33, 36, 41, 43, 45, 46, 48, 49, 54, 55, 56, 57, 61, 62, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 78, 79], "weight": [2, 11, 12, 13, 14, 15, 16, 17, 33, 37, 43, 46, 54, 56, 61, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80], "none": [2, 4, 6, 14, 16, 29, 30, 33, 43, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80], "sinkhorn": [2, 9, 15, 18, 19, 21, 23, 27, 31, 35, 40, 49, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 75, 76, 77, 78, 80], "numitermax": [2, 15, 16, 19, 21, 22, 23, 27, 31, 41, 43, 46, 49, 61, 62, 65, 67, 68, 69, 73, 74, 75, 77], "10000": [2, 6, 60, 61, 74], "stopthr": [2, 61, 62, 64, 65, 67, 68, 69, 73, 75, 77], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79], "0001": [2, 61, 68, 71], "verbos": [2, 12, 19, 22, 25, 26, 30, 31, 33, 40, 44, 45, 49, 53, 55, 61, 62, 64, 65, 66, 67, 68, 69, 73, 75, 77], "fals": [2, 14, 26, 29, 33, 40, 56, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77], "log": [2, 14, 22, 29, 30, 31, 33, 41, 49, 51, 55, 60, 61, 62, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80], "true": [2, 3, 4, 5, 7, 8, 9, 11, 12, 14, 17, 19, 22, 25, 26, 29, 30, 31, 33, 36, 39, 40, 41, 43, 44, 45, 49, 53, 55, 56, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80], "kwarg": [2, 61, 62, 63, 65, 66, 68, 69, 70, 75, 76, 77], "comput": [2, 4, 7, 8, 9, 12, 33, 40, 44, 45, 51, 53, 60, 61, 62, 64, 66, 67, 69, 71, 72, 73, 74, 75, 76, 78, 80], "entrop": [2, 10, 16, 18, 31, 35, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 80], "regular": [2, 10, 11, 13, 16, 18, 19, 20, 21, 22, 26, 27, 28, 31, 33, 40, 46, 50, 54, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80], "wasserstein": [2, 10, 18, 34, 42, 52, 58, 59, 61, 62, 63, 64, 66, 67, 69, 72, 75, 76, 78, 80], "distribut": [2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 18, 25, 28, 30, 32, 35, 37, 38, 43, 47, 48, 49, 50, 52, 56, 57, 58, 61, 62, 63, 65, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 80], "mathbf": [2, 7, 33, 43, 57, 61, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77], "solv": [2, 4, 21, 27, 39, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 80], "problem": [2, 7, 8, 9, 11, 12, 21, 22, 27, 39, 54, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80], "mathop": [2, 61, 62, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77], "arg": [2, 60, 61, 62, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 79], "min": [2, 33, 36, 43, 60, 61, 62, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 79], "_": [2, 25, 33, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79], "quad": [2, 7, 61, 62, 64, 65, 66, 67, 68, 69, 73, 74, 75, 77, 79], "sum_i": [2, 30, 60, 61, 67, 73, 74, 75, 77, 79], "w_": [2, 33, 61, 66, 75], "_i": [2, 61, 64, 67, 71, 73, 74, 75, 76, 77], "cdot": [2, 57, 61, 62, 64, 67, 68, 69, 74, 75, 79], "distanc": [2, 5, 9, 10, 29, 32, 33, 43, 50, 52, 59, 61, 62, 63, 64, 66, 67, 69, 72, 73, 75, 76, 78, 80], "sinkhorn_stabil": [2, 61, 62, 75, 79], "sinkhorn_log": [2, 61, 64, 79, 80], "train": [2, 20, 26, 36, 61, 62, 63, 64, 75, 79, 80], "column": [2, 7, 61, 67, 71, 73, 75], "matrix": [2, 4, 7, 9, 11, 12, 14, 20, 24, 26, 29, 32, 33, 37, 46, 47, 48, 49, 54, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "term": [2, 9, 46, 49, 61, 62, 64, 66, 68, 69, 73, 74, 75, 76, 79, 80], "cost": [2, 21, 27, 36, 37, 40, 41, 44, 45, 46, 47, 53, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "knopp": [2, 59, 60, 61, 75, 78, 79, 80], "scale": [2, 32, 39, 41, 54, 61, 62, 73, 74, 75, 78, 79, 80], "propos": [2, 7, 9, 11, 12, 14, 17, 36, 49, 51, 54, 61, 62, 65, 66, 67, 69, 74, 75, 77, 79, 80], "3": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 61, 62, 68, 69, 71, 74, 75, 78, 79], "paramet": [2, 4, 6, 7, 8, 9, 12, 13, 19, 21, 22, 23, 27, 29, 31, 32, 33, 38, 40, 46, 49, 53, 54, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "arrai": [2, 4, 7, 8, 11, 12, 13, 14, 16, 17, 22, 24, 29, 31, 32, 33, 37, 39, 43, 46, 51, 54, 55, 56, 57, 60, 61, 62, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80], "dim": [2, 32, 61, 72, 75], "n_hist": [2, 61, 75], "loss": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 19, 25, 26, 30, 33, 37, 46, 47, 49, 54, 55, 56, 57, 61, 62, 66, 67, 68, 69, 73, 74, 75, 76, 78, 79, 80], "float": [2, 3, 6, 7, 8, 9, 13, 29, 32, 43, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "str": [2, 31, 33, 43, 55, 57, 61, 62, 63, 64, 66, 67, 73, 74, 75, 76], "option": [2, 43, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80], "solver": [2, 10, 12, 35, 39, 44, 50, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80], "either": [2, 25, 57, 61, 62, 64, 66, 67, 75], "each": [2, 7, 9, 29, 33, 43, 61, 62, 66, 67, 73, 74, 75, 76, 78, 79, 80], "histogram": [2, 61, 63, 65, 67, 69, 71, 73, 75, 76, 77, 78, 79, 80], "simplex": [2, 4, 7, 8, 33, 61, 67, 73, 76, 78, 79], "barycentr": [2, 11, 25, 61, 62, 75, 79], "coodin": [2, 61, 75], "int": [2, 4, 32, 33, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79], "max": [2, 11, 12, 14, 31, 32, 33, 37, 40, 43, 44, 45, 47, 48, 49, 53, 54, 56, 57, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "iter": [2, 3, 4, 6, 7, 8, 11, 12, 16, 19, 21, 22, 23, 27, 31, 32, 36, 43, 46, 49, 54, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 77, 78, 79, 80], "stop": [2, 60, 61, 62, 64, 65, 66, 67, 68, 69, 73, 75, 77], "threshold": [2, 29, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 73, 75, 77, 79], "bool": [2, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77], "along": [2, 4, 7, 8, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 75, 77], "doesn": [2, 61], "t": [2, 7, 8, 11, 12, 14, 32, 33, 36, 39, 43, 54, 56, 57, 61, 62, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "converg": [2, 4, 16, 19, 21, 22, 23, 27, 31, 32, 43, 46, 49, 61, 62, 66, 67, 68, 78, 79, 80], "return": [2, 4, 5, 6, 7, 9, 17, 20, 24, 26, 29, 31, 32, 43, 49, 56, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "dict": [2, 33, 61, 62, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77], "dictionari": [2, 4, 34, 35, 59, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 75, 77, 78, 79, 80], "onli": [2, 7, 15, 30, 43, 60, 61, 62, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80], "benam": [2, 11, 12, 61, 69, 75, 78, 79], "j": [2, 4, 11, 12, 13, 17, 20, 22, 26, 30, 32, 33, 39, 43, 49, 56, 57, 61, 62, 64, 65, 66, 67, 68, 69, 71, 73, 74, 75, 78, 79], "d": [2, 11, 12, 15, 16, 24, 29, 33, 43, 49, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79], "carlier": [2, 11, 12, 61, 69, 75, 78, 79], "g": [2, 9, 11, 12, 20, 22, 26, 29, 30, 33, 40, 41, 43, 44, 45, 46, 49, 53, 54, 56, 61, 62, 65, 68, 69, 70, 71, 72, 73, 74, 75, 78], "cuturi": [2, 9, 11, 12, 14, 36, 41, 59, 61, 62, 64, 66, 67, 69, 73, 74, 75, 78, 79], "nenna": [2, 11, 12, 61, 69, 75, 78, 79], "l": [2, 9, 11, 12, 14, 30, 54, 56, 61, 62, 64, 66, 67, 69, 71, 73, 75, 78, 79], "peyr\u00e9": [2, 9, 11, 12, 41, 49, 54, 59, 61, 62, 66, 68, 69, 74, 75, 78, 79], "2015": [2, 5, 11, 12, 49, 51, 61, 62, 68, 69, 72, 75, 78, 79], "transport": [2, 5, 6, 11, 12, 26, 29, 35, 42, 49, 50, 54, 55, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80], "siam": [2, 11, 12, 20, 26, 49, 61, 62, 68, 69, 75, 78, 79], "journal": [2, 5, 11, 12, 20, 26, 49, 51, 61, 62, 66, 67, 68, 69, 72, 75, 77, 78, 79, 80], "scientif": [2, 11, 12, 61, 69, 75, 78, 79, 80], "37": [2, 6, 10, 11, 12, 14, 36, 49, 61, 69, 75, 78, 79, 80], "a1111": [2, 11, 12, 61, 69, 75, 78, 79], "a1138": [2, 11, 12, 61, 69, 75, 78, 79], "barycenter_unbalanc": [2, 54, 75, 79], "reg_m": [2, 57, 62, 69, 75, 79], "1000": [2, 6, 9, 15, 22, 24, 36, 41, 60, 61, 62, 66, 69, 75], "1e": [2, 4, 8, 9, 11, 12, 14, 16, 19, 20, 21, 22, 25, 26, 27, 30, 32, 39, 43, 44, 45, 46, 48, 49, 54, 56, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 75], "06": [2, 12, 25, 36, 41, 44, 45, 49, 61, 62, 69, 74, 75], "u_": [2, 75], "sinkhorn_unbalanc": [2, 53, 57, 75, 79], "reg_mi": [2, 75], "margin": [2, 56, 61, 66, 67, 69, 71, 75, 76, 79], "relax": [2, 53, 71, 73, 75, 78, 79], "hyperparamet": [2, 75], "10": [2, 3, 4, 5, 6, 7, 8, 9, 12, 16, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 40, 44, 45, 49, 53, 54, 55, 56, 57, 61, 62, 64, 66, 68, 73, 74, 75, 78, 79], "dimens": [2, 8, 32, 36, 60, 61, 64, 66, 69, 71, 72, 75, 80], "ground": [2, 47, 48, 61, 62, 73, 74, 75, 78, 79], "metric": [2, 21, 22, 31, 35, 39, 43, 48, 50, 55, 61, 62, 66, 67, 68, 69, 70, 71, 74, 75, 76, 78, 79, 80], "entropi": [2, 40, 53, 60, 61, 64, 66, 73, 75, 78, 79], "uniform": [2, 7, 33, 37, 38, 40, 43, 46, 51, 56, 57, 60, 61, 62, 65, 66, 67, 72, 75, 76, 77, 79], "chizat": [2, 54, 61, 62, 69, 75, 78, 79], "schmitzer": [2, 54, 61, 62, 69, 75, 78, 79], "vialard": [2, 54, 61, 62, 69, 75, 78, 79], "f": [2, 5, 11, 14, 20, 26, 30, 33, 41, 43, 49, 54, 60, 61, 62, 68, 69, 74, 75, 76, 78, 79, 80], "x": [2, 3, 4, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "2016": [2, 12, 25, 26, 36, 41, 54, 61, 62, 64, 66, 67, 69, 74, 75, 78, 79, 80], "arxiv": [2, 17, 47, 49, 54, 61, 62, 64, 67, 68, 73, 75, 78, 79], "preprin": [2, 75], "1607": [2, 54, 61, 62, 75, 78, 79], "05816": [2, 54, 61, 62, 75, 78, 79], "dist": [2, 7, 9, 21, 29, 30, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 53, 54, 56, 57, 64, 66, 71, 74, 76, 79, 80], "x1": [2, 4, 5, 15, 16, 20, 24, 26, 39, 43, 64, 76], "x2": [2, 5, 15, 16, 20, 24, 26, 39, 43, 64, 76], "sqeuclidean": [2, 21, 22, 43, 47, 48, 61, 62, 74, 76], "p": [2, 4, 8, 22, 29, 30, 31, 32, 33, 36, 39, 43, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 76, 77, 78, 79], "w": [2, 7, 8, 9, 32, 33, 39, 43, 55, 57, 61, 62, 64, 66, 67, 72, 73, 74, 75, 76, 78, 79, 80], "x_1": [2, 43, 76], "x_2": [2, 43, 76], "backend": [2, 4, 5, 6, 7, 8, 43, 59, 61, 65, 66, 67, 72, 74, 76, 77, 78, 80], "compat": [2, 43, 60, 61, 64, 65, 66, 67, 73, 74, 76, 77, 80], "n1": [2, 43, 76], "n2": [2, 30, 43, 76], "callabl": [2, 43, 62, 64, 66, 68, 74, 76, 80], "euclidean": [2, 12, 29, 39, 43, 47, 48, 62, 64, 73, 76, 79, 80], "On": [2, 43, 62, 76, 78, 79, 80], "spatial": [2, 31, 32, 43, 55, 69, 76], "cdist": [2, 31, 32, 43, 55, 69, 76], "braycurti": [2, 43, 76], "canberra": [2, 43, 76], "chebyshev": [2, 43, 76], "cityblock": [2, 43, 47, 76], "correl": [2, 43, 76], "cosin": [2, 43, 76], "dice": [2, 43, 76], "ham": [2, 43, 76, 80], "jaccard": [2, 43, 76], "kulsinski": [2, 43, 76], "mahalanobi": [2, 43, 76], "match": [2, 43, 62, 66, 76, 78, 79], "minkowski": [2, 43, 76], "rogerstanimoto": [2, 43, 76], "russellrao": [2, 43, 76], "seuclidean": [2, 43, 76], "sokalmichen": [2, 43, 76], "sokalsneath": [2, 43, 76], "wminkowski": [2, 43, 76], "yule": [2, 43, 76], "norm": [2, 16, 29, 36, 43, 57, 60, 62, 76], "default": [2, 4, 32, 33, 43, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 74, 76, 77, 79, 80], "valu": [2, 4, 8, 12, 27, 29, 30, 32, 33, 43, 48, 54, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 73, 75, 76, 79, 80], "rank": [2, 38, 43, 65, 73, 76], "given": [2, 4, 32, 33, 43, 60, 61, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80], "emd": [2, 19, 21, 23, 30, 37, 38, 39, 47, 59, 61, 62, 67, 68, 69, 72, 73, 75, 77, 78, 80], "100000": [2, 41, 62, 67, 68, 75], "center_du": [2, 67], "numthread": [2, 67, 80], "earth": [2, 62, 67, 78, 80], "mover": [2, 62, 67, 78, 80], "gamma": [2, 43, 56, 57, 61, 62, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79], "langl": [2, 61, 62, 66, 67, 68, 69, 72, 74, 75], "rangle_f": [2, 61, 62, 66, 67, 68, 69, 74, 75], "geq": [2, 57, 61, 62, 66, 67, 68, 69, 71, 74, 75, 76, 77, 79], "note": [2, 27, 43, 61, 62, 64, 66, 67, 69, 70, 73, 76, 78, 79, 80], "c": [2, 4, 8, 9, 16, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 32, 33, 36, 37, 38, 41, 43, 46, 47, 56, 57, 59, 60, 61, 62, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80], "order": [2, 7, 21, 27, 29, 43, 60, 64, 67, 70, 79], "float64": [2, 5, 8, 11, 12, 14, 15, 17, 20, 24, 26, 32, 40, 44, 45, 48, 49, 53, 54, 61, 67], "convert": [2, 7, 20, 24, 26, 32, 60, 67, 76], "But": [2, 65, 66, 67, 77, 79, 80], "cpu": [2, 4, 5, 8, 60, 65, 66, 67, 77, 80], "lead": [2, 7, 43, 61, 65, 66, 67, 68, 77, 79, 80], "overhead": [2, 61, 65, 66, 67, 77, 79], "cast": [2, 67, 79], "plan": [2, 4, 10, 35, 38, 39, 44, 45, 56, 57, 61, 65, 66, 67, 69, 71, 73, 74, 75, 76, 79, 80], "input": [2, 14, 17, 54, 60, 61, 62, 65, 66, 67, 73, 76, 77, 79], "prioriti": [2, 67], "integ": [2, 29, 67, 80], "tensor": [2, 4, 5, 7, 8, 60, 66, 67, 79, 80], "might": [2, 16, 19, 21, 22, 23, 27, 31, 43, 46, 49, 61, 67, 79], "precis": [2, 60, 61, 62, 66, 67], "behaviour": [2, 67], "unwant": [2, 67], "vector": [2, 7, 60, 61, 67, 71, 72, 76, 78, 79], "sum": [2, 4, 6, 7, 8, 12, 13, 14, 15, 33, 36, 37, 43, 46, 48, 49, 53, 56, 57, 60, 61, 62, 64, 66, 67, 68, 69, 71, 72, 73, 74, 76, 78, 79], "same": [2, 25, 31, 43, 55, 60, 67, 76, 79], "n": [2, 4, 7, 8, 9, 11, 12, 14, 15, 17, 20, 22, 24, 25, 26, 29, 30, 32, 33, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79], "empti": [2, 51, 62, 65, 67, 76, 77], "nt": [2, 7, 33, 61, 62, 65, 66, 67, 68, 69, 70, 71, 73, 74, 77], "target": [2, 3, 6, 7, 8, 9, 24, 25, 28, 32, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 51, 53, 56, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80], "maximum": [2, 16, 29, 32, 43, 60, 61, 62, 66, 67, 68, 71, 73], "ha": [2, 4, 7, 9, 43, 59, 61, 62, 66, 67, 69, 76, 78, 79, 80], "contain": [2, 11, 12, 14, 54, 65, 66, 67, 71, 76, 77, 78, 79, 80], "dual": [2, 9, 10, 12, 35, 61, 63, 65, 67, 70, 73, 74, 76, 77, 78, 79, 80], "variabl": [2, 33, 61, 62, 65, 66, 67, 71, 73, 74, 77, 79, 80], "boolean": [2, 60, 61, 62, 67, 76], "center": [2, 43, 64, 67, 80], "potenti": [2, 6, 9, 61, 67, 73, 74, 76, 80], "center_ot_du": [2, 67], "openmp": [2, 67, 80], "compil": [2, 67, 78, 79, 80], "choos": [2, 29, 61, 64, 67, 79], "thread": [2, 67], "parallel": [2, 67, 76, 79, 80], "select": [2, 40, 66, 67, 79], "highest": [2, 67], "exit": [2, 65, 67, 77, 80], "statu": [2, 65, 67, 76, 77, 80], "simpl": [2, 4, 7, 13, 32, 43, 63, 67, 76, 79, 80], "obviou": [2, 67], "solut": [2, 39, 43, 61, 67, 71, 79, 80], "convers": [2, 67], "5": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 61, 62, 63, 66, 67, 68, 69, 71, 72, 74, 75, 78, 79], "bonneel": [2, 5, 51, 59, 67, 72, 78, 79], "van": [2, 67, 78, 79], "de": [2, 61, 67, 78, 79], "pann": [2, 67, 78, 79], "pari": [2, 15, 16, 67, 78, 79], "heidrich": [2, 67, 78, 79], "2011": [2, 66, 67, 78, 79], "decemb": [2, 60, 67, 78, 79, 80], "displac": [2, 48, 67, 76, 78, 79], "interpol": [2, 4, 8, 11, 13, 19, 21, 23, 27, 30, 32, 33, 37, 43, 46, 47, 61, 67, 69, 78, 79], "lagrangian": [2, 67, 69, 71, 78, 79], "mass": [2, 4, 22, 43, 55, 57, 62, 66, 67, 69, 78, 79, 80], "acm": [2, 61, 67, 78, 79], "transact": [2, 49, 61, 62, 67, 68, 78, 79], "graphic": [2, 61, 67, 78, 79, 80], "tog": [2, 61, 67, 78, 79], "vol": [2, 9, 49, 62, 67, 68, 78, 79], "30": [2, 3, 5, 6, 9, 12, 19, 21, 23, 27, 29, 30, 31, 32, 33, 36, 40, 43, 44, 45, 49, 62, 67, 78, 79], "6": [2, 4, 6, 8, 12, 14, 17, 19, 20, 21, 23, 25, 26, 33, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 53, 54, 55, 57, 62, 66, 67, 71, 74, 78, 79], "158": [2, 49, 67, 78, 79], "cg": [2, 49, 61, 62, 65, 66, 67, 73, 75, 77, 79], "emd2": [2, 7, 9, 48, 59, 67, 75, 78, 80], "process": [2, 25, 26, 40, 41, 43, 61, 62, 67, 73, 74, 75, 78, 79, 80], "return_matrix": [2, 67], "min_": [2, 7, 8, 9, 57, 61, 62, 64, 66, 67, 69, 71, 75, 79], "nb": [2, 8, 11, 12, 14, 20, 26, 31, 32, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 67, 68, 70], "multipl": [2, 48, 61, 66, 67, 73, 75, 76, 80], "deprec": [2, 8, 32, 55, 67, 76], "emd2_1d": [2, 79], "x_a": 2, "x_b": 2, "dens": [2, 60, 66, 76], "1d": [2, 10, 18, 30, 35, 50, 58, 59, 63, 66, 68, 70, 76, 78, 79, 80], "measur": [2, 5, 8, 15, 17, 30, 41, 51, 61, 64, 66, 67, 72, 74, 76, 78, 79], "sum_j": [2, 30, 67, 73, 74, 77], "gamma_": [2, 43, 61, 62, 68, 69, 74, 75, 77, 79], "ij": [2, 77], "y": [2, 3, 9, 11, 16, 17, 19, 21, 22, 23, 25, 27, 29, 30, 31, 33, 36, 54, 60, 61, 62, 63, 64, 66, 67, 69, 71, 72, 73, 76, 78, 79], "ndarrai": [2, 29, 32, 60, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76], "dirac": [2, 15, 37, 46], "locat": [2, 15, 17, 60, 61, 67], "real": 2, "line": [2, 20, 24, 26, 32, 43, 61, 66, 67, 68, 70, 79], "string": [2, 61, 62, 66, 74, 75, 76], "faster": [2, 80], "math": [2, 29, 43, 69, 73, 79], "spars": [2, 29, 43, 60, 61, 64, 66, 73, 75, 76, 78, 79, 80], "coo_matrix": [2, 60], "associ": [2, 62, 66, 69, 72, 76], "2017": [2, 9, 61, 62, 77, 78, 79, 80], "2018": [2, 9, 41, 61, 62, 69, 73, 74, 78, 79, 80], "multidimension": [2, 32], "emd_1d": [2, 44, 79, 80], "instead": [2, 6, 9, 29, 33, 60, 61, 78, 79, 80], "factored_optimal_transport": [2, 38, 65], "xa": [2, 65, 77], "xb": [2, 5, 16, 38, 65, 77], "r": [2, 5, 8, 9, 11, 12, 14, 22, 25, 26, 31, 32, 33, 36, 38, 40, 41, 43, 44, 45, 48, 49, 53, 54, 55, 56, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80], "100": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 23, 25, 29, 31, 32, 33, 36, 38, 39, 40, 43, 44, 45, 48, 49, 53, 54, 55, 56, 60, 61, 62, 64, 65, 66, 67, 69, 72], "x0": [2, 29, 65], "07": [2, 12, 18, 26, 28, 36, 41, 42, 44, 45, 49, 55, 61, 65, 67, 69, 74, 75], "factor": [2, 35, 42, 70, 78, 79, 80], "intermedi": [2, 6, 65], "40": [2, 3, 6, 9, 33, 36, 43, 44, 45, 49, 57, 65, 71, 78, 79], "mu": [2, 5, 7, 8, 25, 26, 29, 30, 55, 62, 64, 65, 72, 79], "w_2": [2, 65, 67, 79], "mu_a": [2, 65], "mu_b": [2, 65], "empir": [2, 4, 5, 28, 35, 38, 47, 50, 59, 61, 62, 63, 65, 67, 70, 76, 77, 78, 79, 80], "And": [2, 65], "condit": [2, 49, 59, 60, 62, 65, 66, 68, 77, 78, 79, 80], "gradient": [2, 4, 7, 8, 9, 10, 35, 49, 59, 60, 61, 62, 64, 65, 66, 68, 69, 71, 73, 74, 77, 78, 79, 80], "39": [2, 3, 6, 36, 49, 65, 77, 78, 79], "rel": [2, 19, 30, 31, 32, 49, 61, 62, 65, 66, 68, 77], "variat": [2, 12, 48, 65, 68, 77, 79], "ga": [2, 38, 65], "gb": [2, 38, 65], "support": [2, 5, 6, 8, 18, 19, 35, 59, 61, 65, 67, 80], "forrow": [2, 65, 78, 79], "h\u00fctter": [2, 65, 78, 79], "nitzan": [2, 65, 78, 79], "rigollet": [2, 61, 65, 78, 79], "schiebing": [2, 65, 78, 79], "weed": [2, 61, 65, 78, 79], "2019": [2, 5, 29, 30, 40, 61, 62, 65, 66, 68, 72, 78, 79, 80], "april": [2, 61, 65, 78, 79], "statist": [2, 9, 61, 62, 65, 73, 78, 79], "coupl": [2, 25, 35, 42, 61, 62, 65, 66, 70, 78, 79, 80], "22nd": [2, 61, 65, 78, 79], "intern": [2, 4, 5, 8, 9, 14, 29, 30, 33, 41, 61, 62, 65, 66, 67, 68, 69, 73, 74, 78, 79], "confer": [2, 4, 5, 9, 14, 29, 30, 33, 41, 61, 62, 65, 66, 67, 68, 69, 72, 73, 74, 78, 79], "artifici": [2, 9, 61, 62, 65, 73, 78, 79], "intellig": [2, 9, 49, 61, 62, 65, 68, 73, 78, 79], "pp": [2, 5, 9, 49, 61, 62, 65, 68, 72, 78, 79], "2454": [2, 65, 78, 79], "2465": [2, 65, 78, 79], "pmlr": [2, 5, 9, 14, 61, 65, 78, 79], "fused_gromov_wasserstein": [2, 30, 66, 79], "c1": [2, 4, 30, 31, 55, 56, 57, 66, 68, 69, 79], "c2": [2, 4, 30, 31, 55, 56, 57, 66, 68, 69, 79], "q": [2, 30, 31, 33, 54, 55, 60, 61, 66, 69, 71, 79], "loss_fun": [2, 30, 66], "square_loss": [2, 30, 31, 32, 66], "alpha": [2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 17, 19, 21, 22, 23, 25, 27, 29, 30, 33, 38, 39, 41, 43, 48, 51, 53, 54, 56, 57, 61, 62, 66, 67, 68, 70, 73, 74], "armijo": [2, 66, 68, 80], "g0": [2, 37, 38, 44, 45, 46, 49, 66, 68, 69, 75, 77], "fgw": [2, 34, 35, 66, 78, 80], "graph": [2, 30, 34, 35, 43, 59, 66, 68, 78, 79, 80], "24": [2, 6, 10, 36, 49, 66, 68, 78, 79, 80], "sum_": [2, 7, 43, 61, 62, 64, 66, 67, 68, 69, 74, 75, 79], "k": [2, 4, 7, 9, 14, 15, 16, 22, 29, 30, 33, 36, 39, 43, 60, 61, 62, 64, 66, 67, 69, 71, 79], "c_1": [2, 30, 66, 68, 69], "c_2": [2, 30, 66, 69], "misfit": [2, 66], "similar": [2, 9, 27, 43, 62, 66, 71, 79], "matric": [2, 8, 32, 43, 49, 60, 61, 62, 64, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80], "discuss": [2, 62, 66, 68, 78, 79, 80], "across": [2, 66], "domain": [2, 27, 28, 49, 61, 62, 63, 64, 66, 68, 70, 72, 73, 75, 76, 78, 80], "structur": [2, 29, 33, 60, 66, 68, 78, 79, 80], "trade": [2, 33, 66], "search": [2, 29, 43, 61, 66, 67, 68, 78, 79], "research": [2, 59, 66, 68, 78, 79, 80], "els": [2, 4, 5, 8, 13, 17, 22, 29, 33, 62, 64, 66, 68, 75], "close": [2, 29, 30, 43, 62, 66, 68, 76, 79], "form": [2, 7, 9, 43, 62, 66, 68, 71, 76, 79, 80], "initi": [2, 15, 59, 61, 64, 66, 67, 68, 75, 77, 79], "pq": [2, 66], "must": [2, 32, 66, 73], "satisfi": [2, 66, 68], "constraint": [2, 61, 66, 67, 76, 79], "directli": [2, 43, 66, 69, 79], "vayer": [2, 4, 29, 30, 33, 59, 66, 68, 78, 79], "titouan": [2, 29, 30, 59, 66, 68, 78], "chapel": [2, 29, 30, 55, 56, 57, 59, 66, 68, 69, 71, 75, 78, 79], "laetitia": [2, 29, 30, 55, 57, 59, 66, 68, 78], "flamari": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 56, 59, 61, 62, 64, 66, 68, 71, 74, 75, 78, 79], "r\u00e9mi": [2, 4, 5, 8, 15, 29, 30, 59, 61, 62, 66, 68, 78, 79], "tavenard": [2, 29, 30, 59, 66, 68, 78, 79], "romain": [2, 29, 30, 59, 66, 68, 78], "courti": [2, 4, 8, 9, 13, 25, 26, 29, 30, 31, 32, 33, 36, 41, 43, 49, 59, 61, 62, 64, 66, 68, 74, 78, 79], "nicola": [2, 5, 8, 13, 29, 30, 31, 32, 43, 51, 59, 61, 62, 66, 68, 72, 78, 79], "applic": [2, 27, 29, 30, 49, 61, 62, 66, 67, 68, 69, 77, 78], "machin": [2, 4, 5, 9, 14, 29, 30, 33, 49, 61, 62, 66, 67, 68, 69, 78, 79, 80], "icml": [2, 4, 29, 30, 33, 64, 66, 68, 69, 78, 79], "fused_gromov_wasserstein2": [2, 66], "differenti": [2, 7, 8, 66, 78, 79, 80], "wrt": [2, 4, 60, 66, 76], "maric": [2, 66], "quadrat": [2, 10, 35, 57, 63, 66, 68, 69, 70, 74, 75, 76, 78, 80], "38": [2, 3, 4, 6, 33, 36, 49, 66, 78, 79], "fuse": [2, 34, 59, 66, 78, 79, 80], "vincent": [2, 4, 33, 59, 66, 78, 79], "cuaz": [2, 4, 33, 59, 66, 78, 79], "corn": [2, 4, 33, 66, 78, 79], "2021": [2, 4, 17, 33, 56, 60, 64, 66, 67, 71, 75, 78, 79, 80], "gromov_barycent": [2, 32, 66, 79, 80], "lambda": [2, 29, 66, 69, 71, 79], "max_it": [2, 19, 22, 25, 26, 31, 32, 62, 66, 73, 80], "tol": [2, 22, 32, 62, 66, 69, 73], "09": [2, 10, 12, 41, 44, 45, 49, 50, 61, 62, 66, 68, 73, 74], "init_c": [2, 66], "random_st": [2, 4, 32, 33, 63, 66], "leq": [2, 66, 68, 69, 79], "coordin": [2, 13, 30, 32, 60, 62, 64, 66, 74, 78, 79], "descent": [2, 4, 7, 8, 62, 64, 66, 68, 78, 79], "mathbb": [2, 61, 66, 67, 72, 74, 79], "lambda_": [2, 66, 79], "mathrm": [2, 57, 61, 62, 64, 66, 68, 69, 73, 74, 75], "gw": [2, 66, 69, 78, 80], "updat": [2, 61, 62, 66, 67, 71, 74, 76, 80], "accord": [2, 66, 76], "kernel": [2, 25, 62, 66, 69, 76, 78, 79], "calcul": [2, 16, 60, 61, 66], "random": [2, 4, 5, 6, 7, 9, 15, 16, 20, 22, 24, 26, 29, 30, 31, 32, 33, 36, 38, 41, 55, 56, 57, 60, 63, 66, 72, 74, 76, 80], "randomst": [2, 4, 7, 20, 24, 26, 32, 41, 63, 66, 72, 74, 76], "seed": [2, 5, 6, 22, 29, 30, 32, 33, 36, 38, 56, 57, 60, 63, 66, 72, 74, 76], "permut": [2, 4, 5, 8, 66], "arbitrarili": [2, 66], "dure": [2, 66], "12": [2, 6, 12, 14, 15, 19, 26, 31, 33, 36, 49, 66, 69, 78, 79], "gabriel": [2, 9, 59, 61, 66, 69, 78, 79], "marco": [2, 9, 59, 61, 66, 67, 69, 78, 79], "justin": [2, 66, 69, 78, 79], "solomon": [2, 61, 66, 69, 78, 79], "averag": [2, 60, 62, 64, 66, 69, 78, 79], "gromov_wasserstein": [2, 4, 30, 31, 66, 79], "kl_loss": [2, 66], "minim": [2, 4, 5, 7, 8, 29, 33, 66, 68, 73, 75, 76, 79, 80], "13": [2, 12, 14, 18, 19, 26, 30, 36, 43, 48, 49, 66, 69, 78, 79, 80], "m\u00e9moli": [2, 66, 78, 79], "facundo": [2, 66, 78, 79], "approach": [2, 12, 19, 21, 23, 27, 61, 66, 67, 78, 79], "object": [2, 3, 4, 5, 6, 9, 12, 24, 32, 44, 45, 48, 61, 62, 66, 67, 73, 76, 78, 79], "foundat": [2, 66, 69, 78, 79, 80], "11": [2, 11, 12, 19, 26, 33, 36, 49, 54, 56, 64, 66, 77, 78, 79], "417": [2, 66, 78, 79], "487": [2, 66, 78, 79], "gromov_wasserstein2": [2, 4, 66, 79, 80], "discrep": [2, 66, 69], "gw_dist": [2, 31, 66], "marix": [2, 66], "max_sliced_wasserstein_dist": [2, 72], "x_": [2, 61, 62, 67, 72], "x_t": [2, 61, 62, 72], "n_project": [2, 5, 51, 72], "50": [2, 3, 5, 6, 7, 9, 12, 16, 17, 22, 33, 37, 44, 45, 46, 49, 51, 56, 61, 69, 72, 80], "mont": [2, 72], "carlo": [2, 72], "approxim": [2, 9, 12, 25, 61, 62, 66, 68, 72, 78, 79], "slice": [2, 10, 52, 59, 63, 78, 79, 80], "mathcal": [2, 62, 63, 66, 72, 76, 79], "swd": [2, 51, 72], "_p": [2, 72, 79], "nu": [2, 5, 8, 30, 64, 72], "underset": [2, 72], "theta": [2, 3, 6, 9, 25, 61, 63, 67, 72], "_in": [2, 72], "theta_": [2, 72], "frac": [2, 60, 61, 62, 64, 66, 67, 69, 71, 72, 73, 74, 76, 77, 79], "stand": [2, 72], "pushforwar": [2, 72], "ni": [2, 72], "mapsto": [2, 66, 72], "rangl": [2, 61, 72], "n_samples_a": [2, 61, 72], "n_samples_b": [2, 61, 72], "power": [2, 43, 60, 72], "sliced_wasserstein_dist": [2, 5, 51, 72, 80], "20": [2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 19, 25, 26, 29, 30, 31, 36, 40, 43, 44, 45, 47, 48, 49, 53, 54, 55, 61, 66, 67, 72, 78, 79, 80], "np": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 69, 71, 72, 73, 74, 75, 76, 79], "normal": [2, 11, 12, 14, 15, 29, 48, 54, 60, 62, 64, 72, 76, 80], "35": [2, 3, 6, 22, 36, 49, 56, 58, 72, 78, 79, 80], "deshpand": [2, 72, 78, 79], "hu": [2, 72, 78, 79], "sun": [2, 72, 78, 79], "pyrro": [2, 72, 78, 79], "siddiqui": [2, 72, 78, 79], "koyejo": [2, 72, 78, 79], "schwing": [2, 72, 78, 79], "gan": [2, 10, 35, 72, 78, 79, 80], "proceed": [2, 14, 61, 72, 73, 78, 79], "ieee": [2, 49, 62, 68, 72, 78, 79], "cvf": [2, 72, 78, 79], "vision": [2, 5, 51, 72, 78, 79], "pattern": [2, 49, 62, 68, 72, 78, 79], "recognit": [2, 72, 78, 79], "10648": [2, 72, 78, 79], "10656": [2, 72, 78, 79], "omega": [2, 57, 61, 68, 69, 73, 74, 75, 79], "dim_a": [2, 61, 69, 71, 75], "dim_b": [2, 61, 69, 71, 75], "By": [2, 61, 64, 71, 79], "too": [2, 61, 64, 79], "enough": [2, 29, 61, 64, 79], "get": [2, 4, 32, 33, 61, 62, 64, 66, 67, 76, 78, 79, 80], "sharper": [2, 61, 79], "numer": [2, 16, 43, 54, 60, 61, 62, 64, 69, 76, 78, 79, 80], "last": [2, 43, 61, 71, 79, 80], "veri": [2, 27, 43, 61, 66, 76, 78, 79], "slow": [2, 61, 64, 79, 80], "even": [2, 11, 12, 54, 55, 61, 79, 80], "finit": [2, 60, 61, 79], "sinkhorn_epsilon_sc": [2, 61, 62, 79], "reli": [2, 61, 66, 78, 79], "warm": [2, 61, 79], "sometim": [2, 61, 79], "better": [2, 9, 40, 61, 73, 79, 80], "greedi": [2, 61, 78, 79, 80], "greenkhorn": [2, 59, 61, 79, 80], "speedup": [2, 61, 79, 80], "screen": [2, 35, 42, 61, 63, 70, 78, 79], "screenkhorn": [2, 35, 42, 59, 63, 70, 79, 80], "aim": [2, 9, 57, 61, 62, 79], "fast": [2, 44, 61, 66, 67, 78, 79], "those": [2, 13, 43, 61, 62, 66, 67, 75, 79], "36552929": [2, 61, 79], "13447071": [2, 61, 79], "lightspe": [2, 61, 62, 73, 75, 78, 79], "neural": [2, 9, 25, 26, 40, 41, 61, 62, 73, 74, 75, 78, 79, 80], "nip": [2, 25, 26, 61, 62, 73, 75, 78, 79], "26": [2, 36, 40, 49, 61, 62, 73, 75, 78, 79, 80], "2013": [2, 61, 62, 73, 75, 78, 79], "9": [2, 4, 9, 12, 17, 19, 22, 25, 26, 29, 31, 32, 33, 36, 38, 39, 41, 44, 49, 55, 61, 62, 71, 73, 74, 75, 78, 79], "stabil": [2, 61, 67, 75, 78, 79, 80], "preprint": [2, 17, 49, 54, 61, 62, 64, 67, 68, 75, 78, 79], "1610": [2, 61, 75, 78, 79], "06519": [2, 61, 75, 78, 79], "34": [2, 6, 16, 33, 34, 36, 49, 61, 78, 79], "feydi": [2, 61, 78, 79], "s\u00e9journ\u00e9": [2, 61, 78, 79], "amari": [2, 61, 78, 79], "trouv\u00e9": [2, 61, 78, 79], "mmd": [2, 61, 78, 79], "diverg": [2, 9, 48, 57, 60, 61, 75, 78, 79, 80], "2681": [2, 61, 78, 79], "2690": [2, 61, 78, 79], "unregular": [2, 61, 62, 68, 71, 73, 75], "sinkhorn_knopp": [2, 61, 75, 79], "classic": [2, 61, 62, 75, 79, 80], "epslilon": [2, 61, 75], "sinkhorn2": [2, 48, 61, 78, 80], "26894142136999516": [2, 61], "21": [2, 6, 20, 28, 36, 42, 49, 61, 78, 79], "altschul": [2, 61, 78, 79], "Near": [2, 61, 78, 79], "linear": [2, 3, 6, 9, 25, 26, 28, 34, 35, 56, 59, 60, 61, 62, 64, 66, 67, 68, 71, 75, 76, 78, 79, 80], "31": [2, 3, 5, 6, 16, 26, 28, 36, 43, 49, 51, 61, 72, 78, 79, 80], "sinkhorn_lpl1_mm": [2, 62, 79], "labels_a": [2, 62], "eta": [2, 8, 25, 26, 62], "numinneritermax": [2, 16, 61, 62, 68], "200": [2, 3, 6, 9, 15, 16, 44, 49, 62, 66, 68, 69, 80], "stopinnerthr": [2, 62], "nonconvex": [2, 62], "group": [2, 19, 21, 62, 78, 80], "lasso": [2, 19, 21, 62, 71, 78, 80], "omega_": [2, 62, 79], "omega_g": [2, 62], "_c": [2, 62], "_1": [2, 61, 62, 69, 79], "index": [2, 4, 62, 71, 74, 78], "class": [2, 4, 6, 9, 22, 27, 59, 61, 63, 64, 80], "7": [2, 11, 12, 13, 14, 17, 19, 20, 21, 24, 25, 26, 29, 30, 33, 36, 39, 41, 43, 45, 46, 47, 48, 49, 54, 57, 62, 68, 71, 73, 74, 78, 79], "label": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 19, 21, 22, 23, 25, 27, 29, 31, 33, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 61, 62, 63, 64, 76, 79, 80], "inner": [2, 61, 62], "tuia": [2, 49, 61, 62, 68, 78, 79], "rakotomamonji": [2, 36, 40, 49, 59, 61, 62, 64, 68, 78, 79], "99": [2, 4, 49, 62, 68, 78, 79, 80], "1510": [2, 49, 62, 68, 78, 79], "06567": [2, 49, 62, 68, 78, 79], "kl": [2, 45, 53, 60, 61, 66, 73, 75, 78, 79], "kullback": [2, 53, 57, 60, 66, 73, 75, 79], "leibler": [2, 53, 57, 60, 66, 73, 75, 79], "25": [2, 6, 9, 12, 29, 30, 36, 49, 51, 69, 71, 75, 78, 79, 80], "unnorm": [2, 69, 75], "One": [2, 62, 75, 78, 79, 80], "mani": [2, 75], "sinkhorn_reg_sc": [2, 75], "ot_dist": [2, 75], "51122823": [2, 75], "18807035": [2, 75], "frogner": [2, 75, 78, 79], "zhang": [2, 75, 78, 79], "mobahi": [2, 75, 78, 79], "h": [2, 7, 14, 29, 56, 61, 62, 63, 64, 66, 71, 75, 76, 78, 79], "araya": [2, 75, 78, 79], "polo": [2, 75, 78, 79], "poggio": [2, 75, 78, 79], "sinkhorn_knopp_unbalanc": [2, 75, 79], "sinkhorn_stabilized_unbalanc": [2, 75, 79], "sinkhorn_reg_scaling_unbalanc": [2, 75], "sinkhorn_unbalanced2": [2, 75, 79], "31912866": [2, 75], "sim": [2, 62, 72], "left": [2, 7, 14, 19, 23, 60, 61, 62, 66, 70, 72, 73, 74, 77], "pushforward": [2, 72], "et": [2, 5, 51, 56, 61, 67, 72, 78, 79], "al": [2, 5, 51, 56, 61, 67, 72, 78, 79], "radon": [2, 5, 51, 72, 78, 79], "imag": [2, 5, 12, 13, 28, 32, 35, 43, 49, 51, 61, 62, 68, 72, 76, 78, 79, 80], "51": [2, 5, 49, 51, 72, 78, 79], "22": [2, 5, 12, 36, 49, 51, 61, 72, 78, 79, 80], "45": [2, 5, 17, 34, 49, 51, 72, 78, 79, 80], "reg_typ": [2, 45, 62, 73, 79], "unbalanced_typ": 2, "n_thread": 2, "plan_init": 2, "potentials_init": 2, "discret": [2, 20, 25, 26, 33, 49, 61, 62, 67, 68, 74, 78, 79, 80], "otresult": [2, 76], "t_": 2, "m_": [2, 30, 71, 79], "lambda_r": 2, "lambda_u": 2, "penal": [2, 35, 58, 63, 71, 75, 78], "exact": [2, 18, 35, 42, 49, 58, 61, 63, 67, 69, 70, 75, 76, 78, 79, 80], "array_lik": [2, 76], "l2": [2, 11, 12, 35, 45, 54, 58, 63, 66, 71, 73, 75, 78, 79, 80], "balanc": [2, 76, 79], "unction": 2, "tv": [2, 48], "omp": 2, "_type_": 2, "toler": [2, 32, 60, 69, 73], "re": [2, 51, 55, 56, 60, 67], "obtain": [2, 62, 71, 79], "value_linear": [2, 76], "paper": [2, 12, 61, 78, 79, 80], "formul": [2, 69, 73, 78, 79], "17": [2, 19, 26, 36, 49, 73, 78, 79], "blondel": [2, 41, 59, 73, 74, 78, 79, 80], "segui": [2, 15, 41, 73, 74, 78, 79], "v": [2, 3, 6, 16, 18, 28, 29, 35, 41, 42, 43, 54, 60, 61, 62, 63, 67, 70, 73, 74, 75, 76, 78, 79, 80], "rolet": [2, 41, 59, 73, 74, 78, 79], "twenti": [2, 61, 73, 78, 79], "aistat": [2, 61, 62, 73, 78, 79], "tic": [2, 12, 30, 76, 80], "matlab": [2, 59, 76], "toc": [2, 12, 30, 76, 80], "elaps": [2, 12, 30, 76], "toq": [2, 76], "julia": [2, 76], "unif": [2, 4, 7, 15, 16, 17, 30, 31, 32, 33, 37, 38, 41, 47, 55, 74, 76], "type_a": [2, 60, 72, 76], "length": [2, 32, 60, 71, 74, 76], "bin": [2, 8, 11, 12, 14, 40, 44, 45, 48, 49, 53, 54, 63, 76, 79], "pytorch": [2, 10, 35, 59, 60, 63, 70, 74, 76, 78, 79, 80], "jax": [2, 60, 76, 78, 79, 80], "foral": [2, 61, 66, 76], "wasserstein_1d": [2, 8, 79, 80], "u_valu": 2, "v_valu": 2, "u_weight": 2, "v_weight": 2, "require_sort": 2, "dimension": [2, 31, 55, 61, 67, 78, 80], "15": [2, 3, 9, 10, 14, 15, 19, 23, 26, 29, 30, 36, 49, 55, 62, 75, 78, 79, 80], "batch": [2, 8, 9, 61, 62, 66, 74], "formal": [2, 61, 67], "so": [2, 4, 9, 57, 76, 79, 80], "quantil": [2, 69], "integr": 2, "them": [2, 62, 69, 80], "whenev": 2, "over": [2, 9, 33, 60, 61, 66, 67, 69], "requir": [2, 29, 60, 62, 78, 79, 80], "second": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 60, 66, 68, 73, 76, 78, 79, 80], "chap": 2, "atom": [2, 61, 66, 67], "been": [2, 9, 59, 69, 76, 78, 79, 80], "weak_optimal_transport": [2, 37, 77], "weak": [2, 35, 42, 59, 63, 70, 78, 79, 80], "_j": [2, 64, 67, 73, 74, 77], "guess": [2, 68, 77], "indep": [2, 68, 77], "joint": [2, 33, 61, 62, 68, 77, 78, 79, 80], "densiti": [2, 68, 77], "numitermaxemd": [2, 68, 77], "stopthr2": [2, 68, 77], "absolut": [2, 19, 30, 31, 49, 60, 66, 68, 77], "gozlan": [2, 17, 67, 77, 78, 79], "roberto": [2, 77, 78, 79], "samson": [2, 77, 78, 79], "tetali": [2, 77, 78, 79], "kantorovich": [2, 77, 78, 79], "dualiti": [2, 12, 77, 78, 79], "273": [2, 77, 78, 79], "3327": [2, 77, 78, 79], "3405": [2, 77, 78, 79], "here": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 68, 78, 79, 80], "download": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57], "author": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 78], "remi": [3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 19, 20, 21, 22, 24, 25, 26, 27, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48], "polytechniqu": [3, 4, 5, 6, 7, 8, 9, 15, 17, 37, 38, 39], "edu": [3, 4, 5, 6, 7, 8, 9, 15, 17, 37, 38, 39, 79], "licens": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57], "mit": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 78], "sphinx_gallery_thumbnail_numb": [3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 17, 20, 21, 24, 25, 26, 27, 30, 33, 36, 37, 38, 39, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56], "pyplot": [3, 6, 9, 11, 13, 14, 16, 17, 20, 24, 26, 29, 30, 32, 39], "pl": [3, 4, 5, 6, 7, 8, 9, 12, 15, 17, 19, 21, 22, 23, 25, 27, 30, 31, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57], "manual_se": [3, 5, 6, 9], "n_source_sampl": [3, 6, 19, 23, 25, 62], "n_target_sampl": [3, 6, 19, 23, 25, 62], "pi": [3, 6, 9, 17, 24, 25, 29, 36, 47, 64, 74, 80], "noise_level": [3, 6, 25], "make_data_classif": [3, 19, 21, 22, 23, 25, 27], "gaussrot": [3, 25], "nz": [3, 22, 25, 36, 63], "xt": [3, 6, 7, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 36, 37, 38, 46, 47, 51, 55, 56, 57, 61, 62, 70, 71, 74, 79], "yt": [3, 19, 21, 22, 23, 25, 27, 30, 36, 62], "mode": [3, 6, 25, 62], "varianc": [3, 6, 25, 31], "map": [3, 6, 28, 35, 41, 57, 59, 62, 63, 67, 68, 74, 76, 78, 80], "clf": [3, 4, 5, 6, 9, 12, 22, 24, 25, 30, 32, 33, 39, 43, 47, 48, 54, 56], "scatter": [3, 4, 5, 6, 7, 9, 15, 16, 17, 19, 21, 22, 23, 25, 26, 27, 30, 31, 32, 33, 36, 43, 55, 56, 57], "marker": [3, 6, 15, 17, 19, 21, 22, 23, 25, 27, 33, 36], "o": [3, 6, 13, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 32, 33, 39, 43, 66, 78, 79, 80], "legend": [3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 19, 21, 22, 23, 25, 27, 33, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 51, 53, 54, 56], "loc": [3, 6, 15, 19, 21, 23, 25, 27, 36, 37, 38, 46, 47, 51, 53, 56], "randn": [3, 5, 6, 7, 9, 16, 24, 30, 31, 36, 41, 55, 60, 74], "requires_grad": [3, 7], "adam": [3, 6, 66], "lr": [3, 4, 5, 6, 7, 8, 9, 41, 74], "n_iter": [3, 6, 9], "rang": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 22, 29, 32, 33, 39, 43, 48, 51, 54, 56, 57], "nois": [3, 6, 9, 29, 55, 63], "minu": [3, 6], "becaus": [3, 6, 67, 79, 80], "maxim": [3, 6, 74, 75, 80], "te": [3, 6], "loss_dual_entrop": [3, 6], "append": [3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 29, 32, 33, 54, 55, 76], "detach": [3, 4, 5, 6, 7, 8, 9], "3d": [3, 6, 9, 11, 12, 17, 54], "backward": [3, 4, 5, 6, 7, 8, 9], "zero_grad": [3, 6], "grid": [3, 6, 7, 9], "neg": [3, 6, 56, 60, 61, 66, 67, 71, 73, 75, 78], "xlabel": [3, 6, 7, 9, 20, 26, 30, 33, 43, 48, 51], "ge": [3, 46, 49], "plan_dual_entrop": [3, 6], "20204949002247316": 3, "19": [3, 6, 19, 26, 36, 41, 49, 74, 78, 79, 80], "537859326424936": 3, "471130601770838": 3, "78630029673768": 3, "78160365672431": 3, "03768763550276": 3, "60": [3, 5, 6, 8, 9, 11, 12, 14, 33, 40, 44, 45, 49, 53, 54], "79650345122319": 3, "70": [3, 6, 9, 30, 44, 45, 49], "41": [3, 8, 13, 18, 36, 43, 49, 51, 52, 71, 75, 78, 80], "16085687504519": 3, "80": [3, 6, 9, 12, 15, 33, 44, 45, 49, 80], "28067114456685": 3, "90": [3, 6, 9, 17, 43, 44, 45, 48, 49, 80], "31640394954629": 3, "330515817079544": 3, "110": [3, 6, 9, 44, 49], "33876750614679": 3, "120": [3, 6, 9, 44, 49], "34324289339465": 3, "130": [3, 6, 9, 44, 49, 80], "34577318716776": 3, "140": [3, 6, 9, 44, 49, 80], "347967271525974": 3, "150": [3, 6, 9, 17, 19, 21, 23, 27, 39, 44, 49, 80], "349794525860624": 3, "160": [3, 6, 9, 44, 49, 80], "351357589982854": 3, "170": [3, 6, 9, 44, 49, 80], "35272064732318": 3, "180": [3, 6, 9, 44, 49], "35385994645653": 3, "190": [3, 6, 9, 44, 49], "354793389800555": 3, "plot2d_samples_mat": [3, 21, 37, 38, 46, 47], "zorder": [3, 4, 6, 33, 39], "01": [3, 10, 11, 18, 19, 23, 28, 30, 31, 34, 36, 41, 42, 44, 45, 48, 49, 50, 54, 55, 58, 61, 69, 71, 74], "loss_dual_quadrat": 3, "gq": 3, "plan_dual_quadrat": 3, "0018442196020623663": 3, "569207418409277": 3, "277312141263742": 3, "59853710089798": 3, "5431296827839": 3, "89437073815454": 3, "63900451737935": 3, "04385583241447": 3, "14307080936474": 3, "17700718223219": 3, "19795091106935": 3, "20450678088274": 3, "208513544898345": 3, "21107142700263": 3, "21315024162225": 3, "21520607756294": 3, "21728288575561": 3, "21938549598652": 3, "221383086598074": 3, "22315066273533": 3, "total": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 79], "minut": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57], "443": [3, 10], "plot_dual_ot_pytorch": [3, 10], "jupyt": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 80], "notebook": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 79, 80], "ipynb": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57], "part": [4, 80], "node": [4, 29], "model": [4, 5, 6, 61, 78, 79], "actual": [4, 79], "recov": [4, 9, 74, 79], "proport": [4, 33, 43, 61, 62, 63, 70], "sbm": [4, 33], "accur": 4, "simultan": 4, "sructur": 4, "properti": [4, 9, 76, 79], "sklearn": [4, 32, 33, 76, 80], "manifold": [4, 32, 33, 64, 79], "md": [4, 33, 80], "pylab": [4, 5, 7, 8, 12, 15, 17, 19, 21, 22, 23, 25, 27, 31, 33, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57], "torch": [4, 5, 7, 8, 9, 60, 79, 80], "rng": [4, 7, 20, 24, 26, 32, 41, 74], "42": [4, 5, 6, 17, 18, 20, 24, 26, 33, 38, 49, 67, 78, 80], "def": [4, 5, 6, 7, 9, 17, 20, 22, 24, 26, 29, 31, 32, 33, 49, 56, 60, 76], "get_sbm": 4, "nc": [4, 33], "ratio": 4, "nbpc": 4, "round": [4, 33, 43, 69, 75], "astyp": [4, 5, 15, 16, 17, 20, 24, 26, 32, 33], "zero": [4, 5, 7, 9, 11, 12, 16, 33, 43, 47, 48, 54, 60, 66, 67, 76, 80], "rand": [4, 9, 24, 36, 38, 55, 57, 60], "ey": [4, 33, 60], "05": [4, 6, 12, 18, 25, 26, 36, 41, 44, 45, 49, 57, 60, 61, 62, 66, 71, 74], "ones": [4, 9, 15, 16, 29, 30, 33, 43, 46, 51, 56, 57, 60, 62], "2d": [4, 17, 18, 19, 21, 22, 23, 27, 33, 35, 37, 38, 43, 47, 50, 52, 56, 58, 61, 63, 67, 69, 70, 75, 76, 79, 80], "dissimilar": [4, 32, 33], "precomput": [4, 32, 33, 79], "fit_transform": [4, 32, 33, 62], "plot_graph": [4, 33], "color": [4, 6, 7, 8, 11, 14, 16, 28, 29, 31, 32, 33, 35, 39, 43, 46, 55, 56, 57, 62, 70, 76, 79, 80], "c0": [4, 6, 33, 56, 57], "edgecolor": [4, 16, 33], "cmap": [4, 6, 11, 13, 14, 22, 29, 30, 31, 33, 43, 54, 55, 57], "tab10": [4, 33], "vmax": [4, 22, 29, 33, 43], "subplot": [4, 6, 9, 11, 12, 13, 14, 16, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 33, 36, 37, 38, 43, 47, 48, 49, 54, 55, 56, 57, 70], "axi": [4, 5, 6, 13, 14, 16, 17, 20, 22, 24, 26, 33, 39, 47, 49, 51, 55, 57, 60, 64, 73, 76], "imshow": [4, 13, 14, 19, 20, 21, 23, 24, 26, 27, 30, 31, 33, 37, 43, 46, 47, 49, 55, 57], "nearest": [4, 19, 21, 23, 27, 30, 33, 37, 46, 47, 62], "adjac": 4, "home": [4, 6, 8, 16, 19, 21, 22, 23, 27, 29, 31, 32, 33, 40, 43, 46, 49, 54, 55], "circleci": [4, 6, 8, 16, 19, 21, 22, 23, 27, 29, 31, 32, 33, 40, 43, 46, 49, 54, 55, 80], "lib": [4, 32, 33, 60], "python3": [4, 32, 33], "site": [4, 32, 33], "packag": [4, 32, 33, 61, 76, 79], "_md": [4, 32, 33], "299": [4, 32, 33], "futurewarn": [4, 29, 32, 33], "normalized_stress": [4, 32, 33], "auto": [4, 30, 32, 33, 55], "To": [4, 9, 32, 33, 60, 61, 69, 76, 78, 79], "suppress": [4, 32, 33], "manual": [4, 32, 33], "plot_optim_gromov_pytorch": [4, 10], "81": [4, 49], "userwarn": [4, 6, 8, 16, 19, 21, 22, 23, 27, 31, 33, 40, 43, 46, 49, 54], "colormap": [4, 33], "ignor": [4, 33], "adajac": 4, "diagon": [4, 27, 29, 60, 62], "want": [4, 9, 16, 19, 21, 22, 23, 27, 31, 43, 46, 49, 79, 80], "min_weight_gw": 4, "a2": [4, 11, 12, 14, 16, 54], "nb_iter_max": [4, 5, 8], "min_a": [4, 79], "our": [4, 5, 8, 78, 79, 80], "c1_torch": 4, "c2_torch": 4, "a0": 4, "random_init": 4, "a1_torch": 4, "requires_grad_": [4, 5, 8], "a2_torch": 4, "loss_it": [4, 5, 8], "03d": 4, "no_grad": [4, 5, 7, 8], "grad": [4, 5, 7, 8, 36, 60, 66, 73, 74], "zero_": [4, 5, 7, 8], "proj_simplex": [4, 7, 8], "a1": [4, 11, 12, 14, 16, 54], "a0_est": 4, "loss_iter0": 4, "3028101": 4, "20249103": 4, "49469887": 4, "clear": 4, "noe": 4, "most": [4, 61, 76, 79, 80], "previous": 4, "t_unif": 4, "label_unif": 4, "argmax": [4, 33, 60], "t_est": 4, "label_est": 4, "est": 4, "7760154087782544": 4, "5785554952306825": 4, "7708789474386256": 4, "6510858680019992": 4, "now": [4, 43, 60, 79, 80], "seen": [4, 61, 67, 79], "probabl": [4, 8, 17, 33, 66, 67, 78], "graph_compession_gw": 4, "nb_node": 4, "clamp": 4, "a0_est2": 4, "c0_est2": 4, "loss_iter2": 4, "5e": [4, 14, 22, 31, 32, 56], "vmin": [4, 29, 43], "colorbar": [4, 33, 43], "29162953": 4, "1935312": 4, "51483927": 4, "0x7f7b69733df0": 4, "389": [4, 10, 80], "exempl": [5, 33, 80], "wassersein": [5, 48, 80], "popos": 5, "36": [5, 6, 36, 49, 71, 75, 78, 79], "liutku": [5, 78, 79], "simsekli": [5, 78, 79], "majewski": [5, 78, 79], "durmu": [5, 78, 79], "st\u00f6ter": [5, 78, 79], "nonparametr": [5, 78, 79], "diffus": [5, 78, 79], "4104": [5, 78, 79], "4113": [5, 78, 79], "load": [5, 20, 26, 43], "i1": [5, 15, 17, 20, 24, 26], "imread": [5, 13, 14, 15, 17, 20, 24, 26, 32], "redcross": [5, 13, 15, 17], "png": [5, 13, 14, 15, 17, 32, 39], "i2": [5, 15, 17, 20, 24, 26], "tooth": [5, 13, 17], "sz": [5, 15, 17], "xx": [5, 6, 15], "yy": [5, 6, 15], "meshgrid": [5, 6, 15, 17, 60], "arang": [5, 8, 11, 12, 14, 15, 17, 30, 36, 40, 44, 45, 47, 48, 49, 53, 54, 60, 61], "stack": [5, 15, 17, 33, 60], "32": [5, 6, 10, 15, 36, 49, 64, 66, 78, 79], "x3": [5, 15, 16], "8": [5, 8, 9, 11, 12, 14, 15, 17, 19, 20, 23, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 39, 41, 44, 45, 46, 47, 49, 51, 54, 55, 56, 57, 62, 67, 74, 78, 79], "collect": [5, 11, 12, 32, 54, 61], "pathcollect": [5, 32], "0x7f7b689e2dc0": 5, "devic": [5, 8, 60, 79, 80], "is_avail": [5, 8], "x1_torch": 5, "x2_torch": 5, "1e3": 5, "x_all": 5, "gen": 5, "5e1": 5, "ax": [5, 11, 13, 14, 16, 17, 43, 54, 55, 60, 68, 79], "_update_plot": [5, 9, 17, 56], "funcanim": [5, 9, 17, 56], "gcf": [5, 9, 11, 54, 56], "interv": [5, 9, 17, 56, 60], "repeat_delai": [5, 9, 17, 56], "2000": [5, 8, 9, 17, 56], "onc": [5, 9, 17, 56], "loop": [5, 9, 17, 43, 56, 62], "reflect": [5, 9, 17, 56], "x3_torch": 5, "xbinit": 5, "500": [5, 6, 7, 9, 20, 26, 51, 60, 66, 73], "16": [5, 6, 8, 16, 19, 26, 33, 36, 49, 60, 64, 71, 78, 79], "xbary_torch": 5, "296": [5, 10, 80], "plot_sliced_wass_grad_flow_pytorch": [5, 10], "nn": [6, 9, 80], "nvisu": [6, 49], "300": [6, 33], "ax_bound": 6, "mlp": [6, 9], "__init__": [6, 9, 62, 76], "self": [6, 9, 62, 76], "super": [6, 9], "fc1": [6, 9], "fc2": [6, 9], "relu": [6, 9], "heavisid": [6, 9], "fn": [6, 9], "forward": [6, 9, 79], "ravel": [6, 29, 56, 57, 73], "doubl": [6, 43], "005": [6, 57], "n_batch": 6, "iperm": 6, "randint": [6, 20, 26, 29], "ipermt": 6, "xsi": 6, "xti": 6, "2393484646308117": 6, "642282658482282": 6, "17414737436737": 6, "163954594319062": 6, "568419626220432": 6, "301421042321348": 6, "27": [6, 33, 36, 49, 61, 62, 78, 80], "83083778430649": 6, "87651959359454": 6, "21879930758375": 6, "33": [6, 36, 40, 49, 61, 78, 79], "4451848716634": 6, "85373096612886": 6, "34720398072969": 6, "710736296778066": 6, "41460794588291": 6, "427335276898006": 6, "95647523380266": 6, "63352357746055": 6, "147411707619916": 6, "38045016076242": 6, "20851722920263": 6, "0483252573866": 6, "210": [6, 80], "920184012645834": 6, "220": [6, 80], "28786346616246": 6, "230": 6, "595481968365874": 6, "240": [6, 80], "74007551169939": 6, "250": 6, "87532094924726": 6, "260": [6, 80], "16038650643604": 6, "270": 6, "51952191315499": 6, "280": [6, 80], "21124977745394": 6, "290": [6, 80], "776473454024725": 6, "236113046850186": 6, "310": [6, 80], "17877897507476": 6, "320": [6, 12], "67523008941068": 6, "330": 6, "47856020676345": 6, "340": [6, 80], "20515530483855": 6, "350": [6, 80], "31842178792488": 6, "360": [6, 80], "41746085650228": 6, "370": 6, "49945342906269": 6, "380": [6, 80], "101409600220826": 6, "390": 6, "95709453591492": 6, "400": [6, 80], "351964349897315": 6, "410": [6, 80], "097523666610016": 6, "420": 6, "76370892349192": 6, "430": 6, "03460532012972": 6, "440": [6, 53, 58], "117010646149254": 6, "450": 6, "63143924731369": 6, "460": 6, "3493275492541": 6, "470": 6, "85056949023975": 6, "480": 6, "673259773400964": 6, "490": 6, "50129693277133": 6, "691373671209874": 6, "510": 6, "2506577228827": 6, "520": 6, "48779395563362": 6, "530": 6, "79890479507191": 6, "540": 6, "57060888796476": 6, "550": 6, "5638137066962": 6, "560": 6, "46562709782847": 6, "570": 6, "40687844211682": 6, "580": [6, 48, 50], "2092261947815": 6, "590": 6, "24178255185049": 6, "600": 6, "83767190886772": 6, "610": 6, "091495197788845": 6, "620": 6, "2269199634254": 6, "630": 6, "79958582295997": 6, "640": 6, "25712095782331": 6, "650": [6, 49, 50], "693215050027426": 6, "660": 6, "68384667580914": 6, "670": 6, "19213769075985": 6, "680": 6, "91790237056651": 6, "690": 6, "30587890071249": 6, "700": 6, "76524124674425": 6, "710": 6, "096652875261434": 6, "720": 6, "640525064634964": 6, "730": [6, 69, 78, 79], "63630669836857": 6, "740": 6, "22361859806151": 6, "750": 6, "922494326811055": 6, "760": 6, "97476232035201": 6, "770": 6, "234520256435054": 6, "780": 6, "16928305689463": 6, "790": 6, "25788596475691": 6, "800": [6, 8, 41, 42], "23397446378046": 6, "810": 6, "1721306311481": 6, "820": 6, "247867302837534": 6, "830": 6, "96014658076261": 6, "840": 6, "03767527010373": 6, "850": 6, "030040026953046": 6, "860": 6, "1448266201477": 6, "870": 6, "932275800816825": 6, "880": 6, "14373204690507": 6, "890": 6, "26008919084346": 6, "900": 6, "517689779489814": 6, "910": 6, "39905188612141": 6, "920": 6, "460772222267416": 6, "930": 6, "018913815021016": 6, "940": 6, "499518213813715": 6, "950": 6, "96986872327708": 6, "960": 6, "024141665861244": 6, "970": [6, 43, 50], "88576653718013": 6, "980": 6, "428442172282146": 6, "990": 6, "10248001587743": 6, "23": [6, 7, 9, 36, 48, 49, 61, 78, 79, 80], "52222222222222": [6, 7, 9], "nv": [6, 56], "xl": 6, "linspac": [6, 11, 16, 29, 48, 54, 60], "yl": 6, "xg": [6, 9], "concaten": [6, 7, 16, 24, 36, 39, 55, 57, 60, 71], "wxg": 6, "exp": [6, 43, 60, 64, 74, 79], "iv": [6, 56], "gg": [6, 30], "wt": [6, 62, 74], "reshap": [6, 20, 24, 26, 29, 32, 36, 40, 44, 45, 48, 49, 53, 55, 56, 60, 61, 69, 71], "pcolormesh": 6, "green": [6, 8], "sourec": 6, "plot_stoch_continuous_ot_pytorch": [6, 10], "159": [6, 49], "handl": [6, 8, 79], "quadmesh": 6, "stabl": [6, 60, 79, 80], "legend_guid": 6, "custom": 6, "handler": 6, "173": [6, 49], "187": [6, 49], "658": [6, 10], "mix": [7, 8], "word": [7, 79], "suppos": [7, 61, 79], "s_k": 7, "w_k": [7, 79], "belong": [7, 31, 55, 71], "delta_k": 7, "observ": [7, 61, 63], "done": [7, 39, 43, 79, 80], "pot": [7, 8, 13, 19, 31, 32, 41, 42, 55, 57, 59, 60, 76, 80], "nt1": 7, "ns1": 7, "xs1": [7, 22], "xs2": [7, 22], "correspond": [7, 8, 27, 43, 64, 66, 68, 71, 79, 80], "s_1": 7, "s_2": 7, "0x7f7c55c832b0": 7, "h2": [7, 66], "m2": [7, 47, 48], "2e": [7, 40, 45, 56], "rate": [7, 66, 74], "niter": 7, "get_loss": 7, "mv": 7, "squar": [7, 32, 43, 47, 48, 60, 62, 64, 66, 72, 73, 76, 78, 79, 80], "mixtur": 7, "semilogi": [7, 9], "09980706": 7, "90019294": 7, "dot": [7, 11, 12, 16, 22, 24, 31, 38, 43, 54, 55, 60, 76], "c3": [7, 39], "0x7f7b887bbb50": 7, "541": [7, 10], "plot_unmix_optim_torch": [7, 10], "remain": 8, "framework": [8, 33, 80], "ncourti": [8, 13, 31, 32], "irisa": [8, 13, 29, 30, 31, 32, 46, 55], "fr": [8, 11, 12, 13, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57], "mpl": 8, "make_1d_gauss": [8, 11, 12, 14, 40, 44, 45, 48, 49, 53, 54], "gauss": [8, 40, 44, 45, 48, 53, 62], "red": [8, 20, 26, 30, 43], "to_rgb": 8, "blue": [8, 13, 20, 26, 30, 43], "dtype": [8, 11, 12, 14, 32, 40, 44, 45, 48, 49, 51, 53, 54, 60, 61], "gaussian": [8, 9, 11, 25, 26, 29, 40, 44, 45, 48, 49, 53, 54, 60, 62, 63, 76, 79], "mean": [8, 11, 12, 14, 40, 44, 45, 48, 49, 51, 53, 54, 60, 61, 63, 64, 67, 79, 80], "std": [8, 11, 12, 14, 30, 40, 44, 45, 48, 49, 51, 53, 54, 60, 63, 66, 80], "enforc": [8, 79], "x_torch": 8, "a_torch": 8, "b_torch": 8, "figsiz": [8, 12, 13, 14, 16, 17, 19, 20, 21, 23, 24, 26, 27, 29, 32, 36, 40, 41, 44, 45, 47, 49, 53, 54], "onto": [8, 19, 21, 23, 62, 66, 73, 79], "curv": 8, "everi": [8, 33, 66, 78], "lw": [8, 14, 43], "evolut": [8, 33, 61, 66, 78], "fontsiz": [8, 14, 29, 30, 33, 43, 56], "solver_1d": 8, "than": [8, 43, 60, 66, 79, 80], "revers": [8, 60], "throw": [8, 80], "futur": [8, 80], "releas": [8, 55, 78, 79], "mt": 8, "transpos": [8, 80], "ndim": 8, "trigger": 8, "aten": 8, "src": 8, "nativ": 8, "tensorshap": 8, "cpp": 8, "3277": 8, "cw": 8, "contigu": 8, "tw": 8, "bary_torch": 8, "instant": 8, "329": [8, 10], "plot_wass1d_torch": [8, 10], "fit": [9, 24, 26, 27, 32, 61, 62, 67, 79], "g_": 9, "realist": 9, "drawn": [9, 63, 70], "mu_n": 9, "indistinguish": 9, "mu_d": 9, "end": [9, 29, 33, 67, 71, 79], "arjovsky2017": 9, "access": [9, 78], "cannot": [9, 27, 62, 79, 80], "lare": 9, "network": [9, 78, 79, 80], "genevay2018": 9, "studi": 9, "fatras2019": 9, "arjovski": 9, "chintala": 9, "bottou": 9, "juli": [9, 80], "adversari": [9, 79], "214": 9, "223": 9, "genevai": [9, 41, 61, 74, 78, 79], "aud": [9, 61, 78], "fatra": [9, 41, 46, 59, 78], "zine": 9, "gribonv": 9, "2020": [9, 14, 61, 69, 78, 79, 80], "june": 9, "asymptot": 9, "23nd": 9, "108": [9, 49, 80], "sigma": [9, 22, 24, 25, 26, 29, 62, 63, 76], "n_dim": 9, "n_featur": [9, 62, 76], "get_data": 9, "n_sampl": [9, 16, 31, 32, 55, 62], "angl": [9, 24], "cat": 9, "co": [9, 24, 36, 47, 78], "sin": [9, 24, 29, 36, 47], "0x7f7c6c6baa60": 9, "fc3": 9, "rmsprop": 9, "00019": 9, "ep": [9, 14, 32, 60, 67], "size_batch": 9, "stati": 9, "n_visu": 9, "xnvisu": 9, "xvisu": 9, "ab": [9, 30, 31, 48, 60, 73, 79], "xn": 9, "xd": 9, "smapl": 9, "compt": 9, "del": 9, "9009847640991211": 9, "09425365179777145": 9, "0440279059112072": 9, "033836282789707184": 9, "0556793175637722": 9, "04680415615439415": 9, "0441826693713665": 9, "03215612843632698": 9, "04039888083934784": 9, "021087544038891792": 9, "050437960773706436": 9, "03543882817029953": 9, "06760019809007645": 9, "048370376229286194": 9, "04501226916909218": 9, "07568738609552383": 9, "023603428155183792": 9, "023437529802322388": 9, "02721334807574749": 9, "1053805723786354": 9, "ivisu": 9, "75": [9, 49, 80], "125": [9, 12, 39, 49], "175": [9, 49, 80], "199": [9, 49, 69, 80], "xtick": [9, 12, 19, 21, 23, 27, 30, 48, 56, 57], "ytick": [9, 12, 19, 21, 23, 27, 30, 57], "xlim": [9, 32, 43, 48], "ylim": [9, 32, 48], "0x7f7b68a5c5e0": 9, "871": [9, 10, 25, 28], "plot_wass2_gan_torch": [9, 10], "04": [10, 19, 25, 26, 30, 31, 34, 36, 41, 44, 45, 49, 58, 74], "526": 10, "execut": [10, 18, 28, 34, 42, 50, 52, 58, 79, 80], "auto_examples_backend": 10, "file": [10, 18, 28, 34, 35, 39, 42, 50, 52, 58, 79, 80], "flow": [10, 35, 63, 76, 78, 79, 80], "mb": [10, 18, 28, 34, 42, 50, 52, 58], "continu": [10, 33, 35, 61, 67, 74, 79], "minibatch": [10, 35, 74, 79], "00": [10, 18, 19, 22, 25, 26, 28, 30, 31, 34, 42, 49, 50, 52, 55, 58, 71], "unmix": [10, 33, 35, 61, 66, 76, 78, 79, 80], "wassersyein": [11, 54], "unic": [11, 12, 19, 20, 21, 22, 24, 25, 26, 27, 36, 44, 45, 46, 47, 48, 67], "plt": [11, 13, 14, 16, 17, 20, 24, 26, 29, 32], "mpl_toolkit": [11, 12, 31, 54, 55], "mplot3d": [11, 12, 31, 54, 55], "axes3d": [11, 12, 31, 54, 55], "noqa": [11, 12, 31, 54, 55], "polycollect": [11, 12, 54], "vstack": [11, 12, 14, 30, 54], "n_distribut": [11, 12, 14, 54], "dist0": [11, 12, 14, 54], "l2bari": [11, 12, 54], "bary_l2": [11, 12, 54], "bary_wass": [11, 12, 54], "ax1": [11, 30, 31, 32, 55], "ax2": [11, 30, 31, 32, 55], "tight_layout": [11, 12, 13, 14, 16, 17, 19, 20, 21, 23, 25, 26, 27, 30, 33, 36, 43, 47, 48, 54], "num": [11, 14, 60], "black": [11, 33, 70], "set_titl": [11, 14, 16], "n_alpha": 11, "alpha_list": 11, "b_l2": [11, 54], "b_wass": [11, 54], "cm": [11, 13, 29, 54], "get_cmap": [11, 54], "viridi": [11, 29, 54], "vert": [11, 54], "z": [11, 33, 40, 54, 59, 61, 73, 76, 78, 79], "enumer": [11, 14, 29, 33, 48, 51, 54], "zip": [11, 14, 17, 33, 35, 54, 78], "add_subplot": [11, 17, 31, 54, 55], "poli": [11, 54], "facecolor": [11, 39, 54], "set_alpha": [11, 54], "add_collection3d": [11, 54], "zdir": [11, 54], "set_xlabel": [11, 54], "set_xlim3d": [11, 54], "set_ylabel": [11, 14, 43, 54], "set_ylim3d": [11, 54], "set_zlabel": [11, 54], "set_zlim3d": [11, 54], "479": [11, 18], "plot_barycenter_1d": [11, 18], "standard": [12, 60, 63, 66, 76, 80], "scienc": [12, 20, 26, 49, 62, 68, 78, 79], "343": [12, 80], "cvx": 12, "bary_wass2": 12, "interior": [12, 79], "0033631324768066406": 12, "primal": [12, 67, 74], "feasibl": [12, 67], "gap": 12, "1700": 12, "336700337": 12, "006776453137633": 12, "006776453137634": 12, "9932238647293": 12, "6700527543": 12, "004018712867874": 12, "4301142633": 12, "26594150092": 12, "001172775061627": 12, "7599932455028": 12, "3378536968897": 12, "0004375137005385": 12, "6422331807989": 12, "1468420566358": 12, "000232669046734": 12, "0002326690467341": 12, "5016999460893": 12, "09381703231432": 12, "430121674303e": 12, "7035962305812": 12, "0577787025717": 12, "321227838882e": 12, "321227838879e": 12, "3087841864401": 12, "05266249477204": 12, "990900379202e": 12, "990900379201e": 12, "6520472013245": 12, "0452605440552": 12, "305442046817e": 12, "30544204679e": 12, "305442046812e": 12, "7073953304073": 12, "305442046809e": 12, "04237597591383": 12, "290148391578e": 12, "290148391587e": 12, "290148391592e": 12, "6941812711476": 12, "290148391602e": 12, "041522849321": 12, "182864875418e": 12, "182864875486e": 12, "182864875459e": 12, "508455204664": 12, "182864875475e": 12, "04129461872827": 12, "626786380237e": 12, "626786380498e": 12, "626786380591e": 12, "7101651574148": 12, "626786380499e": 12, "04113032448919": 12, "53975423377e": 12, "539754239097e": 12, "539754238957e": 12, "627932209399": 12, "539754244458e": 12, "04108867636364": 12, "193221588102e": 12, "08": [12, 31, 41, 42, 44, 45, 49, 60, 62, 70], "193221525716e": 12, "193221527893e": 12, "6843453372866": 12, "193221744194e": 12, "04106859618425": 12, "888204557375e": 12, "888204466916e": 12, "888204464386e": 12, "6673444754752": 12, "888205403e": 12, "04106214175154": 12, "676851456731e": 12, "676853754852e": 12, "676853775137e": 12, "7281705629265": 12, "676886118764e": 12, "04105958648699": 12, "50115020171e": 12, "501137125386e": 12, "501137136515e": 12, "4140221641718": 12, "501151490466e": 12, "04105916265115": 12, "110591805675e": 12, "110570750049e": 12, "110570733855e": 12, "699900032435": 12, "110619438659e": 12, "04105870073191": 12, "770990264961e": 12, "776274527894e": 12, "776273877079e": 12, "4996170321381": 12, "772744208187e": 12, "04105859774172": 12, "536197932746e": 12, "538885612866e": 12, "538885001653e": 12, "7515062666584": 12, "537834631178e": 12, "04105851682752": 12, "743041081423e": 12, "740002462354e": 12, "740001907827e": 12, "5949277749653": 12, "73465642858e": 12, "04105850033226": 12, "794231989236e": 12, "747423074042e": 12, "747429829833e": 12, "7557701998162": 12, "741755335329e": 12, "04105849090303": 12, "termin": [12, 36], "successfulli": 12, "041058": 12, "6268677711486816": 12, "004346370697021484": 12, "006776466288967": 12, "9932238515788": 12, "006776466288968": 12, "6649255808": 12, "004036918865497": 12, "4272973099314": 12, "34716170111": 12, "001219232687069": 12, "7496986855994": 12, "3243835647407": 12, "0003837422984427": 12, "6926882608286": 12, "1361719397492": 12, "0001070128410182": 12, "7643889137854": 12, "07581952832515": 12, "0001001275033711": 12, "000100127503371": 12, "07058704837782": 12, "07347394936348": 12, "550897507833e": 12, "550897507832e": 12, "5761172484836": 12, "05555077655044": 12, "557124125502e": 12, "557124125495e": 12, "8535925441154": 12, "557124125503e": 12, "0443981466022": 12, "611995628362e": 12, "611995628359e": 12, "611995628375e": 12, "6002277331592": 12, "611995628377e": 12, "04283007762151": 12, "590393750322e": 12, "59039375014e": 12, "590393750355e": 12, "822148653339": 12, "590393750361e": 12, "04192322976247": 12, "299929287269e": 12, "299929283142e": 12, "299929287457e": 12, "9017467938803": 12, "299929287509e": 12, "04170825633295": 12, "117560215317e": 12, "117560474123e": 12, "117560204434e": 12, "9970399692198": 12, "117560202277e": 12, "04168179329766": 12, "559775055372e": 12, "14": [12, 19, 26, 33, 36, 38, 43, 49, 55, 60, 62, 66, 78, 79], "561428379782e": 12, "559760203488e": 12, "9999499685222": 12, "559752674386e": 12, "04168169240444": 12, "041682": 12, "1766772270202637": 12, "0009417533874511719": 12, "006774675520687": 12, "9932256422636": 12, "6956034733": 12, "002048208707529": 12, "7343095368176": 12, "213991622021": 12, "0002697365474824": 12, "8839403501148": 12, "5059383903968": 12, "832109993819e": 12, "832109993818e": 12, "7601171076044": 12, "2339657807265": 12, "437682932226e": 12, "6663448297416": 12, "1471256246326": 12, "134983216297e": 12, "134983216299e": 12, "5553643816468": 12, "1181584941169": 12, "342312725774e": 12, "342312725781e": 12, "723813357168": 12, "1006387519744": 12, "078561231268e": 12, "078561231235e": 12, "078561231266e": 12, "8033142552548": 12, "09474734646262": 12, "966870958108e": 12, "966870953918e": 12, "966870953989e": 12, "7525479178458": 12, "966870954248e": 12, "09354342735761": 12, "199895240123e": 12, "199895384126e": 12, "199895235332e": 12, "9984019849396": 12, "199895236104e": 12, "0931036778586": 12, "1017793609e": 12, "101768735229e": 12, "101780822184e": 12, "9999499563876": 12, "101780420221e": 12, "0931027446646": 12, "093103": 12, "0719966888427734": 12, "nbm": 12, "len": [12, 14, 16, 29, 32, 33, 43, 73], "nbm2": 12, "966": [12, 18], "plot_barycenter_lp_vs_entrop": [12, 18], "design": [13, 31, 32, 41, 49, 55, 57, 71, 79, 80], "how": [13, 25, 31, 32, 33, 41, 43, 48, 55, 57, 61, 80], "pathlib": [13, 14, 20, 24, 26, 32], "four": [13, 32], "this_fil": [13, 14, 20, 24, 26, 32], "realpath": [13, 14, 20, 24, 26, 32], "__file__": [13, 14, 20, 24, 26, 32], "data_path": [13, 14, 20, 24, 26, 32], "join": [13, 14, 20, 24, 26, 32, 60, 78], "parent": [13, 14, 20, 24, 26, 32], "f1": [13, 14], "f2": [13, 14], "f3": 13, "heart": [13, 14, 17], "f4": 13, "duck": [13, 14, 15], "nb_imag": 13, "corner": [13, 79], "bilinear": [13, 43], "v1": 13, "v2": 13, "v3": 13, "v4": 13, "fig": [13, 14, 16, 17, 31, 32, 47, 55], "suptitl": [13, 29], "004": 13, "tx": 13, "ty": 13, "tmp1": 13, "tmp2": 13, "elif": [13, 33], "call": [13, 41, 55, 57, 61, 62, 67, 68, 76, 79, 80], "convolutional_barycenter2d": [13, 14], "014": [13, 18], "plot_convolutional_barycent": [13, 18], "janati": [14, 53, 54, 59, 61, 78, 79], "gramfort": [14, 59, 61, 78, 79], "37th": [14, 61, 78, 79], "119": [14, 49, 61, 78, 79], "4692": [14, 61, 78, 79], "4701": [14, 61, 78, 79], "hicham": [14, 53, 54, 59, 78], "janati100": 14, "gmail": [14, 19, 20, 21, 25, 26, 27, 31, 32, 40, 41], "barycenter_debias": 14, "convolutional_barycenter2d_debias": 14, "epsilon": [14, 31, 40, 53, 60, 61, 66, 79, 80], "bar": [14, 71], "bars_debias": 14, "indianr": 14, "gold": [14, 60], "sharei": [14, 30], "bar_debias": 14, "varepsilon": 14, "3f": [14, 22, 56], "asarrai": 14, "displai": [14, 21, 27, 43, 61], "img": [14, 20, 24, 26, 32], "grei": [14, 33], "bars_sinkhorn": 14, "7e": 14, "all_bar": 14, "jj": 14, "ax_row": 14, "ii": [14, 16], "set_xtick": [14, 17], "set_ytick": [14, 17], "spine": 14, "set_vis": 14, "bottom": [14, 43], "324": [14, 18], "plot_debiased_barycent": [14, 18], "vivien": [15, 73, 78], "iip": 15, "ist": 15, "kyoto": 15, "ac": 15, "jp": 15, "eduardo": [15, 16, 59], "fernand": [15, 16, 59], "montesuma": [15, 16, 59], "universit": [15, 16], "saclai": [15, 16], "measures_loc": [15, 16, 61, 67], "measures_weight": [15, 16, 61, 67], "x_init": [15, 16, 61, 67], "free_support_barycent": [15, 61, 79, 80], "lower": [15, 19, 23, 43], "free_support_sinkhorn_barycent": [15, 16], "682": [15, 18], "plot_free_support_barycent": [15, 18], "understood": 16, "cloud": [16, 32], "linalg": [16, 29, 31, 55, 60], "x4": 16, "multivariate_norm": 16, "a3": 16, "a4": 16, "steelblu": 16, "set_xlim": 16, "set_ylim": 16, "float32": 16, "xb_init": 16, "subplot2grid": [16, 32], "517": [16, 19, 21, 22, 23, 27, 31, 43, 46, 49], "did": [16, 19, 21, 22, 23, 27, 31, 43, 46, 49, 80], "increas": [16, 19, 21, 22, 23, 27, 31, 43, 46, 49, 69], "485": 16, "runtimewarn": [16, 54], "overflow": [16, 54, 80], "encount": [16, 54], "divid": [16, 43, 54], "nx": [16, 29, 60, 80], "kp": 16, "492": 16, "484": 16, "ktransposeu": 16, "672": [16, 18], "plot_free_support_sinkhorn_barycent": [16, 18], "delon": [17, 67, 78], "saint": [17, 67, 78], "dizier": [17, 67, 78], "subspac": [17, 64, 67, 78, 79], "2105": [17, 67, 78], "09755": [17, 67, 78], "eloi": [17, 59], "tangui": [17, 59, 66], "sub_sample_factor": 17, "i3": 17, "uu": 17, "vv": 17, "x_list": [17, 67], "im": [17, 24, 26, 43], "a_list": [17, 67], "p1": [17, 22, 39], "p2": [17, 22, 39], "p3": 17, "p_list": [17, 67], "n_samples_bari": [17, 67], "visualis": 17, "x_visu": 17, "xi": 17, "view_init": 17, "azim": 17, "set_ztick": 17, "generalized_free_support_barycent": 17, "elev": 17, "_init": 17, "init_func": 17, "frame": 17, "136": [17, 49], "blit": 17, "394": [17, 18, 80], "plot_generalized_free_support_barycent": [17, 18], "02": [18, 19, 25, 26, 28, 31, 36, 41, 42, 44, 45, 49, 55, 58, 69, 74], "52": [18, 49, 80], "531": 18, "auto_examples_barycent": 18, "convolut": [18, 35, 59, 61, 78, 80], "demo": [18, 35, 58, 61, 63, 67, 76, 79], "debias": [18, 35, 59, 61, 63, 76, 78, 79, 80], "introduc": [19, 20, 21, 22, 23, 25, 27, 79, 80], "otda": [19, 22, 23, 28, 35, 62, 63, 76, 80], "stanisla": [19, 20, 21, 25, 26, 27, 59, 78], "chambon": [19, 20, 21, 25, 26, 27, 59, 78], "stan": [19, 20, 21, 25, 26, 27], "3gauss": [19, 21, 23, 27], "3gauss2": [19, 21, 23, 27], "ot_emd": [19, 20, 21, 23, 26, 43, 79], "da": [19, 20, 21, 22, 23, 24, 25, 26, 27, 59, 79, 80], "emdtransport": [19, 20, 21, 23, 26, 79, 80], "ot_sinkhorn": [19, 20, 21, 22, 23, 26, 43], "sinkhorntransport": [19, 20, 21, 22, 23, 26, 27, 79], "reg_": [19, 20, 21, 22, 23, 26, 27, 62], "ot_lpl1": [19, 21], "sinkhornlpl1transport": [19, 21, 79, 80], "reg_cl": [19, 21, 62], "1e0": [19, 21, 25, 26, 36], "l1l2": [19, 62], "ot_l1l2": 19, "sinkhornl1l2transport": [19, 79], "2e0": 19, "transp_xs_emd": [19, 20, 21, 23, 26], "transform": [19, 20, 21, 23, 25, 27, 62, 74, 76, 79], "transp_xs_sinkhorn": [19, 20, 21, 23, 26], "transp_xs_lpl1": [19, 21], "transp_xs_l1l2": 19, "810186e": 19, "000000e": [19, 25, 26, 30, 31, 49], "256314e": 19, "347882e": 19, "553872e": 19, "014338e": 19, "201266e": 19, "419755e": 19, "954549e": 19, "058982e": 19, "978929e": 19, "934413e": 19, "040903e": 19, "013537e": 19, "923959e": 19, "433942e": 19, "03": [19, 25, 30, 31, 34, 36, 39, 40, 41, 44, 45, 49, 50, 69, 74], "045468e": 19, "916963e": 19, "649385e": 19, "995736e": 19, "914801e": 19, "129245e": 19, "162278e": 19, "911179e": 19, "894990e": 19, "621664e": 19, "910308e": 19, "557196e": 19, "705649e": 19, "906372e": 19, "064711e": 19, "936108e": 19, "905216e": 19, "068224e": 19, "156128e": 19, "903163e": 19, "078641e": 19, "052830e": 19, "901400e": 19, "272422e": 19, "763059e": 19, "900308e": 19, "747659e": 19, "092232e": 19, "899199e": 19, "840477e": 19, "109223e": 19, "897764e": 19, "563038e": 19, "435286e": 19, "897371e": 19, "069803e": 19, "927183e": 19, "18": [19, 26, 29, 30, 36, 41, 49, 69, 74, 78, 79], "896891e": 19, "529570e": 19, "798319e": 19, "896236e": 19, "456480e": 19, "554300e": 19, "895477e": 19, "003509e": 19, "588558e": 19, "param_img": [19, 23], "coupling_": [19, 21, 22, 23, 27, 62], "nemdtransport": [19, 21, 23, 27], "nsinkhorntransport": [19, 21, 23, 27], "nsinkhornlpl1transport": [19, 21], "nsinkhornl1l2transport": 19, "transp": [19, 21, 23, 27, 57], "634": [19, 28, 31, 34], "plot_otda_class": [19, 28], "transfer": [20, 79], "ferradan": [20, 26, 49, 62, 68, 78, 79], "papadaki": [20, 26, 49, 62, 68, 78, 79], "peyr": [20, 26], "aujol": [20, 26, 49, 62, 68, 78, 79], "2014": [20, 26, 49, 61, 62, 67, 68, 78, 79], "1853": [20, 26, 49, 62, 68, 78, 79], "1882": [20, 26, 49, 62, 68, 78, 79], "im2mat": [20, 24, 26, 32], "pixel": [20, 24, 32], "per": [20, 24, 26, 32, 67], "mat2im": [20, 24, 26], "minmax": [20, 24, 26], "clip": [20, 24, 26, 60], "ocean_dai": [20, 24, 26], "jpg": [20, 24, 26], "256": [20, 24, 26], "ocean_sunset": [20, 24, 26], "idx1": [20, 26], "idx2": [20, 26], "ylabel": [20, 26, 30, 33, 43, 51, 57], "predict": [20, 66], "out": [20, 25, 62, 72], "transp_xt_emd": 20, "inverse_transform": [20, 24, 62, 79], "transp_xt_sinkhorn": 20, "i1t": [20, 24], "i2t": [20, 24], "373": [20, 28, 80], "plot_otda_color_imag": [20, 28], "quantiti": [21, 27, 33], "greater": [21, 27, 80], "coeffici": [21, 27, 33, 61, 66, 67, 68, 71], "visual": [21, 27, 43, 44, 45], "understand": [21, 27], "n_samples_sourc": [21, 27], "n_samples_target": [21, 27], "216": [21, 28], "plot_otda_d2": [21, 28], "ievgen": [22, 23, 59, 61, 62, 78], "redko": [22, 23, 59, 61, 62, 78], "univ": [22, 23, 56, 57], "st": [22, 23, 64], "etienn": [22, 23], "1985": 22, "dec1": 22, "dec2": 22, "pt": 22, "dect": 22, "ys1": 22, "2gauss_prop": 22, "bia": [22, 25, 26, 62], "ys2": 22, "all_xr": 22, "all_yr": 22, "plot_ax": 22, "dec": 22, "name": [22, 60, 66, 76, 78, 79], "set1": 22, "2f": [22, 43], "equal": [22, 39, 47, 60, 71], "85": [22, 49, 80], "046431138906241": 22, "129455496299416": 22, "print_g": 22, "independ": [22, 79], "jcpottransport": 22, "ws1": 22, "proportions_": [22, 62], "log_": [22, 62], "d2": 22, "ws2": 22, "prop": [22, 69], "err": [22, 31, 44, 45, 55], "069551e": 22, "h_re": 22, "1f": 22, "398": [22, 28], "plot_otda_jcpot": [22, 28], "ot_emd_laplac": 23, "emdlaplacetransport": 23, "reg_lap": [23, 62], "reg_src": [23, 62], "transp_xs_emd_laplac": 23, "nemdlaplacetransport": 23, "189": [23, 28, 49, 80], "plot_otda_laplacian": [23, 28], "anglet": 24, "line2d": 24, "0x7f7c55c80fa0": 24, "ae": 24, "ot_mapping_linear": [24, 25, 26, 79], "xst": 24, "lineartransport": [24, 79], "invers": [24, 56, 60, 62, 67, 71], "889": [24, 28], "plot_otda_linear_map": [24, 28], "mappingtransport": [25, 26, 79], "perrot": [25, 26, 59, 62, 78, 79], "habrard": [25, 26, 62, 78, 79], "xs_new": 25, "transp_xs_linear": 25, "transp_xs_linear_new": 25, "ot_mapping_gaussian": [25, 26], "transp_xs_gaussian": 25, "transp_xs_gaussian_new": 25, "delta": [25, 26, 71], "986844e": 25, "972764e": 25, "531477e": 25, "972389e": 25, "461658e": 25, "972245e": 25, "624025e": 25, "972160e": 25, "117504e": 25, "972106e": 25, "373173e": 25, "972080e": 25, "562692e": 25, "003857e": 25, "958192e": 25, "140527e": 25, "955664e": 25, "387672e": 25, "954245e": 25, "587321e": 25, "953256e": 25, "500806e": 25, "952519e": 25, "864201e": 25, "951984e": 25, "351734e": 25, "951585e": 25, "009586e": 25, "951268e": 25, "023501e": 25, "951019e": 25, "311744e": 25, "950798e": 25, "579922e": 25, "bari": [25, 29], "plot_otda_map": [25, 28], "image_emd": 26, "image_sinkhorn": 26, "x1tl": 26, "image_mapping_linear": 26, "x1tn": 26, "image_mapping_gaussian": 26, "797245e": 26, "758014e": 26, "182822e": 26, "757026e": 26, "620752e": 26, "756521e": 26, "875691e": 26, "756218e": 26, "725224e": 26, "756015e": 26, "153553e": 26, "755868e": 26, "348118e": 26, "755759e": 26, "234582e": 26, "755673e": 26, "893582e": 26, "755604e": 26, "942771e": 26, "755547e": 26, "206000e": 26, "755500e": 26, "695056e": 26, "755460e": 26, "307154e": 26, "755426e": 26, "944208e": 26, "755395e": 26, "715960e": 26, "755369e": 26, "515613e": 26, "755345e": 26, "367864e": 26, "755324e": 26, "197885e": 26, "755305e": 26, "071067e": 26, "755303e": 26, "898122e": 26, "842001e": 26, "780145e": 26, "358084e": 26, "778490e": 26, "296544e": 26, "777841e": 26, "648247e": 26, "777495e": 26, "948923e": 26, "777284e": 26, "184075e": 26, "777135e": 26, "396988e": 26, "777027e": 26, "059322e": 26, "776945e": 26, "619816e": 26, "776880e": 26, "672789e": 26, "776827e": 26, "971430e": 26, "399": [26, 28], "plot_otda_mapping_colors_imag": [26, 28], "ot_sinkhorn_un": 27, "transp_xs_sinkhorn_un": 27, "ot_sinkhorn_semi": 27, "transp_xs_sinkhorn_semi": 27, "labal": 27, "modifi": 27, "infinit": [27, 62], "larg": [27, 41, 62, 69, 74, 78, 79, 80], "daili": 27, "element": [27, 29, 43, 60, 61, 62, 66, 67, 71], "fill": [27, 53, 60, 62], "recal": [27, 71], "cost_": [27, 62], "semisupervis": 27, "exhibit": [27, 62], "nunsupervis": 27, "nsemi": 27, "556": [27, 28], "plot_otda_semi_supervis": [27, 28], "525": 28, "auto_examples_domain": 28, "multi": [28, 35, 60, 61, 62, 63, 76, 78, 79, 80], "shift": [28, 35, 61, 62, 63, 76, 78, 79, 80], "laplacian": [28, 35, 59, 62, 63, 76, 78, 79], "unsupervis": [28, 35, 62, 63, 76, 79], "semi": [28, 35, 62, 63, 71, 73, 74, 76, 78, 79, 80], "supervis": [28, 35, 61, 62, 63, 76, 78, 79, 80], "networkx": [29, 33], "csgraph": 29, "shortest_path": 29, "mcol": 29, "fgw_barycent": [29, 79], "find_thresh": 29, "inf": [29, 62], "sup": 29, "trick": [29, 69, 79], "find": [29, 32, 41, 60, 67, 68, 78, 79], "adequ": 29, "sai": 29, "connect": [29, 33], "tthe": 29, "linesearch": [29, 68, 80], "reconstruct": [29, 33, 66, 73, 80], "adjenc": 29, "n_node": [29, 33], "begin": [29, 71], "thresh": 29, "cprime": 29, "sp_to_adj": 29, "sc": 29, "argmin": [29, 60], "threshinf": 29, "threshsup": 29, "minimum": [29, 60, 62, 68, 79, 80], "new": [29, 60, 76, 79], "zeros_lik": 29, "fill_diagon": [29, 33], "build_noisy_circular_graph": 29, "with_nois": 29, "structure_nois": 29, "noisi": 29, "circular": 29, "add_nodes_from": 29, "add_nod": 29, "attr_nam": 29, "add_edg": 29, "randomint": 29, "graph_color": 29, "nx_graph": 29, "cnorm": 29, "cpick": 29, "scalarmapp": 29, "set_arrai": 29, "val_map": 29, "get_node_attribut": 29, "to_rgba": 29, "po": [29, 32, 62], "kamada_kawai_layout": 29, "draw": 29, "node_color": 29, "with_label": 29, "node_s": 29, "adjacency_matrix": 29, "sizebari": 29, "95": [29, 32, 49, 51], "plot_barycenter_fgw": [29, 34], "164": [29, 49], "from_numpy_matrix": 29, "744": [29, 34, 61, 67, 78], "sig": 30, "sig2": 30, "phi": [30, 71], "phi2": 30, "delta_": [30, 67, 73, 79], "x_i": [30, 79], "a_i": [30, 61, 67, 79], "y_j": [30, 79], "b_j": [30, 61, 67, 79], "w1": [30, 64], "w2": [30, 64], "got": 30, "l_x": 30, "l_y": 30, "gridspec": 30, "set_aspect": 30, "ax3": [30, 32, 55], "sharex": 30, "gwg": 30, "logw": 30, "reload_ext": 30, "wgw": 30, "734412e": 30, "508254e": 30, "875326e": 30, "226158e": 30, "189327e": 30, "456740e": 30, "189279e": 30, "0017533302307128906": 30, "683978e": 30, "860061e": 30, "134468e": 30, "239175e": 30, "182948e": 30, "682787e": 30, "677113e": 30, "497": [30, 34], "plot_fgw": [30, 34], "wassertsein": [31, 79], "erwan": [31, 32, 59], "vautier": [31, 32, 59], "sp": [31, 32, 55, 69], "purpos": [31, 55, 79], "mu_": [31, 37, 46, 51, 55, 56, 57, 62, 79], "cov_": [31, 37, 46, 51, 55, 56, 57], "mu_t": [31, 37, 46, 51, 55, 56, 57, 62, 79], "cov_t": [31, 37, 46, 51, 55, 56, 57], "make_2d_samples_gauss": [31, 37, 46, 51, 55, 56, 57], "sqrtm": [31, 55, 60], "121": [31, 43, 49, 55, 80], "122": [31, 43, 49, 55, 80], "gw0": 31, "log0": [31, 55], "entropic_gromov_wasserstein": [31, 79], "jet": [31, 55, 57], "040183e": 31, "680045e": 31, "312927e": 31, "721780e": 31, "810735e": 31, "807022e": 31, "693103e": 31, "071265e": 31, "833502e": 31, "306601e": 31, "414525e": 31, "048107347795629904": 31, "04097168403053387": 31, "pgw": 31, "plog": 31, "pointwise_gromov_wasserstein": 31, "sgw": 31, "slog": [31, 61], "sampled_gromov_wasserstein": 31, "pointwis": [31, 80], "gw_dist_estim": 31, "gw_dist_std": 31, "toarrai": [31, 60, 71], "18827653307627662": 31, "1534777663986762": 31, "001626689010280435": 31, "plot_gromov": [31, 34], "decomposit": 32, "pca": 32, "embed": [32, 66, 79], "smacof_md": 32, "3000": 32, "singl": 32, "stress": 32, "declar": 32, "npo": 32, "isometri": 32, "n_init": 32, "embedding_": 32, "nmd": 32, "init": [32, 66, 80], "cross": 32, "triangl": 32, "star": 32, "plot_gromov_barycent": [32, 34], "113": [32, 49, 80], "visibledeprecationwarn": 32, "rag": 32, "nest": [32, 76], "sequenc": [32, 60], "tupl": [32, 61, 68], "meant": 32, "specifi": [32, 60, 62, 76], "lambdast": 32, "ct01": 32, "ct02": 32, "ct13": 32, "ct23": 32, "rotat": [32, 43], "n_compon": 32, "npost01": 32, "npost02": 32, "npost13": 32, "npost23": 32, "ax4": 32, "ax5": 32, "ax6": 32, "ax7": 32, "ax8": 32, "ax9": 32, "ax10": 32, "ax11": 32, "ax12": 32, "0x7f7b68cbbe80": 32, "855": [32, 34], "denot": [33, 43, 61, 62, 67], "c_": [33, 43, 66], "p_": [33, 66], "convex": [33, 47, 68, 73, 79], "combin": [33, 79], "sigma_d": 33, "sum_d": [33, 66], "taken": [33, 79], "vari": 33, "extens": [33, 79], "aforement": 33, "unattribut": 33, "uniformli": 33, "Then": [33, 79], "c\u00e9dric": [33, 59, 66], "cedric": 33, "inria": [33, 53, 54], "gromov_wasserstein_linear_unmix": 33, "gromov_wasserstein_dictionary_learn": 33, "fused_gromov_wasserstein_linear_unmix": 33, "fused_gromov_wasserstein_dictionary_learn": 33, "stochastic_block_model": 33, "inter": 33, "intra": [33, 69], "nlabel": 33, "p_inter": 33, "p_intra": 33, "n_cluster": 33, "low": [33, 38, 43, 65], "int32": 33, "direct": [33, 48, 68, 73, 80], "to_numpy_arrai": 33, "binari": [33, 63], "intens": 33, "idx_c": 33, "plot_gromov_wasserstein_dictionary_learn": [33, 34], "92": [33, 43, 49, 80], "promot": [33, 66, 79], "sparsiti": [33, 66, 79], "cdict_gw": 33, "epoch": [33, 66], "batch_siz": [33, 41, 62, 66, 74], "learning_r": [33, 66], "nonnegative_symmetr": [33, 66], "tol_out": [33, 66], "tol_inn": [33, 66], "max_iter_out": [33, 66], "max_iter_inn": [33, 66], "use_log": [33, 66], "use_adam_optim": [33, 66], "loss_epoch": 33, "cumul": [33, 60], "0513479260814": 33, "899037863512985": 33, "713360269739709": 33, "2219972411444076": 33, "733394454243953": 33, "361946666624151": 33, "067124363111312": 33, "623090086538461": 33, "44508527753937": 33, "315119124977292": 33, "shade": 33, "dark": [33, 80], "white": 33, "idx_atom": 33, "scaled_atom": 33, "reconstruction_error": 33, "cembed": [33, 66], "unmixings2d": 33, "sqrt": [33, 36, 60, 69], "extrem": 33, "linewidth": [33, 39], "0016238572676714": 33, "assign": [33, 61, 66], "hot": 33, "encod": [33, 76], "dataset_featur": 33, "001": [33, 47, 61, 62, 64, 73], "cdict_fgw": 33, "ydict_fgw": 33, "learning_rate_c": [33, 66], "learning_rate_i": [33, 66], "241134173626172": 33, "868444308072286": 33, "592548942499706": 33, "538319767046637": 33, "9036221456610156": 33, "6337245247963876": 33, "61678893167859": 33, "527896294871612": 33, "41525469570934": 33, "3026831090139366": 33, "max_featur": 33, "min_featur": 33, "catom": 33, "fatom": 33, "scaled_f": 33, "yembed": [33, 66], "123695098071627": 33, "468": [33, 34], "198": [34, 49, 80], "auto_examples_gromov": 34, "gournd": [35, 50, 70, 79], "introduct": [35, 50, 79], "discrimin": [35, 42, 64, 78, 80], "logo": [35, 42, 79, 80], "toolbox": [35, 42, 59, 79, 80], "auto_examples_python": 35, "auto_examples_jupyt": 35, "wda": [36, 59, 80], "fda": [36, 79], "circl": [36, 43], "floor": 36, "nbnois": 36, "hstack": 36, "pfda": 36, "projfda": 36, "maxit": [36, 61, 64], "p0": [36, 64], "keepdim": [36, 60], "pwda": 36, "projwda": 36, "val": [36, 60], "3042776946697494e": 36, "65147154e": 36, "4401037686381040e": 36, "16760501e": 36, "2234351238819945e": 36, "30555049e": 36, "2169879996364423e": 36, "39115407e": 36, "1924746118060369e": 36, "25387848e": 36, "1177409528990178e": 36, "70993539e": 36, "0862213476139214e": 36, "52716830e": 36, "0747229322240075e": 36, "34923131e": 36, "0678766065262878e": 36, "74029183e": 36, "0621337155458664e": 36, "03651803e": 36, "0577080390746906e": 36, "59605592e": 36, "0543140912455111e": 36, "28883715e": 36, "0470236926306019e": 36, "47528039e": 36, "0445628468810180e": 36, "03183256e": 36, "0364189460477085e": 36, "31006516e": 36, "0303977559883736e": 36, "39885317e": 36, "0301476256880614e": 36, "17467742e": 36, "0292344398773650e": 36, "79960372e": 36, "0271888385606963e": 36, "94406489e": 36, "0183211343527492e": 36, "98310561e": 36, "9762394340964535e": 36, "03201905e": 36, "8224395769425140e": 36, "36060492e": 36, "0851966893250043e": 36, "92701407e": 36, "8009717220864577e": 36, "02061998e": 36, "3668193677962859e": 36, "88563896e": 36, "3483413930117983e": 36, "71452936e": 36, "3067537677687422e": 36, "86310495e": 36, "28": [36, 49, 69, 71, 78, 79, 80], "3065518346568345e": 36, "46077174e": 36, "29": [36, 49, 62, 69, 78, 79, 80], "3060670920565279e": 36, "75578987e": 36, "3060470256115403e": 36, "25868759e": 36, "3060461627418530e": 36, "22639654e": 36, "3060442892822819e": 36, "01961700e": 36, "3060442772382622e": 36, "00748140e": 36, "3060442756281188e": 36, "62773999e": 36, "3060442713240839e": 36, "89229822e": 36, "3060442712307608e": 36, "18154399e": 36, "3060442709316276e": 36, "93366573e": 36, "3060442708553130e": 36, "70367603e": 36, "3060442707941986e": 36, "23768945e": 36, "3060442707803397e": 36, "73721750e": 36, "3060442707621306e": 36, "01134868e": 36, "reach": [36, 80], "after": [36, 78], "xsp": 36, "xtp": 36, "xspw": 36, "xtpw": 36, "922": [36, 42], "plot_wda": [36, 42], "xr": [37, 38, 46, 47, 51], "gweak": 37, "075": [37, 42], "plot_weakot_vs_ot": [37, 42], "sign": 38, "og": 38, "templat": [38, 80], "883": [38, 42], "plot_factored_coupl": [38, 42], "plote": [39, 56], "teh": 39, "letter": 39, "o1": 39, "o2": 39, "translat": 39, "t1": 39, "t2": [39, 56, 71], "horizont": 39, "vertic": 39, "sx": 39, "markerfacecolor": 39, "markeredgecolor": 39, "save": [39, 61, 66], "savefig": 39, "svg": 39, "dpi": 39, "transpar": 39, "bbox_inch": 39, "tight": 39, "43": [39, 49, 58, 61, 62, 67, 78, 79, 80], "375": [39, 80], "darkgrai": 39, "logo_dark": 39, "063": [39, 42], "plot_logo": [39, 42], "alaya": [40, 59, 61, 69, 78, 79], "b\u00e9rar": [40, 61, 78, 79], "gasso": [40, 56, 61, 69, 71, 75, 78, 79], "neurip": [40, 69, 71, 75, 78, 79], "mokhtar": [40, 59, 78], "mokhtarzahdi": 40, "plot1d_mat": [40, 41, 44, 45, 49, 53], "lambd": [40, 44, 45, 46], "ns_budget": [40, 61], "budget": [40, 61], "nt_budget": [40, 61], "g_screen": 40, "restrict": [40, 61], "3441": 40, "bottleneck": [40, 61], "pypi": [40, 61, 78, 80], "020986042861303855": 40, "kappa": [40, 61], "7476531411890917": 40, "cardin": [40, 61], "isel": 40, "jsel": 40, "276": [40, 42], "plot_screenkhorn_1d": [40, 42], "stochat": 41, "librari": [41, 59, 78, 79, 80], "bach": [41, 74, 78, 79], "bhushan": [41, 74, 78, 79], "damodaran": [41, 74, 78, 79], "kilian": [41, 46, 59, 78], "n_sourc": [41, 74], "n_target": [41, 48, 74], "x_sourc": [41, 74], "y_target": [41, 74], "sag": [41, 74], "sag_pi": 41, "solve_semi_dual_entrop": 41, "55553509e": 41, "96395660e": 41, "76579142e": 41, "31178196e": 41, "21640234e": 41, "25357448e": 41, "30225078e": 41, "37891338e": 41, "56123975e": 41, "61451746e": 41, "31505947e": 41, "33831456e": 41, "61515202e": 41, "34246014e": 41, "28734709e": 41, "07550428e": 41, "85500870e": 41, "52288517e": 41, "08262628e": 41, "21423583e": 41, "16904253e": 41, "03825797e": 41, "87178503e": 41, "18391107e": 41, "15462212e": 41, "65987989e": 41, "23177216e": 41, "39440107e": 41, "semicontin": 41, "asgd": [41, 74], "asgd_pi": 41, "log_asgd": 41, "beta": [41, 61, 67, 73, 74, 80], "87919564": 41, "64972912": 41, "90370867": 41, "65425719": 41, "46885467": 41, "30171991": 41, "77560865": 41, "50927934": 41, "40235686": 41, "91006054": 41, "82169674": 41, "44871332e": 41, "00795848e": 41, "75697554e": 41, "40659699e": 41, "20593540e": 41, "31205385e": 41, "34063837e": 41, "80242597e": 41, "40238837e": 41, "68032820e": 41, "26513361e": 41, "36373920e": 41, "52546195e": 41, "40772739e": 41, "31054753e": 41, "19774150e": 41, "29902872e": 41, "49410422e": 41, "06078986e": 41, "22200805e": 41, "05396464e": 41, "03575289e": 41, "84056467e": 41, "19573357e": 41, "02994053e": 41, "72385417e": 41, "28420336e": 41, "47716225e": 41, "sinkhorn_pi": 41, "55553508e": 41, "96395661e": 41, "31178193e": 41, "30225079e": 41, "37891333e": 41, "56123974e": 41, "33831455e": 41, "61515201e": 41, "07550425e": 41, "85500876e": 41, "52288523e": 41, "08262629e": 41, "16904255e": 41, "03825804e": 41, "87178504e": 41, "23177217e": 41, "39440105e": 41, "sgd": [41, 66, 74], "sgd_dual_pi": [41, 74], "log_sgd": 41, "solve_dual_entrop": 41, "92075753": 41, "80864372": 41, "07370578": 41, "0179414": 41, "60239916": 41, "8141425": 41, "11122763": 41, "346688": 41, "47228889": 41, "57636303": 41, "9534778": 41, "21021974e": 41, "26940978e": 41, "09590373e": 41, "59858662e": 41, "65652588e": 41, "83627521e": 41, "27260904e": 41, "58648690e": 41, "49188637e": 41, "03096858e": 41, "44340331e": 41, "37764488e": 41, "14582303e": 41, "32484188e": 41, "15372556e": 41, "26187284e": 41, "79941580e": 41, "58297483e": 41, "36009581e": 41, "15632652e": 41, "07006729e": 41, "61709962e": 41, "99740394e": 41, "13377026e": 41, "88094057e": 41, "36124884e": 41, "09671824e": 41, "24045368e": 41, "plot_stochast": [41, 42], "019": 42, "auto_examples_oth": 42, "aureli": 43, "boisbunon": [43, 78], "conda": [43, 79], "forg": [43, 79], "document": [43, 59, 78, 79, 80], "pythonot": [43, 60, 78, 80], "io": [43, 78, 80], "Or": 43, "inlin": 43, "caf\u00e9": 43, "croissant": 43, "manhattan": 43, "quick": [43, 78, 80], "googl": 43, "extract": [43, 60], "fiction": 43, "product": [43, 60, 71, 76, 79], "sale": 43, "acess": 43, "bakery_po": 43, "bakery_prod": 43, "sold": 43, "cafe_po": 43, "cafe_prod": 43, "fun": 43, "imap": 43, "shop": 43, "npz": 43, "cafe": 43, "48": [43, 49, 80], "82": [43, 49, 80], "89": [43, 49, 62, 80], "73": [43, 49], "88": [43, 49, 80], "91": [43, 49, 80], "441": [43, 61, 67, 78], "next": [43, 67, 68, 71, 79, 80], "ec": 43, "thing": 43, "fontweight": 43, "bold": 43, "va": 43, "coolwarm": 43, "cbar": 43, "shrink": 43, "use_gridspec": 43, "cell": 43, "awai": 43, "thu": [43, 76], "costli": 43, "while": [43, 67, 79, 80], "time_emd": 43, "section": [43, 79, 80], "plane": 43, "easili": [43, 79], "interpret": 43, "10838179": 43, "pseudo": 43, "oslash": 43, "wise": [43, 60, 79], "divis": 43, "Be": 43, "care": 43, "pre": [43, 61, 79], "nit": 43, "ot_sink_algo": 43, "atleast_2d": 43, "equival": [43, 44, 62, 69], "diag": [43, 60, 61, 79], "algo": [43, 61], "2g": 43, "0008": 43, "notic": 43, "deliv": 43, "fraction": 43, "sens": [43, 61, 67, 78, 79], "wa": [43, 79, 80], "reg_paramet": 43, "logspac": [43, 51, 56], "w_sinkhorn_reg": 43, "time_sinkhorn_reg": 43, "max_ot": 43, "few": [43, 80], "seri": 43, "although": 43, "tend": 43, "comparison": [43, 49, 79], "972222222222223": 43, "impact": [43, 79], "higher": [43, 66, 73], "littl": [43, 67], "plot_intro_ot": [43, 50], "0x7f7c6cb5c6a0": 44, "861463e": 44, "860154e": 44, "144529e": 44, "130143e": 44, "178815e": 44, "426078e": 44, "661047e": 44, "233110e": 44, "338932e": 44, "776627e": 44, "293340e": 44, "235791e": 44, "637176e": 44, "740051e": 44, "529356e": 44, "450071e": 44, "193632e": 44, "449812e": 44, "294505e": 44, "857493e": 44, "822723e": 44, "558": [44, 50], "plot_ot_1d": [44, 50], "0x7f7c6c89f160": 45, "821142e": 45, "695268e": 45, "112774e": 45, "571553e": 45, "218100e": 45, "130527e": 45, "418267e": 45, "235716e": 45, "800770e": 45, "242095e": 45, "753030e": 45, "gsm": 45, "smooth_ot_du": [45, 79], "194": [45, 49, 50], "plot_ot_1d_smooth": [45, 50], "discribut": 46, "empirical_sinkhorn": [46, 79], "078": [46, 50], "plot_ot_2d_sampl": [46, 50], "distributio": 47, "stole": 47, "idea": [47, 67, 79], "1706": 47, "07650": 47, "strictli": [47, 67, 79], "m1": 47, "mp": 47, "l1": 47, "g1": 47, "g2": 47, "gp": 47, "xtot": 47, "945": [47, 50], "plot_ot_l1_vs_l2": [47, 50], "lst_m": 48, "d_emd": 48, "d_emd2": 48, "metrixc": 48, "d_tv": 48, "0x7f7c6c705b20": 48, "d_sinkhorn": 48, "d_sinkhorn2": 48, "plot_compute_emd": [48, 50], "df": [49, 68, 79], "gl2": 49, "frob": 49, "760578e": 49, "669467e": 49, "457501e": 49, "111116e": 49, "665639e": 49, "298130e": 49, "827855e": 49, "664378e": 49, "572776e": 49, "260396e": 49, "664077e": 49, "811855e": 49, "015066e": 49, "663912e": 49, "936787e": 49, "653393e": 49, "663852e": 49, "555826e": 49, "916369e": 49, "663814e": 49, "305693e": 49, "836245e": 49, "663785e": 49, "760450e": 49, "929009e": 49, "663767e": 49, "078011e": 49, "793559e": 49, "663751e": 49, "525192e": 49, "584755e": 49, "663737e": 49, "396466e": 49, "396951e": 49, "663727e": 49, "086938e": 49, "012700e": 49, "663720e": 49, "042609e": 49, "725769e": 49, "663713e": 49, "160914e": 49, "922568e": 49, "663707e": 49, "823502e": 49, "361187e": 49, "663702e": 49, "022440e": 49, "028438e": 49, "663697e": 49, "181249e": 49, "292634e": 49, "663692e": 49, "698532e": 49, "489527e": 49, "663687e": 49, "258253e": 49, "420712e": 49, "663682e": 49, "741118e": 49, "560349e": 49, "663678e": 49, "624135e": 49, "365715e": 49, "663673e": 49, "645179e": 49, "400714e": 49, "663670e": 49, "957237e": 49, "256196e": 49, "663666e": 49, "261541e": 49, "762450e": 49, "663663e": 49, "851305e": 49, "079948e": 49, "663660e": 49, "942296e": 49, "231320e": 49, "663657e": 49, "092896e": 49, "481860e": 49, "663653e": 49, "924361e": 49, "201470e": 49, "663651e": 49, "625455e": 49, "704189e": 49, "663648e": 49, "641123e": 49, "730250e": 49, "663645e": 49, "566666e": 49, "606377e": 49, "663643e": 49, "338514e": 49, "226810e": 49, "663641e": 49, "222711e": 49, "034152e": 49, "663639e": 49, "221805e": 49, "032642e": 49, "663637e": 49, "440781e": 49, "396935e": 49, "663634e": 49, "520091e": 49, "528875e": 49, "663632e": 49, "288193e": 49, "143080e": 49, "663630e": 49, "123055e": 49, "868347e": 49, "663628e": 49, "024487e": 49, "704365e": 49, "663627e": 49, "079606e": 49, "796061e": 49, "663625e": 49, "172093e": 49, "949922e": 49, "663623e": 49, "047880e": 49, "743277e": 49, "663621e": 49, "010577e": 49, "681217e": 49, "44": [49, 69, 80], "663619e": 49, "064438e": 49, "770820e": 49, "663618e": 49, "882375e": 49, "644049e": 49, "46": [49, 80], "663616e": 49, "532647e": 49, "419505e": 49, "47": [49, 80], "663615e": 49, "930189e": 49, "652001e": 49, "663613e": 49, "728955e": 49, "452161e": 49, "49": [49, 80], "663612e": 49, "524214e": 49, "584459e": 49, "663610e": 49, "088418e": 49, "511958e": 49, "663609e": 49, "639430e": 49, "270902e": 49, "663608e": 49, "662611e": 49, "108397e": 49, "53": 49, "663607e": 49, "133700e": 49, "186767e": 49, "54": 49, "663605e": 49, "648141e": 49, "272349e": 49, "55": [49, 80], "663604e": 49, "557516e": 49, "090911e": 49, "56": [49, 80], "663603e": 49, "304213e": 49, "215131e": 49, "57": [49, 75, 80], "663602e": 49, "353809e": 49, "057021e": 49, "58": [49, 80], "663601e": 49, "968279e": 49, "325603e": 49, "59": [49, 79, 80], "663600e": 49, "367159e": 49, "059240e": 49, "663599e": 49, "610790e": 49, "334102e": 49, "61": 49, "663598e": 49, "787466e": 49, "628015e": 49, "62": [49, 80], "663596e": 49, "937777e": 49, "154166e": 49, "63": 49, "599432e": 49, "315190e": 49, "64": [49, 80], "663595e": 49, "813048e": 49, "670555e": 49, "65": [49, 55], "663594e": 49, "724600e": 49, "523409e": 49, "66": [49, 55, 61, 78, 79, 80], "663593e": 49, "081892e": 49, "011779e": 49, "67": [49, 80], "663592e": 49, "948732e": 49, "896260e": 49, "68": 49, "663591e": 49, "941833e": 49, "221188e": 49, "69": [49, 69], "663590e": 49, "213739e": 49, "673523e": 49, "663589e": 49, "127355e": 49, "529811e": 49, "71": 49, "663588e": 49, "349251e": 49, "235363e": 49, "72": [49, 80], "007084e": 49, "329722e": 49, "663587e": 49, "880265e": 49, "118744e": 49, "74": 49, "663586e": 49, "931950e": 49, "204723e": 49, "663585e": 49, "981309e": 49, "286832e": 49, "76": [49, 80], "663584e": 49, "952959e": 49, "576082e": 49, "77": 49, "544857e": 49, "560750e": 49, "78": [49, 78], "663583e": 49, "237579e": 49, "049564e": 49, "79": [49, 80], "663582e": 49, "382386e": 49, "290460e": 49, "646051e": 49, "065503e": 49, "663581e": 49, "197994e": 49, "983702e": 49, "663580e": 49, "072764e": 49, "775370e": 49, "83": 49, "994645e": 49, "645410e": 49, "84": [49, 80], "663579e": 49, "842721e": 49, "056248e": 49, "663578e": 49, "276486e": 49, "450691e": 49, "86": [49, 80], "737346e": 49, "217366e": 49, "87": [49, 69, 80], "663577e": 49, "282043e": 49, "123508e": 49, "663576e": 49, "020937e": 49, "689135e": 49, "431951e": 49, "709310e": 49, "663575e": 49, "052335e": 49, "077789e": 49, "500538e": 49, "823407e": 49, "663574e": 49, "063176e": 49, "095821e": 49, "93": [49, 80], "663573e": 49, "576367e": 49, "949549e": 49, "94": 49, "224681e": 49, "364492e": 49, "663572e": 49, "673221e": 49, "110670e": 49, "96": 49, "635561e": 49, "048017e": 49, "97": 49, "663571e": 49, "527236e": 49, "867807e": 49, "98": [49, 69], "788548e": 49, "638946e": 49, "663570e": 49, "727141e": 49, "536791e": 49, "127278e": 49, "202445e": 49, "101": 49, "663569e": 49, "637504e": 49, "387670e": 49, "102": 49, "922750e": 49, "862195e": 49, "103": 49, "663568e": 49, "076454e": 49, "117891e": 49, "104": 49, "911509e": 49, "843492e": 49, "105": 49, "663567e": 49, "403398e": 49, "998215e": 49, "106": [49, 80], "439790e": 49, "058755e": 49, "107": [49, 80], "634542e": 49, "382735e": 49, "663566e": 49, "452203e": 49, "079401e": 49, "109": 49, "852991e": 49, "746137e": 49, "663565e": 49, "165490e": 49, "602434e": 49, "111": 49, "450250e": 49, "076149e": 49, "112": 49, "663564e": 49, "685294e": 49, "467159e": 49, "821800e": 49, "694245e": 49, "114": [49, 80], "237390e": 49, "722040e": 49, "115": 49, "663563e": 49, "992842e": 49, "315219e": 49, "116": [49, 80], "166739e": 49, "604506e": 49, "117": 49, "086064e": 49, "470297e": 49, "118": [49, 80], "663562e": 49, "435945e": 49, "052346e": 49, "292497e": 49, "813711e": 49, "663561e": 49, "366209e": 49, "936334e": 49, "138746e": 49, "557935e": 49, "009637e": 49, "343153e": 49, "123": 49, "663560e": 49, "386258e": 49, "969683e": 49, "124": [49, 80], "927442e": 49, "206415e": 49, "081681e": 49, "463000e": 49, "126": [49, 80], "663559e": 49, "759123e": 49, "926406e": 49, "127": [49, 80], "890771e": 49, "145409e": 49, "128": [49, 62], "971315e": 49, "279398e": 49, "129": 49, "663558e": 49, "101983e": 49, "496771e": 49, "035645e": 49, "386414e": 49, "131": [49, 55], "984492e": 49, "301317e": 49, "132": [49, 55, 80], "663557e": 49, "849064e": 49, "076024e": 49, "133": [49, 55], "795703e": 49, "987255e": 49, "134": [49, 80], "624087e": 49, "701762e": 49, "135": 49, "689557e": 49, "810673e": 49, "663556e": 49, "644308e": 49, "735399e": 49, "137": [49, 80], "618007e": 49, "691644e": 49, "138": [49, 55, 80], "483013e": 49, "467075e": 49, "139": [49, 80], "663555e": 49, "708771e": 49, "842636e": 49, "013847e": 49, "350146e": 49, "141": [49, 80], "721217e": 49, "863339e": 49, "142": [49, 80], "663554e": 49, "027911e": 49, "373540e": 49, "143": [49, 80], "764565e": 49, "935449e": 49, "144": [49, 80], "677151e": 49, "790030e": 49, "145": [49, 80], "351982e": 49, "249094e": 49, "146": [49, 80], "663553e": 49, "423360e": 49, "367836e": 49, "147": 49, "541112e": 49, "563722e": 49, "148": [49, 80], "491601e": 49, "481358e": 49, "149": 49, "466407e": 49, "439446e": 49, "663552e": 49, "801524e": 49, "996929e": 49, "151": 49, "714107e": 49, "851507e": 49, "152": 49, "491257e": 49, "480784e": 49, "153": 49, "513799e": 49, "518282e": 49, "154": 49, "663551e": 49, "354539e": 49, "253345e": 49, "155": [49, 80], "233818e": 49, "052519e": 49, "156": [49, 80], "576219e": 49, "622121e": 49, "157": [49, 80], "452791e": 49, "416792e": 49, "663550e": 49, "262867e": 49, "100843e": 49, "316379e": 49, "189863e": 49, "295447e": 49, "155041e": 49, "161": 49, "283286e": 49, "134810e": 49, "162": 49, "569222e": 49, "610479e": 49, "163": 49, "663549e": 49, "172942e": 49, "951247e": 49, "399809e": 49, "328651e": 49, "165": 49, "229432e": 49, "045221e": 49, "166": 49, "326191e": 49, "206184e": 49, "167": 49, "663548e": 49, "209694e": 49, "012384e": 49, "168": 49, "372136e": 49, "282614e": 49, "169": [49, 80], "338395e": 49, "226484e": 49, "416497e": 49, "356410e": 49, "171": 49, "298576e": 49, "160242e": 49, "172": [49, 80], "663547e": 49, "190590e": 49, "980603e": 49, "167083e": 49, "941497e": 49, "174": [49, 80], "069425e": 49, "779038e": 49, "217780e": 49, "025834e": 49, "176": [49, 80], "140754e": 49, "897697e": 49, "177": 49, "663546e": 49, "160707e": 49, "930890e": 49, "178": [49, 80], "101798e": 49, "832892e": 49, "179": 49, "114904e": 49, "854694e": 49, "064022e": 49, "770049e": 49, "181": [49, 80], "258231e": 49, "540149e": 49, "182": 49, "213120e": 49, "018080e": 49, "183": 49, "663545e": 49, "164296e": 49, "936859e": 49, "184": [49, 80], "188762e": 49, "977559e": 49, "185": 49, "394153e": 49, "562760e": 49, "186": 49, "028656e": 49, "711216e": 49, "115348e": 49, "855431e": 49, "188": 49, "663544e": 49, "768310e": 49, "625002e": 49, "021806e": 49, "699820e": 49, "086303e": 49, "807113e": 49, "191": [49, 80], "879008e": 49, "643416e": 49, "192": 49, "050210e": 49, "747071e": 49, "193": 49, "002463e": 49, "667641e": 49, "663543e": 49, "062747e": 49, "767925e": 49, "195": [49, 80], "348538e": 49, "555170e": 49, "196": 49, "992512e": 49, "329589e": 49, "197": 49, "558020e": 49, "590018e": 49, "993772e": 49, "662507e": 49, "588499e": 49, "428734e": 49, "737134e": 49, "453459e": 49, "692289e": 49, "617643e": 49, "614437e": 49, "464513e": 49, "612639e": 49, "102965e": 49, "003963e": 49, "611291e": 49, "371098e": 49, "348827e": 49, "610468e": 49, "110558e": 49, "230389e": 49, "610198e": 49, "672927e": 49, "693743e": 49, "610130e": 49, "232417e": 49, "814742e": 49, "610090e": 49, "513455e": 49, "046887e": 49, "610002e": 49, "443507e": 49, "764057e": 49, "609996e": 49, "657071e": 49, "887869e": 49, "609948e": 49, "998735e": 49, "827807e": 49, "609695e": 49, "569217e": 49, "525962e": 49, "609533e": 49, "010779e": 49, "626881e": 49, "609520e": 49, "043897e": 49, "294681e": 49, "609465e": 49, "415246e": 49, "496718e": 49, "609386e": 49, "898605e": 49, "883745e": 49, "609324e": 49, "837052e": 49, "175060e": 49, "609298e": 49, "617826e": 49, "603564e": 49, "609184e": 49, "080015e": 49, "139305e": 49, "609083e": 49, "273206e": 49, "009411e": 49, "608988e": 49, "940805e": 49, "558681e": 49, "608853e": 49, "380030e": 49, "348223e": 49, "608844e": 49, "185045e": 49, "341930e": 49, "608824e": 49, "279113e": 49, "057868e": 49, "608819e": 49, "156821e": 49, "078753e": 49, "608783e": 49, "205746e": 49, "548567e": 49, "608764e": 49, "189894e": 49, "914259e": 49, "608755e": 49, "474607e": 49, "807303e": 49, "608737e": 49, "144227e": 49, "840760e": 49, "608676e": 49, "775335e": 49, "073291e": 49, "608638e": 49, "348020e": 49, "777116e": 49, "608627e": 49, "863136e": 49, "104023e": 49, "608529e": 49, "110230e": 49, "828482e": 49, "608487e": 49, "641106e": 49, "248184e": 49, "608409e": 49, "823638e": 49, "758383e": 49, "608373e": 49, "256641e": 49, "629519e": 49, "608338e": 49, "132444e": 49, "429691e": 49, "608310e": 49, "786649e": 49, "873484e": 49, "608260e": 49, "103848e": 49, "991794e": 49, "608206e": 49, "321265e": 49, "341279e": 49, "608201e": 49, "054747e": 49, "912648e": 49, "608195e": 49, "198335e": 49, "751739e": 49, "608193e": 49, "458736e": 49, "360328e": 49, "608159e": 49, "153759e": 49, "463587e": 49, "608115e": 49, "738314e": 49, "403523e": 49, "608108e": 49, "960032e": 49, "368161e": 49, "608081e": 49, "675447e": 49, "694254e": 49, "608072e": 49, "976340e": 49, "610383e": 49, "608046e": 49, "604130e": 49, "579515e": 49, "608020e": 49, "617036e": 49, "600226e": 49, "608014e": 49, "957795e": 49, "364188e": 49, "608011e": 49, "292411e": 49, "078211e": 49, "607998e": 49, "431795e": 49, "355831e": 49, "607964e": 49, "127054e": 49, "420225e": 49, "607947e": 49, "021878e": 49, "643126e": 49, "560621e": 49, "725288e": 49, "607900e": 49, "929781e": 49, "710793e": 49, "607890e": 49, "740229e": 49, "229659e": 49, "607858e": 49, "039550e": 49, "279306e": 49, "607836e": 49, "319545e": 49, "121612e": 49, "607826e": 49, "378947e": 49, "025624e": 49, "607808e": 49, "145102e": 49, "841105e": 49, "607776e": 49, "941743e": 49, "121889e": 49, "607743e": 49, "087422e": 49, "356037e": 49, "607741e": 49, "310249e": 49, "106541e": 49, "607738e": 49, "682752e": 49, "705425e": 49, "607691e": 49, "913936e": 49, "684709e": 49, "607671e": 49, "288855e": 49, "072055e": 49, "607654e": 49, "002448e": 49, "611590e": 49, "607641e": 49, "209492e": 49, "319792e": 49, "607632e": 49, "588467e": 49, "984199e": 49, "607619e": 49, "050388e": 49, "294196e": 49, "607618e": 49, "417493e": 49, "513973e": 49, "607598e": 49, "210509e": 49, "946012e": 49, "607591e": 49, "392914e": 49, "062009e": 49, "607579e": 49, "759587e": 49, "247415e": 49, "607574e": 49, "760280e": 49, "437356e": 49, "607556e": 49, "146469e": 49, "843012e": 49, "607550e": 49, "689456e": 49, "930984e": 49, "065631e": 49, "535705e": 49, "607539e": 49, "555681e": 49, "053852e": 49, "607528e": 49, "177470e": 49, "153798e": 49, "607527e": 49, "306068e": 49, "529648e": 49, "607514e": 49, "816045e": 49, "256440e": 49, "607511e": 49, "301970e": 49, "700442e": 49, "607504e": 49, "281072e": 49, "881840e": 49, "607503e": 49, "821886e": 49, "257370e": 49, "607480e": 49, "403013e": 49, "255315e": 49, "169298e": 49, "879624e": 49, "607473e": 49, "235982e": 49, "809227e": 49, "607470e": 49, "717105e": 49, "760195e": 49, "148402e": 49, "883374e": 49, "reg1": [49, 68], "reg2": [49, 68], "gel2": 49, "gcg": [49, 62, 79], "693084e": 49, "610202e": 49, "147342e": 49, "288260e": 49, "609508e": 49, "309685e": 49, "936474e": 49, "609484e": 49, "524885e": 49, "454278e": 49, "609477e": 49, "863641e": 49, "218444e": 49, "609475e": 49, "433633e": 49, "307397e": 49, "609474e": 49, "332412e": 49, "019185e": 49, "950826e": 49, "749276e": 49, "609473e": 49, "508393e": 49, "427718e": 49, "859971e": 49, "265041e": 49, "337432e": 49, "980981e": 49, "plot_optim_otreg": [49, 50], "976": 50, "auto_exampl": 50, "adrien": [51, 59, 78], "corenflo": [51, 59, 78], "aalto": 51, "fi": [51, 54], "n_seed": 51, "n_projections_arr": 51, "res_mean": 51, "res_std": 51, "fill_between": 51, "xscale": 51, "confid": 51, "inverv": 51, "263": [51, 52, 57, 58], "plot_vari": [51, 52], "auto_examples_sl": 52, "uot": [53, 71, 78, 79], "upper": 53, "plot_uot_1d": [53, 58], "n_weight": 54, "weight_list": 54, "909": 54, "kv": 54, "914": 54, "invalid": 54, "ktu": 54, "921": 54, "595": 54, "974": 54, "615": 54, "455": 54, "361": [54, 80], "228": [54, 58], "plot_uot_barycenter_1d": [54, 58], "n_nois": [55, 57], "cov": 55, "w0": 55, "partial_wasserstein": [55, 57, 79], "entropic_partial_wasserstein": [55, 79], "partial_w_dist": 55, "47910182636916243": 55, "5034205945081646": 55, "res0": 55, "partial_gromov_wasserstein": [55, 79], "entropic_partial_gromov_wasserstein": [55, 79], "partial_gw_dist": [55, 69], "611280e": 55, "345385e": 55, "584346e": 55, "659015e": 55, "38071035222889": 55, "59015303098326": 55, "plot_partial_wass_and_gromov": [55, 58], "matplotlibdeprecationwarn": 55, "overlap": [55, 79], "sinc": [55, 67, 79, 80], "minor": 55, "later": [55, 62], "explicitli": 55, "478237e": 55, "894947e": 55, "251769e": 55, "596705e": 55, "808371e": 55, "136110e": 55, "859072e": 55, "136043e": 55, "11743971783944865": 55, "9136043100219415": 55, "318": [55, 58], "wu": [56, 71, 75, 78], "f\u00e9vott": [56, 71, 75, 78], "through": [56, 71, 75, 78, 79], "haoran": 56, "ub": [56, 57], "final_gamma": 56, "t_list": [56, 71], "g_list": [56, 71], "regularization_path": 56, "semi_relax": [56, 71], "t_list2": 56, "g_list2": 56, "selected_gamma": 56, "tp": 56, "compute_transport_plan": 56, "ell_2": [56, 57, 75], "g_list_v": 56, "l_2": 56, "678": [56, 58], "plot_regpath": [56, 58], "_f": [57, 79], "div": [57, 75], "ell_1": 57, "reg_m_kl": 57, "reg_m_l2": 57, "entropic_kl_uot": 57, "kl_uot": 57, "mm_unbalanc": 57, "l2_uot": 57, "partial_ot": 57, "plot_unbalanced_ot": [57, 58], "928": 58, "auto_examples_unbalanc": 58, "wrapper": [59, 79], "alexandr": [59, 78], "ci": [59, 80], "michael": 59, "l\u00e9o": [59, 78], "gautheron": [59, 78], "nathali": [59, 78], "gayraud": [59, 78], "antoin": [59, 73, 78], "debug": [59, 80], "alain": [59, 78], "jcpot": [59, 78, 80], "kerdoncuff": [59, 66, 78, 79], "minhui": 59, "huang": [59, 64, 78, 79], "robust": [59, 64, 78, 79, 80], "nathan": [59, 80], "cassereau": [59, 80], "camil": 59, "le": 59, "coz": 59, "lot": [59, 80], "would": [59, 60, 80], "variou": [59, 76, 80], "mathieu": [59, 73, 80], "financ": [59, 78], "manpow": [59, 78], "partner": [59, 78], "goal": [60, 74], "agnost": 60, "whether": [60, 66, 67, 76], "tensorflow": [60, 78, 79, 80], "nonetheless": 60, "achiev": 60, "imit": 60, "As": [60, 67, 79, 80], "convent": [60, 62], "list_to_arrai": [60, 76], "get_backend": 60, "know": 60, "infer": [60, 66], "argument": [60, 62, 68, 76, 80], "activ": [60, 61, 71], "op": 60, "numpy_op": 60, "np_config": 60, "enable_numpy_behavior": 60, "intel": 60, "xeon": 60, "6248": 60, "50ghz": 60, "tesla": 60, "v100": 60, "sxm2": 60, "32gb": 60, "date": [60, 80], "8th": 60, "316": [60, 80], "pull": [60, 80], "bitsize32": 60, "bit": 60, "devicecpugpu": 60, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 60, "00080": 60, "00220": 60, "01510": 60, "00950": 60, "01930": 60, "00510": 60, "0293": 60, "00050": 60, "00130": 60, "00970": 60, "00570": 60, "01150": 60, "00290": 60, "0173": 60, "5000": 60, "00090": 60, "00160": 60, "01100": 60, "00580": 60, "0166": 60, "00210": 60, "01450": 60, "00560": 60, "01180": 60, "0168": 60, "20000": [60, 74], "00690": 60, "00430": 60, "02780": 60, "00590": 60, "00300": 60, "0165": 60, "50000": [60, 71], "07070": 60, "03140": 60, "13950": 60, "00740": 60, "01250": 60, "00350": 60, "0198": 60, "nbsp": 60, "bitsize64": 60, "00200": 60, "01540": 60, "00930": 60, "01910": 60, "0328": 60, "00940": 60, "01140": 60, "0169": 60, "00170": 60, "01200": 60, "01160": 60, "00340": 60, "00270": 60, "01770": 60, "0167": 60, "01460": 60, "00750": 60, "04360": 60, "14670": 60, "05680": 60, "24680": 60, "00770": 60, "00450": 60, "0204": 60, "proper": [60, 80], "typeerror": 60, "get_backend_list": 60, "to_numpi": 60, "abstract": 60, "jaxbackend": 60, "numpybackend": 60, "torchbackend": [60, 80], "cupybackend": 60, "tensorflowbackend": 60, "__name__": 60, "attribut": [60, 62, 66, 80], "__type__": 60, "allclos": [60, 72], "rtol": 60, "atol": 60, "equal_nan": 60, "evalu": [60, 61], "evenli": 60, "argsort": 60, "array_equ": 60, "assert_same_dtype_devic": 60, "bitsiz": 60, "a_min": 60, "a_max": 60, "limit": [60, 80], "exist": [60, 61, 79, 80], "row": [60, 61, 67, 71, 76], "col": 60, "cumsum": 60, "device_typ": 60, "dtype_devic": 60, "einsum": 60, "subscript": 60, "operand": 60, "einstein": 60, "summat": 60, "eliminate_zero": 60, "entri": 60, "smaller": [60, 80], "csr_matrix": 60, "exponenti": [60, 61], "flip": 60, "from_numpi": 60, "fill_valu": 60, "inv": 60, "is_floating_point": 60, "isfinit": 60, "infin": 60, "Not": 60, "isinf": 60, "isnan": 60, "nan": 60, "isspars": 60, "kl_div": 60, "stat": 60, "natur": 60, "logarithm": 60, "logsumexp": [60, 64, 79], "special": 60, "amax": 60, "arithmet": 60, "amin": 60, "frobeniu": 60, "outer": 60, "expon": 60, "repeat": 60, "searchsort": 60, "side": [60, 71], "insert": 60, "set_gradi": [60, 80], "equat": [60, 61, 66, 74, 79], "scalar": [60, 61], "ngeativ": 60, "root": [60, 78, 79], "definit": [60, 79], "squeez": 60, "deviat": [60, 66], "take_along_axi": 60, "arr": 60, "gather": 60, "tocsr": 60, "compress": 60, "todens": 60, "trace": 60, "uniqu": [60, 67, 79], "chosen": [60, 76, 79], "zero_pad": 60, "pad_width": 60, "pad": 60, "cp": 60, "s_": 61, "empirical_sinkhorn_diverg": [61, 79], "barycenter_sinkhorn": 61, "barycenter_stabil": 61, "tau": [61, 64, 75], "10000000000": 61, "mast": 61, "strength": 61, "width": 61, "height": 61, "stabthr": 61, "goe": [61, 78, 79], "butscher": [61, 78, 79], "nguyen": [61, 78, 79], "guiba": [61, 78, 79], "effici": [61, 67, 78, 79, 80], "geometr": [61, 78, 79], "islazi": 61, "batchsiz": 61, "memori": [61, 74, 79, 80], "99977301e": 61, "26989344e": 61, "empirical_sinkhorn2": [61, 79], "53978687e": 61, "w_a": 61, "gamma_a": 61, "m_a": 61, "w_b": 61, "gamma_b": 61, "m_b": 61, "resp": 61, "symmetr": [61, 66, 79, 80], "499887176049052": 61, "artfici": [61, 78, 79], "frechet": [61, 67], "w_i": [61, 67], "measure_weight": [61, 67], "k_i": [61, 67], "There": [61, 67, 79], "arnaud": [61, 67], "doucet": [61, 67, 78, 79], "\u00e1lvarez": [61, 67, 78], "esteban": [61, 67, 78], "pedro": [61, 67, 78], "762": [61, 67, 78], "geometricbar": 61, "alldistribt": 61, "geometricmean": 61, "jcpot_barycent": 61, "lambda_k": 61, "_2": [61, 66, 71, 76], "gamma_k": 61, "_n": 61, "th": [61, 71, 73], "relat": [61, 78, 79, 80], "n_k": 61, "unknown": 61, "nsk": 61, "control": [61, 62], "devi": [61, 62], "projc": 61, "constrint": 61, "projr": 61, "maxfun": 61, "pgtol": 61, "written": [61, 67], "u_i": 61, "ldot": 61, "v_j": 61, "regularis": 61, "kept": [61, 80], "bfg": [61, 73, 75, 79], "lbfg": 61, "final": [61, 67, 79, 80], "accuraci": 61, "gain": 61, "isn": 61, "epsilon0": 61, "warmstart": 61, "print_period": 61, "decreas": [61, 62], "tabl": 61, "m0": 61, "h0": 61, "reg0": 61, "dh": 61, "m_0": 61, "_0": 61, "n_atom": 61, "dim_prior": 61, "trust": [61, 64], "nakhostin": [61, 78], "corpetti": [61, 78], "planetari": [61, 78], "whorkshop": [61, 78], "hyperspectr": [61, 78], "signal": [61, 78, 79], "remot": [61, 78], "whisper": [61, 78], "sigma_": 62, "sigma_t": 62, "remark": [62, 79], "covari": [62, 63, 79], "knott": [62, 78, 79], "smith": [62, 78, 79], "theori": [62, 78, 79], "1984": [62, 78, 79], "distribution_estimation_uniform": 62, "emd_laplac": 62, "knn": 62, "sim_param": 62, "n_": 62, "s_i": 62, "s_j": 62, "n_t": 62, "t_i": 62, "t_j": 62, "neighbor": 62, "bandwidth": 62, "workshop": [62, 78, 79], "otml": [62, 78, 79], "joint_ot_mapping_kernel": [62, 79], "kerneltyp": 62, "verbose2": 62, "nonlinear": [62, 79], "2_f": 62, "2_": 62, "jointli": 62, "constant": [62, 66, 67, 68], "supplementari": 62, "materi": 62, "conditionn": 62, "bcd": [62, 66], "joint_ot_mapping_linear": [62, 79], "neutral": 62, "sinkhorn_l1l2_gl": [62, 79], "regula": 62, "generalis": [62, 67], "keyword": [62, 76], "store": 62, "transform_label": 62, "inverse_transform_label": 62, "y_": [62, 66], "y_t": 62, "unlabel": [62, 69, 78, 79], "transp_x": 62, "transp_xt": 62, "propag": 62, "transp_i": 62, "soft": 62, "nb_class": 62, "similarity_param": 62, "max_inner_it": 62, "inner_tol": 62, "distribution_estim": 62, "out_of_sample_map": 62, "disp": 62, "occur": [62, 79], "pairwis": [62, 66], "kind": [62, 67, 79], "emploi": 62, "limit_max": 62, "10e": 62, "n_class": 62, "849": 62, "858": 62, "nk_source_sampl": 62, "daigon": 62, "mapping_": 62, "lpl1": 62, "infti": 62, "unbalancedsinkhorntransport": 62, "deviaton": 63, "classif": 63, "reduct": [64, 78, 80], "fisher": [64, 69, 79], "dimensionn": 64, "ridg": 64, "proj": [64, 72], "projection_robust_wasserstein": 64, "u0": 64, "max_": [64, 71, 73, 74], "pi_": 64, "stiefel": [64, 79], "stepsiz": 64, "riemannian": [64, 78, 79], "ma": [64, 78, 79], "lai": [64, 78, 79], "split_class": 64, "split": 64, "sinkhorn_method": 64, "limits_i": 64, "limits_": 64, "neq": [64, 79], "steepest": 64, "trustregion": 64, "region": 64, "normalis": 64, "wasserstaiun": 64, "1608": [64, 78, 79], "08063": [64, 78, 79], "gw_distance_estim": 66, "nb_samples_p": 66, "nb_samples_q": 66, "unbias": 66, "csr": 66, "replac": [66, 79, 80], "emonet": [66, 78, 79], "sebban": 66, "marc": [66, 78, 79], "mlj": 66, "entropic_gromov_barycent": [66, 79], "entropic_gromov_wasserstein2": 66, "fixed_structur": 66, "fixed_featur": 66, "init_x": 66, "eq": [66, 73], "kei": 66, "cdict_init": 66, "ydict_init": 66, "fgw_": 66, "Such": 66, "_d": 66, "distibut": 66, "whose": [66, 67, 71], "cdict": 66, "ydict": 66, "randomli": 66, "nonneg": 66, "strategi": 66, "consecut": 66, "conjug": [66, 73], "cdict_best_st": 66, "compos": 66, "ydict_best_st": 66, "w_d": 66, "emb": 66, "depict": 66, "span": [66, 67], "current_loss": 66, "gw_2": 66, "gwggrad": 66, "constc": [66, 68], "hc1": 66, "hc2": 66, "proposit": [66, 73, 74], "h1": 66, "gwloss": 66, "init_matrix": 66, "otim": 66, "gromow": [66, 79], "read": [66, 78], "f_1": 66, "f_2": 66, "h_1": 66, "h_2": 66, "2b": 66, "threshold_plan": 66, "frank": 66, "wolf": 66, "_iter": 66, "pn": 66, "complex": [66, 79], "delet": [66, 71], "violat": [66, 67, 79], "nb_samples_grad": 66, "tensor_product": 66, "ten": 66, "update_feature_matrix": 66, "update_kl_loss": 66, "update_square_loss": 66, "update_structure_matrix": 66, "alpha0": [67, 68], "beta0": 67, "below": [67, 78, 80], "basic": 67, "alpha_0": 67, "beta_0": 67, "check_number_thread": 67, "request": [67, 72, 78], "valid": 67, "estimate_dual_null_weight": 67, "rather": 67, "coars": 67, "emd_c": 67, "discard": 67, "amount": [67, 69, 79, 80], "max_j": 67, "max_i": 67, "alpha_i": 67, "beta_j": [67, 73], "y_init": 67, "nu_i": 67, "b_l": 67, "y_l": 67, "a_": 67, "d_i": 67, "w_1": [67, 79], "w_p": [67, 79], "p_i": 67, "p_ix_": 67, "rightarrow": 67, "don": 67, "ill": 67, "anywai": 67, "ransport": [68, 77], "reg_1": 68, "reg_2": 68, "line_search_armijo": 68, "xk": 68, "pk": 68, "gfk": 68, "old_fval": 68, "alpha_min": 68, "alpha_max": 68, "x_k": 68, "p_k": 68, "const": 68, "fc": 68, "fa": 68, "solve_1d_linesearch_quad": 68, "bx": 68, "solve_linesearch": 68, "deltag": 68, "mi": [68, 78], "f_val": 68, "gc": 68, "fw": 68, "useless": 68, "costfr": 69, "initialis": 69, "entropic_partial_gromov_wasserstein2": 69, "gwgrad_parti": 69, "n_p": 69, "n_u": 69, "nb_dummi": 69, "gwloss_parti": 69, "thre": 69, "dummi": [69, 80], "instabl": 69, "popul": 69, "partial_gromov_wasserstein2": 69, "deal": 69, "especi": [69, 79], "smoother": 69, "repartit": 69, "reservoir": [69, 79], "caffarelli": [69, 78, 79], "mccann": [69, 78, 79], "2010": [69, 78], "boundari": [69, 78, 79], "mong": [69, 78], "amper": [69, 78, 79], "obstacl": [69, 78, 79], "annal": [69, 78, 79], "673": [69, 78, 79], "partial_wasserstein_lagrang": 69, "partial_wasserstein2": [69, 79], "rao": 69, "tune": 69, "attain": 69, "shown": [70, 79], "na": 70, "thr": 70, "noth": 70, "complement_schur": 71, "m_current": 71, "id_pop": 71, "schur": 71, "complement": 71, "aris": 71, "bmatrix": 71, "m_k": 71, "h_a": 71, "th_a": 71, "previou": 71, "backslash": 71, "r_": 71, "depriv": 71, "compute_next_remov": 71, "current_gamma": 71, "largest": 71, "vanish": [71, 79], "phi_j": 71, "delta_j": 71, "intercept": 71, "slope": 71, "next_removal_gamma": 71, "next_removal_index": 71, "gamma_list": 71, "pi_list": 71, "piecewis": 71, "flatten": 71, "19722222": 71, "05555556": 71, "24722222": 71, "construct_augmented_h": 71, "active_index": 71, "hc": 71, "hrhr": 71, "augment": 71, "_h": 71, "h_": 71, "h_r": 71, "h_c": 71, "h_augment": 71, "fully_relaxed_path": 71, "itmax": 71, "reformul": 71, "min_t": 71, "99958333e": 71, "00000000e": 71, "88888889e": 71, "99938889e": 71, "ot_next_gamma": 71, "hth": 71, "hty": 71, "inact": 71, "_a": 71, "next_gamma": 71, "next_active_index": 71, "recast_ot_as_lasso": 71, "recast": 71, "1_m": 71, "1_n": 71, "particularli": [71, 79], "uot2": 71, "recast_semi_relaxed_as_lasso": 71, "hr": 71, "auxiliari": 71, "constitut": 71, "semi_relaxed_next_gamma": 71, "phi_u": 71, "delta_u": 71, "hra": 71, "ri": 71, "ra": 71, "ith": 71, "lagrang": [71, 76], "semi_relaxed_path": 71, "99980556e": 71, "94444444e": 71, "get_random_project": 72, "unit": [72, 79], "sphere": 72, "ue": 72, "proc": 73, "1710": 73, "06276": 73, "mblondel": 73, "dual_obj_grad": 73, "regul": 73, "delta_omega": 73, "obj": 73, "grad_alpha": 73, "grad_beta": 73, "get_plan_from_du": 73, "retriev": 73, "get_plan_from_semi_du": 73, "projection_simplex": 73, "substack": 73, "z_i": 73, "z_j": 73, "semi_dual_obj_grad": 73, "max_omega": 73, "decent": 73, "nbb": 73, "sinhorn": 73, "smooth_ot_semi_du": [73, 79], "solve_du": 73, "solve_semi_du": 73, "negentropi": 73, "sup_": 73, "nabla": 73, "intend": 73, "appar": 73, "squaredl2": 73, "averaged_sgd_entropic_transport": 74, "300000": 74, "contin": 74, "alg": 74, "ave_v": 74, "53942342e": 74, "98640673e": 74, "75945647e": 74, "27664307e": 74, "21556999e": 74, "26350515e": 74, "30491795e": 74, "36017394e": 74, "54070702e": 74, "63581358e": 74, "29581672e": 74, "32812798e": 74, "60578198e": 74, "35916645e": 74, "28023223e": 74, "05336238e": 74, "86808864e": 74, "59774324e": 74, "08702729e": 74, "21359007e": 74, "17218856e": 74, "12931802e": 74, "87962526e": 74, "18342700e": 74, "14237512e": 74, "67487857e": 74, "23016955e": 74, "38291052e": 74, "batch_grad_du": 74, "batch_alpha": 74, "batch_beta": 74, "partial_": 74, "b_": 74, "l_v": 74, "b_v": 74, "l_u": 74, "b_u": 74, "30000": 74, "71759102": 74, "57057384": 74, "85576566": 74, "1208211": 74, "59190466": 74, "197148": 74, "17805133": 74, "49741367": 74, "57478564": 74, "40075528": 74, "75890102": 74, "09730063e": 74, "38169324e": 74, "50365455e": 74, "72731415e": 74, "58432437e": 74, "89881299e": 74, "09558411e": 74, "35469849e": 74, "26489515e": 74, "15536035e": 74, "99778211e": 74, "02601593e": 74, "05390622e": 74, "31085068e": 74, "65191787e": 74, "55812785e": 74, "82299812e": 74, "12099102e": 74, "44989098e": 74, "37719187e": 74, "06266486e": 74, "16230494e": 74, "26215141e": 74, "81514609e": 74, "06713990e": 74, "98139808e": 74, "46829338e": 74, "62371424e": 74, "c_transform_entrop": 74, "coordinate_grad_semi_du": 74, "bewar": 74, "dual_loss": 74, "sag_entropic_transport": 74, "sgd_entropic_regular": 74, "64171798": 74, "27932201": 74, "78132257": 74, "15638935": 74, "54888354": 74, "03663469": 74, "20595781": 74, "51207194": 74, "58033189": 74, "28922676": 74, "26859736": 74, "97276541e": 74, "81248547e": 74, "22136048e": 74, "95442423e": 74, "23494310e": 74, "43286263e": 74, "06927079e": 74, "82389139e": 74, "07542414e": 74, "67897769e": 74, "48904999e": 74, "72030247e": 74, "26271990e": 74, "53375455e": 74, "16535024e": 74, "88812650e": 74, "60423265e": 74, "89585256e": 74, "81267087e": 74, "39458256e": 74, "37557504e": 74, "85189176e": 74, "72335760e": 74, "55491279e": 74, "33096109e": 74, "11683954e": 74, "02962051e": 74, "43097516e": 74, "64057733": 74, "2683513": 74, "75610161": 74, "16024284": 74, "54926534": 74, "0514201": 74, "19958936": 74, "51372571": 74, "58843489": 74, "27993921": 74, "24344807": 74, "97377795e": 74, "86706853e": 74, "15682001e": 74, "82586997e": 74, "19566963e": 74, "42016865e": 74, "02777272e": 74, "68823708e": 74, "00379244e": 74, "56562018e": 74, "40462171e": 74, "63579656e": 74, "28626062e": 74, "60031599e": 74, "13193826e": 74, "67977735e": 74, "61972739e": 74, "94609051e": 74, "77886693e": 74, "36046648e": 74, "44810042e": 74, "89476742e": 74, "73285847e": 74, "51826036e": 74, "30118293e": 74, "12398660e": 74, "95148998e": 74, "26247246e": 74, "barycenter_unbalanced_sinkhorn": 75, "barycenter_unbalanced_stabil": [75, 79], "absorpt": 75, "lbfgsb_unbalanc": 75, "reg_div": 75, "regm_div": 75, "div_m": 75, "quantifi": 75, "mm_unbalanced2": 75, "b_i": 75, "thershold": 75, "check_param": 76, "miss": 76, "check_random_st": 76, "turn": 76, "singleton": 76, "alreadi": [76, 79, 80], "valueerror": 76, "clean_zero": [76, 80], "compon": [76, 79], "cost_norm": 76, "median": 76, "loglog": 76, "lin_squar": 76, "multipli": 76, "euclidean_dist": 76, "pair": 76, "n_samples_1": 76, "n_samples_2": 76, "label_norm": 76, "smallest": 76, "lst": 76, "parmap": 76, "nproc": 76, "multiprocess": 76, "closest": 76, "orthogon": 76, "get_param": 76, "deep": [76, 79], "subobject": 76, "param": 76, "set_param": 76, "pipelin": 76, "latter": 76, "__": 76, "sparse_plan": 76, "lazy_plan": 76, "a_to_b": 76, "b_to_a": 76, "citat": 76, "plain": 76, "bibtex": [76, 78], "symbol": 76, "keop": 76, "lazytensor": 76, "marginal_a": 76, "marginal_b": 76, "potential_a": 76, "potential_b": 76, "extra": 76, "decor": 76, "mark": 76, "blob": 76, "instanti": [76, 80], "parenthes": 76, "some_funct": 76, "sever": [78, 79, 80], "websit": 78, "jmlr": [78, 80], "aur\u00e9li": 78, "nemo": 78, "fournier": 78, "antoni": 78, "schutz": 78, "danica": 78, "sutherland": 78, "alexand": 78, "tong": 78, "articl": 78, "flamary2021pot": 78, "aur": 78, "lie": [78, 79], "year": [78, 79, 80], "volum": 78, "url": 78, "v22": 78, "451": 78, "linux": [78, 80], "macosx": [78, 80], "window": [78, 80], "cython": [78, 79, 80], "latest": 78, "archiv": 78, "abl": 78, "easier": [78, 79], "wd": 78, "wd_reg": 78, "t_reg": [78, 79], "ba": 78, "question": 78, "slack": 78, "channel": 78, "gitter": 78, "bug": [78, 80], "2292": [78, 79], "2300": [78, 79], "agueh": [78, 79], "904": [78, 79], "924": [78, 79], "36th": [78, 79], "38th": [78, 79], "mjl": [78, 79], "pointer": [79, 80], "concret": 79, "book": 79, "ml": 79, "gaspard": 79, "1781": 79, "move": [79, 80], "overal": 79, "difficult": 79, "kantorovitch": 79, "aspect": 79, "share": 79, "disjoint": 79, "favor": 79, "popular": 79, "jensen": 79, "shannon": 79, "meaning": 79, "becam": 79, "overcom": 79, "spectra": 79, "itself": 79, "criterion": 79, "context": 79, "recent": [79, 80], "rapidli": 79, "grow": 79, "novel": [79, 80], "abil": 79, "extend": 79, "interfac": 79, "yet": [79, 80], "submodul": [79, 80], "configur": 79, "proven": 79, "nearli": 79, "still": [79, 80], "geomloss": 79, "lipschitz": 79, "exactli": 79, "filter": 79, "minibtach": 79, "wasserstsein": 79, "quit": [79, 80], "known": 79, "affin": 79, "hi": 79, "semin": 79, "strong": 79, "procedur": 79, "slower": 79, "implmement": 79, "variant": [79, 80], "tu": 79, "kullbach": 79, "similarli": 79, "pure": 79, "speed": [79, 80], "effect": 79, "densifi": 79, "lost": 79, "soon": 79, "_q": 79, "forc": 79, "choic": [79, 80], "major": [79, 80], "long": 79, "howev": 79, "w_kw": 79, "mu_k": 79, "clearli": 79, "b_k": 79, "linprog": 79, "cvxopt": [79, 80], "brought": 79, "brenier": 79, "eponym": 79, "theorem": 79, "basetransport": [79, 80], "classifi": [79, 80], "xs_map": 79, "inherit": 79, "linearli": 79, "projector": 79, "min_p": 79, "ot_": 79, "mu_i": 79, "mu_j": 79, "constrain": 79, "hard": [79, 80], "w_u": 79, "interestingli": 79, "fr\u00e9chet": 79, "w_kw_u": 79, "barycenter_unbalanced_sinkhorn_unbalanc": 79, "surplu": 79, "sent": 79, "resolut": 79, "c1_": 79, "c2_": 79, "realign": 79, "ck": 79, "fusion": 79, "coin": 79, "partli": 79, "seamlessli": [79, 80], "en": 79, "incur": 79, "far": 79, "longer": 79, "hopefulli": [79, 80], "disappear": 79, "becom": 79, "fulli": 79, "importerror": 79, "shortli": 79, "readm": [79, 80], "tri": [79, 80], "quicker": [79, 80], "nterpol": 79, "cc": 79, "9386": 79, "www": 79, "toronto": 79, "annals2010": 79, "2002": 79, "08276": 79, "mlr": 79, "press": 79, "v97": 79, "liutkus19a": 79, "372": 80, "376": 80, "387": 80, "388": 80, "395": 80, "393": 80, "371": 80, "assum": 80, "374": 80, "hit": 80, "stderr": 80, "cerr": 80, "stream": 80, "377": 80, "378": 80, "379": 80, "go": 80, "beyond": 80, "certain": 80, "slightli": 80, "46k": 80, "roughli": 80, "381": 80, "mismatch": 80, "386": 80, "391": 80, "around": 80, "402": 80, "built": 80, "403": 80, "setuptool": 80, "408": 80, "409": 80, "404": 80, "whith": 80, "412": 80, "413": 80, "notabl": 80, "less": 80, "background": 80, "autodiff": 80, "front": 80, "359": 80, "358": 80, "brand": 80, "357": 80, "minigalleri": 80, "334": 80, "336": 80, "341": 80, "319": 80, "362": 80, "364": 80, "363": 80, "valfunct": 80, "337": 80, "338": 80, "abi": 80, "old": 80, "346": 80, "349": 80, "feed": 80, "345": 80, "backpropag": 80, "351": 80, "352": 80, "tag": 80, "332": 80, "global": 80, "namespac": 80, "331": 80, "333": 80, "enabl": 80, "bring": 80, "wheel": 80, "older": 80, "realli": 80, "315": 80, "code_of_conduct": 80, "322": 80, "308": 80, "326": 80, "305": 80, "306": 80, "309": 80, "sinkhornl1l2": 80, "311": 80, "313": 80, "317": 80, "3018": 80, "novemb": 80, "nice": 80, "mechan": 80, "earli": 80, "moment": 80, "ott": 80, "devias": 80, "sinkorn": 80, "simplifi": 80, "pyproject": 80, "toml": 80, "pe": 80, "aarch64": 80, "raspberri": 80, "android": 80, "phone": 80, "maco": 80, "arm": 80, "processor": 80, "softwar": 80, "cite": 80, "improv": 80, "particular": 80, "usual": 80, "peopl": 80, "kamel": 80, "guerda": 80, "ai": 80, "idri": 80, "249": 80, "282": 80, "294": 80, "302": 80, "304": 80, "303": 80, "274": 80, "267": 80, "291": 80, "275": 80, "293": 80, "lazi": 80, "259": 80, "cleanup": 80, "298": 80, "smartphon": 80, "238": 80, "236": 80, "253": 80, "202": 80, "203": 80, "262": 80, "introductori": 80, "leak": 80, "254": 80, "284": 80, "287": 80, "288": 80, "278": 80, "258": 80, "234": 80, "241": 80, "242": 80, "215": 80, "281": 80, "286": 80, "infeas": 80, "217": 80, "201": 80, "207": 80, "208": 80, "bound": 80, "codecov": 80, "flake8": 80, "setup": 80, "flag": 80, "made": 80, "organ": 80, "own": 80, "host": 80, "offer": 80, "readthedoc": 80, "beauti": 80, "huge": 80, "correctli": 80, "travi": 80, "simpler": 80, "laplac": 80, "acknoledg": 80, "231": 80, "232": 80, "clean": 80, "bad": 80, "wassertein": 80, "jump": 80, "wild": 80, "state": 80, "fundament": 80, "month": 80, "until": 80, "python3stat": 80, "labeld": 80, "visibl": 80, "relev": 80, "64bit": 80, "acknowledg": 80, "past": 80, "manylinux": 80, "sep": 80, "among": 80, "rewrit": 80, "unmaintain": 80, "cudamat": 80, "keed": 80, "were": 80, "happi": 80, "stai": 80, "qualiti": 80, "stuff": 80, "markdown": 80, "pipi": 80, "renam": 80, "compliant": 80, "big": 80, "un": 80, "plug": 80, "unus": 80, "unicodedecodeerror": 80, "ascii": 80, "pytest": 80, "pep": 80, "du": 80, "jul": 80, "reloc": 80, "removimg": 80, "apr": 80, "tarnsport": 80, "paralel": 80, "jan": 80, "tweak": 80, "nov": 80, "oct": 80}, "objects": {"": [[2, 0, 0, "-", "ot"]], "ot": [[60, 0, 0, "-", "backend"], [2, 3, 1, "", "barycenter"], [2, 3, 1, "", "barycenter_unbalanced"], [61, 0, 0, "-", "bregman"], [62, 0, 0, "-", "da"], [63, 0, 0, "-", "datasets"], [2, 3, 1, "", "dist"], [64, 0, 0, "-", "dr"], [2, 3, 1, "", "emd"], [2, 3, 1, "", "emd2"], [2, 3, 1, "", "emd2_1d"], [2, 3, 1, "", "emd_1d"], [65, 0, 0, "-", "factored"], [2, 3, 1, "", "factored_optimal_transport"], [2, 3, 1, "", "fused_gromov_wasserstein"], [2, 3, 1, "", "fused_gromov_wasserstein2"], [66, 0, 0, "-", "gromov"], [2, 3, 1, "", "gromov_barycenters"], [2, 3, 1, "", "gromov_wasserstein"], [2, 3, 1, "", "gromov_wasserstein2"], [67, 0, 0, "-", "lp"], [2, 3, 1, "", "max_sliced_wasserstein_distance"], [68, 0, 0, "-", "optim"], [69, 0, 0, "-", "partial"], [70, 0, 0, "-", "plot"], [71, 0, 0, "-", "regpath"], [2, 3, 1, "", "sinkhorn"], [2, 3, 1, "", "sinkhorn2"], [2, 3, 1, "", "sinkhorn_lpl1_mm"], [2, 3, 1, "", "sinkhorn_unbalanced"], [2, 3, 1, "", "sinkhorn_unbalanced2"], [72, 0, 0, "-", "sliced"], [2, 3, 1, "", "sliced_wasserstein_distance"], [73, 0, 0, "-", "smooth"], [2, 3, 1, "", "solve"], [74, 0, 0, "-", "stochastic"], [2, 3, 1, "", "tic"], [2, 3, 1, "", "toc"], [2, 3, 1, "", "toq"], [75, 0, 0, "-", "unbalanced"], [2, 3, 1, "", "unif"], [76, 0, 0, "-", "utils"], [2, 3, 1, "", "wasserstein_1d"], [77, 0, 0, "-", "weak"], [2, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[60, 1, 1, "", "Backend"], [60, 1, 1, "", "CupyBackend"], [60, 1, 1, "", "JaxBackend"], [60, 1, 1, "", "NumpyBackend"], [60, 1, 1, "", "TensorflowBackend"], [60, 1, 1, "", "TorchBackend"], [60, 3, 1, "", "get_backend"], [60, 3, 1, "", "get_backend_list"], [60, 3, 1, "", "to_numpy"]], "ot.backend.Backend": [[60, 2, 1, "", "abs"], [60, 2, 1, "", "allclose"], [60, 2, 1, "", "any"], [60, 2, 1, "", "arange"], [60, 2, 1, "", "argmax"], [60, 2, 1, "", "argmin"], [60, 2, 1, "", "argsort"], [60, 2, 1, "", "array_equal"], [60, 2, 1, "", "assert_same_dtype_device"], [60, 2, 1, "", "bitsize"], [60, 2, 1, "", "clip"], [60, 2, 1, "", "concatenate"], [60, 2, 1, "", "coo_matrix"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "cumsum"], [60, 2, 1, "", "device_type"], [60, 2, 1, "", "diag"], [60, 2, 1, "", "dot"], [60, 2, 1, "", "dtype_device"], [60, 2, 1, "", "einsum"], [60, 2, 1, "", "eliminate_zeros"], [60, 2, 1, "", "exp"], [60, 2, 1, "", "eye"], [60, 2, 1, "", "flip"], [60, 2, 1, "", "from_numpy"], [60, 2, 1, "", "full"], [60, 2, 1, "", "inv"], [60, 2, 1, "", "is_floating_point"], [60, 2, 1, "", "isfinite"], [60, 2, 1, "", "isinf"], [60, 2, 1, "", "isnan"], [60, 2, 1, "", "issparse"], [60, 2, 1, "", "kl_div"], [60, 2, 1, "", "linspace"], [60, 2, 1, "", "log"], [60, 2, 1, "", "logsumexp"], [60, 2, 1, "", "max"], [60, 2, 1, "", "maximum"], [60, 2, 1, "", "mean"], [60, 2, 1, "", "meshgrid"], [60, 2, 1, "", "min"], [60, 2, 1, "", "minimum"], [60, 2, 1, "", "norm"], [60, 2, 1, "", "ones"], [60, 2, 1, "", "outer"], [60, 2, 1, "", "power"], [60, 2, 1, "", "rand"], [60, 2, 1, "", "randn"], [60, 2, 1, "", "repeat"], [60, 2, 1, "", "reshape"], [60, 2, 1, "", "searchsorted"], [60, 2, 1, "", "seed"], [60, 2, 1, "", "set_gradients"], [60, 2, 1, "", "solve"], [60, 2, 1, "", "sort"], [60, 2, 1, "", "sqrt"], [60, 2, 1, "", "sqrtm"], [60, 2, 1, "", "squeeze"], [60, 2, 1, "", "stack"], [60, 2, 1, "", "std"], [60, 2, 1, "", "sum"], [60, 2, 1, "", "take_along_axis"], [60, 2, 1, "", "to_numpy"], [60, 2, 1, "", "tocsr"], [60, 2, 1, "", "todense"], [60, 2, 1, "", "trace"], [60, 2, 1, "", "unique"], [60, 2, 1, "", "where"], [60, 2, 1, "", "zero_pad"], [60, 2, 1, "", "zeros"]], "ot.backend.CupyBackend": [[60, 2, 1, "", "abs"], [60, 2, 1, "", "allclose"], [60, 2, 1, "", "any"], [60, 2, 1, "", "arange"], [60, 2, 1, "", "argmax"], [60, 2, 1, "", "argmin"], [60, 2, 1, "", "argsort"], [60, 2, 1, "", "array_equal"], [60, 2, 1, "", "assert_same_dtype_device"], [60, 2, 1, "", "bitsize"], [60, 2, 1, "", "clip"], [60, 2, 1, "", "concatenate"], [60, 2, 1, "", "coo_matrix"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "cumsum"], [60, 2, 1, "", "device_type"], [60, 2, 1, "", "diag"], [60, 2, 1, "", "dot"], [60, 2, 1, "", "dtype_device"], [60, 2, 1, "", "einsum"], [60, 2, 1, "", "eliminate_zeros"], [60, 2, 1, "", "exp"], [60, 2, 1, "", "eye"], [60, 2, 1, "", "flip"], [60, 2, 1, "", "full"], [60, 2, 1, "", "inv"], [60, 2, 1, "", "is_floating_point"], [60, 2, 1, "", "isfinite"], [60, 2, 1, "", "isinf"], [60, 2, 1, "", "isnan"], [60, 2, 1, "", "issparse"], [60, 2, 1, "", "kl_div"], [60, 2, 1, "", "linspace"], [60, 2, 1, "", "log"], [60, 2, 1, "", "logsumexp"], [60, 2, 1, "", "max"], [60, 2, 1, "", "maximum"], [60, 2, 1, "", "mean"], [60, 2, 1, "", "meshgrid"], [60, 2, 1, "", "min"], [60, 2, 1, "", "minimum"], [60, 2, 1, "", "norm"], [60, 2, 1, "", "ones"], [60, 2, 1, "", "outer"], [60, 2, 1, "", "power"], [60, 2, 1, "", "rand"], [60, 2, 1, "", "randn"], [60, 2, 1, "", "repeat"], [60, 2, 1, "", "reshape"], [60, 2, 1, "", "searchsorted"], [60, 2, 1, "", "seed"], [60, 2, 1, "", "set_gradients"], [60, 2, 1, "", "solve"], [60, 2, 1, "", "sort"], [60, 2, 1, "", "sqrt"], [60, 2, 1, "", "sqrtm"], [60, 2, 1, "", "squeeze"], [60, 2, 1, "", "stack"], [60, 2, 1, "", "std"], [60, 2, 1, "", "sum"], [60, 2, 1, "", "take_along_axis"], [60, 2, 1, "", "tocsr"], [60, 2, 1, "", "todense"], [60, 2, 1, "", "trace"], [60, 2, 1, "", "unique"], [60, 2, 1, "", "where"], [60, 2, 1, "", "zero_pad"], [60, 2, 1, "", "zeros"]], "ot.backend.JaxBackend": [[60, 2, 1, "", "abs"], [60, 2, 1, "", "allclose"], [60, 2, 1, "", "any"], [60, 2, 1, "", "arange"], [60, 2, 1, "", "argmax"], [60, 2, 1, "", "argmin"], [60, 2, 1, "", "argsort"], [60, 2, 1, "", "array_equal"], [60, 2, 1, "", "assert_same_dtype_device"], [60, 2, 1, "", "bitsize"], [60, 2, 1, "", "clip"], [60, 2, 1, "", "concatenate"], [60, 2, 1, "", "coo_matrix"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "cumsum"], [60, 2, 1, "", "device_type"], [60, 2, 1, "", "diag"], [60, 2, 1, "", "dot"], [60, 2, 1, "", "dtype_device"], [60, 2, 1, "", "einsum"], [60, 2, 1, "", "eliminate_zeros"], [60, 2, 1, "", "exp"], [60, 2, 1, "", "eye"], [60, 2, 1, "", "flip"], [60, 2, 1, "", "full"], [60, 2, 1, "", "inv"], [60, 2, 1, "", "is_floating_point"], [60, 2, 1, "", "isfinite"], [60, 2, 1, "", "isinf"], [60, 2, 1, "", "isnan"], [60, 2, 1, "", "issparse"], [60, 2, 1, "", "kl_div"], [60, 2, 1, "", "linspace"], [60, 2, 1, "", "log"], [60, 2, 1, "", "logsumexp"], [60, 2, 1, "", "max"], [60, 2, 1, "", "maximum"], [60, 2, 1, "", "mean"], [60, 2, 1, "", "meshgrid"], [60, 2, 1, "", "min"], [60, 2, 1, "", "minimum"], [60, 2, 1, "", "norm"], [60, 2, 1, "", "ones"], [60, 2, 1, "", "outer"], [60, 2, 1, "", "power"], [60, 2, 1, "", "rand"], [60, 2, 1, "", "randn"], [60, 2, 1, "", "repeat"], [60, 2, 1, "", "reshape"], [60, 2, 1, "", "searchsorted"], [60, 2, 1, "", "seed"], [60, 2, 1, "", "set_gradients"], [60, 2, 1, "", "solve"], [60, 2, 1, "", "sort"], [60, 2, 1, "", "sqrt"], [60, 2, 1, "", "sqrtm"], [60, 2, 1, "", "squeeze"], [60, 2, 1, "", "stack"], [60, 2, 1, "", "std"], [60, 2, 1, "", "sum"], [60, 2, 1, "", "take_along_axis"], [60, 2, 1, "", "tocsr"], [60, 2, 1, "", "todense"], [60, 2, 1, "", "trace"], [60, 2, 1, "", "unique"], [60, 2, 1, "", "where"], [60, 2, 1, "", "zero_pad"], [60, 2, 1, "", "zeros"]], "ot.backend.NumpyBackend": [[60, 2, 1, "", "abs"], [60, 2, 1, "", "allclose"], [60, 2, 1, "", "any"], [60, 2, 1, "", "arange"], [60, 2, 1, "", "argmax"], [60, 2, 1, "", "argmin"], [60, 2, 1, "", "argsort"], [60, 2, 1, "", "array_equal"], [60, 2, 1, "", "assert_same_dtype_device"], [60, 2, 1, "", "bitsize"], [60, 2, 1, "", "clip"], [60, 2, 1, "", "concatenate"], [60, 2, 1, "", "coo_matrix"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "cumsum"], [60, 2, 1, "", "device_type"], [60, 2, 1, "", "diag"], [60, 2, 1, "", "dot"], [60, 2, 1, "", "dtype_device"], [60, 2, 1, "", "einsum"], [60, 2, 1, "", "eliminate_zeros"], [60, 2, 1, "", "exp"], [60, 2, 1, "", "eye"], [60, 2, 1, "", "flip"], [60, 2, 1, "", "full"], [60, 2, 1, "", "inv"], [60, 2, 1, "", "is_floating_point"], [60, 2, 1, "", "isfinite"], [60, 2, 1, "", "isinf"], [60, 2, 1, "", "isnan"], [60, 2, 1, "", "issparse"], [60, 2, 1, "", "kl_div"], [60, 2, 1, "", "linspace"], [60, 2, 1, "", "log"], [60, 2, 1, "", "logsumexp"], [60, 2, 1, "", "max"], [60, 2, 1, "", "maximum"], [60, 2, 1, "", "mean"], [60, 2, 1, "", "meshgrid"], [60, 2, 1, "", "min"], [60, 2, 1, "", "minimum"], [60, 2, 1, "", "norm"], [60, 2, 1, "", "ones"], [60, 2, 1, "", "outer"], [60, 2, 1, "", "power"], [60, 2, 1, "", "rand"], [60, 2, 1, "", "randn"], [60, 2, 1, "", "repeat"], [60, 2, 1, "", "reshape"], [60, 2, 1, "", "searchsorted"], [60, 2, 1, "", "seed"], [60, 2, 1, "", "set_gradients"], [60, 2, 1, "", "solve"], [60, 2, 1, "", "sort"], [60, 2, 1, "", "sqrt"], [60, 2, 1, "", "sqrtm"], [60, 2, 1, "", "squeeze"], [60, 2, 1, "", "stack"], [60, 2, 1, "", "std"], [60, 2, 1, "", "sum"], [60, 2, 1, "", "take_along_axis"], [60, 2, 1, "", "tocsr"], [60, 2, 1, "", "todense"], [60, 2, 1, "", "trace"], [60, 2, 1, "", "unique"], [60, 2, 1, "", "where"], [60, 2, 1, "", "zero_pad"], [60, 2, 1, "", "zeros"]], "ot.backend.TensorflowBackend": [[60, 2, 1, "", "abs"], [60, 2, 1, "", "allclose"], [60, 2, 1, "", "any"], [60, 2, 1, "", "arange"], [60, 2, 1, "", "argmax"], [60, 2, 1, "", "argmin"], [60, 2, 1, "", "argsort"], [60, 2, 1, "", "array_equal"], [60, 2, 1, "", "assert_same_dtype_device"], [60, 2, 1, "", "bitsize"], [60, 2, 1, "", "clip"], [60, 2, 1, "", "concatenate"], [60, 2, 1, "", "coo_matrix"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "cumsum"], [60, 2, 1, "", "device_type"], [60, 2, 1, "", "diag"], [60, 2, 1, "", "dot"], [60, 2, 1, "", "dtype_device"], [60, 2, 1, "", "einsum"], [60, 2, 1, "", "eliminate_zeros"], [60, 2, 1, "", "exp"], [60, 2, 1, "", "eye"], [60, 2, 1, "", "flip"], [60, 2, 1, "", "full"], [60, 2, 1, "", "inv"], [60, 2, 1, "", "is_floating_point"], [60, 2, 1, "", "isfinite"], [60, 2, 1, "", "isinf"], [60, 2, 1, "", "isnan"], [60, 2, 1, "", "issparse"], [60, 2, 1, "", "kl_div"], [60, 2, 1, "", "linspace"], [60, 2, 1, "", "log"], [60, 2, 1, "", "logsumexp"], [60, 2, 1, "", "max"], [60, 2, 1, "", "maximum"], [60, 2, 1, "", "mean"], [60, 2, 1, "", "meshgrid"], [60, 2, 1, "", "min"], [60, 2, 1, "", "minimum"], [60, 2, 1, "", "norm"], [60, 2, 1, "", "ones"], [60, 2, 1, "", "outer"], [60, 2, 1, "", "power"], [60, 2, 1, "", "rand"], [60, 2, 1, "", "randn"], [60, 2, 1, "", "repeat"], [60, 2, 1, "", "reshape"], [60, 2, 1, "", "searchsorted"], [60, 2, 1, "", "seed"], [60, 2, 1, "", "set_gradients"], [60, 2, 1, "", "solve"], [60, 2, 1, "", "sort"], [60, 2, 1, "", "sqrt"], [60, 2, 1, "", "sqrtm"], [60, 2, 1, "", "squeeze"], [60, 2, 1, "", "stack"], [60, 2, 1, "", "std"], [60, 2, 1, "", "sum"], [60, 2, 1, "", "take_along_axis"], [60, 2, 1, "", "tocsr"], [60, 2, 1, "", "todense"], [60, 2, 1, "", "trace"], [60, 2, 1, "", "unique"], [60, 2, 1, "", "where"], [60, 2, 1, "", "zero_pad"], [60, 2, 1, "", "zeros"]], "ot.backend.TorchBackend": [[60, 2, 1, "", "abs"], [60, 2, 1, "", "allclose"], [60, 2, 1, "", "any"], [60, 2, 1, "", "arange"], [60, 2, 1, "", "argmax"], [60, 2, 1, "", "argmin"], [60, 2, 1, "", "argsort"], [60, 2, 1, "", "array_equal"], [60, 2, 1, "", "assert_same_dtype_device"], [60, 2, 1, "", "bitsize"], [60, 2, 1, "", "clip"], [60, 2, 1, "", "concatenate"], [60, 2, 1, "", "coo_matrix"], [60, 2, 1, "", "copy"], [60, 2, 1, "", "cumsum"], [60, 2, 1, "", "device_type"], [60, 2, 1, "", "diag"], [60, 2, 1, "", "dot"], [60, 2, 1, "", "dtype_device"], [60, 2, 1, "", "einsum"], [60, 2, 1, "", "eliminate_zeros"], [60, 2, 1, "", "exp"], [60, 2, 1, "", "eye"], [60, 2, 1, "", "flip"], [60, 2, 1, "", "full"], [60, 2, 1, "", "inv"], [60, 2, 1, "", "is_floating_point"], [60, 2, 1, "", "isfinite"], [60, 2, 1, "", "isinf"], [60, 2, 1, "", "isnan"], [60, 2, 1, "", "issparse"], [60, 2, 1, "", "kl_div"], [60, 2, 1, "", "linspace"], [60, 2, 1, "", "log"], [60, 2, 1, "", "logsumexp"], [60, 2, 1, "", "max"], [60, 2, 1, "", "maximum"], [60, 2, 1, "", "mean"], [60, 2, 1, "", "meshgrid"], [60, 2, 1, "", "min"], [60, 2, 1, "", "minimum"], [60, 2, 1, "", "norm"], [60, 2, 1, "", "ones"], [60, 2, 1, "", "outer"], [60, 2, 1, "", "power"], [60, 2, 1, "", "rand"], [60, 2, 1, "", "randn"], [60, 2, 1, "", "repeat"], [60, 2, 1, "", "reshape"], [60, 2, 1, "", "searchsorted"], [60, 2, 1, "", "seed"], [60, 2, 1, "", "set_gradients"], [60, 2, 1, "", "solve"], [60, 2, 1, "", "sort"], [60, 2, 1, "", "sqrt"], [60, 2, 1, "", "sqrtm"], [60, 2, 1, "", "squeeze"], [60, 2, 1, "", "stack"], [60, 2, 1, "", "std"], [60, 2, 1, "", "sum"], [60, 2, 1, "", "take_along_axis"], [60, 2, 1, "", "tocsr"], [60, 2, 1, "", "todense"], [60, 2, 1, "", "trace"], [60, 2, 1, "", "unique"], [60, 2, 1, "", "where"], [60, 2, 1, "", "zero_pad"], [60, 2, 1, "", "zeros"]], "ot.bregman": [[61, 3, 1, "", "barycenter"], [61, 3, 1, "", "barycenter_debiased"], [61, 3, 1, "", "barycenter_sinkhorn"], [61, 3, 1, "", "barycenter_stabilized"], [61, 3, 1, "", "convolutional_barycenter2d"], [61, 3, 1, "", "convolutional_barycenter2d_debiased"], [61, 3, 1, "", "empirical_sinkhorn"], [61, 3, 1, "", "empirical_sinkhorn2"], [61, 3, 1, "", "empirical_sinkhorn_divergence"], [61, 3, 1, "", "free_support_sinkhorn_barycenter"], [61, 3, 1, "", "geometricBar"], [61, 3, 1, "", "geometricMean"], [61, 3, 1, "", "greenkhorn"], [61, 3, 1, "", "jcpot_barycenter"], [61, 3, 1, "", "projC"], [61, 3, 1, "", "projR"], [61, 3, 1, "", "screenkhorn"], [61, 3, 1, "", "sinkhorn"], [61, 3, 1, "", "sinkhorn2"], [61, 3, 1, "", "sinkhorn_epsilon_scaling"], [61, 3, 1, "", "sinkhorn_knopp"], [61, 3, 1, "", "sinkhorn_log"], [61, 3, 1, "", "sinkhorn_stabilized"], [61, 3, 1, "", "unmix"]], "ot.da": [[62, 1, 1, "", "BaseTransport"], [62, 1, 1, "", "EMDLaplaceTransport"], [62, 1, 1, "", "EMDTransport"], [62, 1, 1, "", "JCPOTTransport"], [62, 1, 1, "", "LinearTransport"], [62, 1, 1, "", "MappingTransport"], [62, 3, 1, "", "OT_mapping_linear"], [62, 1, 1, "", "SinkhornL1l2Transport"], [62, 1, 1, "", "SinkhornLpl1Transport"], [62, 1, 1, "", "SinkhornTransport"], [62, 1, 1, "", "UnbalancedSinkhornTransport"], [62, 3, 1, "", "distribution_estimation_uniform"], [62, 3, 1, "", "emd_laplace"], [62, 3, 1, "", "joint_OT_mapping_kernel"], [62, 3, 1, "", "joint_OT_mapping_linear"], [62, 3, 1, "", "sinkhorn_l1l2_gl"], [62, 3, 1, "", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[62, 2, 1, "", "fit"], [62, 2, 1, "", "fit_transform"], [62, 2, 1, "", "inverse_transform"], [62, 2, 1, "", "inverse_transform_labels"], [62, 2, 1, "", "transform"], [62, 2, 1, "", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[62, 4, 1, "", "coupling_"], [62, 2, 1, "", "fit"]], "ot.da.EMDTransport": [[62, 4, 1, "", "coupling_"], [62, 2, 1, "", "fit"]], "ot.da.JCPOTTransport": [[62, 4, 1, "", "coupling_"], [62, 2, 1, "", "fit"], [62, 2, 1, "", "inverse_transform_labels"], [62, 4, 1, "", "log_"], [62, 4, 1, "", "proportions_"], [62, 2, 1, "", "transform"], [62, 2, 1, "", "transform_labels"]], "ot.da.LinearTransport": [[62, 2, 1, "", "fit"], [62, 2, 1, "", "inverse_transform"], [62, 2, 1, "", "transform"]], "ot.da.MappingTransport": [[62, 4, 1, "", "coupling_"], [62, 2, 1, "", "fit"], [62, 4, 1, "", "log_"], [62, 4, 1, "", "mapping_"], [62, 2, 1, "", "transform"]], "ot.da.SinkhornL1l2Transport": [[62, 4, 1, "", "coupling_"], [62, 2, 1, "", "fit"], [62, 4, 1, "", "log_"]], "ot.da.SinkhornLpl1Transport": [[62, 4, 1, "", "coupling_"], [62, 2, 1, "", "fit"]], "ot.da.SinkhornTransport": [[62, 4, 1, "", "coupling_"], [62, 2, 1, "", "fit"], [62, 4, 1, "", "log_"]], "ot.da.UnbalancedSinkhornTransport": [[62, 4, 1, "", "coupling_"], [62, 2, 1, "", "fit"], [62, 4, 1, "", "log_"]], "ot.datasets": [[63, 3, 1, "", "make_1D_gauss"], [63, 3, 1, "", "make_2D_samples_gauss"], [63, 3, 1, "", "make_data_classif"]], "ot.dr": [[64, 3, 1, "", "dist"], [64, 3, 1, "", "fda"], [64, 3, 1, "", "logsumexp"], [64, 3, 1, "", "projection_robust_wasserstein"], [64, 3, 1, "", "sinkhorn"], [64, 3, 1, "", "sinkhorn_log"], [64, 3, 1, "", "split_classes"], [64, 3, 1, "", "wda"]], "ot.factored": [[65, 3, 1, "", "factored_optimal_transport"]], "ot.gromov": [[66, 3, 1, "", "GW_distance_estimation"], [66, 3, 1, "", "entropic_gromov_barycenters"], [66, 3, 1, "", "entropic_gromov_wasserstein"], [66, 3, 1, "", "entropic_gromov_wasserstein2"], [66, 3, 1, "", "fgw_barycenters"], [66, 3, 1, "", "fused_gromov_wasserstein"], [66, 3, 1, "", "fused_gromov_wasserstein2"], [66, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [66, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [66, 3, 1, "", "gromov_barycenters"], [66, 3, 1, "", "gromov_wasserstein"], [66, 3, 1, "", "gromov_wasserstein2"], [66, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [66, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [66, 3, 1, "", "gwggrad"], [66, 3, 1, "", "gwloss"], [66, 3, 1, "", "init_matrix"], [66, 3, 1, "", "pointwise_gromov_wasserstein"], [66, 3, 1, "", "sampled_gromov_wasserstein"], [66, 3, 1, "", "tensor_product"], [66, 3, 1, "", "update_feature_matrix"], [66, 3, 1, "", "update_kl_loss"], [66, 3, 1, "", "update_square_loss"], [66, 3, 1, "", "update_structure_matrix"]], "ot.lp": [[67, 3, 1, "", "center_ot_dual"], [67, 3, 1, "", "check_number_threads"], [67, 3, 1, "", "emd"], [67, 3, 1, "", "emd2"], [67, 3, 1, "", "estimate_dual_null_weights"], [67, 3, 1, "", "free_support_barycenter"], [67, 3, 1, "", "generalized_free_support_barycenter"]], "ot.optim": [[68, 3, 1, "", "cg"], [68, 3, 1, "", "gcg"], [68, 3, 1, "", "line_search_armijo"], [68, 3, 1, "", "solve_1d_linesearch_quad"], [68, 3, 1, "", "solve_linesearch"]], "ot.partial": [[69, 3, 1, "", "entropic_partial_gromov_wasserstein"], [69, 3, 1, "", "entropic_partial_gromov_wasserstein2"], [69, 3, 1, "", "entropic_partial_wasserstein"], [69, 3, 1, "", "gwgrad_partial"], [69, 3, 1, "", "gwloss_partial"], [69, 3, 1, "", "partial_gromov_wasserstein"], [69, 3, 1, "", "partial_gromov_wasserstein2"], [69, 3, 1, "", "partial_wasserstein"], [69, 3, 1, "", "partial_wasserstein2"], [69, 3, 1, "", "partial_wasserstein_lagrange"]], "ot.plot": [[70, 3, 1, "", "plot1D_mat"], [70, 3, 1, "", "plot2D_samples_mat"]], "ot.regpath": [[71, 3, 1, "", "complement_schur"], [71, 3, 1, "", "compute_next_removal"], [71, 3, 1, "", "compute_transport_plan"], [71, 3, 1, "", "construct_augmented_H"], [71, 3, 1, "", "fully_relaxed_path"], [71, 3, 1, "", "ot_next_gamma"], [71, 3, 1, "", "recast_ot_as_lasso"], [71, 3, 1, "", "recast_semi_relaxed_as_lasso"], [71, 3, 1, "", "regularization_path"], [71, 3, 1, "", "semi_relaxed_next_gamma"], [71, 3, 1, "", "semi_relaxed_path"]], "ot.sliced": [[72, 3, 1, "", "get_random_projections"], [72, 3, 1, "", "max_sliced_wasserstein_distance"], [72, 3, 1, "", "sliced_wasserstein_distance"]], "ot.smooth": [[73, 1, 1, "", "NegEntropy"], [73, 1, 1, "", "Regularization"], [73, 1, 1, "", "SquaredL2"], [73, 3, 1, "", "dual_obj_grad"], [73, 3, 1, "", "get_plan_from_dual"], [73, 3, 1, "", "get_plan_from_semi_dual"], [73, 3, 1, "", "projection_simplex"], [73, 3, 1, "", "semi_dual_obj_grad"], [73, 3, 1, "", "smooth_ot_dual"], [73, 3, 1, "", "smooth_ot_semi_dual"], [73, 3, 1, "", "solve_dual"], [73, 3, 1, "", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[73, 2, 1, "", "Omega"], [73, 2, 1, "", "delta_Omega"], [73, 2, 1, "", "max_Omega"]], "ot.smooth.Regularization": [[73, 2, 1, "", "Omega"], [73, 2, 1, "", "delta_Omega"], [73, 2, 1, "", "max_Omega"]], "ot.smooth.SquaredL2": [[73, 2, 1, "", "Omega"], [73, 2, 1, "", "delta_Omega"], [73, 2, 1, "", "max_Omega"]], "ot.stochastic": [[74, 3, 1, "", "averaged_sgd_entropic_transport"], [74, 3, 1, "", "batch_grad_dual"], [74, 3, 1, "", "c_transform_entropic"], [74, 3, 1, "", "coordinate_grad_semi_dual"], [74, 3, 1, "", "loss_dual_entropic"], [74, 3, 1, "", "loss_dual_quadratic"], [74, 3, 1, "", "plan_dual_entropic"], [74, 3, 1, "", "plan_dual_quadratic"], [74, 3, 1, "", "sag_entropic_transport"], [74, 3, 1, "", "sgd_entropic_regularization"], [74, 3, 1, "", "solve_dual_entropic"], [74, 3, 1, "", "solve_semi_dual_entropic"]], "ot.unbalanced": [[75, 3, 1, "", "barycenter_unbalanced"], [75, 3, 1, "", "barycenter_unbalanced_sinkhorn"], [75, 3, 1, "", "barycenter_unbalanced_stabilized"], [75, 3, 1, "", "lbfgsb_unbalanced"], [75, 3, 1, "", "mm_unbalanced"], [75, 3, 1, "", "mm_unbalanced2"], [75, 3, 1, "", "sinkhorn_knopp_unbalanced"], [75, 3, 1, "", "sinkhorn_stabilized_unbalanced"], [75, 3, 1, "", "sinkhorn_unbalanced"], [75, 3, 1, "", "sinkhorn_unbalanced2"]], "ot.utils": [[76, 1, 1, "", "BaseEstimator"], [76, 1, 1, "", "OTResult"], [76, 3, 1, "", "check_params"], [76, 3, 1, "", "check_random_state"], [76, 3, 1, "", "clean_zeros"], [76, 3, 1, "", "cost_normalization"], [76, 1, 1, "", "deprecated"], [76, 3, 1, "", "dist"], [76, 3, 1, "", "dist0"], [76, 3, 1, "", "dots"], [76, 3, 1, "", "euclidean_distances"], [76, 3, 1, "", "kernel"], [76, 3, 1, "", "label_normalization"], [76, 3, 1, "", "laplacian"], [76, 3, 1, "", "list_to_array"], [76, 3, 1, "", "parmap"], [76, 3, 1, "", "proj_simplex"], [76, 3, 1, "", "tic"], [76, 3, 1, "", "toc"], [76, 3, 1, "", "toq"], [76, 3, 1, "", "unif"]], "ot.utils.BaseEstimator": [[76, 2, 1, "", "get_params"], [76, 2, 1, "", "set_params"]], "ot.utils.OTResult": [[76, 5, 1, "", "a_to_b"], [76, 5, 1, "", "b_to_a"], [76, 5, 1, "", "citation"], [76, 5, 1, "", "lazy_plan"], [76, 5, 1, "", "marginal_a"], [76, 5, 1, "", "marginal_b"], [76, 5, 1, "", "marginals"], [76, 5, 1, "", "plan"], [76, 5, 1, "", "potential_a"], [76, 5, 1, "", "potential_b"], [76, 5, 1, "", "potentials"], [76, 5, 1, "", "sparse_plan"], [76, 5, 1, "", "status"], [76, 5, 1, "", "value"], [76, 5, 1, "", "value_linear"]], "ot.weak": [[77, 3, 1, "", "weak_optimal_transport"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"code": [0, 78], "conduct": [0, 78], "our": 0, "pledg": 0, "standard": 0, "respons": 0, "scope": 0, "enforc": 0, "attribut": [0, 33], "contribut": [1, 78], "pot": [1, 35, 39, 43, 78, 79], "how": [1, 79], "pull": 1, "request": 1, "checklist": 1, "file": 1, "bug": 1, "new": [1, 20, 80], "contributor": [1, 59], "tip": 1, "document": 1, "api": 2, "modul": [2, 79], "dual": [3, 6, 41, 43], "ot": [3, 6, 19, 20, 21, 22, 23, 24, 25, 26, 35, 37, 38, 43, 45, 47, 48, 49, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79], "solver": [3, 49, 79], "entrop": [3, 6, 12, 49, 57, 79], "quadrat": [3, 79], "regular": [3, 12, 23, 35, 43, 49, 56, 57, 79], "pytorch": [3, 4, 5, 6, 7, 8, 9], "data": [3, 6, 7, 9, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 36, 37, 38, 39, 40, 44, 45, 46, 48, 49, 51, 53, 54, 56, 57], "gener": [3, 4, 6, 7, 9, 11, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 36, 37, 38, 40, 44, 45, 46, 48, 49, 51, 53, 54, 56, 57, 79], "plot": [3, 6, 7, 9, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 53, 54, 55, 56, 57, 70], "convert": [3, 6], "torch": [3, 6], "tensor": [3, 6], "estim": [3, 4, 6, 7, 24, 25, 26, 33, 79], "variabl": [3, 6, 43], "teh": 3, "plan": [3, 6, 31, 43, 55], "optim": [4, 7, 19, 21, 22, 23, 27, 37, 38, 40, 43, 44, 45, 46, 47, 53, 56, 57, 68, 78, 79], "gromov": [4, 30, 31, 32, 33, 35, 55, 66, 79], "wasserstein": [4, 5, 7, 8, 9, 11, 12, 13, 15, 17, 30, 31, 32, 33, 35, 36, 43, 51, 54, 55, 79], "distanc": [4, 7, 21, 27, 30, 31, 35, 48, 51, 55, 79], "graph": [4, 29, 33], "gw": [4, 30, 31, 79], "w": 4, "r": 4, "t": 4, "weight": [4, 7], "templat": 4, "structur": [4, 30], "commun": 4, "cluster": [4, 33], "uniform": [4, 47], "compress": 4, "slice": [5, 35, 51, 72], "barycent": [5, 8, 11, 12, 13, 14, 15, 16, 17, 29, 32, 35, 54, 79], "gradient": 5, "flow": [5, 8], "anim": [5, 9, 17, 56], "trajectori": [5, 9], "along": [5, 9], "iter": [5, 9], "comput": [5, 10, 11, 13, 14, 15, 17, 18, 28, 29, 30, 31, 32, 34, 36, 37, 38, 41, 42, 43, 46, 48, 50, 52, 54, 55, 56, 57, 58, 79], "descent": 5, "continu": [6, 41], "deep": 6, "densiti": 6, "arget": 6, "given": 6, "sourc": [6, 7, 19, 21, 22, 23, 27], "sampl": [6, 9, 19, 21, 22, 23, 24, 25, 27, 31, 47, 55], "unmix": 7, "model": [7, 9, 33], "wrt": 7, "converg": 7, "object": 7, "plote": 7, "reweight": 7, "distribut": [7, 15, 16, 21, 26, 31, 40, 44, 45, 46, 51, 53, 54, 55, 79], "1d": [8, 11, 12, 14, 44, 48, 53, 54], "2": [9, 19, 21, 22, 23, 27, 33, 47, 80], "minibatch": 9, "gan": 9, "train": 9, "visual": [9, 13, 14, 30, 32, 33], "time": [10, 18, 28, 34, 42, 43, 50, 52, 58], "demo": [11, 14, 17, 54], "exact": [12, 37, 38, 57], "lp": [12, 67], "v": [12, 27, 37], "gaussian": [12, 14, 31, 55], "stair": 12, "dirac": 12, "final": 12, "figur": 12, "convolut": [13, 79], "exampl": [13, 31, 32, 35, 41, 45, 55, 57, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79], "prepar": [13, 32], "debias": 14, "sinkhorn": [14, 16, 22, 41, 43, 44, 45, 46, 48, 53, 79], "2d": [14, 15, 16, 31, 36, 46, 51, 55, 57], "imag": [14, 20, 24, 26], "free": [15, 16, 79], "support": [15, 16, 78, 79], "paramet": [16, 43], "inspect": 16, "interpol": [16, 54], "empir": [16, 21, 46], "project": [17, 36, 51], "match": 17, "rotat": 17, "domain": [19, 21, 22, 23, 25, 26, 35, 79], "adapt": [19, 20, 21, 22, 23, 24, 25, 26, 35, 79], "instanti": [19, 20, 21, 22, 23, 25], "differ": [19, 20, 21, 23, 25, 27, 47, 48, 51], "transport": [19, 20, 21, 22, 23, 24, 25, 27, 30, 37, 38, 40, 41, 43, 44, 45, 46, 47, 53, 56, 57, 78, 79], "algorithm": [19, 20, 21, 22, 23, 25, 41, 43], "fit": [19, 20, 21, 22, 23, 25], "them": [19, 20, 21, 22, 23, 25, 31, 55], "fig": [19, 21, 22, 23, 27], "1": [19, 21, 22, 23, 27, 33, 47, 80], "target": [19, 21, 22, 23, 27], "coupl": [19, 21, 22, 23, 27, 38], "color": [20, 26], "origin": [20, 26], "scatter": 20, "matrix": [21, 27, 30, 40, 41, 43, 44, 45, 53], "pairwis": [21, 27], "method": [21, 27, 31], "3": [21, 27, 33, 80], "multi": 22, "shift": 22, "all": 22, "jcpot": 22, "run": 22, "oracl": 22, "known": 22, "proport": 22, "laplacian": 23, "linear": [24, 33], "map": [24, 25, 26, 43, 79], "load": 24, "transform": [24, 26], "pixel": 26, "transfer": 26, "valu": 26, "otda": [27, 79], "unsupervis": 27, "semi": [27, 41, 56], "supervis": 27, "set": 27, "onto": 27, "us": [29, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79], "fgw": [29, 30, 79], "fuse": [30, 33, 35], "creat": 30, "matric": [30, 41, 47], "across": 30, "featur": [30, 33, 80], "two": [31, 55], "3d": [31, 55], "kernel": 31, "normal": 31, "displai": 31, "scalabl": 31, "stochast": [31, 33, 41, 74], "ani": 31, "loss": [31, 40, 43, 44, 45, 48, 53], "function": [31, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77], "smacof": 32, "md": 32, "dictionari": 33, "learn": 33, "dataset": [33, 47, 63], "compos": 33, "follow": 33, "block": 33, "from": 33, "atom": 33, "embed": 33, "space": 33, "endow": 33, "node": 33, "galleri": 35, "backend": [35, 60, 79], "other": [35, 79], "problem": [35, 41, 43], "unbalanc": [35, 53, 54, 56, 57, 75, 79], "partial": [35, 47, 55, 69, 79], "discrimin": [36, 79], "analysi": [36, 79], "fisher": 36, "weak": [37, 77], "an": [37, 38, 79], "solut": [37, 38], "factor": [38, 65], "logo": 39, "toolbox": [39, 43, 78], "clear": 39, "background": 39, "dark": 39, "screen": 40, "screenkhorn": [40, 61], "solv": [40, 43, 44, 45, 49, 53, 79], "discret": 41, "case": [41, 79], "compar": 41, "result": [41, 57], "introduct": 43, "python": [43, 78], "instal": [43, 78], "import": 43, "get": 43, "help": 43, "first": [43, 80], "bakeri": 43, "citi": 43, "cost": 43, "emd": [43, 44, 45, 46, 48, 49, 79], "vizual": 43, "vari": 43, "smooth": [45, 73], "between": [46, 79], "emprir": 46, "gournd": 47, "metric": 47, "circl": 47, "frobeniu": 49, "norm": 49, "seed": 51, "number": 51, "mass": 53, "barycentr": 54, "one": 55, "path": 56, "l2": [56, 57], "penal": 56, "relax": 56, "fulli": 56, "regpath": [56, 71], "uot": [56, 57], "kl": 57, "creator": 59, "maintain": 59, "acknowledg": [59, 78], "perform": 60, "class": [60, 62, 73, 76, 79], "bregman": [61, 79], "barycenter_debias": 61, "convolutional_barycenter2d": [61, 79], "convolutional_barycenter2d_debias": 61, "empirical_sinkhorn": 61, "free_support_sinkhorn_barycent": 61, "depend": [61, 78], "da": 62, "ot_mapping_linear": 62, "basetransport": 62, "emdlaplacetransport": 62, "emdtransport": 62, "jcpottransport": 62, "lineartransport": 62, "mappingtransport": 62, "sinkhornl1l2transport": 62, "sinkhornlpl1transport": 62, "sinkhorntransport": 62, "make_1d_gauss": 63, "make_2d_samples_gauss": 63, "make_data_classif": 63, "dr": 64, "fda": 64, "wda": [64, 79], "entropic_gromov_wasserstein": 66, "fgw_barycent": 66, "fused_gromov_wasserstein_dictionary_learn": 66, "fused_gromov_wasserstein_linear_unmix": 66, "gromov_wasserstein_dictionary_learn": 66, "gromov_wasserstein_linear_unmix": 66, "pointwise_gromov_wasserstein": 66, "sampled_gromov_wasserstein": 66, "free_support_barycent": 67, "generalized_free_support_barycent": 67, "cg": 68, "gcg": 68, "entropic_partial_gromov_wasserstein": 69, "entropic_partial_wasserstein": 69, "partial_gromov_wasserstein": 69, "partial_wasserstein": 69, "plot1d_mat": 70, "plot2d_samples_mat": 70, "compute_transport_plan": 71, "regularization_path": 71, "smooth_ot_du": 73, "loss_dual_entrop": 74, "loss_dual_quadrat": 74, "plan_dual_entrop": 74, "plan_dual_quadrat": 74, "solve_dual_entrop": 74, "solve_semi_dual_entrop": 74, "mm_unbalanc": 75, "util": 76, "dist0": 76, "proj_simplex": 76, "baseestim": 76, "except": 76, "content": 78, "cite": 78, "pip": 78, "anaconda": 78, "conda": 78, "forg": 78, "post": 78, "check": 78, "short": 78, "notebook": 78, "refer": [78, 79], "indic": 78, "tabl": 78, "quick": 79, "start": 79, "guid": 79, "why": 79, "when": 79, "emd2": 79, "special": 79, "sinkhorn2": 79, "group": 79, "lasso": 79, "fix": 79, "mong": 79, "applic": 79, "g": 79, "multipl": 79, "cpu": 79, "gpu": 79, "work": 79, "acceler": 79, "list": 79, "compat": 79, "faq": 79, "releas": 80, "0": 80, "8": 80, "3dev": 80, "close": 80, "issu": 80, "7": 80, "6": 80, "5": 80, "deprec": 80, "4": 80, "v0": 80, "11": 80, "10": 80, "9": 80, "pre": 80}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Code of Conduct": [[0, "code-of-conduct"]], "Our Pledge": [[0, "our-pledge"]], "Our Standards": [[0, "our-standards"]], "Our Responsibilities": [[0, "our-responsibilities"]], "Scope": [[0, "scope"]], "Enforcement": [[0, "enforcement"]], "Attribution": [[0, "attribution"]], "Contributing to POT": [[1, "contributing-to-pot"]], "How to contribute": [[1, "how-to-contribute"]], "Pull Request Checklist": [[1, "pull-request-checklist"]], "Filing bugs": [[1, "filing-bugs"]], "New contributor tips": [[1, "new-contributor-tips"]], "Documentation": [[1, "documentation"]], "API and modules": [[2, "api-and-modules"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[3, "dual-ot-solvers-for-entropic-and-quadratic-regularized-ot-with-pytorch"]], "Data generation": [[3, "data-generation"], [6, "data-generation"], [9, "data-generation"]], "Plot data": [[3, "plot-data"], [6, "plot-data"], [7, "plot-data"], [9, "plot-data"], [24, "plot-data"], [25, "plot-data"], [29, "plot-data"], [30, "plot-data"], [36, "plot-data"], [46, "plot-data"], [48, "plot-data"], [51, "plot-data"], [54, "plot-data"], [56, "plot-data"]], "Convert data to torch tensors": [[3, "convert-data-to-torch-tensors"], [6, "convert-data-to-torch-tensors"]], "Estimating dual variables for entropic OT": [[3, "estimating-dual-variables-for-entropic-ot"]], "Plot teh estimated entropic OT plan": [[3, "plot-teh-estimated-entropic-ot-plan"]], "Estimating dual variables for quadratic OT": [[3, "estimating-dual-variables-for-quadratic-ot"]], "Plot the estimated quadratic OT plan": [[3, "plot-the-estimated-quadratic-ot-plan"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[4, "optimizing-the-gromov-wasserstein-distance-with-pytorch"]], "Graph generation": [[4, "graph-generation"]], "Optimizing GW w.r.t. the weights on a template structure": [[4, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Community clustering with uniform and estimated weights": [[4, "community-clustering-with-uniform-and-estimated-weights"]], "Graph compression with GW": [[4, "graph-compression-with-gw"]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[5, "sliced-wasserstein-barycenter-and-gradient-flow-with-pytorch"]], "Sliced Wasserstein gradient flow with Pytorch": [[5, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Animate trajectories of the gradient flow along iteration": [[5, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Compute the Sliced Wasserstein Barycenter": [[5, "compute-the-sliced-wasserstein-barycenter"]], "Animate trajectories of the barycenter along gradient descent": [[5, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Continuous OT plan estimation with Pytorch": [[6, "continuous-ot-plan-estimation-with-pytorch"]], "Estimating deep dual variables for entropic OT": [[6, "estimating-deep-dual-variables-for-entropic-ot"]], "Plot the density on arget for a given source sample": [[6, "plot-the-density-on-arget-for-a-given-source-sample"]], "Wasserstein unmixing with PyTorch": [[7, "wasserstein-unmixing-with-pytorch"]], "Generate data": [[7, "generate-data"], [11, "generate-data"], [15, "generate-data"], [19, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [27, "generate-data"], [29, "generate-data"], [30, "generate-data"], [36, "generate-data"], [40, "generate-data"], [44, "generate-data"], [45, "generate-data"], [46, "generate-data"], [48, "generate-data"], [49, "generate-data"], [51, "generate-data"], [53, "generate-data"], [54, "generate-data"], [56, "generate-data"], [57, "generate-data"]], "Optimization of the model wrt the Wasserstein distance": [[7, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Estimated weights and convergence of the objective": [[7, "estimated-weights-and-convergence-of-the-objective"]], "Ploting the reweighted source distribution": [[7, "ploting-the-reweighted-source-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[8, "wasserstein-1d-flow-and-barycenter-with-pytorch"]], "Wasserstein barycenter": [[8, "wasserstein-barycenter"]], "Wasserstein 2 Minibatch GAN with PyTorch": [[9, "wasserstein-2-minibatch-gan-with-pytorch"]], "Generator Model": [[9, "generator-model"]], "Training the model": [[9, "training-the-model"]], "Plot trajectories of generated samples along iterations": [[9, "plot-trajectories-of-generated-samples-along-iterations"]], "Animate trajectories of generated samples along iteration": [[9, "animate-trajectories-of-generated-samples-along-iteration"]], "Generate and visualize data": [[9, "generate-and-visualize-data"]], "Computation times": [[10, "computation-times"], [18, "computation-times"], [28, "computation-times"], [34, "computation-times"], [42, "computation-times"], [50, "computation-times"], [52, "computation-times"], [58, "computation-times"]], "1D Wasserstein barycenter demo": [[11, "d-wasserstein-barycenter-demo"]], "Barycenter computation": [[11, "barycenter-computation"], [29, "barycenter-computation"], [32, "barycenter-computation"], [54, "barycenter-computation"]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[12, "d-wasserstein-barycenter-exact-lp-vs-entropic-regularization"]], "Gaussian Data": [[12, "gaussian-data"]], "Stair Data": [[12, "stair-data"]], "Dirac Data": [[12, "dirac-data"]], "Final figure": [[12, "final-figure"]], "Convolutional Wasserstein Barycenter example": [[13, "convolutional-wasserstein-barycenter-example"]], "Data preparation": [[13, "data-preparation"], [32, "data-preparation"]], "Barycenter computation and visualization": [[13, "barycenter-computation-and-visualization"], [14, "barycenter-computation-and-visualization"]], "Debiased Sinkhorn barycenter demo": [[14, "debiased-sinkhorn-barycenter-demo"]], "Debiased barycenter of 1D Gaussians": [[14, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[14, "debiased-barycenter-of-2d-images"]], "2D free support Wasserstein barycenters of distributions": [[15, "d-free-support-wasserstein-barycenters-of-distributions"]], "Compute free support Wasserstein barycenter": [[15, "compute-free-support-wasserstein-barycenter"]], "Plot the Wasserstein barycenter": [[15, "plot-the-wasserstein-barycenter"], [15, "id1"]], "2D free support Sinkhorn barycenters of distributions": [[16, "d-free-support-sinkhorn-barycenters-of-distributions"]], "General Parameters": [[16, "general-parameters"]], "Generate Data": [[16, "generate-data"]], "Inspect generated distributions": [[16, "inspect-generated-distributions"]], "Interpolating Empirical Distributions": [[16, "interpolating-empirical-distributions"]], "Generalized Wasserstein Barycenter Demo": [[17, "generalized-wasserstein-barycenter-demo"]], "Generate and plot data": [[17, "generate-and-plot-data"]], "Barycenter computation and plot": [[17, "barycenter-computation-and-plot"]], "Plotting projection matches": [[17, "plotting-projection-matches"]], "Rotation animation": [[17, "rotation-animation"]], "OT for domain adaptation": [[19, "ot-for-domain-adaptation"]], "Instantiate the different transport algorithms and fit them": [[19, "instantiate-the-different-transport-algorithms-and-fit-them"], [20, "instantiate-the-different-transport-algorithms-and-fit-them"], [21, "instantiate-the-different-transport-algorithms-and-fit-them"], [23, "instantiate-the-different-transport-algorithms-and-fit-them"], [25, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Fig 1 : plots source and target samples": [[19, "fig-1-plots-source-and-target-samples"], [22, "fig-1-plots-source-and-target-samples"], [23, "fig-1-plots-source-and-target-samples"]], "Fig 2 : plot optimal couplings and transported samples": [[19, "fig-2-plot-optimal-couplings-and-transported-samples"], [22, "fig-2-plot-optimal-couplings-and-transported-samples"], [23, "fig-2-plot-optimal-couplings-and-transported-samples"]], "OT for image color adaptation": [[20, "ot-for-image-color-adaptation"]], "Plot original image": [[20, "plot-original-image"]], "Scatter plot of colors": [[20, "scatter-plot-of-colors"]], "Plot new images": [[20, "plot-new-images"]], "OT for domain adaptation on empirical distributions": [[21, "ot-for-domain-adaptation-on-empirical-distributions"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[21, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [27, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plots optimal couplings for the different methods": [[21, "fig-2-plots-optimal-couplings-for-the-different-methods"], [27, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[21, "fig-3-plot-transported-samples"], [27, "fig-3-plot-transported-samples"]], "OT for multi-source target shift": [[22, "ot-for-multi-source-target-shift"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[22, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate JCPOT adaptation algorithm and fit it": [[22, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Run oracle transport algorithm with known proportions": [[22, "run-oracle-transport-algorithm-with-known-proportions"]], "OT with Laplacian regularization for domain adaptation": [[23, "ot-with-laplacian-regularization-for-domain-adaptation"]], "Linear OT mapping estimation": [[24, "linear-ot-mapping-estimation"]], "Estimate linear mapping and transport": [[24, "estimate-linear-mapping-and-transport"]], "Plot transported samples": [[24, "plot-transported-samples"], [25, "plot-transported-samples"]], "Load image data": [[24, "load-image-data"]], "Estimate mapping and adapt": [[24, "estimate-mapping-and-adapt"]], "Plot transformed images": [[24, "plot-transformed-images"], [26, "plot-transformed-images"]], "OT mapping estimation for domain adaptation": [[25, "ot-mapping-estimation-for-domain-adaptation"]], "OT for image color adaptation with mapping estimation": [[26, "ot-for-image-color-adaptation-with-mapping-estimation"]], "Domain adaptation for pixel distribution transfer": [[26, "domain-adaptation-for-pixel-distribution-transfer"]], "Plot original images": [[26, "plot-original-images"]], "Plot pixel values distribution": [[26, "plot-pixel-values-distribution"]], "OTDA unsupervised vs semi-supervised setting": [[27, "otda-unsupervised-vs-semi-supervised-setting"]], "Transport source samples onto target samples": [[27, "transport-source-samples-onto-target-samples"]], "Plot graphs barycenter using FGW": [[29, "plot-graphs-barycenter-using-fgw"]], "Plot Barycenter": [[29, "plot-barycenter"]], "Plot Fused-gromov-Wasserstein": [[30, "plot-fused-gromov-wasserstein"]], "Create structure matrices and across-feature distance matrix": [[30, "create-structure-matrices-and-across-feature-distance-matrix"]], "Plot matrices": [[30, "plot-matrices"]], "Compute FGW/GW": [[30, "compute-fgw-gw"]], "Visualize transport matrices": [[30, "visualize-transport-matrices"]], "Gromov-Wasserstein example": [[31, "gromov-wasserstein-example"]], "Sample two Gaussian distributions (2D and 3D)": [[31, "sample-two-gaussian-distributions-2d-and-3d"]], "Plotting the distributions": [[31, "plotting-the-distributions"]], "Compute distance kernels, normalize them and then display": [[31, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute Gromov-Wasserstein plans and distance": [[31, "compute-gromov-wasserstein-plans-and-distance"]], "Compute GW with a scalable stochastic method with any loss function": [[31, "compute-gw-with-a-scalable-stochastic-method-with-any-loss-function"]], "Gromov-Wasserstein Barycenter example": [[32, "gromov-wasserstein-barycenter-example"]], "Smacof MDS": [[32, "smacof-mds"]], "Visualization": [[32, "visualization"]], "(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[33, "fused-gromov-wasserstein-linear-dictionary-learning"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[33, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Estimate the gromov-wasserstein dictionary from the dataset": [[33, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Visualization of the estimated dictionary atoms": [[33, "visualization-of-the-estimated-dictionary-atoms"], [33, "id1"]], "Visualization of the embedding space": [[33, "visualization-of-the-embedding-space"], [33, "id2"]], "Endow the dataset with node features": [[33, "endow-the-dataset-with-node-features"]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[33, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Examples gallery": [[35, "examples-gallery"]], "OT and regularized OT": [[35, "ot-and-regularized-ot"]], "POT backend examples": [[35, "pot-backend-examples"]], "Wasserstein barycenters": [[35, "wasserstein-barycenters"]], "Domain adaptation examples": [[35, "domain-adaptation-examples"]], "Gromov and Fused-Gromov-Wasserstein": [[35, "gromov-and-fused-gromov-wasserstein"]], "Other OT problems": [[35, "other-ot-problems"]], "Sliced Wasserstein Distance": [[35, "sliced-wasserstein-distance"]], "Unbalanced and Partial OT": [[35, "unbalanced-and-partial-ot"]], "Wasserstein Discriminant Analysis": [[36, "wasserstein-discriminant-analysis"], [79, "wasserstein-discriminant-analysis"]], "Compute Fisher Discriminant Analysis": [[36, "compute-fisher-discriminant-analysis"]], "Compute Wasserstein Discriminant Analysis": [[36, "compute-wasserstein-discriminant-analysis"]], "Plot 2D projections": [[36, "plot-2d-projections"]], "Weak Optimal Transport VS exact Optimal Transport": [[37, "weak-optimal-transport-vs-exact-optimal-transport"]], "Generate data an plot it": [[37, "generate-data-an-plot-it"], [38, "generate-data-an-plot-it"]], "Compute Weak OT and exact OT solutions": [[37, "compute-weak-ot-and-exact-ot-solutions"]], "Plot weak OT and exact OT solutions": [[37, "plot-weak-ot-and-exact-ot-solutions"]], "Optimal transport with factored couplings": [[38, "optimal-transport-with-factored-couplings"]], "Compute Factore OT and exact OT solutions": [[38, "compute-factore-ot-and-exact-ot-solutions"]], "Plot factored OT and exact OT solutions": [[38, "plot-factored-ot-and-exact-ot-solutions"]], "Logo of the POT toolbox": [[39, "logo-of-the-pot-toolbox"]], "Data for logo": [[39, "data-for-logo"]], "Plot the logo (clear background)": [[39, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[39, "plot-the-logo-dark-background"]], "Screened optimal transport (Screenkhorn)": [[40, "screened-optimal-transport-screenkhorn"]], "Plot distributions and loss matrix": [[40, "plot-distributions-and-loss-matrix"], [44, "plot-distributions-and-loss-matrix"], [45, "plot-distributions-and-loss-matrix"], [53, "plot-distributions-and-loss-matrix"]], "Solve Screenkhorn": [[40, "solve-screenkhorn"]], "Stochastic examples": [[41, "stochastic-examples"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[41, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Discrete case": [[41, "discrete-case"]], "Semi-Continuous Case": [[41, "semi-continuous-case"]], "Plot Transportation Matrices": [[41, "plot-transportation-matrices"], [41, "id2"]], "Compute the Transportation Matrix for the Dual Problem": [[41, "compute-the-transportation-matrix-for-the-dual-problem"]], "Semi-continuous case": [[41, "id1"]], "Compare the results with the Sinkhorn algorithm": [[41, "compare-the-results-with-the-sinkhorn-algorithm"]], "Introduction to Optimal Transport with Python": [[43, "introduction-to-optimal-transport-with-python"]], "POT Python Optimal Transport Toolbox": [[43, "pot-python-optimal-transport-toolbox"]], "POT installation": [[43, "pot-installation"]], "Import the toolbox": [[43, "import-the-toolbox"]], "Getting help": [[43, "getting-help"]], "First OT Problem": [[43, "first-ot-problem"]], "Plotting bakeries in the city": [[43, "plotting-bakeries-in-the-city"]], "Cost matrix": [[43, "cost-matrix"]], "Solving the OT problem with ot.emd": [[43, "solving-the-ot-problem-with-ot-emd"]], "Transportation plan vizualization": [[43, "transportation-plan-vizualization"]], "OT loss and dual variables": [[43, "ot-loss-and-dual-variables"]], "Regularized OT with Sinkhorn": [[43, "regularized-ot-with-sinkhorn"]], "Algorithm": [[43, "algorithm"]], "Plot the matrix and the map": [[43, "plot-the-matrix-and-the-map"]], "Varying the regularization parameter in Sinkhorn": [[43, "varying-the-regularization-parameter-in-sinkhorn"]], "Wasserstein loss and computational time": [[43, "wasserstein-loss-and-computational-time"]], "Optimal Transport for 1D distributions": [[44, "optimal-transport-for-1d-distributions"]], "Solve EMD": [[44, "solve-emd"], [45, "solve-emd"], [49, "solve-emd"]], "Solve Sinkhorn": [[44, "solve-sinkhorn"], [45, "solve-sinkhorn"]], "Smooth optimal transport example": [[45, "smooth-optimal-transport-example"]], "Solve Smooth OT": [[45, "solve-smooth-ot"]], "Optimal Transport between 2D empirical distributions": [[46, "optimal-transport-between-2d-empirical-distributions"]], "Compute EMD": [[46, "compute-emd"]], "Compute Sinkhorn": [[46, "compute-sinkhorn"]], "Emprirical Sinkhorn": [[46, "emprirical-sinkhorn"]], "Optimal Transport with different gournd metrics": [[47, "optimal-transport-with-different-gournd-metrics"]], "Dataset 1 : uniform sampling": [[47, "dataset-1-uniform-sampling"]], "Dataset 1 : Plot OT Matrices": [[47, "dataset-1-plot-ot-matrices"]], "Dataset 2 : Partial circle": [[47, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[47, "dataset-2-plot-ot-matrices"]], "OT distances in 1D": [[48, "ot-distances-in-1d"]], "Compute EMD for the different losses": [[48, "compute-emd-for-the-different-losses"]], "Compute Sinkhorn for the different losses": [[48, "compute-sinkhorn-for-the-different-losses"]], "Regularized OT with generic solver": [[49, "regularized-ot-with-generic-solver"]], "Solve EMD with Frobenius norm regularization": [[49, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[49, "solve-emd-with-entropic-regularization"]], "Solve EMD with Frobenius norm + entropic regularization": [[49, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Sliced Wasserstein Distance on 2D distributions": [[51, "sliced-wasserstein-distance-on-2d-distributions"]], "Sliced Wasserstein distance for different seeds and number of projections": [[51, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Plot Sliced Wasserstein Distance": [[51, "plot-sliced-wasserstein-distance"]], "1D Unbalanced optimal transport": [[53, "d-unbalanced-optimal-transport"]], "Solve Unbalanced Sinkhorn": [[53, "solve-unbalanced-sinkhorn"]], "plot the transported mass": [[53, "plot-the-transported-mass"]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[54, "d-wasserstein-barycenter-demo-for-unbalanced-distributions"]], "Barycentric interpolation": [[54, "barycentric-interpolation"]], "Partial Wasserstein and Gromov-Wasserstein example": [[55, "partial-wasserstein-and-gromov-wasserstein-example"]], "Sample two 2D Gaussian distributions and plot them": [[55, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Compute partial Wasserstein plans and distance": [[55, "compute-partial-wasserstein-plans-and-distance"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[55, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Compute partial Gromov-Wasserstein plans and distance": [[55, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Regularization path of l2-penalized unbalanced optimal transport": [[56, "regularization-path-of-l2-penalized-unbalanced-optimal-transport"]], "Compute semi-relaxed and fully relaxed regularization paths": [[56, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Plot the regularization path": [[56, "plot-the-regularization-path"]], "Animation of the regpath for UOT l2": [[56, "animation-of-the-regpath-for-uot-l2"]], "Plot the semi-relaxed regularization path": [[56, "plot-the-semi-relaxed-regularization-path"]], "Animation of the regpath for semi-relaxed UOT l2": [[56, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "2D examples of exact and entropic unbalanced optimal transport": [[57, "d-examples-of-exact-and-entropic-unbalanced-optimal-transport"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[57, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Plot the results": [[57, "plot-the-results"]], "Contributors": [[59, "contributors"], [59, "contributors"]], "Creators and Maintainers": [[59, "creators-and-maintainers"]], "Acknowledgments": [[59, "acknowledgments"]], "ot.backend": [[60, "module-ot.backend"]], "Performance": [[60, "performance"]], "Functions": [[60, "functions"], [61, "functions"], [62, "functions"], [63, "functions"], [64, "functions"], [65, "functions"], [66, "functions"], [67, "functions"], [68, "functions"], [69, "functions"], [70, "functions"], [71, "functions"], [72, "functions"], [73, "functions"], [74, "functions"], [75, "functions"], [76, "functions"], [77, "functions"]], "Classes": [[60, "classes"], [62, "classes"], [73, "classes"], [76, "classes"]], "ot.bregman": [[61, "module-ot.bregman"]], "Examples using ot.bregman.barycenter_debiased": [[61, "examples-using-ot-bregman-barycenter-debiased"]], "Examples using ot.bregman.convolutional_barycenter2d": [[61, "examples-using-ot-bregman-convolutional-barycenter2d"]], "Examples using ot.bregman.convolutional_barycenter2d_debiased": [[61, "examples-using-ot-bregman-convolutional-barycenter2d-debiased"]], "Examples using ot.bregman.empirical_sinkhorn": [[61, "examples-using-ot-bregman-empirical-sinkhorn"]], "Examples using ot.bregman.free_support_sinkhorn_barycenter": [[61, "examples-using-ot-bregman-free-support-sinkhorn-barycenter"]], "Dependency": [[61, null]], "Examples using ot.bregman.screenkhorn": [[61, "examples-using-ot-bregman-screenkhorn"]], "ot.da": [[62, "module-ot.da"]], "Examples using ot.da.OT_mapping_linear": [[62, "examples-using-ot-da-ot-mapping-linear"]], "Examples using ot.da.BaseTransport": [[62, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[62, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[62, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[62, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearTransport": [[62, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[62, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[62, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[62, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[62, "examples-using-ot-da-sinkhorntransport"]], "ot.datasets": [[63, "module-ot.datasets"]], "Examples using ot.datasets.make_1D_gauss": [[63, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[63, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[63, "examples-using-ot-datasets-make-data-classif"]], "ot.dr": [[64, "module-ot.dr"]], "Examples using ot.dr.fda": [[64, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[64, "examples-using-ot-dr-wda"]], "ot.factored": [[65, "module-ot.factored"]], "ot.gromov": [[66, "module-ot.gromov"]], "Examples using ot.gromov.entropic_gromov_wasserstein": [[66, "examples-using-ot-gromov-entropic-gromov-wasserstein"]], "Examples using ot.gromov.fgw_barycenters": [[66, "examples-using-ot-gromov-fgw-barycenters"]], "Examples using ot.gromov.fused_gromov_wasserstein_dictionary_learning": [[66, "examples-using-ot-gromov-fused-gromov-wasserstein-dictionary-learning"]], "Examples using ot.gromov.fused_gromov_wasserstein_linear_unmixing": [[66, "examples-using-ot-gromov-fused-gromov-wasserstein-linear-unmixing"]], "Examples using ot.gromov.gromov_wasserstein_dictionary_learning": [[66, "examples-using-ot-gromov-gromov-wasserstein-dictionary-learning"]], "Examples using ot.gromov.gromov_wasserstein_linear_unmixing": [[66, "examples-using-ot-gromov-gromov-wasserstein-linear-unmixing"]], "Examples using ot.gromov.pointwise_gromov_wasserstein": [[66, "examples-using-ot-gromov-pointwise-gromov-wasserstein"]], "Examples using ot.gromov.sampled_gromov_wasserstein": [[66, "examples-using-ot-gromov-sampled-gromov-wasserstein"]], "ot.lp": [[67, "module-ot.lp"]], "Examples using ot.lp.free_support_barycenter": [[67, "examples-using-ot-lp-free-support-barycenter"]], "Examples using ot.lp.generalized_free_support_barycenter": [[67, "examples-using-ot-lp-generalized-free-support-barycenter"]], "ot.optim": [[68, "module-ot.optim"]], "Examples using ot.optim.cg": [[68, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[68, "examples-using-ot-optim-gcg"]], "ot.partial": [[69, "module-ot.partial"]], "Examples using ot.partial.entropic_partial_gromov_wasserstein": [[69, "examples-using-ot-partial-entropic-partial-gromov-wasserstein"]], "Examples using ot.partial.entropic_partial_wasserstein": [[69, "examples-using-ot-partial-entropic-partial-wasserstein"]], "Examples using ot.partial.partial_gromov_wasserstein": [[69, "examples-using-ot-partial-partial-gromov-wasserstein"]], "Examples using ot.partial.partial_wasserstein": [[69, "examples-using-ot-partial-partial-wasserstein"]], "ot.plot": [[70, "module-ot.plot"]], "Examples using ot.plot.plot1D_mat": [[70, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[70, "examples-using-ot-plot-plot2d-samples-mat"]], "ot.regpath": [[71, "module-ot.regpath"]], "Examples using ot.regpath.compute_transport_plan": [[71, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[71, "examples-using-ot-regpath-regularization-path"]], "ot.sliced": [[72, "module-ot.sliced"]], "ot.smooth": [[73, "module-ot.smooth"]], "Examples using ot.smooth.smooth_ot_dual": [[73, "examples-using-ot-smooth-smooth-ot-dual"]], "ot.stochastic": [[74, "module-ot.stochastic"]], "Examples using ot.stochastic.loss_dual_entropic": [[74, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[74, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[74, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[74, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[74, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[74, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "ot.unbalanced": [[75, "module-ot.unbalanced"]], "Examples using ot.unbalanced.mm_unbalanced": [[75, "examples-using-ot-unbalanced-mm-unbalanced"]], "ot.utils": [[76, "module-ot.utils"]], "Examples using ot.utils.dist0": [[76, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_simplex": [[76, "examples-using-ot-utils-proj-simplex"]], "Examples using ot.utils.BaseEstimator": [[76, "examples-using-ot-utils-baseestimator"]], "Exceptions": [[76, "exceptions"]], "ot.weak": [[77, "module-ot.weak"]], "POT: Python Optimal Transport": [[78, "pot-python-optimal-transport"], [78, "pot-python-optimal-transport"]], "Contents": [[78, "contents"]], "Using and citing the toolbox": [[78, "using-and-citing-the-toolbox"]], "Installation": [[78, "installation"]], "Pip installation": [[78, "pip-installation"]], "Anaconda installation with conda-forge": [[78, "anaconda-installation-with-conda-forge"]], "Post installation check": [[78, "post-installation-check"]], "Dependencies": [[78, "dependencies"]], "Examples": [[78, "examples"]], "Short examples": [[78, "short-examples"]], "Examples and Notebooks": [[78, "examples-and-notebooks"]], "Acknowledgements": [[78, "acknowledgements"]], "Contributions and code of conduct": [[78, "contributions-and-code-of-conduct"]], "Support": [[78, "support"]], "References": [[78, "references"], [79, "references"]], "Indices and tables": [[78, "indices-and-tables"]], "Quick start guide": [[79, "quick-start-guide"]], "Why Optimal Transport ?": [[79, "why-optimal-transport"]], "When to use OT": [[79, "when-to-use-ot"]], "Wasserstein distance between distributions": [[79, "wasserstein-distance-between-distributions"]], "OT for mapping estimation": [[79, "ot-for-mapping-estimation"]], "When to use POT": [[79, "when-to-use-pot"]], "When not to use POT": [[79, "when-not-to-use-pot"]], "Optimal transport and Wasserstein distance": [[79, "optimal-transport-and-wasserstein-distance"]], "Solving optimal transport": [[79, "solving-optimal-transport"]], "Examples of use for ot.emd": [[79, "examples-of-use-for-ot-emd"]], "Computing Wasserstein distance": [[79, "computing-wasserstein-distance"]], "Examples of use for ot.emd2": [[79, "examples-of-use-for-ot-emd2"]], "Special cases": [[79, "special-cases"]], "Regularized Optimal Transport": [[79, "regularized-optimal-transport"]], "Entropic regularized OT": [[79, "entropic-regularized-ot"]], "Examples of use for ot.sinkhorn": [[79, "examples-of-use-for-ot-sinkhorn"]], "Examples of use for ot.sinkhorn2": [[79, "examples-of-use-for-ot-sinkhorn2"]], "Other regularizations": [[79, "other-regularizations"]], "Quadratic regularization": [[79, "quadratic-regularization"]], "Examples of use of quadratic regularization": [[79, "examples-of-use-of-quadratic-regularization"]], "Group Lasso regularization": [[79, "group-lasso-regularization"]], "Examples of group Lasso regularization": [[79, "examples-of-group-lasso-regularization"]], "Generic solvers": [[79, "generic-solvers"]], "Examples of the generic solvers": [[79, "examples-of-the-generic-solvers"]], "Wasserstein Barycenters": [[79, "wasserstein-barycenters"]], "Barycenters with fixed support": [[79, "barycenters-with-fixed-support"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[79, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[79, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Barycenters with free support": [[79, "barycenters-with-free-support"]], "Examples of free support barycenter estimation": [[79, "examples-of-free-support-barycenter-estimation"]], "Monge mapping and Domain adaptation": [[79, "monge-mapping-and-domain-adaptation"]], "Monge Mapping estimation": [[79, "monge-mapping-estimation"]], "Examples of Monge mapping estimation": [[79, "examples-of-monge-mapping-estimation"]], "Domain adaptation classes": [[79, "domain-adaptation-classes"]], "Examples of the use of OTDA classes": [[79, "examples-of-the-use-of-otda-classes"]], "Other applications": [[79, "other-applications"]], "Examples of the use of WDA": [[79, "examples-of-the-use-of-wda"]], "Unbalanced optimal transport": [[79, "unbalanced-optimal-transport"]], "Examples of Unbalanced OT": [[79, "examples-of-unbalanced-ot"]], "Unbalanced Barycenters": [[79, "unbalanced-barycenters"]], "Examples of Unbalanced OT barycenters": [[79, "examples-of-unbalanced-ot-barycenters"]], "Partial optimal transport": [[79, "partial-optimal-transport"]], "Examples of Partial OT": [[79, "examples-of-partial-ot"]], "Gromov-Wasserstein": [[79, "gromov-wasserstein"]], "Examples of computation of GW, regularized G and FGW": [[79, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Examples of GW, regularized G and FGW barycenters": [[79, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Solving OT with Multiple backends on CPU/GPU": [[79, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "How it works": [[79, "how-it-works"]], "GPU acceleration": [[79, "gpu-acceleration"]], "List of compatible Backends": [[79, "list-of-compatible-backends"]], "List of compatible modules": [[79, "list-of-compatible-modules"]], "FAQ": [[79, "faq"]], "Releases": [[80, "releases"]], "0.8.3dev": [[80, "dev"]], "New features": [[80, "new-features"], [80, "id2"], [80, "id7"], [80, "id10"]], "Closed issues": [[80, "closed-issues"], [80, "id3"], [80, "id5"], [80, "id8"], [80, "id11"], [80, "id13"], [80, "id16"], [80, "id19"], [80, "id22"]], "0.8.2": [[80, "id1"]], "0.8.1.0": [[80, "id4"]], "0.8.1": [[80, "id6"]], "0.8.0": [[80, "id9"]], "0.7.0": [[80, "id12"]], "Features": [[80, "features"], [80, "id15"], [80, "id18"], [80, "id21"]], "0.6.0": [[80, "id14"]], "0.5.0": [[80, "id17"]], "Deprecation": [[80, "deprecation"]], "0.4": [[80, "id20"]], "0.3.1": [[80, "id23"]], "0.3": [[80, "id24"]], "V0.2": [[80, "v0-2"]], "0.1.11": [[80, "id25"]], "0.1.10": [[80, "id26"]], "0.1.9": [[80, "id27"]], "0.1.7": [[80, "id28"]], "0.1.3": [[80, "id29"]], "First pre-release": [[80, "first-pre-release"]]}, "indexentries": {"barycenter() (in module ot)": [[2, "ot.barycenter"]], "barycenter_unbalanced() (in module ot)": [[2, "ot.barycenter_unbalanced"]], "dist() (in module ot)": [[2, "ot.dist"]], "emd() (in module ot)": [[2, "ot.emd"]], "emd2() (in module ot)": [[2, "ot.emd2"]], "emd2_1d() (in module ot)": [[2, "ot.emd2_1d"]], "emd_1d() (in module ot)": [[2, "ot.emd_1d"]], "factored_optimal_transport() (in module ot)": [[2, "ot.factored_optimal_transport"]], "fused_gromov_wasserstein() (in module ot)": [[2, "ot.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot)": [[2, "ot.fused_gromov_wasserstein2"]], "gromov_barycenters() (in module ot)": [[2, "ot.gromov_barycenters"]], "gromov_wasserstein() (in module ot)": [[2, "ot.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot)": [[2, "ot.gromov_wasserstein2"]], "max_sliced_wasserstein_distance() (in module ot)": [[2, "ot.max_sliced_wasserstein_distance"]], "module": [[2, "module-ot"], [60, "module-ot.backend"], [61, "module-ot.bregman"], [62, "module-ot.da"], [63, "module-ot.datasets"], [64, "module-ot.dr"], [65, "module-ot.factored"], [66, "module-ot.gromov"], [67, "module-ot.lp"], [68, "module-ot.optim"], [69, "module-ot.partial"], [70, "module-ot.plot"], [71, "module-ot.regpath"], [72, "module-ot.sliced"], [73, "module-ot.smooth"], [74, "module-ot.stochastic"], [75, "module-ot.unbalanced"], [76, "module-ot.utils"], [77, "module-ot.weak"]], "ot": [[2, "module-ot"]], "sinkhorn() (in module ot)": [[2, "ot.sinkhorn"]], "sinkhorn2() (in module ot)": [[2, "ot.sinkhorn2"]], "sinkhorn_lpl1_mm() (in module ot)": [[2, "ot.sinkhorn_lpl1_mm"]], "sinkhorn_unbalanced() (in module ot)": [[2, "ot.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot)": [[2, "ot.sinkhorn_unbalanced2"]], "sliced_wasserstein_distance() (in module ot)": [[2, "ot.sliced_wasserstein_distance"]], "solve() (in module ot)": [[2, "ot.solve"]], "tic() (in module ot)": [[2, "ot.tic"]], "toc() (in module ot)": [[2, "ot.toc"]], "toq() (in module ot)": [[2, "ot.toq"]], "unif() (in module ot)": [[2, "ot.unif"]], "wasserstein_1d() (in module ot)": [[2, "ot.wasserstein_1d"]], "weak_optimal_transport() (in module ot)": [[2, "ot.weak_optimal_transport"]], "backend (class in ot.backend)": [[60, "ot.backend.Backend"]], "cupybackend (class in ot.backend)": [[60, "ot.backend.CupyBackend"]], "jaxbackend (class in ot.backend)": [[60, "ot.backend.JaxBackend"]], "numpybackend (class in ot.backend)": [[60, "ot.backend.NumpyBackend"]], "tensorflowbackend (class in ot.backend)": [[60, "ot.backend.TensorflowBackend"]], "torchbackend (class in ot.backend)": [[60, "ot.backend.TorchBackend"]], "abs() (ot.backend.backend method)": [[60, "ot.backend.Backend.abs"]], "abs() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.abs"]], "abs() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.abs"]], "abs() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.abs"]], "abs() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.abs"]], "abs() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.abs"]], "allclose() (ot.backend.backend method)": [[60, "ot.backend.Backend.allclose"]], "allclose() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.allclose"]], "allclose() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.allclose"]], "allclose() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.allclose"]], "allclose() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.allclose"]], "allclose() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.allclose"]], "any() (ot.backend.backend method)": [[60, "ot.backend.Backend.any"]], "any() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.any"]], "any() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.any"]], "any() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.any"]], "any() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.any"]], "any() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.any"]], "arange() (ot.backend.backend method)": [[60, "ot.backend.Backend.arange"]], "arange() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.arange"]], "arange() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.arange"]], "arange() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.arange"]], "arange() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.arange"]], "arange() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.arange"]], "argmax() (ot.backend.backend method)": [[60, "ot.backend.Backend.argmax"]], "argmax() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.argmax"]], "argmax() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.argmax"]], "argmax() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.argmax"]], "argmax() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.argmax"]], "argmax() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.argmax"]], "argmin() (ot.backend.backend method)": [[60, "ot.backend.Backend.argmin"]], "argmin() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.argmin"]], "argmin() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.argmin"]], "argmin() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.argmin"]], "argmin() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.argmin"]], "argmin() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.argmin"]], "argsort() (ot.backend.backend method)": [[60, "ot.backend.Backend.argsort"]], "argsort() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.argsort"]], "argsort() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.argsort"]], "argsort() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.argsort"]], "argsort() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.argsort"]], "argsort() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.argsort"]], "array_equal() (ot.backend.backend method)": [[60, "ot.backend.Backend.array_equal"]], "array_equal() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.array_equal"]], "array_equal() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.array_equal"]], "array_equal() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.array_equal"]], "array_equal() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.array_equal"]], "array_equal() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.array_equal"]], "assert_same_dtype_device() (ot.backend.backend method)": [[60, "ot.backend.Backend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.assert_same_dtype_device"]], "bitsize() (ot.backend.backend method)": [[60, "ot.backend.Backend.bitsize"]], "bitsize() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.bitsize"]], "bitsize() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.bitsize"]], "bitsize() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.bitsize"]], "bitsize() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.bitsize"]], "bitsize() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.bitsize"]], "clip() (ot.backend.backend method)": [[60, "ot.backend.Backend.clip"]], "clip() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.clip"]], "clip() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.clip"]], "clip() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.clip"]], "clip() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.clip"]], "clip() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.clip"]], "concatenate() (ot.backend.backend method)": [[60, "ot.backend.Backend.concatenate"]], "concatenate() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.concatenate"]], "concatenate() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.concatenate"]], "concatenate() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.concatenate"]], "concatenate() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.concatenate"]], "concatenate() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.concatenate"]], "coo_matrix() (ot.backend.backend method)": [[60, "ot.backend.Backend.coo_matrix"]], "coo_matrix() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.coo_matrix"]], "coo_matrix() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.coo_matrix"]], "coo_matrix() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.coo_matrix"]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.coo_matrix"]], "coo_matrix() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.coo_matrix"]], "copy() (ot.backend.backend method)": [[60, "ot.backend.Backend.copy"]], "copy() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.copy"]], "copy() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.copy"]], "copy() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.copy"]], "copy() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.copy"]], "copy() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.copy"]], "cumsum() (ot.backend.backend method)": [[60, "ot.backend.Backend.cumsum"]], "cumsum() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.cumsum"]], "cumsum() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.cumsum"]], "cumsum() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.cumsum"]], "cumsum() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.cumsum"]], "cumsum() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.cumsum"]], "device_type() (ot.backend.backend method)": [[60, "ot.backend.Backend.device_type"]], "device_type() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.device_type"]], "device_type() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.device_type"]], "device_type() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.device_type"]], "device_type() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.device_type"]], "device_type() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.device_type"]], "diag() (ot.backend.backend method)": [[60, "ot.backend.Backend.diag"]], "diag() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.diag"]], "diag() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.diag"]], "diag() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.diag"]], "diag() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.diag"]], "diag() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.diag"]], "dot() (ot.backend.backend method)": [[60, "ot.backend.Backend.dot"]], "dot() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.dot"]], "dot() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.dot"]], "dot() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.dot"]], "dot() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.dot"]], "dot() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.dot"]], "dtype_device() (ot.backend.backend method)": [[60, "ot.backend.Backend.dtype_device"]], "dtype_device() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.dtype_device"]], "dtype_device() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.dtype_device"]], "dtype_device() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.dtype_device"]], "dtype_device() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.dtype_device"]], "dtype_device() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.dtype_device"]], "einsum() (ot.backend.backend method)": [[60, "ot.backend.Backend.einsum"]], "einsum() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.einsum"]], "einsum() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.einsum"]], "einsum() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.einsum"]], "einsum() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.einsum"]], "einsum() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.einsum"]], "eliminate_zeros() (ot.backend.backend method)": [[60, "ot.backend.Backend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.eliminate_zeros"]], "exp() (ot.backend.backend method)": [[60, "ot.backend.Backend.exp"]], "exp() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.exp"]], "exp() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.exp"]], "exp() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.exp"]], "exp() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.exp"]], "exp() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.exp"]], "eye() (ot.backend.backend method)": [[60, "ot.backend.Backend.eye"]], "eye() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.eye"]], "eye() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.eye"]], "eye() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.eye"]], "eye() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.eye"]], "eye() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.eye"]], "flip() (ot.backend.backend method)": [[60, "ot.backend.Backend.flip"]], "flip() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.flip"]], "flip() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.flip"]], "flip() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.flip"]], "flip() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.flip"]], "flip() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.flip"]], "from_numpy() (ot.backend.backend method)": [[60, "ot.backend.Backend.from_numpy"]], "full() (ot.backend.backend method)": [[60, "ot.backend.Backend.full"]], "full() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.full"]], "full() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.full"]], "full() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.full"]], "full() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.full"]], "full() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.full"]], "get_backend() (in module ot.backend)": [[60, "ot.backend.get_backend"]], "get_backend_list() (in module ot.backend)": [[60, "ot.backend.get_backend_list"]], "inv() (ot.backend.backend method)": [[60, "ot.backend.Backend.inv"]], "inv() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.inv"]], "inv() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.inv"]], "inv() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.inv"]], "inv() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.inv"]], "inv() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.inv"]], "is_floating_point() (ot.backend.backend method)": [[60, "ot.backend.Backend.is_floating_point"]], "is_floating_point() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.is_floating_point"]], "is_floating_point() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.is_floating_point"]], "is_floating_point() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.is_floating_point"]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.is_floating_point"]], "is_floating_point() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.is_floating_point"]], "isfinite() (ot.backend.backend method)": [[60, "ot.backend.Backend.isfinite"]], "isfinite() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.isfinite"]], "isfinite() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.isfinite"]], "isfinite() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.isfinite"]], "isfinite() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.isfinite"]], "isfinite() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.isfinite"]], "isinf() (ot.backend.backend method)": [[60, "ot.backend.Backend.isinf"]], "isinf() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.isinf"]], "isinf() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.isinf"]], "isinf() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.isinf"]], "isinf() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.isinf"]], "isinf() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.isinf"]], "isnan() (ot.backend.backend method)": [[60, "ot.backend.Backend.isnan"]], "isnan() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.isnan"]], "isnan() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.isnan"]], "isnan() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.isnan"]], "isnan() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.isnan"]], "isnan() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.isnan"]], "issparse() (ot.backend.backend method)": [[60, "ot.backend.Backend.issparse"]], "issparse() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.issparse"]], "issparse() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.issparse"]], "issparse() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.issparse"]], "issparse() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.issparse"]], "issparse() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.issparse"]], "kl_div() (ot.backend.backend method)": [[60, "ot.backend.Backend.kl_div"]], "kl_div() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.kl_div"]], "kl_div() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.kl_div"]], "kl_div() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.kl_div"]], "kl_div() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.kl_div"]], "kl_div() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.kl_div"]], "linspace() (ot.backend.backend method)": [[60, "ot.backend.Backend.linspace"]], "linspace() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.linspace"]], "linspace() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.linspace"]], "linspace() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.linspace"]], "linspace() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.linspace"]], "linspace() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.linspace"]], "log() (ot.backend.backend method)": [[60, "ot.backend.Backend.log"]], "log() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.log"]], "log() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.log"]], "log() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.log"]], "log() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.log"]], "log() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.log"]], "logsumexp() (ot.backend.backend method)": [[60, "ot.backend.Backend.logsumexp"]], "logsumexp() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.logsumexp"]], "logsumexp() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.logsumexp"]], "logsumexp() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.logsumexp"]], "logsumexp() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.logsumexp"]], "logsumexp() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.logsumexp"]], "max() (ot.backend.backend method)": [[60, "ot.backend.Backend.max"]], "max() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.max"]], "max() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.max"]], "max() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.max"]], "max() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.max"]], "max() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.max"]], "maximum() (ot.backend.backend method)": [[60, "ot.backend.Backend.maximum"]], "maximum() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.maximum"]], "maximum() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.maximum"]], "maximum() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.maximum"]], "maximum() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.maximum"]], "maximum() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.maximum"]], "mean() (ot.backend.backend method)": [[60, "ot.backend.Backend.mean"]], "mean() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.mean"]], "mean() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.mean"]], "mean() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.mean"]], "mean() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.mean"]], "mean() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.mean"]], "meshgrid() (ot.backend.backend method)": [[60, "ot.backend.Backend.meshgrid"]], "meshgrid() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.meshgrid"]], "meshgrid() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.meshgrid"]], "meshgrid() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.meshgrid"]], "meshgrid() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.meshgrid"]], "meshgrid() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.meshgrid"]], "min() (ot.backend.backend method)": [[60, "ot.backend.Backend.min"]], "min() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.min"]], "min() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.min"]], "min() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.min"]], "min() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.min"]], "min() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.min"]], "minimum() (ot.backend.backend method)": [[60, "ot.backend.Backend.minimum"]], "minimum() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.minimum"]], "minimum() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.minimum"]], "minimum() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.minimum"]], "minimum() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.minimum"]], "minimum() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.minimum"]], "norm() (ot.backend.backend method)": [[60, "ot.backend.Backend.norm"]], "norm() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.norm"]], "norm() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.norm"]], "norm() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.norm"]], "norm() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.norm"]], "norm() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.norm"]], "ones() (ot.backend.backend method)": [[60, "ot.backend.Backend.ones"]], "ones() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.ones"]], "ones() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.ones"]], "ones() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.ones"]], "ones() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.ones"]], "ones() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.ones"]], "ot.backend": [[60, "module-ot.backend"]], "outer() (ot.backend.backend method)": [[60, "ot.backend.Backend.outer"]], "outer() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.outer"]], "outer() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.outer"]], "outer() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.outer"]], "outer() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.outer"]], "outer() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.outer"]], "power() (ot.backend.backend method)": [[60, "ot.backend.Backend.power"]], "power() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.power"]], "power() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.power"]], "power() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.power"]], "power() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.power"]], "power() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.power"]], "rand() (ot.backend.backend method)": [[60, "ot.backend.Backend.rand"]], "rand() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.rand"]], "rand() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.rand"]], "rand() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.rand"]], "rand() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.rand"]], "rand() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.rand"]], "randn() (ot.backend.backend method)": [[60, "ot.backend.Backend.randn"]], "randn() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.randn"]], "randn() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.randn"]], "randn() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.randn"]], "randn() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.randn"]], "randn() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.randn"]], "repeat() (ot.backend.backend method)": [[60, "ot.backend.Backend.repeat"]], "repeat() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.repeat"]], "repeat() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.repeat"]], "repeat() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.repeat"]], "repeat() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.repeat"]], "repeat() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.repeat"]], "reshape() (ot.backend.backend method)": [[60, "ot.backend.Backend.reshape"]], "reshape() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.reshape"]], "reshape() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.reshape"]], "reshape() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.reshape"]], "reshape() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.reshape"]], "reshape() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.reshape"]], "searchsorted() (ot.backend.backend method)": [[60, "ot.backend.Backend.searchsorted"]], "searchsorted() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.searchsorted"]], "searchsorted() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.searchsorted"]], "searchsorted() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.searchsorted"]], "searchsorted() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.searchsorted"]], "searchsorted() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.searchsorted"]], "seed() (ot.backend.backend method)": [[60, "ot.backend.Backend.seed"]], "seed() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.seed"]], "seed() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.seed"]], "seed() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.seed"]], "seed() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.seed"]], "seed() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.seed"]], "set_gradients() (ot.backend.backend method)": [[60, "ot.backend.Backend.set_gradients"]], "set_gradients() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.set_gradients"]], "set_gradients() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.set_gradients"]], "set_gradients() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.set_gradients"]], "set_gradients() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.set_gradients"]], "set_gradients() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.set_gradients"]], "solve() (ot.backend.backend method)": [[60, "ot.backend.Backend.solve"]], "solve() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.solve"]], "solve() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.solve"]], "solve() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.solve"]], "solve() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.solve"]], "solve() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.solve"]], "sort() (ot.backend.backend method)": [[60, "ot.backend.Backend.sort"]], "sort() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.sort"]], "sort() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.sort"]], "sort() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.sort"]], "sort() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.sort"]], "sort() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.sort"]], "sqrt() (ot.backend.backend method)": [[60, "ot.backend.Backend.sqrt"]], "sqrt() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.sqrt"]], "sqrt() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.sqrt"]], "sqrt() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.sqrt"]], "sqrt() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.sqrt"]], "sqrt() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.sqrt"]], "sqrtm() (ot.backend.backend method)": [[60, "ot.backend.Backend.sqrtm"]], "sqrtm() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.sqrtm"]], "sqrtm() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.sqrtm"]], "sqrtm() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.sqrtm"]], "sqrtm() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.sqrtm"]], "sqrtm() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.sqrtm"]], "squeeze() (ot.backend.backend method)": [[60, "ot.backend.Backend.squeeze"]], "squeeze() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.squeeze"]], "squeeze() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.squeeze"]], "squeeze() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.squeeze"]], "squeeze() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.squeeze"]], "squeeze() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.squeeze"]], "stack() (ot.backend.backend method)": [[60, "ot.backend.Backend.stack"]], "stack() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.stack"]], "stack() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.stack"]], "stack() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.stack"]], "stack() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.stack"]], "stack() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.stack"]], "std() (ot.backend.backend method)": [[60, "ot.backend.Backend.std"]], "std() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.std"]], "std() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.std"]], "std() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.std"]], "std() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.std"]], "std() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.std"]], "sum() (ot.backend.backend method)": [[60, "ot.backend.Backend.sum"]], "sum() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.sum"]], "sum() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.sum"]], "sum() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.sum"]], "sum() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.sum"]], "sum() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.sum"]], "take_along_axis() (ot.backend.backend method)": [[60, "ot.backend.Backend.take_along_axis"]], "take_along_axis() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.take_along_axis"]], "take_along_axis() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.take_along_axis"]], "take_along_axis() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.take_along_axis"]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.take_along_axis"]], "take_along_axis() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.take_along_axis"]], "to_numpy() (in module ot.backend)": [[60, "ot.backend.to_numpy"]], "to_numpy() (ot.backend.backend method)": [[60, "ot.backend.Backend.to_numpy"]], "tocsr() (ot.backend.backend method)": [[60, "ot.backend.Backend.tocsr"]], "tocsr() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.tocsr"]], "tocsr() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.tocsr"]], "tocsr() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.tocsr"]], "tocsr() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.tocsr"]], "tocsr() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.tocsr"]], "todense() (ot.backend.backend method)": [[60, "ot.backend.Backend.todense"]], "todense() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.todense"]], "todense() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.todense"]], "todense() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.todense"]], "todense() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.todense"]], "todense() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.todense"]], "trace() (ot.backend.backend method)": [[60, "ot.backend.Backend.trace"]], "trace() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.trace"]], "trace() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.trace"]], "trace() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.trace"]], "trace() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.trace"]], "trace() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.trace"]], "unique() (ot.backend.backend method)": [[60, "ot.backend.Backend.unique"]], "unique() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.unique"]], "unique() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.unique"]], "unique() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.unique"]], "unique() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.unique"]], "unique() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.unique"]], "where() (ot.backend.backend method)": [[60, "ot.backend.Backend.where"]], "where() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.where"]], "where() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.where"]], "where() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.where"]], "where() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.where"]], "where() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.where"]], "zero_pad() (ot.backend.backend method)": [[60, "ot.backend.Backend.zero_pad"]], "zero_pad() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.zero_pad"]], "zero_pad() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.zero_pad"]], "zero_pad() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.zero_pad"]], "zero_pad() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.zero_pad"]], "zero_pad() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.zero_pad"]], "zeros() (ot.backend.backend method)": [[60, "ot.backend.Backend.zeros"]], "zeros() (ot.backend.cupybackend method)": [[60, "ot.backend.CupyBackend.zeros"]], "zeros() (ot.backend.jaxbackend method)": [[60, "ot.backend.JaxBackend.zeros"]], "zeros() (ot.backend.numpybackend method)": [[60, "ot.backend.NumpyBackend.zeros"]], "zeros() (ot.backend.tensorflowbackend method)": [[60, "ot.backend.TensorflowBackend.zeros"]], "zeros() (ot.backend.torchbackend method)": [[60, "ot.backend.TorchBackend.zeros"]], "barycenter() (in module ot.bregman)": [[61, "ot.bregman.barycenter"]], "barycenter_debiased() (in module ot.bregman)": [[61, "ot.bregman.barycenter_debiased"]], "barycenter_sinkhorn() (in module ot.bregman)": [[61, "ot.bregman.barycenter_sinkhorn"]], "barycenter_stabilized() (in module ot.bregman)": [[61, "ot.bregman.barycenter_stabilized"]], "convolutional_barycenter2d() (in module ot.bregman)": [[61, "ot.bregman.convolutional_barycenter2d"]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[61, "ot.bregman.convolutional_barycenter2d_debiased"]], "empirical_sinkhorn() (in module ot.bregman)": [[61, "ot.bregman.empirical_sinkhorn"]], "empirical_sinkhorn2() (in module ot.bregman)": [[61, "ot.bregman.empirical_sinkhorn2"]], "empirical_sinkhorn_divergence() (in module ot.bregman)": [[61, "ot.bregman.empirical_sinkhorn_divergence"]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[61, "ot.bregman.free_support_sinkhorn_barycenter"]], "geometricbar() (in module ot.bregman)": [[61, "ot.bregman.geometricBar"]], "geometricmean() (in module ot.bregman)": [[61, "ot.bregman.geometricMean"]], "greenkhorn() (in module ot.bregman)": [[61, "ot.bregman.greenkhorn"]], "jcpot_barycenter() (in module ot.bregman)": [[61, "ot.bregman.jcpot_barycenter"]], "ot.bregman": [[61, "module-ot.bregman"]], "projc() (in module ot.bregman)": [[61, "ot.bregman.projC"]], "projr() (in module ot.bregman)": [[61, "ot.bregman.projR"]], "screenkhorn() (in module ot.bregman)": [[61, "ot.bregman.screenkhorn"]], "sinkhorn() (in module ot.bregman)": [[61, "ot.bregman.sinkhorn"]], "sinkhorn2() (in module ot.bregman)": [[61, "ot.bregman.sinkhorn2"]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[61, "ot.bregman.sinkhorn_epsilon_scaling"]], "sinkhorn_knopp() (in module ot.bregman)": [[61, "ot.bregman.sinkhorn_knopp"]], "sinkhorn_log() (in module ot.bregman)": [[61, "ot.bregman.sinkhorn_log"]], "sinkhorn_stabilized() (in module ot.bregman)": [[61, "ot.bregman.sinkhorn_stabilized"]], "unmix() (in module ot.bregman)": [[61, "ot.bregman.unmix"]], "basetransport (class in ot.da)": [[62, "ot.da.BaseTransport"]], "emdlaplacetransport (class in ot.da)": [[62, "ot.da.EMDLaplaceTransport"]], "emdtransport (class in ot.da)": [[62, "ot.da.EMDTransport"]], "jcpottransport (class in ot.da)": [[62, "ot.da.JCPOTTransport"]], "lineartransport (class in ot.da)": [[62, "ot.da.LinearTransport"]], "mappingtransport (class in ot.da)": [[62, "ot.da.MappingTransport"]], "ot_mapping_linear() (in module ot.da)": [[62, "ot.da.OT_mapping_linear"]], "sinkhornl1l2transport (class in ot.da)": [[62, "ot.da.SinkhornL1l2Transport"]], "sinkhornlpl1transport (class in ot.da)": [[62, "ot.da.SinkhornLpl1Transport"]], "sinkhorntransport (class in ot.da)": [[62, "ot.da.SinkhornTransport"]], "unbalancedsinkhorntransport (class in ot.da)": [[62, "ot.da.UnbalancedSinkhornTransport"]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[62, "ot.da.EMDLaplaceTransport.coupling_"]], "coupling_ (ot.da.emdtransport attribute)": [[62, "ot.da.EMDTransport.coupling_"]], "coupling_ (ot.da.jcpottransport attribute)": [[62, "ot.da.JCPOTTransport.coupling_"]], "coupling_ (ot.da.mappingtransport attribute)": [[62, "ot.da.MappingTransport.coupling_"]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[62, "ot.da.SinkhornL1l2Transport.coupling_"]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[62, "ot.da.SinkhornLpl1Transport.coupling_"]], "coupling_ (ot.da.sinkhorntransport attribute)": [[62, "ot.da.SinkhornTransport.coupling_"]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[62, "ot.da.UnbalancedSinkhornTransport.coupling_"]], "distribution_estimation_uniform() (in module ot.da)": [[62, "ot.da.distribution_estimation_uniform"]], "emd_laplace() (in module ot.da)": [[62, "ot.da.emd_laplace"]], "fit() (ot.da.basetransport method)": [[62, "ot.da.BaseTransport.fit"]], "fit() (ot.da.emdlaplacetransport method)": [[62, "ot.da.EMDLaplaceTransport.fit"]], "fit() (ot.da.emdtransport method)": [[62, "ot.da.EMDTransport.fit"]], "fit() (ot.da.jcpottransport method)": [[62, "ot.da.JCPOTTransport.fit"]], "fit() (ot.da.lineartransport method)": [[62, "ot.da.LinearTransport.fit"]], "fit() (ot.da.mappingtransport method)": [[62, "ot.da.MappingTransport.fit"]], "fit() (ot.da.sinkhornl1l2transport method)": [[62, "ot.da.SinkhornL1l2Transport.fit"]], "fit() (ot.da.sinkhornlpl1transport method)": [[62, "ot.da.SinkhornLpl1Transport.fit"]], "fit() (ot.da.sinkhorntransport method)": [[62, "ot.da.SinkhornTransport.fit"]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[62, "ot.da.UnbalancedSinkhornTransport.fit"]], "fit_transform() (ot.da.basetransport method)": [[62, "ot.da.BaseTransport.fit_transform"]], "inverse_transform() (ot.da.basetransport method)": [[62, "ot.da.BaseTransport.inverse_transform"]], "inverse_transform() (ot.da.lineartransport method)": [[62, "ot.da.LinearTransport.inverse_transform"]], "inverse_transform_labels() (ot.da.basetransport method)": [[62, "ot.da.BaseTransport.inverse_transform_labels"]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[62, "ot.da.JCPOTTransport.inverse_transform_labels"]], "joint_ot_mapping_kernel() (in module ot.da)": [[62, "ot.da.joint_OT_mapping_kernel"]], "joint_ot_mapping_linear() (in module ot.da)": [[62, "ot.da.joint_OT_mapping_linear"]], "log_ (ot.da.jcpottransport attribute)": [[62, "ot.da.JCPOTTransport.log_"]], "log_ (ot.da.mappingtransport attribute)": [[62, "ot.da.MappingTransport.log_"]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[62, "ot.da.SinkhornL1l2Transport.log_"]], "log_ (ot.da.sinkhorntransport attribute)": [[62, "ot.da.SinkhornTransport.log_"]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[62, "ot.da.UnbalancedSinkhornTransport.log_"]], "mapping_ (ot.da.mappingtransport attribute)": [[62, "ot.da.MappingTransport.mapping_"]], "ot.da": [[62, "module-ot.da"]], "proportions_ (ot.da.jcpottransport attribute)": [[62, "ot.da.JCPOTTransport.proportions_"]], "sinkhorn_l1l2_gl() (in module ot.da)": [[62, "ot.da.sinkhorn_l1l2_gl"]], "sinkhorn_lpl1_mm() (in module ot.da)": [[62, "ot.da.sinkhorn_lpl1_mm"]], "transform() (ot.da.basetransport method)": [[62, "ot.da.BaseTransport.transform"]], "transform() (ot.da.jcpottransport method)": [[62, "ot.da.JCPOTTransport.transform"]], "transform() (ot.da.lineartransport method)": [[62, "ot.da.LinearTransport.transform"]], "transform() (ot.da.mappingtransport method)": [[62, "ot.da.MappingTransport.transform"]], "transform_labels() (ot.da.basetransport method)": [[62, "ot.da.BaseTransport.transform_labels"]], "transform_labels() (ot.da.jcpottransport method)": [[62, "ot.da.JCPOTTransport.transform_labels"]], "make_1d_gauss() (in module ot.datasets)": [[63, "ot.datasets.make_1D_gauss"]], "make_2d_samples_gauss() (in module ot.datasets)": [[63, "ot.datasets.make_2D_samples_gauss"]], "make_data_classif() (in module ot.datasets)": [[63, "ot.datasets.make_data_classif"]], "ot.datasets": [[63, "module-ot.datasets"]], "dist() (in module ot.dr)": [[64, "ot.dr.dist"]], "fda() (in module ot.dr)": [[64, "ot.dr.fda"]], "logsumexp() (in module ot.dr)": [[64, "ot.dr.logsumexp"]], "ot.dr": [[64, "module-ot.dr"]], "projection_robust_wasserstein() (in module ot.dr)": [[64, "ot.dr.projection_robust_wasserstein"]], "sinkhorn() (in module ot.dr)": [[64, "ot.dr.sinkhorn"]], "sinkhorn_log() (in module ot.dr)": [[64, "ot.dr.sinkhorn_log"]], "split_classes() (in module ot.dr)": [[64, "ot.dr.split_classes"]], "wda() (in module ot.dr)": [[64, "ot.dr.wda"]], "factored_optimal_transport() (in module ot.factored)": [[65, "ot.factored.factored_optimal_transport"]], "ot.factored": [[65, "module-ot.factored"]], "gw_distance_estimation() (in module ot.gromov)": [[66, "ot.gromov.GW_distance_estimation"]], "entropic_gromov_barycenters() (in module ot.gromov)": [[66, "ot.gromov.entropic_gromov_barycenters"]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[66, "ot.gromov.entropic_gromov_wasserstein"]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[66, "ot.gromov.entropic_gromov_wasserstein2"]], "fgw_barycenters() (in module ot.gromov)": [[66, "ot.gromov.fgw_barycenters"]], "fused_gromov_wasserstein() (in module ot.gromov)": [[66, "ot.gromov.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[66, "ot.gromov.fused_gromov_wasserstein2"]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[66, "ot.gromov.fused_gromov_wasserstein_dictionary_learning"]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[66, "ot.gromov.fused_gromov_wasserstein_linear_unmixing"]], "gromov_barycenters() (in module ot.gromov)": [[66, "ot.gromov.gromov_barycenters"]], "gromov_wasserstein() (in module ot.gromov)": [[66, "ot.gromov.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot.gromov)": [[66, "ot.gromov.gromov_wasserstein2"]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[66, "ot.gromov.gromov_wasserstein_dictionary_learning"]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[66, "ot.gromov.gromov_wasserstein_linear_unmixing"]], "gwggrad() (in module ot.gromov)": [[66, "ot.gromov.gwggrad"]], "gwloss() (in module ot.gromov)": [[66, "ot.gromov.gwloss"]], "init_matrix() (in module ot.gromov)": [[66, "ot.gromov.init_matrix"]], "ot.gromov": [[66, "module-ot.gromov"]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[66, "ot.gromov.pointwise_gromov_wasserstein"]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[66, "ot.gromov.sampled_gromov_wasserstein"]], "tensor_product() (in module ot.gromov)": [[66, "ot.gromov.tensor_product"]], "update_feature_matrix() (in module ot.gromov)": [[66, "ot.gromov.update_feature_matrix"]], "update_kl_loss() (in module ot.gromov)": [[66, "ot.gromov.update_kl_loss"]], "update_square_loss() (in module ot.gromov)": [[66, "ot.gromov.update_square_loss"]], "update_structure_matrix() (in module ot.gromov)": [[66, "ot.gromov.update_structure_matrix"]], "center_ot_dual() (in module ot.lp)": [[67, "ot.lp.center_ot_dual"]], "check_number_threads() (in module ot.lp)": [[67, "ot.lp.check_number_threads"]], "emd() (in module ot.lp)": [[67, "ot.lp.emd"]], "emd2() (in module ot.lp)": [[67, "ot.lp.emd2"]], "estimate_dual_null_weights() (in module ot.lp)": [[67, "ot.lp.estimate_dual_null_weights"]], "free_support_barycenter() (in module ot.lp)": [[67, "ot.lp.free_support_barycenter"]], "generalized_free_support_barycenter() (in module ot.lp)": [[67, "ot.lp.generalized_free_support_barycenter"]], "ot.lp": [[67, "module-ot.lp"]], "cg() (in module ot.optim)": [[68, "ot.optim.cg"]], "gcg() (in module ot.optim)": [[68, "ot.optim.gcg"]], "line_search_armijo() (in module ot.optim)": [[68, "ot.optim.line_search_armijo"]], "ot.optim": [[68, "module-ot.optim"]], "solve_1d_linesearch_quad() (in module ot.optim)": [[68, "ot.optim.solve_1d_linesearch_quad"]], "solve_linesearch() (in module ot.optim)": [[68, "ot.optim.solve_linesearch"]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[69, "ot.partial.entropic_partial_gromov_wasserstein"]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[69, "ot.partial.entropic_partial_gromov_wasserstein2"]], "entropic_partial_wasserstein() (in module ot.partial)": [[69, "ot.partial.entropic_partial_wasserstein"]], "gwgrad_partial() (in module ot.partial)": [[69, "ot.partial.gwgrad_partial"]], "gwloss_partial() (in module ot.partial)": [[69, "ot.partial.gwloss_partial"]], "ot.partial": [[69, "module-ot.partial"]], "partial_gromov_wasserstein() (in module ot.partial)": [[69, "ot.partial.partial_gromov_wasserstein"]], "partial_gromov_wasserstein2() (in module ot.partial)": [[69, "ot.partial.partial_gromov_wasserstein2"]], "partial_wasserstein() (in module ot.partial)": [[69, "ot.partial.partial_wasserstein"]], "partial_wasserstein2() (in module ot.partial)": [[69, "ot.partial.partial_wasserstein2"]], "partial_wasserstein_lagrange() (in module ot.partial)": [[69, "ot.partial.partial_wasserstein_lagrange"]], "ot.plot": [[70, "module-ot.plot"]], "plot1d_mat() (in module ot.plot)": [[70, "ot.plot.plot1D_mat"]], "plot2d_samples_mat() (in module ot.plot)": [[70, "ot.plot.plot2D_samples_mat"]], "complement_schur() (in module ot.regpath)": [[71, "ot.regpath.complement_schur"]], "compute_next_removal() (in module ot.regpath)": [[71, "ot.regpath.compute_next_removal"]], "compute_transport_plan() (in module ot.regpath)": [[71, "ot.regpath.compute_transport_plan"]], "construct_augmented_h() (in module ot.regpath)": [[71, "ot.regpath.construct_augmented_H"]], "fully_relaxed_path() (in module ot.regpath)": [[71, "ot.regpath.fully_relaxed_path"]], "ot.regpath": [[71, "module-ot.regpath"]], "ot_next_gamma() (in module ot.regpath)": [[71, "ot.regpath.ot_next_gamma"]], "recast_ot_as_lasso() (in module ot.regpath)": [[71, "ot.regpath.recast_ot_as_lasso"]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[71, "ot.regpath.recast_semi_relaxed_as_lasso"]], "regularization_path() (in module ot.regpath)": [[71, "ot.regpath.regularization_path"]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[71, "ot.regpath.semi_relaxed_next_gamma"]], "semi_relaxed_path() (in module ot.regpath)": [[71, "ot.regpath.semi_relaxed_path"]], "get_random_projections() (in module ot.sliced)": [[72, "ot.sliced.get_random_projections"]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[72, "ot.sliced.max_sliced_wasserstein_distance"]], "ot.sliced": [[72, "module-ot.sliced"]], "sliced_wasserstein_distance() (in module ot.sliced)": [[72, "ot.sliced.sliced_wasserstein_distance"]], "negentropy (class in ot.smooth)": [[73, "ot.smooth.NegEntropy"]], "omega() (ot.smooth.negentropy method)": [[73, "ot.smooth.NegEntropy.Omega"]], "omega() (ot.smooth.regularization method)": [[73, "ot.smooth.Regularization.Omega"]], "omega() (ot.smooth.squaredl2 method)": [[73, "ot.smooth.SquaredL2.Omega"]], "regularization (class in ot.smooth)": [[73, "ot.smooth.Regularization"]], "squaredl2 (class in ot.smooth)": [[73, "ot.smooth.SquaredL2"]], "delta_omega() (ot.smooth.negentropy method)": [[73, "ot.smooth.NegEntropy.delta_Omega"]], "delta_omega() (ot.smooth.regularization method)": [[73, "ot.smooth.Regularization.delta_Omega"]], "delta_omega() (ot.smooth.squaredl2 method)": [[73, "ot.smooth.SquaredL2.delta_Omega"]], "dual_obj_grad() (in module ot.smooth)": [[73, "ot.smooth.dual_obj_grad"]], "get_plan_from_dual() (in module ot.smooth)": [[73, "ot.smooth.get_plan_from_dual"]], "get_plan_from_semi_dual() (in module ot.smooth)": [[73, "ot.smooth.get_plan_from_semi_dual"]], "max_omega() (ot.smooth.negentropy method)": [[73, "ot.smooth.NegEntropy.max_Omega"]], "max_omega() (ot.smooth.regularization method)": [[73, "ot.smooth.Regularization.max_Omega"]], "max_omega() (ot.smooth.squaredl2 method)": [[73, "ot.smooth.SquaredL2.max_Omega"]], "ot.smooth": [[73, "module-ot.smooth"]], "projection_simplex() (in module ot.smooth)": [[73, "ot.smooth.projection_simplex"]], "semi_dual_obj_grad() (in module ot.smooth)": [[73, "ot.smooth.semi_dual_obj_grad"]], "smooth_ot_dual() (in module ot.smooth)": [[73, "ot.smooth.smooth_ot_dual"]], "smooth_ot_semi_dual() (in module ot.smooth)": [[73, "ot.smooth.smooth_ot_semi_dual"]], "solve_dual() (in module ot.smooth)": [[73, "ot.smooth.solve_dual"]], "solve_semi_dual() (in module ot.smooth)": [[73, "ot.smooth.solve_semi_dual"]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[74, "ot.stochastic.averaged_sgd_entropic_transport"]], "batch_grad_dual() (in module ot.stochastic)": [[74, "ot.stochastic.batch_grad_dual"]], "c_transform_entropic() (in module ot.stochastic)": [[74, "ot.stochastic.c_transform_entropic"]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[74, "ot.stochastic.coordinate_grad_semi_dual"]], "loss_dual_entropic() (in module ot.stochastic)": [[74, "ot.stochastic.loss_dual_entropic"]], "loss_dual_quadratic() (in module ot.stochastic)": [[74, "ot.stochastic.loss_dual_quadratic"]], "ot.stochastic": [[74, "module-ot.stochastic"]], "plan_dual_entropic() (in module ot.stochastic)": [[74, "ot.stochastic.plan_dual_entropic"]], "plan_dual_quadratic() (in module ot.stochastic)": [[74, "ot.stochastic.plan_dual_quadratic"]], "sag_entropic_transport() (in module ot.stochastic)": [[74, "ot.stochastic.sag_entropic_transport"]], "sgd_entropic_regularization() (in module ot.stochastic)": [[74, "ot.stochastic.sgd_entropic_regularization"]], "solve_dual_entropic() (in module ot.stochastic)": [[74, "ot.stochastic.solve_dual_entropic"]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[74, "ot.stochastic.solve_semi_dual_entropic"]], "barycenter_unbalanced() (in module ot.unbalanced)": [[75, "ot.unbalanced.barycenter_unbalanced"]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[75, "ot.unbalanced.barycenter_unbalanced_sinkhorn"]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[75, "ot.unbalanced.barycenter_unbalanced_stabilized"]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[75, "ot.unbalanced.lbfgsb_unbalanced"]], "mm_unbalanced() (in module ot.unbalanced)": [[75, "ot.unbalanced.mm_unbalanced"]], "mm_unbalanced2() (in module ot.unbalanced)": [[75, "ot.unbalanced.mm_unbalanced2"]], "ot.unbalanced": [[75, "module-ot.unbalanced"]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[75, "ot.unbalanced.sinkhorn_knopp_unbalanced"]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[75, "ot.unbalanced.sinkhorn_stabilized_unbalanced"]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[75, "ot.unbalanced.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[75, "ot.unbalanced.sinkhorn_unbalanced2"]], "baseestimator (class in ot.utils)": [[76, "ot.utils.BaseEstimator"]], "otresult (class in ot.utils)": [[76, "ot.utils.OTResult"]], "a_to_b (ot.utils.otresult property)": [[76, "ot.utils.OTResult.a_to_b"]], "b_to_a (ot.utils.otresult property)": [[76, "ot.utils.OTResult.b_to_a"]], "check_params() (in module ot.utils)": [[76, "ot.utils.check_params"]], "check_random_state() (in module ot.utils)": [[76, "ot.utils.check_random_state"]], "citation (ot.utils.otresult property)": [[76, "ot.utils.OTResult.citation"]], "clean_zeros() (in module ot.utils)": [[76, "ot.utils.clean_zeros"]], "cost_normalization() (in module ot.utils)": [[76, "ot.utils.cost_normalization"]], "deprecated (class in ot.utils)": [[76, "ot.utils.deprecated"]], "dist() (in module ot.utils)": [[76, "ot.utils.dist"]], "dist0() (in module ot.utils)": [[76, "ot.utils.dist0"]], "dots() (in module ot.utils)": [[76, "ot.utils.dots"]], "euclidean_distances() (in module ot.utils)": [[76, "ot.utils.euclidean_distances"]], "get_params() (ot.utils.baseestimator method)": [[76, "ot.utils.BaseEstimator.get_params"]], "kernel() (in module ot.utils)": [[76, "ot.utils.kernel"]], "label_normalization() (in module ot.utils)": [[76, "ot.utils.label_normalization"]], "laplacian() (in module ot.utils)": [[76, "ot.utils.laplacian"]], "lazy_plan (ot.utils.otresult property)": [[76, "ot.utils.OTResult.lazy_plan"]], "list_to_array() (in module ot.utils)": [[76, "ot.utils.list_to_array"]], "marginal_a (ot.utils.otresult property)": [[76, "ot.utils.OTResult.marginal_a"]], "marginal_b (ot.utils.otresult property)": [[76, "ot.utils.OTResult.marginal_b"]], "marginals (ot.utils.otresult property)": [[76, "ot.utils.OTResult.marginals"]], "ot.utils": [[76, "module-ot.utils"]], "parmap() (in module ot.utils)": [[76, "ot.utils.parmap"]], "plan (ot.utils.otresult property)": [[76, "ot.utils.OTResult.plan"]], "potential_a (ot.utils.otresult property)": [[76, "ot.utils.OTResult.potential_a"]], "potential_b (ot.utils.otresult property)": [[76, "ot.utils.OTResult.potential_b"]], "potentials (ot.utils.otresult property)": [[76, "ot.utils.OTResult.potentials"]], "proj_simplex() (in module ot.utils)": [[76, "ot.utils.proj_simplex"]], "set_params() (ot.utils.baseestimator method)": [[76, "ot.utils.BaseEstimator.set_params"]], "sparse_plan (ot.utils.otresult property)": [[76, "ot.utils.OTResult.sparse_plan"]], "status (ot.utils.otresult property)": [[76, "ot.utils.OTResult.status"]], "tic() (in module ot.utils)": [[76, "ot.utils.tic"]], "toc() (in module ot.utils)": [[76, "ot.utils.toc"]], "toq() (in module ot.utils)": [[76, "ot.utils.toq"]], "unif() (in module ot.utils)": [[76, "ot.utils.unif"]], "value (ot.utils.otresult property)": [[76, "ot.utils.OTResult.value"]], "value_linear (ot.utils.otresult property)": [[76, "ot.utils.OTResult.value_linear"]], "ot.weak": [[77, "module-ot.weak"]], "weak_optimal_transport() (in module ot.weak)": [[77, "ot.weak.weak_optimal_transport"]]}})