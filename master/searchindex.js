Search.setIndex({"docnames": [".github/CODE_OF_CONDUCT", ".github/CONTRIBUTING", "all", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_logo", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_compute_wasserstein_circle", "auto_examples/plot_optim_OTreg", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gromov", "gen_modules/ot.lp", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "quickstart", "releases"], "filenames": [".github/CODE_OF_CONDUCT.rst", ".github/CONTRIBUTING.rst", "all.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_compute_wasserstein_circle.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "quickstart.rst", "releases.rst"], "titles": ["Code of Conduct", "Contributing to POT", "API and modules", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Plot Fused-gromov-Wasserstein", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Computation times", "Examples gallery", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Optimal transport with factored couplings", "Logo of the POT toolbox", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth optimal transport example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different gournd metrics", "OT distances in 1D", "OT distance on the Circle", "Regularized OT with generic solver", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Contributors", "ot.backend", "ot.bregman", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gromov", "ot.lp", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Quick start guide", "Releases"], "terms": {"In": [0, 1, 2, 4, 5, 8, 9, 10, 34, 40, 44, 64, 67, 68, 71, 74, 76, 77, 82, 83, 84], "interest": [0, 83], "foster": [0, 83], "an": [0, 1, 2, 4, 9, 10, 21, 25, 27, 30, 33, 44, 63, 64, 65, 68, 70, 71, 72, 73, 75, 77, 78, 80, 84], "open": [0, 1, 62, 82, 83, 84], "welcom": [0, 82], "environ": 0, "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 28, 30, 31, 32, 34, 40, 44, 50, 58, 59, 62, 63, 64, 71, 73, 75, 83, 84], "contributor": [0, 82, 84], "maintain": [0, 63, 82, 84], "make": [0, 1, 2, 44, 48, 56, 57, 63, 66, 71, 82, 83, 84], "particip": 0, "project": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 17, 20, 22, 23, 24, 28, 32, 34, 41, 44, 50, 51, 57, 58, 62, 64, 67, 70, 71, 73, 76, 77, 79, 80, 82, 83, 84], "commun": [0, 34, 83], "harass": 0, "free": [0, 1, 19, 36, 62, 64, 71, 73, 82, 84], "experi": 0, "everyon": 0, "regardless": [0, 84], "ag": 0, "bodi": 0, "size": [0, 2, 6, 8, 10, 17, 21, 27, 34, 44, 50, 63, 64, 65, 66, 67, 70, 72, 75, 78, 80, 84], "disabl": 0, "ethnic": 0, "gender": 0, "ident": [0, 63, 65], "express": [0, 4, 8, 83], "level": [0, 64, 65, 66, 80, 83], "nation": 0, "person": [0, 62], "appear": [0, 64], "race": 0, "religion": 0, "sexual": 0, "orient": 0, "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 61, 63, 76, 84], "behavior": [0, 1, 84], "contribut": [0, 2, 64, 83, 84], "creat": [0, 1, 12, 13, 15, 30, 57, 62, 63, 74, 82, 84], "posit": [0, 2, 4, 9, 12, 13, 15, 34, 41, 44, 45, 46, 49, 51, 56, 57, 63, 71, 72, 73, 74, 82, 83], "includ": [0, 1, 67, 80, 83, 84], "us": [0, 1, 2, 4, 5, 8, 9, 10, 12, 13, 21, 26, 27, 28, 32, 33, 34, 35, 36, 37, 40, 42, 44, 45, 51, 56, 57, 58, 60, 63, 68, 76, 81, 84], "inclus": [0, 1], "languag": [0, 62, 83], "Being": 0, "respect": [0, 2, 8, 18, 34, 44, 63, 64, 65, 67, 70, 71, 79, 82, 83, 84], "differ": [0, 2, 4, 18, 36, 44, 52, 64, 65, 71, 72, 74, 79, 82, 83, 84], "viewpoint": 0, "gracefulli": 0, "accept": [0, 1, 2, 44, 71, 80, 84], "construct": [0, 14, 33, 63, 65, 75], "critic": 0, "focus": 0, "what": [0, 1, 22, 28, 83], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 23, 28, 30, 31, 32, 33, 34, 36, 38, 40, 41, 42, 44, 47, 49, 50, 53, 54, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "best": [0, 1, 70, 83], "show": [0, 4, 9, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 71], "empathi": 0, "toward": 0, "other": [0, 1, 4, 8, 9, 37, 44, 70, 78, 80, 82, 84], "member": [0, 82], "unaccept": 0, "The": [0, 1, 2, 4, 9, 12, 14, 28, 30, 32, 33, 34, 38, 44, 47, 50, 57, 58, 59, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84], "imageri": 0, "unwelcom": 0, "attent": 0, "advanc": [0, 2, 41, 42, 64, 65, 77, 78, 79, 82, 83], "troll": 0, "insult": 0, "derogatori": 0, "comment": 0, "polit": 0, "attack": 0, "public": [0, 1, 84], "privat": 0, "publish": 0, "inform": [0, 1, 2, 26, 27, 34, 41, 42, 64, 65, 67, 68, 70, 71, 72, 73, 77, 78, 79, 81, 82, 83], "physic": 0, "electron": 0, "address": [0, 1, 83], "without": [0, 1, 2, 63, 64, 70, 75, 82, 84], "explicit": [0, 22, 28, 65, 67, 74, 80], "permiss": 0, "which": [0, 2, 4, 30, 44, 63, 64, 65, 68, 70, 71, 72, 74, 75, 81, 82, 83, 84], "could": [0, 84], "reason": [0, 2, 64, 83, 84], "consid": [0, 1, 2, 9, 28, 30, 34, 64, 71, 73, 80, 83], "inappropri": 0, "profession": 0, "set": [0, 2, 4, 10, 20, 22, 24, 29, 30, 33, 34, 36, 44, 63, 64, 65, 66, 70, 71, 75, 80, 82, 83], "ar": [0, 1, 2, 9, 14, 16, 22, 28, 30, 33, 34, 38, 42, 44, 47, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "clarifi": 0, "expect": [0, 1, 2, 10, 64, 80, 82, 83], "take": [0, 2, 50, 75, 78, 79, 83], "appropri": [0, 1, 80], "fair": [0, 71], "correct": [0, 1, 71, 82, 84], "action": [0, 84], "ani": [0, 1, 5, 6, 10, 18, 59, 63, 72, 75, 80, 82, 83], "instanc": [0, 2, 7, 66, 70, 80, 83, 84], "have": [0, 1, 2, 10, 28, 34, 44, 63, 70, 71, 80, 83, 84], "right": [0, 1, 2, 8, 15, 16, 44, 56, 64, 65, 69, 70, 76, 77, 78, 81, 84], "remov": [0, 12, 57, 58, 63, 71, 75, 80, 84], "edit": [0, 1], "reject": 0, "commit": [0, 1, 63, 84], "wiki": 0, "issu": [0, 1, 2, 64, 70, 72, 80, 82, 83], "align": [0, 65, 69, 83], "thi": [0, 1, 2, 4, 5, 8, 9, 10, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 44, 45, 46, 50, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 75, 76, 77, 78, 80, 81, 82, 83, 84], "ban": 0, "temporarili": 0, "perman": 0, "thei": [0, 2, 83, 84], "deem": 0, "threaten": 0, "offens": 0, "harm": 0, "appli": [0, 2, 26, 65, 80, 82], "both": [0, 2, 4, 9, 26, 44, 59, 64, 71, 75, 83, 84], "within": [0, 9, 63, 70], "space": [0, 2, 18, 32, 33, 58, 63, 64, 70, 71, 73, 76, 82, 83, 84], "when": [0, 1, 2, 4, 50, 60, 64, 67, 70, 71, 72, 73, 75, 80, 82, 84], "individu": [0, 2], "repres": [0, 2, 22, 28, 30, 64, 70, 71, 83], "its": [0, 2, 3, 4, 7, 26, 34, 44, 50, 63, 64, 72, 73, 76, 82, 83, 84], "offici": [0, 84], "e": [0, 2, 64, 70, 71, 76, 80, 82], "mail": [0, 1, 82], "post": 0, "via": [0, 2, 4, 5, 34, 64, 68, 70, 72, 82, 83], "social": 0, "media": 0, "account": [0, 1, 2, 50, 64, 70], "act": 0, "appoint": 0, "onlin": [0, 2, 4, 34, 44, 70, 82, 83], "offlin": 0, "event": 0, "represent": [0, 2, 34, 42, 54, 76, 78, 82, 83], "mai": [0, 1, 5, 71, 73, 75, 82, 83, 84], "further": [0, 1, 44], "defin": [0, 7, 10, 33, 42, 44, 63, 64, 65, 71, 75, 77, 83, 84], "abus": 0, "otherwis": [0, 2, 63, 70, 71, 80], "report": [0, 1, 82, 84], "contact": 0, "team": [0, 1, 84], "all": [0, 1, 2, 12, 13, 15, 28, 30, 33, 34, 36, 40, 44, 57, 63, 64, 65, 68, 70, 71, 75, 79, 80, 81, 82, 83, 84], "complaint": 0, "review": [0, 1], "investig": [0, 83], "result": [0, 1, 2, 4, 44, 63, 70, 71, 80, 83, 84], "necessari": [0, 1, 12, 13, 57, 58, 71, 72, 82, 84], "circumst": 0, "oblig": 0, "confidenti": 0, "regard": 0, "incid": 0, "detail": [0, 1, 2, 71, 83, 84], "specif": [0, 1, 2, 33, 64, 65, 70, 79, 83, 84], "polici": 0, "separ": [0, 83, 84], "who": [0, 84], "do": [0, 1, 2, 10, 22, 28, 32, 44, 58, 63, 64, 71, 80, 83, 84], "follow": [0, 1, 2, 8, 9, 10, 13, 33, 44, 60, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 82, 83, 84], "good": [0, 1, 44, 83], "faith": 0, "face": [0, 73], "temporari": 0, "repercuss": 0, "determin": [0, 64], "": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 20, 21, 22, 23, 24, 27, 28, 31, 33, 34, 36, 41, 44, 45, 46, 49, 50, 51, 55, 56, 57, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84], "leadership": 0, "adapt": [0, 2, 28, 29, 51, 64, 65, 66, 70, 72, 74, 80, 82, 84], "from": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 21, 23, 25, 27, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "coven": 0, "version": [0, 1, 2, 4, 33, 34, 50, 63, 64, 75, 82, 83, 84], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 25, 26, 27, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83], "4": [0, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 53, 56, 57, 58, 59, 60, 64, 70, 73, 75, 78, 79, 82, 83], "avail": [0, 1, 2, 28, 63, 82, 83, 84], "http": [0, 7, 41, 44, 48, 63, 64, 77, 80, 82, 83, 84], "org": [0, 7, 41, 48, 63, 64, 77, 82, 83, 84], "first": [1, 2, 4, 5, 31, 34, 63, 64, 70, 71, 75, 77, 80, 82, 83], "off": [1, 2, 4, 6, 14, 15, 21, 23, 25, 27, 34, 40, 51, 70], "thank": [1, 62, 75, 84], "you": [1, 2, 17, 20, 22, 23, 24, 28, 32, 44, 51, 63, 64, 67, 74, 82, 83, 84], "prefer": [1, 2], "workflow": 1, "fork": 1, "main": [1, 22, 71, 83, 84], "repositori": [1, 84], "github": [1, 44, 63, 77, 80, 82, 83, 84], "clone": [1, 4, 5, 6, 9, 63], "develop": [1, 82, 83, 84], "branch": [1, 84], "step": [1, 2, 3, 4, 5, 7, 8, 9, 10, 13, 30, 63, 64, 70, 72], "click": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60], "button": 1, "top": [1, 15, 70, 74], "page": [1, 82, 84], "copi": [1, 2, 9, 12, 57, 63, 68, 70, 71, 81, 83], "code": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 66, 71, 77, 80, 83, 84], "under": [1, 64, 65, 82], "your": [1, 82, 83], "user": [1, 2, 51, 70, 82, 83, 84], "For": [1, 2, 28, 32, 34, 42, 44, 58, 64, 72, 75, 78, 80, 83, 84], "more": [1, 2, 44, 64, 71, 83, 84], "see": [1, 2, 4, 7, 10, 44, 63, 64, 65, 66, 70, 71, 72, 73, 75, 77, 78, 79, 83, 84], "guid": [1, 82, 84], "repo": [1, 84], "local": [1, 4, 33, 34, 83], "disk": 1, "git": 1, "com": [1, 15, 20, 21, 22, 26, 27, 28, 32, 33, 41, 42, 63, 77, 80, 82, 84], "yourlogin": 1, "cd": 1, "featur": [1, 2, 30, 64, 70, 72, 82], "hold": 1, "chang": [1, 3, 4, 7, 26, 33, 34, 63, 64, 71, 83, 84], "checkout": 1, "b": [1, 2, 8, 9, 13, 16, 17, 23, 25, 28, 31, 32, 33, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "my": 1, "alwai": [1, 44, 65, 83, 84], "It": [1, 2, 4, 13, 20, 22, 23, 26, 27, 28, 31, 32, 45, 46, 51, 58, 70, 71, 78, 82, 83, 84], "practic": [1, 2, 10, 64, 67, 83], "never": [1, 84], "work": [1, 2, 14, 44, 63, 64, 68, 70, 71, 72, 80, 81, 84], "master": [1, 80, 82, 84], "add": [1, 34, 58, 71, 73, 80, 84], "modified_fil": 1, "record": [1, 2, 9, 64, 65, 68, 69, 70, 71, 72, 73, 77, 78, 79, 81], "push": [1, 83, 84], "u": [1, 2, 3, 4, 5, 7, 8, 16, 17, 44, 54, 57, 64, 67, 73, 76, 78, 79, 80, 82, 83, 84], "origin": [1, 2, 4, 26, 30, 62, 71, 77, 83, 84], "instruct": 1, "send": [1, 18], "email": 1, "committ": 1, "If": [1, 2, 64, 65, 66, 67, 68, 70, 71, 72, 77, 79, 80, 81, 82, 83, 84], "abov": [1, 70, 74, 75, 83, 84], "seem": 1, "like": [1, 2, 4, 44, 62, 64, 65, 68, 69, 70, 71, 72, 78, 79, 80, 81, 84], "magic": 1, "pleas": [1, 2, 63, 71, 82], "look": [1, 75], "up": [1, 4, 84], "web": 1, "ask": [1, 82, 84], "friend": 1, "anoth": [1, 65, 71, 83], "help": [1, 33, 71, 83, 84], "recommend": [1, 2, 64, 83, 84], "compli": 1, "rule": [1, 72], "befor": [1, 2, 65, 71, 84], "submit": 1, "pep8": [1, 84], "guidelin": [1, 82], "titl": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 37, 38, 39, 44, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 74, 82], "describ": [1, 44, 64, 70], "mention": 1, "number": [1, 2, 3, 7, 8, 10, 16, 17, 18, 20, 22, 23, 24, 28, 30, 31, 32, 33, 34, 41, 44, 51, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "descript": 1, "sure": [1, 2, 71, 82], "link": [1, 4, 82, 84], "back": [1, 21, 25, 27], "method": [1, 2, 9, 15, 30, 42, 64, 65, 67, 70, 71, 72, 77, 78, 79, 80, 82, 83, 84], "should": [1, 2, 28, 60, 63, 64, 65, 67, 70, 71, 75, 77, 80, 82, 83, 84], "docstr": [1, 80, 84], "sampl": [1, 2, 3, 8, 21, 27, 34, 37, 38, 39, 40, 42, 44, 47, 50, 53, 54, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84], "usag": 1, "present": [1, 21, 26, 28, 59, 70], "doctest": [1, 84], "prefix": 1, "mrg": 1, "readi": 1, "merg": [1, 84], "complet": [1, 83, 84], "two": [1, 2, 4, 5, 12, 21, 23, 31, 42, 44, 49, 57, 63, 64, 65, 68, 69, 70, 71, 75, 79, 81, 82, 83, 84], "core": [1, 84], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 25, 26, 27, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "approv": 1, "elig": 1, "incomplet": [1, 84], "where": [1, 2, 6, 8, 9, 30, 34, 42, 44, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 83, 84], "receiv": [1, 4], "full": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 78, 80, 82, 84], "wip": 1, "indic": [1, 30, 63, 75], "progress": 1, "matur": 1, "someth": [1, 44], "avoid": [1, 2, 63, 64, 65, 67, 73, 83], "duplic": 1, "broad": 1, "function": [1, 2, 6, 9, 12, 13, 14, 33, 44, 57, 59, 82, 83, 84], "api": [1, 63, 82, 83, 84], "seek": [1, 83], "collabor": 1, "often": [1, 83], "benefit": [1, 62, 82], "task": 1, "list": [1, 2, 7, 12, 30, 57, 63, 64, 65, 68, 70, 71, 75, 78, 80, 81, 82, 84], "pr": [1, 63, 84], "ad": [1, 30, 63, 65, 69, 71, 73, 75, 80, 83, 84], "addit": [1, 2, 71, 75, 82, 83], "provid": [1, 2, 4, 34, 44, 62, 63, 64, 65, 70, 71, 75, 82, 83, 84], "least": [1, 2, 65], "one": [1, 3, 5, 7, 9, 21, 25, 26, 27, 30, 33, 34, 42, 44, 63, 64, 65, 66, 71, 75, 83, 84], "script": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 84], "folder": [1, 82, 84], "refer": [1, 9, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 81], "demonstr": [1, 32, 58, 84], "why": [1, 2, 64, 84], "possibl": [1, 2, 64, 65, 71, 80, 83, 84], "compar": [1, 44, 83], "high": [1, 34], "coverag": [1, 84], "test": [1, 30, 37, 63, 82, 84], "enhanc": 1, "fix": [1, 2, 34, 64, 67, 70, 71, 73, 77, 82, 84], "non": [1, 57, 59, 62, 63, 64, 71, 72, 75, 77, 79, 82, 83, 84], "regress": [1, 59, 75, 79, 82], "These": 1, "verifi": 1, "manner": 1, "modif": 1, "base": [1, 2, 64, 65, 70, 77, 80, 83, 84], "grant": 1, "consist": [1, 33, 63, 64, 65, 71, 83], "desir": [1, 64, 70, 71, 80], "case": [1, 2, 28, 44, 59, 63, 71, 75, 76, 82], "time": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 70, 78, 80, 82, 83, 84], "fail": [1, 71, 83, 84], "pass": [1, 2, 70, 73, 77, 80], "At": [1, 83], "paragraph": 1, "narr": 1, "literatur": [1, 64, 83], "pdf": [1, 48, 50, 83], "can": [1, 2, 4, 8, 44, 60, 64, 65, 67, 68, 70, 71, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84], "also": [1, 2, 4, 44, 63, 64, 65, 70, 80, 82, 83, 84], "check": [1, 2, 63, 64, 71, 80, 83, 84], "common": [1, 83], "program": [1, 64, 71, 82, 83, 84], "error": [1, 2, 9, 17, 30, 34, 57, 63, 64, 65, 67, 70, 71, 73, 77, 79, 82, 83, 84], "tool": [1, 83], "No": [1, 2, 4, 34, 71, 82, 83], "pyflak": 1, "warn": [1, 2, 4, 17, 20, 22, 23, 24, 28, 32, 33, 34, 41, 44, 51, 57, 64, 65, 80, 84], "pip": [1, 44, 83, 84], "instal": [1, 41, 64, 83, 84], "path": [1, 13, 14, 15, 21, 25, 27, 33, 36, 61, 66, 75, 82, 84], "modul": [1, 7, 10, 41, 44, 64, 67, 74, 82, 84], "py": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 80, 84], "autopep8": 1, "some": [1, 22, 28, 58, 62, 65, 71, 73, 80, 82, 83, 84], "easi": [1, 82, 83], "redund": 1, "bonu": 1, "point": [1, 2, 13, 17, 18, 31, 33, 40, 41, 42, 50, 64, 67, 71, 73, 80, 82, 83, 84], "perform": [1, 2, 4, 5, 9, 41, 70, 71, 80, 83, 84], "analysi": [1, 2, 36, 43, 51, 64, 65, 67, 71, 72, 81, 82, 84], "benchmark": [1, 63, 84], "profil": 1, "output": [1, 2, 7, 10, 33, 64, 80, 82, 83, 84], "track": [1, 70, 84], "feel": 1, "found": [1, 2, 30, 70, 72, 83], "wish": 1, "implement": [1, 2, 7, 44, 62, 63, 64, 67, 71, 77, 80, 83, 84], "being": [1, 2, 44, 65, 83, 84], "current": [1, 13, 20, 65, 70, 75, 77, 83, 84], "ensur": [1, 9, 71, 83], "snippet": 1, "messag": [1, 2, 64, 80, 84], "format": [1, 2, 3, 4, 5, 6, 7, 10, 23, 44, 59, 63, 71, 80, 82, 84], "block": [1, 2, 4, 28, 64, 65, 67, 70, 82, 83], "highlight": [1, 84], "oper": [1, 65, 67, 69, 83], "system": [1, 2, 26, 27, 41, 42, 63, 64, 65, 77, 78, 79, 82, 83], "type": [1, 2, 63, 64, 65, 66, 70, 71, 72, 73, 75, 76, 77, 78, 80, 83, 84], "well": [1, 63, 80, 83], "python": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 63, 80, 83, 84], "numpi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 23, 25, 26, 27, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 67, 71, 73, 75, 76, 79, 80, 82, 83, 84], "scipi": [1, 2, 30, 32, 33, 44, 50, 58, 63, 73, 77, 79, 80, 82, 83, 84], "run": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 76, 82, 84], "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 67, 71, 73, 74, 75, 78, 79, 80, 82, 83, 84], "platform": [1, 84], "print": [1, 2, 3, 4, 6, 7, 8, 10, 32, 34, 42, 44, 58, 64, 65, 67, 68, 70, 71, 72, 73, 77, 79, 81, 84], "sy": [1, 40], "__version__": 1, "ot": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 45, 47, 52, 53, 54, 56, 57, 58, 59, 60, 62, 82, 84], "about": [1, 64, 83, 84], "estim": [1, 11, 23, 29, 32, 36, 42, 62, 64, 65, 66, 69, 70, 71, 78, 80, 82, 84], "involv": [1, 28], "shape": [1, 2, 4, 5, 6, 9, 12, 13, 15, 16, 18, 21, 23, 25, 27, 28, 30, 31, 33, 34, 37, 40, 44, 57, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84], "data": [1, 2, 4, 5, 9, 15, 34, 44, 48, 63, 64, 65, 70, 71, 72, 82, 83, 84], "reproduc": [1, 2, 13, 70, 83], "gist": 1, "except": 1, "rais": [1, 2, 63, 64, 71, 73, 80, 84], "traceback": 1, "A": [1, 2, 5, 12, 13, 14, 15, 18, 25, 26, 27, 28, 30, 37, 41, 42, 44, 51, 57, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 83, 84], "great": 1, "wai": [1, 2, 21, 83], "start": [1, 2, 34, 44, 63, 64, 67, 75, 80, 82, 84], "pick": [1, 78], "item": [1, 6, 30], "tracker": 1, "resolv": 1, "allow": [1, 4, 8, 32, 33, 58, 73, 83, 84], "much": [1, 44, 64], "prior": [1, 2, 64, 83], "knowledg": [1, 83], "assist": 1, "area": [1, 83], "greatli": [1, 83, 84], "appreci": 1, "experienc": 1, "concentr": 1, "glad": 1, "sort": [1, 2, 63, 83], "restructuredtext": 1, "tutori": [1, 7, 83], "etc": 1, "live": [1, 18, 34, 71, 82], "sourc": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "doc": [1, 10, 63, 84], "directori": 1, "text": [1, 3, 6, 7, 8, 10, 16, 21, 23, 25, 26, 38, 39, 44, 47, 51, 53, 54, 56, 64, 69, 71, 75, 80, 83], "editor": 1, "gener": [1, 2, 5, 9, 13, 14, 15, 19, 32, 33, 36, 40, 42, 44, 48, 50, 52, 58, 62, 63, 64, 65, 66, 68, 71, 72, 74, 76, 77, 79, 80, 81, 82, 84], "html": [1, 7, 44, 63, 82], "altern": [1, 44, 65, 83], "quickli": [1, 44], "galleri": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 82, 84], "noplot": 1, "place": [1, 84], "build": [1, 2, 10, 30, 65, 82, 83, 84], "viewabl": 1, "browser": 1, "need": [1, 2, 44, 58, 64, 67, 71, 74, 83, 84], "sphinx": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 84], "matplotlib": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 84], "pillow": 1, "write": [1, 63], "keep": [1, 41, 83, 84], "compromis": 1, "between": [1, 2, 4, 5, 8, 17, 18, 21, 30, 33, 34, 36, 38, 39, 40, 44, 52, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 82, 84], "mathemat": [1, 2, 5, 53, 64, 70, 71, 73, 76, 82, 83, 84], "algorithm": [1, 2, 17, 33, 41, 57, 64, 65, 67, 68, 70, 71, 72, 77, 78, 79, 81, 82, 83, 84], "give": [1, 22, 28, 44, 60, 63, 70, 75, 84], "intuit": 1, "reader": [1, 83], "doe": [1, 7, 44, 63, 70, 83, 84], "small": [1, 2, 4, 9, 44, 64, 67, 70, 71, 82, 83, 84], "hand": 1, "wave": 1, "explan": 1, "figur": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60], "come": [1, 30, 83, 84], "illustr": [1, 9, 12, 13, 14, 15, 16, 17, 18, 30, 31, 34, 37, 38, 39, 41, 44, 45, 46, 47, 50, 51, 53, 54, 56, 57, 59, 84], "strongli": [1, 2, 64, 83, 84], "inpir": 1, "scikit": [1, 80, 83, 84], "learn": [1, 2, 4, 5, 8, 10, 15, 26, 30, 31, 35, 36, 42, 54, 62, 64, 65, 70, 71, 72, 73, 76, 78, 79, 80, 82, 83, 84], "automat": [2, 8, 9, 71, 83, 84], "sub": [2, 75, 82, 83], "lp": [2, 9, 16, 18, 19, 36, 50, 64, 65, 66, 72, 77, 79, 80, 82, 83, 84], "bregman": [2, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 28, 32, 41, 44, 47, 51, 65, 68, 71, 72, 73, 79, 81, 82, 84], "optim": [2, 3, 5, 7, 10, 11, 13, 16, 21, 26, 27, 30, 31, 36, 42, 43, 51, 52, 61, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 84], "util": [2, 4, 8, 9, 12, 13, 15, 42, 44, 57, 63, 65, 78, 83], "dataset": [2, 3, 9, 10, 12, 13, 15, 20, 22, 23, 24, 26, 28, 30, 32, 37, 38, 41, 45, 46, 47, 49, 51, 53, 56, 57, 58, 59, 60, 67, 70, 78, 83, 84], "gromov": [2, 11, 30, 35, 61, 62, 66, 72, 73, 80, 82, 84], "smooth": [2, 13, 36, 52, 62, 66, 74, 82, 83, 84], "stochast": [2, 3, 4, 7, 36, 43, 62, 64, 70, 74, 82, 83, 84], "partial": [2, 57, 60, 61, 62, 66, 78, 82, 84], "regpath": 2, "unbalanc": [2, 58, 61, 62, 64, 65, 66, 73, 74, 75, 80, 82, 84], "due": [2, 65, 83, 84], "depend": [2, 34, 63, 70, 83, 84], "dr": [2, 37, 82, 83], "pymanopt": [2, 67, 82, 83], "autograd": [2, 6, 67, 82, 83, 84], "gpu": [2, 62, 63, 64, 68, 70, 71, 81, 84], "cupi": [2, 63, 82, 83, 84], "cuda": [2, 5, 9, 62, 84], "plot": [2, 4, 9, 12, 13, 15, 34, 35, 36, 51, 70, 83, 84], "barycent": [2, 11, 19, 35, 53, 61, 62, 64, 65, 66, 70, 71, 76, 79, 80, 82, 84], "m": [2, 4, 8, 9, 10, 12, 13, 15, 22, 23, 26, 27, 31, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "reg": [2, 3, 7, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 32, 34, 37, 42, 44, 46, 47, 49, 51, 57, 58, 59, 60, 64, 65, 67, 68, 69, 70, 72, 73, 75, 77, 78, 79, 82, 83], "weight": [2, 12, 13, 14, 15, 16, 17, 18, 34, 38, 44, 47, 57, 59, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 83, 84], "none": [2, 4, 7, 15, 17, 30, 31, 34, 44, 50, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 84], "sinkhorn": [2, 10, 16, 19, 20, 22, 24, 28, 32, 36, 41, 51, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 77, 79, 80, 81, 82, 84], "numitermax": [2, 16, 17, 20, 22, 23, 24, 28, 32, 42, 44, 51, 64, 65, 68, 71, 72, 73, 77, 78, 79, 81], "10000": [2, 7, 63, 64, 78], "stopthr": [2, 64, 65, 67, 68, 71, 72, 73, 77, 79, 81, 84], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83], "0001": [2, 64, 72, 75], "verbos": [2, 13, 20, 23, 26, 27, 31, 32, 34, 41, 45, 46, 51, 56, 58, 64, 65, 67, 68, 70, 71, 72, 73, 77, 79, 81], "fals": [2, 15, 27, 30, 34, 41, 50, 54, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81], "log": [2, 15, 23, 30, 31, 32, 34, 42, 51, 53, 54, 58, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 83, 84], "true": [2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 18, 20, 23, 26, 27, 30, 31, 32, 34, 37, 40, 41, 42, 44, 45, 46, 51, 54, 56, 58, 59, 63, 64, 65, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84], "kwarg": [2, 64, 65, 66, 68, 70, 72, 73, 74, 79, 80, 81], "comput": [2, 4, 8, 9, 10, 13, 34, 41, 45, 46, 50, 53, 54, 56, 63, 64, 65, 67, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 82, 84], "entrop": [2, 11, 17, 19, 32, 36, 58, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 84], "regular": [2, 11, 12, 14, 17, 19, 20, 21, 22, 23, 27, 28, 29, 32, 34, 41, 52, 57, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84], "wasserstein": [2, 11, 19, 35, 43, 55, 61, 62, 64, 65, 66, 67, 69, 70, 71, 73, 76, 79, 80, 82, 84], "distribut": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 19, 26, 29, 31, 33, 36, 38, 39, 44, 48, 49, 50, 51, 52, 55, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84], "mathbf": [2, 8, 34, 44, 60, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81], "solv": [2, 4, 22, 28, 40, 60, 63, 64, 65, 67, 68, 70, 71, 72, 73, 77, 78, 79, 80, 81, 84], "problem": [2, 8, 9, 10, 12, 13, 22, 23, 28, 40, 57, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84], "mathop": [2, 64, 65, 67, 68, 70, 71, 72, 73, 77, 78, 79, 80, 81], "arg": [2, 63, 64, 65, 67, 68, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83], "min": [2, 34, 37, 44, 63, 64, 65, 67, 68, 70, 71, 72, 73, 77, 78, 79, 80, 81, 83], "_": [2, 26, 34, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83], "quad": [2, 8, 64, 65, 67, 68, 70, 71, 72, 73, 77, 78, 79, 81, 83], "sum_i": [2, 31, 63, 64, 71, 77, 78, 79, 81, 83], "w_": [2, 34, 64, 70, 79], "_i": [2, 64, 67, 71, 75, 77, 78, 79, 80, 81], "cdot": [2, 60, 64, 65, 67, 71, 72, 73, 78, 79, 83], "distanc": [2, 5, 10, 11, 30, 33, 34, 44, 52, 54, 55, 62, 64, 65, 66, 67, 69, 70, 71, 73, 76, 77, 79, 80, 82, 84], "sinkhorn_stabil": [2, 64, 65, 79, 83], "sinkhorn_log": [2, 64, 67, 83, 84], "train": [2, 21, 27, 37, 64, 65, 66, 67, 79, 83, 84], "column": [2, 8, 64, 71, 75, 77, 79], "matrix": [2, 4, 8, 10, 12, 13, 15, 21, 25, 27, 30, 33, 34, 38, 47, 48, 49, 51, 57, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "term": [2, 10, 47, 51, 64, 65, 67, 70, 72, 73, 77, 78, 79, 80, 83, 84], "cost": [2, 22, 28, 37, 38, 41, 42, 45, 46, 47, 48, 56, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "knopp": [2, 62, 63, 64, 79, 82, 83, 84], "scale": [2, 33, 40, 42, 57, 64, 65, 77, 78, 79, 82, 83, 84], "propos": [2, 8, 10, 12, 13, 15, 18, 37, 51, 53, 54, 57, 64, 65, 68, 69, 70, 71, 73, 78, 79, 81, 83, 84], "3": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 64, 65, 72, 73, 75, 76, 78, 79, 82, 83], "paramet": [2, 4, 7, 8, 9, 10, 13, 14, 20, 22, 23, 24, 28, 30, 32, 33, 34, 39, 41, 50, 51, 56, 57, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "arrai": [2, 4, 8, 9, 12, 13, 14, 15, 17, 18, 23, 25, 30, 32, 33, 34, 38, 40, 44, 47, 53, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84], "dim": [2, 6, 33, 64, 76, 79], "n_hist": [2, 64, 79], "loss": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 20, 26, 27, 31, 34, 38, 47, 48, 51, 57, 58, 59, 60, 64, 65, 70, 71, 72, 73, 77, 78, 79, 80, 82, 83, 84], "float": [2, 3, 7, 8, 9, 10, 14, 30, 33, 44, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "str": [2, 32, 34, 44, 58, 60, 64, 65, 66, 67, 70, 71, 77, 78, 79, 80], "option": [2, 44, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84], "solver": [2, 11, 13, 36, 40, 45, 52, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84], "either": [2, 26, 60, 64, 65, 67, 70, 71, 79], "each": [2, 8, 10, 30, 34, 44, 64, 65, 70, 71, 77, 78, 79, 80, 82, 83, 84], "histogram": [2, 64, 66, 68, 71, 73, 75, 77, 79, 80, 81, 82, 83, 84], "simplex": [2, 4, 8, 9, 34, 64, 71, 77, 80, 82, 83], "barycentr": [2, 12, 26, 64, 65, 79, 83], "coodin": [2, 64, 79], "int": [2, 4, 33, 34, 53, 54, 64, 65, 66, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83], "max": [2, 12, 13, 15, 32, 33, 34, 38, 41, 44, 45, 46, 48, 49, 50, 51, 56, 57, 59, 60, 63, 64, 65, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "iter": [2, 3, 4, 7, 8, 9, 12, 13, 17, 20, 22, 23, 24, 28, 32, 33, 37, 44, 51, 57, 64, 65, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 81, 82, 83, 84], "stop": [2, 63, 64, 65, 67, 68, 70, 71, 72, 73, 77, 79, 81], "threshold": [2, 30, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 77, 79, 81, 83], "bool": [2, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81], "along": [2, 4, 8, 9, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 77, 79, 81], "doesn": [2, 64], "t": [2, 8, 9, 12, 13, 15, 33, 34, 37, 40, 44, 50, 54, 57, 59, 60, 64, 65, 67, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "converg": [2, 4, 17, 20, 22, 23, 24, 28, 32, 33, 44, 51, 64, 65, 70, 71, 72, 82, 83, 84], "return": [2, 4, 5, 6, 7, 8, 10, 18, 21, 25, 27, 30, 32, 33, 44, 50, 51, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "dict": [2, 34, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81], "dictionari": [2, 4, 35, 36, 62, 64, 65, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 83, 84], "onli": [2, 8, 16, 31, 44, 63, 64, 65, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84], "benam": [2, 12, 13, 64, 73, 79, 82, 83], "j": [2, 4, 12, 13, 14, 18, 21, 23, 27, 31, 33, 34, 40, 44, 51, 59, 60, 64, 65, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 82, 83], "d": [2, 12, 13, 16, 17, 25, 30, 34, 44, 51, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83], "carlier": [2, 12, 13, 64, 73, 79, 82, 83], "g": [2, 6, 10, 12, 13, 21, 23, 27, 30, 31, 34, 41, 42, 44, 45, 46, 47, 51, 56, 57, 59, 64, 65, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82], "cuturi": [2, 10, 12, 13, 15, 37, 42, 62, 64, 65, 67, 69, 70, 71, 73, 77, 78, 79, 82, 83], "nenna": [2, 12, 13, 64, 73, 79, 82, 83], "l": [2, 10, 12, 13, 15, 31, 54, 57, 59, 64, 65, 67, 70, 71, 73, 75, 76, 77, 79, 82, 83], "peyr\u00e9": [2, 10, 12, 13, 42, 51, 57, 62, 64, 65, 69, 70, 72, 73, 78, 79, 82, 83], "2015": [2, 5, 12, 13, 51, 53, 64, 65, 72, 73, 76, 79, 82, 83], "transport": [2, 5, 7, 12, 13, 27, 30, 36, 43, 51, 52, 57, 58, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 84], "siam": [2, 12, 13, 21, 27, 51, 64, 65, 72, 73, 79, 82, 83], "journal": [2, 5, 12, 13, 21, 27, 51, 53, 64, 65, 69, 70, 71, 72, 73, 76, 79, 81, 82, 83, 84], "scientif": [2, 12, 13, 64, 73, 79, 82, 83, 84], "37": [2, 7, 12, 13, 14, 15, 19, 51, 64, 73, 79, 82, 83, 84], "a1111": [2, 12, 13, 64, 73, 79, 82, 83], "a1138": [2, 12, 13, 64, 73, 79, 82, 83], "barycenter_unbalanc": [2, 57, 79, 83], "reg_m": [2, 60, 65, 73, 79, 83], "1000": [2, 6, 7, 10, 16, 23, 25, 37, 42, 50, 63, 64, 65, 70, 73, 79], "1e": [2, 4, 9, 10, 12, 13, 15, 17, 20, 21, 22, 23, 26, 27, 28, 31, 33, 40, 44, 45, 46, 47, 49, 51, 57, 59, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 84], "06": [2, 11, 13, 26, 37, 42, 45, 46, 51, 64, 65, 69, 73, 78, 79], "u_": [2, 76, 79], "sinkhorn_unbalanc": [2, 56, 60, 79, 83], "reg_mi": [2, 79], "margin": [2, 59, 64, 70, 71, 73, 75, 79, 80, 83], "relax": [2, 56, 75, 77, 79, 82, 83], "hyperparamet": [2, 79], "10": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 17, 20, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 41, 45, 46, 50, 51, 54, 56, 57, 58, 59, 60, 64, 65, 67, 70, 72, 77, 78, 79, 82, 83], "dimens": [2, 9, 33, 37, 63, 64, 67, 70, 73, 75, 76, 79, 84], "ground": [2, 48, 49, 64, 65, 77, 78, 79, 82, 83], "metric": [2, 22, 23, 32, 36, 40, 44, 49, 52, 58, 64, 65, 70, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84], "entropi": [2, 41, 56, 63, 64, 67, 70, 77, 79, 82, 83], "uniform": [2, 6, 8, 34, 38, 39, 41, 44, 47, 53, 54, 59, 60, 63, 64, 65, 68, 70, 71, 76, 79, 80, 81, 83, 84], "chizat": [2, 57, 64, 65, 73, 79, 82, 83], "schmitzer": [2, 57, 64, 65, 73, 79, 82, 83], "vialard": [2, 57, 64, 65, 73, 79, 82, 83], "f": [2, 5, 6, 12, 15, 21, 27, 31, 34, 42, 44, 51, 54, 57, 63, 64, 65, 72, 73, 76, 78, 79, 80, 82, 83, 84], "x": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83], "2016": [2, 13, 26, 27, 37, 42, 57, 64, 65, 67, 70, 71, 73, 78, 79, 82, 83, 84], "arxiv": [2, 18, 48, 51, 57, 64, 65, 67, 71, 72, 77, 79, 82, 83], "preprin": [2, 79], "1607": [2, 57, 64, 65, 79, 82, 83], "05816": [2, 57, 64, 65, 79, 82, 83], "binary_search_circl": [2, 84], "u_valu": 2, "v_valu": 2, "u_weight": 2, "v_weight": 2, "p": [2, 4, 6, 9, 23, 30, 31, 32, 33, 34, 37, 40, 44, 50, 54, 58, 59, 60, 63, 64, 65, 66, 67, 68, 70, 71, 73, 76, 77, 80, 81, 82, 83, 84], "lm": 2, "tm": [2, 50], "tp": [2, 50, 59], "ep": [2, 10, 15, 33, 63, 71], "require_sort": 2, "circl": [2, 36, 37, 44, 52, 62, 80, 82, 84], "binari": [2, 34, 66], "search": [2, 30, 44, 64, 70, 71, 72, 82, 83], "44": [2, 19, 51, 73, 82, 84], "cong": 2, "mathbb": [2, 64, 70, 71, 76, 78, 80, 83], "r": [2, 5, 6, 9, 10, 12, 13, 15, 23, 26, 27, 32, 33, 34, 37, 39, 41, 42, 44, 45, 46, 49, 50, 51, 54, 56, 57, 58, 59, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84], "valu": [2, 4, 6, 9, 13, 28, 30, 31, 33, 34, 44, 49, 50, 57, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 79, 80, 83, 84], "modulo": 2, "subset": [2, 80], "requir": [2, 30, 63, 65, 82, 83, 84], "find": [2, 30, 33, 42, 63, 71, 72, 82, 83], "coordin": [2, 14, 31, 33, 63, 65, 67, 70, 78, 80, 82, 83], "atan2": [2, 63, 80], "w_p": [2, 71, 76, 83], "v": [2, 3, 7, 17, 19, 29, 30, 36, 42, 43, 44, 54, 57, 63, 64, 65, 66, 71, 74, 76, 77, 78, 79, 80, 82, 83, 84], "inf_": 2, "theta": [2, 3, 7, 10, 26, 50, 64, 66, 71, 76], "int_0": 2, "f_u": 2, "q": [2, 31, 32, 34, 57, 58, 63, 64, 70, 73, 75, 83], "f_v": 2, "mathrm": [2, 6, 50, 60, 64, 65, 67, 70, 72, 73, 76, 77, 78, 79, 80], "cdf": 2, "x_1": [2, 44, 80], "x_2": [2, 44, 80], "get": [2, 4, 33, 34, 64, 65, 67, 70, 71, 80, 82, 83, 84], "frac": [2, 6, 63, 64, 65, 67, 70, 71, 73, 75, 76, 77, 78, 80, 81, 83], "pi": [2, 3, 7, 10, 18, 25, 26, 30, 37, 48, 50, 54, 67, 78, 80, 84], "get_coordinate_circl": [2, 80], "backend": [2, 4, 5, 6, 7, 8, 9, 44, 62, 64, 68, 70, 71, 76, 78, 80, 81, 82, 84], "tensorflow": [2, 63, 76, 82, 83, 84], "support": [2, 5, 7, 9, 19, 20, 36, 62, 64, 68, 71, 76, 84], "ndarrai": [2, 30, 33, 63, 64, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 80], "n": [2, 4, 6, 8, 9, 10, 12, 13, 15, 16, 18, 21, 23, 25, 26, 27, 30, 31, 33, 34, 37, 38, 39, 41, 42, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83], "domain": [2, 28, 29, 51, 64, 65, 66, 67, 69, 70, 72, 74, 76, 77, 79, 80, 82, 84], "target": [2, 3, 7, 8, 9, 10, 25, 26, 29, 33, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 59, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "default": [2, 4, 33, 34, 44, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 83, 84], "power": [2, 44, 63, 76], "lower": [2, 16, 20, 24, 44], "bound": [2, 84], "dc": 2, "upper": [2, 56], "condit": [2, 51, 62, 63, 65, 68, 70, 72, 81, 82, 83, 84], "associ": [2, 65, 70, 73, 76, 80], "np": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 23, 25, 26, 27, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 73, 75, 76, 77, 78, 79, 80, 83], "5": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 64, 65, 66, 70, 71, 72, 73, 75, 76, 78, 79, 80, 82, 83], "8": [2, 4, 5, 6, 9, 10, 12, 13, 15, 16, 18, 20, 21, 24, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 40, 42, 45, 46, 47, 48, 51, 53, 57, 58, 59, 60, 65, 71, 78, 80, 82, 83], "7": [2, 12, 13, 14, 15, 18, 20, 21, 22, 25, 26, 27, 30, 31, 34, 37, 40, 42, 44, 46, 47, 48, 49, 51, 57, 60, 65, 72, 75, 77, 78, 82, 83], "delon": [2, 18, 71, 82], "juli": [2, 10, 82, 84], "julien": [2, 82], "salomon": [2, 82], "andrei": [2, 82], "sobolevski": [2, 82], "fast": [2, 45, 64, 70, 71, 82, 83], "mong": [2, 73, 82], "70": [2, 3, 7, 10, 31, 45, 46, 51, 82], "2010": [2, 73, 82], "2239": [2, 82], "2258": [2, 82], "dist": [2, 8, 10, 22, 30, 31, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 51, 56, 57, 59, 60, 67, 70, 75, 78, 80, 83, 84], "x1": [2, 4, 5, 16, 17, 21, 25, 27, 40, 44, 50, 67, 80], "x2": [2, 5, 16, 17, 21, 25, 27, 40, 44, 50, 67, 80], "sqeuclidean": [2, 22, 23, 44, 48, 49, 64, 65, 78, 80], "w": [2, 8, 9, 10, 33, 34, 40, 44, 58, 60, 64, 67, 69, 70, 71, 76, 77, 78, 79, 80, 82, 83, 84], "compat": [2, 44, 63, 64, 67, 68, 70, 71, 77, 78, 80, 81, 84], "n1": [2, 44, 80], "n2": [2, 31, 44, 80], "callabl": [2, 44, 65, 67, 70, 72, 78, 80, 84], "euclidean": [2, 13, 30, 40, 44, 48, 49, 65, 67, 77, 80, 83, 84], "On": [2, 44, 65, 69, 80, 82, 83, 84], "spatial": [2, 32, 33, 44, 58, 73, 80], "cdist": [2, 32, 33, 44, 58, 73, 80], "braycurti": [2, 44, 80], "canberra": [2, 44, 80], "chebyshev": [2, 44, 80], "cityblock": [2, 44, 48, 80], "correl": [2, 44, 80], "cosin": [2, 44, 80], "dice": [2, 44, 80], "ham": [2, 44, 80, 84], "jaccard": [2, 44, 80], "kulsinski": [2, 44, 80], "mahalanobi": [2, 44, 80], "match": [2, 44, 65, 70, 80, 82, 83], "minkowski": [2, 44, 80], "rogerstanimoto": [2, 44, 80], "russellrao": [2, 44, 80], "seuclidean": [2, 44, 80], "sokalmichen": [2, 44, 80], "sokalsneath": [2, 44, 80], "wminkowski": [2, 44, 80], "yule": [2, 44, 80], "norm": [2, 17, 30, 37, 44, 60, 63, 65, 80], "rank": [2, 39, 44, 68, 77, 80], "given": [2, 4, 33, 34, 44, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 83, 84], "emd": [2, 20, 22, 24, 31, 38, 39, 40, 48, 62, 64, 65, 71, 72, 73, 76, 77, 79, 81, 82, 84], "100000": [2, 42, 65, 71, 72, 79], "center_du": [2, 71], "numthread": [2, 71, 84], "earth": [2, 65, 71, 82, 84], "mover": [2, 65, 71, 82, 84], "gamma": [2, 44, 59, 60, 64, 65, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 83], "langl": [2, 64, 65, 70, 71, 72, 73, 76, 78, 79], "rangle_f": [2, 64, 65, 70, 71, 72, 73, 78, 79], "geq": [2, 60, 64, 65, 70, 71, 72, 73, 75, 78, 79, 80, 81, 83], "note": [2, 28, 44, 64, 65, 67, 70, 71, 73, 74, 77, 80, 82, 83, 84], "c": [2, 4, 9, 10, 17, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 33, 34, 37, 38, 39, 42, 44, 47, 48, 50, 54, 59, 60, 62, 63, 64, 65, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84], "order": [2, 8, 22, 28, 30, 44, 63, 67, 71, 74, 83], "float64": [2, 5, 9, 12, 13, 15, 16, 18, 21, 25, 27, 33, 41, 45, 46, 49, 51, 56, 57, 64, 71], "convert": [2, 8, 21, 25, 27, 33, 63, 71, 80], "But": [2, 68, 70, 71, 81, 83, 84], "cpu": [2, 4, 5, 9, 63, 68, 70, 71, 81, 84], "lead": [2, 8, 44, 64, 68, 70, 71, 72, 81, 83, 84], "overhead": [2, 64, 68, 70, 71, 81, 83], "cast": [2, 71, 83], "plan": [2, 4, 11, 36, 39, 40, 45, 46, 59, 60, 64, 68, 70, 71, 73, 75, 77, 78, 79, 80, 83, 84], "input": [2, 15, 18, 57, 63, 64, 65, 68, 70, 71, 77, 80, 81, 83], "prioriti": [2, 71], "integ": [2, 30, 71, 84], "tensor": [2, 4, 5, 8, 9, 63, 70, 71, 83, 84], "might": [2, 17, 20, 22, 23, 24, 28, 32, 44, 51, 64, 71, 83], "precis": [2, 63, 64, 65, 70, 71], "behaviour": [2, 71], "unwant": [2, 71], "vector": [2, 8, 63, 64, 71, 75, 76, 80, 82, 83], "sum": [2, 4, 7, 8, 9, 13, 14, 15, 16, 34, 37, 38, 44, 47, 49, 51, 54, 56, 59, 60, 63, 64, 65, 67, 70, 71, 72, 73, 75, 76, 77, 78, 80, 82, 83], "same": [2, 26, 32, 44, 58, 63, 71, 80, 83], "empti": [2, 53, 54, 65, 68, 71, 80, 81], "nt": [2, 8, 34, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 81], "maximum": [2, 17, 30, 33, 44, 50, 63, 64, 65, 70, 71, 72, 75, 77], "ha": [2, 4, 8, 10, 44, 62, 64, 65, 70, 71, 73, 80, 82, 83, 84], "contain": [2, 12, 13, 15, 57, 68, 70, 71, 75, 80, 81, 82, 83, 84], "dual": [2, 10, 11, 13, 36, 64, 66, 68, 71, 74, 77, 78, 80, 81, 82, 83, 84], "variabl": [2, 34, 64, 65, 68, 70, 71, 75, 77, 78, 81, 83, 84], "boolean": [2, 63, 64, 65, 69, 71, 80], "center": [2, 44, 67, 71, 84], "potenti": [2, 7, 10, 64, 71, 77, 78, 80, 84], "center_ot_du": [2, 71], "openmp": [2, 71, 84], "compil": [2, 71, 82, 83, 84], "choos": [2, 30, 50, 64, 67, 71, 83], "thread": [2, 71], "parallel": [2, 71, 80, 83, 84], "select": [2, 41, 70, 71, 83], "highest": [2, 71], "exit": [2, 68, 71, 81, 84], "statu": [2, 68, 71, 80, 81, 84], "simpl": [2, 4, 8, 14, 33, 44, 66, 71, 80, 83, 84], "obviou": [2, 71], "solut": [2, 40, 44, 64, 71, 75, 83, 84], "convers": [2, 71], "bonneel": [2, 5, 53, 62, 71, 76, 82, 83], "van": [2, 71, 82, 83], "de": [2, 64, 71, 82, 83], "pann": [2, 71, 82, 83], "pari": [2, 16, 17, 71, 82, 83], "heidrich": [2, 71, 82, 83], "2011": [2, 70, 71, 82, 83], "decemb": [2, 63, 71, 82, 83, 84], "displac": [2, 49, 71, 80, 82, 83], "interpol": [2, 4, 9, 12, 14, 20, 22, 24, 28, 31, 33, 34, 38, 44, 47, 48, 64, 71, 73, 82, 83], "lagrangian": [2, 71, 73, 75, 82, 83], "mass": [2, 4, 23, 44, 58, 60, 65, 70, 71, 73, 82, 83, 84], "acm": [2, 64, 71, 82, 83], "transact": [2, 51, 64, 65, 71, 72, 82, 83], "graphic": [2, 64, 71, 82, 83, 84], "tog": [2, 64, 71, 82, 83], "vol": [2, 10, 51, 65, 69, 71, 72, 82, 83], "30": [2, 3, 5, 7, 10, 13, 20, 22, 24, 28, 30, 31, 32, 33, 34, 37, 41, 44, 45, 46, 51, 65, 71, 82, 83], "6": [2, 4, 7, 9, 10, 13, 15, 18, 20, 21, 22, 24, 26, 27, 34, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 51, 56, 57, 58, 60, 65, 70, 71, 75, 78, 82, 83], "158": [2, 51, 71, 82, 83], "cg": [2, 51, 64, 65, 68, 70, 71, 77, 79, 81, 83], "emd2": [2, 8, 10, 49, 62, 71, 79, 82, 84], "process": [2, 26, 27, 41, 42, 44, 64, 65, 71, 77, 78, 79, 82, 83, 84], "return_matrix": [2, 71], "min_": [2, 6, 8, 9, 10, 60, 64, 65, 67, 70, 71, 73, 75, 79, 83], "nb": [2, 9, 12, 13, 15, 21, 27, 32, 33, 37, 38, 39, 41, 45, 46, 47, 48, 49, 51, 53, 54, 56, 57, 58, 59, 60, 71, 72, 74], "multipl": [2, 49, 64, 70, 71, 77, 79, 80, 84], "deprec": [2, 9, 12, 57, 58, 71, 80], "emd2_1d": [2, 83], "x_a": 2, "x_b": 2, "dens": [2, 63, 70, 80], "1d": [2, 11, 19, 31, 36, 52, 61, 62, 66, 70, 72, 74, 80, 82, 83, 84], "measur": [2, 5, 9, 16, 18, 31, 42, 53, 64, 67, 70, 71, 76, 78, 80, 82, 83], "sum_j": [2, 31, 71, 77, 78, 81], "gamma_": [2, 44, 64, 65, 72, 73, 78, 79, 81, 83], "ij": [2, 81], "y": [2, 3, 6, 10, 12, 17, 18, 20, 22, 23, 24, 26, 28, 30, 31, 32, 34, 37, 54, 57, 63, 64, 65, 66, 67, 70, 71, 73, 75, 76, 77, 80, 82, 83], "dirac": [2, 16, 38, 47], "locat": [2, 16, 18, 63, 64, 71], "real": 2, "line": [2, 21, 25, 27, 33, 44, 64, 70, 71, 72, 74, 83], "string": [2, 64, 65, 70, 78, 79, 80], "faster": [2, 84], "math": [2, 30, 44, 73, 77, 83], "spars": [2, 30, 44, 63, 64, 67, 70, 77, 79, 80, 82, 83, 84], "coo_matrix": [2, 63], "2017": [2, 10, 64, 65, 69, 81, 82, 83, 84], "2018": [2, 10, 42, 64, 65, 69, 73, 77, 78, 82, 83, 84], "multidimension": [2, 33], "emd_1d": [2, 45, 83, 84], "instead": [2, 7, 10, 12, 34, 57, 63, 64, 82, 83, 84], "factored_optimal_transport": [2, 39, 68], "xa": [2, 68, 81], "xb": [2, 5, 17, 39, 68, 81], "100": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 24, 26, 30, 32, 33, 34, 37, 39, 40, 41, 44, 45, 46, 49, 50, 51, 56, 57, 58, 59, 63, 64, 65, 67, 68, 70, 71, 73, 76], "x0": [2, 6, 30, 68, 76], "07": [2, 13, 19, 27, 29, 37, 42, 43, 45, 46, 51, 58, 64, 68, 71, 73, 78, 79], "factor": [2, 36, 43, 63, 74, 82, 83, 84], "intermedi": [2, 7, 68], "40": [2, 3, 7, 10, 34, 44, 45, 46, 51, 60, 68, 75, 82, 83], "mu": [2, 5, 8, 9, 26, 27, 30, 31, 50, 58, 65, 67, 68, 76, 83], "w_2": [2, 50, 68, 71, 83], "mu_a": [2, 68], "mu_b": [2, 68], "empir": [2, 4, 5, 29, 36, 39, 48, 52, 62, 64, 65, 66, 68, 69, 71, 74, 80, 81, 82, 83, 84], "And": [2, 68], "gradient": [2, 4, 8, 9, 10, 11, 36, 51, 62, 63, 64, 65, 67, 68, 70, 72, 73, 75, 77, 78, 81, 82, 83, 84], "39": [2, 3, 7, 18, 19, 51, 59, 61, 68, 81, 82, 83], "rel": [2, 20, 31, 32, 33, 51, 64, 65, 68, 70, 72, 81], "variat": [2, 13, 49, 68, 72, 81, 83], "ga": [2, 39, 68], "gb": [2, 39, 68], "forrow": [2, 68, 82, 83], "h\u00fctter": [2, 68, 82, 83], "nitzan": [2, 68, 82, 83], "rigollet": [2, 64, 68, 82, 83], "schiebing": [2, 68, 82, 83], "weed": [2, 64, 68, 82, 83], "2019": [2, 5, 30, 31, 41, 64, 65, 68, 70, 72, 76, 82, 83, 84], "april": [2, 64, 68, 82, 83], "statist": [2, 10, 64, 65, 68, 77, 82, 83], "coupl": [2, 26, 36, 43, 64, 65, 68, 70, 74, 82, 83, 84], "22nd": [2, 64, 68, 82, 83], "intern": [2, 4, 5, 9, 10, 15, 30, 31, 34, 42, 54, 64, 65, 68, 70, 71, 72, 73, 76, 77, 78, 82, 83], "confer": [2, 4, 5, 10, 15, 30, 31, 34, 42, 54, 64, 65, 68, 70, 71, 72, 73, 76, 77, 78, 82, 83], "artifici": [2, 10, 64, 65, 68, 77, 82, 83], "intellig": [2, 10, 51, 64, 65, 68, 72, 77, 82, 83], "pp": [2, 5, 10, 51, 64, 65, 68, 72, 76, 82, 83], "2454": [2, 68, 82, 83], "2465": [2, 68, 82, 83], "pmlr": [2, 5, 10, 15, 64, 68, 82, 83], "fused_gromov_wasserstein": [2, 31, 70, 83], "c1": [2, 4, 31, 32, 58, 59, 60, 70, 72, 73, 83], "c2": [2, 4, 31, 32, 58, 59, 60, 70, 72, 73, 83], "loss_fun": [2, 31, 70], "square_loss": [2, 31, 32, 33, 70], "alpha": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 18, 20, 22, 23, 24, 26, 28, 30, 31, 34, 39, 40, 42, 44, 49, 50, 53, 54, 56, 57, 59, 60, 64, 65, 70, 71, 72, 74, 77, 78], "armijo": [2, 70, 72, 84], "g0": [2, 38, 39, 45, 46, 47, 51, 70, 72, 73, 79, 81], "fgw": [2, 35, 36, 70, 82, 84], "graph": [2, 31, 35, 36, 44, 62, 70, 72, 82, 83, 84], "24": [2, 37, 51, 70, 72, 82, 83, 84], "sum_": [2, 6, 8, 44, 64, 65, 67, 70, 71, 72, 73, 76, 78, 79, 83], "k": [2, 4, 8, 10, 15, 16, 17, 23, 30, 31, 34, 37, 40, 44, 50, 63, 64, 65, 67, 70, 71, 73, 75, 83], "c_1": [2, 31, 70, 72, 73], "c_2": [2, 31, 70, 73], "misfit": [2, 70], "similar": [2, 10, 28, 44, 65, 70, 75, 83], "matric": [2, 9, 33, 44, 51, 63, 64, 65, 67, 70, 71, 72, 73, 74, 80, 81, 82, 83, 84], "discuss": [2, 65, 69, 70, 72, 82, 83, 84], "across": [2, 70], "structur": [2, 30, 34, 63, 70, 72, 82, 83, 84], "trade": [2, 34, 70], "research": [2, 62, 70, 72, 82, 83, 84], "els": [2, 4, 5, 9, 14, 18, 23, 30, 34, 50, 65, 67, 69, 70, 72, 79], "close": [2, 30, 31, 44, 65, 69, 70, 72, 80, 83], "form": [2, 8, 10, 44, 65, 69, 70, 72, 75, 80, 83, 84], "initi": [2, 16, 62, 64, 67, 70, 71, 72, 79, 81, 83], "pq": [2, 70], "must": [2, 70, 77], "satisfi": [2, 70, 72], "constraint": [2, 64, 70, 71, 80, 83], "directli": [2, 44, 70, 73, 83], "vayer": [2, 4, 30, 31, 34, 62, 70, 72, 82, 83], "titouan": [2, 30, 31, 62, 70, 72, 82], "chapel": [2, 30, 31, 58, 59, 60, 62, 70, 72, 73, 75, 79, 82, 83], "laetitia": [2, 30, 31, 58, 60, 62, 70, 72, 82], "flamari": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 16, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 34, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 51, 59, 62, 64, 65, 67, 70, 72, 75, 78, 79, 82, 83], "r\u00e9mi": [2, 4, 5, 9, 16, 30, 31, 62, 64, 65, 70, 72, 82, 83], "tavenard": [2, 30, 31, 62, 70, 72, 82, 83], "romain": [2, 30, 31, 62, 70, 72, 82], "courti": [2, 4, 9, 10, 14, 26, 27, 30, 31, 32, 33, 34, 37, 42, 44, 51, 54, 62, 64, 65, 67, 70, 72, 76, 78, 82, 83], "nicola": [2, 5, 9, 14, 30, 31, 32, 33, 44, 53, 62, 64, 65, 70, 72, 76, 82, 83], "applic": [2, 28, 30, 31, 51, 64, 65, 69, 70, 71, 72, 73, 81, 82], "machin": [2, 4, 5, 10, 15, 30, 31, 34, 51, 64, 65, 70, 71, 72, 73, 82, 83, 84], "icml": [2, 4, 30, 31, 34, 67, 70, 72, 73, 82, 83], "fused_gromov_wasserstein2": [2, 70], "differenti": [2, 8, 9, 70, 82, 83, 84], "wrt": [2, 4, 63, 70, 80], "maric": [2, 70], "quadrat": [2, 11, 36, 60, 66, 70, 72, 73, 74, 78, 79, 80, 82, 84], "38": [2, 4, 7, 34, 35, 51, 70, 82, 83], "fuse": [2, 35, 62, 70, 82, 83, 84], "vincent": [2, 4, 34, 62, 70, 82, 83], "cuaz": [2, 4, 34, 62, 70, 82, 83], "corn": [2, 4, 34, 70, 82, 83], "2021": [2, 4, 18, 34, 59, 63, 67, 70, 71, 75, 79, 82, 83, 84], "gromov_barycent": [2, 33, 70, 83, 84], "lambda": [2, 30, 70, 73, 75, 83], "max_it": [2, 20, 23, 26, 27, 32, 33, 65, 70, 77, 84], "tol": [2, 23, 33, 65, 70, 73, 77], "09": [2, 13, 42, 45, 46, 51, 64, 65, 70, 72, 77, 78], "init_c": [2, 70], "random_st": [2, 4, 33, 34, 66, 70], "leq": [2, 70, 72, 73, 83], "descent": [2, 4, 8, 9, 65, 67, 70, 72, 82, 83], "lambda_": [2, 70, 83], "gw": [2, 70, 73, 82, 84], "updat": [2, 64, 65, 70, 71, 75, 78, 80, 84], "accord": [2, 70, 80], "kernel": [2, 26, 65, 70, 73, 80, 82, 83], "calcul": [2, 17, 63, 64, 70], "random": [2, 4, 5, 7, 8, 10, 16, 17, 21, 23, 25, 27, 30, 31, 32, 33, 34, 37, 39, 42, 50, 54, 58, 59, 60, 63, 66, 70, 76, 78, 80, 84], "randomst": [2, 4, 8, 21, 25, 27, 33, 42, 66, 70, 76, 78, 80], "seed": [2, 5, 7, 23, 30, 31, 33, 34, 37, 39, 59, 60, 63, 66, 70, 76, 78, 80], "permut": [2, 4, 5, 9, 70], "arbitrarili": [2, 70], "dure": [2, 70], "12": [2, 3, 7, 11, 13, 15, 16, 19, 20, 27, 32, 34, 37, 51, 52, 70, 73, 82, 83], "gabriel": [2, 10, 62, 64, 70, 73, 82, 83], "marco": [2, 10, 62, 64, 70, 71, 73, 82, 83], "justin": [2, 70, 73, 82, 83], "solomon": [2, 64, 70, 73, 82, 83], "averag": [2, 63, 65, 67, 70, 73, 82, 83], "gromov_wasserstein": [2, 4, 31, 32, 70, 83], "kl_loss": [2, 70], "minim": [2, 4, 5, 6, 8, 9, 30, 34, 70, 72, 77, 79, 80, 83, 84], "13": [2, 13, 15, 20, 27, 31, 37, 44, 49, 51, 70, 73, 82, 83, 84], "m\u00e9moli": [2, 70, 82, 83], "facundo": [2, 70, 82, 83], "approach": [2, 13, 20, 22, 24, 28, 64, 70, 71, 82, 83], "object": [2, 3, 4, 5, 6, 7, 10, 13, 25, 33, 45, 46, 49, 50, 64, 65, 70, 71, 77, 80, 82, 83], "foundat": [2, 70, 73, 82, 83, 84], "11": [2, 12, 13, 20, 27, 34, 37, 51, 57, 59, 67, 70, 81, 82, 83], "417": [2, 70, 82, 83, 84], "487": [2, 70, 82, 83], "gromov_wasserstein2": [2, 4, 70, 83, 84], "discrep": [2, 54, 70, 73, 76, 84], "gw_dist": [2, 32, 70], "marix": [2, 70], "max_sliced_wasserstein_dist": [2, 76], "x_": [2, 64, 65, 71, 76], "x_t": [2, 64, 65, 76, 80], "n_project": [2, 5, 6, 53, 54, 76], "50": [2, 3, 5, 6, 7, 8, 10, 11, 13, 17, 18, 23, 34, 38, 45, 46, 47, 51, 53, 54, 59, 64, 73, 76, 84], "mont": [2, 76], "carlo": [2, 76], "approxim": [2, 10, 13, 26, 64, 65, 70, 72, 76, 82, 83], "slice": [2, 11, 55, 62, 66, 82, 83, 84], "mathcal": [2, 65, 66, 69, 70, 76, 80, 83], "swd": [2, 53, 76], "_p": [2, 76, 83], "nu": [2, 5, 6, 9, 31, 67, 76], "underset": [2, 76], "_in": [2, 76], "theta_": [2, 76], "stand": [2, 76], "pushforwar": [2, 76], "ni": [2, 76], "mapsto": [2, 70, 76], "rangl": [2, 64, 76], "n_samples_a": [2, 64, 76], "n_samples_b": [2, 64, 76], "sliced_wasserstein_dist": [2, 5, 53, 76, 84], "20": [2, 3, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 20, 26, 27, 30, 31, 32, 37, 41, 44, 45, 46, 48, 49, 50, 51, 54, 56, 57, 58, 64, 70, 71, 76, 82, 83, 84], "normal": [2, 6, 12, 13, 15, 16, 30, 49, 57, 63, 65, 67, 76, 80, 84], "35": [2, 7, 23, 37, 51, 76, 82, 83, 84], "deshpand": [2, 76, 82, 83], "hu": [2, 76, 82, 83], "sun": [2, 76, 82, 83], "pyrro": [2, 76, 82, 83], "siddiqui": [2, 76, 82, 83], "koyejo": [2, 76, 82, 83], "schwing": [2, 76, 82, 83], "gan": [2, 11, 36, 76, 82, 83, 84], "proceed": [2, 15, 64, 76, 77, 82, 83], "ieee": [2, 51, 65, 72, 76, 82, 83], "cvf": [2, 76, 82, 83], "vision": [2, 5, 53, 76, 82, 83], "pattern": [2, 51, 65, 72, 76, 82, 83], "recognit": [2, 76, 82, 83], "10648": [2, 76, 82, 83], "10656": [2, 76, 82, 83], "semidiscrete_wasserstein2_unif_circl": [2, 50, 84], "mu_n": [2, 6, 10, 76], "alpha_i": [2, 71, 76], "x_i": [2, 6, 31, 76, 83], "left": [2, 8, 15, 20, 24, 63, 64, 65, 69, 70, 74, 76, 77, 78, 81], "alpha_k": 2, "unif": [2, 4, 6, 8, 16, 17, 18, 31, 32, 33, 34, 38, 39, 42, 48, 50, 58, 76, 78, 80], "delta_": [2, 6, 31, 71, 76, 77, 83], "02111111": 2, "46": [2, 51, 54, 76, 82, 84], "bonet": [2, 6, 50, 54, 62, 76, 82], "berg": [2, 54, 76, 82], "septier": [2, 54, 76, 82], "drumetz": [2, 54, 76, 82], "pham": [2, 54, 76, 82], "2023": [2, 54, 76, 82], "spheric": [2, 11, 36, 55, 62, 76, 82, 84], "omega": [2, 60, 64, 72, 73, 77, 78, 79, 83], "dim_a": [2, 64, 73, 75, 79], "dim_b": [2, 64, 73, 75, 79], "By": [2, 64, 67, 75, 83], "too": [2, 64, 67, 83], "enough": [2, 30, 64, 67, 83], "sharper": [2, 64, 83], "numer": [2, 17, 44, 57, 63, 64, 65, 67, 73, 80, 82, 83, 84], "last": [2, 44, 64, 75, 83, 84], "veri": [2, 28, 44, 64, 70, 80, 82, 83], "slow": [2, 64, 67, 83, 84], "even": [2, 12, 13, 57, 58, 64, 83, 84], "finit": [2, 63, 64, 83], "sinkhorn_epsilon_sc": [2, 64, 65, 83], "reli": [2, 64, 70, 82, 83], "warm": [2, 64, 83], "sometim": [2, 64, 83], "better": [2, 10, 41, 64, 77, 83, 84], "greedi": [2, 64, 82, 83, 84], "greenkhorn": [2, 62, 64, 83, 84], "speedup": [2, 64, 83, 84], "screen": [2, 36, 43, 64, 66, 74, 82, 83], "screenkhorn": [2, 36, 43, 62, 66, 74, 83, 84], "aim": [2, 6, 10, 60, 64, 65, 83], "those": [2, 14, 44, 64, 65, 70, 71, 79, 83], "36552929": [2, 64, 83], "13447071": [2, 64, 83], "lightspe": [2, 64, 65, 77, 79, 82, 83], "neural": [2, 10, 26, 27, 41, 42, 64, 65, 77, 78, 79, 82, 83, 84], "nip": [2, 26, 27, 64, 65, 77, 79, 82, 83], "26": [2, 37, 41, 51, 64, 65, 77, 79, 82, 83, 84], "2013": [2, 64, 65, 77, 79, 82, 83], "9": [2, 4, 6, 10, 13, 18, 20, 23, 26, 27, 30, 32, 33, 34, 37, 39, 40, 42, 45, 51, 58, 64, 65, 75, 77, 78, 79, 82, 83], "stabil": [2, 64, 71, 79, 82, 83, 84], "preprint": [2, 18, 51, 57, 64, 65, 67, 71, 72, 79, 82, 83], "1610": [2, 64, 79, 82, 83], "06519": [2, 64, 79, 82, 83], "34": [2, 7, 17, 37, 51, 64, 82, 83], "feydi": [2, 64, 82, 83], "s\u00e9journ\u00e9": [2, 64, 82, 83], "amari": [2, 64, 82, 83], "trouv\u00e9": [2, 64, 82, 83], "mmd": [2, 64, 82, 83], "diverg": [2, 10, 49, 60, 63, 64, 79, 82, 83, 84], "2681": [2, 64, 82, 83], "2690": [2, 64, 82, 83], "unregular": [2, 64, 65, 72, 75, 77, 79], "sinkhorn_knopp": [2, 64, 79, 83], "classic": [2, 64, 65, 79, 83, 84], "epslilon": [2, 64, 79], "sinkhorn2": [2, 49, 64, 82, 84], "26894142136999516": [2, 64], "21": [2, 7, 21, 29, 37, 51, 64, 82, 83], "altschul": [2, 64, 82, 83], "Near": [2, 64, 82, 83], "linear": [2, 3, 7, 10, 26, 27, 29, 35, 36, 59, 62, 63, 64, 65, 67, 69, 70, 71, 72, 75, 79, 80, 82, 83, 84], "31": [2, 3, 5, 7, 17, 27, 29, 37, 44, 51, 53, 64, 69, 76, 82, 83, 84], "sinkhorn_lpl1_mm": [2, 65, 83], "labels_a": [2, 65], "eta": [2, 9, 26, 27, 65], "numinneritermax": [2, 17, 64, 65, 72], "200": [2, 3, 6, 7, 10, 16, 17, 45, 50, 51, 65, 70, 72, 73, 84], "stopinnerthr": [2, 65], "nonconvex": [2, 65], "group": [2, 20, 22, 65, 82, 84], "lasso": [2, 20, 22, 65, 75, 82, 84], "omega_": [2, 65, 83], "omega_g": [2, 65], "_c": [2, 65], "_1": [2, 64, 65, 73, 83], "index": [2, 4, 65, 75, 78, 82], "class": [2, 4, 7, 10, 23, 28, 62, 64, 66, 67, 84], "label": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 20, 22, 23, 24, 26, 28, 30, 32, 34, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 64, 65, 66, 67, 80, 83, 84], "inner": [2, 64, 65], "tuia": [2, 51, 64, 65, 72, 82, 83], "rakotomamonji": [2, 37, 41, 51, 62, 64, 65, 67, 72, 82, 83], "99": [2, 4, 51, 65, 72, 82, 83, 84], "1510": [2, 51, 65, 72, 82, 83], "06567": [2, 51, 65, 72, 82, 83], "kl": [2, 46, 56, 63, 64, 70, 77, 79, 82, 83], "kullback": [2, 56, 60, 63, 70, 77, 79, 83], "leibler": [2, 56, 60, 63, 70, 77, 79, 83], "25": [2, 6, 7, 10, 13, 30, 31, 37, 50, 51, 53, 54, 73, 75, 79, 82, 83, 84], "unnorm": [2, 73, 79], "One": [2, 65, 79, 82, 83, 84], "mani": [2, 79], "sinkhorn_reg_sc": [2, 79], "ot_dist": [2, 79], "51122823": [2, 79], "18807035": [2, 79], "frogner": [2, 79, 82, 83], "zhang": [2, 79, 82, 83], "mobahi": [2, 79, 82, 83], "h": [2, 8, 15, 30, 59, 64, 65, 66, 67, 70, 75, 79, 80, 82, 83], "araya": [2, 79, 82, 83], "polo": [2, 79, 82, 83], "poggio": [2, 79, 82, 83], "sinkhorn_knopp_unbalanc": [2, 79, 83], "sinkhorn_stabilized_unbalanc": [2, 79, 83], "sinkhorn_reg_scaling_unbalanc": [2, 79], "sinkhorn_unbalanced2": [2, 79, 83], "31912866": [2, 79], "sim": [2, 65, 76], "pushforward": [2, 76], "et": [2, 5, 53, 59, 64, 71, 76, 82, 83], "al": [2, 5, 53, 59, 64, 71, 76, 82, 83], "radon": [2, 5, 53, 76, 82, 83], "imag": [2, 5, 13, 14, 29, 33, 36, 44, 51, 53, 64, 65, 72, 76, 80, 82, 83, 84], "51": [2, 5, 51, 53, 76, 82, 83], "22": [2, 5, 13, 37, 51, 53, 64, 76, 82, 83, 84], "45": [2, 5, 18, 51, 53, 76, 82, 83, 84], "sliced_wasserstein_spher": [2, 54, 76, 84], "ssw_p": [2, 76], "int_": [2, 76], "sigma": [2, 10, 23, 25, 26, 27, 30, 65, 66, 76, 80], "foral": [2, 64, 70, 76, 80], "tx": [2, 14, 76], "_2": [2, 64, 69, 70, 75, 76, 80], "sqrt": [2, 6, 34, 37, 54, 63, 69, 73, 76], "keepdim": [2, 37, 54, 63, 76], "sliced_wasserstein_sphere_unif": [2, 6, 76, 84], "ssw_2": [2, 6, 76], "42": [2, 3, 4, 5, 7, 18, 21, 25, 27, 34, 39, 51, 71, 76, 82, 84], "randn": [2, 3, 5, 7, 8, 10, 17, 25, 31, 32, 37, 42, 54, 58, 63, 76, 78], "500": [2, 5, 6, 7, 8, 10, 21, 27, 50, 53, 54, 63, 70, 76, 77], "ssw": [2, 6, 76], "allclos": [2, 63, 76], "01734": [2, 76], "atol": [2, 63, 76], "reg_typ": [2, 46, 65, 77, 83], "unbalanced_typ": 2, "n_thread": 2, "plan_init": 2, "potentials_init": 2, "discret": [2, 21, 26, 27, 34, 51, 64, 65, 71, 72, 78, 82, 83, 84], "otresult": [2, 80], "t_": 2, "m_": [2, 31, 75, 83], "lambda_r": 2, "lambda_u": 2, "penal": [2, 36, 61, 66, 75, 79, 82], "exact": [2, 19, 36, 43, 51, 61, 64, 66, 71, 73, 74, 79, 80, 82, 83, 84], "array_lik": [2, 80], "l2": [2, 12, 13, 36, 46, 57, 61, 66, 70, 75, 77, 79, 82, 83, 84], "balanc": [2, 80, 83], "unction": 2, "tv": [2, 49], "omp": 2, "_type_": 2, "toler": [2, 33, 63, 73, 77], "re": [2, 53, 54, 58, 59, 63, 71], "obtain": [2, 50, 65, 75, 83], "value_linear": [2, 80], "paper": [2, 13, 64, 82, 83, 84], "formul": [2, 73, 77, 82, 83], "17": [2, 20, 27, 37, 51, 77, 82, 83], "blondel": [2, 42, 62, 77, 78, 82, 83, 84], "segui": [2, 16, 42, 77, 78, 82, 83], "rolet": [2, 42, 62, 77, 78, 82, 83], "twenti": [2, 64, 77, 82, 83], "aistat": [2, 64, 65, 77, 82, 83], "tic": [2, 13, 31, 80, 84], "matlab": [2, 62, 80], "toc": [2, 13, 31, 80, 84], "elaps": [2, 13, 31, 80], "toq": [2, 80], "julia": [2, 80], "type_a": [2, 63, 76, 80], "length": [2, 63, 75, 78, 80], "bin": [2, 9, 12, 13, 15, 41, 45, 46, 49, 51, 56, 57, 66, 80, 83], "pytorch": [2, 11, 36, 62, 63, 66, 74, 78, 80, 82, 83, 84], "jax": [2, 63, 80, 82, 83, 84], "wasserstein_1d": [2, 9, 50, 83, 84], "dimension": [2, 32, 58, 64, 71, 82, 84], "15": [2, 10, 15, 16, 20, 24, 27, 30, 31, 37, 51, 58, 65, 79, 82, 83, 84], "batch": [2, 9, 10, 64, 65, 70, 78], "formal": [2, 64, 71], "so": [2, 4, 10, 60, 80, 83, 84], "quantil": [2, 73], "integr": 2, "them": [2, 65, 73, 84], "whenev": 2, "over": [2, 10, 34, 63, 64, 70, 71, 73], "second": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 63, 70, 72, 77, 80, 82, 83, 84], "chap": 2, "atom": [2, 64, 70, 71], "been": [2, 10, 62, 73, 80, 82, 83, 84], "wasserstein_circl": [2, 50, 84], "ot_": [2, 83], "cdf_u": 2, "cdf_v": 2, "w_1": [2, 71, 83], "levm": 2, "hundries": [2, 82], "shayan": [2, 82], "marcel": [2, 82], "klatt": [2, 82], "axel": [2, 82], "munk": [2, 82], "circular": [2, 30, 82], "direct": [2, 34, 49, 72, 77, 82, 84], "innov": [2, 82], "bicentenni": [2, 82], "tribut": [2, 82], "florenc": [2, 82], "nightingal": [2, 82], "singapor": [2, 82], "springer": [2, 82], "natur": [2, 63, 82], "2022": [2, 82], "57": [2, 51, 79, 82, 84], "82": [2, 44, 51, 82, 84], "weak_optimal_transport": [2, 38, 81], "weak": [2, 36, 43, 62, 66, 74, 82, 83, 84], "_j": [2, 67, 71, 77, 78, 81], "guess": [2, 72, 81], "indep": [2, 72, 81], "joint": [2, 34, 64, 65, 72, 81, 82, 83, 84], "densiti": [2, 72, 81], "numitermaxemd": [2, 72, 81], "stopthr2": [2, 72, 81], "absolut": [2, 20, 31, 32, 51, 63, 70, 72, 81], "gozlan": [2, 18, 71, 81, 82, 83], "roberto": [2, 81, 82, 83], "samson": [2, 81, 82, 83], "tetali": [2, 81, 82, 83], "kantorovich": [2, 81, 82, 83], "dualiti": [2, 13, 81, 82, 83], "273": [2, 81, 82, 83], "3327": [2, 81, 82, 83], "3405": [2, 81, 82, 83], "here": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 72, 82, 83, 84], "download": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60], "author": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 82], "remi": [3, 4, 5, 7, 8, 9, 10, 12, 13, 16, 20, 21, 22, 23, 25, 26, 27, 28, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49], "polytechniqu": [3, 4, 5, 7, 8, 9, 10, 16, 18, 38, 39, 40], "edu": [3, 4, 5, 7, 8, 9, 10, 16, 18, 38, 39, 40, 83], "licens": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60], "mit": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 82], "sphinx_gallery_thumbnail_numb": [3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 18, 21, 22, 25, 26, 27, 28, 31, 34, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59], "pyplot": [3, 6, 7, 10, 12, 14, 15, 17, 18, 21, 25, 27, 30, 31, 33, 40], "pl": [3, 4, 5, 6, 7, 8, 9, 10, 13, 16, 18, 20, 22, 23, 24, 26, 28, 31, 32, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60], "manual_se": [3, 5, 6, 7, 10], "n_source_sampl": [3, 7, 20, 24, 26, 65], "n_target_sampl": [3, 7, 20, 24, 26, 65], "noise_level": [3, 7, 26], "make_data_classif": [3, 20, 22, 23, 24, 26, 28], "gaussrot": [3, 26], "nz": [3, 23, 26, 37, 66], "xt": [3, 7, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 37, 38, 39, 47, 48, 50, 53, 54, 58, 59, 60, 64, 65, 69, 74, 75, 78, 83], "yt": [3, 20, 22, 23, 24, 26, 28, 31, 37, 65], "mode": [3, 7, 26, 65], "varianc": [3, 7, 26, 32], "map": [3, 7, 29, 36, 42, 60, 62, 65, 66, 69, 71, 72, 78, 80, 82, 84], "clf": [3, 4, 5, 6, 7, 10, 13, 23, 25, 26, 31, 33, 34, 40, 44, 48, 49, 57, 59], "scatter": [3, 4, 5, 6, 7, 8, 10, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 37, 44, 50, 54, 58, 59, 60], "marker": [3, 7, 16, 18, 20, 22, 23, 24, 26, 28, 34, 37], "o": [3, 7, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 40, 44, 70, 82, 83, 84], "legend": [3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 20, 22, 23, 24, 26, 28, 34, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 59], "loc": [3, 7, 16, 20, 22, 24, 26, 28, 37, 38, 39, 47, 48, 53, 54, 56, 59], "requires_grad": [3, 8], "adam": [3, 7, 70], "lr": [3, 4, 5, 6, 7, 8, 9, 10, 42, 78], "n_iter": [3, 6, 7, 10], "rang": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 23, 30, 33, 34, 40, 44, 49, 50, 53, 54, 57, 59, 60], "nois": [3, 7, 10, 30, 58, 66], "minu": [3, 7], "becaus": [3, 7, 71, 83, 84], "maxim": [3, 7, 78, 79, 84], "te": [3, 7], "loss_dual_entrop": [3, 7], "append": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 30, 33, 34, 57, 58, 80], "detach": [3, 4, 5, 6, 7, 8, 9, 10], "3d": [3, 6, 7, 10, 12, 13, 18, 54, 57], "backward": [3, 4, 5, 7, 8, 9, 10], "zero_grad": [3, 7], "grid": [3, 6, 7, 8, 10, 54], "neg": [3, 7, 59, 63, 64, 70, 71, 75, 77, 79, 82], "xlabel": [3, 6, 7, 8, 10, 21, 27, 31, 34, 44, 49, 50, 53, 54], "ge": [3, 47, 51], "plan_dual_entrop": [3, 7], "20204949002247483": 3, "19": [3, 7, 20, 27, 37, 42, 43, 51, 78, 82, 83, 84], "45955554544117": 3, "890215336913624": 3, "36": [3, 5, 7, 51, 75, 79, 82, 83], "8865047869549": 3, "30870975534675": 3, "41": [3, 9, 44, 51, 75, 79, 82, 84], "870733162198604": 3, "60": [3, 5, 7, 9, 10, 12, 13, 15, 34, 41, 45, 46, 51, 56, 57], "7218713247401": 3, "43": [3, 11, 40, 51, 64, 65, 69, 71, 82, 83, 84], "08453488167218": 3, "80": [3, 7, 10, 13, 16, 34, 45, 46, 51, 84], "221404966072036": 3, "90": [3, 7, 10, 18, 44, 45, 46, 49, 51, 84], "266515617685634": 3, "28621455310599": 3, "110": [3, 7, 10, 45, 51], "29358397854266": 3, "120": [3, 7, 10, 45, 51, 54], "29869040482695": 3, "130": [3, 7, 10, 45, 51, 84], "30209164957022": 3, "140": [3, 7, 10, 45, 51, 84], "30483977950487": 3, "150": [3, 6, 7, 10, 18, 20, 22, 24, 28, 40, 45, 50, 51, 84], "30736028620837": 3, "160": [3, 7, 10, 45, 51, 84], "309779782651916": 3, "170": [3, 7, 10, 45, 51, 84], "31216429346024": 3, "180": [3, 7, 10, 45, 51], "31453627608719": 3, "190": [3, 7, 10, 45, 51], "31689341569978": 3, "plot2d_samples_mat": [3, 22, 38, 39, 47, 48], "zorder": [3, 4, 7, 34, 40], "01": [3, 11, 12, 19, 20, 24, 29, 31, 32, 35, 37, 42, 43, 45, 46, 49, 51, 52, 55, 57, 58, 61, 64, 73, 75, 78], "loss_dual_quadrat": 3, "gq": 3, "plan_dual_quadrat": 3, "0018442196020623663": 3, "420223689317986": 3, "934708787574507": 3, "815043313044754": 3, "90315766779323": 3, "558384761369915": 3, "45786853560126": 3, "87320703174317": 3, "0463024485808": 3, "10722380985298": 3, "126936098280524": 3, "1363750929115": 3, "14122420581448": 3, "14396363589485": 3, "14627007039893": 3, "14839571758994": 3, "15053213721133": 3, "1527144492613": 3, "15495742929575": 3, "157264601838875": 3, "total": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 83], "minut": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60], "039": [3, 11], "plot_dual_ot_pytorch": [3, 11], "jupyt": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 84], "notebook": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 83, 84], "ipynb": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60], "part": [4, 84], "node": [4, 30], "model": [4, 5, 7, 64, 82, 83], "actual": [4, 83], "recov": [4, 10, 78, 83], "proport": [4, 34, 44, 64, 65, 66, 74], "sbm": [4, 34], "accur": 4, "simultan": 4, "sructur": 4, "properti": [4, 10, 80, 83], "sklearn": [4, 33, 34, 80, 84], "manifold": [4, 33, 34, 67, 83], "md": [4, 34, 84], "pylab": [4, 5, 8, 9, 13, 16, 18, 20, 22, 23, 24, 26, 28, 32, 34, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60], "torch": [4, 5, 6, 8, 9, 10, 63, 83, 84], "rng": [4, 8, 21, 25, 27, 33, 42, 78], "def": [4, 5, 6, 7, 8, 10, 18, 21, 23, 25, 27, 30, 32, 33, 34, 50, 51, 59, 63, 80], "get_sbm": 4, "nc": [4, 34], "ratio": 4, "nbpc": 4, "round": [4, 34, 44, 73, 79], "astyp": [4, 5, 16, 17, 18, 21, 25, 27, 33, 34], "zero": [4, 5, 6, 8, 10, 12, 13, 17, 34, 44, 48, 49, 50, 57, 63, 70, 71, 80, 84], "rand": [4, 6, 10, 25, 37, 39, 58, 60, 63], "ey": [4, 34, 63], "05": [4, 7, 11, 13, 19, 26, 27, 37, 42, 45, 46, 51, 60, 63, 64, 65, 70, 75, 78], "ones": [4, 10, 16, 17, 30, 31, 34, 44, 47, 53, 54, 59, 60, 63, 65], "2d": [4, 18, 19, 20, 22, 23, 24, 28, 34, 36, 38, 39, 44, 48, 52, 55, 59, 61, 64, 66, 71, 73, 74, 79, 80, 83, 84], "dissimilar": [4, 33, 34], "precomput": [4, 33, 34, 83], "fit_transform": [4, 33, 34, 65], "plot_graph": [4, 34], "color": [4, 6, 7, 8, 9, 12, 15, 17, 29, 30, 32, 33, 34, 36, 40, 44, 47, 50, 54, 58, 59, 60, 65, 74, 80, 83, 84], "c0": [4, 7, 34, 59, 60], "edgecolor": [4, 17, 34], "cmap": [4, 7, 12, 14, 15, 23, 30, 31, 32, 34, 44, 57, 58, 60], "tab10": [4, 34], "vmax": [4, 23, 30, 34, 44], "subplot": [4, 6, 7, 10, 12, 13, 14, 15, 17, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 34, 37, 38, 39, 44, 48, 49, 51, 57, 58, 59, 60, 74], "axi": [4, 5, 6, 7, 14, 15, 17, 18, 21, 23, 25, 27, 34, 40, 48, 50, 51, 53, 54, 58, 60, 63, 67, 77, 80], "imshow": [4, 14, 15, 20, 21, 22, 24, 25, 27, 28, 31, 32, 34, 38, 44, 47, 48, 51, 58, 60], "nearest": [4, 20, 22, 24, 28, 31, 34, 38, 47, 48, 65], "adjac": 4, "home": [4, 6, 7, 9, 12, 17, 20, 22, 23, 24, 28, 32, 33, 34, 41, 44, 50, 51, 57, 58], "circleci": [4, 6, 7, 9, 12, 17, 20, 22, 23, 24, 28, 32, 33, 34, 41, 44, 50, 51, 57, 58, 84], "lib": [4, 33, 34, 63], "python3": [4, 33, 34], "site": [4, 33, 34], "packag": [4, 33, 34, 64, 80, 83], "_md": [4, 33, 34], "299": [4, 33, 34], "futurewarn": [4, 33, 34], "normalized_stress": [4, 33, 34], "auto": [4, 31, 33, 34, 58], "To": [4, 10, 33, 34, 63, 64, 73, 80, 82, 83], "suppress": [4, 33, 34], "manual": [4, 33, 34], "plot_optim_gromov_pytorch": [4, 11], "81": [4, 51], "userwarn": [4, 7, 9, 17, 20, 22, 23, 24, 28, 32, 34, 41, 44, 51, 57], "colormap": [4, 12, 34, 57], "ignor": [4, 34], "adajac": 4, "diagon": [4, 28, 30, 63, 69], "want": [4, 10, 17, 20, 22, 23, 24, 28, 32, 44, 51, 83, 84], "min_weight_gw": 4, "a2": [4, 12, 13, 15, 17, 57], "nb_iter_max": [4, 5, 9], "min_a": [4, 83], "our": [4, 5, 9, 82, 83, 84], "c1_torch": 4, "c2_torch": 4, "a0": 4, "random_init": 4, "a1_torch": 4, "requires_grad_": [4, 5, 6, 9], "a2_torch": 4, "loss_it": [4, 5, 9], "03d": 4, "no_grad": [4, 5, 8, 9], "grad": [4, 5, 6, 8, 9, 37, 63, 70, 77, 78], "zero_": [4, 5, 8, 9], "proj_simplex": [4, 8, 9], "a1": [4, 12, 13, 15, 17, 57], "a0_est": 4, "loss_iter0": 4, "3028101": 4, "20249103": 4, "49469887": 4, "clear": 4, "noe": 4, "most": [4, 64, 80, 83, 84], "previous": 4, "t_unif": 4, "label_unif": 4, "argmax": [4, 34, 63], "t_est": 4, "label_est": 4, "est": 4, "7760154087783518": 4, "5785554952306606": 4, "7708789474385981": 4, "6510858680020267": 4, "now": [4, 6, 44, 63, 83, 84], "seen": [4, 64, 71, 83], "probabl": [4, 9, 18, 34, 70, 71, 82], "graph_compession_gw": 4, "nb_node": 4, "clamp": 4, "a0_est2": 4, "c0_est2": 4, "loss_iter2": 4, "5e": [4, 15, 23, 32, 33, 59], "vmin": [4, 30, 44], "colorbar": [4, 34, 44], "29162953": 4, "1935312": 4, "51483927": 4, "0x7f677f2a6be0": 4, "536": [4, 11], "exempl": [5, 34, 84], "wassersein": [5, 49, 84], "popos": 5, "liutku": [5, 82, 83], "simsekli": [5, 82, 83], "majewski": [5, 82, 83], "durmu": [5, 82, 83], "st\u00f6ter": [5, 82, 83], "nonparametr": [5, 82, 83], "diffus": [5, 82, 83], "4104": [5, 82, 83], "4113": [5, 82, 83], "load": [5, 21, 27, 44], "i1": [5, 16, 18, 21, 25, 27], "imread": [5, 14, 15, 16, 18, 21, 25, 27, 33], "redcross": [5, 14, 16, 18], "png": [5, 14, 15, 16, 18, 33, 40], "i2": [5, 16, 18, 21, 25, 27], "tooth": [5, 14, 18], "sz": [5, 16, 18], "xx": [5, 7, 16], "yy": [5, 7, 16], "meshgrid": [5, 6, 7, 16, 18, 63], "arang": [5, 9, 12, 13, 15, 16, 18, 31, 37, 41, 45, 46, 48, 49, 51, 56, 57, 63, 64], "stack": [5, 16, 18, 34, 63], "32": [5, 7, 16, 37, 51, 67, 70, 82, 83], "x3": [5, 16, 17], "collect": [5, 12, 13, 33, 50, 57, 64], "pathcollect": [5, 33, 50], "0x7f686fc99490": 5, "devic": [5, 9, 63, 83, 84], "is_avail": [5, 9], "x1_torch": 5, "x2_torch": 5, "1e3": 5, "x_all": 5, "gen": 5, "5e1": 5, "ax": [5, 6, 12, 14, 15, 17, 18, 44, 54, 57, 58, 63, 72, 83], "_update_plot": [5, 6, 10, 18, 59], "funcanim": [5, 6, 10, 18, 59], "gcf": [5, 6, 10, 12, 57, 59], "interv": [5, 6, 10, 18, 59, 63], "repeat_delai": [5, 6, 10, 18, 59], "2000": [5, 6, 9, 10, 18, 59], "onc": [5, 6, 10, 18, 59], "loop": [5, 6, 10, 18, 44, 59, 65], "reflect": [5, 6, 10, 18, 59], "x3_torch": 5, "xbinit": 5, "16": [5, 7, 9, 17, 20, 27, 34, 37, 51, 63, 67, 75, 82, 83], "xbary_torch": 5, "28": [5, 11, 37, 51, 73, 75, 82, 83, 84], "545": [5, 11], "plot_sliced_wass_grad_flow_pytorch": [5, 11], "transform": [6, 20, 21, 22, 24, 26, 28, 65, 78, 80, 83], "cl\u00e9ment": [6, 50, 54, 62], "clement": [6, 50, 54], "univ": [6, 23, 24, 50, 54, 59, 60], "ub": [6, 50, 54, 59, 60], "fr": [6, 9, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 45, 46, 47, 48, 49, 50, 54, 56, 57, 58, 59, 60], "nn": [6, 7, 10, 84], "plot_spher": 6, "xlist": 6, "linspac": [6, 7, 12, 17, 30, 49, 50, 57, 63], "ylist": 6, "z": [6, 12, 34, 41, 54, 57, 62, 64, 77, 80, 82, 83], "plot_wirefram": [6, 54], "grai": [6, 54], "bottom": [6, 15, 44], "half": 6, "set_titl": [6, 12, 15, 17], "plot_ssw_unif_torch": [6, 11], "53": [6, 51], "runtimewarn": [6, 17, 50, 57], "invalid": [6, 50, 57], "encount": [6, 17, 50, 57], "0x7f6884189c40": 6, "xvisu": [6, 10], "sw": 6, "grad_x": 6, "semilogi": [6, 8, 10], "15356478095054626": 6, "009537623263895512": 6, "002778745023533702": 6, "300": [6, 7, 34], "0024926266632974148": 6, "400": [6, 7, 84], "002394128357991576": 6, "23": [6, 7, 8, 10, 37, 49, 51, 64, 82, 83, 84], "52222222222222": [6, 7, 8, 10], "ivisu": [6, 10], "75": [6, 10, 51, 84], "350": [6, 7, 84], "499": 6, "fig": [6, 14, 15, 17, 18, 32, 33, 48, 54, 58], "add_subplot": [6, 12, 18, 32, 57, 58], "set_xlim": [6, 17, 54], "set_ylim": [6, 17, 54], "52": [6, 11, 51, 84], "511": [6, 11], "nvisu": [7, 51], "ax_bound": 7, "mlp": [7, 10], "__init__": [7, 10, 65, 80], "self": [7, 10, 65, 80], "super": [7, 10], "fc1": [7, 10], "fc2": [7, 10], "relu": [7, 10], "heavisid": [7, 10], "fn": [7, 10], "forward": [7, 10, 83], "ravel": [7, 30, 59, 60, 77], "doubl": [7, 44], "005": [7, 60], "n_batch": 7, "iperm": 7, "randint": [7, 21, 27, 30], "ipermt": 7, "xsi": 7, "xti": 7, "2393484646308117": 7, "642282658482282": 7, "17414737436737": 7, "163954594319062": 7, "568419626220432": 7, "301421042321348": 7, "27": [7, 34, 37, 51, 64, 65, 82, 84], "83083778430649": 7, "87651959359454": 7, "21879930758375": 7, "33": [7, 37, 41, 51, 53, 55, 64, 82, 83], "4451848716634": 7, "85373096612886": 7, "34720398072969": 7, "710736296778066": 7, "41460794588291": 7, "427335276898006": 7, "95647523380266": 7, "63352357746055": 7, "147411707619916": 7, "38045016076242": 7, "20851722920263": 7, "0483252573866": 7, "210": [7, 84], "920184012645834": 7, "220": [7, 84], "28786346616246": 7, "230": 7, "595481968365874": 7, "240": [7, 22, 29, 84], "74007551169939": 7, "250": 7, "87532094924726": 7, "260": [7, 84], "16038650643604": 7, "270": 7, "51952191315499": 7, "280": [7, 84], "21124977745394": 7, "290": [7, 41, 43, 84], "776473454024725": 7, "236113046850186": 7, "310": [7, 84], "17877897507476": 7, "320": [7, 13], "67523008941068": 7, "330": 7, "47856020676345": 7, "340": [7, 84], "20515530483855": 7, "31842178792488": 7, "360": [7, 84], "41746085650228": 7, "370": 7, "49945342906269": 7, "380": [7, 84], "101409600220826": 7, "390": 7, "95709453591492": 7, "351964349897315": 7, "410": [7, 84], "097523666610016": 7, "420": 7, "76370892349192": 7, "430": 7, "03460532012972": 7, "440": 7, "117010646149254": 7, "450": 7, "63143924731369": 7, "460": 7, "3493275492541": 7, "470": 7, "85056949023975": 7, "480": 7, "673259773400964": 7, "490": 7, "50129693277133": 7, "691373671209874": 7, "510": 7, "2506577228827": 7, "520": 7, "48779395563362": 7, "530": 7, "79890479507191": 7, "540": 7, "57060888796476": 7, "550": 7, "5638137066962": 7, "560": 7, "46562709782847": 7, "570": 7, "40687844211682": 7, "580": 7, "2092261947815": 7, "590": 7, "24178255185049": 7, "600": 7, "83767190886772": 7, "610": 7, "091495197788845": 7, "620": 7, "2269199634254": 7, "630": 7, "79958582295997": 7, "640": 7, "25712095782331": 7, "650": 7, "693215050027426": 7, "660": 7, "68384667580914": 7, "670": [7, 20, 29], "19213769075985": 7, "680": 7, "91790237056651": 7, "690": 7, "30587890071249": 7, "700": 7, "76524124674425": 7, "710": 7, "096652875261434": 7, "720": 7, "640525064634964": 7, "730": [7, 73, 82, 83], "63630669836857": 7, "740": 7, "22361859806151": 7, "750": 7, "922494326811055": 7, "760": 7, "97476232035201": 7, "770": 7, "234520256435054": 7, "780": 7, "16928305689463": 7, "790": 7, "25788596475691": 7, "800": [7, 9], "23397446378046": 7, "810": 7, "1721306311481": 7, "820": 7, "247867302837534": 7, "830": 7, "96014658076261": 7, "840": 7, "03767527010373": 7, "850": 7, "030040026953046": 7, "860": 7, "1448266201477": 7, "870": 7, "932275800816825": 7, "880": 7, "14373204690507": 7, "890": 7, "26008919084346": 7, "900": 7, "517689779489814": 7, "910": 7, "39905188612141": 7, "920": 7, "460772222267416": 7, "930": 7, "018913815021016": 7, "940": 7, "499518213813715": 7, "950": 7, "96986872327708": 7, "960": 7, "024141665861244": 7, "970": 7, "88576653718013": 7, "980": 7, "428442172282146": 7, "990": 7, "10248001587743": 7, "nv": [7, 59], "xl": 7, "yl": 7, "xg": [7, 10], "concaten": [7, 8, 17, 25, 37, 40, 50, 58, 60, 63, 75, 80], "wxg": 7, "exp": [7, 44, 50, 63, 67, 78, 83], "iv": [7, 50, 59], "gg": [7, 31], "wt": [7, 69, 78], "reshap": [7, 21, 25, 27, 30, 33, 37, 41, 45, 46, 49, 51, 56, 58, 59, 63, 64, 73, 75], "pcolormesh": 7, "green": [7, 9], "sourec": 7, "plot_stoch_continuous_ot_pytorch": [7, 11], "159": [7, 51], "handl": [7, 9, 83], "quadmesh": 7, "stabl": [7, 63, 83, 84], "legend_guid": 7, "custom": 7, "handler": 7, "173": [7, 51], "187": [7, 51], "064": [7, 11], "mix": [8, 9], "word": [8, 83], "suppos": [8, 64, 83], "s_k": 8, "w_k": [8, 83], "belong": [8, 32, 58, 75], "delta_k": 8, "observ": [8, 64, 66], "done": [8, 40, 44, 83, 84], "pot": [8, 9, 14, 20, 32, 33, 42, 43, 58, 60, 62, 63, 80, 84], "nt1": 8, "ns1": 8, "xs1": [8, 23], "xs2": [8, 23, 50], "correspond": [8, 9, 28, 44, 67, 70, 72, 75, 83, 84], "s_1": 8, "s_2": 8, "0x7f686fa77ac0": 8, "h2": [8, 70], "m2": [8, 48, 49], "2e": [8, 41, 46, 59], "rate": [8, 70, 78], "niter": 8, "get_loss": 8, "mv": 8, "squar": [8, 33, 44, 48, 49, 63, 65, 67, 70, 76, 77, 80, 82, 83, 84], "mixtur": 8, "09980706": 8, "90019294": 8, "dot": [8, 12, 13, 17, 23, 25, 32, 39, 44, 57, 58, 63, 80], "c3": [8, 40], "0x7f6879e14190": 8, "422": [8, 11, 84], "plot_unmix_optim_torch": [8, 11], "remain": 9, "framework": [9, 34, 84], "ncourti": [9, 14, 32, 33], "irisa": [9, 14, 30, 31, 32, 33, 47, 58], "mpl": 9, "make_1d_gauss": [9, 12, 13, 15, 41, 45, 46, 49, 51, 56, 57], "gauss": [9, 41, 45, 46, 49, 56, 65], "red": [9, 21, 27, 31, 44], "to_rgb": 9, "blue": [9, 14, 21, 27, 31, 44], "dtype": [9, 12, 13, 15, 41, 45, 46, 49, 51, 53, 54, 56, 57, 63, 64], "gaussian": [9, 10, 12, 25, 26, 27, 30, 41, 45, 46, 49, 51, 56, 57, 62, 63, 65, 66, 80, 83, 84], "mean": [9, 12, 13, 15, 41, 45, 46, 49, 50, 51, 53, 54, 56, 57, 63, 64, 66, 67, 69, 71, 83, 84], "std": [9, 12, 13, 15, 31, 41, 45, 46, 49, 50, 51, 53, 54, 56, 57, 63, 66, 70, 84], "enforc": [9, 83], "x_torch": 9, "a_torch": 9, "b_torch": 9, "figsiz": [9, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 27, 28, 30, 33, 37, 41, 42, 45, 46, 48, 51, 54, 56, 57], "onto": [9, 20, 22, 24, 65, 70, 77, 83], "curv": 9, "everi": [9, 34, 70, 82], "lw": [9, 15, 44], "evolut": [9, 34, 50, 64, 70, 82], "fontsiz": [9, 15, 30, 31, 34, 44, 54, 59], "solver_1d": [9, 50, 84], "than": [9, 44, 63, 70, 83, 84], "revers": [9, 63], "throw": [9, 84], "futur": [9, 64, 84], "releas": [9, 12, 57, 58, 64, 82, 83], "mt": [9, 69], "transpos": [9, 63, 84], "ndim": 9, "trigger": 9, "aten": 9, "src": 9, "nativ": 9, "tensorshap": 9, "cpp": 9, "3277": 9, "cw": 9, "contigu": 9, "tw": 9, "bary_torch": 9, "instant": 9, "036": [9, 11], "plot_wass1d_torch": [9, 11], "fit": [10, 25, 27, 28, 33, 64, 65, 71, 83], "g_": 10, "realist": 10, "drawn": [10, 66, 74], "indistinguish": 10, "mu_d": 10, "end": [10, 30, 34, 71, 75, 83], "arjovsky2017": 10, "access": [10, 82], "cannot": [10, 28, 65, 83, 84], "lare": 10, "network": [10, 82, 83, 84], "genevay2018": 10, "studi": 10, "fatras2019": 10, "arjovski": 10, "chintala": 10, "bottou": 10, "adversari": [10, 83], "214": 10, "223": 10, "genevai": [10, 42, 64, 78, 82, 83], "aud": [10, 64, 82], "fatra": [10, 42, 47, 62, 82], "zine": 10, "gribonv": 10, "2020": [10, 15, 64, 73, 82, 83, 84], "june": 10, "asymptot": 10, "23nd": 10, "108": [10, 51, 84], "n_dim": 10, "n_featur": [10, 65, 80], "get_data": 10, "n_sampl": [10, 17, 32, 33, 58, 65], "angl": [10, 25, 50], "cat": 10, "co": [10, 25, 37, 48, 50, 54, 80, 82], "sin": [10, 25, 30, 37, 48, 50, 54, 80], "0x7f677f9582b0": 10, "fc3": 10, "rmsprop": 10, "00019": 10, "size_batch": 10, "stati": 10, "n_visu": 10, "xnvisu": 10, "ab": [10, 31, 32, 49, 63, 77, 83], "xn": 10, "xd": 10, "smapl": 10, "compt": 10, "del": 10, "9009847640991211": 10, "09425365179777145": 10, "0440279059112072": 10, "033836282789707184": 10, "0556793175637722": 10, "04680415615439415": 10, "0441826693713665": 10, "03215612843632698": 10, "04039888083934784": 10, "021087544038891792": 10, "050437960773706436": 10, "03543882817029953": 10, "06760019809007645": 10, "048370376229286194": 10, "04501226916909218": 10, "07568738609552383": 10, "023603428155183792": 10, "023437529802322388": 10, "02721334807574749": 10, "1053805723786354": 10, "125": [10, 13, 40, 51], "175": [10, 51, 84], "199": [10, 51, 73, 84], "xtick": [10, 13, 20, 22, 24, 28, 31, 49, 59, 60], "ytick": [10, 13, 20, 22, 24, 28, 31, 60], "xlim": [10, 33, 44, 49, 50], "ylim": [10, 33, 49, 50], "0x7f6883d41880": 10, "594": [10, 11], "plot_wass2_gan_torch": [10, 11], "748": 11, "execut": [11, 19, 29, 35, 43, 52, 55, 61, 83, 84], "auto_examples_backend": 11, "file": [11, 19, 29, 35, 36, 40, 43, 52, 55, 61, 83, 84], "embed": [11, 33, 36, 70, 83], "sphere": [11, 36, 76], "mb": [11, 19, 29, 35, 43, 52, 55, 61], "flow": [11, 36, 66, 80, 82, 83, 84], "minibatch": [11, 36, 78, 83], "continu": [11, 34, 36, 64, 71, 78, 83], "00": [11, 19, 20, 23, 26, 27, 29, 31, 32, 35, 43, 51, 52, 55, 58, 61, 75], "08": [11, 13, 32, 42, 45, 46, 51, 63, 65, 74], "04": [11, 20, 26, 27, 31, 32, 35, 42, 45, 46, 51, 61, 78], "unmix": [11, 34, 36, 64, 70, 80, 82, 83, 84], "wassersyein": [12, 57], "unic": [12, 13, 20, 21, 22, 23, 25, 26, 27, 28, 37, 45, 46, 47, 48, 49, 71], "plt": [12, 14, 15, 17, 18, 21, 25, 27, 30, 33], "mpl_toolkit": [12, 13, 32, 57, 58], "mplot3d": [12, 13, 32, 57, 58], "axes3d": [12, 13, 32, 57, 58], "noqa": [12, 13, 32, 57, 58], "polycollect": [12, 13, 57], "vstack": [12, 13, 15, 31, 57], "n_distribut": [12, 13, 15, 57], "dist0": [12, 13, 15, 57], "l2bari": [12, 13, 57], "bary_l2": [12, 13, 57], "bary_wass": [12, 13, 57], "ax1": [12, 31, 32, 33, 58], "ax2": [12, 31, 32, 33, 58], "tight_layout": [12, 13, 14, 15, 17, 18, 20, 21, 22, 24, 26, 27, 28, 31, 34, 37, 44, 48, 49, 57], "num": [12, 15, 63], "black": [12, 34, 74], "n_alpha": 12, "alpha_list": 12, "b_l2": [12, 57], "b_wass": [12, 57], "cm": [12, 14, 30, 57], "get_cmap": [12, 57], "viridi": [12, 30, 57], "vert": [12, 57], "enumer": [12, 15, 30, 34, 49, 50, 53, 54, 57], "zip": [12, 15, 18, 34, 36, 57, 82], "poli": [12, 57], "facecolor": [12, 40, 57], "set_alpha": [12, 57], "add_collection3d": [12, 57], "zdir": [12, 57], "set_xlabel": [12, 54, 57], "set_xlim3d": [12, 57], "set_ylabel": [12, 15, 44, 54, 57], "set_ylim3d": [12, 57], "set_zlabel": [12, 54, 57], "set_zlim3d": [12, 57], "plot_barycenter_1d": [12, 19], "102": [12, 51], "matplotlibdeprecationwarn": [12, 57, 58], "wa": [12, 44, 57, 83, 84], "minor": [12, 57, 58], "later": [12, 57, 58, 65], "name": [12, 23, 57, 63, 70, 80, 82, 83], "obj": [12, 57, 77], "124": [12, 51, 84], "502": [12, 19], "standard": [13, 63, 66, 70, 80, 84], "scienc": [13, 21, 27, 51, 65, 72, 82, 83], "343": [13, 84], "cvx": 13, "bary_wass2": 13, "interior": [13, 83], "0030786991119384766": 13, "primal": [13, 71, 78], "feasibl": [13, 71], "gap": 13, "1700": 13, "336700337": 13, "006776453137633": 13, "006776453137634": 13, "9932238647293": 13, "6700527543": 13, "004018712867874": 13, "4301142633": 13, "26594150092": 13, "001172775061627": 13, "7599932455028": 13, "3378536968897": 13, "0004375137005385": 13, "6422331807989": 13, "1468420566358": 13, "000232669046734": 13, "0002326690467341": 13, "5016999460893": 13, "09381703231432": 13, "430121674303e": 13, "7035962305812": 13, "0577787025717": 13, "321227838882e": 13, "321227838879e": 13, "3087841864401": 13, "05266249477204": 13, "990900379202e": 13, "990900379201e": 13, "6520472013245": 13, "0452605440552": 13, "305442046817e": 13, "30544204679e": 13, "305442046812e": 13, "7073953304073": 13, "305442046809e": 13, "04237597591383": 13, "290148391578e": 13, "290148391587e": 13, "290148391592e": 13, "6941812711476": 13, "290148391602e": 13, "041522849321": 13, "182864875418e": 13, "182864875486e": 13, "182864875459e": 13, "508455204664": 13, "182864875475e": 13, "04129461872827": 13, "626786380237e": 13, "626786380498e": 13, "626786380591e": 13, "7101651574148": 13, "626786380499e": 13, "04113032448919": 13, "53975423377e": 13, "539754239097e": 13, "539754238957e": 13, "627932209399": 13, "539754244458e": 13, "04108867636364": 13, "193221588102e": 13, "193221525716e": 13, "193221527893e": 13, "6843453372866": 13, "193221744194e": 13, "04106859618425": 13, "888204557375e": 13, "888204466916e": 13, "888204464386e": 13, "6673444754752": 13, "888205403e": 13, "04106214175154": 13, "676851456731e": 13, "676853754852e": 13, "676853775137e": 13, "7281705629265": 13, "676886118764e": 13, "04105958648699": 13, "50115020171e": 13, "501137125386e": 13, "501137136515e": 13, "4140221641718": 13, "501151490466e": 13, "04105916265115": 13, "110591805675e": 13, "110570750049e": 13, "110570733855e": 13, "699900032435": 13, "110619438659e": 13, "04105870073191": 13, "770990264961e": 13, "776274527894e": 13, "776273877079e": 13, "4996170321381": 13, "772744208187e": 13, "04105859774172": 13, "536197932746e": 13, "538885612866e": 13, "538885001653e": 13, "7515062666584": 13, "537834631178e": 13, "04105851682752": 13, "743041081423e": 13, "740002462354e": 13, "740001907827e": 13, "5949277749653": 13, "73465642858e": 13, "04105850033226": 13, "794231989236e": 13, "747423074042e": 13, "747429829833e": 13, "7557701998162": 13, "741755335329e": 13, "04105849090303": 13, "termin": [13, 37], "successfulli": 13, "041058": 13, "313905954360962": 13, "0045185089111328125": 13, "006776466288967": 13, "9932238515788": 13, "006776466288968": 13, "6649255808": 13, "004036918865497": 13, "4272973099314": 13, "34716170111": 13, "001219232687069": 13, "7496986855994": 13, "3243835647407": 13, "0003837422984427": 13, "6926882608286": 13, "1361719397492": 13, "0001070128410182": 13, "7643889137854": 13, "07581952832515": 13, "0001001275033711": 13, "000100127503371": 13, "07058704837782": 13, "07347394936348": 13, "550897507833e": 13, "550897507832e": 13, "5761172484836": 13, "05555077655044": 13, "557124125502e": 13, "557124125495e": 13, "8535925441154": 13, "557124125503e": 13, "0443981466022": 13, "611995628362e": 13, "611995628359e": 13, "611995628375e": 13, "6002277331592": 13, "611995628377e": 13, "04283007762151": 13, "590393750322e": 13, "59039375014e": 13, "590393750355e": 13, "822148653339": 13, "590393750361e": 13, "04192322976247": 13, "299929287269e": 13, "299929283142e": 13, "299929287457e": 13, "9017467938803": 13, "299929287509e": 13, "04170825633295": 13, "117560215317e": 13, "117560474123e": 13, "117560204434e": 13, "9970399692198": 13, "117560202277e": 13, "04168179329766": 13, "559775055372e": 13, "14": [13, 20, 27, 34, 37, 39, 44, 51, 58, 63, 65, 70, 82, 83], "561428379782e": 13, "559760203488e": 13, "9999499685222": 13, "559752674386e": 13, "04168169240444": 13, "041682": 13, "860013723373413": 13, "0009591579437255859": 13, "006774675520687": 13, "9932256422636": 13, "6956034733": 13, "002048208707529": 13, "7343095368176": 13, "213991622021": 13, "0002697365474824": 13, "8839403501148": 13, "5059383903968": 13, "832109993819e": 13, "832109993818e": 13, "7601171076044": 13, "2339657807265": 13, "437682932226e": 13, "6663448297416": 13, "1471256246326": 13, "134983216297e": 13, "134983216299e": 13, "5553643816468": 13, "1181584941169": 13, "342312725774e": 13, "342312725781e": 13, "723813357168": 13, "1006387519744": 13, "078561231268e": 13, "078561231235e": 13, "078561231266e": 13, "8033142552548": 13, "09474734646262": 13, "966870958108e": 13, "966870953918e": 13, "966870953989e": 13, "7525479178458": 13, "966870954248e": 13, "09354342735761": 13, "199895240123e": 13, "199895384126e": 13, "199895235332e": 13, "9984019849396": 13, "199895236104e": 13, "0931036778586": 13, "1017793609e": 13, "101768735229e": 13, "101780822184e": 13, "9999499563876": 13, "101780420221e": 13, "0931027446646": 13, "093103": 13, "7643883228302002": 13, "nbm": 13, "len": [13, 15, 17, 30, 33, 34, 44, 77], "nbm2": 13, "144": [13, 19, 51, 84], "plot_barycenter_lp_vs_entrop": [13, 19], "design": [14, 32, 33, 42, 51, 58, 60, 75, 83, 84], "how": [14, 26, 32, 33, 34, 42, 44, 49, 50, 58, 60, 64, 84], "pathlib": [14, 15, 21, 25, 27, 33], "four": [14, 33], "this_fil": [14, 15, 21, 25, 27, 33], "realpath": [14, 15, 21, 25, 27, 33], "__file__": [14, 15, 21, 25, 27, 33], "data_path": [14, 15, 21, 25, 27, 33], "join": [14, 15, 21, 25, 27, 33, 63, 82], "parent": [14, 15, 21, 25, 27, 33], "f1": [14, 15], "f2": [14, 15], "f3": 14, "heart": [14, 15, 18], "f4": 14, "duck": [14, 15, 16], "nb_imag": 14, "corner": [14, 83], "bilinear": [14, 44], "v1": 14, "v2": 14, "v3": 14, "v4": 14, "suptitl": [14, 30], "004": [14, 44, 52], "ty": 14, "tmp1": 14, "tmp2": 14, "elif": [14, 34], "call": [14, 42, 58, 60, 64, 65, 71, 72, 80, 83, 84], "convolutional_barycenter2d": [14, 15], "851": [14, 19], "plot_convolutional_barycent": [14, 19], "janati": [15, 56, 57, 62, 64, 82, 83], "gramfort": [15, 62, 64, 82, 83], "37th": [15, 64, 82, 83], "119": [15, 51, 64, 82, 83], "4692": [15, 64, 82, 83], "4701": [15, 64, 82, 83], "hicham": [15, 56, 57, 62, 82], "janati100": 15, "gmail": [15, 20, 21, 22, 26, 27, 28, 32, 33, 41, 42], "barycenter_debias": 15, "convolutional_barycenter2d_debias": 15, "epsilon": [15, 32, 41, 56, 63, 64, 70, 83, 84], "bar": [15, 75], "bars_debias": 15, "indianr": 15, "gold": [15, 63], "sharei": [15, 31], "bar_debias": 15, "varepsilon": 15, "3f": [15, 23, 59], "asarrai": 15, "displai": [15, 22, 28, 44, 64], "img": [15, 21, 25, 27, 33], "grei": [15, 34], "bars_sinkhorn": 15, "7e": 15, "all_bar": 15, "jj": 15, "ax_row": 15, "ii": [15, 17], "set_xtick": [15, 18, 54], "set_ytick": [15, 18, 54], "spine": 15, "set_vis": 15, "477": [15, 19], "plot_debiased_barycent": [15, 19], "vivien": [16, 77, 82], "iip": 16, "ist": 16, "kyoto": 16, "ac": 16, "jp": 16, "eduardo": [16, 17, 62], "fernand": [16, 17, 62], "montesuma": [16, 17, 62], "universit": [16, 17], "saclai": [16, 17], "measures_loc": [16, 17, 64, 71], "measures_weight": [16, 17, 64, 71], "x_init": [16, 17, 64, 71], "free_support_barycent": [16, 64, 83, 84], "free_support_sinkhorn_barycent": [16, 17], "647": [16, 19], "plot_free_support_barycent": [16, 19], "understood": 17, "cloud": [17, 33], "linalg": [17, 30, 32, 58, 63], "x4": 17, "multivariate_norm": 17, "a3": 17, "a4": 17, "steelblu": 17, "float32": 17, "xb_init": 17, "subplot2grid": [17, 33], "526": [17, 20, 22, 23, 24, 27, 28, 29, 32, 44, 51], "did": [17, 20, 22, 23, 24, 28, 32, 44, 51, 84], "increas": [17, 20, 22, 23, 24, 28, 32, 44, 51, 73], "494": 17, "overflow": [17, 57, 84], "divid": [17, 44, 50, 57], "nx": [17, 30, 63, 84], "kp": 17, "501": 17, "493": 17, "ktransposeu": 17, "689": [17, 19], "plot_free_support_sinkhorn_barycent": [17, 19], "saint": [18, 71, 82], "dizier": [18, 71, 82], "subspac": [18, 67, 71, 82, 83], "2105": [18, 71, 82], "09755": [18, 71, 82], "eloi": [18, 62], "tangui": [18, 62, 70], "sub_sample_factor": 18, "i3": 18, "uu": 18, "vv": 18, "x_list": [18, 71], "im": [18, 25, 27, 44], "a_list": [18, 71], "p1": [18, 23, 40], "p2": [18, 23, 40], "p3": 18, "p_list": [18, 71], "n_samples_bari": [18, 71], "visualis": 18, "x_visu": 18, "xi": 18, "view_init": [18, 54], "azim": 18, "set_ztick": [18, 54], "generalized_free_support_barycent": 18, "elev": 18, "_init": 18, "init_func": 18, "frame": 18, "136": [18, 51], "blit": 18, "619": [18, 19], "plot_generalized_free_support_barycent": [18, 19], "02": [19, 20, 26, 27, 29, 32, 37, 42, 43, 45, 46, 51, 52, 58, 61, 73, 78], "928": 19, "auto_examples_barycent": 19, "convolut": [19, 36, 62, 64, 82, 84], "demo": [19, 36, 61, 64, 66, 71, 80, 83], "debias": [19, 36, 62, 64, 66, 80, 82, 83, 84], "introduc": [20, 21, 22, 23, 24, 26, 28, 64, 83, 84], "otda": [20, 23, 24, 29, 36, 65, 66, 80, 84], "stanisla": [20, 21, 22, 26, 27, 28, 62, 82], "chambon": [20, 21, 22, 26, 27, 28, 62, 82], "stan": [20, 21, 22, 26, 27, 28], "3gauss": [20, 22, 24, 28], "3gauss2": [20, 22, 24, 28], "ot_emd": [20, 21, 22, 24, 27, 44, 83], "da": [20, 21, 22, 23, 24, 25, 26, 27, 28, 62, 83, 84], "emdtransport": [20, 21, 22, 24, 27, 83, 84], "ot_sinkhorn": [20, 21, 22, 23, 24, 27, 44], "sinkhorntransport": [20, 21, 22, 23, 24, 27, 28, 83], "reg_": [20, 21, 22, 23, 24, 27, 28, 65], "ot_lpl1": [20, 22], "sinkhornlpl1transport": [20, 22, 83, 84], "reg_cl": [20, 22, 65], "1e0": [20, 22, 26, 27, 37], "l1l2": [20, 65], "ot_l1l2": 20, "sinkhornl1l2transport": [20, 83], "2e0": 20, "transp_xs_emd": [20, 21, 22, 24, 27], "transp_xs_sinkhorn": [20, 21, 22, 24, 27], "transp_xs_lpl1": [20, 22], "transp_xs_l1l2": 20, "810186e": 20, "000000e": [20, 26, 27, 31, 32, 51], "256314e": 20, "347882e": 20, "553872e": 20, "014338e": 20, "201266e": 20, "419755e": 20, "954549e": 20, "058982e": 20, "978929e": 20, "934413e": 20, "040903e": 20, "013537e": 20, "923959e": 20, "433942e": 20, "03": [20, 26, 31, 32, 35, 37, 40, 41, 42, 45, 46, 51, 52, 54, 73, 78], "045468e": 20, "916963e": 20, "649385e": 20, "995736e": 20, "914801e": 20, "129245e": 20, "162278e": 20, "911179e": 20, "894990e": 20, "621664e": 20, "910308e": 20, "557196e": 20, "705649e": 20, "906372e": 20, "064711e": 20, "936108e": 20, "905216e": 20, "068224e": 20, "156128e": 20, "903163e": 20, "078641e": 20, "052830e": 20, "901400e": 20, "272422e": 20, "763059e": 20, "900308e": 20, "747659e": 20, "092232e": 20, "899199e": 20, "840477e": 20, "109223e": 20, "897764e": 20, "563038e": 20, "435286e": 20, "897371e": 20, "069803e": 20, "927183e": 20, "18": [20, 27, 30, 31, 37, 42, 51, 73, 78, 82, 83], "896891e": 20, "529570e": 20, "798319e": 20, "896236e": 20, "456480e": 20, "554300e": 20, "895477e": 20, "003509e": 20, "588558e": 20, "param_img": [20, 24], "coupling_": [20, 22, 23, 24, 28, 65], "nemdtransport": [20, 22, 24, 28], "nsinkhorntransport": [20, 22, 24, 28], "nsinkhornlpl1transport": [20, 22], "nsinkhornl1l2transport": 20, "transp": [20, 22, 24, 28, 60], "plot_otda_class": [20, 29], "transfer": [21, 83], "ferradan": [21, 27, 51, 65, 72, 82, 83], "papadaki": [21, 27, 51, 65, 72, 82, 83], "peyr": [21, 27], "aujol": [21, 27, 51, 65, 72, 82, 83], "2014": [21, 27, 51, 64, 65, 71, 72, 82, 83], "1853": [21, 27, 51, 65, 72, 82, 83], "1882": [21, 27, 51, 65, 72, 82, 83], "im2mat": [21, 25, 27, 33], "pixel": [21, 25, 33], "per": [21, 25, 27, 33, 71], "mat2im": [21, 25, 27], "minmax": [21, 25, 27], "clip": [21, 25, 27, 63], "ocean_dai": [21, 25, 27], "jpg": [21, 25, 27], "256": [21, 25, 27], "ocean_sunset": [21, 25, 27], "idx1": [21, 27], "idx2": [21, 27], "ylabel": [21, 27, 31, 34, 44, 53, 54, 60], "predict": [21, 70], "out": [21, 26, 65, 76], "transp_xt_emd": 21, "inverse_transform": [21, 25, 65, 83], "transp_xt_sinkhorn": 21, "i1t": [21, 25], "i2t": [21, 25], "077": [21, 29], "plot_otda_color_imag": [21, 29], "quantiti": [22, 28, 34], "greater": [22, 28, 84], "coeffici": [22, 28, 34, 64, 70, 71, 72, 75], "visual": [22, 28, 44, 45, 46], "understand": [22, 28], "n_samples_sourc": [22, 28], "n_samples_target": [22, 28], "plot_otda_d2": [22, 29], "ievgen": [23, 24, 62, 64, 65, 82], "redko": [23, 24, 62, 64, 65, 82], "st": [23, 24, 67], "etienn": [23, 24], "1985": 23, "dec1": 23, "dec2": 23, "pt": 23, "dect": 23, "ys1": 23, "2gauss_prop": 23, "bia": [23, 26, 27, 65, 69], "ys2": 23, "all_xr": 23, "all_yr": 23, "plot_ax": 23, "dec": 23, "set1": 23, "2f": [23, 44], "equal": [23, 40, 48, 63, 75], "85": [23, 51, 84], "046431138906241": 23, "129455496299416": 23, "print_g": 23, "independ": [23, 83], "jcpottransport": 23, "ws1": 23, "proportions_": [23, 65], "log_": [23, 65], "d2": 23, "ws2": 23, "prop": [23, 73], "err": [23, 32, 45, 46, 58], "069551e": 23, "h_re": 23, "1f": 23, "427": [23, 29], "plot_otda_jcpot": [23, 29], "ot_emd_laplac": 24, "emdlaplacetransport": 24, "reg_lap": [24, 65], "reg_src": [24, 65], "transp_xs_emd_laplac": 24, "nemdlaplacetransport": 24, "245": [24, 29], "plot_otda_laplacian": [24, 29], "anglet": 25, "line2d": 25, "0x7f67840a4040": 25, "ae": 25, "empirical_bures_wasserstein_map": 25, "xst": 25, "lineartransport": [25, 83], "invers": [25, 59, 63, 65, 71, 75], "887": [25, 29], "plot_otda_linear_map": [25, 29], "mappingtransport": [26, 27, 83], "perrot": [26, 27, 62, 65, 82, 83], "habrard": [26, 27, 65, 82, 83], "xs_new": 26, "ot_mapping_linear": [26, 27], "transp_xs_linear": 26, "transp_xs_linear_new": 26, "ot_mapping_gaussian": [26, 27], "transp_xs_gaussian": 26, "transp_xs_gaussian_new": 26, "delta": [26, 27, 75], "986844e": 26, "972764e": 26, "531477e": 26, "972389e": 26, "461658e": 26, "972245e": 26, "624025e": 26, "972160e": 26, "117504e": 26, "972106e": 26, "373173e": 26, "972080e": 26, "562692e": 26, "003915e": 26, "958105e": 26, "144133e": 26, "955316e": 26, "047144e": 26, "953978e": 26, "381681e": 26, "953022e": 26, "418670e": 26, "952384e": 26, "614419e": 26, "951879e": 26, "276833e": 26, "951512e": 26, "276752e": 26, "951208e": 26, "695074e": 26, "950961e": 26, "249266e": 26, "950768e": 26, "896755e": 26, "bari": [26, 30], "895": [26, 29], "plot_otda_map": [26, 29], "image_emd": 27, "image_sinkhorn": 27, "x1tl": 27, "image_mapping_linear": 27, "x1tn": 27, "image_mapping_gaussian": 27, "797245e": 27, "758014e": 27, "182822e": 27, "757026e": 27, "620752e": 27, "756521e": 27, "875691e": 27, "756218e": 27, "725224e": 27, "756015e": 27, "153553e": 27, "755868e": 27, "348118e": 27, "755759e": 27, "234582e": 27, "755673e": 27, "893582e": 27, "755604e": 27, "942771e": 27, "755547e": 27, "206000e": 27, "755500e": 27, "695056e": 27, "755460e": 27, "307154e": 27, "755426e": 27, "944208e": 27, "755395e": 27, "715960e": 27, "755369e": 27, "515613e": 27, "755345e": 27, "367864e": 27, "755324e": 27, "197885e": 27, "755305e": 27, "071067e": 27, "755303e": 27, "898122e": 27, "842001e": 27, "780145e": 27, "358084e": 27, "778490e": 27, "296544e": 27, "777841e": 27, "648247e": 27, "777495e": 27, "948923e": 27, "777284e": 27, "184075e": 27, "777135e": 27, "396988e": 27, "777027e": 27, "059322e": 27, "776945e": 27, "619816e": 27, "776880e": 27, "672789e": 27, "776827e": 27, "971430e": 27, "plot_otda_mapping_colors_imag": [27, 29], "ot_sinkhorn_un": 28, "transp_xs_sinkhorn_un": 28, "ot_sinkhorn_semi": 28, "transp_xs_sinkhorn_semi": 28, "labal": 28, "modifi": 28, "infinit": [28, 65], "larg": [28, 42, 65, 73, 78, 82, 83, 84], "daili": 28, "element": [28, 30, 44, 63, 64, 65, 70, 71, 75], "fill": [28, 56, 63, 65], "recal": [28, 75], "cost_": [28, 65], "semisupervis": 28, "exhibit": [28, 65], "nunsupervis": 28, "nsemi": 28, "576": [28, 29], "plot_otda_semi_supervis": [28, 29], "544": 29, "auto_examples_domain": 29, "multi": [29, 36, 63, 64, 65, 66, 80, 82, 83, 84], "shift": [29, 36, 64, 65, 66, 80, 82, 83, 84], "laplacian": [29, 36, 62, 65, 66, 80, 82, 83], "unsupervis": [29, 36, 65, 66, 80, 83], "semi": [29, 36, 65, 66, 75, 77, 78, 80, 82, 83, 84], "supervis": [29, 36, 64, 65, 66, 80, 82, 83, 84], "networkx": [30, 34], "csgraph": 30, "shortest_path": 30, "mcol": 30, "fgw_barycent": [30, 83], "find_thresh": 30, "inf": [30, 65], "sup": 30, "trick": [30, 73, 83], "adequ": 30, "sai": 30, "connect": [30, 34], "tthe": 30, "linesearch": [30, 72, 84], "reconstruct": [30, 34, 70, 77, 84], "adjenc": 30, "n_node": [30, 34], "begin": [30, 75], "thresh": 30, "cprime": 30, "sp_to_adj": 30, "sc": 30, "argmin": [30, 63], "threshinf": 30, "threshsup": 30, "minimum": [30, 63, 65, 72, 83, 84], "new": [30, 63, 80, 83], "zeros_lik": 30, "fill_diagon": [30, 34], "build_noisy_circular_graph": 30, "with_nois": 30, "structure_nois": 30, "noisi": 30, "add_nodes_from": 30, "add_nod": 30, "attr_nam": 30, "add_edg": 30, "randomint": 30, "graph_color": 30, "nx_graph": 30, "cnorm": 30, "cpick": 30, "scalarmapp": 30, "set_arrai": 30, "val_map": 30, "get_node_attribut": 30, "to_rgba": 30, "po": [30, 33, 65], "kamada_kawai_layout": 30, "draw": 30, "node_color": 30, "with_label": 30, "node_s": 30, "adjacency_matrix": 30, "sizebari": 30, "95": [30, 33, 51, 53, 54], "from_numpy_arrai": 30, "804": [30, 35], "plot_barycenter_fgw": [30, 35], "sig": 31, "sig2": 31, "phi": [31, 75], "phi2": 31, "a_i": [31, 64, 71, 83], "y_j": [31, 83], "b_j": [31, 64, 71, 83], "w1": [31, 67], "w2": [31, 50, 67], "got": 31, "l_x": 31, "l_y": 31, "gridspec": 31, "set_aspect": 31, "ax3": [31, 33, 58], "sharex": 31, "gwg": 31, "logw": 31, "reload_ext": 31, "wgw": 31, "734412e": 31, "508254e": 31, "875326e": 31, "226158e": 31, "189327e": 31, "456740e": 31, "189279e": 31, "0016088485717773438": 31, "683978e": 31, "860061e": 31, "134468e": 31, "239175e": 31, "182948e": 31, "682787e": 31, "677113e": 31, "562": [31, 35], "plot_fgw": [31, 35], "wassertsein": [32, 83], "erwan": [32, 33, 62], "vautier": [32, 33, 62], "sp": [32, 33, 58, 73], "purpos": [32, 58, 83], "mu_": [32, 38, 47, 50, 53, 58, 59, 60, 65, 69, 83], "cov_": [32, 38, 47, 53, 58, 59, 60], "mu_t": [32, 38, 47, 53, 58, 59, 60, 65, 69, 83], "cov_t": [32, 38, 47, 53, 58, 59, 60], "make_2d_samples_gauss": [32, 38, 47, 53, 58, 59, 60], "sqrtm": [32, 58, 63], "121": [32, 44, 51, 58, 84], "122": [32, 44, 51, 58, 84], "gw0": 32, "log0": [32, 58], "entropic_gromov_wasserstein": [32, 83], "jet": [32, 58, 60], "040183e": 32, "680045e": 32, "312927e": 32, "721780e": 32, "810735e": 32, "807022e": 32, "693103e": 32, "071265e": 32, "833502e": 32, "306601e": 32, "414525e": 32, "048107347795629904": 32, "04097168403053387": 32, "pgw": 32, "plog": 32, "pointwise_gromov_wasserstein": 32, "sgw": 32, "slog": [32, 64], "sampled_gromov_wasserstein": 32, "pointwis": [32, 84], "gw_dist_estim": 32, "gw_dist_std": 32, "toarrai": [32, 63, 75], "18827653307627662": 32, "1534777663986762": 32, "001626689010280435": 32, "574": [32, 35], "plot_gromov": [32, 35], "decomposit": 33, "pca": 33, "smacof_md": 33, "3000": 33, "singl": 33, "stress": 33, "declar": 33, "npo": 33, "isometri": 33, "n_init": 33, "embedding_": 33, "nmd": 33, "init": [33, 70, 84], "cross": 33, "triangl": 33, "star": 33, "lambdast": 33, "ct01": 33, "ct02": 33, "ct13": 33, "ct23": 33, "rotat": [33, 44], "n_compon": 33, "npost01": 33, "npost02": 33, "npost13": 33, "npost23": 33, "ax4": 33, "ax5": 33, "ax6": 33, "ax7": 33, "ax8": 33, "ax9": 33, "ax10": 33, "ax11": 33, "ax12": 33, "0x7f686fb256a0": 33, "714": [33, 35], "plot_gromov_barycent": [33, 35], "denot": [34, 44, 64, 65, 71], "c_": [34, 44, 70], "p_": [34, 70], "convex": [34, 48, 72, 77, 83], "combin": [34, 83], "sigma_d": 34, "sum_d": [34, 70], "taken": [34, 83], "vari": 34, "extens": [34, 83], "aforement": 34, "unattribut": 34, "uniformli": 34, "Then": [34, 50, 83], "c\u00e9dric": [34, 62, 70], "cedric": 34, "inria": [34, 56, 57], "gromov_wasserstein_linear_unmix": 34, "gromov_wasserstein_dictionary_learn": 34, "fused_gromov_wasserstein_linear_unmix": 34, "fused_gromov_wasserstein_dictionary_learn": 34, "stochastic_block_model": 34, "inter": 34, "intra": [34, 73], "nlabel": 34, "p_inter": 34, "p_intra": 34, "n_cluster": 34, "low": [34, 39, 44, 68], "int32": 34, "to_numpy_arrai": 34, "intens": 34, "idx_c": 34, "plot_gromov_wasserstein_dictionary_learn": [34, 35], "92": [34, 44, 51, 84], "promot": [34, 70, 83], "sparsiti": [34, 70, 83], "cdict_gw": 34, "epoch": [34, 70], "batch_siz": [34, 42, 65, 70, 78], "learning_r": [34, 70], "nonnegative_symmetr": [34, 70], "tol_out": [34, 70], "tol_inn": [34, 70], "max_iter_out": [34, 70], "max_iter_inn": [34, 70], "use_log": [34, 70], "use_adam_optim": [34, 70], "loss_epoch": 34, "cumul": [34, 63], "0513479260814": 34, "899037863512985": 34, "713360269739709": 34, "2219972411444076": 34, "733394454243953": 34, "361946666624151": 34, "067124363111312": 34, "623090086538461": 34, "44508527753937": 34, "315119124977292": 34, "shade": 34, "dark": [34, 84], "white": 34, "idx_atom": 34, "scaled_atom": 34, "reconstruction_error": 34, "cembed": [34, 70], "unmixings2d": 34, "extrem": 34, "linewidth": [34, 40, 54], "0016238572676714": 34, "assign": [34, 64, 70], "hot": 34, "encod": [34, 80], "dataset_featur": 34, "001": [34, 48, 64, 65, 67, 77], "cdict_fgw": 34, "ydict_fgw": 34, "learning_rate_c": [34, 70], "learning_rate_i": [34, 70], "241134173626172": 34, "868444308072286": 34, "592548942499706": 34, "538319767046637": 34, "9036221456610156": 34, "6337245247963876": 34, "61678893167859": 34, "527896294871612": 34, "41525469570934": 34, "3026831090139366": 34, "max_featur": 34, "min_featur": 34, "catom": 34, "fatom": 34, "scaled_f": 34, "yembed": [34, 70], "123695098071627": 34, "015": [34, 35, 53, 55], "48": [35, 44, 51, 84], "669": 35, "auto_examples_gromov": 35, "gournd": [36, 52, 74, 83], "introduct": [36, 52, 83], "discrimin": [36, 43, 67, 82, 84], "logo": [36, 43, 83, 84], "toolbox": [36, 43, 62, 83, 84], "auto_examples_python": 36, "auto_examples_jupyt": 36, "wda": [37, 62, 84], "fda": [37, 83], "floor": [37, 63], "nbnois": 37, "hstack": 37, "pfda": 37, "projfda": 37, "maxit": [37, 64, 67], "p0": [37, 67], "pwda": 37, "projwda": 37, "val": [37, 63], "3042776946697494e": 37, "65147154e": 37, "4401037686381040e": 37, "16760501e": 37, "2234351238819928e": 37, "30555049e": 37, "2169879996364462e": 37, "39115407e": 37, "1924746118060602e": 37, "25387848e": 37, "1177409528990749e": 37, "70993539e": 37, "0862213476139048e": 37, "52716830e": 37, "0747229322240269e": 37, "34923131e": 37, "0678766065261684e": 37, "74029183e": 37, "0621337155459647e": 37, "03651803e": 37, "0577080390746939e": 37, "59605592e": 37, "0543140912472148e": 37, "28883715e": 37, "0470236926310577e": 37, "47528039e": 37, "0445628467498224e": 37, "03183254e": 37, "0364189455866245e": 37, "31006504e": 37, "0303977563823823e": 37, "39885352e": 37, "0301476238242911e": 37, "17467624e": 37, "0292344306414324e": 37, "79959907e": 37, "0271888325518124e": 37, "94408237e": 37, "0183214741002155e": 37, "98322994e": 37, "9762636217090053e": 37, "03196875e": 37, "8225627240876070e": 37, "36012863e": 37, "0855506616050116e": 37, "92702943e": 37, "8001027160864295e": 37, "01920255e": 37, "3687486090807947e": 37, "01780640e": 37, "3431203993360381e": 37, "23716793e": 37, "3118645266923005e": 37, "90753137e": 37, "3067593392325469e": 37, "02767925e": 37, "29": [37, 51, 65, 69, 73, 82, 83, 84], "3064856262240019e": 37, "07925279e": 37, "3060699763593800e": 37, "95215754e": 37, "3060442760754873e": 37, "77368118e": 37, "3060442709529139e": 37, "34108449e": 37, "3060442708435561e": 37, "52599061e": 37, "3060442707674844e": 37, "07742368e": 37, "3060442707600512e": 37, "36125504e": 37, "reach": [37, 84], "after": [37, 82], "xsp": 37, "xtp": 37, "xspw": 37, "xtpw": 37, "746": [37, 43], "plot_wda": [37, 43], "xr": [38, 39, 47, 48, 53], "gweak": 38, "062": [38, 43], "plot_weakot_vs_ot": [38, 43], "sign": 39, "og": 39, "templat": [39, 84], "946": [39, 43], "plot_factored_coupl": [39, 43], "plote": [40, 59], "teh": 40, "letter": 40, "o1": 40, "o2": 40, "translat": 40, "t1": 40, "t2": [40, 59, 75], "horizont": 40, "vertic": 40, "sx": 40, "markerfacecolor": 40, "markeredgecolor": 40, "save": [40, 64, 70], "savefig": 40, "svg": 40, "dpi": 40, "transpar": 40, "bbox_inch": 40, "tight": 40, "375": [40, 84], "darkgrai": 40, "logo_dark": 40, "056": [40, 43], "plot_logo": [40, 43], "alaya": [41, 62, 64, 73, 82, 83], "b\u00e9rar": [41, 64, 82, 83], "gasso": [41, 59, 64, 73, 75, 79, 82, 83], "neurip": [41, 73, 75, 79, 82, 83], "mokhtar": [41, 62, 82], "mokhtarzahdi": 41, "plot1d_mat": [41, 42, 45, 46, 51, 56], "lambd": [41, 45, 46, 47], "ns_budget": [41, 64], "budget": [41, 64], "nt_budget": [41, 64], "g_screen": 41, "restrict": [41, 64], "3460": 41, "bottleneck": [41, 64], "pypi": [41, 64, 82, 84], "020986042861303855": 41, "kappa": [41, 64], "7476531411890917": 41, "cardin": [41, 64], "isel": 41, "jsel": 41, "plot_screenkhorn_1d": [41, 43], "stochat": 42, "librari": [42, 62, 82, 83, 84], "bach": [42, 78, 82, 83], "bhushan": [42, 78, 82, 83], "damodaran": [42, 78, 82, 83], "kilian": [42, 47, 62, 82], "n_sourc": [42, 78], "n_target": [42, 49, 78], "x_sourc": [42, 78], "y_target": [42, 78], "sag": [42, 78], "sag_pi": 42, "solve_semi_dual_entrop": 42, "55553509e": 42, "96395660e": 42, "76579142e": 42, "31178196e": 42, "21640234e": 42, "25357448e": 42, "30225078e": 42, "37891338e": 42, "56123975e": 42, "61451746e": 42, "31505947e": 42, "33831456e": 42, "61515202e": 42, "34246014e": 42, "28734709e": 42, "07550428e": 42, "85500870e": 42, "52288517e": 42, "08262628e": 42, "21423583e": 42, "16904253e": 42, "03825797e": 42, "87178503e": 42, "18391107e": 42, "15462212e": 42, "65987989e": 42, "23177216e": 42, "39440107e": 42, "semicontin": 42, "asgd": [42, 78], "asgd_pi": 42, "log_asgd": 42, "beta": [42, 64, 71, 77, 78, 84], "87919564": 42, "64972912": 42, "90370867": 42, "65425719": 42, "46885467": 42, "30171991": 42, "77560865": 42, "50927934": 42, "40235686": 42, "91006054": 42, "82169674": 42, "44871332e": 42, "00795848e": 42, "75697554e": 42, "40659699e": 42, "20593540e": 42, "31205385e": 42, "34063837e": 42, "80242597e": 42, "40238837e": 42, "68032820e": 42, "26513361e": 42, "36373920e": 42, "52546195e": 42, "40772739e": 42, "31054753e": 42, "19774150e": 42, "29902872e": 42, "49410422e": 42, "06078986e": 42, "22200805e": 42, "05396464e": 42, "03575289e": 42, "84056467e": 42, "19573357e": 42, "02994053e": 42, "72385417e": 42, "28420336e": 42, "47716225e": 42, "sinkhorn_pi": 42, "55553508e": 42, "96395661e": 42, "31178193e": 42, "30225079e": 42, "37891333e": 42, "56123974e": 42, "33831455e": 42, "61515201e": 42, "07550425e": 42, "85500876e": 42, "52288523e": 42, "08262629e": 42, "16904255e": 42, "03825804e": 42, "87178504e": 42, "23177217e": 42, "39440105e": 42, "sgd": [42, 70, 78], "sgd_dual_pi": [42, 78], "log_sgd": 42, "solve_dual_entrop": 42, "92075753": 42, "80864372": 42, "07370578": 42, "0179414": 42, "60239916": 42, "8141425": 42, "11122763": 42, "346688": 42, "47228889": 42, "57636303": 42, "9534778": 42, "21021974e": 42, "26940978e": 42, "09590373e": 42, "59858662e": 42, "65652588e": 42, "83627521e": 42, "27260904e": 42, "58648690e": 42, "49188637e": 42, "03096858e": 42, "44340331e": 42, "37764488e": 42, "14582303e": 42, "32484188e": 42, "15372556e": 42, "26187284e": 42, "79941580e": 42, "58297483e": 42, "36009581e": 42, "15632652e": 42, "07006729e": 42, "61709962e": 42, "99740394e": 42, "13377026e": 42, "88094057e": 42, "36124884e": 42, "09671824e": 42, "24045368e": 42, "008": [42, 43], "plot_stochast": [42, 43], "107": [43, 51, 84], "auto_examples_oth": 43, "aureli": 44, "boisbunon": [44, 82], "conda": [44, 83], "forg": [44, 83], "document": [44, 62, 82, 83, 84], "pythonot": [44, 63, 82, 84], "io": [44, 82, 84], "Or": 44, "inlin": 44, "caf\u00e9": 44, "croissant": 44, "manhattan": 44, "quick": [44, 82, 84], "googl": 44, "extract": [44, 63], "fiction": 44, "product": [44, 63, 75, 80, 83], "sale": 44, "acess": 44, "bakery_po": 44, "bakery_prod": 44, "sold": 44, "cafe_po": 44, "cafe_prod": 44, "fun": 44, "imap": 44, "shop": 44, "npz": 44, "cafe": 44, "89": [44, 51, 65, 84], "73": [44, 51], "88": [44, 51, 84], "91": [44, 51, 84], "441": [44, 64, 71, 82], "next": [44, 71, 72, 75, 83, 84], "ec": 44, "thing": 44, "fontweight": 44, "bold": 44, "va": 44, "coolwarm": 44, "cbar": 44, "shrink": 44, "use_gridspec": 44, "cell": 44, "awai": 44, "thu": [44, 80], "costli": 44, "while": [44, 71, 83, 84], "time_emd": 44, "section": [44, 83, 84], "plane": 44, "easili": [44, 83], "interpret": 44, "10838179": 44, "pseudo": 44, "oslash": 44, "wise": [44, 63, 83], "divis": 44, "Be": 44, "care": 44, "pre": [44, 64, 83], "nit": 44, "ot_sink_algo": 44, "atleast_2d": 44, "equival": [44, 45, 65, 69, 73], "diag": [44, 63, 64, 83], "algo": [44, 64], "2g": 44, "0008": 44, "notic": 44, "deliv": 44, "fraction": 44, "sens": [44, 64, 71, 82, 83], "reg_paramet": 44, "logspac": [44, 50, 53, 54, 59], "w_sinkhorn_reg": 44, "time_sinkhorn_reg": 44, "max_ot": 44, "few": [44, 84], "seri": 44, "although": 44, "tend": 44, "comparison": [44, 51, 83], "972222222222223": 44, "impact": [44, 83], "higher": [44, 70, 77], "littl": [44, 71], "plot_intro_ot": [44, 52], "0x7f68843651f0": 45, "861463e": 45, "860154e": 45, "144529e": 45, "130143e": 45, "178815e": 45, "426078e": 45, "661047e": 45, "233110e": 45, "338932e": 45, "776627e": 45, "293340e": 45, "235791e": 45, "637176e": 45, "740051e": 45, "529356e": 45, "450071e": 45, "193632e": 45, "449812e": 45, "294505e": 45, "857493e": 45, "822723e": 45, "575": [45, 52], "plot_ot_1d": [45, 52], "0x7f6883fd9e20": 46, "821142e": 46, "695268e": 46, "112774e": 46, "571553e": 46, "218100e": 46, "130527e": 46, "418267e": 46, "235716e": 46, "800770e": 46, "242095e": 46, "753030e": 46, "gsm": 46, "smooth_ot_du": [46, 83], "918": [46, 52], "plot_ot_1d_smooth": [46, 52], "discribut": 47, "empirical_sinkhorn": [47, 83], "359": [47, 52, 84], "plot_ot_2d_sampl": [47, 52], "distributio": 48, "stole": 48, "idea": [48, 71, 83], "1706": 48, "07650": 48, "strictli": [48, 71, 83], "m1": 48, "mp": 48, "l1": 48, "g1": 48, "g2": 48, "gp": 48, "xtot": 48, "024": [48, 52], "plot_ot_l1_vs_l2": [48, 52], "lst_m": 49, "d_emd": 49, "d_emd2": 49, "metrixc": 49, "d_tv": 49, "0x7f67a3fdb160": 49, "d_sinkhorn": 49, "d_sinkhorn2": 49, "599": [49, 52], "plot_compute_emd": [49, 52], "special": [50, 63], "pdf_von_mis": 50, "endpoint": 50, "mu1": 50, "kappa1": 50, "mu_target": 50, "pdf1": 50, "pdf_t": 50, "mu2": 50, "kappa2": 50, "vonmis": 50, "0x7f6883ca9370": 50, "period": 50, "attain": [50, 73], "antipod": 50, "contrari": 50, "n_try": 50, "deal": [50, 73], "put": 50, "xts2": 50, "l_w2_circl": 50, "l_w2": 50, "w2_circl": 50, "m_w2_circl": 50, "std_w2_circl": 50, "m_w2": 50, "std_w2": 50, "fill_between": [50, 53, 54], "vline": 50, "ymin": 50, "ymax": 50, "linestyl": 50, "726": 50, "tc": 50, "mask_end": 50, "ctp": 50, "ctm": 50, "dcptm": 50, "dcmtp": 50, "vm": 50, "816": [50, 52], "plot_compute_wasserstein_circl": [50, 52], "df": [51, 72, 83], "gl2": 51, "frob": 51, "760578e": 51, "669467e": 51, "457501e": 51, "111116e": 51, "665639e": 51, "298130e": 51, "827855e": 51, "664378e": 51, "572776e": 51, "260396e": 51, "664077e": 51, "811855e": 51, "015066e": 51, "663912e": 51, "936787e": 51, "653393e": 51, "663852e": 51, "555826e": 51, "916369e": 51, "663814e": 51, "305693e": 51, "836245e": 51, "663785e": 51, "760450e": 51, "929009e": 51, "663767e": 51, "078011e": 51, "793559e": 51, "663751e": 51, "525192e": 51, "584755e": 51, "663737e": 51, "396466e": 51, "396951e": 51, "663727e": 51, "086938e": 51, "012700e": 51, "663720e": 51, "042609e": 51, "725769e": 51, "663713e": 51, "160914e": 51, "922568e": 51, "663707e": 51, "823502e": 51, "361187e": 51, "663702e": 51, "022440e": 51, "028438e": 51, "663697e": 51, "181249e": 51, "292634e": 51, "663692e": 51, "698532e": 51, "489527e": 51, "663687e": 51, "258253e": 51, "420712e": 51, "663682e": 51, "741118e": 51, "560349e": 51, "663678e": 51, "624135e": 51, "365715e": 51, "663673e": 51, "645179e": 51, "400714e": 51, "663670e": 51, "957237e": 51, "256196e": 51, "663666e": 51, "261541e": 51, "762450e": 51, "663663e": 51, "851305e": 51, "079948e": 51, "663660e": 51, "942296e": 51, "231320e": 51, "663657e": 51, "092896e": 51, "481860e": 51, "663653e": 51, "924361e": 51, "201470e": 51, "663651e": 51, "625455e": 51, "704189e": 51, "663648e": 51, "641123e": 51, "730250e": 51, "663645e": 51, "566666e": 51, "606377e": 51, "663643e": 51, "338514e": 51, "226810e": 51, "663641e": 51, "222711e": 51, "034152e": 51, "663639e": 51, "221805e": 51, "032642e": 51, "663637e": 51, "440781e": 51, "396935e": 51, "663634e": 51, "520091e": 51, "528875e": 51, "663632e": 51, "288193e": 51, "143080e": 51, "663630e": 51, "123055e": 51, "868347e": 51, "663628e": 51, "024487e": 51, "704365e": 51, "663627e": 51, "079606e": 51, "796061e": 51, "663625e": 51, "172093e": 51, "949922e": 51, "663623e": 51, "047880e": 51, "743277e": 51, "663621e": 51, "010577e": 51, "681217e": 51, "663619e": 51, "064438e": 51, "770820e": 51, "663618e": 51, "882375e": 51, "644049e": 51, "663616e": 51, "532647e": 51, "419505e": 51, "47": [51, 61, 84], "663615e": 51, "930189e": 51, "652001e": 51, "663613e": 51, "728955e": 51, "452161e": 51, "49": [51, 84], "663612e": 51, "524214e": 51, "584459e": 51, "663610e": 51, "088418e": 51, "511958e": 51, "663609e": 51, "639430e": 51, "270902e": 51, "663608e": 51, "662611e": 51, "108397e": 51, "663607e": 51, "133700e": 51, "186767e": 51, "54": 51, "663605e": 51, "648141e": 51, "272349e": 51, "55": [51, 84], "663604e": 51, "557516e": 51, "090911e": 51, "56": [51, 84], "663603e": 51, "304213e": 51, "215131e": 51, "663602e": 51, "353809e": 51, "057021e": 51, "58": [51, 84], "663601e": 51, "968279e": 51, "325603e": 51, "59": [51, 83, 84], "663600e": 51, "367159e": 51, "059240e": 51, "663599e": 51, "610790e": 51, "334102e": 51, "61": 51, "663598e": 51, "787466e": 51, "628015e": 51, "62": [51, 84], "663596e": 51, "937777e": 51, "154166e": 51, "63": 51, "599432e": 51, "315190e": 51, "64": [51, 84], "663595e": 51, "813048e": 51, "670555e": 51, "65": [51, 58], "663594e": 51, "724600e": 51, "523409e": 51, "66": [51, 58, 64, 82, 83, 84], "663593e": 51, "081892e": 51, "011779e": 51, "67": [51, 84], "663592e": 51, "948732e": 51, "896260e": 51, "68": 51, "663591e": 51, "941833e": 51, "221188e": 51, "69": [51, 73], "663590e": 51, "213739e": 51, "673523e": 51, "663589e": 51, "127355e": 51, "529811e": 51, "71": 51, "663588e": 51, "349251e": 51, "235363e": 51, "72": [51, 84], "007084e": 51, "329722e": 51, "663587e": 51, "880265e": 51, "118744e": 51, "74": 51, "663586e": 51, "931950e": 51, "204723e": 51, "663585e": 51, "981309e": 51, "286832e": 51, "76": [51, 84], "663584e": 51, "952959e": 51, "576082e": 51, "77": 51, "544857e": 51, "560750e": 51, "78": [51, 82], "663583e": 51, "237579e": 51, "049564e": 51, "79": [51, 84], "663582e": 51, "382386e": 51, "290460e": 51, "646051e": 51, "065503e": 51, "663581e": 51, "197994e": 51, "983702e": 51, "663580e": 51, "072764e": 51, "775370e": 51, "83": 51, "994645e": 51, "645410e": 51, "84": [51, 84], "663579e": 51, "842721e": 51, "056248e": 51, "663578e": 51, "276486e": 51, "450691e": 51, "86": [51, 84], "737346e": 51, "217366e": 51, "87": [51, 73, 84], "663577e": 51, "282043e": 51, "123508e": 51, "663576e": 51, "020937e": 51, "689135e": 51, "431951e": 51, "709310e": 51, "663575e": 51, "052335e": 51, "077789e": 51, "500538e": 51, "823407e": 51, "663574e": 51, "063176e": 51, "095821e": 51, "93": [51, 84], "663573e": 51, "576367e": 51, "949549e": 51, "94": 51, "224681e": 51, "364492e": 51, "663572e": 51, "673221e": 51, "110670e": 51, "96": 51, "635561e": 51, "048017e": 51, "97": 51, "663571e": 51, "527236e": 51, "867807e": 51, "98": [51, 73], "788548e": 51, "638946e": 51, "663570e": 51, "727141e": 51, "536791e": 51, "127278e": 51, "202445e": 51, "101": 51, "663569e": 51, "637504e": 51, "387670e": 51, "922750e": 51, "862195e": 51, "103": 51, "663568e": 51, "076454e": 51, "117891e": 51, "104": 51, "911509e": 51, "843492e": 51, "105": 51, "663567e": 51, "403398e": 51, "998215e": 51, "106": [51, 84], "439790e": 51, "058755e": 51, "634542e": 51, "382735e": 51, "663566e": 51, "452203e": 51, "079401e": 51, "109": 51, "852991e": 51, "746137e": 51, "663565e": 51, "165490e": 51, "602434e": 51, "111": 51, "450250e": 51, "076149e": 51, "112": 51, "663564e": 51, "685294e": 51, "467159e": 51, "113": [51, 84], "821800e": 51, "694245e": 51, "114": [51, 84], "237390e": 51, "722040e": 51, "115": 51, "663563e": 51, "992842e": 51, "315219e": 51, "116": [51, 84], "166739e": 51, "604506e": 51, "117": 51, "086064e": 51, "470297e": 51, "118": [51, 84], "663562e": 51, "435945e": 51, "052346e": 51, "292497e": 51, "813711e": 51, "663561e": 51, "366209e": 51, "936334e": 51, "138746e": 51, "557935e": 51, "009637e": 51, "343153e": 51, "123": [51, 57], "663560e": 51, "386258e": 51, "969683e": 51, "927442e": 51, "206415e": 51, "081681e": 51, "463000e": 51, "126": [51, 84], "663559e": 51, "759123e": 51, "926406e": 51, "127": [51, 84], "890771e": 51, "145409e": 51, "128": [51, 65], "971315e": 51, "279398e": 51, "129": 51, "663558e": 51, "101983e": 51, "496771e": 51, "035645e": 51, "386414e": 51, "131": [51, 58], "984492e": 51, "301317e": 51, "132": [51, 58, 84], "663557e": 51, "849064e": 51, "076024e": 51, "133": [51, 58], "795703e": 51, "987255e": 51, "134": [51, 84], "624087e": 51, "701762e": 51, "135": 51, "689557e": 51, "810673e": 51, "663556e": 51, "644308e": 51, "735399e": 51, "137": [51, 84], "618007e": 51, "691644e": 51, "138": [51, 58, 84], "483013e": 51, "467075e": 51, "139": [51, 84], "663555e": 51, "708771e": 51, "842636e": 51, "013847e": 51, "350146e": 51, "141": [51, 84], "721217e": 51, "863339e": 51, "142": [51, 84], "663554e": 51, "027911e": 51, "373540e": 51, "143": [51, 84], "764565e": 51, "935449e": 51, "677151e": 51, "790030e": 51, "145": [51, 57, 84], "351982e": 51, "249094e": 51, "146": [51, 57, 61, 84], "663553e": 51, "423360e": 51, "367836e": 51, "147": 51, "541112e": 51, "563722e": 51, "148": [51, 84], "491601e": 51, "481358e": 51, "149": 51, "466407e": 51, "439446e": 51, "663552e": 51, "801524e": 51, "996929e": 51, "151": 51, "714107e": 51, "851507e": 51, "152": 51, "491257e": 51, "480784e": 51, "153": 51, "513799e": 51, "518282e": 51, "154": 51, "663551e": 51, "354539e": 51, "253345e": 51, "155": [51, 84], "233818e": 51, "052519e": 51, "156": [51, 84], "576219e": 51, "622121e": 51, "157": [51, 84], "452791e": 51, "416792e": 51, "663550e": 51, "262867e": 51, "100843e": 51, "316379e": 51, "189863e": 51, "295447e": 51, "155041e": 51, "161": 51, "283286e": 51, "134810e": 51, "162": 51, "569222e": 51, "610479e": 51, "163": 51, "663549e": 51, "172942e": 51, "951247e": 51, "164": 51, "399809e": 51, "328651e": 51, "165": 51, "229432e": 51, "045221e": 51, "166": 51, "326191e": 51, "206184e": 51, "167": 51, "663548e": 51, "209694e": 51, "012384e": 51, "168": 51, "372136e": 51, "282614e": 51, "169": [51, 84], "338395e": 51, "226484e": 51, "416497e": 51, "356410e": 51, "171": 51, "298576e": 51, "160242e": 51, "172": [51, 84], "663547e": 51, "190590e": 51, "980603e": 51, "167083e": 51, "941497e": 51, "174": [51, 84], "069425e": 51, "779038e": 51, "217780e": 51, "025834e": 51, "176": [51, 84], "140754e": 51, "897697e": 51, "177": 51, "663546e": 51, "160707e": 51, "930890e": 51, "178": [51, 84], "101798e": 51, "832892e": 51, "179": 51, "114904e": 51, "854694e": 51, "064022e": 51, "770049e": 51, "181": [51, 84], "258231e": 51, "540149e": 51, "182": 51, "213120e": 51, "018080e": 51, "183": 51, "663545e": 51, "164296e": 51, "936859e": 51, "184": [51, 84], "188762e": 51, "977559e": 51, "185": 51, "394153e": 51, "562760e": 51, "186": 51, "028656e": 51, "711216e": 51, "115348e": 51, "855431e": 51, "188": 51, "663544e": 51, "768310e": 51, "625002e": 51, "189": [51, 84], "021806e": 51, "699820e": 51, "086303e": 51, "807113e": 51, "191": [51, 84], "879008e": 51, "643416e": 51, "192": 51, "050210e": 51, "747071e": 51, "193": 51, "002463e": 51, "667641e": 51, "194": 51, "663543e": 51, "062747e": 51, "767925e": 51, "195": [51, 84], "348538e": 51, "555170e": 51, "196": 51, "992512e": 51, "329589e": 51, "197": 51, "558020e": 51, "590018e": 51, "198": [51, 84], "993772e": 51, "662507e": 51, "588499e": 51, "428734e": 51, "737134e": 51, "453459e": 51, "692289e": 51, "617643e": 51, "614437e": 51, "464513e": 51, "612639e": 51, "102965e": 51, "003963e": 51, "611291e": 51, "371098e": 51, "348827e": 51, "610468e": 51, "110558e": 51, "230389e": 51, "610198e": 51, "672927e": 51, "693743e": 51, "610130e": 51, "232417e": 51, "814742e": 51, "610090e": 51, "513455e": 51, "046887e": 51, "610002e": 51, "443507e": 51, "764057e": 51, "609996e": 51, "657071e": 51, "887869e": 51, "609948e": 51, "998735e": 51, "827807e": 51, "609695e": 51, "569217e": 51, "525962e": 51, "609533e": 51, "010779e": 51, "626881e": 51, "609520e": 51, "043897e": 51, "294681e": 51, "609465e": 51, "415246e": 51, "496718e": 51, "609386e": 51, "898605e": 51, "883745e": 51, "609324e": 51, "837052e": 51, "175060e": 51, "609298e": 51, "617826e": 51, "603564e": 51, "609184e": 51, "080015e": 51, "139305e": 51, "609083e": 51, "273206e": 51, "009411e": 51, "608988e": 51, "940805e": 51, "558681e": 51, "608853e": 51, "380030e": 51, "348223e": 51, "608844e": 51, "185045e": 51, "341930e": 51, "608824e": 51, "279113e": 51, "057868e": 51, "608819e": 51, "156821e": 51, "078753e": 51, "608783e": 51, "205746e": 51, "548567e": 51, "608764e": 51, "189894e": 51, "914259e": 51, "608755e": 51, "474607e": 51, "807303e": 51, "608737e": 51, "144227e": 51, "840760e": 51, "608676e": 51, "775335e": 51, "073291e": 51, "608638e": 51, "348020e": 51, "777116e": 51, "608627e": 51, "863136e": 51, "104023e": 51, "608529e": 51, "110230e": 51, "828482e": 51, "608487e": 51, "641106e": 51, "248184e": 51, "608409e": 51, "823638e": 51, "758383e": 51, "608373e": 51, "256641e": 51, "629519e": 51, "608338e": 51, "132444e": 51, "429691e": 51, "608310e": 51, "786649e": 51, "873484e": 51, "608260e": 51, "103848e": 51, "991794e": 51, "608206e": 51, "321265e": 51, "341279e": 51, "608201e": 51, "054747e": 51, "912648e": 51, "608195e": 51, "198335e": 51, "751739e": 51, "608193e": 51, "458736e": 51, "360328e": 51, "608159e": 51, "153759e": 51, "463587e": 51, "608115e": 51, "738314e": 51, "403523e": 51, "608108e": 51, "960032e": 51, "368161e": 51, "608081e": 51, "675447e": 51, "694254e": 51, "608072e": 51, "976340e": 51, "610383e": 51, "608046e": 51, "604130e": 51, "579515e": 51, "608020e": 51, "617036e": 51, "600226e": 51, "608014e": 51, "957795e": 51, "364188e": 51, "608011e": 51, "292411e": 51, "078211e": 51, "607998e": 51, "431795e": 51, "355831e": 51, "607964e": 51, "127054e": 51, "420225e": 51, "607947e": 51, "021878e": 51, "643126e": 51, "560621e": 51, "725288e": 51, "607900e": 51, "929781e": 51, "710793e": 51, "607890e": 51, "740229e": 51, "229659e": 51, "607858e": 51, "039550e": 51, "279306e": 51, "607836e": 51, "319545e": 51, "121612e": 51, "607826e": 51, "378947e": 51, "025624e": 51, "607808e": 51, "145102e": 51, "841105e": 51, "607776e": 51, "941743e": 51, "121889e": 51, "607743e": 51, "087422e": 51, "356037e": 51, "607741e": 51, "310249e": 51, "106541e": 51, "607738e": 51, "682752e": 51, "705425e": 51, "607691e": 51, "913936e": 51, "684709e": 51, "607671e": 51, "288855e": 51, "072055e": 51, "607654e": 51, "002448e": 51, "611590e": 51, "607641e": 51, "209492e": 51, "319792e": 51, "607632e": 51, "588467e": 51, "984199e": 51, "607619e": 51, "050388e": 51, "294196e": 51, "607618e": 51, "417493e": 51, "513973e": 51, "607598e": 51, "210509e": 51, "946012e": 51, "607591e": 51, "392914e": 51, "062009e": 51, "607579e": 51, "759587e": 51, "247415e": 51, "607574e": 51, "760280e": 51, "437356e": 51, "607556e": 51, "146469e": 51, "843012e": 51, "607550e": 51, "689456e": 51, "930984e": 51, "065631e": 51, "535705e": 51, "607539e": 51, "555681e": 51, "053852e": 51, "607528e": 51, "177470e": 51, "153798e": 51, "607527e": 51, "306068e": 51, "529648e": 51, "607514e": 51, "816045e": 51, "256440e": 51, "607511e": 51, "301970e": 51, "700442e": 51, "607504e": 51, "281072e": 51, "881840e": 51, "607503e": 51, "821886e": 51, "257370e": 51, "607480e": 51, "403013e": 51, "255315e": 51, "169298e": 51, "879624e": 51, "607473e": 51, "235982e": 51, "809227e": 51, "607470e": 51, "717105e": 51, "760195e": 51, "148402e": 51, "883374e": 51, "reg1": [51, 72], "reg2": [51, 72], "gel2": 51, "gcg": [51, 65, 83], "693084e": 51, "610202e": 51, "147342e": 51, "288260e": 51, "609508e": 51, "309685e": 51, "936474e": 51, "609484e": 51, "524885e": 51, "454278e": 51, "609477e": 51, "863641e": 51, "218444e": 51, "609475e": 51, "433633e": 51, "307397e": 51, "609474e": 51, "332412e": 51, "019185e": 51, "950826e": 51, "749276e": 51, "609473e": 51, "508393e": 51, "427718e": 51, "859971e": 51, "265041e": 51, "337432e": 51, "980981e": 51, "388": [51, 52, 84], "plot_optim_otreg": [51, 52], "684": 52, "auto_exampl": 52, "adrien": [53, 62, 82], "corenflo": [53, 62, 82], "aalto": 53, "fi": [53, 57], "n_seed": [53, 54], "n_projections_arr": [53, 54], "res_mean": [53, 54], "res_std": [53, 54], "xscale": [53, 54], "confid": [53, 54], "inverv": [53, 54], "plot_vari": [53, 55], "mgrid": 54, "30j": 54, "plot_surfac": 54, "set_zlim": 54, "tick": 54, "ssw_1": 54, "379": [54, 55, 84], "plot_variance_ssw": [54, 55], "394": [55, 84], "auto_examples_sl": 55, "uot": [56, 75, 82, 83], "465": [56, 61], "plot_uot_1d": [56, 61], "n_weight": 57, "weight_list": 57, "909": 57, "kv": 57, "914": 57, "ktu": 57, "921": 57, "595": 57, "974": 57, "615": 57, "455": 57, "361": [57, 84], "plot_uot_barycenter_1d": [57, 61], "n_nois": [58, 60], "cov": 58, "w0": 58, "partial_wasserstein": [58, 60, 83], "entropic_partial_wasserstein": [58, 83], "partial_w_dist": 58, "47910182636916243": 58, "5034205945081646": 58, "res0": 58, "partial_gromov_wasserstein": [58, 83], "entropic_partial_gromov_wasserstein": [58, 83], "partial_gw_dist": [58, 73], "611280e": 58, "345385e": 58, "584346e": 58, "659015e": 58, "38071035222889": 58, "59015303098326": 58, "plot_partial_wass_and_gromov": [58, 61], "overlap": [58, 83], "sinc": [58, 71, 83, 84], "explicitli": [58, 84], "478237e": 58, "894947e": 58, "251769e": 58, "596705e": 58, "808371e": 58, "136110e": 58, "859072e": 58, "136043e": 58, "11743971783944865": 58, "9136043100219415": 58, "348": [58, 61], "wu": [59, 75, 79, 82], "f\u00e9vott": [59, 75, 79, 82], "through": [59, 75, 79, 82, 83], "haoran": 59, "final_gamma": 59, "t_list": [59, 75], "g_list": [59, 75], "regularization_path": 59, "semi_relax": [59, 75], "t_list2": 59, "g_list2": 59, "selected_gamma": 59, "compute_transport_plan": 59, "ell_2": [59, 60, 79], "g_list_v": 59, "l_2": 59, "033": [59, 61], "plot_regpath": [59, 61], "_f": [60, 83], "div": [60, 79], "ell_1": 60, "reg_m_kl": 60, "reg_m_l2": 60, "entropic_kl_uot": 60, "kl_uot": 60, "mm_unbalanc": 60, "l2_uot": 60, "partial_ot": 60, "326": [60, 61, 84], "plot_unbalanced_ot": [60, 61], "317": [61, 84], "auto_examples_unbalanc": 61, "wrapper": [62, 83], "alexandr": [62, 82], "ci": [62, 84], "michael": 62, "l\u00e9o": [62, 82], "gautheron": [62, 82], "nathali": [62, 82], "gayraud": [62, 82], "antoin": [62, 77, 82], "debug": [62, 84], "alain": [62, 82], "jcpot": [62, 82, 84], "kerdoncuff": [62, 70, 82, 83], "minhui": 62, "huang": [62, 67, 82, 83], "robust": [62, 67, 82, 83, 84], "nathan": [62, 84], "cassereau": [62, 84], "camil": 62, "le": 62, "coz": 62, "theo": 62, "gnassoun": 62, "wassertstein": 62, "lot": [62, 84], "would": [62, 63, 84], "variou": [62, 80, 84], "mathieu": [62, 77, 84], "financ": [62, 82], "manpow": [62, 82], "partner": [62, 82], "goal": [63, 78], "agnost": 63, "whether": [63, 70, 71, 80], "nonetheless": 63, "achiev": 63, "imit": 63, "As": [63, 71, 83, 84], "convent": [63, 65], "list_to_arrai": [63, 80], "get_backend": 63, "know": 63, "infer": [63, 70], "argument": [63, 65, 72, 80, 84], "activ": [63, 64, 75], "op": 63, "numpy_op": 63, "np_config": 63, "enable_numpy_behavior": 63, "intel": 63, "xeon": 63, "6248": 63, "50ghz": 63, "tesla": 63, "v100": 63, "sxm2": 63, "32gb": 63, "date": [63, 84], "8th": 63, "316": [63, 84], "pull": [63, 84], "bitsize32": 63, "bit": 63, "devicecpugpu": 63, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 63, "00080": 63, "00220": 63, "01510": 63, "00950": 63, "01930": 63, "00510": 63, "0293": 63, "00050": 63, "00130": 63, "00970": 63, "00570": 63, "01150": 63, "00290": 63, "0173": 63, "5000": 63, "00090": 63, "00160": 63, "01100": 63, "00580": 63, "0166": 63, "00210": 63, "01450": 63, "00560": 63, "01180": 63, "0168": 63, "20000": [63, 78], "00690": 63, "00430": 63, "02780": 63, "00590": 63, "00300": 63, "0165": 63, "50000": [63, 75], "07070": 63, "03140": 63, "13950": 63, "00740": 63, "01250": 63, "00350": 63, "0198": 63, "nbsp": 63, "bitsize64": 63, "00200": 63, "01540": 63, "00930": 63, "01910": 63, "0328": 63, "00940": 63, "01140": 63, "0169": 63, "00170": 63, "01200": 63, "01160": 63, "00340": 63, "00270": 63, "01770": 63, "0167": 63, "01460": 63, "00750": 63, "04360": 63, "14670": 63, "05680": 63, "24680": 63, "00770": 63, "00450": 63, "0204": 63, "proper": [63, 84], "typeerror": 63, "get_backend_list": 63, "to_numpi": 63, "abstract": 63, "jaxbackend": 63, "numpybackend": 63, "torchbackend": [63, 84], "cupybackend": 63, "tensorflowbackend": 63, "__name__": 63, "attribut": [63, 65, 70, 84], "__type__": 63, "rtol": 63, "equal_nan": 63, "evalu": [63, 64], "evenli": 63, "argsort": 63, "array_equ": 63, "assert_same_dtype_devic": 63, "arctang": 63, "arctan2": 63, "bitsiz": 63, "a_min": 63, "a_max": 63, "limit": [63, 84], "sequenc": 63, "exist": [63, 64, 83, 84], "row": [63, 64, 71, 75, 80], "col": 63, "cumsum": 63, "device_typ": 63, "dtype_devic": 63, "einsum": 63, "subscript": 63, "operand": 63, "einstein": 63, "summat": 63, "eliminate_zero": 63, "entri": 63, "smaller": [63, 84], "csr_matrix": 63, "exponenti": [63, 64], "flip": 63, "from_numpi": 63, "fill_valu": 63, "inv": 63, "is_floating_point": 63, "isfinit": 63, "infin": 63, "Not": 63, "isinf": 63, "isnan": 63, "nan": 63, "isspars": 63, "kl_div": 63, "stat": 63, "specifi": [63, 65, 80, 84], "logarithm": 63, "logsumexp": [63, 67, 83], "amax": 63, "arithmet": 63, "amin": 63, "frobeniu": 63, "outer": 63, "expon": 63, "prod": 63, "qr": 63, "repeat": 63, "searchsort": 63, "side": [63, 75], "insert": 63, "set_gradi": [63, 84], "equat": [63, 64, 70, 78, 83], "scalar": [63, 64], "sort2": 63, "ngeativ": 63, "root": [63, 82, 83], "definit": [63, 83], "squeez": 63, "deviat": [63, 70], "take_along_axi": 63, "arr": 63, "gather": 63, "tile": 63, "rep": 63, "tocsr": 63, "compress": 63, "todens": 63, "trace": 63, "dim0": 63, "dim1": 63, "swap": 63, "uniqu": [63, 71, 83], "chosen": [63, 80, 83], "zero_pad": 63, "pad_width": 63, "pad": 63, "cp": 63, "s_": 64, "empirical_sinkhorn_diverg": [64, 83, 84], "barycenter_sinkhorn": 64, "barycenter_stabil": 64, "tau": [64, 67, 79], "10000000000": 64, "mast": 64, "strength": 64, "width": 64, "height": 64, "stabthr": 64, "goe": [64, 82, 83], "butscher": [64, 82, 83], "nguyen": [64, 82, 83], "guiba": [64, 82, 83], "effici": [64, 71, 82, 83, 84], "geometr": [64, 82, 83], "islazi": 64, "batchsiz": 64, "memori": [64, 78, 83, 84], "tupl": [64, 72], "99977301e": 64, "26989344e": 64, "empirical_sinkhorn2": [64, 83], "53978687e": 64, "w_a": 64, "gamma_a": 64, "m_a": 64, "w_b": 64, "gamma_b": 64, "m_b": 64, "resp": 64, "_a": [64, 75], "_b": 64, "symmetr": [64, 70, 83, 84], "499887176049052": 64, "artfici": [64, 82, 83], "frechet": [64, 71], "w_i": [64, 71], "measure_weight": [64, 71], "k_i": [64, 71], "There": [64, 71, 83], "arnaud": [64, 71], "doucet": [64, 71, 82, 83], "\u00e1lvarez": [64, 71, 82], "esteban": [64, 71, 82], "pedro": [64, 71, 82], "744": [64, 71, 82], "762": [64, 71, 82], "geometricbar": 64, "alldistribt": 64, "geometricmean": 64, "jcpot_barycent": 64, "lambda_k": 64, "gamma_k": 64, "_n": 64, "th": [64, 75, 77], "relat": [64, 82, 83, 84], "n_k": 64, "unknown": 64, "nsk": 64, "control": [64, 65], "devi": [64, 65], "projc": 64, "constrint": 64, "projr": 64, "maxfun": 64, "pgtol": 64, "written": [64, 71], "u_i": 64, "ldot": 64, "v_j": 64, "regularis": 64, "kept": [64, 84], "bfg": [64, 77, 79, 83], "lbfg": 64, "final": [64, 71, 83, 84], "accuraci": 64, "gain": 64, "isn": 64, "epsilon0": 64, "warmstart": 64, "print_period": 64, "decreas": [64, 65], "tabl": 64, "m0": 64, "h0": 64, "reg0": 64, "dh": 64, "m_0": 64, "_0": 64, "n_atom": 64, "dim_prior": 64, "trust": [64, 67], "nakhostin": [64, 82], "corpetti": [64, 82], "planetari": [64, 82], "whorkshop": [64, 82], "hyperspectr": [64, 82], "signal": [64, 82, 83], "remot": [64, 82], "whisper": [64, 82], "distribution_estimation_uniform": 65, "emd_laplac": 65, "knn": 65, "sim_param": 65, "n_": 65, "s_i": 65, "s_j": 65, "n_t": 65, "t_i": 65, "t_j": 65, "neighbor": 65, "bandwidth": 65, "workshop": [65, 82, 83], "otml": [65, 82, 83], "joint_ot_mapping_kernel": [65, 83], "kerneltyp": 65, "verbose2": 65, "nonlinear": [65, 83], "2_f": 65, "2_": 65, "jointli": 65, "constant": [65, 70, 71, 72], "supplementari": 65, "materi": 65, "conditionn": 65, "bcd": [65, 70], "joint_ot_mapping_linear": [65, 83], "neutral": 65, "sinkhorn_l1l2_gl": [65, 83], "regula": 65, "generalis": [65, 71], "keyword": [65, 80], "store": 65, "transform_label": 65, "inverse_transform_label": 65, "y_": [65, 70], "y_t": 65, "unlabel": [65, 73, 82, 83], "transp_x": 65, "transp_xt": 65, "propag": 65, "transp_i": 65, "soft": 65, "nb_class": 65, "similarity_param": 65, "max_inner_it": 65, "inner_tol": 65, "distribution_estim": 65, "out_of_sample_map": 65, "disp": 65, "occur": [65, 83], "pairwis": [65, 70], "kind": [65, 71, 83], "emploi": 65, "limit_max": 65, "10e": 65, "n_class": 65, "849": 65, "858": 65, "nk_source_sampl": 65, "sigma_": [65, 69], "sigma_t": [65, 69], "remark": [65, 69, 83], "daigon": 65, "covari": [65, 66, 69, 83], "knott": [65, 69, 82, 83], "smith": [65, 69, 82, 83], "theori": [65, 69, 82, 83], "1984": [65, 69, 82, 83], "mapping_": 65, "lpl1": 65, "infti": 65, "unbalancedsinkhorntransport": 65, "deviaton": 66, "classif": 66, "reduct": [67, 82, 84], "fisher": [67, 73, 83], "dimensionn": 67, "ridg": 67, "proj": [67, 76], "projection_robust_wasserstein": 67, "u0": 67, "max_": [67, 75, 77, 78], "pi_": 67, "stiefel": [67, 83], "stepsiz": 67, "riemannian": [67, 82, 83], "ma": [67, 82, 83], "lai": [67, 82, 83], "split_class": 67, "split": 67, "sinkhorn_method": 67, "limits_i": 67, "limits_": 67, "neq": [67, 83], "steepest": 67, "trustregion": 67, "region": 67, "normalis": 67, "wasserstaiun": 67, "1608": [67, 82, 83], "08063": [67, 82, 83], "bures_wasserstein_dist": 69, "ct": 69, "bure": [69, 84], "lvert": 69, "_t": 69, "rvert": 69, "tr": 69, "bures_wasserstein_map": [69, 83], "empirical_bures_wasserstein_dist": 69, "gw_distance_estim": 70, "nb_samples_p": 70, "nb_samples_q": 70, "unbias": 70, "csr": 70, "replac": [70, 83, 84], "emonet": [70, 82, 83], "sebban": 70, "marc": [70, 82, 83], "mlj": 70, "entropic_gromov_barycent": [70, 83], "entropic_gromov_wasserstein2": 70, "fixed_structur": 70, "fixed_featur": 70, "init_x": 70, "eq": [70, 77], "kei": 70, "cdict_init": 70, "ydict_init": 70, "fgw_": 70, "Such": 70, "_d": 70, "distibut": 70, "whose": [70, 71, 75], "cdict": 70, "ydict": 70, "randomli": 70, "nonneg": 70, "strategi": 70, "consecut": 70, "conjug": [70, 77], "cdict_best_st": 70, "compos": 70, "ydict_best_st": 70, "w_d": 70, "emb": 70, "depict": 70, "span": [70, 71], "current_loss": 70, "gw_2": 70, "gwggrad": 70, "constc": [70, 72], "hc1": 70, "hc2": 70, "proposit": [70, 77, 78], "h1": 70, "gwloss": 70, "init_matrix": 70, "otim": 70, "gromow": [70, 83], "read": [70, 82], "f_1": 70, "f_2": 70, "h_1": 70, "h_2": 70, "2b": 70, "threshold_plan": 70, "frank": 70, "wolf": 70, "_iter": 70, "pn": 70, "complex": [70, 83], "delet": [70, 75], "violat": [70, 71, 83], "nb_samples_grad": 70, "tensor_product": 70, "ten": 70, "update_feature_matrix": 70, "update_kl_loss": 70, "update_square_loss": 70, "update_structure_matrix": 70, "alpha0": [71, 72], "beta0": 71, "below": [71, 82, 84], "basic": 71, "alpha_0": 71, "beta_0": 71, "check_number_thread": 71, "request": [71, 76, 82], "valid": 71, "estimate_dual_null_weight": 71, "rather": 71, "coars": 71, "emd_c": 71, "discard": 71, "amount": [71, 73, 83, 84], "max_j": 71, "max_i": 71, "beta_j": [71, 77], "y_init": 71, "nu_i": 71, "b_l": 71, "y_l": 71, "a_": 71, "d_i": 71, "p_i": 71, "p_ix_": 71, "rightarrow": 71, "don": 71, "ill": 71, "anywai": 71, "ransport": [72, 81], "reg_1": 72, "reg_2": 72, "line_search_armijo": 72, "xk": 72, "pk": 72, "gfk": 72, "old_fval": 72, "alpha_min": 72, "alpha_max": 72, "x_k": 72, "p_k": 72, "const": 72, "fc": 72, "fa": 72, "solve_1d_linesearch_quad": 72, "bx": 72, "solve_linesearch": 72, "deltag": 72, "mi": [72, 82], "f_val": 72, "gc": 72, "fw": 72, "useless": [72, 84], "costfr": 73, "initialis": 73, "entropic_partial_gromov_wasserstein2": 73, "gwgrad_parti": 73, "n_p": 73, "n_u": 73, "nb_dummi": 73, "gwloss_parti": 73, "thre": 73, "dummi": [73, 84], "instabl": 73, "popul": 73, "partial_gromov_wasserstein2": 73, "especi": [73, 83], "smoother": 73, "repartit": 73, "reservoir": [73, 83], "caffarelli": [73, 82, 83], "mccann": [73, 82, 83], "boundari": [73, 82, 83], "amper": [73, 82, 83], "obstacl": [73, 82, 83], "annal": [73, 82, 83], "673": [73, 82, 83], "partial_wasserstein_lagrang": 73, "partial_wasserstein2": [73, 83], "rao": 73, "tune": 73, "shown": [74, 83], "na": 74, "thr": 74, "noth": 74, "complement_schur": 75, "m_current": 75, "id_pop": 75, "schur": 75, "complement": 75, "aris": 75, "bmatrix": 75, "m_k": 75, "h_a": 75, "th_a": 75, "previou": 75, "backslash": 75, "r_": 75, "depriv": 75, "compute_next_remov": 75, "current_gamma": 75, "largest": 75, "vanish": [75, 83], "phi_j": 75, "delta_j": 75, "intercept": 75, "slope": 75, "next_removal_gamma": 75, "next_removal_index": 75, "gamma_list": 75, "pi_list": 75, "piecewis": 75, "flatten": 75, "19722222": 75, "05555556": 75, "24722222": 75, "construct_augmented_h": 75, "active_index": 75, "hc": 75, "hrhr": 75, "augment": 75, "_h": 75, "h_": 75, "h_r": 75, "h_c": 75, "h_augment": 75, "fully_relaxed_path": 75, "itmax": 75, "reformul": 75, "min_t": 75, "99958333e": 75, "00000000e": 75, "88888889e": 75, "99938889e": 75, "ot_next_gamma": 75, "hth": 75, "hty": 75, "inact": 75, "next_gamma": 75, "next_active_index": 75, "recast_ot_as_lasso": 75, "recast": 75, "1_m": 75, "1_n": 75, "particularli": [75, 83], "uot2": 75, "recast_semi_relaxed_as_lasso": 75, "hr": 75, "auxiliari": 75, "constitut": 75, "semi_relaxed_next_gamma": 75, "phi_u": 75, "delta_u": 75, "hra": 75, "ri": 75, "ra": 75, "ith": 75, "lagrang": [75, 80], "semi_relaxed_path": 75, "99980556e": 75, "94444444e": 75, "get_random_project": 76, "unit": [76, 83], "ue": 76, "proc": 77, "1710": 77, "06276": 77, "mblondel": 77, "dual_obj_grad": 77, "regul": 77, "delta_omega": 77, "grad_alpha": 77, "grad_beta": 77, "get_plan_from_du": 77, "retriev": 77, "get_plan_from_semi_du": 77, "projection_simplex": 77, "substack": 77, "z_i": 77, "z_j": 77, "semi_dual_obj_grad": 77, "max_omega": 77, "decent": 77, "nbb": 77, "sinhorn": 77, "smooth_ot_semi_du": [77, 83], "solve_du": 77, "solve_semi_du": 77, "negentropi": 77, "sup_": 77, "nabla": 77, "intend": 77, "appar": 77, "squaredl2": 77, "averaged_sgd_entropic_transport": 78, "300000": 78, "contin": 78, "alg": 78, "ave_v": 78, "53942342e": 78, "98640673e": 78, "75945647e": 78, "27664307e": 78, "21556999e": 78, "26350515e": 78, "30491795e": 78, "36017394e": 78, "54070702e": 78, "63581358e": 78, "29581672e": 78, "32812798e": 78, "60578198e": 78, "35916645e": 78, "28023223e": 78, "05336238e": 78, "86808864e": 78, "59774324e": 78, "08702729e": 78, "21359007e": 78, "17218856e": 78, "12931802e": 78, "87962526e": 78, "18342700e": 78, "14237512e": 78, "67487857e": 78, "23016955e": 78, "38291052e": 78, "batch_grad_du": 78, "batch_alpha": 78, "batch_beta": 78, "partial_": 78, "b_": 78, "l_v": 78, "b_v": 78, "l_u": 78, "b_u": 78, "30000": 78, "71759102": 78, "57057384": 78, "85576566": 78, "1208211": 78, "59190466": 78, "197148": 78, "17805133": 78, "49741367": 78, "57478564": 78, "40075528": 78, "75890102": 78, "09730063e": 78, "38169324e": 78, "50365455e": 78, "72731415e": 78, "58432437e": 78, "89881299e": 78, "09558411e": 78, "35469849e": 78, "26489515e": 78, "15536035e": 78, "99778211e": 78, "02601593e": 78, "05390622e": 78, "31085068e": 78, "65191787e": 78, "55812785e": 78, "82299812e": 78, "12099102e": 78, "44989098e": 78, "37719187e": 78, "06266486e": 78, "16230494e": 78, "26215141e": 78, "81514609e": 78, "06713990e": 78, "98139808e": 78, "46829338e": 78, "62371424e": 78, "c_transform_entrop": 78, "coordinate_grad_semi_du": 78, "bewar": 78, "dual_loss": 78, "sag_entropic_transport": 78, "sgd_entropic_regular": 78, "64171798": 78, "27932201": 78, "78132257": 78, "15638935": 78, "54888354": 78, "03663469": 78, "20595781": 78, "51207194": 78, "58033189": 78, "28922676": 78, "26859736": 78, "97276541e": 78, "81248547e": 78, "22136048e": 78, "95442423e": 78, "23494310e": 78, "43286263e": 78, "06927079e": 78, "82389139e": 78, "07542414e": 78, "67897769e": 78, "48904999e": 78, "72030247e": 78, "26271990e": 78, "53375455e": 78, "16535024e": 78, "88812650e": 78, "60423265e": 78, "89585256e": 78, "81267087e": 78, "39458256e": 78, "37557504e": 78, "85189176e": 78, "72335760e": 78, "55491279e": 78, "33096109e": 78, "11683954e": 78, "02962051e": 78, "43097516e": 78, "64057733": 78, "2683513": 78, "75610161": 78, "16024284": 78, "54926534": 78, "0514201": 78, "19958936": 78, "51372571": 78, "58843489": 78, "27993921": 78, "24344807": 78, "97377795e": 78, "86706853e": 78, "15682001e": 78, "82586997e": 78, "19566963e": 78, "42016865e": 78, "02777272e": 78, "68823708e": 78, "00379244e": 78, "56562018e": 78, "40462171e": 78, "63579656e": 78, "28626062e": 78, "60031599e": 78, "13193826e": 78, "67977735e": 78, "61972739e": 78, "94609051e": 78, "77886693e": 78, "36046648e": 78, "44810042e": 78, "89476742e": 78, "73285847e": 78, "51826036e": 78, "30118293e": 78, "12398660e": 78, "95148998e": 78, "26247246e": 78, "barycenter_unbalanced_sinkhorn": 79, "barycenter_unbalanced_stabil": [79, 83], "absorpt": 79, "lbfgsb_unbalanc": 79, "reg_div": 79, "regm_div": 79, "div_m": 79, "quantifi": 79, "mm_unbalanced2": 79, "b_i": 79, "thershold": 79, "check_param": 80, "miss": 80, "check_random_st": 80, "turn": 80, "singleton": 80, "alreadi": [80, 83, 84], "valueerror": 80, "clean_zero": [80, 84], "compon": [80, 83], "cost_norm": 80, "median": 80, "loglog": 80, "lin_squar": 80, "multipli": 80, "euclidean_dist": 80, "pair": 80, "n_samples_1": 80, "n_samples_2": 80, "ambient": 80, "y1": 80, "label_norm": 80, "smallest": 80, "lst": 80, "parmap": 80, "nproc": 80, "multiprocess": 80, "closest": 80, "orthogon": 80, "get_param": 80, "deep": [80, 83], "subobject": 80, "param": 80, "set_param": 80, "nest": 80, "pipelin": 80, "latter": 80, "__": 80, "sparse_plan": 80, "lazy_plan": 80, "a_to_b": 80, "b_to_a": 80, "citat": 80, "plain": 80, "bibtex": [80, 82], "symbol": 80, "keop": 80, "lazytensor": 80, "marginal_a": 80, "marginal_b": 80, "potential_a": 80, "potential_b": 80, "extra": 80, "decor": 80, "mark": 80, "blob": 80, "instanti": [80, 84], "parenthes": 80, "some_funct": 80, "sever": [82, 83, 84], "websit": 82, "jmlr": [82, 84], "aur\u00e9li": 82, "nemo": 82, "fournier": 82, "antoni": 82, "schutz": 82, "danica": 82, "sutherland": 82, "alexand": 82, "tong": 82, "articl": 82, "flamary2021pot": 82, "aur": 82, "lie": [82, 83], "year": [82, 83, 84], "volum": 82, "url": 82, "v22": 82, "451": 82, "linux": [82, 84], "macosx": [82, 84], "window": [82, 84], "cython": [82, 83, 84], "latest": 82, "archiv": 82, "abl": 82, "easier": [82, 83], "wd": 82, "wd_reg": 82, "t_reg": [82, 83], "ba": 82, "question": 82, "slack": 82, "channel": 82, "gitter": 82, "bug": [82, 84], "2292": [82, 83], "2300": [82, 83], "agueh": [82, 83], "904": [82, 83], "924": [82, 83], "36th": [82, 83], "38th": [82, 83], "mjl": [82, 83], "pointer": [83, 84], "concret": 83, "book": 83, "ml": 83, "gaspard": 83, "1781": 83, "move": [83, 84], "overal": 83, "difficult": 83, "kantorovitch": 83, "aspect": 83, "share": 83, "disjoint": 83, "favor": 83, "popular": 83, "jensen": 83, "shannon": 83, "meaning": 83, "becam": 83, "overcom": 83, "spectra": 83, "itself": 83, "criterion": 83, "context": 83, "recent": [83, 84], "rapidli": 83, "grow": 83, "novel": [83, 84], "abil": 83, "extend": 83, "interfac": 83, "yet": [83, 84], "submodul": [83, 84], "configur": 83, "proven": 83, "nearli": 83, "still": [83, 84], "geomloss": 83, "lipschitz": 83, "exactli": 83, "filter": 83, "minibtach": 83, "wasserstsein": 83, "quit": [83, 84], "known": 83, "affin": 83, "hi": 83, "semin": 83, "strong": 83, "procedur": 83, "slower": 83, "implmement": 83, "variant": [83, 84], "tu": 83, "kullbach": 83, "similarli": 83, "pure": 83, "speed": [83, 84], "effect": 83, "densifi": 83, "lost": 83, "soon": 83, "_q": 83, "forc": 83, "choic": [83, 84], "major": [83, 84], "long": 83, "howev": 83, "w_kw": 83, "mu_k": 83, "clearli": 83, "b_k": 83, "linprog": 83, "cvxopt": [83, 84], "brought": 83, "brenier": 83, "eponym": 83, "theorem": 83, "basetransport": [83, 84], "classifi": [83, 84], "xs_map": 83, "inherit": 83, "linearli": 83, "projector": 83, "min_p": 83, "mu_i": 83, "mu_j": 83, "constrain": 83, "hard": [83, 84], "w_u": 83, "interestingli": 83, "fr\u00e9chet": 83, "w_kw_u": 83, "barycenter_unbalanced_sinkhorn_unbalanc": 83, "surplu": 83, "sent": 83, "resolut": 83, "c1_": 83, "c2_": 83, "realign": 83, "ck": 83, "fusion": 83, "coin": 83, "partli": 83, "seamlessli": [83, 84], "en": 83, "incur": 83, "far": 83, "longer": 83, "hopefulli": [83, 84], "disappear": 83, "becom": 83, "fulli": 83, "importerror": 83, "shortli": 83, "readm": [83, 84], "tri": [83, 84], "quicker": [83, 84], "nterpol": 83, "cc": 83, "9386": 83, "www": 83, "toronto": 83, "annals2010": 83, "2002": 83, "08276": 83, "mlr": 83, "press": 83, "v97": 83, "liutkus19a": 83, "434": 84, "428": 84, "372": 84, "376": 84, "387": 84, "395": 84, "393": 84, "371": 84, "373": 84, "assum": 84, "374": 84, "hit": 84, "stderr": 84, "cerr": 84, "stream": 84, "377": 84, "378": 84, "go": 84, "beyond": 84, "certain": 84, "slightli": 84, "46k": 84, "roughli": 84, "381": 84, "mismatch": 84, "386": 84, "389": 84, "391": 84, "around": 84, "402": 84, "built": 84, "403": 84, "setuptool": 84, "408": 84, "409": 84, "404": 84, "412": 84, "413": 84, "render": 84, "subcal": 84, "421": 84, "break": 84, "try": 84, "424": 84, "425": 84, "notabl": 84, "less": 84, "background": 84, "autodiff": 84, "front": 84, "358": 84, "brand": 84, "357": 84, "minigalleri": 84, "334": 84, "336": 84, "341": 84, "319": 84, "362": 84, "364": 84, "363": 84, "valfunct": 84, "337": 84, "338": 84, "abi": 84, "old": 84, "346": 84, "349": 84, "feed": 84, "345": 84, "backpropag": 84, "351": 84, "352": 84, "tag": 84, "332": 84, "global": 84, "namespac": 84, "331": 84, "333": 84, "enabl": 84, "bring": 84, "wheel": 84, "older": 84, "realli": 84, "315": 84, "code_of_conduct": 84, "322": 84, "308": 84, "305": 84, "306": 84, "309": 84, "sinkhornl1l2": 84, "311": 84, "313": 84, "3018": 84, "novemb": 84, "nice": 84, "mechan": 84, "earli": 84, "moment": 84, "ott": 84, "devias": 84, "sinkorn": 84, "simplifi": 84, "pyproject": 84, "toml": 84, "pe": 84, "aarch64": 84, "raspberri": 84, "android": 84, "phone": 84, "maco": 84, "arm": 84, "processor": 84, "softwar": 84, "cite": 84, "improv": 84, "particular": 84, "usual": 84, "peopl": 84, "kamel": 84, "guerda": 84, "ai": 84, "idri": 84, "249": 84, "282": 84, "294": 84, "302": 84, "304": 84, "303": 84, "274": 84, "267": 84, "291": 84, "275": 84, "293": 84, "lazi": 84, "259": 84, "cleanup": 84, "298": 84, "smartphon": 84, "238": 84, "236": 84, "253": 84, "202": 84, "203": 84, "262": 84, "introductori": 84, "leak": 84, "254": 84, "284": 84, "287": 84, "288": 84, "278": 84, "258": 84, "234": 84, "241": 84, "242": 84, "215": 84, "281": 84, "286": 84, "infeas": 84, "217": 84, "201": 84, "207": 84, "208": 84, "codecov": 84, "296": 84, "flake8": 84, "setup": 84, "flag": 84, "made": 84, "organ": 84, "own": 84, "host": 84, "offer": 84, "readthedoc": 84, "beauti": 84, "huge": 84, "correctli": 84, "travi": 84, "simpler": 84, "laplac": 84, "acknoledg": 84, "231": 84, "232": 84, "clean": 84, "bad": 84, "wassertein": 84, "jump": 84, "wild": 84, "state": 84, "fundament": 84, "month": 84, "until": 84, "python3stat": 84, "labeld": 84, "visibl": 84, "relev": 84, "64bit": 84, "acknowledg": 84, "past": 84, "manylinux": 84, "sep": 84, "among": 84, "rewrit": 84, "unmaintain": 84, "cudamat": 84, "keed": 84, "were": 84, "happi": 84, "stai": 84, "qualiti": 84, "stuff": 84, "markdown": 84, "pipi": 84, "renam": 84, "compliant": 84, "big": 84, "un": 84, "plug": 84, "unus": 84, "unicodedecodeerror": 84, "ascii": 84, "pytest": 84, "pep": 84, "du": 84, "jul": 84, "reloc": 84, "removimg": 84, "apr": 84, "tarnsport": 84, "paralel": 84, "jan": 84, "tweak": 84, "nov": 84, "oct": 84}, "objects": {"": [[2, 0, 0, "-", "ot"]], "ot": [[63, 0, 0, "-", "backend"], [2, 3, 1, "", "barycenter"], [2, 3, 1, "", "barycenter_unbalanced"], [2, 3, 1, "", "binary_search_circle"], [64, 0, 0, "-", "bregman"], [65, 0, 0, "-", "da"], [66, 0, 0, "-", "datasets"], [2, 3, 1, "", "dist"], [67, 0, 0, "-", "dr"], [2, 3, 1, "", "emd"], [2, 3, 1, "", "emd2"], [2, 3, 1, "", "emd2_1d"], [2, 3, 1, "", "emd_1d"], [68, 0, 0, "-", "factored"], [2, 3, 1, "", "factored_optimal_transport"], [2, 3, 1, "", "fused_gromov_wasserstein"], [2, 3, 1, "", "fused_gromov_wasserstein2"], [69, 0, 0, "-", "gaussian"], [70, 0, 0, "-", "gromov"], [2, 3, 1, "", "gromov_barycenters"], [2, 3, 1, "", "gromov_wasserstein"], [2, 3, 1, "", "gromov_wasserstein2"], [71, 0, 0, "-", "lp"], [2, 3, 1, "", "max_sliced_wasserstein_distance"], [72, 0, 0, "-", "optim"], [73, 0, 0, "-", "partial"], [74, 0, 0, "-", "plot"], [75, 0, 0, "-", "regpath"], [2, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [2, 3, 1, "", "sinkhorn"], [2, 3, 1, "", "sinkhorn2"], [2, 3, 1, "", "sinkhorn_lpl1_mm"], [2, 3, 1, "", "sinkhorn_unbalanced"], [2, 3, 1, "", "sinkhorn_unbalanced2"], [76, 0, 0, "-", "sliced"], [2, 3, 1, "", "sliced_wasserstein_distance"], [2, 3, 1, "", "sliced_wasserstein_sphere"], [2, 3, 1, "", "sliced_wasserstein_sphere_unif"], [77, 0, 0, "-", "smooth"], [2, 3, 1, "", "solve"], [78, 0, 0, "-", "stochastic"], [2, 3, 1, "", "tic"], [2, 3, 1, "", "toc"], [2, 3, 1, "", "toq"], [79, 0, 0, "-", "unbalanced"], [2, 3, 1, "", "unif"], [80, 0, 0, "-", "utils"], [2, 3, 1, "", "wasserstein_1d"], [2, 3, 1, "", "wasserstein_circle"], [81, 0, 0, "-", "weak"], [2, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[63, 1, 1, "", "Backend"], [63, 1, 1, "", "CupyBackend"], [63, 1, 1, "", "JaxBackend"], [63, 1, 1, "", "NumpyBackend"], [63, 1, 1, "", "TensorflowBackend"], [63, 1, 1, "", "TorchBackend"], [63, 3, 1, "", "get_backend"], [63, 3, 1, "", "get_backend_list"], [63, 3, 1, "", "to_numpy"]], "ot.backend.Backend": [[63, 2, 1, "", "abs"], [63, 2, 1, "", "allclose"], [63, 2, 1, "", "any"], [63, 2, 1, "", "arange"], [63, 2, 1, "", "argmax"], [63, 2, 1, "", "argmin"], [63, 2, 1, "", "argsort"], [63, 2, 1, "", "array_equal"], [63, 2, 1, "", "assert_same_dtype_device"], [63, 2, 1, "", "atan2"], [63, 2, 1, "", "bitsize"], [63, 2, 1, "", "clip"], [63, 2, 1, "", "concatenate"], [63, 2, 1, "", "coo_matrix"], [63, 2, 1, "", "copy"], [63, 2, 1, "", "cumsum"], [63, 2, 1, "", "device_type"], [63, 2, 1, "", "diag"], [63, 2, 1, "", "dot"], [63, 2, 1, "", "dtype_device"], [63, 2, 1, "", "einsum"], [63, 2, 1, "", "eliminate_zeros"], [63, 2, 1, "", "exp"], [63, 2, 1, "", "eye"], [63, 2, 1, "", "flip"], [63, 2, 1, "", "floor"], [63, 2, 1, "", "from_numpy"], [63, 2, 1, "", "full"], [63, 2, 1, "", "inv"], [63, 2, 1, "", "is_floating_point"], [63, 2, 1, "", "isfinite"], [63, 2, 1, "", "isinf"], [63, 2, 1, "", "isnan"], [63, 2, 1, "", "issparse"], [63, 2, 1, "", "kl_div"], [63, 2, 1, "", "linspace"], [63, 2, 1, "", "log"], [63, 2, 1, "", "logsumexp"], [63, 2, 1, "", "max"], [63, 2, 1, "", "maximum"], [63, 2, 1, "", "mean"], [63, 2, 1, "", "meshgrid"], [63, 2, 1, "", "min"], [63, 2, 1, "", "minimum"], [63, 2, 1, "", "norm"], [63, 2, 1, "", "ones"], [63, 2, 1, "", "outer"], [63, 2, 1, "", "power"], [63, 2, 1, "", "prod"], [63, 2, 1, "", "qr"], [63, 2, 1, "", "rand"], [63, 2, 1, "", "randn"], [63, 2, 1, "", "repeat"], [63, 2, 1, "", "reshape"], [63, 2, 1, "", "searchsorted"], [63, 2, 1, "", "seed"], [63, 2, 1, "", "set_gradients"], [63, 2, 1, "", "solve"], [63, 2, 1, "", "sort"], [63, 2, 1, "", "sort2"], [63, 2, 1, "", "sqrt"], [63, 2, 1, "", "sqrtm"], [63, 2, 1, "", "squeeze"], [63, 2, 1, "", "stack"], [63, 2, 1, "", "std"], [63, 2, 1, "", "sum"], [63, 2, 1, "", "take_along_axis"], [63, 2, 1, "", "tile"], [63, 2, 1, "", "to_numpy"], [63, 2, 1, "", "tocsr"], [63, 2, 1, "", "todense"], [63, 2, 1, "", "trace"], [63, 2, 1, "", "transpose"], [63, 2, 1, "", "unique"], [63, 2, 1, "", "where"], [63, 2, 1, "", "zero_pad"], [63, 2, 1, "", "zeros"]], "ot.backend.CupyBackend": [[63, 2, 1, "", "abs"], [63, 2, 1, "", "allclose"], [63, 2, 1, "", "any"], [63, 2, 1, "", "arange"], [63, 2, 1, "", "argmax"], [63, 2, 1, "", "argmin"], [63, 2, 1, "", "argsort"], [63, 2, 1, "", "array_equal"], [63, 2, 1, "", "assert_same_dtype_device"], [63, 2, 1, "", "atan2"], [63, 2, 1, "", "bitsize"], [63, 2, 1, "", "clip"], [63, 2, 1, "", "concatenate"], [63, 2, 1, "", "coo_matrix"], [63, 2, 1, "", "copy"], [63, 2, 1, "", "cumsum"], [63, 2, 1, "", "device_type"], [63, 2, 1, "", "diag"], [63, 2, 1, "", "dot"], [63, 2, 1, "", "dtype_device"], [63, 2, 1, "", "einsum"], [63, 2, 1, "", "eliminate_zeros"], [63, 2, 1, "", "exp"], [63, 2, 1, "", "eye"], [63, 2, 1, "", "flip"], [63, 2, 1, "", "floor"], [63, 2, 1, "", "full"], [63, 2, 1, "", "inv"], [63, 2, 1, "", "is_floating_point"], [63, 2, 1, "", "isfinite"], [63, 2, 1, "", "isinf"], [63, 2, 1, "", "isnan"], [63, 2, 1, "", "issparse"], [63, 2, 1, "", "kl_div"], [63, 2, 1, "", "linspace"], [63, 2, 1, "", "log"], [63, 2, 1, "", "logsumexp"], [63, 2, 1, "", "max"], [63, 2, 1, "", "maximum"], [63, 2, 1, "", "mean"], [63, 2, 1, "", "meshgrid"], [63, 2, 1, "", "min"], [63, 2, 1, "", "minimum"], [63, 2, 1, "", "norm"], [63, 2, 1, "", "ones"], [63, 2, 1, "", "outer"], [63, 2, 1, "", "power"], [63, 2, 1, "", "prod"], [63, 2, 1, "", "qr"], [63, 2, 1, "", "rand"], [63, 2, 1, "", "randn"], [63, 2, 1, "", "repeat"], [63, 2, 1, "", "reshape"], [63, 2, 1, "", "searchsorted"], [63, 2, 1, "", "seed"], [63, 2, 1, "", "set_gradients"], [63, 2, 1, "", "solve"], [63, 2, 1, "", "sort"], [63, 2, 1, "", "sort2"], [63, 2, 1, "", "sqrt"], [63, 2, 1, "", "sqrtm"], [63, 2, 1, "", "squeeze"], [63, 2, 1, "", "stack"], [63, 2, 1, "", "std"], [63, 2, 1, "", "sum"], [63, 2, 1, "", "take_along_axis"], [63, 2, 1, "", "tile"], [63, 2, 1, "", "tocsr"], [63, 2, 1, "", "todense"], [63, 2, 1, "", "trace"], [63, 2, 1, "", "transpose"], [63, 2, 1, "", "unique"], [63, 2, 1, "", "where"], [63, 2, 1, "", "zero_pad"], [63, 2, 1, "", "zeros"]], "ot.backend.JaxBackend": [[63, 2, 1, "", "abs"], [63, 2, 1, "", "allclose"], [63, 2, 1, "", "any"], [63, 2, 1, "", "arange"], [63, 2, 1, "", "argmax"], [63, 2, 1, "", "argmin"], [63, 2, 1, "", "argsort"], [63, 2, 1, "", "array_equal"], [63, 2, 1, "", "assert_same_dtype_device"], [63, 2, 1, "", "atan2"], [63, 2, 1, "", "bitsize"], [63, 2, 1, "", "clip"], [63, 2, 1, "", "concatenate"], [63, 2, 1, "", "coo_matrix"], [63, 2, 1, "", "copy"], [63, 2, 1, "", "cumsum"], [63, 2, 1, "", "device_type"], [63, 2, 1, "", "diag"], [63, 2, 1, "", "dot"], [63, 2, 1, "", "dtype_device"], [63, 2, 1, "", "einsum"], [63, 2, 1, "", "eliminate_zeros"], [63, 2, 1, "", "exp"], [63, 2, 1, "", "eye"], [63, 2, 1, "", "flip"], [63, 2, 1, "", "floor"], [63, 2, 1, "", "full"], [63, 2, 1, "", "inv"], [63, 2, 1, "", "is_floating_point"], [63, 2, 1, "", "isfinite"], [63, 2, 1, "", "isinf"], [63, 2, 1, "", "isnan"], [63, 2, 1, "", "issparse"], [63, 2, 1, "", "kl_div"], [63, 2, 1, "", "linspace"], [63, 2, 1, "", "log"], [63, 2, 1, "", "logsumexp"], [63, 2, 1, "", "max"], [63, 2, 1, "", "maximum"], [63, 2, 1, "", "mean"], [63, 2, 1, "", "meshgrid"], [63, 2, 1, "", "min"], [63, 2, 1, "", "minimum"], [63, 2, 1, "", "norm"], [63, 2, 1, "", "ones"], [63, 2, 1, "", "outer"], [63, 2, 1, "", "power"], [63, 2, 1, "", "prod"], [63, 2, 1, "", "qr"], [63, 2, 1, "", "rand"], [63, 2, 1, "", "randn"], [63, 2, 1, "", "repeat"], [63, 2, 1, "", "reshape"], [63, 2, 1, "", "searchsorted"], [63, 2, 1, "", "seed"], [63, 2, 1, "", "set_gradients"], [63, 2, 1, "", "solve"], [63, 2, 1, "", "sort"], [63, 2, 1, "", "sort2"], [63, 2, 1, "", "sqrt"], [63, 2, 1, "", "sqrtm"], [63, 2, 1, "", "squeeze"], [63, 2, 1, "", "stack"], [63, 2, 1, "", "std"], [63, 2, 1, "", "sum"], [63, 2, 1, "", "take_along_axis"], [63, 2, 1, "", "tile"], [63, 2, 1, "", "tocsr"], [63, 2, 1, "", "todense"], [63, 2, 1, "", "trace"], [63, 2, 1, "", "transpose"], [63, 2, 1, "", "unique"], [63, 2, 1, "", "where"], [63, 2, 1, "", "zero_pad"], [63, 2, 1, "", "zeros"]], "ot.backend.NumpyBackend": [[63, 2, 1, "", "abs"], [63, 2, 1, "", "allclose"], [63, 2, 1, "", "any"], [63, 2, 1, "", "arange"], [63, 2, 1, "", "argmax"], [63, 2, 1, "", "argmin"], [63, 2, 1, "", "argsort"], [63, 2, 1, "", "array_equal"], [63, 2, 1, "", "assert_same_dtype_device"], [63, 2, 1, "", "atan2"], [63, 2, 1, "", "bitsize"], [63, 2, 1, "", "clip"], [63, 2, 1, "", "concatenate"], [63, 2, 1, "", "coo_matrix"], [63, 2, 1, "", "copy"], [63, 2, 1, "", "cumsum"], [63, 2, 1, "", "device_type"], [63, 2, 1, "", "diag"], [63, 2, 1, "", "dot"], [63, 2, 1, "", "dtype_device"], [63, 2, 1, "", "einsum"], [63, 2, 1, "", "eliminate_zeros"], [63, 2, 1, "", "exp"], [63, 2, 1, "", "eye"], [63, 2, 1, "", "flip"], [63, 2, 1, "", "floor"], [63, 2, 1, "", "full"], [63, 2, 1, "", "inv"], [63, 2, 1, "", "is_floating_point"], [63, 2, 1, "", "isfinite"], [63, 2, 1, "", "isinf"], [63, 2, 1, "", "isnan"], [63, 2, 1, "", "issparse"], [63, 2, 1, "", "kl_div"], [63, 2, 1, "", "linspace"], [63, 2, 1, "", "log"], [63, 2, 1, "", "logsumexp"], [63, 2, 1, "", "max"], [63, 2, 1, "", "maximum"], [63, 2, 1, "", "mean"], [63, 2, 1, "", "meshgrid"], [63, 2, 1, "", "min"], [63, 2, 1, "", "minimum"], [63, 2, 1, "", "norm"], [63, 2, 1, "", "ones"], [63, 2, 1, "", "outer"], [63, 2, 1, "", "power"], [63, 2, 1, "", "prod"], [63, 2, 1, "", "qr"], [63, 2, 1, "", "rand"], [63, 2, 1, "", "randn"], [63, 2, 1, "", "repeat"], [63, 2, 1, "", "reshape"], [63, 2, 1, "", "searchsorted"], [63, 2, 1, "", "seed"], [63, 2, 1, "", "set_gradients"], [63, 2, 1, "", "solve"], [63, 2, 1, "", "sort"], [63, 2, 1, "", "sort2"], [63, 2, 1, "", "sqrt"], [63, 2, 1, "", "sqrtm"], [63, 2, 1, "", "squeeze"], [63, 2, 1, "", "stack"], [63, 2, 1, "", "std"], [63, 2, 1, "", "sum"], [63, 2, 1, "", "take_along_axis"], [63, 2, 1, "", "tile"], [63, 2, 1, "", "tocsr"], [63, 2, 1, "", "todense"], [63, 2, 1, "", "trace"], [63, 2, 1, "", "transpose"], [63, 2, 1, "", "unique"], [63, 2, 1, "", "where"], [63, 2, 1, "", "zero_pad"], [63, 2, 1, "", "zeros"]], "ot.backend.TensorflowBackend": [[63, 2, 1, "", "abs"], [63, 2, 1, "", "allclose"], [63, 2, 1, "", "any"], [63, 2, 1, "", "arange"], [63, 2, 1, "", "argmax"], [63, 2, 1, "", "argmin"], [63, 2, 1, "", "argsort"], [63, 2, 1, "", "array_equal"], [63, 2, 1, "", "assert_same_dtype_device"], [63, 2, 1, "", "atan2"], [63, 2, 1, "", "bitsize"], [63, 2, 1, "", "clip"], [63, 2, 1, "", "concatenate"], [63, 2, 1, "", "coo_matrix"], [63, 2, 1, "", "copy"], [63, 2, 1, "", "cumsum"], [63, 2, 1, "", "device_type"], [63, 2, 1, "", "diag"], [63, 2, 1, "", "dot"], [63, 2, 1, "", "dtype_device"], [63, 2, 1, "", "einsum"], [63, 2, 1, "", "eliminate_zeros"], [63, 2, 1, "", "exp"], [63, 2, 1, "", "eye"], [63, 2, 1, "", "flip"], [63, 2, 1, "", "floor"], [63, 2, 1, "", "full"], [63, 2, 1, "", "inv"], [63, 2, 1, "", "is_floating_point"], [63, 2, 1, "", "isfinite"], [63, 2, 1, "", "isinf"], [63, 2, 1, "", "isnan"], [63, 2, 1, "", "issparse"], [63, 2, 1, "", "kl_div"], [63, 2, 1, "", "linspace"], [63, 2, 1, "", "log"], [63, 2, 1, "", "logsumexp"], [63, 2, 1, "", "max"], [63, 2, 1, "", "maximum"], [63, 2, 1, "", "mean"], [63, 2, 1, "", "meshgrid"], [63, 2, 1, "", "min"], [63, 2, 1, "", "minimum"], [63, 2, 1, "", "norm"], [63, 2, 1, "", "ones"], [63, 2, 1, "", "outer"], [63, 2, 1, "", "power"], [63, 2, 1, "", "prod"], [63, 2, 1, "", "qr"], [63, 2, 1, "", "rand"], [63, 2, 1, "", "randn"], [63, 2, 1, "", "repeat"], [63, 2, 1, "", "reshape"], [63, 2, 1, "", "searchsorted"], [63, 2, 1, "", "seed"], [63, 2, 1, "", "set_gradients"], [63, 2, 1, "", "solve"], [63, 2, 1, "", "sort"], [63, 2, 1, "", "sort2"], [63, 2, 1, "", "sqrt"], [63, 2, 1, "", "sqrtm"], [63, 2, 1, "", "squeeze"], [63, 2, 1, "", "stack"], [63, 2, 1, "", "std"], [63, 2, 1, "", "sum"], [63, 2, 1, "", "take_along_axis"], [63, 2, 1, "", "tile"], [63, 2, 1, "", "tocsr"], [63, 2, 1, "", "todense"], [63, 2, 1, "", "trace"], [63, 2, 1, "", "transpose"], [63, 2, 1, "", "unique"], [63, 2, 1, "", "where"], [63, 2, 1, "", "zero_pad"], [63, 2, 1, "", "zeros"]], "ot.backend.TorchBackend": [[63, 2, 1, "", "abs"], [63, 2, 1, "", "allclose"], [63, 2, 1, "", "any"], [63, 2, 1, "", "arange"], [63, 2, 1, "", "argmax"], [63, 2, 1, "", "argmin"], [63, 2, 1, "", "argsort"], [63, 2, 1, "", "array_equal"], [63, 2, 1, "", "assert_same_dtype_device"], [63, 2, 1, "", "atan2"], [63, 2, 1, "", "bitsize"], [63, 2, 1, "", "clip"], [63, 2, 1, "", "concatenate"], [63, 2, 1, "", "coo_matrix"], [63, 2, 1, "", "copy"], [63, 2, 1, "", "cumsum"], [63, 2, 1, "", "device_type"], [63, 2, 1, "", "diag"], [63, 2, 1, "", "dot"], [63, 2, 1, "", "dtype_device"], [63, 2, 1, "", "einsum"], [63, 2, 1, "", "eliminate_zeros"], [63, 2, 1, "", "exp"], [63, 2, 1, "", "eye"], [63, 2, 1, "", "flip"], [63, 2, 1, "", "floor"], [63, 2, 1, "", "full"], [63, 2, 1, "", "inv"], [63, 2, 1, "", "is_floating_point"], [63, 2, 1, "", "isfinite"], [63, 2, 1, "", "isinf"], [63, 2, 1, "", "isnan"], [63, 2, 1, "", "issparse"], [63, 2, 1, "", "kl_div"], [63, 2, 1, "", "linspace"], [63, 2, 1, "", "log"], [63, 2, 1, "", "logsumexp"], [63, 2, 1, "", "max"], [63, 2, 1, "", "maximum"], [63, 2, 1, "", "mean"], [63, 2, 1, "", "meshgrid"], [63, 2, 1, "", "min"], [63, 2, 1, "", "minimum"], [63, 2, 1, "", "norm"], [63, 2, 1, "", "ones"], [63, 2, 1, "", "outer"], [63, 2, 1, "", "power"], [63, 2, 1, "", "prod"], [63, 2, 1, "", "qr"], [63, 2, 1, "", "rand"], [63, 2, 1, "", "randn"], [63, 2, 1, "", "repeat"], [63, 2, 1, "", "reshape"], [63, 2, 1, "", "searchsorted"], [63, 2, 1, "", "seed"], [63, 2, 1, "", "set_gradients"], [63, 2, 1, "", "solve"], [63, 2, 1, "", "sort"], [63, 2, 1, "", "sort2"], [63, 2, 1, "", "sqrt"], [63, 2, 1, "", "sqrtm"], [63, 2, 1, "", "squeeze"], [63, 2, 1, "", "stack"], [63, 2, 1, "", "std"], [63, 2, 1, "", "sum"], [63, 2, 1, "", "take_along_axis"], [63, 2, 1, "", "tile"], [63, 2, 1, "", "tocsr"], [63, 2, 1, "", "todense"], [63, 2, 1, "", "trace"], [63, 2, 1, "", "transpose"], [63, 2, 1, "", "unique"], [63, 2, 1, "", "where"], [63, 2, 1, "", "zero_pad"], [63, 2, 1, "", "zeros"]], "ot.bregman": [[64, 3, 1, "", "barycenter"], [64, 3, 1, "", "barycenter_debiased"], [64, 3, 1, "", "barycenter_sinkhorn"], [64, 3, 1, "", "barycenter_stabilized"], [64, 3, 1, "", "convolutional_barycenter2d"], [64, 3, 1, "", "convolutional_barycenter2d_debiased"], [64, 3, 1, "", "empirical_sinkhorn"], [64, 3, 1, "", "empirical_sinkhorn2"], [64, 3, 1, "", "empirical_sinkhorn_divergence"], [64, 3, 1, "", "free_support_sinkhorn_barycenter"], [64, 3, 1, "", "geometricBar"], [64, 3, 1, "", "geometricMean"], [64, 3, 1, "", "greenkhorn"], [64, 3, 1, "", "jcpot_barycenter"], [64, 3, 1, "", "projC"], [64, 3, 1, "", "projR"], [64, 3, 1, "", "screenkhorn"], [64, 3, 1, "", "sinkhorn"], [64, 3, 1, "", "sinkhorn2"], [64, 3, 1, "", "sinkhorn_epsilon_scaling"], [64, 3, 1, "", "sinkhorn_knopp"], [64, 3, 1, "", "sinkhorn_log"], [64, 3, 1, "", "sinkhorn_stabilized"], [64, 3, 1, "", "unmix"]], "ot.da": [[65, 1, 1, "", "BaseTransport"], [65, 1, 1, "", "EMDLaplaceTransport"], [65, 1, 1, "", "EMDTransport"], [65, 1, 1, "", "JCPOTTransport"], [65, 1, 1, "", "LinearTransport"], [65, 1, 1, "", "MappingTransport"], [65, 1, 1, "", "SinkhornL1l2Transport"], [65, 1, 1, "", "SinkhornLpl1Transport"], [65, 1, 1, "", "SinkhornTransport"], [65, 1, 1, "", "UnbalancedSinkhornTransport"], [65, 3, 1, "", "distribution_estimation_uniform"], [65, 3, 1, "", "emd_laplace"], [65, 3, 1, "", "joint_OT_mapping_kernel"], [65, 3, 1, "", "joint_OT_mapping_linear"], [65, 3, 1, "", "sinkhorn_l1l2_gl"], [65, 3, 1, "", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[65, 2, 1, "", "fit"], [65, 2, 1, "", "fit_transform"], [65, 2, 1, "", "inverse_transform"], [65, 2, 1, "", "inverse_transform_labels"], [65, 2, 1, "", "transform"], [65, 2, 1, "", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[65, 4, 1, "", "coupling_"], [65, 2, 1, "", "fit"]], "ot.da.EMDTransport": [[65, 4, 1, "", "coupling_"], [65, 2, 1, "", "fit"]], "ot.da.JCPOTTransport": [[65, 4, 1, "", "coupling_"], [65, 2, 1, "", "fit"], [65, 2, 1, "", "inverse_transform_labels"], [65, 4, 1, "", "log_"], [65, 4, 1, "", "proportions_"], [65, 2, 1, "", "transform"], [65, 2, 1, "", "transform_labels"]], "ot.da.LinearTransport": [[65, 2, 1, "", "fit"], [65, 2, 1, "", "inverse_transform"], [65, 2, 1, "", "transform"]], "ot.da.MappingTransport": [[65, 4, 1, "", "coupling_"], [65, 2, 1, "", "fit"], [65, 4, 1, "", "log_"], [65, 4, 1, "", "mapping_"], [65, 2, 1, "", "transform"]], "ot.da.SinkhornL1l2Transport": [[65, 4, 1, "", "coupling_"], [65, 2, 1, "", "fit"], [65, 4, 1, "", "log_"]], "ot.da.SinkhornLpl1Transport": [[65, 4, 1, "", "coupling_"], [65, 2, 1, "", "fit"]], "ot.da.SinkhornTransport": [[65, 4, 1, "", "coupling_"], [65, 2, 1, "", "fit"], [65, 4, 1, "", "log_"]], "ot.da.UnbalancedSinkhornTransport": [[65, 4, 1, "", "coupling_"], [65, 2, 1, "", "fit"], [65, 4, 1, "", "log_"]], "ot.datasets": [[66, 3, 1, "", "make_1D_gauss"], [66, 3, 1, "", "make_2D_samples_gauss"], [66, 3, 1, "", "make_data_classif"]], "ot.dr": [[67, 3, 1, "", "dist"], [67, 3, 1, "", "fda"], [67, 3, 1, "", "logsumexp"], [67, 3, 1, "", "projection_robust_wasserstein"], [67, 3, 1, "", "sinkhorn"], [67, 3, 1, "", "sinkhorn_log"], [67, 3, 1, "", "split_classes"], [67, 3, 1, "", "wda"]], "ot.factored": [[68, 3, 1, "", "factored_optimal_transport"]], "ot.gaussian": [[69, 3, 1, "", "bures_wasserstein_distance"], [69, 3, 1, "", "bures_wasserstein_mapping"], [69, 3, 1, "", "empirical_bures_wasserstein_distance"], [69, 3, 1, "", "empirical_bures_wasserstein_mapping"]], "ot.gromov": [[70, 3, 1, "", "GW_distance_estimation"], [70, 3, 1, "", "entropic_gromov_barycenters"], [70, 3, 1, "", "entropic_gromov_wasserstein"], [70, 3, 1, "", "entropic_gromov_wasserstein2"], [70, 3, 1, "", "fgw_barycenters"], [70, 3, 1, "", "fused_gromov_wasserstein"], [70, 3, 1, "", "fused_gromov_wasserstein2"], [70, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [70, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [70, 3, 1, "", "gromov_barycenters"], [70, 3, 1, "", "gromov_wasserstein"], [70, 3, 1, "", "gromov_wasserstein2"], [70, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [70, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [70, 3, 1, "", "gwggrad"], [70, 3, 1, "", "gwloss"], [70, 3, 1, "", "init_matrix"], [70, 3, 1, "", "pointwise_gromov_wasserstein"], [70, 3, 1, "", "sampled_gromov_wasserstein"], [70, 3, 1, "", "tensor_product"], [70, 3, 1, "", "update_feature_matrix"], [70, 3, 1, "", "update_kl_loss"], [70, 3, 1, "", "update_square_loss"], [70, 3, 1, "", "update_structure_matrix"]], "ot.lp": [[71, 3, 1, "", "center_ot_dual"], [71, 3, 1, "", "check_number_threads"], [71, 3, 1, "", "emd"], [71, 3, 1, "", "emd2"], [71, 3, 1, "", "estimate_dual_null_weights"], [71, 3, 1, "", "free_support_barycenter"], [71, 3, 1, "", "generalized_free_support_barycenter"]], "ot.optim": [[72, 3, 1, "", "cg"], [72, 3, 1, "", "gcg"], [72, 3, 1, "", "line_search_armijo"], [72, 3, 1, "", "solve_1d_linesearch_quad"], [72, 3, 1, "", "solve_linesearch"]], "ot.partial": [[73, 3, 1, "", "entropic_partial_gromov_wasserstein"], [73, 3, 1, "", "entropic_partial_gromov_wasserstein2"], [73, 3, 1, "", "entropic_partial_wasserstein"], [73, 3, 1, "", "gwgrad_partial"], [73, 3, 1, "", "gwloss_partial"], [73, 3, 1, "", "partial_gromov_wasserstein"], [73, 3, 1, "", "partial_gromov_wasserstein2"], [73, 3, 1, "", "partial_wasserstein"], [73, 3, 1, "", "partial_wasserstein2"], [73, 3, 1, "", "partial_wasserstein_lagrange"]], "ot.plot": [[74, 3, 1, "", "plot1D_mat"], [74, 3, 1, "", "plot2D_samples_mat"]], "ot.regpath": [[75, 3, 1, "", "complement_schur"], [75, 3, 1, "", "compute_next_removal"], [75, 3, 1, "", "compute_transport_plan"], [75, 3, 1, "", "construct_augmented_H"], [75, 3, 1, "", "fully_relaxed_path"], [75, 3, 1, "", "ot_next_gamma"], [75, 3, 1, "", "recast_ot_as_lasso"], [75, 3, 1, "", "recast_semi_relaxed_as_lasso"], [75, 3, 1, "", "regularization_path"], [75, 3, 1, "", "semi_relaxed_next_gamma"], [75, 3, 1, "", "semi_relaxed_path"]], "ot.sliced": [[76, 3, 1, "", "get_random_projections"], [76, 3, 1, "", "max_sliced_wasserstein_distance"], [76, 3, 1, "", "sliced_wasserstein_distance"], [76, 3, 1, "", "sliced_wasserstein_sphere"], [76, 3, 1, "", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[77, 1, 1, "", "NegEntropy"], [77, 1, 1, "", "Regularization"], [77, 1, 1, "", "SquaredL2"], [77, 3, 1, "", "dual_obj_grad"], [77, 3, 1, "", "get_plan_from_dual"], [77, 3, 1, "", "get_plan_from_semi_dual"], [77, 3, 1, "", "projection_simplex"], [77, 3, 1, "", "semi_dual_obj_grad"], [77, 3, 1, "", "smooth_ot_dual"], [77, 3, 1, "", "smooth_ot_semi_dual"], [77, 3, 1, "", "solve_dual"], [77, 3, 1, "", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[77, 2, 1, "", "Omega"], [77, 2, 1, "", "delta_Omega"], [77, 2, 1, "", "max_Omega"]], "ot.smooth.Regularization": [[77, 2, 1, "", "Omega"], [77, 2, 1, "", "delta_Omega"], [77, 2, 1, "", "max_Omega"]], "ot.smooth.SquaredL2": [[77, 2, 1, "", "Omega"], [77, 2, 1, "", "delta_Omega"], [77, 2, 1, "", "max_Omega"]], "ot.stochastic": [[78, 3, 1, "", "averaged_sgd_entropic_transport"], [78, 3, 1, "", "batch_grad_dual"], [78, 3, 1, "", "c_transform_entropic"], [78, 3, 1, "", "coordinate_grad_semi_dual"], [78, 3, 1, "", "loss_dual_entropic"], [78, 3, 1, "", "loss_dual_quadratic"], [78, 3, 1, "", "plan_dual_entropic"], [78, 3, 1, "", "plan_dual_quadratic"], [78, 3, 1, "", "sag_entropic_transport"], [78, 3, 1, "", "sgd_entropic_regularization"], [78, 3, 1, "", "solve_dual_entropic"], [78, 3, 1, "", "solve_semi_dual_entropic"]], "ot.unbalanced": [[79, 3, 1, "", "barycenter_unbalanced"], [79, 3, 1, "", "barycenter_unbalanced_sinkhorn"], [79, 3, 1, "", "barycenter_unbalanced_stabilized"], [79, 3, 1, "", "lbfgsb_unbalanced"], [79, 3, 1, "", "mm_unbalanced"], [79, 3, 1, "", "mm_unbalanced2"], [79, 3, 1, "", "sinkhorn_knopp_unbalanced"], [79, 3, 1, "", "sinkhorn_stabilized_unbalanced"], [79, 3, 1, "", "sinkhorn_unbalanced"], [79, 3, 1, "", "sinkhorn_unbalanced2"]], "ot.utils": [[80, 1, 1, "", "BaseEstimator"], [80, 1, 1, "", "OTResult"], [80, 3, 1, "", "check_params"], [80, 3, 1, "", "check_random_state"], [80, 3, 1, "", "clean_zeros"], [80, 3, 1, "", "cost_normalization"], [80, 1, 1, "", "deprecated"], [80, 3, 1, "", "dist"], [80, 3, 1, "", "dist0"], [80, 3, 1, "", "dots"], [80, 3, 1, "", "euclidean_distances"], [80, 3, 1, "", "get_coordinate_circle"], [80, 3, 1, "", "kernel"], [80, 3, 1, "", "label_normalization"], [80, 3, 1, "", "laplacian"], [80, 3, 1, "", "list_to_array"], [80, 3, 1, "", "parmap"], [80, 3, 1, "", "proj_simplex"], [80, 3, 1, "", "tic"], [80, 3, 1, "", "toc"], [80, 3, 1, "", "toq"], [80, 3, 1, "", "unif"]], "ot.utils.BaseEstimator": [[80, 2, 1, "", "get_params"], [80, 2, 1, "", "set_params"]], "ot.utils.OTResult": [[80, 5, 1, "", "a_to_b"], [80, 5, 1, "", "b_to_a"], [80, 5, 1, "", "citation"], [80, 5, 1, "", "lazy_plan"], [80, 5, 1, "", "marginal_a"], [80, 5, 1, "", "marginal_b"], [80, 5, 1, "", "marginals"], [80, 5, 1, "", "plan"], [80, 5, 1, "", "potential_a"], [80, 5, 1, "", "potential_b"], [80, 5, 1, "", "potentials"], [80, 5, 1, "", "sparse_plan"], [80, 5, 1, "", "status"], [80, 5, 1, "", "value"], [80, 5, 1, "", "value_linear"]], "ot.weak": [[81, 3, 1, "", "weak_optimal_transport"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"]}, "titleterms": {"code": [0, 82], "conduct": [0, 82], "our": 0, "pledg": 0, "standard": 0, "respons": 0, "scope": 0, "enforc": 0, "attribut": [0, 34], "contribut": [1, 82], "pot": [1, 36, 40, 44, 82, 83], "how": [1, 83], "pull": 1, "request": 1, "checklist": 1, "file": 1, "bug": 1, "new": [1, 21, 84], "contributor": [1, 62], "tip": 1, "document": 1, "api": 2, "modul": [2, 83], "refer": [2, 76, 82, 83], "dual": [3, 7, 42, 44], "ot": [3, 7, 20, 21, 22, 23, 24, 25, 26, 27, 36, 38, 39, 44, 46, 48, 49, 50, 51, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83], "solver": [3, 51, 83], "entrop": [3, 7, 13, 51, 60, 83], "quadrat": [3, 83], "regular": [3, 13, 24, 36, 44, 51, 59, 60, 83], "pytorch": [3, 4, 5, 7, 8, 9, 10], "data": [3, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 37, 38, 39, 40, 41, 45, 46, 47, 49, 50, 51, 53, 54, 56, 57, 59, 60], "gener": [3, 4, 6, 7, 8, 10, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 37, 38, 39, 41, 45, 46, 47, 49, 51, 53, 54, 56, 57, 59, 60, 83], "plot": [3, 6, 7, 8, 10, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 57, 58, 59, 60, 74], "convert": [3, 7], "torch": [3, 7], "tensor": [3, 7], "estim": [3, 4, 7, 8, 25, 26, 27, 34, 83], "variabl": [3, 7, 44], "teh": 3, "plan": [3, 7, 32, 44, 58], "optim": [4, 8, 20, 22, 23, 24, 28, 38, 39, 41, 44, 45, 46, 47, 48, 56, 59, 60, 72, 82, 83], "gromov": [4, 31, 32, 33, 34, 36, 58, 70, 83], "wasserstein": [4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 18, 31, 32, 33, 34, 36, 37, 44, 50, 53, 54, 57, 58, 83], "distanc": [4, 8, 22, 28, 31, 32, 36, 49, 50, 53, 58, 83], "graph": [4, 30, 34], "gw": [4, 31, 32, 83], "w": 4, "r": 4, "t": 4, "weight": [4, 8], "templat": 4, "structur": [4, 31], "commun": 4, "cluster": [4, 34], "uniform": [4, 48, 50], "compress": 4, "slice": [5, 6, 36, 53, 54, 76], "barycent": [5, 9, 12, 13, 14, 15, 16, 17, 18, 30, 33, 36, 57, 83], "gradient": [5, 6], "flow": [5, 9], "anim": [5, 6, 10, 18, 59], "trajectori": [5, 6, 10], "along": [5, 6, 10], "iter": [5, 6, 10], "comput": [5, 11, 12, 14, 15, 16, 18, 19, 29, 30, 31, 32, 33, 35, 37, 38, 39, 42, 43, 44, 47, 49, 52, 55, 57, 58, 59, 60, 61, 83], "descent": [5, 6], "spheric": [6, 54], "embed": [6, 34], "sphere": 6, "sampl": [6, 7, 10, 20, 22, 23, 24, 25, 26, 28, 32, 48, 58], "continu": [7, 42], "deep": 7, "densiti": 7, "arget": 7, "given": 7, "sourc": [7, 8, 20, 22, 23, 24, 28], "unmix": 8, "model": [8, 10, 34], "wrt": 8, "converg": 8, "object": 8, "plote": 8, "reweight": 8, "distribut": [8, 16, 17, 22, 27, 32, 41, 45, 46, 47, 53, 54, 56, 57, 58, 83], "1d": [9, 12, 13, 15, 45, 49, 56, 57], "2": [10, 20, 22, 23, 24, 28, 34, 48, 54, 84], "minibatch": 10, "gan": 10, "train": 10, "visual": [10, 14, 15, 31, 33, 34], "time": [11, 19, 29, 35, 43, 44, 52, 55, 61], "demo": [12, 15, 18, 57], "exact": [13, 38, 39, 60], "lp": [13, 71], "v": [13, 28, 38], "gaussian": [13, 15, 32, 58, 69], "stair": 13, "dirac": 13, "final": 13, "figur": 13, "convolut": [14, 83], "exampl": [14, 32, 33, 36, 42, 46, 58, 60, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83], "prepar": [14, 33], "debias": 15, "sinkhorn": [15, 17, 23, 42, 44, 45, 46, 47, 49, 56, 83], "2d": [15, 16, 17, 32, 37, 47, 53, 58, 60], "imag": [15, 21, 25, 27], "free": [16, 17, 83], "support": [16, 17, 82, 83], "paramet": [17, 44], "inspect": 17, "interpol": [17, 57], "empir": [17, 22, 47], "project": [18, 37, 53, 54], "match": 18, "rotat": 18, "domain": [20, 22, 23, 24, 26, 27, 36, 83], "adapt": [20, 21, 22, 23, 24, 25, 26, 27, 36, 83], "instanti": [20, 21, 22, 23, 24, 26], "differ": [20, 21, 22, 24, 26, 28, 48, 49, 50, 53, 54], "transport": [20, 21, 22, 23, 24, 25, 26, 28, 31, 38, 39, 41, 42, 44, 45, 46, 47, 48, 56, 59, 60, 82, 83], "algorithm": [20, 21, 22, 23, 24, 26, 42, 44], "fit": [20, 21, 22, 23, 24, 26], "them": [20, 21, 22, 23, 24, 26, 32, 58], "fig": [20, 22, 23, 24, 28], "1": [20, 22, 23, 24, 28, 34, 48, 84], "target": [20, 22, 23, 24, 28], "coupl": [20, 22, 23, 24, 28, 39], "color": [21, 27], "origin": [21, 27], "scatter": 21, "matrix": [22, 28, 31, 41, 42, 44, 45, 46, 56], "pairwis": [22, 28], "method": [22, 28, 32], "3": [22, 28, 34, 84], "multi": 23, "shift": 23, "all": 23, "jcpot": 23, "run": 23, "oracl": 23, "known": 23, "proport": 23, "laplacian": 24, "linear": [25, 34], "map": [25, 26, 27, 44, 83], "load": 25, "transform": [25, 27], "pixel": 27, "transfer": 27, "valu": 27, "otda": [28, 83], "unsupervis": 28, "semi": [28, 42, 59], "supervis": 28, "set": 28, "onto": 28, "us": [30, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83], "fgw": [30, 31, 83], "fuse": [31, 34, 36], "creat": 31, "matric": [31, 42, 48], "across": 31, "featur": [31, 34, 84], "two": [32, 58], "3d": [32, 58], "kernel": 32, "normal": 32, "displai": 32, "scalabl": 32, "stochast": [32, 34, 42, 78], "ani": 32, "loss": [32, 41, 44, 45, 46, 49, 56], "function": [32, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "smacof": 33, "md": 33, "dictionari": 34, "learn": 34, "dataset": [34, 48, 66], "compos": 34, "follow": 34, "block": 34, "from": 34, "atom": 34, "space": 34, "endow": 34, "node": 34, "galleri": 36, "backend": [36, 63, 83], "other": [36, 83], "problem": [36, 42, 44], "unbalanc": [36, 56, 57, 59, 60, 79, 83], "partial": [36, 48, 58, 73, 83], "discrimin": [37, 83], "analysi": [37, 83], "fisher": 37, "weak": [38, 81], "an": [38, 39, 83], "solut": [38, 39], "factor": [39, 68], "logo": 40, "toolbox": [40, 44, 82], "clear": 40, "background": 40, "dark": 40, "screen": 41, "screenkhorn": [41, 64], "solv": [41, 44, 45, 46, 51, 56, 83], "discret": 42, "case": [42, 83], "compar": [42, 50], "result": [42, 60], "introduct": 44, "python": [44, 82], "instal": [44, 82], "import": 44, "get": 44, "help": 44, "first": [44, 84], "bakeri": 44, "citi": 44, "cost": 44, "emd": [44, 45, 46, 47, 49, 51, 83], "vizual": 44, "vari": 44, "smooth": [46, 77], "between": [47, 50, 83], "emprir": 47, "gournd": 48, "metric": 48, "circl": [48, 50], "euclidean": 50, "von": 50, "mise": 50, "kappa": 50, "frobeniu": 51, "norm": 51, "seed": [53, 54], "number": [53, 54], "": 54, "mass": 56, "barycentr": 57, "one": 58, "path": 59, "l2": [59, 60], "penal": 59, "relax": 59, "fulli": 59, "regpath": [59, 75], "uot": [59, 60], "kl": 60, "creator": 62, "maintain": 62, "acknowledg": [62, 82], "perform": 63, "class": [63, 65, 77, 80, 83], "bregman": [64, 83], "barycenter_debias": 64, "convolutional_barycenter2d": [64, 83], "convolutional_barycenter2d_debias": 64, "empirical_sinkhorn": 64, "free_support_sinkhorn_barycent": 64, "depend": [64, 82], "da": 65, "basetransport": 65, "emdlaplacetransport": 65, "emdtransport": 65, "jcpottransport": 65, "lineartransport": 65, "mappingtransport": 65, "sinkhornl1l2transport": 65, "sinkhornlpl1transport": 65, "sinkhorntransport": 65, "make_1d_gauss": 66, "make_2d_samples_gauss": 66, "make_data_classif": 66, "dr": 67, "fda": 67, "wda": [67, 83], "empirical_bures_wasserstein_map": 69, "entropic_gromov_wasserstein": 70, "fgw_barycent": 70, "fused_gromov_wasserstein_dictionary_learn": 70, "fused_gromov_wasserstein_linear_unmix": 70, "gromov_wasserstein_dictionary_learn": 70, "gromov_wasserstein_linear_unmix": 70, "pointwise_gromov_wasserstein": 70, "sampled_gromov_wasserstein": 70, "free_support_barycent": 71, "generalized_free_support_barycent": 71, "cg": 72, "gcg": 72, "entropic_partial_gromov_wasserstein": 73, "entropic_partial_wasserstein": 73, "partial_gromov_wasserstein": 73, "partial_wasserstein": 73, "plot1d_mat": 74, "plot2d_samples_mat": 74, "compute_transport_plan": 75, "regularization_path": 75, "smooth_ot_du": 77, "loss_dual_entrop": 78, "loss_dual_quadrat": 78, "plan_dual_entrop": 78, "plan_dual_quadrat": 78, "solve_dual_entrop": 78, "solve_semi_dual_entrop": 78, "mm_unbalanc": 79, "util": 80, "dist0": 80, "proj_simplex": 80, "baseestim": 80, "except": 80, "content": 82, "cite": 82, "pip": 82, "anaconda": 82, "conda": 82, "forg": 82, "post": 82, "check": 82, "short": 82, "notebook": 82, "indic": 82, "tabl": 82, "quick": 83, "start": 83, "guid": 83, "why": 83, "when": 83, "emd2": 83, "special": 83, "sinkhorn2": 83, "group": 83, "lasso": 83, "fix": 83, "mong": 83, "applic": 83, "g": 83, "multipl": 83, "cpu": 83, "gpu": 83, "work": 83, "acceler": 83, "list": 83, "compat": 83, "faq": 83, "releas": 84, "0": 84, "8": 84, "3dev": 84, "close": 84, "issu": 84, "7": 84, "6": 84, "5": 84, "deprec": 84, "4": 84, "v0": 84, "11": 84, "10": 84, "9": 84, "pre": 84}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Code of Conduct": [[0, "code-of-conduct"]], "Our Pledge": [[0, "our-pledge"]], "Our Standards": [[0, "our-standards"]], "Our Responsibilities": [[0, "our-responsibilities"]], "Scope": [[0, "scope"]], "Enforcement": [[0, "enforcement"]], "Attribution": [[0, "attribution"]], "Contributing to POT": [[1, "contributing-to-pot"]], "How to contribute": [[1, "how-to-contribute"]], "Pull Request Checklist": [[1, "pull-request-checklist"]], "Filing bugs": [[1, "filing-bugs"]], "New contributor tips": [[1, "new-contributor-tips"]], "Documentation": [[1, "documentation"]], "API and modules": [[2, "api-and-modules"]], "References:": [[2, "references"], [76, "references"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[3, "dual-ot-solvers-for-entropic-and-quadratic-regularized-ot-with-pytorch"]], "Data generation": [[3, "data-generation"], [6, "data-generation"], [7, "data-generation"], [10, "data-generation"]], "Plot data": [[3, "plot-data"], [6, "plot-data"], [7, "plot-data"], [8, "plot-data"], [10, "plot-data"], [25, "plot-data"], [26, "plot-data"], [30, "plot-data"], [31, "plot-data"], [37, "plot-data"], [47, "plot-data"], [49, "plot-data"], [50, "plot-data"], [53, "plot-data"], [54, "plot-data"], [57, "plot-data"], [59, "plot-data"]], "Convert data to torch tensors": [[3, "convert-data-to-torch-tensors"], [7, "convert-data-to-torch-tensors"]], "Estimating dual variables for entropic OT": [[3, "estimating-dual-variables-for-entropic-ot"]], "Plot teh estimated entropic OT plan": [[3, "plot-teh-estimated-entropic-ot-plan"]], "Estimating dual variables for quadratic OT": [[3, "estimating-dual-variables-for-quadratic-ot"]], "Plot the estimated quadratic OT plan": [[3, "plot-the-estimated-quadratic-ot-plan"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[4, "optimizing-the-gromov-wasserstein-distance-with-pytorch"]], "Graph generation": [[4, "graph-generation"]], "Optimizing GW w.r.t. the weights on a template structure": [[4, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Community clustering with uniform and estimated weights": [[4, "community-clustering-with-uniform-and-estimated-weights"]], "Graph compression with GW": [[4, "graph-compression-with-gw"]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[5, "sliced-wasserstein-barycenter-and-gradient-flow-with-pytorch"]], "Sliced Wasserstein gradient flow with Pytorch": [[5, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Animate trajectories of the gradient flow along iteration": [[5, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Compute the Sliced Wasserstein Barycenter": [[5, "compute-the-sliced-wasserstein-barycenter"]], "Animate trajectories of the barycenter along gradient descent": [[5, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[6, "spherical-sliced-wasserstein-embedding-on-sphere"]], "Gradient descent": [[6, "gradient-descent"]], "Plot trajectories of generated samples along iterations": [[6, "plot-trajectories-of-generated-samples-along-iterations"], [10, "plot-trajectories-of-generated-samples-along-iterations"]], "Animate trajectories of generated samples along iteration": [[6, "animate-trajectories-of-generated-samples-along-iteration"], [10, "animate-trajectories-of-generated-samples-along-iteration"]], "Continuous OT plan estimation with Pytorch": [[7, "continuous-ot-plan-estimation-with-pytorch"]], "Estimating deep dual variables for entropic OT": [[7, "estimating-deep-dual-variables-for-entropic-ot"]], "Plot the density on arget for a given source sample": [[7, "plot-the-density-on-arget-for-a-given-source-sample"]], "Wasserstein unmixing with PyTorch": [[8, "wasserstein-unmixing-with-pytorch"]], "Generate data": [[8, "generate-data"], [12, "generate-data"], [16, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [27, "generate-data"], [28, "generate-data"], [30, "generate-data"], [31, "generate-data"], [37, "generate-data"], [41, "generate-data"], [45, "generate-data"], [46, "generate-data"], [47, "generate-data"], [49, "generate-data"], [51, "generate-data"], [53, "generate-data"], [54, "generate-data"], [56, "generate-data"], [57, "generate-data"], [59, "generate-data"], [60, "generate-data"]], "Optimization of the model wrt the Wasserstein distance": [[8, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Estimated weights and convergence of the objective": [[8, "estimated-weights-and-convergence-of-the-objective"]], "Ploting the reweighted source distribution": [[8, "ploting-the-reweighted-source-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[9, "wasserstein-1d-flow-and-barycenter-with-pytorch"]], "Wasserstein barycenter": [[9, "wasserstein-barycenter"]], "Wasserstein 2 Minibatch GAN with PyTorch": [[10, "wasserstein-2-minibatch-gan-with-pytorch"]], "Generator Model": [[10, "generator-model"]], "Training the model": [[10, "training-the-model"]], "Generate and visualize data": [[10, "generate-and-visualize-data"]], "Computation times": [[11, "computation-times"], [19, "computation-times"], [29, "computation-times"], [35, "computation-times"], [43, "computation-times"], [52, "computation-times"], [55, "computation-times"], [61, "computation-times"]], "1D Wasserstein barycenter demo": [[12, "d-wasserstein-barycenter-demo"]], "Barycenter computation": [[12, "barycenter-computation"], [30, "barycenter-computation"], [33, "barycenter-computation"], [57, "barycenter-computation"]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[13, "d-wasserstein-barycenter-exact-lp-vs-entropic-regularization"]], "Gaussian Data": [[13, "gaussian-data"]], "Stair Data": [[13, "stair-data"]], "Dirac Data": [[13, "dirac-data"]], "Final figure": [[13, "final-figure"]], "Convolutional Wasserstein Barycenter example": [[14, "convolutional-wasserstein-barycenter-example"]], "Data preparation": [[14, "data-preparation"], [33, "data-preparation"]], "Barycenter computation and visualization": [[14, "barycenter-computation-and-visualization"], [15, "barycenter-computation-and-visualization"]], "Debiased Sinkhorn barycenter demo": [[15, "debiased-sinkhorn-barycenter-demo"]], "Debiased barycenter of 1D Gaussians": [[15, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[15, "debiased-barycenter-of-2d-images"]], "2D free support Wasserstein barycenters of distributions": [[16, "d-free-support-wasserstein-barycenters-of-distributions"]], "Compute free support Wasserstein barycenter": [[16, "compute-free-support-wasserstein-barycenter"]], "Plot the Wasserstein barycenter": [[16, "plot-the-wasserstein-barycenter"], [16, "id1"]], "2D free support Sinkhorn barycenters of distributions": [[17, "d-free-support-sinkhorn-barycenters-of-distributions"]], "General Parameters": [[17, "general-parameters"]], "Generate Data": [[17, "generate-data"]], "Inspect generated distributions": [[17, "inspect-generated-distributions"]], "Interpolating Empirical Distributions": [[17, "interpolating-empirical-distributions"]], "Generalized Wasserstein Barycenter Demo": [[18, "generalized-wasserstein-barycenter-demo"]], "Generate and plot data": [[18, "generate-and-plot-data"]], "Barycenter computation and plot": [[18, "barycenter-computation-and-plot"]], "Plotting projection matches": [[18, "plotting-projection-matches"]], "Rotation animation": [[18, "rotation-animation"]], "OT for domain adaptation": [[20, "ot-for-domain-adaptation"]], "Instantiate the different transport algorithms and fit them": [[20, "instantiate-the-different-transport-algorithms-and-fit-them"], [21, "instantiate-the-different-transport-algorithms-and-fit-them"], [22, "instantiate-the-different-transport-algorithms-and-fit-them"], [24, "instantiate-the-different-transport-algorithms-and-fit-them"], [26, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Fig 1 : plots source and target samples": [[20, "fig-1-plots-source-and-target-samples"], [23, "fig-1-plots-source-and-target-samples"], [24, "fig-1-plots-source-and-target-samples"]], "Fig 2 : plot optimal couplings and transported samples": [[20, "fig-2-plot-optimal-couplings-and-transported-samples"], [23, "fig-2-plot-optimal-couplings-and-transported-samples"], [24, "fig-2-plot-optimal-couplings-and-transported-samples"]], "OT for image color adaptation": [[21, "ot-for-image-color-adaptation"]], "Plot original image": [[21, "plot-original-image"]], "Scatter plot of colors": [[21, "scatter-plot-of-colors"]], "Plot new images": [[21, "plot-new-images"]], "OT for domain adaptation on empirical distributions": [[22, "ot-for-domain-adaptation-on-empirical-distributions"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[22, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [28, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plots optimal couplings for the different methods": [[22, "fig-2-plots-optimal-couplings-for-the-different-methods"], [28, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[22, "fig-3-plot-transported-samples"], [28, "fig-3-plot-transported-samples"]], "OT for multi-source target shift": [[23, "ot-for-multi-source-target-shift"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[23, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate JCPOT adaptation algorithm and fit it": [[23, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Run oracle transport algorithm with known proportions": [[23, "run-oracle-transport-algorithm-with-known-proportions"]], "OT with Laplacian regularization for domain adaptation": [[24, "ot-with-laplacian-regularization-for-domain-adaptation"]], "Linear OT mapping estimation": [[25, "linear-ot-mapping-estimation"]], "Estimate linear mapping and transport": [[25, "estimate-linear-mapping-and-transport"]], "Plot transported samples": [[25, "plot-transported-samples"], [26, "plot-transported-samples"]], "Load image data": [[25, "load-image-data"]], "Estimate mapping and adapt": [[25, "estimate-mapping-and-adapt"]], "Plot transformed images": [[25, "plot-transformed-images"], [27, "plot-transformed-images"]], "OT mapping estimation for domain adaptation": [[26, "ot-mapping-estimation-for-domain-adaptation"]], "OT for image color adaptation with mapping estimation": [[27, "ot-for-image-color-adaptation-with-mapping-estimation"]], "Domain adaptation for pixel distribution transfer": [[27, "domain-adaptation-for-pixel-distribution-transfer"]], "Plot original images": [[27, "plot-original-images"]], "Plot pixel values distribution": [[27, "plot-pixel-values-distribution"]], "OTDA unsupervised vs semi-supervised setting": [[28, "otda-unsupervised-vs-semi-supervised-setting"]], "Transport source samples onto target samples": [[28, "transport-source-samples-onto-target-samples"]], "Plot graphs barycenter using FGW": [[30, "plot-graphs-barycenter-using-fgw"]], "Plot Barycenter": [[30, "plot-barycenter"]], "Plot Fused-gromov-Wasserstein": [[31, "plot-fused-gromov-wasserstein"]], "Create structure matrices and across-feature distance matrix": [[31, "create-structure-matrices-and-across-feature-distance-matrix"]], "Plot matrices": [[31, "plot-matrices"]], "Compute FGW/GW": [[31, "compute-fgw-gw"]], "Visualize transport matrices": [[31, "visualize-transport-matrices"]], "Gromov-Wasserstein example": [[32, "gromov-wasserstein-example"]], "Sample two Gaussian distributions (2D and 3D)": [[32, "sample-two-gaussian-distributions-2d-and-3d"]], "Plotting the distributions": [[32, "plotting-the-distributions"]], "Compute distance kernels, normalize them and then display": [[32, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute Gromov-Wasserstein plans and distance": [[32, "compute-gromov-wasserstein-plans-and-distance"]], "Compute GW with a scalable stochastic method with any loss function": [[32, "compute-gw-with-a-scalable-stochastic-method-with-any-loss-function"]], "Gromov-Wasserstein Barycenter example": [[33, "gromov-wasserstein-barycenter-example"]], "Smacof MDS": [[33, "smacof-mds"]], "Visualization": [[33, "visualization"]], "(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[34, "fused-gromov-wasserstein-linear-dictionary-learning"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[34, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Estimate the gromov-wasserstein dictionary from the dataset": [[34, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Visualization of the estimated dictionary atoms": [[34, "visualization-of-the-estimated-dictionary-atoms"], [34, "id1"]], "Visualization of the embedding space": [[34, "visualization-of-the-embedding-space"], [34, "id2"]], "Endow the dataset with node features": [[34, "endow-the-dataset-with-node-features"]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[34, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Examples gallery": [[36, "examples-gallery"]], "OT and regularized OT": [[36, "ot-and-regularized-ot"]], "POT backend examples": [[36, "pot-backend-examples"]], "Wasserstein barycenters": [[36, "wasserstein-barycenters"]], "Domain adaptation examples": [[36, "domain-adaptation-examples"]], "Gromov and Fused-Gromov-Wasserstein": [[36, "gromov-and-fused-gromov-wasserstein"]], "Other OT problems": [[36, "other-ot-problems"]], "Sliced Wasserstein Distance": [[36, "sliced-wasserstein-distance"]], "Unbalanced and Partial OT": [[36, "unbalanced-and-partial-ot"]], "Wasserstein Discriminant Analysis": [[37, "wasserstein-discriminant-analysis"], [83, "wasserstein-discriminant-analysis"]], "Compute Fisher Discriminant Analysis": [[37, "compute-fisher-discriminant-analysis"]], "Compute Wasserstein Discriminant Analysis": [[37, "compute-wasserstein-discriminant-analysis"]], "Plot 2D projections": [[37, "plot-2d-projections"]], "Weak Optimal Transport VS exact Optimal Transport": [[38, "weak-optimal-transport-vs-exact-optimal-transport"]], "Generate data an plot it": [[38, "generate-data-an-plot-it"], [39, "generate-data-an-plot-it"]], "Compute Weak OT and exact OT solutions": [[38, "compute-weak-ot-and-exact-ot-solutions"]], "Plot weak OT and exact OT solutions": [[38, "plot-weak-ot-and-exact-ot-solutions"]], "Optimal transport with factored couplings": [[39, "optimal-transport-with-factored-couplings"]], "Compute Factore OT and exact OT solutions": [[39, "compute-factore-ot-and-exact-ot-solutions"]], "Plot factored OT and exact OT solutions": [[39, "plot-factored-ot-and-exact-ot-solutions"]], "Logo of the POT toolbox": [[40, "logo-of-the-pot-toolbox"]], "Data for logo": [[40, "data-for-logo"]], "Plot the logo (clear background)": [[40, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[40, "plot-the-logo-dark-background"]], "Screened optimal transport (Screenkhorn)": [[41, "screened-optimal-transport-screenkhorn"]], "Plot distributions and loss matrix": [[41, "plot-distributions-and-loss-matrix"], [45, "plot-distributions-and-loss-matrix"], [46, "plot-distributions-and-loss-matrix"], [56, "plot-distributions-and-loss-matrix"]], "Solve Screenkhorn": [[41, "solve-screenkhorn"]], "Stochastic examples": [[42, "stochastic-examples"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[42, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Discrete case": [[42, "discrete-case"]], "Semi-Continuous Case": [[42, "semi-continuous-case"]], "Plot Transportation Matrices": [[42, "plot-transportation-matrices"], [42, "id2"]], "Compute the Transportation Matrix for the Dual Problem": [[42, "compute-the-transportation-matrix-for-the-dual-problem"]], "Semi-continuous case": [[42, "id1"]], "Compare the results with the Sinkhorn algorithm": [[42, "compare-the-results-with-the-sinkhorn-algorithm"]], "Introduction to Optimal Transport with Python": [[44, "introduction-to-optimal-transport-with-python"]], "POT Python Optimal Transport Toolbox": [[44, "pot-python-optimal-transport-toolbox"]], "POT installation": [[44, "pot-installation"]], "Import the toolbox": [[44, "import-the-toolbox"]], "Getting help": [[44, "getting-help"]], "First OT Problem": [[44, "first-ot-problem"]], "Plotting bakeries in the city": [[44, "plotting-bakeries-in-the-city"]], "Cost matrix": [[44, "cost-matrix"]], "Solving the OT problem with ot.emd": [[44, "solving-the-ot-problem-with-ot-emd"]], "Transportation plan vizualization": [[44, "transportation-plan-vizualization"]], "OT loss and dual variables": [[44, "ot-loss-and-dual-variables"]], "Regularized OT with Sinkhorn": [[44, "regularized-ot-with-sinkhorn"]], "Algorithm": [[44, "algorithm"]], "Plot the matrix and the map": [[44, "plot-the-matrix-and-the-map"]], "Varying the regularization parameter in Sinkhorn": [[44, "varying-the-regularization-parameter-in-sinkhorn"]], "Wasserstein loss and computational time": [[44, "wasserstein-loss-and-computational-time"]], "Optimal Transport for 1D distributions": [[45, "optimal-transport-for-1d-distributions"]], "Solve EMD": [[45, "solve-emd"], [46, "solve-emd"], [51, "solve-emd"]], "Solve Sinkhorn": [[45, "solve-sinkhorn"], [46, "solve-sinkhorn"]], "Smooth optimal transport example": [[46, "smooth-optimal-transport-example"]], "Solve Smooth OT": [[46, "solve-smooth-ot"]], "Optimal Transport between 2D empirical distributions": [[47, "optimal-transport-between-2d-empirical-distributions"]], "Compute EMD": [[47, "compute-emd"]], "Compute Sinkhorn": [[47, "compute-sinkhorn"]], "Emprirical Sinkhorn": [[47, "emprirical-sinkhorn"]], "Optimal Transport with different gournd metrics": [[48, "optimal-transport-with-different-gournd-metrics"]], "Dataset 1 : uniform sampling": [[48, "dataset-1-uniform-sampling"]], "Dataset 1 : Plot OT Matrices": [[48, "dataset-1-plot-ot-matrices"]], "Dataset 2 : Partial circle": [[48, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[48, "dataset-2-plot-ot-matrices"]], "OT distances in 1D": [[49, "ot-distances-in-1d"]], "Compute EMD for the different losses": [[49, "compute-emd-for-the-different-losses"]], "Compute Sinkhorn for the different losses": [[49, "compute-sinkhorn-for-the-different-losses"]], "OT distance on the Circle": [[50, "ot-distance-on-the-circle"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[50, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Wasserstein distance between von Mises and uniform for different kappa": [[50, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Regularized OT with generic solver": [[51, "regularized-ot-with-generic-solver"]], "Solve EMD with Frobenius norm regularization": [[51, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[51, "solve-emd-with-entropic-regularization"]], "Solve EMD with Frobenius norm + entropic regularization": [[51, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Sliced Wasserstein Distance on 2D distributions": [[53, "sliced-wasserstein-distance-on-2d-distributions"]], "Sliced Wasserstein distance for different seeds and number of projections": [[53, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Plot Sliced Wasserstein Distance": [[53, "plot-sliced-wasserstein-distance"]], "Spherical Sliced Wasserstein on distributions in S^2": [[54, "spherical-sliced-wasserstein-on-distributions-in-s-2"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[54, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Plot Spherical Sliced Wasserstein": [[54, "plot-spherical-sliced-wasserstein"]], "1D Unbalanced optimal transport": [[56, "d-unbalanced-optimal-transport"]], "Solve Unbalanced Sinkhorn": [[56, "solve-unbalanced-sinkhorn"]], "plot the transported mass": [[56, "plot-the-transported-mass"]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[57, "d-wasserstein-barycenter-demo-for-unbalanced-distributions"]], "Barycentric interpolation": [[57, "barycentric-interpolation"]], "Partial Wasserstein and Gromov-Wasserstein example": [[58, "partial-wasserstein-and-gromov-wasserstein-example"]], "Sample two 2D Gaussian distributions and plot them": [[58, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Compute partial Wasserstein plans and distance": [[58, "compute-partial-wasserstein-plans-and-distance"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[58, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Compute partial Gromov-Wasserstein plans and distance": [[58, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Regularization path of l2-penalized unbalanced optimal transport": [[59, "regularization-path-of-l2-penalized-unbalanced-optimal-transport"]], "Compute semi-relaxed and fully relaxed regularization paths": [[59, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Plot the regularization path": [[59, "plot-the-regularization-path"]], "Animation of the regpath for UOT l2": [[59, "animation-of-the-regpath-for-uot-l2"]], "Plot the semi-relaxed regularization path": [[59, "plot-the-semi-relaxed-regularization-path"]], "Animation of the regpath for semi-relaxed UOT l2": [[59, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "2D examples of exact and entropic unbalanced optimal transport": [[60, "d-examples-of-exact-and-entropic-unbalanced-optimal-transport"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[60, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Plot the results": [[60, "plot-the-results"]], "Contributors": [[62, "contributors"], [62, "contributors"]], "Creators and Maintainers": [[62, "creators-and-maintainers"]], "Acknowledgments": [[62, "acknowledgments"]], "ot.backend": [[63, "module-ot.backend"]], "Performance": [[63, "performance"]], "Functions": [[63, "functions"], [64, "functions"], [65, "functions"], [66, "functions"], [67, "functions"], [68, "functions"], [69, "functions"], [70, "functions"], [71, "functions"], [72, "functions"], [73, "functions"], [74, "functions"], [75, "functions"], [76, "functions"], [77, "functions"], [78, "functions"], [79, "functions"], [80, "functions"], [81, "functions"]], "Classes": [[63, "classes"], [65, "classes"], [77, "classes"], [80, "classes"]], "ot.bregman": [[64, "module-ot.bregman"]], "Examples using ot.bregman.barycenter_debiased": [[64, "examples-using-ot-bregman-barycenter-debiased"]], "Examples using ot.bregman.convolutional_barycenter2d": [[64, "examples-using-ot-bregman-convolutional-barycenter2d"]], "Examples using ot.bregman.convolutional_barycenter2d_debiased": [[64, "examples-using-ot-bregman-convolutional-barycenter2d-debiased"]], "Examples using ot.bregman.empirical_sinkhorn": [[64, "examples-using-ot-bregman-empirical-sinkhorn"]], "Examples using ot.bregman.free_support_sinkhorn_barycenter": [[64, "examples-using-ot-bregman-free-support-sinkhorn-barycenter"]], "Dependency": [[64, null]], "Examples using ot.bregman.screenkhorn": [[64, "examples-using-ot-bregman-screenkhorn"]], "ot.da": [[65, "module-ot.da"]], "Examples using ot.da.BaseTransport": [[65, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[65, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[65, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[65, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearTransport": [[65, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[65, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[65, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[65, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[65, "examples-using-ot-da-sinkhorntransport"]], "ot.datasets": [[66, "module-ot.datasets"]], "Examples using ot.datasets.make_1D_gauss": [[66, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[66, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[66, "examples-using-ot-datasets-make-data-classif"]], "ot.dr": [[67, "module-ot.dr"]], "Examples using ot.dr.fda": [[67, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[67, "examples-using-ot-dr-wda"]], "ot.factored": [[68, "module-ot.factored"]], "ot.gaussian": [[69, "module-ot.gaussian"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[69, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "ot.gromov": [[70, "module-ot.gromov"]], "Examples using ot.gromov.entropic_gromov_wasserstein": [[70, "examples-using-ot-gromov-entropic-gromov-wasserstein"]], "Examples using ot.gromov.fgw_barycenters": [[70, "examples-using-ot-gromov-fgw-barycenters"]], "Examples using ot.gromov.fused_gromov_wasserstein_dictionary_learning": [[70, "examples-using-ot-gromov-fused-gromov-wasserstein-dictionary-learning"]], "Examples using ot.gromov.fused_gromov_wasserstein_linear_unmixing": [[70, "examples-using-ot-gromov-fused-gromov-wasserstein-linear-unmixing"]], "Examples using ot.gromov.gromov_wasserstein_dictionary_learning": [[70, "examples-using-ot-gromov-gromov-wasserstein-dictionary-learning"]], "Examples using ot.gromov.gromov_wasserstein_linear_unmixing": [[70, "examples-using-ot-gromov-gromov-wasserstein-linear-unmixing"]], "Examples using ot.gromov.pointwise_gromov_wasserstein": [[70, "examples-using-ot-gromov-pointwise-gromov-wasserstein"]], "Examples using ot.gromov.sampled_gromov_wasserstein": [[70, "examples-using-ot-gromov-sampled-gromov-wasserstein"]], "ot.lp": [[71, "module-ot.lp"]], "Examples using ot.lp.free_support_barycenter": [[71, "examples-using-ot-lp-free-support-barycenter"]], "Examples using ot.lp.generalized_free_support_barycenter": [[71, "examples-using-ot-lp-generalized-free-support-barycenter"]], "ot.optim": [[72, "module-ot.optim"]], "Examples using ot.optim.cg": [[72, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[72, "examples-using-ot-optim-gcg"]], "ot.partial": [[73, "module-ot.partial"]], "Examples using ot.partial.entropic_partial_gromov_wasserstein": [[73, "examples-using-ot-partial-entropic-partial-gromov-wasserstein"]], "Examples using ot.partial.entropic_partial_wasserstein": [[73, "examples-using-ot-partial-entropic-partial-wasserstein"]], "Examples using ot.partial.partial_gromov_wasserstein": [[73, "examples-using-ot-partial-partial-gromov-wasserstein"]], "Examples using ot.partial.partial_wasserstein": [[73, "examples-using-ot-partial-partial-wasserstein"]], "ot.plot": [[74, "module-ot.plot"]], "Examples using ot.plot.plot1D_mat": [[74, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[74, "examples-using-ot-plot-plot2d-samples-mat"]], "ot.regpath": [[75, "module-ot.regpath"]], "Examples using ot.regpath.compute_transport_plan": [[75, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[75, "examples-using-ot-regpath-regularization-path"]], "ot.sliced": [[76, "module-ot.sliced"]], "ot.smooth": [[77, "module-ot.smooth"]], "Examples using ot.smooth.smooth_ot_dual": [[77, "examples-using-ot-smooth-smooth-ot-dual"]], "ot.stochastic": [[78, "module-ot.stochastic"]], "Examples using ot.stochastic.loss_dual_entropic": [[78, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[78, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[78, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[78, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[78, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[78, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "ot.unbalanced": [[79, "module-ot.unbalanced"]], "Examples using ot.unbalanced.mm_unbalanced": [[79, "examples-using-ot-unbalanced-mm-unbalanced"]], "ot.utils": [[80, "module-ot.utils"]], "Examples using ot.utils.dist0": [[80, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_simplex": [[80, "examples-using-ot-utils-proj-simplex"]], "Examples using ot.utils.BaseEstimator": [[80, "examples-using-ot-utils-baseestimator"]], "Exceptions": [[80, "exceptions"]], "ot.weak": [[81, "module-ot.weak"]], "POT: Python Optimal Transport": [[82, "pot-python-optimal-transport"], [82, "pot-python-optimal-transport"]], "Contents": [[82, "contents"]], "Using and citing the toolbox": [[82, "using-and-citing-the-toolbox"]], "Installation": [[82, "installation"]], "Pip installation": [[82, "pip-installation"]], "Anaconda installation with conda-forge": [[82, "anaconda-installation-with-conda-forge"]], "Post installation check": [[82, "post-installation-check"]], "Dependencies": [[82, "dependencies"]], "Examples": [[82, "examples"]], "Short examples": [[82, "short-examples"]], "Examples and Notebooks": [[82, "examples-and-notebooks"]], "Acknowledgements": [[82, "acknowledgements"]], "Contributions and code of conduct": [[82, "contributions-and-code-of-conduct"]], "Support": [[82, "support"]], "References": [[82, "references"], [83, "references"]], "Indices and tables": [[82, "indices-and-tables"]], "Quick start guide": [[83, "quick-start-guide"]], "Why Optimal Transport ?": [[83, "why-optimal-transport"]], "When to use OT": [[83, "when-to-use-ot"]], "Wasserstein distance between distributions": [[83, "wasserstein-distance-between-distributions"]], "OT for mapping estimation": [[83, "ot-for-mapping-estimation"]], "When to use POT": [[83, "when-to-use-pot"]], "When not to use POT": [[83, "when-not-to-use-pot"]], "Optimal transport and Wasserstein distance": [[83, "optimal-transport-and-wasserstein-distance"]], "Solving optimal transport": [[83, "solving-optimal-transport"]], "Examples of use for ot.emd": [[83, "examples-of-use-for-ot-emd"]], "Computing Wasserstein distance": [[83, "computing-wasserstein-distance"]], "Examples of use for ot.emd2": [[83, "examples-of-use-for-ot-emd2"]], "Special cases": [[83, "special-cases"]], "Regularized Optimal Transport": [[83, "regularized-optimal-transport"]], "Entropic regularized OT": [[83, "entropic-regularized-ot"]], "Examples of use for ot.sinkhorn": [[83, "examples-of-use-for-ot-sinkhorn"]], "Examples of use for ot.sinkhorn2": [[83, "examples-of-use-for-ot-sinkhorn2"]], "Other regularizations": [[83, "other-regularizations"]], "Quadratic regularization": [[83, "quadratic-regularization"]], "Examples of use of quadratic regularization": [[83, "examples-of-use-of-quadratic-regularization"]], "Group Lasso regularization": [[83, "group-lasso-regularization"]], "Examples of group Lasso regularization": [[83, "examples-of-group-lasso-regularization"]], "Generic solvers": [[83, "generic-solvers"]], "Examples of the generic solvers": [[83, "examples-of-the-generic-solvers"]], "Wasserstein Barycenters": [[83, "wasserstein-barycenters"]], "Barycenters with fixed support": [[83, "barycenters-with-fixed-support"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[83, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[83, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Barycenters with free support": [[83, "barycenters-with-free-support"]], "Examples of free support barycenter estimation": [[83, "examples-of-free-support-barycenter-estimation"]], "Monge mapping and Domain adaptation": [[83, "monge-mapping-and-domain-adaptation"]], "Monge Mapping estimation": [[83, "monge-mapping-estimation"]], "Domain adaptation classes": [[83, "domain-adaptation-classes"]], "Examples of the use of OTDA classes": [[83, "examples-of-the-use-of-otda-classes"]], "Other applications": [[83, "other-applications"]], "Examples of the use of WDA": [[83, "examples-of-the-use-of-wda"]], "Unbalanced optimal transport": [[83, "unbalanced-optimal-transport"]], "Examples of Unbalanced OT": [[83, "examples-of-unbalanced-ot"]], "Unbalanced Barycenters": [[83, "unbalanced-barycenters"]], "Examples of Unbalanced OT barycenters": [[83, "examples-of-unbalanced-ot-barycenters"]], "Partial optimal transport": [[83, "partial-optimal-transport"]], "Examples of Partial OT": [[83, "examples-of-partial-ot"]], "Gromov-Wasserstein": [[83, "gromov-wasserstein"]], "Examples of computation of GW, regularized G and FGW": [[83, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Examples of GW, regularized G and FGW barycenters": [[83, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Solving OT with Multiple backends on CPU/GPU": [[83, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "How it works": [[83, "how-it-works"]], "GPU acceleration": [[83, "gpu-acceleration"]], "List of compatible Backends": [[83, "list-of-compatible-backends"]], "List of compatible modules": [[83, "list-of-compatible-modules"]], "FAQ": [[83, "faq"]], "Releases": [[84, "releases"]], "0.8.3dev": [[84, "dev"]], "New features": [[84, "new-features"], [84, "id2"], [84, "id7"], [84, "id10"]], "Closed issues": [[84, "closed-issues"], [84, "id3"], [84, "id5"], [84, "id8"], [84, "id11"], [84, "id13"], [84, "id16"], [84, "id19"], [84, "id22"]], "0.8.2": [[84, "id1"]], "0.8.1.0": [[84, "id4"]], "0.8.1": [[84, "id6"]], "0.8.0": [[84, "id9"]], "0.7.0": [[84, "id12"]], "Features": [[84, "features"], [84, "id15"], [84, "id18"], [84, "id21"]], "0.6.0": [[84, "id14"]], "0.5.0": [[84, "id17"]], "Deprecation": [[84, "deprecation"]], "0.4": [[84, "id20"]], "0.3.1": [[84, "id23"]], "0.3": [[84, "id24"]], "V0.2": [[84, "v0-2"]], "0.1.11": [[84, "id25"]], "0.1.10": [[84, "id26"]], "0.1.9": [[84, "id27"]], "0.1.7": [[84, "id28"]], "0.1.3": [[84, "id29"]], "First pre-release": [[84, "first-pre-release"]]}, "indexentries": {"barycenter() (in module ot)": [[2, "ot.barycenter"]], "barycenter_unbalanced() (in module ot)": [[2, "ot.barycenter_unbalanced"]], "binary_search_circle() (in module ot)": [[2, "ot.binary_search_circle"]], "dist() (in module ot)": [[2, "ot.dist"]], "emd() (in module ot)": [[2, "ot.emd"]], "emd2() (in module ot)": [[2, "ot.emd2"]], "emd2_1d() (in module ot)": [[2, "ot.emd2_1d"]], "emd_1d() (in module ot)": [[2, "ot.emd_1d"]], "factored_optimal_transport() (in module ot)": [[2, "ot.factored_optimal_transport"]], "fused_gromov_wasserstein() (in module ot)": [[2, "ot.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot)": [[2, "ot.fused_gromov_wasserstein2"]], "gromov_barycenters() (in module ot)": [[2, "ot.gromov_barycenters"]], "gromov_wasserstein() (in module ot)": [[2, "ot.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot)": [[2, "ot.gromov_wasserstein2"]], "max_sliced_wasserstein_distance() (in module ot)": [[2, "ot.max_sliced_wasserstein_distance"]], "module": [[2, "module-ot"], [63, "module-ot.backend"], [64, "module-ot.bregman"], [65, "module-ot.da"], [66, "module-ot.datasets"], [67, "module-ot.dr"], [68, "module-ot.factored"], [69, "module-ot.gaussian"], [70, "module-ot.gromov"], [71, "module-ot.lp"], [72, "module-ot.optim"], [73, "module-ot.partial"], [74, "module-ot.plot"], [75, "module-ot.regpath"], [76, "module-ot.sliced"], [77, "module-ot.smooth"], [78, "module-ot.stochastic"], [79, "module-ot.unbalanced"], [80, "module-ot.utils"], [81, "module-ot.weak"]], "ot": [[2, "module-ot"]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[2, "ot.semidiscrete_wasserstein2_unif_circle"]], "sinkhorn() (in module ot)": [[2, "ot.sinkhorn"]], "sinkhorn2() (in module ot)": [[2, "ot.sinkhorn2"]], "sinkhorn_lpl1_mm() (in module ot)": [[2, "ot.sinkhorn_lpl1_mm"]], "sinkhorn_unbalanced() (in module ot)": [[2, "ot.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot)": [[2, "ot.sinkhorn_unbalanced2"]], "sliced_wasserstein_distance() (in module ot)": [[2, "ot.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot)": [[2, "ot.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot)": [[2, "ot.sliced_wasserstein_sphere_unif"]], "solve() (in module ot)": [[2, "ot.solve"]], "tic() (in module ot)": [[2, "ot.tic"]], "toc() (in module ot)": [[2, "ot.toc"]], "toq() (in module ot)": [[2, "ot.toq"]], "unif() (in module ot)": [[2, "ot.unif"]], "wasserstein_1d() (in module ot)": [[2, "ot.wasserstein_1d"]], "wasserstein_circle() (in module ot)": [[2, "ot.wasserstein_circle"]], "weak_optimal_transport() (in module ot)": [[2, "ot.weak_optimal_transport"]], "backend (class in ot.backend)": [[63, "ot.backend.Backend"]], "cupybackend (class in ot.backend)": [[63, "ot.backend.CupyBackend"]], "jaxbackend (class in ot.backend)": [[63, "ot.backend.JaxBackend"]], "numpybackend (class in ot.backend)": [[63, "ot.backend.NumpyBackend"]], "tensorflowbackend (class in ot.backend)": [[63, "ot.backend.TensorflowBackend"]], "torchbackend (class in ot.backend)": [[63, "ot.backend.TorchBackend"]], "abs() (ot.backend.backend method)": [[63, "ot.backend.Backend.abs"]], "abs() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.abs"]], "abs() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.abs"]], "abs() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.abs"]], "abs() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.abs"]], "abs() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.abs"]], "allclose() (ot.backend.backend method)": [[63, "ot.backend.Backend.allclose"]], "allclose() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.allclose"]], "allclose() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.allclose"]], "allclose() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.allclose"]], "allclose() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.allclose"]], "allclose() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.allclose"]], "any() (ot.backend.backend method)": [[63, "ot.backend.Backend.any"]], "any() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.any"]], "any() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.any"]], "any() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.any"]], "any() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.any"]], "any() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.any"]], "arange() (ot.backend.backend method)": [[63, "ot.backend.Backend.arange"]], "arange() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.arange"]], "arange() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.arange"]], "arange() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.arange"]], "arange() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.arange"]], "arange() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.arange"]], "argmax() (ot.backend.backend method)": [[63, "ot.backend.Backend.argmax"]], "argmax() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.argmax"]], "argmax() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.argmax"]], "argmax() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.argmax"]], "argmax() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.argmax"]], "argmax() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.argmax"]], "argmin() (ot.backend.backend method)": [[63, "ot.backend.Backend.argmin"]], "argmin() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.argmin"]], "argmin() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.argmin"]], "argmin() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.argmin"]], "argmin() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.argmin"]], "argmin() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.argmin"]], "argsort() (ot.backend.backend method)": [[63, "ot.backend.Backend.argsort"]], "argsort() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.argsort"]], "argsort() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.argsort"]], "argsort() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.argsort"]], "argsort() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.argsort"]], "argsort() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.argsort"]], "array_equal() (ot.backend.backend method)": [[63, "ot.backend.Backend.array_equal"]], "array_equal() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.array_equal"]], "array_equal() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.array_equal"]], "array_equal() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.array_equal"]], "array_equal() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.array_equal"]], "array_equal() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.array_equal"]], "assert_same_dtype_device() (ot.backend.backend method)": [[63, "ot.backend.Backend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.assert_same_dtype_device"]], "atan2() (ot.backend.backend method)": [[63, "ot.backend.Backend.atan2"]], "atan2() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.atan2"]], "atan2() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.atan2"]], "atan2() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.atan2"]], "atan2() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.atan2"]], "atan2() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.atan2"]], "bitsize() (ot.backend.backend method)": [[63, "ot.backend.Backend.bitsize"]], "bitsize() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.bitsize"]], "bitsize() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.bitsize"]], "bitsize() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.bitsize"]], "bitsize() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.bitsize"]], "bitsize() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.bitsize"]], "clip() (ot.backend.backend method)": [[63, "ot.backend.Backend.clip"]], "clip() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.clip"]], "clip() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.clip"]], "clip() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.clip"]], "clip() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.clip"]], "clip() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.clip"]], "concatenate() (ot.backend.backend method)": [[63, "ot.backend.Backend.concatenate"]], "concatenate() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.concatenate"]], "concatenate() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.concatenate"]], "concatenate() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.concatenate"]], "concatenate() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.concatenate"]], "concatenate() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.concatenate"]], "coo_matrix() (ot.backend.backend method)": [[63, "ot.backend.Backend.coo_matrix"]], "coo_matrix() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.coo_matrix"]], "coo_matrix() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.coo_matrix"]], "coo_matrix() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.coo_matrix"]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.coo_matrix"]], "coo_matrix() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.coo_matrix"]], "copy() (ot.backend.backend method)": [[63, "ot.backend.Backend.copy"]], "copy() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.copy"]], "copy() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.copy"]], "copy() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.copy"]], "copy() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.copy"]], "copy() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.copy"]], "cumsum() (ot.backend.backend method)": [[63, "ot.backend.Backend.cumsum"]], "cumsum() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.cumsum"]], "cumsum() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.cumsum"]], "cumsum() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.cumsum"]], "cumsum() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.cumsum"]], "cumsum() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.cumsum"]], "device_type() (ot.backend.backend method)": [[63, "ot.backend.Backend.device_type"]], "device_type() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.device_type"]], "device_type() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.device_type"]], "device_type() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.device_type"]], "device_type() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.device_type"]], "device_type() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.device_type"]], "diag() (ot.backend.backend method)": [[63, "ot.backend.Backend.diag"]], "diag() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.diag"]], "diag() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.diag"]], "diag() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.diag"]], "diag() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.diag"]], "diag() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.diag"]], "dot() (ot.backend.backend method)": [[63, "ot.backend.Backend.dot"]], "dot() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.dot"]], "dot() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.dot"]], "dot() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.dot"]], "dot() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.dot"]], "dot() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.dot"]], "dtype_device() (ot.backend.backend method)": [[63, "ot.backend.Backend.dtype_device"]], "dtype_device() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.dtype_device"]], "dtype_device() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.dtype_device"]], "dtype_device() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.dtype_device"]], "dtype_device() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.dtype_device"]], "dtype_device() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.dtype_device"]], "einsum() (ot.backend.backend method)": [[63, "ot.backend.Backend.einsum"]], "einsum() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.einsum"]], "einsum() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.einsum"]], "einsum() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.einsum"]], "einsum() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.einsum"]], "einsum() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.einsum"]], "eliminate_zeros() (ot.backend.backend method)": [[63, "ot.backend.Backend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.eliminate_zeros"]], "exp() (ot.backend.backend method)": [[63, "ot.backend.Backend.exp"]], "exp() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.exp"]], "exp() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.exp"]], "exp() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.exp"]], "exp() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.exp"]], "exp() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.exp"]], "eye() (ot.backend.backend method)": [[63, "ot.backend.Backend.eye"]], "eye() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.eye"]], "eye() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.eye"]], "eye() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.eye"]], "eye() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.eye"]], "eye() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.eye"]], "flip() (ot.backend.backend method)": [[63, "ot.backend.Backend.flip"]], "flip() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.flip"]], "flip() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.flip"]], "flip() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.flip"]], "flip() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.flip"]], "flip() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.flip"]], "floor() (ot.backend.backend method)": [[63, "ot.backend.Backend.floor"]], "floor() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.floor"]], "floor() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.floor"]], "floor() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.floor"]], "floor() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.floor"]], "floor() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.floor"]], "from_numpy() (ot.backend.backend method)": [[63, "ot.backend.Backend.from_numpy"]], "full() (ot.backend.backend method)": [[63, "ot.backend.Backend.full"]], "full() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.full"]], "full() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.full"]], "full() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.full"]], "full() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.full"]], "full() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.full"]], "get_backend() (in module ot.backend)": [[63, "ot.backend.get_backend"]], "get_backend_list() (in module ot.backend)": [[63, "ot.backend.get_backend_list"]], "inv() (ot.backend.backend method)": [[63, "ot.backend.Backend.inv"]], "inv() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.inv"]], "inv() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.inv"]], "inv() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.inv"]], "inv() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.inv"]], "inv() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.inv"]], "is_floating_point() (ot.backend.backend method)": [[63, "ot.backend.Backend.is_floating_point"]], "is_floating_point() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.is_floating_point"]], "is_floating_point() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.is_floating_point"]], "is_floating_point() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.is_floating_point"]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.is_floating_point"]], "is_floating_point() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.is_floating_point"]], "isfinite() (ot.backend.backend method)": [[63, "ot.backend.Backend.isfinite"]], "isfinite() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.isfinite"]], "isfinite() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.isfinite"]], "isfinite() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.isfinite"]], "isfinite() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.isfinite"]], "isfinite() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.isfinite"]], "isinf() (ot.backend.backend method)": [[63, "ot.backend.Backend.isinf"]], "isinf() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.isinf"]], "isinf() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.isinf"]], "isinf() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.isinf"]], "isinf() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.isinf"]], "isinf() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.isinf"]], "isnan() (ot.backend.backend method)": [[63, "ot.backend.Backend.isnan"]], "isnan() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.isnan"]], "isnan() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.isnan"]], "isnan() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.isnan"]], "isnan() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.isnan"]], "isnan() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.isnan"]], "issparse() (ot.backend.backend method)": [[63, "ot.backend.Backend.issparse"]], "issparse() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.issparse"]], "issparse() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.issparse"]], "issparse() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.issparse"]], "issparse() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.issparse"]], "issparse() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.issparse"]], "kl_div() (ot.backend.backend method)": [[63, "ot.backend.Backend.kl_div"]], "kl_div() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.kl_div"]], "kl_div() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.kl_div"]], "kl_div() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.kl_div"]], "kl_div() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.kl_div"]], "kl_div() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.kl_div"]], "linspace() (ot.backend.backend method)": [[63, "ot.backend.Backend.linspace"]], "linspace() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.linspace"]], "linspace() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.linspace"]], "linspace() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.linspace"]], "linspace() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.linspace"]], "linspace() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.linspace"]], "log() (ot.backend.backend method)": [[63, "ot.backend.Backend.log"]], "log() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.log"]], "log() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.log"]], "log() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.log"]], "log() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.log"]], "log() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.log"]], "logsumexp() (ot.backend.backend method)": [[63, "ot.backend.Backend.logsumexp"]], "logsumexp() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.logsumexp"]], "logsumexp() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.logsumexp"]], "logsumexp() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.logsumexp"]], "logsumexp() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.logsumexp"]], "logsumexp() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.logsumexp"]], "max() (ot.backend.backend method)": [[63, "ot.backend.Backend.max"]], "max() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.max"]], "max() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.max"]], "max() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.max"]], "max() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.max"]], "max() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.max"]], "maximum() (ot.backend.backend method)": [[63, "ot.backend.Backend.maximum"]], "maximum() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.maximum"]], "maximum() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.maximum"]], "maximum() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.maximum"]], "maximum() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.maximum"]], "maximum() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.maximum"]], "mean() (ot.backend.backend method)": [[63, "ot.backend.Backend.mean"]], "mean() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.mean"]], "mean() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.mean"]], "mean() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.mean"]], "mean() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.mean"]], "mean() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.mean"]], "meshgrid() (ot.backend.backend method)": [[63, "ot.backend.Backend.meshgrid"]], "meshgrid() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.meshgrid"]], "meshgrid() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.meshgrid"]], "meshgrid() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.meshgrid"]], "meshgrid() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.meshgrid"]], "meshgrid() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.meshgrid"]], "min() (ot.backend.backend method)": [[63, "ot.backend.Backend.min"]], "min() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.min"]], "min() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.min"]], "min() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.min"]], "min() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.min"]], "min() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.min"]], "minimum() (ot.backend.backend method)": [[63, "ot.backend.Backend.minimum"]], "minimum() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.minimum"]], "minimum() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.minimum"]], "minimum() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.minimum"]], "minimum() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.minimum"]], "minimum() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.minimum"]], "norm() (ot.backend.backend method)": [[63, "ot.backend.Backend.norm"]], "norm() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.norm"]], "norm() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.norm"]], "norm() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.norm"]], "norm() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.norm"]], "norm() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.norm"]], "ones() (ot.backend.backend method)": [[63, "ot.backend.Backend.ones"]], "ones() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.ones"]], "ones() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.ones"]], "ones() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.ones"]], "ones() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.ones"]], "ones() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.ones"]], "ot.backend": [[63, "module-ot.backend"]], "outer() (ot.backend.backend method)": [[63, "ot.backend.Backend.outer"]], "outer() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.outer"]], "outer() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.outer"]], "outer() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.outer"]], "outer() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.outer"]], "outer() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.outer"]], "power() (ot.backend.backend method)": [[63, "ot.backend.Backend.power"]], "power() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.power"]], "power() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.power"]], "power() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.power"]], "power() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.power"]], "power() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.power"]], "prod() (ot.backend.backend method)": [[63, "ot.backend.Backend.prod"]], "prod() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.prod"]], "prod() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.prod"]], "prod() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.prod"]], "prod() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.prod"]], "prod() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.prod"]], "qr() (ot.backend.backend method)": [[63, "ot.backend.Backend.qr"]], "qr() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.qr"]], "qr() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.qr"]], "qr() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.qr"]], "qr() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.qr"]], "qr() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.qr"]], "rand() (ot.backend.backend method)": [[63, "ot.backend.Backend.rand"]], "rand() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.rand"]], "rand() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.rand"]], "rand() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.rand"]], "rand() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.rand"]], "rand() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.rand"]], "randn() (ot.backend.backend method)": [[63, "ot.backend.Backend.randn"]], "randn() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.randn"]], "randn() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.randn"]], "randn() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.randn"]], "randn() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.randn"]], "randn() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.randn"]], "repeat() (ot.backend.backend method)": [[63, "ot.backend.Backend.repeat"]], "repeat() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.repeat"]], "repeat() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.repeat"]], "repeat() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.repeat"]], "repeat() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.repeat"]], "repeat() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.repeat"]], "reshape() (ot.backend.backend method)": [[63, "ot.backend.Backend.reshape"]], "reshape() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.reshape"]], "reshape() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.reshape"]], "reshape() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.reshape"]], "reshape() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.reshape"]], "reshape() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.reshape"]], "searchsorted() (ot.backend.backend method)": [[63, "ot.backend.Backend.searchsorted"]], "searchsorted() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.searchsorted"]], "searchsorted() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.searchsorted"]], "searchsorted() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.searchsorted"]], "searchsorted() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.searchsorted"]], "searchsorted() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.searchsorted"]], "seed() (ot.backend.backend method)": [[63, "ot.backend.Backend.seed"]], "seed() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.seed"]], "seed() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.seed"]], "seed() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.seed"]], "seed() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.seed"]], "seed() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.seed"]], "set_gradients() (ot.backend.backend method)": [[63, "ot.backend.Backend.set_gradients"]], "set_gradients() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.set_gradients"]], "set_gradients() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.set_gradients"]], "set_gradients() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.set_gradients"]], "set_gradients() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.set_gradients"]], "set_gradients() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.set_gradients"]], "solve() (ot.backend.backend method)": [[63, "ot.backend.Backend.solve"]], "solve() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.solve"]], "solve() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.solve"]], "solve() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.solve"]], "solve() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.solve"]], "solve() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.solve"]], "sort() (ot.backend.backend method)": [[63, "ot.backend.Backend.sort"]], "sort() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.sort"]], "sort() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.sort"]], "sort() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.sort"]], "sort() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.sort"]], "sort() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.sort"]], "sort2() (ot.backend.backend method)": [[63, "ot.backend.Backend.sort2"]], "sort2() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.sort2"]], "sort2() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.sort2"]], "sort2() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.sort2"]], "sort2() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.sort2"]], "sort2() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.sort2"]], "sqrt() (ot.backend.backend method)": [[63, "ot.backend.Backend.sqrt"]], "sqrt() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.sqrt"]], "sqrt() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.sqrt"]], "sqrt() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.sqrt"]], "sqrt() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.sqrt"]], "sqrt() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.sqrt"]], "sqrtm() (ot.backend.backend method)": [[63, "ot.backend.Backend.sqrtm"]], "sqrtm() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.sqrtm"]], "sqrtm() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.sqrtm"]], "sqrtm() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.sqrtm"]], "sqrtm() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.sqrtm"]], "sqrtm() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.sqrtm"]], "squeeze() (ot.backend.backend method)": [[63, "ot.backend.Backend.squeeze"]], "squeeze() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.squeeze"]], "squeeze() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.squeeze"]], "squeeze() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.squeeze"]], "squeeze() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.squeeze"]], "squeeze() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.squeeze"]], "stack() (ot.backend.backend method)": [[63, "ot.backend.Backend.stack"]], "stack() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.stack"]], "stack() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.stack"]], "stack() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.stack"]], "stack() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.stack"]], "stack() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.stack"]], "std() (ot.backend.backend method)": [[63, "ot.backend.Backend.std"]], "std() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.std"]], "std() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.std"]], "std() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.std"]], "std() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.std"]], "std() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.std"]], "sum() (ot.backend.backend method)": [[63, "ot.backend.Backend.sum"]], "sum() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.sum"]], "sum() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.sum"]], "sum() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.sum"]], "sum() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.sum"]], "sum() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.sum"]], "take_along_axis() (ot.backend.backend method)": [[63, "ot.backend.Backend.take_along_axis"]], "take_along_axis() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.take_along_axis"]], "take_along_axis() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.take_along_axis"]], "take_along_axis() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.take_along_axis"]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.take_along_axis"]], "take_along_axis() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.take_along_axis"]], "tile() (ot.backend.backend method)": [[63, "ot.backend.Backend.tile"]], "tile() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.tile"]], "tile() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.tile"]], "tile() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.tile"]], "tile() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.tile"]], "tile() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.tile"]], "to_numpy() (in module ot.backend)": [[63, "ot.backend.to_numpy"]], "to_numpy() (ot.backend.backend method)": [[63, "ot.backend.Backend.to_numpy"]], "tocsr() (ot.backend.backend method)": [[63, "ot.backend.Backend.tocsr"]], "tocsr() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.tocsr"]], "tocsr() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.tocsr"]], "tocsr() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.tocsr"]], "tocsr() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.tocsr"]], "tocsr() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.tocsr"]], "todense() (ot.backend.backend method)": [[63, "ot.backend.Backend.todense"]], "todense() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.todense"]], "todense() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.todense"]], "todense() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.todense"]], "todense() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.todense"]], "todense() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.todense"]], "trace() (ot.backend.backend method)": [[63, "ot.backend.Backend.trace"]], "trace() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.trace"]], "trace() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.trace"]], "trace() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.trace"]], "trace() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.trace"]], "trace() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.trace"]], "transpose() (ot.backend.backend method)": [[63, "ot.backend.Backend.transpose"]], "transpose() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.transpose"]], "transpose() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.transpose"]], "transpose() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.transpose"]], "transpose() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.transpose"]], "transpose() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.transpose"]], "unique() (ot.backend.backend method)": [[63, "ot.backend.Backend.unique"]], "unique() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.unique"]], "unique() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.unique"]], "unique() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.unique"]], "unique() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.unique"]], "unique() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.unique"]], "where() (ot.backend.backend method)": [[63, "ot.backend.Backend.where"]], "where() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.where"]], "where() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.where"]], "where() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.where"]], "where() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.where"]], "where() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.where"]], "zero_pad() (ot.backend.backend method)": [[63, "ot.backend.Backend.zero_pad"]], "zero_pad() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.zero_pad"]], "zero_pad() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.zero_pad"]], "zero_pad() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.zero_pad"]], "zero_pad() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.zero_pad"]], "zero_pad() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.zero_pad"]], "zeros() (ot.backend.backend method)": [[63, "ot.backend.Backend.zeros"]], "zeros() (ot.backend.cupybackend method)": [[63, "ot.backend.CupyBackend.zeros"]], "zeros() (ot.backend.jaxbackend method)": [[63, "ot.backend.JaxBackend.zeros"]], "zeros() (ot.backend.numpybackend method)": [[63, "ot.backend.NumpyBackend.zeros"]], "zeros() (ot.backend.tensorflowbackend method)": [[63, "ot.backend.TensorflowBackend.zeros"]], "zeros() (ot.backend.torchbackend method)": [[63, "ot.backend.TorchBackend.zeros"]], "barycenter() (in module ot.bregman)": [[64, "ot.bregman.barycenter"]], "barycenter_debiased() (in module ot.bregman)": [[64, "ot.bregman.barycenter_debiased"]], "barycenter_sinkhorn() (in module ot.bregman)": [[64, "ot.bregman.barycenter_sinkhorn"]], "barycenter_stabilized() (in module ot.bregman)": [[64, "ot.bregman.barycenter_stabilized"]], "convolutional_barycenter2d() (in module ot.bregman)": [[64, "ot.bregman.convolutional_barycenter2d"]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[64, "ot.bregman.convolutional_barycenter2d_debiased"]], "empirical_sinkhorn() (in module ot.bregman)": [[64, "ot.bregman.empirical_sinkhorn"]], "empirical_sinkhorn2() (in module ot.bregman)": [[64, "ot.bregman.empirical_sinkhorn2"]], "empirical_sinkhorn_divergence() (in module ot.bregman)": [[64, "ot.bregman.empirical_sinkhorn_divergence"]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[64, "ot.bregman.free_support_sinkhorn_barycenter"]], "geometricbar() (in module ot.bregman)": [[64, "ot.bregman.geometricBar"]], "geometricmean() (in module ot.bregman)": [[64, "ot.bregman.geometricMean"]], "greenkhorn() (in module ot.bregman)": [[64, "ot.bregman.greenkhorn"]], "jcpot_barycenter() (in module ot.bregman)": [[64, "ot.bregman.jcpot_barycenter"]], "ot.bregman": [[64, "module-ot.bregman"]], "projc() (in module ot.bregman)": [[64, "ot.bregman.projC"]], "projr() (in module ot.bregman)": [[64, "ot.bregman.projR"]], "screenkhorn() (in module ot.bregman)": [[64, "ot.bregman.screenkhorn"]], "sinkhorn() (in module ot.bregman)": [[64, "ot.bregman.sinkhorn"]], "sinkhorn2() (in module ot.bregman)": [[64, "ot.bregman.sinkhorn2"]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[64, "ot.bregman.sinkhorn_epsilon_scaling"]], "sinkhorn_knopp() (in module ot.bregman)": [[64, "ot.bregman.sinkhorn_knopp"]], "sinkhorn_log() (in module ot.bregman)": [[64, "ot.bregman.sinkhorn_log"]], "sinkhorn_stabilized() (in module ot.bregman)": [[64, "ot.bregman.sinkhorn_stabilized"]], "unmix() (in module ot.bregman)": [[64, "ot.bregman.unmix"]], "basetransport (class in ot.da)": [[65, "ot.da.BaseTransport"]], "emdlaplacetransport (class in ot.da)": [[65, "ot.da.EMDLaplaceTransport"]], "emdtransport (class in ot.da)": [[65, "ot.da.EMDTransport"]], "jcpottransport (class in ot.da)": [[65, "ot.da.JCPOTTransport"]], "lineartransport (class in ot.da)": [[65, "ot.da.LinearTransport"]], "mappingtransport (class in ot.da)": [[65, "ot.da.MappingTransport"]], "sinkhornl1l2transport (class in ot.da)": [[65, "ot.da.SinkhornL1l2Transport"]], "sinkhornlpl1transport (class in ot.da)": [[65, "ot.da.SinkhornLpl1Transport"]], "sinkhorntransport (class in ot.da)": [[65, "ot.da.SinkhornTransport"]], "unbalancedsinkhorntransport (class in ot.da)": [[65, "ot.da.UnbalancedSinkhornTransport"]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[65, "ot.da.EMDLaplaceTransport.coupling_"]], "coupling_ (ot.da.emdtransport attribute)": [[65, "ot.da.EMDTransport.coupling_"]], "coupling_ (ot.da.jcpottransport attribute)": [[65, "ot.da.JCPOTTransport.coupling_"]], "coupling_ (ot.da.mappingtransport attribute)": [[65, "ot.da.MappingTransport.coupling_"]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[65, "ot.da.SinkhornL1l2Transport.coupling_"]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[65, "ot.da.SinkhornLpl1Transport.coupling_"]], "coupling_ (ot.da.sinkhorntransport attribute)": [[65, "ot.da.SinkhornTransport.coupling_"]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[65, "ot.da.UnbalancedSinkhornTransport.coupling_"]], "distribution_estimation_uniform() (in module ot.da)": [[65, "ot.da.distribution_estimation_uniform"]], "emd_laplace() (in module ot.da)": [[65, "ot.da.emd_laplace"]], "fit() (ot.da.basetransport method)": [[65, "ot.da.BaseTransport.fit"]], "fit() (ot.da.emdlaplacetransport method)": [[65, "ot.da.EMDLaplaceTransport.fit"]], "fit() (ot.da.emdtransport method)": [[65, "ot.da.EMDTransport.fit"]], "fit() (ot.da.jcpottransport method)": [[65, "ot.da.JCPOTTransport.fit"]], "fit() (ot.da.lineartransport method)": [[65, "ot.da.LinearTransport.fit"]], "fit() (ot.da.mappingtransport method)": [[65, "ot.da.MappingTransport.fit"]], "fit() (ot.da.sinkhornl1l2transport method)": [[65, "ot.da.SinkhornL1l2Transport.fit"]], "fit() (ot.da.sinkhornlpl1transport method)": [[65, "ot.da.SinkhornLpl1Transport.fit"]], "fit() (ot.da.sinkhorntransport method)": [[65, "ot.da.SinkhornTransport.fit"]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[65, "ot.da.UnbalancedSinkhornTransport.fit"]], "fit_transform() (ot.da.basetransport method)": [[65, "ot.da.BaseTransport.fit_transform"]], "inverse_transform() (ot.da.basetransport method)": [[65, "ot.da.BaseTransport.inverse_transform"]], "inverse_transform() (ot.da.lineartransport method)": [[65, "ot.da.LinearTransport.inverse_transform"]], "inverse_transform_labels() (ot.da.basetransport method)": [[65, "ot.da.BaseTransport.inverse_transform_labels"]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[65, "ot.da.JCPOTTransport.inverse_transform_labels"]], "joint_ot_mapping_kernel() (in module ot.da)": [[65, "ot.da.joint_OT_mapping_kernel"]], "joint_ot_mapping_linear() (in module ot.da)": [[65, "ot.da.joint_OT_mapping_linear"]], "log_ (ot.da.jcpottransport attribute)": [[65, "ot.da.JCPOTTransport.log_"]], "log_ (ot.da.mappingtransport attribute)": [[65, "ot.da.MappingTransport.log_"]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[65, "ot.da.SinkhornL1l2Transport.log_"]], "log_ (ot.da.sinkhorntransport attribute)": [[65, "ot.da.SinkhornTransport.log_"]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[65, "ot.da.UnbalancedSinkhornTransport.log_"]], "mapping_ (ot.da.mappingtransport attribute)": [[65, "ot.da.MappingTransport.mapping_"]], "ot.da": [[65, "module-ot.da"]], "proportions_ (ot.da.jcpottransport attribute)": [[65, "ot.da.JCPOTTransport.proportions_"]], "sinkhorn_l1l2_gl() (in module ot.da)": [[65, "ot.da.sinkhorn_l1l2_gl"]], "sinkhorn_lpl1_mm() (in module ot.da)": [[65, "ot.da.sinkhorn_lpl1_mm"]], "transform() (ot.da.basetransport method)": [[65, "ot.da.BaseTransport.transform"]], "transform() (ot.da.jcpottransport method)": [[65, "ot.da.JCPOTTransport.transform"]], "transform() (ot.da.lineartransport method)": [[65, "ot.da.LinearTransport.transform"]], "transform() (ot.da.mappingtransport method)": [[65, "ot.da.MappingTransport.transform"]], "transform_labels() (ot.da.basetransport method)": [[65, "ot.da.BaseTransport.transform_labels"]], "transform_labels() (ot.da.jcpottransport method)": [[65, "ot.da.JCPOTTransport.transform_labels"]], "make_1d_gauss() (in module ot.datasets)": [[66, "ot.datasets.make_1D_gauss"]], "make_2d_samples_gauss() (in module ot.datasets)": [[66, "ot.datasets.make_2D_samples_gauss"]], "make_data_classif() (in module ot.datasets)": [[66, "ot.datasets.make_data_classif"]], "ot.datasets": [[66, "module-ot.datasets"]], "dist() (in module ot.dr)": [[67, "ot.dr.dist"]], "fda() (in module ot.dr)": [[67, "ot.dr.fda"]], "logsumexp() (in module ot.dr)": [[67, "ot.dr.logsumexp"]], "ot.dr": [[67, "module-ot.dr"]], "projection_robust_wasserstein() (in module ot.dr)": [[67, "ot.dr.projection_robust_wasserstein"]], "sinkhorn() (in module ot.dr)": [[67, "ot.dr.sinkhorn"]], "sinkhorn_log() (in module ot.dr)": [[67, "ot.dr.sinkhorn_log"]], "split_classes() (in module ot.dr)": [[67, "ot.dr.split_classes"]], "wda() (in module ot.dr)": [[67, "ot.dr.wda"]], "factored_optimal_transport() (in module ot.factored)": [[68, "ot.factored.factored_optimal_transport"]], "ot.factored": [[68, "module-ot.factored"]], "bures_wasserstein_distance() (in module ot.gaussian)": [[69, "ot.gaussian.bures_wasserstein_distance"]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[69, "ot.gaussian.bures_wasserstein_mapping"]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[69, "ot.gaussian.empirical_bures_wasserstein_distance"]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[69, "ot.gaussian.empirical_bures_wasserstein_mapping"]], "ot.gaussian": [[69, "module-ot.gaussian"]], "gw_distance_estimation() (in module ot.gromov)": [[70, "ot.gromov.GW_distance_estimation"]], "entropic_gromov_barycenters() (in module ot.gromov)": [[70, "ot.gromov.entropic_gromov_barycenters"]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[70, "ot.gromov.entropic_gromov_wasserstein"]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[70, "ot.gromov.entropic_gromov_wasserstein2"]], "fgw_barycenters() (in module ot.gromov)": [[70, "ot.gromov.fgw_barycenters"]], "fused_gromov_wasserstein() (in module ot.gromov)": [[70, "ot.gromov.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[70, "ot.gromov.fused_gromov_wasserstein2"]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[70, "ot.gromov.fused_gromov_wasserstein_dictionary_learning"]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[70, "ot.gromov.fused_gromov_wasserstein_linear_unmixing"]], "gromov_barycenters() (in module ot.gromov)": [[70, "ot.gromov.gromov_barycenters"]], "gromov_wasserstein() (in module ot.gromov)": [[70, "ot.gromov.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot.gromov)": [[70, "ot.gromov.gromov_wasserstein2"]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[70, "ot.gromov.gromov_wasserstein_dictionary_learning"]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[70, "ot.gromov.gromov_wasserstein_linear_unmixing"]], "gwggrad() (in module ot.gromov)": [[70, "ot.gromov.gwggrad"]], "gwloss() (in module ot.gromov)": [[70, "ot.gromov.gwloss"]], "init_matrix() (in module ot.gromov)": [[70, "ot.gromov.init_matrix"]], "ot.gromov": [[70, "module-ot.gromov"]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[70, "ot.gromov.pointwise_gromov_wasserstein"]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[70, "ot.gromov.sampled_gromov_wasserstein"]], "tensor_product() (in module ot.gromov)": [[70, "ot.gromov.tensor_product"]], "update_feature_matrix() (in module ot.gromov)": [[70, "ot.gromov.update_feature_matrix"]], "update_kl_loss() (in module ot.gromov)": [[70, "ot.gromov.update_kl_loss"]], "update_square_loss() (in module ot.gromov)": [[70, "ot.gromov.update_square_loss"]], "update_structure_matrix() (in module ot.gromov)": [[70, "ot.gromov.update_structure_matrix"]], "center_ot_dual() (in module ot.lp)": [[71, "ot.lp.center_ot_dual"]], "check_number_threads() (in module ot.lp)": [[71, "ot.lp.check_number_threads"]], "emd() (in module ot.lp)": [[71, "ot.lp.emd"]], "emd2() (in module ot.lp)": [[71, "ot.lp.emd2"]], "estimate_dual_null_weights() (in module ot.lp)": [[71, "ot.lp.estimate_dual_null_weights"]], "free_support_barycenter() (in module ot.lp)": [[71, "ot.lp.free_support_barycenter"]], "generalized_free_support_barycenter() (in module ot.lp)": [[71, "ot.lp.generalized_free_support_barycenter"]], "ot.lp": [[71, "module-ot.lp"]], "cg() (in module ot.optim)": [[72, "ot.optim.cg"]], "gcg() (in module ot.optim)": [[72, "ot.optim.gcg"]], "line_search_armijo() (in module ot.optim)": [[72, "ot.optim.line_search_armijo"]], "ot.optim": [[72, "module-ot.optim"]], "solve_1d_linesearch_quad() (in module ot.optim)": [[72, "ot.optim.solve_1d_linesearch_quad"]], "solve_linesearch() (in module ot.optim)": [[72, "ot.optim.solve_linesearch"]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[73, "ot.partial.entropic_partial_gromov_wasserstein"]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[73, "ot.partial.entropic_partial_gromov_wasserstein2"]], "entropic_partial_wasserstein() (in module ot.partial)": [[73, "ot.partial.entropic_partial_wasserstein"]], "gwgrad_partial() (in module ot.partial)": [[73, "ot.partial.gwgrad_partial"]], "gwloss_partial() (in module ot.partial)": [[73, "ot.partial.gwloss_partial"]], "ot.partial": [[73, "module-ot.partial"]], "partial_gromov_wasserstein() (in module ot.partial)": [[73, "ot.partial.partial_gromov_wasserstein"]], "partial_gromov_wasserstein2() (in module ot.partial)": [[73, "ot.partial.partial_gromov_wasserstein2"]], "partial_wasserstein() (in module ot.partial)": [[73, "ot.partial.partial_wasserstein"]], "partial_wasserstein2() (in module ot.partial)": [[73, "ot.partial.partial_wasserstein2"]], "partial_wasserstein_lagrange() (in module ot.partial)": [[73, "ot.partial.partial_wasserstein_lagrange"]], "ot.plot": [[74, "module-ot.plot"]], "plot1d_mat() (in module ot.plot)": [[74, "ot.plot.plot1D_mat"]], "plot2d_samples_mat() (in module ot.plot)": [[74, "ot.plot.plot2D_samples_mat"]], "complement_schur() (in module ot.regpath)": [[75, "ot.regpath.complement_schur"]], "compute_next_removal() (in module ot.regpath)": [[75, "ot.regpath.compute_next_removal"]], "compute_transport_plan() (in module ot.regpath)": [[75, "ot.regpath.compute_transport_plan"]], "construct_augmented_h() (in module ot.regpath)": [[75, "ot.regpath.construct_augmented_H"]], "fully_relaxed_path() (in module ot.regpath)": [[75, "ot.regpath.fully_relaxed_path"]], "ot.regpath": [[75, "module-ot.regpath"]], "ot_next_gamma() (in module ot.regpath)": [[75, "ot.regpath.ot_next_gamma"]], "recast_ot_as_lasso() (in module ot.regpath)": [[75, "ot.regpath.recast_ot_as_lasso"]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[75, "ot.regpath.recast_semi_relaxed_as_lasso"]], "regularization_path() (in module ot.regpath)": [[75, "ot.regpath.regularization_path"]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[75, "ot.regpath.semi_relaxed_next_gamma"]], "semi_relaxed_path() (in module ot.regpath)": [[75, "ot.regpath.semi_relaxed_path"]], "get_random_projections() (in module ot.sliced)": [[76, "ot.sliced.get_random_projections"]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[76, "ot.sliced.max_sliced_wasserstein_distance"]], "ot.sliced": [[76, "module-ot.sliced"]], "sliced_wasserstein_distance() (in module ot.sliced)": [[76, "ot.sliced.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[76, "ot.sliced.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[76, "ot.sliced.sliced_wasserstein_sphere_unif"]], "negentropy (class in ot.smooth)": [[77, "ot.smooth.NegEntropy"]], "omega() (ot.smooth.negentropy method)": [[77, "ot.smooth.NegEntropy.Omega"]], "omega() (ot.smooth.regularization method)": [[77, "ot.smooth.Regularization.Omega"]], "omega() (ot.smooth.squaredl2 method)": [[77, "ot.smooth.SquaredL2.Omega"]], "regularization (class in ot.smooth)": [[77, "ot.smooth.Regularization"]], "squaredl2 (class in ot.smooth)": [[77, "ot.smooth.SquaredL2"]], "delta_omega() (ot.smooth.negentropy method)": [[77, "ot.smooth.NegEntropy.delta_Omega"]], "delta_omega() (ot.smooth.regularization method)": [[77, "ot.smooth.Regularization.delta_Omega"]], "delta_omega() (ot.smooth.squaredl2 method)": [[77, "ot.smooth.SquaredL2.delta_Omega"]], "dual_obj_grad() (in module ot.smooth)": [[77, "ot.smooth.dual_obj_grad"]], "get_plan_from_dual() (in module ot.smooth)": [[77, "ot.smooth.get_plan_from_dual"]], "get_plan_from_semi_dual() (in module ot.smooth)": [[77, "ot.smooth.get_plan_from_semi_dual"]], "max_omega() (ot.smooth.negentropy method)": [[77, "ot.smooth.NegEntropy.max_Omega"]], "max_omega() (ot.smooth.regularization method)": [[77, "ot.smooth.Regularization.max_Omega"]], "max_omega() (ot.smooth.squaredl2 method)": [[77, "ot.smooth.SquaredL2.max_Omega"]], "ot.smooth": [[77, "module-ot.smooth"]], "projection_simplex() (in module ot.smooth)": [[77, "ot.smooth.projection_simplex"]], "semi_dual_obj_grad() (in module ot.smooth)": [[77, "ot.smooth.semi_dual_obj_grad"]], "smooth_ot_dual() (in module ot.smooth)": [[77, "ot.smooth.smooth_ot_dual"]], "smooth_ot_semi_dual() (in module ot.smooth)": [[77, "ot.smooth.smooth_ot_semi_dual"]], "solve_dual() (in module ot.smooth)": [[77, "ot.smooth.solve_dual"]], "solve_semi_dual() (in module ot.smooth)": [[77, "ot.smooth.solve_semi_dual"]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[78, "ot.stochastic.averaged_sgd_entropic_transport"]], "batch_grad_dual() (in module ot.stochastic)": [[78, "ot.stochastic.batch_grad_dual"]], "c_transform_entropic() (in module ot.stochastic)": [[78, "ot.stochastic.c_transform_entropic"]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[78, "ot.stochastic.coordinate_grad_semi_dual"]], "loss_dual_entropic() (in module ot.stochastic)": [[78, "ot.stochastic.loss_dual_entropic"]], "loss_dual_quadratic() (in module ot.stochastic)": [[78, "ot.stochastic.loss_dual_quadratic"]], "ot.stochastic": [[78, "module-ot.stochastic"]], "plan_dual_entropic() (in module ot.stochastic)": [[78, "ot.stochastic.plan_dual_entropic"]], "plan_dual_quadratic() (in module ot.stochastic)": [[78, "ot.stochastic.plan_dual_quadratic"]], "sag_entropic_transport() (in module ot.stochastic)": [[78, "ot.stochastic.sag_entropic_transport"]], "sgd_entropic_regularization() (in module ot.stochastic)": [[78, "ot.stochastic.sgd_entropic_regularization"]], "solve_dual_entropic() (in module ot.stochastic)": [[78, "ot.stochastic.solve_dual_entropic"]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[78, "ot.stochastic.solve_semi_dual_entropic"]], "barycenter_unbalanced() (in module ot.unbalanced)": [[79, "ot.unbalanced.barycenter_unbalanced"]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[79, "ot.unbalanced.barycenter_unbalanced_sinkhorn"]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[79, "ot.unbalanced.barycenter_unbalanced_stabilized"]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[79, "ot.unbalanced.lbfgsb_unbalanced"]], "mm_unbalanced() (in module ot.unbalanced)": [[79, "ot.unbalanced.mm_unbalanced"]], "mm_unbalanced2() (in module ot.unbalanced)": [[79, "ot.unbalanced.mm_unbalanced2"]], "ot.unbalanced": [[79, "module-ot.unbalanced"]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[79, "ot.unbalanced.sinkhorn_knopp_unbalanced"]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[79, "ot.unbalanced.sinkhorn_stabilized_unbalanced"]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[79, "ot.unbalanced.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[79, "ot.unbalanced.sinkhorn_unbalanced2"]], "baseestimator (class in ot.utils)": [[80, "ot.utils.BaseEstimator"]], "otresult (class in ot.utils)": [[80, "ot.utils.OTResult"]], "a_to_b (ot.utils.otresult property)": [[80, "ot.utils.OTResult.a_to_b"]], "b_to_a (ot.utils.otresult property)": [[80, "ot.utils.OTResult.b_to_a"]], "check_params() (in module ot.utils)": [[80, "ot.utils.check_params"]], "check_random_state() (in module ot.utils)": [[80, "ot.utils.check_random_state"]], "citation (ot.utils.otresult property)": [[80, "ot.utils.OTResult.citation"]], "clean_zeros() (in module ot.utils)": [[80, "ot.utils.clean_zeros"]], "cost_normalization() (in module ot.utils)": [[80, "ot.utils.cost_normalization"]], "deprecated (class in ot.utils)": [[80, "ot.utils.deprecated"]], "dist() (in module ot.utils)": [[80, "ot.utils.dist"]], "dist0() (in module ot.utils)": [[80, "ot.utils.dist0"]], "dots() (in module ot.utils)": [[80, "ot.utils.dots"]], "euclidean_distances() (in module ot.utils)": [[80, "ot.utils.euclidean_distances"]], "get_coordinate_circle() (in module ot.utils)": [[80, "ot.utils.get_coordinate_circle"]], "get_params() (ot.utils.baseestimator method)": [[80, "ot.utils.BaseEstimator.get_params"]], "kernel() (in module ot.utils)": [[80, "ot.utils.kernel"]], "label_normalization() (in module ot.utils)": [[80, "ot.utils.label_normalization"]], "laplacian() (in module ot.utils)": [[80, "ot.utils.laplacian"]], "lazy_plan (ot.utils.otresult property)": [[80, "ot.utils.OTResult.lazy_plan"]], "list_to_array() (in module ot.utils)": [[80, "ot.utils.list_to_array"]], "marginal_a (ot.utils.otresult property)": [[80, "ot.utils.OTResult.marginal_a"]], "marginal_b (ot.utils.otresult property)": [[80, "ot.utils.OTResult.marginal_b"]], "marginals (ot.utils.otresult property)": [[80, "ot.utils.OTResult.marginals"]], "ot.utils": [[80, "module-ot.utils"]], "parmap() (in module ot.utils)": [[80, "ot.utils.parmap"]], "plan (ot.utils.otresult property)": [[80, "ot.utils.OTResult.plan"]], "potential_a (ot.utils.otresult property)": [[80, "ot.utils.OTResult.potential_a"]], "potential_b (ot.utils.otresult property)": [[80, "ot.utils.OTResult.potential_b"]], "potentials (ot.utils.otresult property)": [[80, "ot.utils.OTResult.potentials"]], "proj_simplex() (in module ot.utils)": [[80, "ot.utils.proj_simplex"]], "set_params() (ot.utils.baseestimator method)": [[80, "ot.utils.BaseEstimator.set_params"]], "sparse_plan (ot.utils.otresult property)": [[80, "ot.utils.OTResult.sparse_plan"]], "status (ot.utils.otresult property)": [[80, "ot.utils.OTResult.status"]], "tic() (in module ot.utils)": [[80, "ot.utils.tic"]], "toc() (in module ot.utils)": [[80, "ot.utils.toc"]], "toq() (in module ot.utils)": [[80, "ot.utils.toq"]], "unif() (in module ot.utils)": [[80, "ot.utils.unif"]], "value (ot.utils.otresult property)": [[80, "ot.utils.OTResult.value"]], "value_linear (ot.utils.otresult property)": [[80, "ot.utils.OTResult.value_linear"]], "ot.weak": [[81, "module-ot.weak"]], "weak_optimal_transport() (in module ot.weak)": [[81, "ot.weak.weak_optimal_transport"]]}})