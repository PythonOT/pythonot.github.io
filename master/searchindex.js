Search.setIndex({"docnames": ["all", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_entropic_semirelaxed_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_fgw_solvers", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/plot_semirelaxed_fgw", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_COOT", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_learning_weights_with_COOT", "auto_examples/others/plot_logo", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_compute_wasserstein_circle", "auto_examples/plot_optim_OTreg", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "code_of_conduct", "contributing", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.coot", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gromov", "gen_modules/ot.lp", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "quickstart", "releases"], "filenames": ["all.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_entropic_semirelaxed_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_fgw_solvers.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/plot_semirelaxed_fgw.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_COOT.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_learning_weights_with_COOT.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_compute_wasserstein_circle.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "code_of_conduct.rst", "contributing.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.coot.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "quickstart.rst", "releases.rst"], "titles": ["API and modules", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example", "Plot Fused-Gromov-Wasserstein", "Comparison of Fused Gromov-Wasserstein solvers", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Semi-relaxed (Fused) Gromov-Wasserstein example", "Computation times", "Examples gallery", "Row and column alignments with CO-Optimal Transport", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Optimal transport with factored couplings", "Learning sample marginal distribution with CO-Optimal Transport", "Logo of the POT toolbox", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth and sparse OT example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different ground metrics", "OT distances in 1D", "OT distance on the Circle", "Regularized OT with generic solver", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Code of conduct", "Contributing to POT", "Contributors", "ot.backend", "ot.bregman", "ot.coot", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gromov", "ot.lp", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Quick start guide", "Releases"], "terms": {"The": [0, 2, 7, 10, 12, 26, 28, 32, 33, 34, 40, 42, 47, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90], "list": [0, 5, 10, 28, 60, 66, 68, 69, 70, 71, 74, 76, 77, 81, 84, 86, 87, 88, 90], "automat": [0, 6, 7, 42, 77, 89, 90], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 68, 69, 71, 73, 77, 79, 80, 81, 85, 86, 88, 89, 90], "sub": [0, 81, 88, 89], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 43, 44, 45, 47, 50, 52, 53, 56, 57, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "follow": [0, 6, 7, 8, 11, 33, 42, 47, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 83, 84, 85, 88, 89, 90], "lp": [0, 7, 14, 16, 17, 37, 53, 69, 70, 71, 72, 78, 83, 85, 86, 88, 89, 90], "bregman": [0, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 31, 32, 44, 47, 50, 54, 71, 74, 77, 78, 79, 85, 87, 88, 90], "optim": [0, 1, 3, 5, 8, 9, 11, 14, 19, 24, 25, 28, 29, 30, 31, 32, 35, 37, 39, 45, 46, 54, 55, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 90], "util": [0, 2, 6, 7, 10, 11, 13, 42, 45, 47, 60, 68, 71, 77, 89, 90], "dataset": [0, 1, 7, 8, 10, 11, 13, 18, 20, 21, 22, 24, 26, 28, 32, 39, 40, 44, 48, 49, 50, 52, 54, 56, 59, 60, 61, 62, 63, 73, 76, 84, 89, 90], "gromov": [0, 9, 28, 36, 64, 67, 72, 78, 79, 86, 88, 90], "smooth": [0, 11, 37, 55, 67, 72, 80, 88, 89, 90], "stochast": [0, 1, 2, 5, 37, 46, 67, 69, 76, 80, 88, 89, 90], "partial": [0, 60, 63, 64, 67, 72, 84, 88, 90], "regpath": 0, "unbalanc": [0, 61, 64, 67, 69, 71, 72, 79, 80, 81, 86, 88, 90], "ar": [0, 7, 12, 14, 20, 26, 28, 29, 31, 33, 34, 35, 40, 42, 45, 47, 49, 50, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "due": [0, 71, 77, 89, 90], "addit": [0, 66, 70, 77, 81, 88, 89, 90], "depend": [0, 34, 68, 76, 78, 89, 90], "dr": [0, 39, 88, 89, 90], "pymanopt": [0, 73, 88, 89, 90], "autograd": [0, 4, 73, 88, 89, 90], "plot": [0, 2, 7, 10, 11, 13, 29, 31, 34, 35, 36, 37, 42, 54, 89, 90], "matplotlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 90], "barycent": [0, 9, 17, 36, 56, 64, 67, 69, 71, 72, 76, 77, 82, 85, 86, 88, 90], "A": [0, 3, 10, 11, 12, 13, 16, 23, 24, 25, 26, 28, 39, 44, 45, 47, 54, 60, 66, 69, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90], "m": [0, 2, 6, 7, 8, 10, 11, 13, 20, 21, 24, 25, 29, 30, 31, 34, 35, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 52, 54, 57, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "reg": [0, 1, 5, 10, 11, 12, 13, 15, 18, 19, 20, 21, 31, 32, 34, 39, 45, 47, 49, 50, 52, 54, 60, 61, 62, 63, 69, 71, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 88, 89, 90], "weight": [0, 10, 11, 12, 13, 14, 15, 16, 29, 31, 34, 35, 40, 42, 47, 50, 60, 62, 69, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90], "none": [0, 2, 5, 13, 15, 28, 29, 30, 31, 34, 35, 38, 42, 47, 53, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 90], "method": [0, 7, 13, 28, 31, 45, 66, 69, 70, 71, 73, 76, 77, 83, 84, 85, 86, 88, 89, 90], "sinkhorn": [0, 8, 14, 17, 18, 20, 22, 31, 32, 37, 44, 54, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 83, 85, 86, 87, 88, 90], "numitermax": [0, 14, 15, 18, 20, 21, 31, 32, 45, 47, 50, 54, 69, 71, 74, 76, 77, 78, 79, 83, 84, 85, 87], "10000": [0, 68, 69, 76, 84], "stopthr": [0, 69, 71, 73, 74, 76, 77, 78, 79, 83, 85, 87, 90], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89], "0001": [0, 69, 78, 81], "verbos": [0, 11, 18, 21, 24, 25, 30, 31, 32, 34, 38, 42, 44, 48, 54, 59, 61, 69, 70, 71, 73, 74, 76, 77, 78, 79, 83, 85, 87], "fals": [0, 13, 25, 28, 29, 31, 34, 35, 42, 44, 53, 57, 62, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87], "log": [0, 13, 21, 28, 29, 30, 31, 32, 34, 35, 38, 42, 45, 54, 56, 57, 61, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 89, 90], "warn": [0, 2, 15, 18, 20, 21, 22, 26, 31, 32, 33, 34, 44, 47, 50, 54, 60, 66, 69, 71, 86, 90], "true": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 13, 16, 18, 21, 24, 25, 28, 29, 30, 31, 32, 34, 35, 38, 39, 42, 43, 44, 45, 47, 48, 54, 57, 59, 61, 62, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90], "kwarg": [0, 69, 71, 72, 74, 76, 78, 79, 80, 85, 86, 87, 90], "sourc": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "comput": [0, 2, 6, 7, 8, 11, 34, 42, 44, 48, 49, 53, 56, 57, 59, 68, 69, 70, 71, 73, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 88, 90], "entrop": [0, 9, 15, 17, 31, 32, 36, 37, 61, 64, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90], "regular": [0, 9, 10, 12, 15, 17, 18, 19, 20, 21, 25, 27, 31, 32, 34, 36, 44, 50, 55, 60, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90], "wasserstein": [0, 9, 17, 36, 46, 52, 58, 64, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 82, 85, 86, 88, 90], "distribut": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 17, 24, 27, 30, 33, 37, 40, 41, 46, 47, 51, 52, 53, 54, 55, 58, 62, 63, 64, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90], "mathbf": [0, 6, 29, 34, 35, 47, 63, 69, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87], "solv": [0, 2, 20, 26, 42, 43, 63, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 83, 84, 85, 86, 87, 90], "problem": [0, 6, 7, 8, 10, 11, 20, 21, 26, 42, 43, 60, 63, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90], "mathop": [0, 69, 70, 71, 73, 74, 76, 77, 78, 79, 83, 84, 85, 86, 87], "arg": [0, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 83, 84, 85, 86, 87, 89], "min": [0, 29, 31, 34, 39, 47, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 83, 84, 85, 86, 87, 89], "_": [0, 24, 34, 38, 42, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89], "quad": [0, 6, 69, 70, 71, 73, 74, 76, 77, 78, 79, 83, 84, 85, 86, 87, 89], "sum_i": [0, 30, 68, 69, 77, 83, 84, 85, 86, 87, 89], "w_": [0, 34, 69, 76, 77, 85], "_i": [0, 69, 73, 77, 81, 83, 84, 85, 86, 87], "where": [0, 4, 6, 7, 28, 34, 42, 45, 47, 63, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 89, 90], "cdot": [0, 63, 69, 71, 73, 77, 78, 79, 84, 85, 89], "distanc": [0, 3, 8, 9, 28, 29, 33, 34, 35, 38, 47, 55, 57, 58, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 82, 83, 85, 86, 88, 90], "see": [0, 2, 5, 8, 47, 66, 68, 69, 71, 72, 76, 77, 79, 81, 83, 84, 85, 89, 90], "sinkhorn_stabil": [0, 69, 71, 85, 89], "sinkhorn_log": [0, 69, 70, 73, 89, 90], "train": [0, 19, 25, 39, 42, 69, 71, 72, 73, 77, 85, 89, 90], "column": [0, 6, 29, 31, 35, 37, 46, 49, 69, 70, 77, 81, 83, 85], "matrix": [0, 2, 6, 8, 10, 11, 13, 19, 23, 25, 28, 33, 34, 40, 42, 50, 51, 52, 54, 60, 62, 63, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "respect": [0, 6, 16, 34, 47, 65, 68, 69, 70, 71, 73, 76, 77, 85, 88, 89, 90], "term": [0, 8, 50, 54, 69, 70, 71, 73, 76, 77, 78, 79, 83, 84, 85, 86, 89, 90], "cost": [0, 20, 26, 32, 38, 39, 40, 42, 44, 45, 48, 49, 50, 51, 59, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "algorithm": [0, 15, 31, 32, 33, 44, 60, 66, 69, 70, 71, 73, 74, 76, 77, 78, 83, 84, 85, 87, 88, 89, 90], "us": [0, 2, 3, 6, 7, 8, 10, 11, 19, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 47, 48, 54, 59, 60, 61, 63, 65, 66, 68, 74, 76, 82, 87, 90], "knopp": [0, 67, 68, 69, 85, 88, 89, 90], "scale": [0, 29, 31, 33, 35, 43, 45, 60, 69, 71, 77, 83, 84, 85, 86, 88, 89, 90], "propos": [0, 3, 6, 8, 10, 11, 13, 16, 39, 54, 56, 57, 60, 69, 71, 74, 75, 76, 77, 79, 84, 85, 87, 89, 90], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 28, 30, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 69, 71, 77, 78, 79, 81, 82, 85, 88, 89], "paramet": [0, 2, 5, 6, 7, 8, 11, 12, 18, 20, 21, 28, 30, 31, 32, 33, 34, 41, 44, 50, 53, 54, 59, 60, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "arrai": [0, 2, 6, 7, 10, 11, 12, 13, 15, 16, 21, 23, 28, 32, 33, 34, 40, 43, 47, 50, 56, 60, 61, 62, 63, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90], "like": [0, 2, 47, 66, 67, 69, 70, 71, 74, 75, 76, 77, 78, 84, 85, 86, 87, 90], "shape": [0, 2, 3, 4, 7, 10, 11, 13, 14, 16, 19, 21, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 39, 43, 47, 60, 66, 68, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90], "dim": [0, 4, 33, 69, 82, 85, 86], "n_hist": [0, 69, 85], "size": [0, 4, 6, 8, 15, 19, 25, 29, 31, 34, 35, 38, 47, 53, 65, 68, 69, 70, 71, 72, 73, 76, 77, 81, 84, 86, 90], "loss": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 18, 24, 25, 30, 31, 34, 40, 42, 50, 51, 54, 60, 61, 62, 63, 69, 71, 76, 77, 78, 79, 83, 84, 85, 86, 88, 89, 90], "float": [0, 1, 5, 6, 7, 8, 12, 28, 33, 39, 42, 47, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "str": [0, 31, 32, 34, 47, 61, 63, 69, 71, 72, 73, 76, 77, 83, 84, 85, 86], "option": [0, 47, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90], "solver": [0, 9, 11, 30, 32, 36, 37, 43, 48, 55, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90], "either": [0, 24, 63, 69, 71, 73, 76, 77, 85], "each": [0, 6, 8, 28, 31, 34, 47, 69, 70, 71, 76, 77, 83, 84, 85, 86, 88, 89, 90], "histogram": [0, 42, 69, 70, 72, 74, 77, 79, 81, 83, 85, 86, 87, 88, 89, 90], "simplex": [0, 2, 6, 7, 34, 42, 69, 77, 83, 86, 88, 89], "barycentr": [0, 24, 69, 71, 77, 85, 89], "coodin": [0, 69, 85], "int": [0, 2, 33, 34, 56, 57, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89], "max": [0, 10, 11, 13, 29, 31, 32, 33, 34, 35, 40, 44, 47, 48, 49, 51, 52, 53, 54, 59, 60, 62, 63, 68, 69, 71, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "number": [0, 1, 5, 6, 8, 14, 15, 16, 18, 20, 21, 28, 30, 31, 32, 33, 34, 44, 47, 50, 54, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "iter": [0, 1, 2, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 31, 32, 33, 38, 39, 42, 47, 50, 54, 60, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 83, 84, 85, 87, 88, 89, 90], "stop": [0, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 83, 85, 87, 90], "threshold": [0, 28, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 83, 85, 87, 89], "error": [0, 7, 22, 28, 31, 32, 34, 60, 66, 68, 69, 71, 73, 76, 77, 79, 83, 85, 88, 89, 90], "bool": [0, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87], "print": [0, 1, 2, 4, 5, 6, 8, 29, 31, 32, 34, 35, 38, 42, 45, 47, 61, 66, 69, 70, 71, 73, 74, 76, 77, 78, 79, 83, 85, 87, 90], "inform": [0, 24, 25, 34, 38, 42, 44, 45, 65, 66, 69, 70, 71, 73, 74, 76, 77, 78, 79, 83, 84, 85, 87, 88, 89], "along": [0, 2, 6, 7, 68, 69, 71, 73, 74, 76, 77, 78, 79, 81, 83, 85, 87], "record": [0, 7, 66, 69, 70, 71, 74, 75, 76, 77, 78, 79, 83, 84, 85, 87], "rais": [0, 66, 68, 69, 76, 77, 79, 86, 90], "doesn": [0, 69], "t": [0, 6, 7, 10, 11, 13, 29, 31, 32, 33, 34, 35, 38, 39, 42, 43, 47, 53, 57, 60, 62, 63, 69, 70, 71, 73, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "converg": [0, 2, 15, 18, 20, 21, 31, 32, 33, 47, 50, 54, 69, 71, 76, 77, 78, 88, 89, 90], "return": [0, 2, 3, 4, 5, 6, 8, 16, 19, 23, 25, 28, 29, 31, 32, 33, 35, 47, 53, 54, 62, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "dict": [0, 34, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87], "dictionari": [0, 2, 36, 37, 67, 69, 70, 71, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 87, 88, 89, 90], "onli": [0, 6, 14, 30, 47, 68, 69, 70, 71, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90], "benam": [0, 10, 11, 69, 79, 85, 88, 89], "j": [0, 2, 10, 11, 12, 16, 19, 21, 25, 29, 30, 31, 33, 34, 35, 38, 42, 43, 47, 54, 62, 63, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 83, 84, 85, 86, 88, 89], "d": [0, 10, 11, 14, 22, 23, 28, 31, 32, 34, 47, 54, 61, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89], "carlier": [0, 10, 11, 69, 77, 79, 85, 88, 89], "g": [0, 4, 8, 10, 11, 19, 21, 25, 28, 29, 30, 31, 34, 35, 44, 45, 47, 48, 50, 54, 59, 60, 62, 69, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 90], "cuturi": [0, 8, 10, 11, 13, 31, 32, 39, 45, 67, 69, 71, 73, 75, 76, 77, 79, 83, 84, 85, 88, 89], "nenna": [0, 10, 11, 69, 79, 85, 88, 89], "l": [0, 8, 10, 11, 13, 30, 31, 32, 57, 60, 62, 69, 70, 71, 73, 76, 77, 79, 81, 82, 83, 85, 88, 89], "peyr\u00e9": [0, 8, 10, 11, 31, 32, 45, 54, 60, 67, 69, 71, 75, 76, 77, 78, 79, 84, 85, 88, 89], "2015": [0, 3, 10, 11, 54, 56, 69, 71, 78, 79, 82, 85, 88, 89], "project": [0, 2, 3, 4, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 29, 31, 32, 34, 35, 42, 44, 47, 50, 53, 54, 60, 61, 65, 66, 67, 69, 73, 76, 77, 79, 82, 83, 85, 86, 88, 89, 90], "transport": [0, 3, 5, 10, 11, 25, 28, 29, 31, 32, 35, 37, 46, 54, 55, 60, 61, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 90], "siam": [0, 10, 11, 19, 25, 54, 69, 71, 77, 78, 79, 85, 88, 89], "journal": [0, 3, 10, 11, 19, 25, 32, 54, 56, 69, 71, 75, 76, 77, 78, 79, 82, 85, 87, 88, 89, 90], "scientif": [0, 10, 11, 69, 79, 85, 88, 89, 90], "37": [0, 5, 10, 11, 13, 54, 69, 79, 85, 88, 89, 90], "2": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 30, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "a1111": [0, 10, 11, 69, 79, 85, 88, 89], "a1138": [0, 10, 11, 69, 79, 85, 88, 89], "barycenter_unbalanc": [0, 60, 85, 89], "reg_m": [0, 63, 71, 79, 85, 89], "1000": [0, 5, 8, 14, 21, 23, 39, 42, 45, 53, 68, 69, 71, 76, 79, 85], "1e": [0, 2, 7, 8, 10, 11, 13, 15, 18, 19, 20, 21, 24, 25, 26, 30, 33, 42, 43, 47, 48, 49, 50, 52, 54, 60, 62, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 90], "06": [0, 11, 17, 24, 31, 39, 45, 48, 54, 58, 69, 70, 71, 75, 77, 79, 85], "u_": [0, 82, 85], "sinkhorn_unbalanc": [0, 59, 63, 85, 89], "reg_mi": [0, 85], "margin": [0, 31, 32, 37, 46, 62, 69, 70, 76, 77, 79, 81, 85, 86, 89, 90], "relax": [0, 36, 37, 59, 67, 76, 78, 81, 83, 85, 88, 89, 90], "hyperparamet": [0, 85], "gener": [0, 3, 7, 11, 12, 13, 17, 32, 33, 37, 38, 43, 45, 47, 51, 53, 55, 61, 66, 67, 68, 69, 71, 72, 74, 77, 78, 80, 82, 83, 85, 86, 87, 88, 90], "10": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 15, 18, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 44, 48, 49, 53, 54, 56, 57, 59, 60, 61, 62, 63, 69, 71, 73, 76, 77, 78, 83, 85, 88, 89], "dimens": [0, 7, 33, 39, 68, 69, 73, 76, 79, 81, 82, 85, 90], "ground": [0, 37, 52, 55, 69, 71, 77, 80, 83, 84, 85, 88, 89], "metric": [0, 20, 21, 32, 37, 43, 47, 52, 55, 61, 69, 71, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90], "entropi": [0, 44, 59, 68, 69, 73, 76, 83, 85, 88, 89], "If": [0, 66, 69, 70, 71, 72, 73, 74, 76, 77, 78, 83, 85, 86, 87, 88, 89, 90], "uniform": [0, 4, 6, 34, 40, 41, 44, 47, 50, 56, 57, 62, 63, 68, 69, 70, 71, 74, 76, 77, 82, 85, 86, 87, 89, 90], "chizat": [0, 60, 69, 71, 79, 85, 88, 89], "schmitzer": [0, 60, 69, 71, 79, 85, 88, 89], "b": [0, 6, 7, 11, 14, 21, 22, 23, 26, 30, 32, 33, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "vialard": [0, 60, 69, 71, 79, 85, 88, 89], "f": [0, 3, 4, 10, 13, 19, 25, 29, 30, 34, 35, 42, 45, 47, 54, 57, 60, 68, 69, 70, 71, 76, 77, 78, 79, 82, 84, 85, 86, 88, 89, 90], "x": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 39, 40, 41, 42, 44, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "2016": [0, 11, 24, 25, 31, 32, 39, 45, 60, 69, 71, 73, 76, 77, 79, 84, 85, 88, 89, 90], "arxiv": [0, 16, 51, 54, 60, 69, 71, 73, 77, 78, 83, 85, 86, 88, 89], "preprin": [0, 85], "1607": [0, 60, 69, 71, 85, 88, 89], "05816": [0, 60, 69, 71, 85, 88, 89], "binary_search_circl": [0, 77, 90], "u_valu": [0, 77], "v_valu": [0, 77], "u_weight": [0, 77], "v_weight": [0, 77], "p": [0, 2, 4, 7, 21, 28, 29, 30, 31, 32, 33, 34, 35, 39, 43, 47, 53, 57, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 76, 77, 79, 82, 83, 86, 87, 88, 89, 90], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89], "lm": [0, 77], "tm": [0, 53, 77], "tp": [0, 53, 62, 77], "ep": [0, 8, 13, 33, 68, 77], "require_sort": [0, 77], "circl": [0, 37, 39, 47, 55, 67, 77, 86, 88, 90], "binari": [0, 34, 72, 77], "search": [0, 28, 29, 35, 47, 69, 76, 77, 78, 88, 89], "44": [0, 16, 17, 39, 54, 77, 79, 88, 90], "sampl": [0, 1, 6, 19, 25, 34, 37, 39, 40, 41, 43, 45, 46, 47, 50, 53, 56, 57, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90], "need": [0, 47, 61, 66, 69, 73, 77, 80, 89, 90], "": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 42, 44, 47, 48, 49, 52, 53, 54, 58, 59, 60, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 90], "cong": [0, 77], "thei": [0, 65, 77, 89, 90], "mathbb": [0, 69, 76, 77, 82, 84, 86, 89], "r": [0, 3, 4, 7, 8, 10, 11, 13, 21, 24, 25, 29, 32, 33, 34, 35, 38, 39, 41, 42, 44, 45, 47, 48, 49, 52, 53, 54, 57, 59, 60, 61, 62, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90], "take": [0, 53, 65, 77, 78, 81, 84, 85, 89], "valu": [0, 2, 7, 11, 26, 28, 30, 33, 34, 39, 47, 52, 53, 60, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 83, 85, 86, 89, 90], "modulo": [0, 77], "subset": [0, 77, 86], "requir": [0, 28, 68, 71, 76, 77, 88, 89, 90], "first": [0, 2, 3, 29, 30, 32, 34, 35, 66, 68, 69, 70, 76, 77, 81, 83, 86, 88, 89], "find": [0, 28, 33, 45, 68, 77, 78, 88, 89, 90], "coordin": [0, 12, 30, 33, 68, 70, 71, 73, 76, 77, 84, 85, 86, 88, 89], "e": [0, 42, 65, 69, 76, 77, 82, 86, 88], "atan2": [0, 68, 77, 86], "w_p": [0, 77, 82, 89], "u": [0, 1, 2, 3, 5, 6, 14, 42, 47, 57, 60, 66, 69, 73, 77, 79, 82, 84, 85, 86, 88, 89, 90], "v": [0, 1, 5, 17, 22, 27, 28, 29, 31, 35, 37, 45, 46, 47, 57, 60, 68, 69, 71, 72, 77, 80, 82, 83, 84, 85, 86, 88, 89, 90], "inf_": [0, 77], "theta": [0, 1, 5, 8, 24, 53, 69, 72, 77, 82], "int_0": [0, 77], "f_u": [0, 77], "q": [0, 30, 31, 32, 34, 60, 61, 68, 69, 70, 76, 77, 79, 81, 89], "f_v": [0, 77], "mathrm": [0, 4, 53, 63, 69, 71, 73, 76, 77, 78, 79, 82, 83, 84, 85, 86], "cdf": [0, 77], "For": [0, 26, 31, 32, 34, 45, 47, 61, 66, 69, 70, 77, 78, 81, 84, 86, 89, 90], "x_1": [0, 38, 47, 77, 86], "x_2": [0, 38, 47, 77, 86], "get": [0, 2, 29, 31, 33, 34, 35, 69, 71, 73, 76, 77, 86, 88, 89, 90], "frac": [0, 4, 38, 42, 68, 69, 71, 73, 76, 77, 79, 81, 82, 83, 84, 86, 87, 89], "pi": [0, 1, 5, 8, 16, 23, 24, 28, 38, 39, 42, 51, 53, 57, 73, 77, 84, 86, 90], "get_coordinate_circl": [0, 77, 86], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 68, 77, 82, 88, 90], "backend": [0, 2, 3, 5, 6, 7, 31, 32, 42, 47, 67, 69, 74, 76, 77, 78, 82, 84, 86, 87, 88, 90], "tensorflow": [0, 68, 77, 82, 88, 89, 90], "jax": [0, 68, 77, 82, 86, 88, 89, 90], "support": [0, 3, 5, 7, 17, 18, 37, 67, 69, 70, 74, 77, 82, 90], "ndarrai": [0, 28, 33, 68, 69, 72, 73, 77, 78, 79, 80, 81, 82, 83, 84, 86], "n": [0, 2, 4, 6, 7, 8, 10, 11, 13, 14, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 62, 63, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89], "domain": [0, 26, 27, 29, 31, 54, 69, 71, 72, 73, 75, 76, 77, 78, 80, 82, 83, 85, 86, 88, 90], "target": [0, 1, 6, 7, 8, 23, 24, 27, 33, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 62, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "default": [0, 2, 33, 34, 47, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 89, 90], "power": [0, 47, 68, 77, 82, 90], "lower": [0, 14, 18, 22, 32, 47, 77], "bound": [0, 77, 90], "dc": [0, 77], "upper": [0, 59, 77], "condit": [0, 30, 31, 32, 54, 67, 68, 71, 74, 76, 77, 78, 87, 88, 89, 90], "sort": [0, 66, 68, 77, 89], "also": [0, 2, 47, 66, 68, 69, 71, 76, 77, 86, 88, 89, 90], "associ": [0, 42, 71, 76, 77, 79, 82, 86], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 68, 82, 90], "np": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 68, 69, 71, 72, 77, 79, 81, 82, 83, 85, 86, 89, 90], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 69, 71, 72, 76, 77, 78, 79, 81, 82, 85, 86, 88, 89], "8": [0, 3, 4, 7, 8, 10, 11, 13, 14, 16, 18, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 45, 48, 50, 51, 54, 56, 60, 61, 62, 63, 70, 71, 76, 77, 84, 86, 88, 89], "4": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 56, 59, 60, 61, 62, 63, 65, 69, 70, 76, 77, 79, 81, 85, 88, 89], "7": [0, 10, 11, 12, 13, 16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 38, 39, 42, 43, 45, 47, 50, 51, 52, 54, 60, 63, 70, 71, 77, 78, 81, 83, 84, 88, 89], "delon": [0, 16, 77, 88], "juli": [0, 8, 77, 88, 90], "julien": [0, 77, 88], "salomon": [0, 77, 88], "andrei": [0, 77, 88], "sobolevski": [0, 77, 88], "fast": [0, 48, 69, 76, 77, 88, 89, 90], "mong": [0, 77, 79, 88], "appli": [0, 24, 65, 70, 71, 77, 86, 88], "mathemat": [0, 3, 56, 66, 69, 76, 77, 79, 82, 88, 89, 90], "70": [0, 1, 4, 5, 8, 29, 30, 31, 35, 48, 54, 77, 88], "2010": [0, 77, 79, 88], "2239": [0, 77, 88], "2258": [0, 77, 88], "dist": [0, 6, 8, 20, 28, 30, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 59, 60, 62, 63, 73, 76, 77, 81, 86, 89, 90], "x1": [0, 2, 3, 14, 15, 19, 23, 25, 38, 43, 47, 53, 73, 86], "x2": [0, 3, 14, 15, 19, 23, 25, 38, 43, 47, 53, 73, 86], "sqeuclidean": [0, 20, 21, 47, 51, 52, 69, 71, 77, 84, 86], "w": [0, 6, 7, 8, 33, 34, 43, 47, 61, 63, 69, 70, 73, 75, 76, 77, 82, 83, 84, 85, 86, 88, 89, 90], "between": [0, 2, 3, 6, 15, 16, 19, 28, 29, 31, 33, 34, 35, 37, 38, 40, 41, 42, 43, 47, 55, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 85, 86, 87, 88, 90], "thi": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 47, 48, 49, 53, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 81, 82, 83, 84, 86, 87, 88, 89, 90], "compat": [0, 47, 68, 69, 73, 74, 76, 77, 83, 84, 86, 87, 90], "work": [0, 12, 47, 66, 68, 69, 74, 76, 77, 78, 86, 87, 90], "from": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 19, 21, 23, 25, 28, 29, 30, 31, 32, 33, 35, 38, 39, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "all": [0, 10, 11, 13, 26, 28, 31, 33, 34, 37, 43, 47, 60, 65, 66, 68, 69, 71, 74, 76, 77, 81, 85, 86, 87, 88, 89, 90], "n1": [0, 38, 42, 47, 86], "n2": [0, 29, 30, 31, 35, 38, 42, 47, 86], "callabl": [0, 47, 71, 73, 76, 78, 84, 86, 90], "euclidean": [0, 11, 28, 29, 31, 35, 43, 47, 51, 52, 71, 73, 77, 83, 86, 89, 90], "On": [0, 47, 71, 75, 86, 88, 89, 90], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 68, 69, 73, 76, 77, 79, 81, 82, 85, 86, 88, 89, 90], "accept": [0, 47, 65, 66, 77, 86, 90], "scipi": [0, 28, 32, 33, 47, 53, 61, 66, 68, 77, 79, 83, 85, 86, 88, 89, 90], "spatial": [0, 32, 33, 47, 61, 79, 86], "cdist": [0, 32, 33, 47, 61, 79, 86, 90], "braycurti": [0, 47, 86], "canberra": [0, 47, 86], "chebyshev": [0, 47, 86], "cityblock": [0, 47, 51, 77, 86], "correl": [0, 47, 86], "cosin": [0, 47, 86], "dice": [0, 47, 86], "ham": [0, 47, 86, 90], "jaccard": [0, 47, 86], "kulczynski1": [0, 47, 86], "mahalanobi": [0, 47, 86], "match": [0, 32, 47, 71, 76, 86, 88, 89], "minkowski": [0, 47, 77, 86], "rogerstanimoto": [0, 47, 86], "russellrao": [0, 47, 86], "seuclidean": [0, 47, 86], "sokalmichen": [0, 47, 86], "sokalsneath": [0, 47, 86], "wminkowski": [0, 47, 86], "yule": [0, 47, 86], "norm": [0, 15, 28, 31, 32, 39, 47, 63, 68, 70, 71, 77, 86], "rank": [0, 41, 47, 74, 83, 86], "given": [0, 2, 29, 31, 33, 34, 35, 42, 47, 68, 69, 71, 73, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 89, 90], "type": [0, 66, 68, 69, 71, 72, 76, 77, 78, 79, 81, 82, 83, 84, 86, 89, 90], "emd": [0, 18, 20, 22, 30, 40, 41, 43, 51, 67, 69, 70, 71, 77, 78, 79, 82, 83, 85, 87, 88, 90], "100000": [0, 45, 71, 77, 78, 85], "center_du": [0, 77], "numthread": [0, 77, 90], "earth": [0, 71, 77, 88, 90], "mover": [0, 71, 77, 88, 90], "gamma": [0, 47, 62, 63, 69, 71, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 89], "langl": [0, 69, 71, 76, 77, 78, 79, 82, 84, 85], "rangle_f": [0, 69, 71, 76, 77, 78, 79, 84, 85], "geq": [0, 63, 69, 71, 76, 77, 78, 79, 81, 84, 85, 86, 87, 89], "note": [0, 26, 47, 69, 71, 73, 76, 77, 79, 80, 83, 86, 88, 89, 90], "c": [0, 2, 7, 8, 15, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 45, 47, 50, 51, 53, 57, 62, 63, 67, 68, 69, 71, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "order": [0, 6, 20, 26, 28, 47, 68, 73, 77, 80, 89], "float64": [0, 3, 7, 10, 11, 13, 14, 16, 19, 23, 25, 31, 32, 33, 44, 48, 49, 52, 54, 59, 60, 69, 77], "format": [0, 1, 2, 3, 4, 5, 8, 21, 38, 47, 62, 66, 68, 77, 86, 88, 90], "It": [0, 2, 11, 18, 20, 21, 24, 25, 26, 30, 31, 32, 48, 54, 61, 66, 76, 77, 84, 88, 89, 90], "convert": [0, 6, 19, 23, 25, 33, 68, 77, 86], "But": [0, 74, 76, 77, 87, 89, 90], "cpu": [0, 2, 3, 7, 68, 74, 76, 77, 87, 90], "which": [0, 2, 28, 42, 47, 65, 68, 69, 70, 71, 74, 76, 77, 78, 80, 81, 87, 88, 89, 90], "can": [0, 2, 6, 47, 63, 66, 69, 71, 73, 74, 76, 77, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90], "lead": [0, 6, 47, 69, 74, 76, 77, 78, 87, 89, 90], "copi": [0, 7, 10, 29, 31, 35, 60, 66, 68, 74, 76, 77, 87, 89], "overhead": [0, 69, 74, 76, 77, 87, 89], "gpu": [0, 67, 68, 69, 74, 76, 77, 87, 90], "cast": [0, 39, 77, 89], "plan": [0, 2, 9, 29, 31, 35, 37, 41, 43, 48, 49, 62, 63, 69, 70, 74, 76, 77, 79, 81, 83, 84, 85, 86, 89, 90], "data": [0, 2, 3, 7, 13, 31, 32, 34, 47, 51, 66, 68, 69, 70, 71, 76, 77, 88, 89, 90], "provid": [0, 2, 34, 47, 66, 67, 68, 69, 71, 76, 77, 78, 81, 88, 89, 90], "input": [0, 13, 16, 60, 68, 69, 70, 71, 74, 76, 77, 83, 86, 87, 89], "prioriti": [0, 77], "an": [0, 2, 7, 8, 19, 23, 25, 28, 33, 47, 49, 65, 66, 68, 69, 71, 74, 76, 77, 78, 79, 81, 83, 84, 86, 90], "integ": [0, 28, 77, 90], "tensor": [0, 2, 3, 6, 7, 42, 68, 76, 77, 78, 89, 90], "might": [0, 15, 18, 20, 21, 26, 31, 32, 47, 50, 54, 69, 77, 89, 90], "result": [0, 2, 47, 65, 66, 68, 76, 77, 86, 89, 90], "precis": [0, 42, 68, 69, 71, 76, 77], "behaviour": [0, 77], "unwant": [0, 77], "pleas": [0, 66, 68, 77, 88], "make": [0, 29, 31, 35, 47, 51, 59, 60, 65, 66, 68, 72, 77, 88, 89, 90], "sure": [0, 66, 77, 88], "point": [0, 11, 15, 16, 30, 31, 32, 33, 43, 44, 45, 53, 66, 69, 73, 76, 77, 79, 86, 88, 89, 90], "vector": [0, 6, 68, 69, 70, 77, 81, 82, 86, 88, 89], "do": [0, 8, 20, 26, 32, 47, 61, 65, 66, 68, 69, 77, 86, 89, 90], "sum": [0, 2, 5, 6, 7, 11, 12, 13, 14, 29, 31, 32, 34, 35, 39, 40, 47, 50, 52, 54, 57, 59, 62, 63, 68, 69, 71, 73, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 89, 90], "same": [0, 24, 29, 32, 35, 47, 61, 68, 70, 77, 86, 89], "empti": [0, 56, 57, 71, 74, 77, 86, 87], "nt": [0, 6, 34, 69, 71, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 87], "maximum": [0, 4, 15, 28, 33, 47, 53, 68, 69, 71, 76, 77, 78, 81, 83, 86], "befor": [0, 66, 71, 77, 90], "ha": [0, 2, 6, 8, 47, 67, 69, 71, 76, 77, 79, 86, 88, 89, 90], "contain": [0, 10, 11, 13, 60, 70, 74, 76, 77, 81, 86, 87, 88, 89, 90], "dual": [0, 8, 9, 11, 37, 69, 70, 72, 74, 76, 77, 80, 83, 84, 86, 87, 88, 89, 90], "variabl": [0, 34, 69, 71, 74, 76, 77, 81, 83, 84, 87, 89, 90], "otherwis": [0, 65, 68, 76, 77, 86], "boolean": [0, 68, 69, 71, 75, 77, 86], "center": [0, 47, 73, 77, 90], "potenti": [0, 5, 8, 31, 69, 76, 77, 83, 84, 86, 90], "center_ot_du": [0, 77], "openmp": [0, 77, 90], "compil": [0, 77, 88, 89, 90], "choos": [0, 28, 53, 69, 73, 77, 89], "thread": [0, 77], "parallel": [0, 77, 86, 89, 90], "select": [0, 44, 76, 77, 89], "highest": [0, 77], "possibl": [0, 66, 69, 71, 77, 86, 89, 90], "exit": [0, 74, 77, 87, 90], "statu": [0, 74, 77, 86, 87, 90], "simpl": [0, 2, 6, 12, 33, 42, 47, 72, 77, 86, 89, 90], "obviou": [0, 77], "solut": [0, 43, 47, 69, 77, 81, 89, 90], "perform": [0, 2, 3, 7, 44, 66, 76, 77, 86, 89, 90], "convers": [0, 77], "bonneel": [0, 3, 56, 67, 77, 82, 88, 89], "van": [0, 77, 88, 89], "de": [0, 69, 77, 88, 89], "pann": [0, 77, 88, 89], "pari": [0, 14, 15, 77, 88, 89], "heidrich": [0, 77, 88, 89], "2011": [0, 76, 77, 88, 89], "decemb": [0, 68, 77, 88, 89, 90], "displac": [0, 52, 77, 86, 88, 89], "interpol": [0, 2, 7, 12, 18, 20, 22, 26, 30, 33, 34, 40, 47, 50, 51, 69, 77, 79, 88, 89], "lagrangian": [0, 77, 79, 81, 88, 89], "mass": [0, 2, 21, 29, 31, 47, 61, 63, 71, 76, 77, 79, 88, 89, 90], "In": [0, 2, 3, 6, 7, 8, 31, 32, 34, 38, 42, 43, 47, 65, 66, 69, 70, 73, 74, 76, 77, 80, 82, 83, 88, 89, 90], "acm": [0, 69, 77, 88, 89], "transact": [0, 54, 69, 71, 77, 78, 88, 89], "graphic": [0, 69, 77, 88, 89, 90], "tog": [0, 69, 77, 88, 89], "vol": [0, 8, 54, 71, 75, 77, 78, 88, 89], "30": [0, 1, 3, 4, 5, 8, 11, 18, 20, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 44, 47, 48, 54, 71, 77, 88, 89, 90], "No": [0, 2, 34, 66, 77, 88, 89], "6": [0, 2, 5, 7, 11, 13, 15, 16, 18, 19, 20, 22, 24, 25, 29, 31, 32, 34, 39, 41, 43, 44, 45, 47, 48, 49, 50, 51, 54, 57, 59, 60, 61, 62, 63, 70, 71, 76, 77, 81, 84, 88, 89], "158": [0, 54, 77, 88, 89], "cg": [0, 31, 32, 54, 69, 71, 74, 76, 77, 83, 85, 87, 89, 90], "emd2": [0, 6, 8, 52, 67, 77, 85, 88, 90], "process": [0, 24, 25, 29, 35, 38, 42, 44, 45, 47, 69, 70, 71, 77, 83, 84, 85, 88, 89, 90], "return_matrix": [0, 77], "min_": [0, 4, 6, 7, 8, 42, 63, 69, 71, 73, 76, 77, 79, 81, 85, 89], "nb": [0, 7, 10, 11, 13, 19, 25, 29, 31, 32, 33, 35, 39, 40, 41, 44, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 76, 77, 78, 80], "multipl": [0, 52, 69, 76, 77, 83, 85, 86, 90], "deprec": [0, 7, 10, 60, 61, 77, 86], "emd2_1d": [0, 77, 89], "x_a": [0, 77], "x_b": [0, 77], "dens": [0, 68, 76, 77, 86], "1d": [0, 9, 17, 30, 37, 55, 64, 67, 72, 76, 77, 78, 80, 86, 88, 89, 90], "measur": [0, 3, 7, 14, 16, 30, 45, 56, 69, 70, 73, 76, 77, 82, 84, 86, 88, 89], "sum_j": [0, 30, 77, 83, 84, 87], "gamma_": [0, 47, 69, 71, 77, 78, 79, 84, 85, 87, 89], "ij": [0, 77, 87], "when": [0, 2, 53, 63, 65, 66, 69, 70, 73, 76, 77, 79, 81, 86, 88, 90], "y": [0, 1, 4, 8, 10, 15, 16, 18, 20, 21, 22, 24, 26, 28, 30, 32, 34, 39, 42, 57, 60, 68, 69, 70, 71, 72, 73, 76, 77, 79, 81, 82, 83, 86, 88, 89], "detail": [0, 65, 66, 77, 89, 90], "dirac": [0, 14, 40, 50, 77], "locat": [0, 14, 16, 68, 69, 77], "real": [0, 39, 77], "line": [0, 19, 23, 25, 33, 47, 69, 76, 77, 78, 80, 89], "string": [0, 69, 70, 71, 76, 77, 84, 85, 86], "implement": [0, 5, 47, 66, 67, 68, 69, 73, 76, 77, 83, 86, 89, 90], "faster": [0, 77, 90], "math": [0, 28, 47, 77, 79, 83, 89], "spars": [0, 28, 37, 47, 55, 68, 69, 72, 73, 76, 77, 80, 83, 85, 86, 88, 89, 90], "represent": [0, 29, 34, 35, 45, 57, 65, 76, 77, 78, 82, 83, 84, 88, 89], "coo_matrix": [0, 68, 77], "set": [0, 2, 8, 18, 20, 22, 27, 28, 33, 34, 37, 47, 65, 68, 69, 71, 72, 76, 77, 78, 81, 86, 88, 89], "2017": [0, 8, 69, 71, 75, 77, 87, 88, 89, 90], "2018": [0, 8, 45, 69, 71, 75, 77, 79, 83, 84, 88, 89, 90], "multidimension": [0, 33, 77], "emd_1d": [0, 48, 77, 89, 90], "instead": [0, 5, 8, 10, 34, 60, 68, 69, 70, 77, 88, 89, 90], "factored_optimal_transport": [0, 41, 74], "xa": [0, 74, 87], "xb": [0, 3, 15, 41, 74, 87], "100": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 22, 24, 28, 31, 32, 33, 34, 39, 41, 43, 44, 47, 48, 49, 52, 53, 54, 59, 60, 61, 62, 68, 69, 70, 71, 73, 74, 76, 77, 79, 82], "x0": [0, 4, 28, 74, 77, 82], "07": [0, 11, 25, 27, 32, 36, 39, 45, 46, 48, 54, 61, 69, 70, 74, 77, 79, 85], "factor": [0, 37, 46, 68, 80, 88, 89, 90], "intermedi": [0, 5, 74], "40": [0, 1, 4, 5, 8, 29, 31, 32, 34, 35, 47, 48, 54, 63, 74, 81, 88, 89], "mu": [0, 3, 6, 7, 24, 25, 28, 30, 53, 61, 71, 73, 74, 82, 89], "w_2": [0, 53, 74, 77, 89], "mu_a": [0, 74], "mu_b": [0, 74], "empir": [0, 2, 3, 27, 37, 41, 51, 55, 67, 69, 71, 72, 74, 75, 77, 80, 86, 87, 88, 89, 90], "And": [0, 74], "two": [0, 2, 3, 10, 19, 21, 30, 38, 42, 45, 47, 49, 52, 60, 66, 68, 69, 70, 71, 74, 75, 76, 77, 81, 85, 87, 88, 89, 90], "gradient": [0, 2, 6, 7, 8, 9, 30, 31, 32, 37, 39, 42, 54, 67, 68, 69, 71, 73, 74, 76, 77, 78, 79, 81, 83, 84, 87, 88, 89, 90], "39": [0, 54, 74, 87, 88, 89], "rel": [0, 18, 30, 31, 32, 33, 54, 69, 71, 74, 76, 78, 87, 90], "variat": [0, 11, 52, 74, 78, 87, 89, 90], "ga": [0, 41, 74], "gb": [0, 41, 74], "forrow": [0, 74, 88, 89], "h\u00fctter": [0, 74, 88, 89], "nitzan": [0, 74, 88, 89], "rigollet": [0, 69, 74, 88, 89], "schiebing": [0, 74, 88, 89], "weed": [0, 69, 74, 88, 89], "2019": [0, 3, 28, 30, 31, 32, 44, 69, 71, 74, 76, 82, 88, 89, 90], "april": [0, 69, 74, 88, 89, 90], "statist": [0, 8, 69, 71, 74, 77, 83, 88, 89], "via": [0, 2, 3, 34, 65, 69, 74, 76, 88, 89, 90], "coupl": [0, 24, 37, 46, 69, 70, 71, 74, 76, 80, 88, 89, 90], "22nd": [0, 69, 74, 88, 89], "intern": [0, 2, 3, 7, 8, 13, 28, 29, 30, 31, 32, 34, 35, 45, 57, 69, 71, 74, 76, 77, 78, 79, 82, 83, 84, 88, 89], "confer": [0, 2, 3, 8, 13, 28, 29, 30, 31, 32, 34, 35, 45, 57, 69, 71, 74, 76, 77, 78, 79, 82, 83, 84, 88, 89], "artifici": [0, 8, 69, 71, 74, 83, 88, 89], "intellig": [0, 8, 54, 69, 71, 74, 78, 83, 88, 89], "pp": [0, 3, 8, 31, 32, 54, 69, 71, 74, 78, 82, 88, 89], "2454": [0, 74, 88, 89], "2465": [0, 74, 88, 89], "pmlr": [0, 3, 8, 13, 69, 74, 88, 89], "fused_gromov_wasserstein": [0, 29, 30, 31, 35, 76, 89], "c1": [0, 2, 29, 30, 31, 32, 35, 61, 62, 63, 76, 78, 79, 89], "c2": [0, 2, 29, 30, 31, 32, 35, 61, 62, 63, 76, 79, 89], "loss_fun": [0, 30, 76], "square_loss": [0, 30, 31, 32, 33, 76], "symmetr": [0, 29, 35, 69, 76, 89, 90], "alpha": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 18, 20, 21, 22, 24, 26, 28, 29, 30, 31, 34, 35, 41, 43, 45, 47, 52, 53, 56, 57, 59, 60, 62, 63, 69, 70, 71, 76, 77, 78, 80, 83, 84, 90], "armijo": [0, 76, 78, 90], "g0": [0, 29, 35, 40, 41, 48, 50, 54, 76, 78, 79, 85, 87], "max_it": [0, 18, 21, 24, 25, 32, 33, 71, 76, 83, 90], "tol_rel": [0, 76], "09": [0, 11, 32, 45, 46, 48, 54, 58, 69, 71, 76, 78, 83], "tol_ab": [0, 76], "fgw": [0, 29, 31, 35, 36, 37, 67, 76, 88, 90], "graph": [0, 30, 32, 36, 37, 47, 67, 68, 76, 78, 88, 89, 90], "24": [0, 30, 31, 32, 39, 54, 70, 76, 88, 89, 90], "sum_": [0, 4, 6, 47, 69, 70, 71, 73, 76, 77, 78, 79, 82, 84, 85, 89], "k": [0, 2, 6, 8, 13, 14, 15, 21, 28, 29, 30, 31, 34, 35, 39, 43, 47, 49, 53, 68, 69, 70, 71, 73, 76, 77, 79, 81, 89], "c_1": [0, 30, 76, 78, 79], "c_2": [0, 29, 30, 35, 76, 79], "account": [0, 53, 65, 66, 69, 76], "misfit": [0, 76], "similar": [0, 8, 26, 47, 71, 76, 81, 89], "matric": [0, 7, 31, 32, 33, 38, 42, 47, 54, 68, 69, 70, 71, 73, 76, 77, 78, 79, 80, 86, 87, 88, 89, 90], "conjug": [0, 76, 83], "done": [0, 6, 42, 43, 47, 76, 89, 90], "limit": [0, 68, 76, 90], "memori": [0, 69, 76, 77, 84, 89, 90], "discuss": [0, 71, 75, 76, 78, 88, 89, 90], "featur": [0, 28, 31, 42, 66, 69, 70, 76, 88], "across": [0, 29, 31, 76, 90], "repres": [0, 20, 26, 28, 65, 69, 76, 77, 89], "structur": [0, 28, 31, 32, 34, 68, 76, 88, 89, 90], "space": [0, 16, 32, 33, 61, 65, 68, 69, 70, 76, 77, 79, 82, 88, 89, 90], "let": [0, 76, 78], "its": [0, 1, 2, 5, 24, 29, 31, 34, 35, 47, 53, 65, 68, 69, 76, 78, 79, 82, 88, 89, 90], "taken": [0, 34, 76, 89], "assum": [0, 76, 90], "symmetri": [0, 76], "test": [0, 28, 39, 66, 68, 76, 78, 88, 90], "conduct": [0, 76, 78], "els": [0, 2, 3, 7, 12, 16, 21, 28, 29, 31, 34, 35, 53, 71, 73, 75, 76, 85], "resp": [0, 69, 76, 78], "asymmetr": [0, 76, 90], "trade": [0, 34, 76], "off": [0, 2, 4, 12, 13, 19, 21, 23, 25, 29, 31, 34, 35, 43, 54, 66, 76], "step": [0, 1, 2, 3, 5, 6, 7, 8, 11, 28, 42, 66, 68, 69, 76, 78, 90], "found": [0, 28, 66, 76, 89], "research": [0, 67, 76, 88, 89, 90], "close": [0, 28, 47, 71, 75, 76, 77, 86, 89], "form": [0, 6, 8, 47, 71, 75, 76, 77, 81, 86, 89, 90], "issu": [0, 65, 66, 69, 76, 86, 88, 89], "initi": [0, 14, 67, 69, 70, 73, 76, 77, 78, 79, 85, 87, 89], "pq": [0, 76], "must": [0, 76, 83, 86], "satisfi": [0, 76, 78], "constraint": [0, 31, 32, 69, 76, 77, 78, 83, 86, 89], "absolut": [0, 18, 30, 31, 32, 54, 68, 70, 76, 78, 87, 90], "directli": [0, 47, 76, 79, 89], "pass": [0, 66, 76, 77, 79, 83, 86, 90], "vayer": [0, 2, 28, 29, 30, 31, 32, 34, 35, 38, 42, 67, 70, 76, 78, 88, 89], "titouan": [0, 28, 29, 30, 31, 32, 35, 67, 76, 78, 88], "chapel": [0, 28, 30, 31, 32, 61, 62, 63, 67, 76, 79, 81, 85, 88, 89], "laetitia": [0, 28, 30, 31, 32, 61, 63, 67, 76, 88], "flamari": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 54, 62, 67, 69, 70, 71, 73, 76, 78, 81, 84, 85, 88, 89], "r\u00e9mi": [0, 2, 3, 7, 14, 28, 29, 30, 31, 32, 35, 67, 69, 71, 76, 78, 88, 89], "tavenard": [0, 28, 30, 31, 32, 67, 76, 88, 89], "romain": [0, 28, 30, 31, 32, 67, 76, 88], "courti": [0, 2, 7, 8, 12, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 45, 47, 54, 57, 67, 69, 70, 71, 73, 76, 77, 78, 82, 84, 88, 89], "nicola": [0, 3, 7, 12, 28, 29, 30, 31, 32, 33, 35, 47, 56, 67, 69, 71, 76, 78, 82, 88, 89], "applic": [0, 26, 28, 29, 30, 31, 32, 35, 54, 69, 71, 75, 76, 77, 78, 79, 87, 88], "machin": [0, 2, 3, 8, 13, 28, 30, 31, 32, 34, 54, 69, 71, 76, 77, 78, 79, 88, 89, 90], "learn": [0, 2, 3, 6, 8, 13, 24, 28, 29, 30, 31, 32, 35, 36, 37, 45, 46, 57, 66, 67, 69, 70, 71, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90], "icml": [0, 2, 28, 30, 31, 32, 34, 73, 76, 79, 86, 88, 89], "47": [0, 38, 42, 54, 64, 70, 76, 88, 90], "chowdhuri": [0, 76, 88], "m\u00e9moli": [0, 76, 88, 89], "network": [0, 8, 76, 88, 89, 90], "stabl": [0, 5, 68, 76, 88, 89, 90], "invari": [0, 76, 88], "infer": [0, 68, 76, 88], "ima": [0, 76, 88], "757": [0, 76, 88], "787": [0, 76, 88], "fused_gromov_wasserstein2": [0, 76], "gw": [0, 29, 35, 76, 78, 79, 88, 90], "differenti": [0, 6, 7, 42, 76, 88, 89, 90], "wrt": [0, 2, 68, 76, 86], "quadrat": [0, 9, 37, 63, 72, 76, 78, 79, 80, 84, 85, 86, 88, 90], "38": [0, 2, 34, 54, 62, 64, 76, 88, 89], "fuse": [0, 36, 67, 76, 88, 89, 90], "vincent": [0, 2, 29, 31, 32, 34, 35, 67, 76, 78, 88, 89], "cuaz": [0, 2, 29, 31, 32, 34, 35, 67, 76, 78, 88, 89], "corn": [0, 2, 29, 34, 35, 76, 78, 88, 89], "onlin": [0, 2, 34, 47, 65, 76, 88, 89], "2021": [0, 2, 16, 29, 32, 34, 35, 62, 68, 73, 76, 77, 78, 81, 85, 88, 89, 90], "gromov_barycent": [0, 33, 76, 89, 90], "lambda": [0, 28, 76, 79, 81, 89], "tol": [0, 21, 33, 71, 76, 79, 83], "warmstartt": [0, 76, 90], "init_c": [0, 76], "random_st": [0, 2, 33, 34, 72, 76], "leq": [0, 76, 78, 79, 89], "block": [0, 2, 26, 66, 69, 70, 71, 73, 76, 88, 89], "descent": [0, 2, 6, 7, 42, 70, 71, 73, 76, 78, 88, 89], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 68, 69, 71, 76, 77, 84, 86, 88, 89, 90], "lambda_": [0, 76, 89], "base": [0, 29, 31, 32, 35, 66, 69, 71, 76, 83, 86, 89, 90], "specif": [0, 33, 65, 66, 69, 71, 76, 85, 89, 90], "updat": [0, 69, 71, 76, 77, 81, 84, 86, 90], "accord": [0, 76, 86], "kernel": [0, 24, 31, 71, 76, 79, 86, 88, 89], "calcul": [0, 15, 38, 68, 69, 70, 76], "warmstart": [0, 31, 69, 70, 76, 90], "success": [0, 76], "random": [0, 2, 3, 5, 6, 8, 14, 15, 19, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 45, 53, 57, 61, 62, 63, 68, 72, 76, 82, 86, 90], "user": [0, 54, 66, 76, 88, 89, 90], "randomst": [0, 2, 6, 19, 23, 25, 33, 45, 72, 76, 82, 86], "instanc": [0, 5, 65, 72, 76, 78, 86, 89, 90], "fix": [0, 34, 42, 66, 69, 73, 76, 77, 79, 83, 88, 90], "seed": [0, 3, 5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 39, 41, 42, 62, 63, 68, 72, 76, 82, 86], "reproduc": [0, 11, 66, 76, 89], "permut": [0, 2, 3, 7, 76], "arbitrarili": [0, 76], "dure": [0, 76], "12": [0, 1, 5, 9, 11, 13, 14, 18, 25, 31, 32, 34, 39, 42, 54, 76, 77, 79, 88, 89], "gabriel": [0, 8, 31, 32, 67, 69, 76, 79, 88, 89], "marco": [0, 8, 29, 31, 32, 35, 67, 69, 76, 77, 78, 79, 88, 89], "justin": [0, 31, 32, 76, 79, 88, 89], "solomon": [0, 31, 32, 69, 76, 79, 88, 89], "averag": [0, 31, 32, 68, 71, 73, 76, 79, 84, 88, 89], "gromov_wasserstein": [0, 2, 29, 30, 32, 35, 76, 89], "kl_loss": [0, 76], "minim": [0, 2, 3, 4, 6, 7, 28, 29, 31, 34, 35, 42, 76, 78, 83, 85, 86, 89, 90], "13": [0, 11, 13, 17, 18, 25, 27, 30, 31, 39, 47, 52, 54, 76, 79, 88, 89, 90], "facundo": [0, 76, 88, 89], "approach": [0, 11, 18, 20, 22, 26, 69, 76, 77, 88, 89], "object": [0, 1, 2, 3, 4, 5, 8, 11, 23, 33, 48, 49, 52, 53, 69, 70, 71, 76, 77, 83, 86, 88, 89, 90], "foundat": [0, 76, 79, 88, 89, 90], "11": [0, 5, 10, 11, 18, 25, 31, 32, 34, 39, 54, 60, 62, 73, 76, 87, 88, 89], "417": [0, 76, 88, 89, 90], "487": [0, 76, 88, 89, 90], "gromov_wasserstein2": [0, 2, 76, 89, 90], "discrep": [0, 57, 76, 79, 82, 90], "gw_dist": [0, 29, 32, 35, 76], "max_sliced_wasserstein_dist": [0, 82], "x_": [0, 42, 69, 71, 77, 82], "x_t": [0, 69, 71, 82, 86], "n_project": [0, 3, 4, 56, 57, 82], "50": [0, 1, 3, 4, 5, 6, 8, 11, 15, 16, 21, 31, 32, 34, 40, 48, 50, 54, 62, 69, 79, 82, 83, 88, 90], "mont": [0, 82], "carlo": [0, 82], "approxim": [0, 8, 11, 24, 69, 70, 71, 76, 78, 82, 88, 89], "slice": [0, 9, 58, 67, 72, 77, 88, 89, 90], "mathcal": [0, 38, 71, 72, 75, 76, 82, 86, 89], "swd": [0, 56, 82], "_p": [0, 82, 89], "nu": [0, 3, 4, 7, 30, 73, 77, 82], "underset": [0, 82], "_in": [0, 82], "theta_": [0, 82], "stand": [0, 82, 90], "pushforward": [0, 82], "ni": [0, 82], "mapsto": [0, 76, 82], "rangl": [0, 69, 82], "n_samples_a": [0, 69, 82], "n_samples_b": [0, 69, 82], "case": [0, 26, 47, 62, 66, 68, 70, 77, 81, 82, 83, 88], "sliced_wasserstein_dist": [0, 3, 56, 82, 90], "20": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 18, 24, 25, 28, 29, 30, 31, 32, 35, 38, 39, 42, 44, 47, 48, 49, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 69, 76, 77, 82, 88, 89, 90], "normal": [0, 4, 10, 11, 13, 14, 28, 29, 31, 35, 52, 60, 68, 71, 73, 82, 86, 90], "35": [0, 5, 8, 9, 21, 39, 54, 82, 88, 89, 90], "deshpand": [0, 82, 88, 89], "hu": [0, 82, 88, 89], "sun": [0, 82, 88, 89], "pyrro": [0, 82, 88, 89], "siddiqui": [0, 82, 88, 89], "koyejo": [0, 82, 88, 89], "schwing": [0, 82, 88, 89], "gan": [0, 9, 37, 82, 88, 89, 90], "proceed": [0, 13, 69, 82, 83, 88, 89], "ieee": [0, 54, 71, 78, 82, 88, 89], "cvf": [0, 82, 88, 89], "vision": [0, 3, 56, 82, 88, 89], "pattern": [0, 54, 71, 78, 82, 88, 89], "recognit": [0, 82, 88, 89], "10648": [0, 82, 88, 89], "10656": [0, 82, 88, 89], "semidiscrete_wasserstein2_unif_circl": [0, 53, 77, 90], "mu_n": [0, 4, 8, 77, 82], "alpha_i": [0, 77, 82], "x_i": [0, 4, 30, 77, 82, 89], "left": [0, 6, 13, 18, 22, 42, 68, 69, 71, 75, 76, 77, 80, 82, 83, 84, 86, 87], "right": [0, 6, 13, 14, 29, 31, 35, 42, 47, 59, 65, 66, 69, 71, 75, 76, 77, 82, 83, 84, 86, 87, 90], "alpha_k": [0, 77], "unif": [0, 2, 4, 6, 14, 15, 16, 30, 32, 33, 34, 40, 41, 42, 45, 51, 53, 61, 77, 82, 84, 86], "delta_": [0, 4, 30, 77, 82, 83, 89], "02111111": [0, 77], "46": [0, 54, 57, 77, 82, 88, 90], "bonet": [0, 4, 53, 57, 67, 77, 82, 88], "berg": [0, 57, 77, 82, 88], "septier": [0, 57, 77, 82, 88], "drumetz": [0, 57, 77, 82, 88], "pham": [0, 57, 77, 82, 88], "2023": [0, 57, 77, 82, 83, 88, 90], "spheric": [0, 9, 37, 58, 67, 77, 82, 88, 90], "omega": [0, 63, 69, 78, 79, 83, 84, 85, 89], "dim_a": [0, 69, 79, 81, 85], "dim_b": [0, 69, 79, 81, 85], "both": [0, 2, 7, 24, 47, 62, 65, 69, 70, 77, 81, 89, 90], "By": [0, 69, 73, 81, 89], "too": [0, 69, 73, 89], "small": [0, 2, 7, 47, 66, 69, 73, 76, 77, 88, 89, 90], "should": [0, 26, 42, 63, 66, 68, 69, 71, 73, 76, 77, 81, 83, 86, 88, 89, 90], "enough": [0, 28, 69, 73, 89], "you": [0, 15, 18, 20, 21, 31, 32, 47, 50, 54, 66, 68, 69, 73, 80, 88, 89, 90], "sharper": [0, 69, 89], "avoid": [0, 66, 68, 69, 71, 73, 79, 89], "numer": [0, 22, 32, 47, 60, 68, 69, 71, 73, 79, 86, 88, 89, 90], "last": [0, 47, 69, 70, 81, 89, 90], "veri": [0, 26, 47, 69, 76, 86, 88, 89, 90], "slow": [0, 69, 73, 89, 90], "practic": [0, 8, 66, 69, 73, 89], "even": [0, 10, 11, 60, 61, 69, 89, 90], "reason": [0, 65, 69, 89, 90], "finit": [0, 68, 69, 89], "why": [0, 66, 69, 90], "sinkhorn_epsilon_sc": [0, 69, 71, 89], "reli": [0, 69, 76, 88, 89], "warm": [0, 69, 89], "start": [0, 34, 47, 66, 68, 69, 73, 81, 86, 88, 90], "sometim": [0, 69, 89], "better": [0, 8, 44, 69, 83, 89, 90], "greedi": [0, 69, 88, 89, 90], "version": [0, 2, 33, 34, 53, 65, 66, 68, 69, 78, 81, 88, 89, 90], "greenkhorn": [0, 67, 69, 89, 90], "speedup": [0, 69, 89, 90], "screen": [0, 37, 46, 69, 72, 80, 88, 89], "screenkhorn": [0, 37, 46, 67, 72, 80, 89, 90], "aim": [0, 4, 8, 63, 69, 71, 86, 89], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 26, 28, 29, 30, 31, 32, 34, 35, 38, 42, 43, 47, 53, 61, 62, 65, 66, 67, 68, 69, 76, 77, 79, 81, 89, 90], "strongli": [0, 66, 69, 76, 89, 90], "recommend": [0, 66, 69, 89, 90], "check": [0, 31, 66, 68, 69, 77, 86, 89, 90], "those": [0, 12, 47, 69, 71, 76, 77, 85, 89, 90], "tupl": [0, 69, 70, 78], "logarithm": [0, 68, 69], "36552929": [0, 69, 89], "13447071": [0, 69, 89], "lightspe": [0, 69, 71, 83, 85, 88, 89], "advanc": [0, 38, 42, 44, 45, 65, 69, 70, 71, 83, 84, 85, 88, 89], "neural": [0, 8, 24, 25, 38, 42, 44, 45, 69, 70, 71, 83, 84, 85, 88, 89, 90], "system": [0, 24, 25, 38, 42, 44, 45, 66, 68, 69, 71, 83, 84, 85, 88, 89], "nip": [0, 24, 25, 69, 71, 83, 85, 88, 89], "26": [0, 39, 44, 54, 69, 71, 83, 85, 88, 89, 90], "2013": [0, 69, 71, 83, 85, 86, 88, 89], "9": [0, 2, 4, 8, 11, 16, 18, 21, 24, 25, 28, 29, 31, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 48, 54, 61, 69, 71, 81, 83, 85, 88, 89], "stabil": [0, 69, 77, 85, 88, 89, 90], "preprint": [0, 16, 54, 60, 69, 71, 73, 77, 78, 85, 88, 89], "1610": [0, 69, 85, 88, 89], "06519": [0, 69, 85, 88, 89], "34": [0, 5, 25, 27, 39, 54, 69, 88, 89], "feydi": [0, 69, 88, 89], "s\u00e9journ\u00e9": [0, 69, 88, 89], "amari": [0, 69, 88, 89], "trouv\u00e9": [0, 69, 88, 89], "mmd": [0, 69, 88, 89], "diverg": [0, 8, 52, 63, 68, 69, 76, 78, 85, 88, 89, 90], "2681": [0, 69, 88, 89], "2690": [0, 69, 88, 89], "unregular": [0, 69, 71, 78, 81, 83, 85], "sinkhorn_knopp": [0, 69, 85, 89], "classic": [0, 69, 71, 85, 89, 90], "epsilon": [0, 13, 29, 31, 32, 44, 59, 68, 69, 70, 76, 85, 89, 90], "sinkhorn2": [0, 52, 69, 88, 90], "without": [0, 65, 66, 68, 69, 76, 81, 88, 90], "contribut": [0, 65, 69, 89, 90], "26894142136999516": [0, 69], "21": [0, 39, 54, 69, 88, 89], "altschul": [0, 69, 88, 89], "Near": [0, 69, 88, 89], "linear": [0, 1, 5, 8, 24, 25, 27, 36, 37, 62, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 81, 85, 86, 88, 89, 90], "31": [0, 1, 3, 5, 17, 39, 47, 54, 56, 69, 75, 82, 88, 89, 90], "sinkhorn_lpl1_mm": [0, 71, 89], "labels_a": [0, 71], "eta": [0, 7, 24, 25, 71], "numinneritermax": [0, 15, 69, 71, 78], "200": [0, 1, 4, 5, 8, 14, 15, 31, 48, 53, 54, 56, 57, 71, 76, 78, 79, 90], "stopinnerthr": [0, 71], "non": [0, 49, 60, 62, 66, 67, 68, 69, 71, 77, 78, 81, 83, 85, 86, 88, 89, 90], "convex": [0, 34, 51, 71, 78, 83, 89], "group": [0, 18, 20, 71, 88, 90], "lasso": [0, 18, 20, 71, 81, 88, 90], "omega_": [0, 71, 89], "omega_g": [0, 71], "_c": [0, 71], "_1": [0, 69, 71, 79, 89], "index": [0, 2, 70, 71, 81, 84, 88], "class": [0, 2, 5, 8, 21, 26, 67, 69, 72, 73, 90], "label": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 24, 26, 28, 32, 34, 39, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 69, 71, 72, 73, 86, 89, 90], "inner": [0, 69, 71, 76], "tuia": [0, 54, 69, 71, 78, 88, 89], "rakotomamonji": [0, 39, 44, 54, 67, 69, 71, 73, 78, 88, 89], "adapt": [0, 26, 27, 54, 65, 69, 71, 72, 76, 78, 80, 86, 88, 90], "analysi": [0, 37, 46, 54, 66, 69, 71, 73, 77, 78, 87, 88, 90], "99": [0, 2, 54, 71, 78, 88, 89, 90], "1510": [0, 54, 71, 78, 88, 89], "06567": [0, 54, 71, 78, 88, 89], "kl": [0, 49, 59, 68, 69, 70, 76, 83, 85, 88, 89, 90], "kullback": [0, 31, 32, 59, 63, 68, 76, 83, 85, 89], "leibler": [0, 31, 32, 59, 63, 68, 76, 83, 85, 89], "25": [0, 5, 8, 11, 28, 30, 39, 46, 53, 54, 57, 79, 81, 85, 88, 89, 90], "unnorm": [0, 79, 85], "One": [0, 71, 85, 88, 89, 90], "mani": [0, 85, 90], "sinkhorn_reg_sc": [0, 85], "ot_dist": [0, 85], "51122823": [0, 85], "18807035": [0, 85], "frogner": [0, 85, 88, 89], "zhang": [0, 85, 88, 89], "mobahi": [0, 85, 88, 89], "h": [0, 6, 13, 28, 31, 32, 62, 69, 71, 72, 73, 76, 81, 85, 86, 88, 89], "araya": [0, 85, 88, 89], "polo": [0, 85, 88, 89], "poggio": [0, 85, 88, 89], "sinkhorn_knopp_unbalanc": [0, 85, 89], "sinkhorn_stabilized_unbalanc": [0, 85, 89], "sinkhorn_reg_scaling_unbalanc": [0, 85], "sinkhorn_unbalanced2": [0, 85, 89], "31912866": [0, 85], "sim": [0, 71, 82], "et": [0, 3, 56, 62, 69, 77, 82, 88, 89], "al": [0, 3, 56, 62, 69, 77, 82, 88, 89], "radon": [0, 3, 56, 82, 88, 89], "imag": [0, 3, 11, 12, 27, 33, 37, 47, 54, 56, 69, 71, 78, 82, 86, 88, 89, 90], "51": [0, 3, 9, 31, 32, 54, 56, 76, 82, 88, 89], "22": [0, 3, 5, 9, 11, 19, 27, 39, 54, 56, 69, 82, 88, 89, 90], "45": [0, 3, 16, 36, 54, 56, 77, 82, 88, 89, 90], "sliced_wasserstein_spher": [0, 57, 82, 90], "ssw_p": [0, 82], "int_": [0, 28, 82], "sigma": [0, 8, 21, 23, 24, 25, 28, 38, 71, 72, 82, 86], "foral": [0, 69, 76, 82, 86], "tx": [0, 12, 82], "_2": [0, 69, 75, 76, 81, 82, 86], "sqrt": [0, 4, 34, 39, 57, 68, 75, 79, 82], "keepdim": [0, 39, 57, 68, 82], "sliced_wasserstein_sphere_unif": [0, 4, 82, 90], "ssw_2": [0, 4, 82], "42": [0, 1, 2, 3, 5, 16, 19, 23, 25, 34, 41, 54, 77, 82, 88, 90], "randn": [0, 1, 3, 5, 6, 8, 15, 23, 30, 32, 38, 39, 42, 45, 57, 61, 68, 82], "500": [0, 3, 4, 5, 6, 8, 9, 19, 25, 31, 53, 68, 70, 76, 82, 83], "ssw": [0, 4, 82], "allclos": [0, 68, 82], "01734": [0, 82], "atol": [0, 68, 82], "reg_typ": [0, 49, 71, 83, 89, 90], "unbalanced_typ": [0, 90], "n_thread": 0, "plan_init": 0, "potentials_init": 0, "discret": [0, 19, 24, 25, 34, 54, 69, 71, 77, 78, 84, 88, 89, 90], "otresult": [0, 86, 90], "t_": [0, 76], "m_": [0, 30, 81, 89], "lambda_r": 0, "lambda_u": 0, "penal": [0, 37, 64, 72, 81, 85, 88], "exact": [0, 17, 37, 46, 54, 64, 69, 72, 77, 79, 80, 85, 86, 88, 89, 90], "array_lik": [0, 86], "l2": [0, 10, 11, 37, 49, 60, 64, 72, 76, 81, 83, 85, 88, 89, 90], "balanc": [0, 86, 89], "unction": 0, "tv": [0, 52], "omp": 0, "_type_": 0, "toler": [0, 33, 68, 70, 79, 83], "re": [0, 56, 57, 61, 62, 68, 77, 90], "obtain": [0, 53, 71, 81, 89], "value_linear": [0, 86, 90], "more": [0, 29, 31, 35, 42, 47, 66, 69, 77, 89, 90], "avail": [0, 26, 65, 66, 68, 88, 89, 90], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 72, 77, 83, 86, 89, 90], "origin": [0, 2, 24, 28, 66, 67, 77, 83, 89, 90], "paper": [0, 11, 69, 88, 89, 90], "formul": [0, 79, 83, 88, 89], "17": [0, 18, 25, 39, 54, 83, 88, 89], "blondel": [0, 45, 67, 83, 84, 88, 89, 90], "segui": [0, 14, 45, 83, 84, 88, 89], "rolet": [0, 45, 67, 83, 84, 88, 89], "twenti": [0, 69, 83, 88, 89], "aistat": [0, 69, 71, 83, 88, 89], "tic": [0, 11, 30, 86, 90], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 68, 86, 89, 90], "matlab": [0, 67, 86], "toc": [0, 11, 30, 86, 90], "messag": [0, 66, 69, 86, 90], "elaps": [0, 11, 30, 86], "toq": [0, 86], "julia": [0, 86], "type_a": [0, 68, 82, 86], "length": [0, 68, 70, 81, 84, 86], "bin": [0, 7, 10, 11, 13, 44, 48, 49, 52, 54, 59, 60, 72, 86, 89], "expect": [0, 8, 42, 65, 66, 69, 86, 88, 89], "output": [0, 5, 8, 33, 66, 69, 86, 88, 89, 90], "pytorch": [0, 9, 37, 42, 67, 68, 72, 80, 84, 86, 88, 89, 90], "wasserstein_1d": [0, 7, 53, 77, 89, 90], "dimension": [0, 32, 61, 69, 73, 77, 88, 90], "15": [0, 5, 8, 13, 14, 18, 22, 25, 28, 30, 39, 42, 54, 55, 61, 71, 77, 85, 88, 89, 90], "batch": [0, 7, 8, 69, 71, 76, 77, 84], "formal": [0, 69, 77], "so": [0, 2, 8, 63, 76, 77, 86, 89, 90], "wai": [0, 19, 66, 77, 89, 90], "build": [0, 8, 28, 66, 71, 77, 88, 89, 90], "individu": [0, 65, 77], "quantil": [0, 77, 79], "integr": [0, 77], "them": [0, 29, 35, 71, 77, 79, 90], "prefer": [0, 66, 77, 90], "whenev": [0, 77], "differ": [0, 2, 16, 31, 37, 47, 55, 65, 69, 70, 71, 76, 77, 80, 85, 88, 89, 90], "over": [0, 8, 34, 68, 69, 76, 77, 79], "posit": [0, 2, 7, 10, 11, 13, 34, 44, 47, 48, 49, 52, 54, 59, 60, 65, 68, 77, 78, 79, 80, 88, 89], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 68, 70, 76, 77, 78, 83, 86, 88, 89, 90], "least": [0, 66, 71, 77], "chap": [0, 77], "atom": [0, 69, 76, 77], "consid": [0, 7, 26, 28, 34, 38, 65, 66, 69, 77, 79, 86, 89], "have": [0, 8, 26, 34, 47, 65, 66, 68, 76, 77, 86, 89, 90], "been": [0, 8, 67, 77, 79, 86, 88, 89, 90], "prior": [0, 66, 69, 77, 89], "being": [0, 47, 66, 71, 77, 89, 90], "wasserstein_circl": [0, 53, 77, 90], "ot_": [0, 77, 89], "cdf_u": [0, 77], "cdf_v": [0, 77], "w_1": [0, 77, 89], "levm": [0, 77], "hundries": [0, 77, 88], "shayan": [0, 77, 88], "marcel": [0, 77, 88], "klatt": [0, 77, 88], "axel": [0, 77, 88], "munk": [0, 77, 88], "circular": [0, 28, 77, 88], "direct": [0, 34, 52, 77, 78, 83, 88, 90], "innov": [0, 77, 88], "bicentenni": [0, 77, 88], "tribut": [0, 77, 88], "florenc": [0, 77, 88], "nightingal": [0, 77, 88], "singapor": [0, 77, 88], "springer": [0, 77, 88], "natur": [0, 68, 77, 88], "2022": [0, 76, 77, 88], "57": [0, 54, 77, 85, 88, 90], "82": [0, 47, 54, 77, 88, 90], "weak_optimal_transport": [0, 40, 87], "weak": [0, 37, 46, 67, 72, 80, 88, 89, 90], "_j": [0, 73, 77, 83, 84, 87], "guess": [0, 78, 87], "indep": [0, 78, 87], "joint": [0, 34, 69, 71, 76, 78, 87, 88, 89, 90], "densiti": [0, 78, 87], "numitermaxemd": [0, 78, 87], "stopthr2": [0, 78, 87], "gozlan": [0, 16, 77, 87, 88, 89], "roberto": [0, 87, 88, 89], "samson": [0, 87, 88, 89], "tetali": [0, 87, 88, 89], "kantorovich": [0, 87, 88, 89], "dualiti": [0, 11, 87, 88, 89], "273": [0, 87, 88, 89], "3327": [0, 87, 88, 89], "3405": [0, 87, 88, 89], "go": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 90], "end": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 77, 81, 89, 90], "download": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "full": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 68, 69, 84, 86, 88, 90], "author": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 88], "remi": [1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52], "polytechniqu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 40, 41, 43], "edu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 40, 41, 43, 89], "licens": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63], "mit": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 88], "sphinx_gallery_thumbnail_numb": [1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 39, 40, 41, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62], "pyplot": [1, 4, 5, 8, 10, 12, 13, 15, 16, 19, 23, 25, 28, 30, 33, 42, 43], "pl": [1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 16, 18, 20, 21, 22, 24, 26, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "manual_se": [1, 3, 4, 5, 8], "n_source_sampl": [1, 5, 18, 22, 24, 71], "n_target_sampl": [1, 5, 18, 22, 24, 71], "noise_level": [1, 5, 24], "make_data_classif": [1, 18, 20, 21, 22, 24, 26], "gaussrot": [1, 24], "nz": [1, 21, 24, 39, 72], "xt": [1, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 39, 40, 41, 50, 51, 53, 56, 57, 61, 62, 63, 69, 71, 75, 80, 81, 84, 89], "yt": [1, 18, 20, 21, 22, 24, 26, 30, 39, 71], "one": [1, 3, 5, 7, 19, 23, 24, 25, 28, 33, 34, 45, 47, 66, 68, 69, 71, 72, 77, 81, 89, 90], "mode": [1, 5, 24, 71], "chang": [1, 2, 5, 24, 33, 34, 66, 68, 69, 77, 89, 90], "varianc": [1, 5, 24, 32], "map": [1, 5, 27, 37, 45, 63, 67, 71, 72, 75, 76, 77, 84, 86, 88, 90], "figur": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66], "clf": [1, 2, 3, 4, 5, 8, 11, 21, 23, 24, 29, 30, 31, 33, 34, 35, 38, 42, 43, 47, 51, 52, 60, 62], "scatter": [1, 2, 3, 4, 5, 6, 8, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 30, 32, 33, 34, 39, 47, 53, 57, 61, 62, 63], "marker": [1, 5, 14, 16, 18, 20, 21, 22, 24, 26, 34, 39], "o": [1, 5, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 33, 34, 43, 47, 76, 88, 89, 90], "legend": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 24, 26, 34, 39, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 62], "loc": [1, 5, 14, 18, 20, 22, 24, 26, 29, 31, 35, 39, 40, 41, 50, 51, 56, 57, 59, 62], "titl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 47, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 80, 88], "text": [1, 4, 5, 6, 8, 14, 19, 21, 23, 24, 40, 41, 42, 47, 50, 54, 56, 57, 59, 66, 69, 75, 76, 77, 81, 86, 89], "requires_grad": [1, 6, 42], "adam": [1, 5, 76], "lr": [1, 2, 3, 4, 5, 6, 7, 8, 42, 45, 84], "n_iter": [1, 4, 5, 8], "rang": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 21, 28, 29, 31, 33, 34, 35, 38, 42, 43, 47, 52, 53, 56, 57, 60, 62, 63], "nois": [1, 5, 8, 28, 61, 72], "minu": [1, 5], "becaus": [1, 5, 77, 89, 90], "maxim": [1, 5, 84, 85, 90], "te": [1, 5], "loss_dual_entrop": [1, 5], "append": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 28, 29, 31, 33, 34, 35, 42, 60, 61, 86], "detach": [1, 2, 3, 4, 5, 6, 7, 8, 42, 68], "3d": [1, 4, 5, 8, 10, 11, 16, 57, 60], "backward": [1, 2, 3, 5, 6, 7, 8, 42], "zero_grad": [1, 5, 8], "grid": [1, 4, 5, 6, 8, 57, 90], "neg": [1, 5, 62, 68, 69, 76, 77, 81, 83, 85, 88], "xlabel": [1, 4, 5, 6, 8, 19, 25, 30, 34, 38, 42, 47, 52, 53, 56, 57], "ge": [1, 50, 54], "plan_dual_entrop": [1, 5], "20204949002247302": 1, "19": [1, 18, 25, 39, 45, 54, 84, 88, 89, 90], "549871118338295": 1, "661769382233253": 1, "36": [1, 3, 5, 54, 81, 85, 88, 89], "87260525567014": 1, "56695401460507": 1, "36904838730071": 1, "60": [1, 3, 4, 5, 7, 8, 10, 11, 13, 31, 32, 34, 44, 48, 49, 54, 59, 60], "43": [1, 43, 54, 69, 71, 75, 77, 88, 89, 90], "10265912148077": 1, "3817746647786": 1, "80": [1, 4, 5, 8, 11, 14, 31, 34, 48, 54, 90], "47711998806595": 1, "90": [1, 5, 8, 16, 31, 47, 48, 52, 54, 90], "50438004374256": 1, "51954787644158": 1, "110": [1, 5, 8, 31, 48, 54], "524378518919384": 1, "120": [1, 3, 5, 8, 9, 31, 48, 54, 57], "52729816752112": 1, "130": [1, 5, 8, 31, 48, 54, 90], "528774109047696": 1, "140": [1, 5, 8, 31, 48, 54, 90], "52949611518594": 1, "150": [1, 4, 5, 8, 16, 18, 20, 22, 26, 31, 43, 48, 53, 54, 90], "53004324310105": 1, "160": [1, 5, 8, 31, 48, 54, 90], "53041462892683": 1, "170": [1, 5, 8, 31, 48, 54, 90], "53069775723221": 1, "180": [1, 5, 8, 31, 48, 54], "53091852253532": 1, "190": [1, 5, 8, 31, 48, 54], "53109568759941": 1, "plot2d_samples_mat": [1, 20, 40, 41, 50, 51], "zorder": [1, 2, 5, 34, 43], "01": [1, 9, 10, 17, 18, 22, 27, 29, 30, 31, 32, 35, 39, 45, 48, 52, 54, 55, 60, 61, 64, 69, 79, 81], "loss_dual_quadrat": 1, "gq": 1, "plan_dual_quadrat": 1, "0018442196020623663": 1, "492158866293043": 1, "258272454991634": 1, "50105552996169": 1, "24162235550024": 1, "41": [1, 7, 47, 54, 81, 85, 88, 90], "97430525613905": 1, "95657315118262": 1, "18340844665055": 1, "30068485464311": 1, "36072816056429": 1, "377125787311165": 1, "3865710832233": 1, "39010104202272": 1, "39185229306432": 1, "39269230506948": 1, "39312090505821": 1, "39335878693368": 1, "39351682540024": 1, "393622596471864": 1, "39369813588111": 1, "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 89], "script": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 90], "minut": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "599": [1, 9], "plot_dual_ot_pytorch": [1, 9], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 86, 90], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 90], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 89, 90], "ipynb": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 88, 90], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 90], "express": [2, 6, 65, 89], "part": [2, 39, 90], "node": [2, 28, 31, 32, 76, 88], "model": [2, 3, 5, 69, 88, 89], "actual": [2, 89], "recov": [2, 8, 84, 89, 90], "proport": [2, 29, 31, 34, 35, 47, 69, 71, 72, 80], "sbm": [2, 29, 31, 34, 35], "allow": [2, 6, 32, 33, 38, 42, 61, 66, 70, 79, 89, 90], "accur": 2, "simultan": [2, 90], "other": [2, 6, 7, 39, 47, 65, 66, 76, 83, 84, 86, 88, 90], "properti": [2, 8, 76, 86, 89], "sklearn": [2, 33, 34, 86, 90], "manifold": [2, 33, 34, 73, 89], "md": [2, 34, 90], "pylab": [2, 3, 6, 7, 11, 14, 16, 18, 20, 21, 22, 24, 26, 29, 31, 32, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "torch": [2, 3, 4, 6, 7, 8, 42, 68, 89, 90], "ot": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 43, 44, 45, 48, 50, 55, 56, 57, 59, 60, 61, 62, 63, 66, 67, 88, 90], "rng": [2, 6, 19, 23, 25, 33, 45], "def": [2, 3, 4, 5, 6, 8, 16, 19, 21, 23, 25, 28, 29, 31, 32, 33, 34, 35, 53, 54, 62, 68, 86], "get_sbm": 2, "nc": [2, 34], "ratio": 2, "nbpc": 2, "round": [2, 29, 31, 32, 34, 35, 47, 79, 85], "astyp": [2, 3, 14, 15, 16, 19, 23, 25, 31, 32, 33, 34], "zero": [2, 3, 4, 6, 8, 10, 11, 22, 29, 31, 32, 34, 35, 42, 47, 49, 51, 52, 53, 60, 68, 70, 76, 77, 86, 90], "rand": [2, 4, 8, 23, 39, 41, 61, 63, 68], "ey": [2, 34, 68], "05": [2, 5, 9, 11, 18, 24, 25, 31, 32, 39, 45, 48, 54, 63, 68, 69, 71, 76, 81], "ones": [2, 8, 14, 15, 28, 29, 30, 31, 34, 35, 47, 50, 56, 57, 62, 63, 68, 71, 76], "2d": [2, 16, 17, 18, 20, 21, 22, 26, 34, 37, 40, 41, 47, 51, 55, 58, 62, 64, 69, 72, 77, 79, 80, 85, 86, 89, 90], "dissimilar": [2, 33, 34], "precomput": [2, 33, 34, 89], "fit_transform": [2, 33, 34, 71], "plot_graph": [2, 34], "color": [2, 4, 5, 6, 7, 10, 13, 15, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 42, 43, 47, 50, 53, 57, 61, 62, 63, 71, 80, 86, 89, 90], "c0": [2, 5, 34, 62, 63], "edgecolor": [2, 15, 34], "cmap": [2, 5, 10, 12, 13, 21, 28, 30, 32, 34, 47, 60, 61, 63], "tab10": [2, 34], "vmax": [2, 21, 28, 34, 42, 47], "subplot": [2, 4, 5, 8, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 47, 51, 52, 54, 60, 61, 62, 63, 80], "axi": [2, 3, 4, 5, 12, 13, 15, 16, 19, 21, 23, 25, 29, 31, 34, 35, 43, 51, 53, 54, 56, 57, 61, 63, 68, 73, 83, 86], "imshow": [2, 12, 13, 18, 19, 20, 22, 23, 25, 26, 30, 32, 34, 38, 40, 42, 47, 50, 51, 54, 61, 63], "nearest": [2, 18, 20, 22, 26, 30, 34, 40, 50, 51, 71], "adjac": [2, 28], "home": [2, 5, 7, 10, 15, 18, 20, 21, 22, 31, 32, 33, 34, 39, 44, 47, 50, 53, 54, 60, 61], "circleci": [2, 5, 7, 10, 15, 18, 20, 21, 22, 31, 32, 33, 34, 39, 44, 47, 50, 53, 54, 60, 61, 90], "local": [2, 33, 34, 39, 66, 89], "lib": [2, 33, 34, 39, 68], "python3": [2, 33, 34, 39], "site": [2, 33, 34, 39], "packag": [2, 33, 34, 39, 69, 86, 89], "_md": [2, 33, 34], "298": [2, 33, 34, 90], "futurewarn": [2, 33, 34], "normalized_stress": [2, 33, 34], "auto": [2, 30, 33, 34, 61], "To": [2, 8, 33, 34, 68, 69, 79, 86, 88, 89], "suppress": [2, 33, 34], "manual": [2, 33, 34], "plot_optim_gromov_pytorch": [2, 9], "81": [2, 54], "userwarn": [2, 5, 7, 15, 18, 20, 21, 22, 31, 32, 34, 44, 47, 50, 54, 60], "colormap": [2, 10, 34, 60], "ignor": [2, 34, 42, 78], "diagon": [2, 26, 28, 68, 75], "want": [2, 8, 15, 18, 20, 21, 31, 32, 42, 47, 50, 54, 89, 90], "up": [2, 66, 90], "min_weight_gw": 2, "a2": [2, 10, 11, 13, 15, 60], "nb_iter_max": [2, 3, 7], "min_a": [2, 89], "our": [2, 3, 7, 88, 89, 90], "c1_torch": 2, "c2_torch": 2, "a0": 2, "random_init": 2, "a1_torch": 2, "requires_grad_": [2, 3, 4, 7], "a2_torch": 2, "loss_it": [2, 3, 7], "clone": [2, 3, 4, 7, 66, 68], "03d": 2, "no_grad": [2, 3, 6, 7, 42], "grad": [2, 3, 4, 6, 7, 39, 42, 68, 76, 83, 84], "zero_": [2, 3, 6, 7, 42], "proj_simplex": [2, 6, 7, 42], "a1": [2, 10, 11, 13, 15, 60], "a0_est": 2, "loss_iter0": 2, "29850312": 2, "20157616": 2, "49992072": 2, "clear": 2, "noe": 2, "receiv": [2, 66], "most": [2, 69, 86, 89, 90], "show": [2, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 65, 77], "here": [2, 4, 62, 76, 88, 89, 90], "previous": 2, "t_unif": 2, "label_unif": 2, "argmax": [2, 29, 31, 34, 35, 38, 42, 68], "t_est": 2, "label_est": 2, "est": 2, "7760154087783518": 2, "5785554952306606": 2, "7708789474385981": 2, "6510858680020267": 2, "now": [2, 4, 47, 68, 89, 90], "seen": [2, 69, 77, 89], "probabl": [2, 7, 16, 34, 42, 76, 77, 88], "link": [2, 29, 31, 66, 88, 90], "graph_compression_gw": 2, "nb_node": 2, "clamp": 2, "a0_est2": 2, "c0_est2": 2, "loss_iter2": 2, "5e": [2, 13, 21, 32, 33, 62], "vmin": [2, 28, 42, 47], "colorbar": [2, 34, 47], "29985821": 2, "18926744": 2, "51087435": 2, "0x7f78d906a860": 2, "861": [2, 9], "liutku": [3, 88, 89], "simsekli": [3, 88, 89], "majewski": [3, 88, 89], "durmu": [3, 88, 89], "st\u00f6ter": [3, 88, 89], "mai": [3, 65, 66, 76, 77, 79, 81, 88, 89, 90], "nonparametr": [3, 88, 89], "diffus": [3, 88, 89], "4104": [3, 88, 89], "4113": [3, 88, 89], "load": [3, 19, 25, 47], "i1": [3, 14, 16, 19, 23, 25], "imread": [3, 12, 13, 14, 16, 19, 23, 25, 33], "redcross": [3, 12, 14, 16], "png": [3, 12, 13, 14, 16, 33, 43], "i2": [3, 14, 16, 19, 23, 25], "tooth": [3, 12, 16], "sz": [3, 14, 16], "xx": [3, 5, 14], "yy": [3, 5, 14], "meshgrid": [3, 4, 5, 14, 16, 68], "arang": [3, 7, 10, 11, 13, 14, 16, 30, 38, 39, 42, 44, 48, 49, 51, 52, 54, 59, 60, 68, 69], "stack": [3, 14, 16, 34, 68], "32": [3, 5, 14, 39, 54, 73, 76, 88, 89], "x3": [3, 14, 15], "collect": [3, 10, 11, 33, 39, 53, 60, 69], "pathcollect": [3, 33, 53], "0x7f78eba24a30": 3, "devic": [3, 7, 68, 89, 90], "cuda": [3, 7, 67, 90], "is_avail": [3, 7], "x1_torch": 3, "x2_torch": 3, "1e3": 3, "x_all": 3, "gen": 3, "5e1": 3, "ax": [3, 4, 10, 12, 13, 15, 16, 42, 47, 57, 60, 61, 68, 78, 89], "_update_plot": [3, 4, 8, 16, 62], "ani": [3, 4, 8, 16, 62, 65, 66, 68, 70, 78, 81, 86, 88, 89], "funcanim": [3, 4, 8, 16, 62], "gcf": [3, 4, 8, 10, 60, 62], "interv": [3, 4, 8, 16, 56, 57, 62, 68], "repeat_delai": [3, 4, 8, 16, 62], "2000": [3, 4, 7, 8, 16, 62], "onc": [3, 4, 8, 16, 62], "loop": [3, 4, 8, 16, 47, 62, 71], "reflect": [3, 4, 8, 16, 62], "x3_torch": 3, "xbinit": 3, "16": [3, 7, 12, 15, 17, 18, 25, 30, 34, 38, 39, 42, 54, 68, 70, 73, 77, 81, 88, 89], "xbary_torch": 3, "plot_sliced_wass_grad_flow_pytorch": [3, 9], "transform": [4, 18, 19, 20, 22, 24, 26, 71, 84, 86, 89], "cl\u00e9ment": [4, 53, 57, 67], "clement": [4, 53, 57], "univ": [4, 21, 22, 38, 42, 53, 57, 62, 63], "ub": [4, 38, 42, 53, 57, 62, 63], "fr": [4, 7, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 38, 39, 42, 48, 49, 50, 51, 52, 53, 57, 59, 60, 61, 62, 63], "nn": [4, 5, 8, 90], "function": [4, 7, 10, 11, 12, 33, 47, 60, 62, 66, 76, 88, 89, 90], "plot_spher": 4, "xlist": 4, "linspac": [4, 5, 10, 15, 28, 52, 53, 60, 68], "ylist": 4, "z": [4, 10, 34, 44, 57, 60, 67, 69, 83, 86, 88, 89], "plot_wirefram": [4, 57], "grai": [4, 57], "bottom": [4, 13, 47], "half": 4, "set_titl": [4, 10, 13, 15, 42], "0x7f78fa5f2230": 4, "xvisu": [4, 8], "sw": 4, "grad_x": 4, "item": [4, 28, 29, 31, 35, 66], "semilogi": [4, 6, 8], "2097678929567337": 4, "23": [4, 5, 6, 8, 34, 36, 39, 52, 54, 69, 88, 89, 90], "52222222222222": [4, 5, 6, 8], "ivisu": [4, 8], "fig": [4, 12, 13, 15, 16, 32, 33, 38, 42, 51, 57, 61], "add_subplot": [4, 10, 16, 32, 60, 61], "set_xlim": [4, 15, 57], "set_ylim": [4, 15, 57], "18": [4, 5, 9, 18, 25, 28, 39, 45, 54, 79, 84, 88, 89], "464": [4, 9], "plot_ssw_unif_torch": [4, 9], "nvisu": [5, 54], "300": [5, 31, 34], "ax_bound": 5, "defin": [5, 8, 33, 38, 45, 47, 65, 68, 69, 71, 77, 81, 83, 89, 90], "mlp": [5, 8], "modul": [5, 8, 44, 47, 66, 69, 73, 80, 88, 90], "__init__": [5, 8, 71, 86], "self": [5, 8, 71, 86], "super": [5, 8], "fc1": [5, 8], "fc2": [5, 8], "relu": [5, 8], "heavisid": [5, 8], "fn": [5, 8], "forward": [5, 8, 89], "ravel": [5, 28, 62, 63, 83, 86], "doubl": [5, 42, 47], "005": [5, 63], "n_batch": 5, "iperm": 5, "randint": [5, 19, 25, 28], "ipermt": 5, "xsi": 5, "xti": 5, "257329928299894": 5, "890456785604675": 5, "58037947236615": 5, "440996850749862": 5, "12608610815788": 5, "275903405782387": 5, "27": [5, 34, 39, 54, 69, 71, 88, 90], "268827591939186": 5, "29": [5, 39, 54, 71, 75, 79, 88, 89, 90], "79159074243252": 5, "63488731570214": 5, "127228618478725": 5, "696522621311644": 5, "33": [5, 32, 38, 39, 42, 44, 54, 69, 70, 88, 89], "46949401889149": 5, "64206913098602": 5, "153816351532946": 5, "283212421610095": 5, "52058538064263": 5, "676096587323535": 5, "458654411651835": 5, "43596310348253": 5, "26194570410683": 5, "01278968196741": 5, "210": [5, 31, 90], "87401169938976": 5, "220": [5, 31, 90], "12820568044987": 5, "230": [5, 31], "63722430960618": 5, "240": [5, 31, 39, 46, 90], "65926621902025": 5, "250": [5, 31, 45, 46], "52742547536184": 5, "260": [5, 31, 90], "12658368170403": 5, "270": [5, 31], "735871196038282": 5, "280": [5, 31, 90], "15756050565185": 5, "290": [5, 31, 90], "070647347170436": 5, "27069736487665": 5, "310": [5, 31, 90], "4032555710632": 5, "320": [5, 11, 31], "751519332118505": 5, "330": [5, 31], "505787072896766": 5, "340": [5, 31, 90], "833572391120526": 5, "350": [5, 31, 90], "540097202879465": 5, "360": [5, 31, 90], "54715464928039": 5, "370": [5, 31], "635978662861795": 5, "380": [5, 31, 90], "85734724064163": 5, "390": [5, 31], "22195044833465": 5, "400": [5, 31, 90], "54526255143114": 5, "410": [5, 31, 90], "2028827111356": 5, "420": [5, 31], "146730918684945": 5, "430": [5, 31], "32427691564021": 5, "440": [5, 31, 90], "51095472212391": 5, "450": [5, 31], "56664149963812": 5, "460": [5, 31, 90], "5571464161218": 5, "470": [5, 31], "7012331965002": 5, "480": [5, 31], "754363123393354": 5, "490": [5, 31], "12920968279601": 5, "nv": [5, 62], "xl": 5, "yl": 5, "xg": [5, 8], "concaten": [5, 6, 15, 23, 39, 43, 53, 61, 63, 68, 81, 86], "wxg": 5, "exp": [5, 47, 53, 68, 73, 84, 89], "iv": [5, 53, 62], "gg": [5, 30], "wt": [5, 75, 84], "reshap": [5, 19, 23, 25, 28, 33, 39, 44, 48, 49, 52, 54, 59, 61, 62, 68, 69, 79, 81], "pcolormesh": 5, "green": [5, 7], "plot_stoch_continuous_ot_pytorch": [5, 9], "159": [5, 54], "doe": [5, 47, 66, 68, 76, 89, 90], "handl": [5, 7, 89, 90], "quadmesh": 5, "http": [5, 44, 47, 51, 65, 68, 69, 83, 86, 88, 89, 90], "org": [5, 44, 51, 65, 68, 69, 83, 86, 88, 89, 90], "tutori": [5, 66, 89], "legend_guid": 5, "html": [5, 47, 66, 68, 88], "custom": 5, "handler": 5, "173": [5, 54], "187": [5, 54], "881": [5, 9], "mix": [6, 7, 42], "word": [6, 89], "suppos": [6, 69, 89], "s_k": 6, "w_k": [6, 89], "belong": [6, 32, 61, 81], "delta_k": 6, "observ": [6, 69, 72], "pot": [6, 7, 12, 18, 32, 33, 38, 42, 45, 46, 61, 63, 67, 68, 70, 86, 90], "nt1": 6, "ns1": 6, "xs1": [6, 21], "xs2": [6, 21, 53], "correspond": [6, 7, 26, 47, 73, 76, 81, 89, 90], "s_1": 6, "s_2": 6, "0x7f78ebb20b50": 6, "h2": [6, 29, 31, 35, 76], "m2": [6, 51, 52], "2e": [6, 44, 49, 62], "rate": [6, 76, 84], "niter": [6, 42], "get_loss": 6, "mv": 6, "squar": [6, 33, 47, 51, 52, 68, 71, 73, 76, 82, 83, 86, 88, 89, 90], "mixtur": 6, "09980706": 6, "90019294": 6, "dot": [6, 10, 11, 21, 23, 29, 31, 32, 35, 41, 47, 60, 61, 68, 86], "c3": [6, 29, 31, 35, 43], "0x7f78e8cce350": 6, "579": [6, 9], "plot_unmix_optim_torch": [6, 9], "refer": [7, 29, 31, 35, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87], "ensur": [7, 66, 77, 89], "remain": 7, "illustr": [7, 10, 11, 12, 13, 14, 15, 16, 28, 29, 30, 31, 34, 35, 39, 40, 41, 42, 44, 47, 48, 49, 50, 53, 54, 56, 57, 59, 60, 62, 66, 90], "within": [7, 65, 68, 76], "framework": [7, 34, 90], "ncourti": [7, 12, 32, 33], "irisa": [7, 12, 28, 30, 32, 33, 50, 61], "mpl": 7, "make_1d_gauss": [7, 10, 11, 13, 44, 48, 49, 52, 54, 59, 60], "gauss": [7, 44, 48, 49, 52, 59, 71], "red": [7, 19, 25, 30, 47], "to_rgb": 7, "blue": [7, 12, 19, 25, 30, 32, 38, 42, 47], "dtype": [7, 10, 11, 13, 28, 44, 48, 49, 52, 54, 56, 57, 59, 60, 68, 69], "gaussian": [7, 8, 10, 23, 24, 25, 28, 44, 48, 49, 52, 54, 59, 60, 67, 68, 71, 72, 86, 89, 90], "mean": [7, 10, 11, 13, 29, 31, 35, 44, 48, 49, 52, 53, 54, 56, 57, 59, 60, 68, 69, 72, 73, 75, 77, 89, 90], "std": [7, 10, 11, 13, 30, 44, 48, 49, 52, 53, 54, 56, 57, 59, 60, 68, 72, 76, 90], "enforc": [7, 89], "x_torch": 7, "a_torch": 7, "b_torch": 7, "800": [7, 31], "figsiz": [7, 11, 12, 13, 15, 16, 18, 19, 20, 22, 23, 25, 26, 28, 29, 31, 33, 35, 39, 42, 44, 45, 48, 49, 51, 54, 57, 59, 60], "onto": [7, 18, 20, 22, 71, 76, 83, 86, 89], "curv": [7, 42], "everi": [7, 34, 70, 76, 88], "lw": [7, 13, 29, 31, 35, 47], "evolut": [7, 34, 53, 69, 76, 88], "fontsiz": [7, 13, 28, 29, 30, 31, 32, 34, 35, 47, 57, 62], "solver_1d": [7, 53, 90], "than": [7, 47, 68, 76, 89, 90], "revers": [7, 68], "throw": [7, 90], "futur": [7, 69, 90], "releas": [7, 10, 60, 61, 69, 88, 89], "mt": [7, 75], "transpos": [7, 38, 42, 68, 90], "ndim": 7, "trigger": [7, 70], "aten": 7, "src": 7, "nativ": 7, "tensorshap": 7, "cpp": 7, "3571": 7, "cw": 7, "contigu": 7, "tw": 7, "bary_torch": 7, "instant": 7, "821": [7, 9], "plot_wass1d_torch": [7, 9], "fit": [8, 23, 25, 26, 33, 69, 71, 77, 89], "g_": 8, "realist": 8, "drawn": [8, 72, 80], "indistinguish": 8, "mu_d": 8, "arjovsky2017": 8, "access": [8, 47, 88], "cannot": [8, 26, 71, 89, 90], "larg": [8, 26, 45, 71, 79, 84, 88, 89, 90], "genevay2018": 8, "studi": 8, "fatras2019": 8, "arjovski": 8, "chintala": 8, "bottou": 8, "adversari": [8, 89], "214": 8, "223": 8, "genevai": [8, 45, 69, 84, 88, 89], "aud": [8, 69, 88], "fatra": [8, 45, 50, 67, 88], "zine": 8, "gribonv": 8, "2020": [8, 13, 38, 42, 69, 70, 79, 88, 89, 90], "june": 8, "asymptot": 8, "23nd": 8, "108": [8, 54, 90], "n_dim": 8, "n_featur": [8, 71, 86], "get_data": 8, "n_sampl": [8, 15, 32, 33, 61, 71], "angl": [8, 23, 53], "cat": 8, "co": [8, 23, 37, 39, 46, 51, 53, 57, 70, 86, 88, 90], "sin": [8, 23, 28, 39, 51, 53, 57, 86], "0x7f78d8171240": 8, "fc3": 8, "rmsprop": 8, "00019": 8, "doc": [8, 66, 68, 90], "size_batch": 8, "stati": 8, "n_visu": 8, "xnvisu": 8, "ab": [8, 30, 32, 52, 68, 83, 86, 89, 90], "xn": 8, "xd": 8, "smapl": 8, "compt": 8, "del": 8, "9009847640991211": 8, "10964284837245941": 8, "04564394801855087": 8, "03516071289777756": 8, "05013977363705635": 8, "058588504791259766": 8, "03730057179927826": 8, "04171676188707352": 8, "03168988972902298": 8, "031197285279631615": 8, "03596879169344902": 8, "03272819146513939": 8, "032379165291786194": 8, "03959248960018158": 8, "029337508603930473": 8, "05796702206134796": 8, "034939464181661606": 8, "022607704624533653": 8, "04347885772585869": 8, "1164197325706482": 8, "75": [8, 54, 90], "125": [8, 10, 11, 43, 54], "175": [8, 54, 90], "199": [8, 54, 79, 90], "xtick": [8, 11, 18, 20, 22, 26, 30, 52, 62, 63], "ytick": [8, 11, 18, 20, 22, 26, 30, 63], "xlim": [8, 33, 47, 52, 53], "ylim": [8, 33, 52, 53], "0x7f78e8c918a0": 8, "plot_wass2_gan_torch": [8, 9], "826": 9, "execut": [9, 17, 27, 36, 46, 55, 58, 64, 89, 90], "auto_examples_backend": 9, "file": [9, 17, 27, 36, 37, 43, 46, 55, 58, 64, 89, 90], "continu": [9, 34, 37, 69, 77, 84, 89], "estim": [9, 21, 27, 30, 31, 32, 37, 45, 66, 67, 69, 71, 72, 75, 76, 77, 78, 84, 86, 88, 90], "02": [9, 18, 24, 25, 27, 31, 32, 36, 39, 45, 46, 48, 54, 55, 58, 61, 64, 79], "mb": [9, 17, 27, 36, 46, 55, 58, 64], "minibatch": [9, 37, 84, 89, 90], "flow": [9, 37, 72, 86, 88, 89, 90], "embed": [9, 31, 32, 33, 37, 76, 88, 89], "sphere": [9, 37, 82, 90], "00": [9, 17, 18, 21, 24, 25, 27, 30, 31, 32, 36, 46, 54, 55, 58, 61, 64, 81], "04": [9, 18, 24, 25, 30, 31, 32, 36, 45, 46, 48, 54, 55, 64], "unmix": [9, 34, 37, 69, 76, 86, 88, 89, 90], "unic": [10, 11, 18, 19, 20, 21, 23, 24, 25, 26, 38, 39, 42, 48, 49, 50, 51, 52, 77], "plt": [10, 12, 13, 15, 16, 19, 23, 25, 28, 33], "necessari": [10, 11, 60, 61, 65, 66, 77, 88, 90], "mpl_toolkit": [10, 11, 32, 60, 61], "mplot3d": [10, 11, 32, 60, 61], "axes3d": [10, 11, 32, 60, 61], "noqa": [10, 11, 32, 60, 61], "polycollect": [10, 11, 60], "creat": [10, 11, 13, 28, 60, 65, 66, 67, 68, 80, 88, 90], "vstack": [10, 11, 13, 30, 60], "n_distribut": [10, 11, 13, 60], "dist0": [10, 11, 13, 60], "l2bari": [10, 11, 60], "bary_l2": [10, 11, 60], "bary_wass": [10, 11, 60], "ax1": [10, 30, 32, 33, 38, 42, 61], "ax2": [10, 30, 32, 33, 38, 42, 61], "tight_layout": [10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 34, 35, 38, 39, 42, 47, 51, 52, 60], "num": [10, 13, 68], "black": [10, 29, 31, 34, 35, 38, 42, 80], "n_alpha": 10, "alpha_list": 10, "b_l2": [10, 60], "b_wass": [10, 60], "cm": [10, 12, 28, 60], "get_cmap": [10, 60], "viridi": [10, 28, 60], "vert": [10, 60], "enumer": [10, 13, 28, 29, 31, 34, 35, 52, 53, 56, 57, 60], "zip": [10, 13, 16, 34, 37, 60, 88], "poli": [10, 60], "facecolor": [10, 43, 60], "set_alpha": [10, 60], "add_collection3d": [10, 60], "zdir": [10, 60], "set_xlabel": [10, 57, 60], "set_xlim3d": [10, 60], "set_ylabel": [10, 13, 47, 57, 60], "set_ylim3d": [10, 60], "set_zlabel": [10, 57, 60], "set_zlim3d": [10, 60], "plot_barycenter_1d": [10, 17], "103": [10, 54], "matplotlibdeprecationwarn": [10, 60, 61], "wa": [10, 47, 60, 89, 90], "remov": [10, 60, 61, 65, 68, 77, 81, 86, 90], "minor": [10, 60, 61, 90], "later": [10, 29, 31, 35, 60, 61, 71], "name": [10, 21, 60, 68, 76, 86, 88, 89], "obj": [10, 60, 83], "707": [10, 17], "standard": [11, 68, 72, 76, 86, 90], "scienc": [11, 19, 25, 54, 71, 78, 88, 89], "343": [11, 90], "cvx": 11, "bary_wass2": 11, "interior": [11, 77, 89], "0033752918243408203": 11, "primal": [11, 77, 84], "feasibl": [11, 31, 32, 77], "gap": 11, "path": [11, 12, 13, 19, 23, 25, 33, 37, 64, 66, 72, 81, 88, 90], "1700": 11, "336700337": 11, "006776453137633": 11, "006776453137634": 11, "9932238647293": 11, "6700527543": 11, "004018712867874": 11, "4301142633": 11, "26594150092": 11, "001172775061627": 11, "7599932455028": 11, "3378536968897": 11, "0004375137005385": 11, "6422331807989": 11, "1468420566358": 11, "000232669046734": 11, "0002326690467341": 11, "5016999460893": 11, "09381703231432": 11, "430121674303e": 11, "7035962305812": 11, "0577787025717": 11, "321227838882e": 11, "321227838879e": 11, "3087841864401": 11, "05266249477204": 11, "990900379202e": 11, "990900379201e": 11, "6520472013245": 11, "0452605440552": 11, "305442046817e": 11, "30544204679e": 11, "305442046812e": 11, "7073953304073": 11, "305442046809e": 11, "04237597591383": 11, "290148391578e": 11, "290148391587e": 11, "290148391592e": 11, "6941812711476": 11, "290148391602e": 11, "041522849321": 11, "182864875418e": 11, "182864875486e": 11, "182864875459e": 11, "508455204664": 11, "182864875475e": 11, "04129461872827": 11, "626786380237e": 11, "626786380498e": 11, "626786380591e": 11, "7101651574148": 11, "626786380499e": 11, "04113032448919": 11, "53975423377e": 11, "539754239097e": 11, "539754238957e": 11, "627932209399": 11, "539754244458e": 11, "04108867636364": 11, "193221588102e": 11, "08": [11, 17, 45, 48, 54, 68, 71, 80], "193221525716e": 11, "193221527893e": 11, "6843453372866": 11, "193221744194e": 11, "04106859618425": 11, "888204557375e": 11, "888204466916e": 11, "888204464386e": 11, "6673444754752": 11, "888205403e": 11, "04106214175154": 11, "676851456731e": 11, "676853754852e": 11, "676853775137e": 11, "7281705629265": 11, "676886118764e": 11, "04105958648699": 11, "50115020171e": 11, "501137125386e": 11, "501137136515e": 11, "4140221641718": 11, "501151490466e": 11, "04105916265115": 11, "110591805675e": 11, "110570750049e": 11, "110570733855e": 11, "699900032435": 11, "110619438659e": 11, "04105870073191": 11, "770990264961e": 11, "776274527894e": 11, "776273877079e": 11, "4996170321381": 11, "772744208187e": 11, "04105859774172": 11, "536197932746e": 11, "538885612866e": 11, "538885001653e": 11, "7515062666584": 11, "537834631178e": 11, "04105851682752": 11, "743041081423e": 11, "740002462354e": 11, "740001907827e": 11, "5949277749653": 11, "73465642858e": 11, "04105850033226": 11, "794231989236e": 11, "747423074042e": 11, "747429829833e": 11, "7557701998162": 11, "741755335329e": 11, "04105849090303": 11, "termin": [11, 39], "successfulli": [11, 42], "current": [11, 18, 66, 68, 70, 71, 76, 78, 81, 83, 90], "041058": 11, "584986925125122": 11, "004668712615966797": 11, "006776466288967": 11, "9932238515788": 11, "006776466288968": 11, "6649255808": 11, "004036918865497": 11, "4272973099314": 11, "34716170111": 11, "001219232687069": 11, "7496986855994": 11, "3243835647407": 11, "0003837422984427": 11, "6926882608286": 11, "1361719397492": 11, "0001070128410182": 11, "7643889137854": 11, "07581952832515": 11, "0001001275033711": 11, "000100127503371": 11, "07058704837782": 11, "07347394936348": 11, "550897507833e": 11, "550897507832e": 11, "5761172484836": 11, "05555077655044": 11, "557124125502e": 11, "557124125495e": 11, "8535925441154": 11, "557124125503e": 11, "0443981466022": 11, "611995628362e": 11, "611995628359e": 11, "611995628375e": 11, "6002277331592": 11, "611995628377e": 11, "04283007762151": 11, "590393750322e": 11, "59039375014e": 11, "590393750355e": 11, "822148653339": 11, "590393750361e": 11, "04192322976247": 11, "299929287269e": 11, "299929283142e": 11, "299929287457e": 11, "9017467938803": 11, "299929287509e": 11, "04170825633295": 11, "117560215317e": 11, "117560474123e": 11, "117560204434e": 11, "9970399692198": 11, "117560202277e": 11, "04168179329766": 11, "559775055372e": 11, "14": [11, 18, 25, 34, 39, 41, 47, 54, 61, 68, 71, 76, 88, 89], "561428379782e": 11, "559760203488e": 11, "9999499685222": 11, "559752674386e": 11, "04168169240444": 11, "041682": 11, "0836966037750244": 11, "0009286403656005859": 11, "006774675520687": 11, "9932256422636": 11, "6956034733": 11, "002048208707529": 11, "7343095368176": 11, "213991622021": 11, "0002697365474824": 11, "8839403501148": 11, "5059383903968": 11, "832109993819e": 11, "832109993818e": 11, "7601171076044": 11, "2339657807265": 11, "437682932226e": 11, "6663448297416": 11, "1471256246326": 11, "134983216297e": 11, "134983216299e": 11, "5553643816468": 11, "1181584941169": 11, "342312725774e": 11, "342312725781e": 11, "723813357168": 11, "1006387519744": 11, "078561231268e": 11, "078561231235e": 11, "078561231266e": 11, "8033142552548": 11, "09474734646262": 11, "966870958108e": 11, "966870953918e": 11, "966870953989e": 11, "7525479178458": 11, "966870954248e": 11, "09354342735761": 11, "199895240123e": 11, "199895384126e": 11, "199895235332e": 11, "9984019849396": 11, "199895236104e": 11, "0931036778586": 11, "1017793609e": 11, "101768735229e": 11, "101780822184e": 11, "9999499563876": 11, "101780420221e": 11, "0931027446646": 11, "093103": 11, "9730279445648193": 11, "nbm": 11, "len": [11, 13, 15, 28, 29, 31, 33, 34, 35, 47, 83, 86], "nbm2": 11, "097": [11, 17], "plot_barycenter_lp_vs_entrop": [11, 17], "design": [12, 29, 32, 33, 35, 38, 45, 54, 61, 63, 81, 89, 90], "how": [12, 24, 29, 32, 33, 34, 35, 38, 42, 45, 47, 52, 53, 61, 63, 69, 90], "pathlib": [12, 13, 19, 23, 25, 33], "four": [12, 33], "construct": [12, 33, 65, 68, 71, 81], "this_fil": [12, 13, 19, 23, 25, 33], "realpath": [12, 13, 19, 23, 25, 33], "__file__": [12, 13, 19, 23, 25, 33], "data_path": [12, 13, 19, 23, 25, 33], "join": [12, 13, 19, 23, 25, 33, 68, 88], "parent": [12, 13, 19, 23, 25, 33], "f1": [12, 13], "f2": [12, 13, 29, 31, 35, 76], "f3": [12, 29, 31, 35], "heart": [12, 13, 16], "f4": 12, "duck": [12, 13, 14], "nb_imag": 12, "corner": [12, 89], "bilinear": [12, 47], "v1": [12, 29, 31, 35], "v2": [12, 29, 31, 35], "v3": 12, "v4": 12, "suptitl": [12, 28], "004": 12, "ty": 12, "tmp1": 12, "tmp2": 12, "elif": [12, 29, 31, 34, 35], "call": [12, 45, 61, 63, 69, 71, 76, 77, 78, 86, 89, 90], "convolutional_barycenter2d": [12, 13], "278": [12, 17, 90], "plot_convolutional_barycent": [12, 17], "janati": [13, 59, 60, 67, 69, 88, 89], "gramfort": [13, 67, 69, 88, 89], "37th": [13, 69, 88, 89], "119": [13, 54, 69, 88, 89], "4692": [13, 69, 88, 89], "4701": [13, 69, 88, 89], "hicham": [13, 59, 60, 67, 88], "janati100": 13, "gmail": [13, 18, 19, 20, 24, 25, 26, 29, 31, 32, 33, 35, 44, 45], "com": [13, 18, 19, 20, 24, 25, 26, 29, 31, 32, 33, 35, 44, 45, 66, 68, 83, 86, 88, 90], "barycenter_debias": 13, "convolutional_barycenter2d_debias": 13, "bar": [13, 81], "bars_debias": 13, "indianr": 13, "gold": [13, 68], "sharei": [13, 30], "bar_debias": 13, "varepsilon": [13, 70], "3f": [13, 21, 62], "asarrai": 13, "displai": [13, 20, 26, 47, 69], "img": [13, 19, 23, 25, 33], "grei": [13, 34], "bars_sinkhorn": 13, "7e": 13, "all_bar": 13, "jj": 13, "ax_row": 13, "ii": [13, 22], "set_xtick": [13, 16, 57], "set_ytick": [13, 16, 57], "spine": 13, "top": [13, 66, 76, 80], "set_vis": 13, "762": [13, 17, 69, 77, 88], "plot_debiased_barycent": [13, 17], "vivien": [14, 83, 88], "iip": 14, "ist": 14, "kyoto": 14, "ac": 14, "jp": 14, "eduardo": [14, 15, 67], "fernand": [14, 15, 67], "montesuma": [14, 15, 67], "universit": [14, 15], "saclai": [14, 15], "measures_loc": [14, 15, 69, 77], "measures_weight": [14, 15, 69, 77], "x_init": [14, 15, 69, 77], "free_support_barycent": [14, 69, 89, 90], "free_support_sinkhorn_barycent": [14, 15], "740": [14, 17, 31], "plot_free_support_barycent": [14, 17], "understood": 15, "cloud": [15, 33], "linalg": [15, 28, 31, 32, 61, 68], "x4": 15, "multivariate_norm": 15, "a3": 15, "a4": 15, "steelblu": 15, "float32": 15, "xb_init": 15, "subplot2grid": [15, 33], "536": [15, 18, 20, 21, 31, 32, 47, 50, 54], "did": [15, 18, 20, 21, 31, 32, 47, 50, 54, 76, 90], "increas": [15, 18, 20, 21, 31, 32, 47, 50, 54, 79], "294": [15, 17, 90], "plot_free_support_sinkhorn_barycent": [15, 17], "saint": [16, 77, 88], "dizier": [16, 77, 88], "live": [16, 34, 66, 77, 88], "subspac": [16, 73, 77, 88, 89], "2105": [16, 77, 88], "09755": [16, 77, 88], "eloi": [16, 67], "tangui": [16, 32, 67, 76], "sub_sample_factor": 16, "i3": 16, "uu": 16, "vv": 16, "x_list": [16, 77], "im": [16, 23, 25, 47], "a_list": [16, 77], "p1": [16, 21, 29, 31, 35, 43], "p2": [16, 21, 29, 31, 35, 43], "p3": [16, 29, 31, 35], "p_list": [16, 77], "n_samples_bari": [16, 77], "send": [16, 66], "visual": [16, 20, 26, 38, 48, 49], "x_visu": 16, "xi": 16, "view_init": [16, 57], "azim": 16, "set_ztick": [16, 57], "generalized_free_support_barycent": 16, "elev": 16, "_init": 16, "init_func": 16, "frame": 16, "136": [16, 54], "blit": 16, "505": [16, 17], "plot_generalized_free_support_barycent": [16, 17], "383": 17, "auto_examples_barycent": 17, "demo": [17, 37, 64, 69, 72, 77, 86, 89], "convolut": [17, 37, 67, 69, 88, 90], "debias": [17, 37, 67, 69, 72, 86, 88, 89, 90], "free": [17, 37, 65, 66, 67, 69, 77, 79, 88, 90], "introduc": [18, 19, 20, 21, 22, 24, 26, 69, 89, 90], "otda": [18, 21, 22, 27, 37, 71, 72, 86, 90], "stanisla": [18, 19, 20, 24, 25, 26, 67, 88], "chambon": [18, 19, 20, 24, 25, 26, 67, 88], "stan": [18, 19, 20, 24, 25, 26], "3gauss": [18, 20, 22, 26], "3gauss2": [18, 20, 22, 26], "ot_emd": [18, 19, 20, 22, 25, 47, 89], "da": [18, 19, 20, 21, 22, 23, 24, 25, 26, 67, 89, 90], "emdtransport": [18, 19, 20, 22, 25, 89, 90], "ot_sinkhorn": [18, 19, 20, 21, 22, 25, 47], "sinkhorntransport": [18, 19, 20, 21, 22, 25, 26, 89, 90], "reg_": [18, 19, 20, 21, 22, 25, 26, 71], "ot_lpl1": [18, 20], "sinkhornlpl1transport": [18, 20, 89, 90], "reg_cl": [18, 20, 71], "1e0": [18, 20, 24, 25, 39], "l1l2": [18, 71], "ot_l1l2": 18, "sinkhornl1l2transport": [18, 89], "2e0": 18, "transp_xs_emd": [18, 19, 20, 22, 25], "transp_xs_sinkhorn": [18, 19, 20, 22, 25], "transp_xs_lpl1": [18, 20], "transp_xs_l1l2": 18, "763061e": 18, "000000e": [18, 24, 25, 30, 31, 32, 54], "081861e": 18, "689583e": 18, "681200e": 18, "862280e": 18, "179100e": 18, "195813e": 18, "821987e": 18, "211501e": 18, "029326e": 18, "808932e": 18, "216608e": 18, "03": [18, 24, 30, 31, 32, 36, 39, 43, 44, 45, 48, 54, 55, 57, 79], "305436e": 18, "792762e": 18, "019666e": 18, "617012e": 18, "785968e": 18, "804295e": 18, "794348e": 18, "778259e": 18, "335304e": 18, "709292e": 18, "772608e": 18, "187777e": 18, "650678e": 18, "768734e": 18, "190456e": 18, "874332e": 18, "768700e": 18, "876119e": 18, "318292e": 18, "767482e": 18, "894485e": 18, "218588e": 18, "765491e": 18, "127725e": 18, "990989e": 18, "762434e": 18, "734384e": 18, "056738e": 18, "759833e": 18, "478250e": 18, "601472e": 18, "758374e": 18, "294698e": 18, "458518e": 18, "757601e": 18, "396351e": 18, "727032e": 18, "756624e": 18, "562652e": 18, "771489e": 18, "754377e": 18, "281229e": 18, "247758e": 18, "753747e": 18, "587988e": 18, "292424e": 18, "753162e": 18, "336538e": 18, "849492e": 18, "param_img": [18, 22], "coupling_": [18, 20, 21, 22, 26, 71], "nemdtransport": [18, 20, 22, 26], "nsinkhorntransport": [18, 20, 22, 26], "nsinkhornlpl1transport": [18, 20], "nsinkhornl1l2transport": 18, "transp": [18, 20, 22, 26, 63], "788": [18, 27], "plot_otda_class": [18, 27], "present": [19, 24, 26, 62, 66, 76, 90], "transfer": [19, 89], "ferradan": [19, 25, 54, 71, 78, 88, 89], "papadaki": [19, 25, 54, 71, 78, 88, 89], "peyr": [19, 25], "aujol": [19, 25, 54, 71, 78, 88, 89], "2014": [19, 25, 54, 69, 71, 77, 78, 88, 89], "1853": [19, 25, 54, 71, 78, 88, 89], "1882": [19, 25, 54, 71, 78, 88, 89], "im2mat": [19, 23, 25, 33], "pixel": [19, 23, 33], "per": [19, 23, 25, 33, 49, 77, 83], "mat2im": [19, 23, 25], "back": [19, 23, 25, 66], "minmax": [19, 23, 25], "clip": [19, 23, 25, 68], "ocean_dai": [19, 23, 25], "jpg": [19, 23, 25], "256": [19, 23, 25], "ocean_sunset": [19, 23, 25], "idx1": [19, 25], "idx2": [19, 25], "ylabel": [19, 25, 30, 34, 47, 56, 57, 63], "predict": [19, 76], "out": [19, 24, 71, 82], "transp_xt_emd": 19, "inverse_transform": [19, 23, 71, 89], "transp_xt_sinkhorn": 19, "i1t": [19, 23], "i2t": [19, 23], "907": [19, 27], "plot_otda_color_imag": [19, 27], "explicit": [20, 26, 65, 71, 86], "some": [20, 26, 61, 66, 67, 71, 77, 79, 86, 88, 89, 90], "quantiti": [20, 26, 34], "greater": [20, 26, 90], "coeffici": [20, 26, 34, 69, 70, 76, 77, 78, 81], "give": [20, 26, 47, 63, 66, 68, 76, 81, 90], "understand": [20, 26], "what": [20, 26, 65, 66, 89], "n_samples_sourc": [20, 26], "n_samples_target": [20, 26], "main": [20, 66, 77, 89, 90], "606": [20, 27], "plot_otda_d2": [20, 27], "ievgen": [21, 22, 67, 69, 71, 88], "redko": [21, 22, 38, 42, 67, 69, 70, 71, 88], "st": [21, 22, 73], "etienn": [21, 22], "1985": 21, "dec1": 21, "dec2": 21, "pt": 21, "dect": 21, "ys1": 21, "2gauss_prop": 21, "bia": [21, 24, 25, 71, 75], "ys2": 21, "all_xr": 21, "all_yr": 21, "plot_ax": 21, "dec": 21, "set1": 21, "2f": [21, 47], "equal": [21, 43, 51, 68, 81], "85": [21, 54, 90], "046431138906241": 21, "129455496299416": 21, "print_g": 21, "independ": [21, 89], "jcpottransport": 21, "ws1": 21, "proportions_": [21, 71], "log_": [21, 71], "d2": [21, 38, 42], "ws2": 21, "prop": [21, 79], "err": [21, 31, 32, 48, 61], "069551e": 21, "h_re": 21, "1f": 21, "705": [21, 27], "plot_otda_jcpot": [21, 27], "ot_emd_laplac": 22, "emdlaplacetransport": 22, "reg_lap": [22, 71], "reg_src": [22, 71], "transp_xs_emd_laplac": 22, "503": [22, 38, 46], "runtimewarn": [22, 31, 32, 53, 60], "divid": [22, 31, 32, 47, 53, 60], "encount": [22, 31, 32, 53, 60], "ktransposeu": 22, "511": 22, "nemdlaplacetransport": 22, "203": [22, 27, 90], "plot_otda_laplacian": [22, 27], "anglet": 23, "line2d": 23, "0x7f78e8bacbe0": 23, "ae": 23, "empirical_bures_wasserstein_map": 23, "xst": 23, "lineartransport": [23, 89], "invers": [23, 29, 31, 35, 62, 68, 71, 77, 81], "017": [23, 27], "plot_otda_linear_map": [23, 27], "mappingtransport": [24, 25, 89], "perrot": [24, 25, 67, 71, 88, 89], "habrard": [24, 25, 71, 88, 89], "xs_new": 24, "ot_mapping_linear": [24, 25], "transp_xs_linear": 24, "transp_xs_linear_new": 24, "ot_mapping_gaussian": [24, 25], "transp_xs_gaussian": 24, "transp_xs_gaussian_new": 24, "delta": [24, 25, 42, 81], "190105e": 24, "170411e": 24, "700201e": 24, "169845e": 24, "356805e": 24, "169664e": 24, "344581e": 24, "169558e": 24, "549048e": 24, "169490e": 24, "619901e": 24, "169453e": 24, "982881e": 24, "208325e": 24, "153391e": 24, "305359e": 24, "150638e": 24, "627997e": 24, "149220e": 24, "416816e": 24, "148278e": 24, "270431e": 24, "147579e": 24, "685273e": 24, "147070e": 24, "226112e": 24, "146654e": 24, "002934e": 24, "146340e": 24, "574136e": 24, "146055e": 24, "890732e": 24, "145822e": 24, "605142e": 24, "bari": [24, 28], "238": [24, 27, 90], "plot_otda_map": [24, 27], "image_emd": 25, "image_sinkhorn": 25, "x1tl": 25, "image_mapping_linear": 25, "x1tn": 25, "image_mapping_gaussian": 25, "797245e": 25, "758014e": 25, "182822e": 25, "757026e": 25, "620752e": 25, "756521e": 25, "875691e": 25, "756218e": 25, "725224e": 25, "756015e": 25, "153553e": 25, "755868e": 25, "348118e": 25, "755759e": 25, "234582e": 25, "755673e": 25, "893582e": 25, "755604e": 25, "942771e": 25, "755547e": 25, "206000e": 25, "755500e": 25, "695056e": 25, "755460e": 25, "307154e": 25, "755426e": 25, "944208e": 25, "755395e": 25, "715960e": 25, "755369e": 25, "515613e": 25, "755345e": 25, "367864e": 25, "755324e": 25, "197885e": 25, "755305e": 25, "071067e": 25, "755303e": 25, "898122e": 25, "842001e": 25, "780145e": 25, "358084e": 25, "778490e": 25, "296544e": 25, "777841e": 25, "648247e": 25, "777495e": 25, "948923e": 25, "777284e": 25, "184075e": 25, "777135e": 25, "396988e": 25, "777027e": 25, "059322e": 25, "776945e": 25, "619816e": 25, "776880e": 25, "672789e": 25, "776827e": 25, "971430e": 25, "711": [25, 27], "plot_otda_mapping_colors_imag": [25, 27], "ot_sinkhorn_un": 26, "transp_xs_sinkhorn_un": 26, "ot_sinkhorn_semi": 26, "transp_xs_sinkhorn_semi": 26, "modifi": 26, "involv": [26, 66], "infinit": [26, 71], "daili": 26, "element": [26, 28, 47, 68, 69, 71, 76, 77, 81, 86], "fill": [26, 59, 68, 71], "recal": [26, 81], "cost_": [26, 71], "exhibit": [26, 71], "nunsupervis": 26, "nsemi": 26, "622": [26, 27], "plot_otda_semi_supervis": [26, 27], "797": 27, "auto_examples_domain": 27, "multi": [27, 37, 68, 69, 71, 72, 86, 88, 89, 90], "shift": [27, 37, 69, 71, 72, 86, 88, 89, 90], "laplacian": [27, 37, 67, 71, 72, 86, 88, 89], "unsupervis": [27, 37, 71, 72, 86, 89], "semi": [27, 36, 37, 67, 71, 72, 76, 78, 81, 83, 84, 86, 88, 89, 90], "supervis": [27, 37, 69, 71, 72, 86, 88, 89, 90], "networkx": [28, 29, 31, 34, 35], "nx": [28, 68, 76, 78, 86, 90], "csgraph": 28, "shortest_path": 28, "mcol": 28, "fgw_barycent": [28, 76, 89], "find_thresh": 28, "inf": [28, 71], "sup": 28, "trick": [28, 79, 89], "adequ": 28, "sai": 28, "connect": [28, 29, 31, 34, 35], "linesearch": [28, 76, 78, 90], "reconstruct": [28, 34, 76, 83, 90], "come": [28, 66, 89, 90], "n_node": [28, 34], "begin": [28, 81], "thresh": 28, "cprime": 28, "sp_to_adjac": 28, "sc": 28, "argmin": [28, 29, 31, 35, 68], "threshinf": 28, "threshsup": 28, "minimum": [28, 68, 71, 76, 78, 89, 90], "new": [28, 68, 86, 89], "zeros_lik": 28, "fill_diagon": [28, 34], "build_noisy_circular_graph": 28, "with_nois": 28, "structure_nois": 28, "noisi": [28, 42], "add_nodes_from": 28, "add_nod": [28, 29, 31, 35], "attr_nam": 28, "add_edg": [28, 29, 31, 35], "randomint": 28, "graph_color": 28, "nx_graph": 28, "cnorm": 28, "cpick": 28, "scalarmapp": 28, "set_arrai": 28, "val_map": 28, "get_node_attribut": 28, "to_rgba": 28, "ad": [28, 29, 31, 42, 66, 68, 71, 75, 77, 79, 81, 86, 89, 90], "po": [28, 29, 31, 33, 35, 71], "kamada_kawai_layout": 28, "draw": 28, "node_color": [28, 29, 31, 35], "with_label": 28, "node_s": [28, 29, 31, 35], "indic": [28, 66, 68, 81], "adjacency_matrix": 28, "sizebari": 28, "95": [28, 29, 31, 33, 35, 54, 56, 57], "from_numpy_arrai": 28, "000": [28, 36], "plot_barycenter_fgw": [28, 36], "sr": [29, 35, 78], "g1": [29, 31, 35, 51], "g2": [29, 31, 35, 51], "reweigh": [29, 35], "srgw": [29, 35, 76], "These": [29, 35, 66], "endow": [29, 31, 35], "srfgw": [29, 35, 76], "48": [29, 35, 47, 54, 76, 78, 88, 90], "c\u00e9dric": [29, 31, 32, 34, 35, 67, 76, 78, 88], "iclr": [29, 35, 76, 78, 83, 88], "cedvincentcuaz": [29, 31, 32, 35], "entropic_semirelaxed_gromov_wasserstein": [29, 76], "entropic_semirelaxed_fused_gromov_wasserstein": [29, 76], "commun": [29, 31, 34, 35, 65, 89], "stochastic_block_model": [29, 31, 34, 35], "n3": [29, 31, 35], "g3": [29, 31, 35], "to_numpy_arrai": [29, 31, 34, 35], "h3": [29, 31, 35], "edg": [29, 31, 35], "weight_intra_g2": [29, 31, 35], "weight_inter_g2": [29, 31, 35], "weight_intra_g3": [29, 31, 35], "weight_inter_g3": [29, 31, 35], "weightedg2": [29, 31, 35], "part_g2": [29, 31, 35], "weightedg3": [29, 31, 35], "part_g3": [29, 31, 35], "srgw_e": 29, "ot_23": [29, 35], "log_23": [29, 35], "srgw_23": [29, 35], "srgw_dist": [29, 35], "ot_32": [29, 35], "log_32": [29, 35], "srgw_32": [29, 35], "255": [29, 35], "06000000014822844": 29, "1577777782120945": 29, "adjust": [29, 31], "intens": [29, 31, 34], "proportionali": [29, 31], "sent": [29, 31, 89], "draw_graph": [29, 31, 35], "nodes_color_part": [29, 31, 35], "gweight": [29, 31, 35], "edge_color": [29, 31, 35], "shiftx": [29, 31, 35], "spring_layout": [29, 31, 35], "alpha_edg": [29, 31, 35], "width_edg": [29, 31, 35], "draw_networkx_edg": [29, 31, 35], "width": [29, 31, 35, 69], "visibl": [29, 31, 35, 90], "activ": [29, 31, 35, 68, 69, 81], "edgelist_activ": [29, 31, 35], "edgelist_deactiv": [29, 31, 35], "edgelist": [29, 31, 35], "draw_networkx_nod": [29, 31, 35], "nodelist": [29, 31, 35], "scaled_gweight": [29, 31, 35], "nodes_s": [29, 31, 35], "draw_transp_colored_srgw": [29, 35], "part_g1": [29, 31, 35], "pos1": [29, 31, 35], "pos2": [29, 31, 35], "switchx": [29, 31, 35], "seed_g1": [29, 31, 35], "seed_g2": [29, 31, 35], "starting_color": [29, 31, 35], "partit": [29, 31, 35], "part1": [29, 31, 35], "unique_color": [29, 31, 35], "uniqu": [29, 31, 35, 68, 77, 89], "nodes_color_part1": [29, 31, 35], "nodes_color_part2": [29, 31, 35], "assign": [29, 31, 34, 35, 69, 70, 76], "k1": [29, 31, 35], "max_tk1": [29, 31], "k2": [29, 31, 35], "seed_g3": [29, 31, 35], "121": [29, 32, 35, 47, 54, 61, 90], "h_2": [29, 35, 76], "c_3": [29, 35], "hbar2": [29, 35], "122": [29, 32, 35, 47, 54, 61, 90], "hbar3": [29, 35], "h_3": [29, 35], "intra": [29, 31, 34, 35, 79], "pairwis": [29, 31, 35, 71, 76], "fgw_alpha": [29, 35], "fgw_dist": [29, 31, 35, 76], "srfgw_e": 29, "srfgw_23": [29, 35], "srfgw_dist": [29, 35], "srfgw_32": [29, 35], "3787614673384413": 29, "03505939173475108": 29, "2391152216506156": 29, "f_2": [29, 35, 76], "f_3": [29, 35], "732": [29, 36], "plot_entropic_semirelaxed_fgw": [29, 36], "sig": 30, "sig2": 30, "phi": [30, 81], "phi2": 30, "a_i": [30, 69, 77, 89], "y_j": [30, 89], "b_j": [30, 69, 77, 89], "w1": [30, 73], "w2": [30, 53, 73], "got": 30, "l_x": 30, "l_y": 30, "gridspec": 30, "set_aspect": 30, "ax3": [30, 33, 61], "sharex": 30, "gwg": 30, "logw": 30, "reload_ext": 30, "wgw": 30, "734412e": 30, "508254e": 30, "875326e": 30, "226158e": 30, "189327e": 30, "456740e": 30, "189279e": 30, "622743e": 30, "552714e": 30, "001695394515991211": 30, "683978e": 30, "860061e": 30, "134468e": 30, "239175e": 30, "182948e": 30, "682787e": 30, "677113e": 30, "visu": 30, "728": [30, 36, 53], "plot_fgw": [30, 36], "attribut": [31, 68, 71, 76, 90], "further": [31, 47, 65, 66], "xu": [31, 32, 76, 88], "luo": [31, 32, 76, 88], "zha": [31, 32, 76, 88], "duke": [31, 32, 76, 88], "entropic_fused_gromov_wasserstein": [31, 76, 90], "add": [31, 34, 61, 66, 77, 79, 86, 90], "fgw0": 31, "log0": [31, 32, 61], "proxim": [31, 32, 76, 90], "oper": [31, 32, 66, 71, 73, 75, 89], "ppa": [31, 32, 76, 90], "fgwe": 31, "loge": [31, 32], "pgd": [31, 32, 76], "sparsiti": [31, 32, 34, 49, 76, 83, 88, 89, 90], "level": [31, 32, 65, 69, 71, 72, 86, 89], "fgw0_sparsiti": 31, "fgw_sparsiti": 31, "fgwe_spars": 31, "tend": [31, 32, 47], "produc": [31, 32], "err0": [31, 32], "271184e": 31, "211305e": 31, "640431e": 31, "059879e": 31, "024660e": 31, "637523e": 31, "866445e": 31, "936346e": 31, "243555e": 31, "831410e": 31, "891614e": 31, "149450e": 31, "473216e": 31, "854134e": 31, "724554e": 31, "747973e": 31, "850574e": 31, "244899e": 31, "559817e": 31, "841819e": 31, "279017e": 31, "755571e": 31, "819396e": 31, "870728e": 31, "242264e": 31, "784264e": 31, "283767e": 31, "513222e": 31, "772225e": 31, "191339e": 31, "203845e": 31, "764565e": [31, 54], "034974e": 31, "660790e": 31, "761179e": 31, "000610e": 31, "385291e": 31, "536990e": 31, "472502e": 31, "129779e": 31, "936118e": 31, "334121e": 31, "852583e": 31, "134797e": 31, "177453e": 31, "236970e": 31, "465712e": 31, "858590e": 31, "312306e": 31, "789776e": 31, "493878e": 31, "029873e": 31, "095678e": 31, "177744e": 31, "257392e": 31, "242762e": 31, "125684e": 31, "770321e": 31, "368455e": 31, "094853e": 31, "159374e": 31, "564338e": 31, "974174e": 31, "297098e": 31, "639787e": 31, "106686e": 31, "716049e": 31, "433353e": 31, "227167e": 31, "080617e": 31, "980812e": 31, "912468e": 31, "858901e": 31, "805235e": 31, "740559e": 31, "658655e": 31, "557834e": 31, "440242e": 31, "310793e": 31, "175881e": 31, "1066": [31, 32], "042086e": 31, "151311e": 31, "992882e": 31, "972309e": 31, "101506e": 31, "379844e": 31, "797194e": 31, "337741e": 31, "510": 31, "984020e": 31, "520": 31, "720212e": 31, "530": 31, "534028e": 31, "540": 31, "417109e": 31, "550": 31, "364311e": 31, "560": 31, "372351e": 31, "570": 31, "438312e": 31, "580": 31, "558368e": 31, "590": 31, "726958e": 31, "600": 31, "936418e": 31, "610": 31, "176966e": 31, "620": 31, "436877e": 31, "630": 31, "702796e": 31, "640": 31, "960175e": 31, "650": 31, "193888e": 31, "660": 31, "389046e": 31, "670": 31, "531979e": 31, "680": 31, "611295e": 31, "690": 31, "618871e": 31, "700": 31, "550627e": 31, "710": 31, "406954e": 31, "720": 31, "192695e": 31, "730": [31, 79, 88, 89], "916691e": 31, "590932e": 31, "750": 31, "229430e": 31, "760": 31, "846976e": 31, "770": 31, "457933e": 31, "780": 31, "075230e": 31, "790": 31, "709643e": 31, "369414e": 31, "810": 31, "060184e": 31, "820": 31, "785186e": 31, "830": 31, "545590e": 31, "840": 31, "340916e": 31, "850": 31, "169442e": 31, "860": 31, "028566e": 31, "870": 31, "150926e": 31, "880": 31, "254840e": 31, "890": 31, "560795e": 31, "900": 31, "033105e": 31, "910": [31, 60], "638947e": 31, "920": 31, "349865e": 31, "930": 31, "142583e": 31, "940": 31, "999120e": 31, "950": 31, "906371e": 31, "960": [31, 34, 36], "855388e": 31, "970": 31, "840590e": 31, "980": 31, "859006e": 31, "990": 31, "909627e": 31, "981055e": 31, "110756e": 31, "139916e": 31, "158952e": 31, "159648e": 31, "159715e": 31, "159728e": 31, "159732e": 31, "159733e": 31, "37611793139330985": 31, "3671471715862439": 31, "21736592892258028": 31, "proportionn": 31, "draw_transp_colored_gw": 31, "131": [31, 32, 54, 61], "algo": [31, 32, 47, 69], "p0": [31, 39, 73], "q0": 31, "132": [31, 32, 54, 61, 90], "133": [31, 32, 54, 61], "pe": [31, 90], "qe": 31, "839": [31, 36], "plot_fgw_solv": [31, 36], "compar": [32, 47, 66, 89], "Then": [32, 34, 53, 89], "kerdoncuff": [32, 67, 76, 88, 89], "emonet": [32, 76, 88, 89], "marc": [32, 76, 88, 89], "mjl": [32, 88, 89], "erwan": [32, 33, 67], "vautier": [32, 33, 67], "lapost": 32, "net": 32, "sp": [32, 33, 61, 79], "demonstr": [32, 61, 66, 90], "purpos": [32, 61, 89], "mu_": [32, 40, 50, 53, 56, 61, 62, 63, 71, 75, 89], "cov_": [32, 40, 50, 56, 61, 62, 63], "mu_t": [32, 40, 50, 56, 61, 62, 63, 71, 75, 89], "cov_t": [32, 40, 50, 56, 61, 62, 63], "make_2d_samples_gauss": [32, 40, 50, 56, 61, 62, 63], "sqrtm": [32, 61, 68], "gw0": 32, "entropic_gromov_wasserstein": [32, 76, 89, 90], "gwe": 32, "gw0_sparsiti": 32, "gw_sparsiti": 32, "gwe_spars": 32, "nfeasibl": 32, "606056e": 32, "330020e": 32, "022552e": 32, "276036e": 32, "023674e": 32, "098033e": 32, "063453e": 32, "820952e": 32, "205038e": 32, "027228e": 32, "501837e": 32, "088545e": 32, "191147e": 32, "684324e": 32, "209223e": 32, "076331e": 32, "140465e": 32, "876462e": 32, "040056e": 32, "334508e": 32, "018997e": 32, "123553e": 32, "184445e": 32, "04501836901925051": 32, "037612941478320075": 32, "03823623173438275": 32, "pgw": 32, "plog": 32, "pointwise_gromov_wasserstein": [32, 76], "sgw": 32, "slog": [32, 69], "sampled_gromov_wasserstein": [32, 76], "pointwis": [32, 90], "gw_dist_estim": 32, "gw_dist_std": 32, "toarrai": [32, 68, 81], "18551015414186553": 32, "14981263716330115": 32, "0013724960658236956": 32, "226": [32, 36], "plot_gromov": [32, 36], "decomposit": 33, "pca": 33, "smacof_md": 33, "3000": 33, "singl": 33, "stress": 33, "declar": 33, "npo": 33, "isometri": 33, "n_init": 33, "embedding_": 33, "nmd": 33, "init": [33, 76, 90], "cross": 33, "triangl": 33, "star": 33, "lambdast": 33, "ct01": 33, "ct02": 33, "ct13": 33, "ct23": 33, "help": [33, 66, 77, 89, 90], "consist": [33, 66, 68, 69, 71, 77, 89], "rotat": [33, 47], "n_compon": 33, "npost01": 33, "npost02": 33, "npost13": 33, "npost23": 33, "ax4": 33, "ax5": 33, "ax6": 33, "ax7": 33, "ax8": 33, "ax9": 33, "ax10": 33, "ax11": 33, "ax12": 33, "0x7f78d25a18d0": 33, "849": [33, 36, 71], "plot_gromov_barycent": [33, 36], "denot": [34, 47, 69, 71, 77], "c_": [34, 47, 76], "p_": [34, 76], "combin": [34, 89], "sigma_d": 34, "sum_d": [34, 76], "vari": 34, "extens": 34, "aforement": 34, "unattribut": 34, "uniformli": 34, "cedric": 34, "inria": [34, 59, 60], "gromov_wasserstein_linear_unmix": [34, 76], "gromov_wasserstein_dictionary_learn": [34, 76], "fused_gromov_wasserstein_linear_unmix": [34, 76], "fused_gromov_wasserstein_dictionary_learn": [34, 76], "inter": 34, "nlabel": 34, "p_inter": 34, "p_intra": 34, "n_cluster": 34, "low": [34, 41, 47, 74], "high": [34, 66], "int32": 34, "idx_c": 34, "plot_gromov_wasserstein_dictionary_learn": [34, 36], "93": [34, 54, 90], "promot": [34, 76, 89], "cdict_gw": 34, "epoch": [34, 76], "batch_siz": [34, 45, 71, 76, 84], "learning_r": [34, 76], "nonnegative_symmetr": [34, 76], "tol_out": [34, 76], "tol_inn": [34, 76], "max_iter_out": [34, 76], "max_iter_inn": [34, 76], "use_log": [34, 76], "use_adam_optim": [34, 76], "loss_epoch": 34, "cumul": [34, 68], "928070954885737": 34, "528435380634622": 34, "481496257647932": 34, "7251645422089865": 34, "5896787585765": 34, "904249565820505": 34, "894474501829586": 34, "839762947251266": 34, "8357620167079265": 34, "57323879230497": 34, "shade": 34, "dark": [34, 90], "white": 34, "idx_atom": 34, "scaled_atom": 34, "reconstruction_error": 34, "cembed": [34, 76], "unmixings2d": 34, "extrem": 34, "linewidth": [34, 43, 57], "876122061653427": 34, "hot": 34, "encod": [34, 86], "dataset_featur": 34, "001": [34, 51, 69, 71, 73, 83], "cdict_fgw": 34, "ydict_fgw": 34, "learning_rate_c": [34, 76], "learning_rate_i": [34, 76], "488307468700953": 34, "409377567767253": 34, "7999724972950055": 34, "590157056733561": 34, "8883324021076806": 34, "6222694197786383": 34, "638584123604814": 34, "537256942676492": 34, "4127469295470614": 34, "315769238894676": 34, "max_featur": 34, "min_featur": 34, "catom": 34, "fatom": 34, "scaled_f": 34, "yembed": [34, 76], "1390622525410854": 34, "semirelaxed_gromov_wasserstein": [35, 76], "semirelaxed_fused_gromov_wasserstein": [35, 76], "105007529006411": 35, "1622222222222223": 35, "3831574076330344": 35, "04003492125155468": 35, "24488498486312954": 35, "034": [35, 36], "plot_semirelaxed_fgw": [35, 36], "368": 36, "auto_examples_gromov": 36, "comparison": [36, 37, 47, 54, 89], "introduct": [37, 55, 89, 90], "row": [37, 46, 68, 69, 70, 76, 77, 81, 86], "align": [37, 46, 65, 70, 71, 75, 89], "discrimin": [37, 46, 73, 88, 90], "logo": [37, 46, 89, 90], "toolbox": [37, 46, 67, 89, 90], "auto_examples_python": 37, "auto_examples_jupyt": 37, "arbitrari": 38, "n_1": [38, 42], "d_1": [38, 42], "n_2": [38, 42], "d_2": [38, 42], "49": [38, 42, 54, 70, 88, 90], "quang": [38, 42], "hui": [38, 42], "tran": [38, 42], "patch": [38, 42], "connectionpatch": [38, 42], "coot": 38, "co_optimal_transport": [38, 42], "co_optimal_transport2": [38, 42], "coot2": [38, 42], "d1": [38, 42], "pi_sampl": [38, 42, 70], "pi_featur": [38, 42, 70], "coot_dist": 38, "5f": 38, "yaxi": [38, 42], "tick_right": [38, 42], "xaxi": [38, 42], "tick_top": [38, 42], "xya": [38, 42], "xyb": [38, 42], "con": [38, 42], "coordsa": [38, 42], "transdata": [38, 42], "coordsb": [38, 42], "add_artist": [38, 42], "10903416567681642": 38, "09875680836922485": 38, "09685398028260431": 38, "09685": 38, "plot_coot": [38, 46], "wda": [39, 67, 90], "fda": [39, 89], "floor": [39, 68], "nbnois": 39, "hstack": 39, "pfda": 39, "projfda": 39, "maxit": [39, 69, 73], "pwda": 39, "projwda": 39, "3042776946697494e": 39, "65147154e": 39, "4401037686381040e": 39, "16760501e": 39, "2234351238819928e": 39, "30555049e": 39, "2169879996364462e": 39, "39115407e": 39, "1924746118060602e": 39, "25387848e": 39, "1177409528990749e": 39, "70993539e": 39, "0862213476139048e": 39, "52716830e": 39, "0747229322240269e": 39, "34923131e": 39, "0678766065261684e": 39, "74029183e": 39, "0621337155459647e": 39, "03651803e": 39, "0577080390746939e": 39, "59605592e": 39, "0543140912472148e": 39, "28883715e": 39, "0470236926310577e": 39, "47528039e": 39, "0445628467498224e": 39, "03183254e": 39, "0364189455866245e": 39, "31006504e": 39, "0303977563823823e": 39, "39885352e": 39, "0301476238242911e": 39, "17467624e": 39, "0292344306414324e": 39, "79959907e": 39, "0271888325518124e": 39, "94408237e": 39, "0183214741002155e": 39, "98322994e": 39, "9762636217090053e": 39, "03196875e": 39, "8225627240876070e": 39, "36012863e": 39, "0855506616050116e": 39, "92702943e": 39, "8001027160864295e": 39, "01920255e": 39, "3687486090807947e": 39, "01780640e": 39, "3431203993360381e": 39, "23716793e": 39, "3118645266923005e": 39, "90753137e": 39, "28": [39, 54, 79, 81, 88, 89, 90], "3067593392325469e": 39, "02767925e": 39, "3064856262240019e": 39, "07925279e": 39, "3060699763593800e": 39, "95215754e": 39, "3060442760754873e": 39, "77368118e": 39, "3060442709529139e": 39, "34108449e": 39, "3060442708435561e": 39, "52599061e": 39, "3060442707674844e": 39, "07742368e": 39, "3060442707600512e": 39, "36125504e": 39, "reach": [39, 90], "after": [39, 88], "xsp": 39, "xtp": 39, "xspw": 39, "xtpw": 39, "192": [39, 54], "complexwarn": 39, "complex": [39, 76, 89], "discard": [39, 77], "imaginari": 39, "offset": 39, "asanyarrai": 39, "plot_wda": [39, 46], "xr": [40, 41, 50, 51, 56], "gweak": 40, "246": [40, 46], "plot_weakot_vs_ot": [40, 46], "sign": 41, "og": 41, "templat": [41, 90], "104": [41, 46, 54], "plot_factored_coupl": [41, 46], "mu_x": 42, "mu_i": [42, 89], "clean": [42, 90], "y_": [42, 71, 76], "contamin": 42, "outlier": 42, "intuit": [42, 66], "182": [42, 54], "y_noisi": 42, "nrow": 42, "ncol": 42, "wy_samp": [42, 70], "0751486": 42, "08008339": 42, "09476863": 42, "1003163": 42, "10005085": 42, "09995814": 42, "09993793": 42, "09973254": 42, "11460073": 42, "13540289": 42, "clearli": [42, 89], "complet": [42, 66, 89, 90], "010430685366656256": 42, "080": [42, 46], "plot_learning_weights_with_coot": [42, 46], "letter": 43, "o1": 43, "o2": 43, "translat": 43, "t1": 43, "t2": [43, 62, 81], "horizont": 43, "vertic": 43, "sx": 43, "sy": [43, 66], "markerfacecolor": 43, "markeredgecolor": 43, "save": [43, 69, 76], "savefig": 43, "svg": 43, "dpi": 43, "transpar": 43, "bbox_inch": 43, "tight": 43, "375": [43, 90], "darkgrai": 43, "logo_dark": 43, "065": [43, 46], "plot_logo": [43, 46], "alaya": [44, 67, 69, 79, 88, 89], "b\u00e9rar": [44, 69, 88, 89], "gasso": [44, 62, 69, 79, 81, 85, 88, 89], "neurip": [44, 79, 81, 85, 88, 89], "mokhtar": [44, 67, 88], "mokhtarzahdi": 44, "plot1d_mat": [44, 45, 48, 49, 54, 59], "lambd": [44, 48, 49, 50], "ns_budget": [44, 69], "budget": [44, 69], "kept": [44, 69, 90], "nt_budget": [44, 69], "g_screen": 44, "restrict": [44, 69], "3524": 44, "bottleneck": [44, 69], "instal": [44, 66, 69, 77, 89, 90], "pypi": [44, 69, 88, 90], "020986042861303855": 44, "kappa": [44, 69], "7476531411890917": 44, "cardin": [44, 69, 86], "isel": 44, "jsel": 44, "399": [44, 46], "plot_screenkhorn_1d": [44, 46], "librari": [45, 67, 88, 89, 90], "bach": [45, 84, 88, 89], "bhushan": [45, 84, 88, 89], "damodaran": [45, 84, 88, 89], "kilian": [45, 50, 67, 88], "n_sourc": [45, 84], "n_target": [45, 52, 84], "x_sourc": 45, "y_target": 45, "sag": [45, 84], "sag_pi": 45, "solve_semi_dual_entrop": 45, "55553509e": 45, "96395660e": 45, "76579142e": 45, "31178196e": 45, "21640234e": 45, "25357448e": 45, "30225078e": 45, "37891338e": 45, "56123975e": 45, "61451746e": 45, "31505947e": 45, "33831456e": 45, "61515202e": 45, "34246014e": 45, "28734709e": 45, "07550428e": 45, "85500870e": 45, "52288517e": 45, "08262628e": 45, "21423583e": 45, "16904253e": 45, "03825797e": 45, "87178503e": 45, "18391107e": 45, "15462212e": 45, "65987989e": 45, "23177216e": 45, "39440107e": 45, "semicontinu": 45, "asgd": [45, 84], "asgd_pi": 45, "log_asgd": 45, "beta": [45, 69, 77, 83, 84, 90], "87919564": 45, "64972912": 45, "90370867": 45, "65425719": 45, "46885467": 45, "30171991": 45, "77560865": 45, "50927934": 45, "40235686": 45, "91006054": 45, "82169674": 45, "44871332e": 45, "00795848e": 45, "75697554e": 45, "40659699e": 45, "20593540e": 45, "31205385e": 45, "34063837e": 45, "80242597e": 45, "40238837e": 45, "68032820e": 45, "26513361e": 45, "36373920e": 45, "52546195e": 45, "40772739e": 45, "31054753e": 45, "19774150e": 45, "29902872e": 45, "49410422e": 45, "06078986e": 45, "22200805e": 45, "05396464e": 45, "03575289e": 45, "84056467e": 45, "19573357e": 45, "02994053e": 45, "72385417e": 45, "28420336e": 45, "47716225e": 45, "sinkhorn_pi": 45, "55553508e": 45, "96395661e": 45, "31178193e": 45, "30225079e": 45, "37891333e": 45, "56123974e": 45, "33831455e": 45, "61515201e": 45, "07550425e": 45, "85500876e": 45, "52288523e": 45, "08262629e": 45, "16904255e": 45, "03825804e": 45, "87178504e": 45, "23177217e": 45, "39440105e": 45, "sgd": [45, 76, 84], "sgd_dual_pi": 45, "log_sgd": 45, "solve_dual_entrop": 45, "92075753": 45, "80864372": 45, "07370578": 45, "0179414": 45, "60239916": 45, "8141425": 45, "11122763": 45, "346688": 45, "47228889": 45, "57636303": 45, "9534778": 45, "21021974e": 45, "26940978e": 45, "09590373e": 45, "59858662e": 45, "65652588e": 45, "83627521e": 45, "27260904e": 45, "58648690e": 45, "49188637e": 45, "03096858e": 45, "44340331e": 45, "37764488e": 45, "14582303e": 45, "32484188e": 45, "15372556e": 45, "26187284e": 45, "79941580e": 45, "58297483e": 45, "36009581e": 45, "15632652e": 45, "07006729e": 45, "61709962e": 45, "99740394e": 45, "13377026e": 45, "88094057e": 45, "36124884e": 45, "09671824e": 45, "24045368e": 45, "plot_stochast": [45, 46], "886": 46, "auto_examples_oth": 46, "aureli": 47, "boisbunon": [47, 88], "pip": [47, 66, 89, 90], "conda": [47, 89], "forg": [47, 89], "alwai": [47, 66, 71, 89, 90], "document": [47, 67, 88, 89, 90], "pythonot": [47, 68, 88, 90], "github": [47, 66, 68, 83, 86, 88, 89, 90], "io": [47, 88, 90], "Or": 47, "inlin": 47, "caf\u00e9": 47, "croissant": 47, "manhattan": 47, "quick": [47, 88, 90], "googl": 47, "extract": [47, 68], "fiction": 47, "product": [47, 68, 81, 86, 89], "sale": 47, "bakery_po": 47, "bakery_prod": 47, "describ": [47, 66, 69, 76], "sold": 47, "cafe_po": 47, "cafe_prod": 47, "fun": 47, "imap": 47, "shop": 47, "npz": 47, "cafe": 47, "89": [47, 54, 71, 90], "73": [47, 54], "88": [47, 54, 90], "92": [47, 54, 90], "91": [47, 54, 90], "441": [47, 69, 77, 88], "next": [47, 76, 77, 81, 89, 90], "ec": 47, "thing": 47, "fontweight": 47, "bold": 47, "va": 47, "coolwarm": 47, "cbar": 47, "shrink": 47, "use_gridspec": 47, "cell": 47, "awai": 47, "thu": [47, 86], "costli": 47, "while": [47, 77, 89, 90], "time_emd": 47, "section": [47, 89, 90], "good": [47, 65, 66, 89], "plane": 47, "easili": [47, 89], "interpret": 47, "10838179": 47, "pseudo": 47, "oslash": 47, "wise": [47, 68, 89], "divis": 47, "altern": [47, 66, 71, 89], "Be": 47, "care": 47, "pre": [47, 69, 89], "nit": 47, "ot_sink_algo": 47, "atleast_2d": 47, "equival": [47, 48, 71, 75, 79], "diag": [47, 68, 69, 89], "2g": 47, "0008": 47, "notic": 47, "deliv": 47, "fraction": 47, "sens": [47, 69, 77, 88, 89], "reg_paramet": 47, "logspac": [47, 53, 56, 57, 62], "w_sinkhorn_reg": 47, "time_sinkhorn_reg": 47, "max_ot": 47, "few": [47, 90], "seri": 47, "someth": [47, 66], "although": 47, "972222222222223": 47, "impact": [47, 89], "higher": [47, 76, 83], "much": [47, 66, 69], "littl": [47, 77], "quickli": [47, 66], "572": [47, 55], "plot_intro_ot": [47, 55], "0x7f78ead93400": 48, "861463e": 48, "860154e": 48, "144529e": 48, "130143e": 48, "178815e": 48, "426078e": 48, "661047e": 48, "233110e": 48, "338932e": 48, "776627e": 48, "293340e": 48, "235791e": 48, "637176e": 48, "740051e": 48, "529356e": 48, "450071e": 48, "193632e": 48, "449812e": 48, "294505e": 48, "857493e": 48, "822723e": 48, "756": [48, 55], "plot_ot_1d": [48, 55], "constrain": [49, 83, 88, 89, 90], "togeth": 49, "0x7f78fa53a140": 49, "gsm": 49, "smooth_ot_du": [49, 89], "max_nz": [49, 83, 86], "entri": [49, 68], "permit": 49, "gsc": 49, "sparsity_constrain": [49, 83], "078": [49, 55], "plot_ot_1d_smooth": [49, 55], "empirical_sinkhorn": [50, 89], "003": [50, 55], "plot_ot_2d_sampl": [50, 55], "stole": 51, "idea": [51, 77, 89, 90], "pdf": [51, 53, 66, 89], "1706": 51, "07650": 51, "strictli": [51, 77, 89], "m1": 51, "mp": 51, "l1": [51, 70], "gp": 51, "xtot": 51, "354": [51, 55], "plot_ot_l1_vs_l2": [51, 55], "lst_m": 52, "d_emd": 52, "d_emd2": 52, "d_tv": 52, "0x7f78eb8dd990": 52, "d_sinkhorn": 52, "d_sinkhorn2": 52, "664": [52, 55], "plot_compute_emd": [52, 55], "special": [53, 68], "pdf_von_mis": 53, "endpoint": 53, "mu1": 53, "kappa1": 53, "mu_target": 53, "pdf1": 53, "pdf_t": 53, "mu2": 53, "kappa2": 53, "vonmis": 53, "0x7f78e8b12680": 53, "period": 53, "attain": [53, 79], "antipod": 53, "contrari": 53, "n_try": 53, "deal": [53, 79], "put": 53, "xts2": 53, "l_w2_circl": 53, "l_w2": 53, "w2_circl": 53, "m_w2_circl": 53, "std_w2_circl": 53, "m_w2": 53, "std_w2": 53, "fill_between": [53, 56, 57], "vline": 53, "ymin": 53, "ymax": 53, "linestyl": 53, "tc": 53, "mask_end": 53, "ctp": 53, "ctm": 53, "dcptm": 53, "dcmtp": 53, "invalid": [53, 60], "vm": 53, "655": [53, 55], "plot_compute_wasserstein_circl": [53, 55], "df": [54, 78, 89], "gl2": 54, "frob": 54, "760578e": 54, "669467e": 54, "457501e": 54, "111116e": 54, "665639e": 54, "298130e": 54, "827855e": 54, "664378e": 54, "572776e": 54, "260396e": 54, "664077e": 54, "811855e": 54, "015066e": 54, "663912e": 54, "936787e": 54, "653393e": 54, "663852e": 54, "555826e": 54, "916369e": 54, "663814e": 54, "305693e": 54, "836245e": 54, "663785e": 54, "760450e": 54, "929009e": 54, "663767e": 54, "078011e": 54, "793559e": 54, "663751e": 54, "525192e": 54, "584755e": 54, "663737e": 54, "396466e": 54, "396951e": 54, "663727e": 54, "086938e": 54, "012700e": 54, "663720e": 54, "042609e": 54, "725769e": 54, "663713e": 54, "160914e": 54, "922568e": 54, "663707e": 54, "823502e": 54, "361187e": 54, "663702e": 54, "022440e": 54, "028438e": 54, "663697e": 54, "181249e": 54, "292634e": 54, "663692e": 54, "698532e": 54, "489527e": 54, "663687e": 54, "258253e": 54, "420712e": 54, "663682e": 54, "741118e": 54, "560349e": 54, "663678e": 54, "624135e": 54, "365715e": 54, "663673e": 54, "645179e": 54, "400714e": 54, "663670e": 54, "957237e": 54, "256196e": 54, "663666e": 54, "261541e": 54, "762450e": 54, "663663e": 54, "851305e": 54, "079948e": 54, "663660e": 54, "942296e": 54, "231320e": 54, "663657e": 54, "092896e": 54, "481860e": 54, "663653e": 54, "924361e": 54, "201470e": 54, "663651e": 54, "625455e": 54, "704189e": 54, "663648e": 54, "641123e": 54, "730250e": 54, "663645e": 54, "566666e": 54, "606377e": 54, "663643e": 54, "338514e": 54, "226810e": 54, "663641e": 54, "222711e": 54, "034152e": 54, "663639e": 54, "221805e": 54, "032642e": 54, "663637e": 54, "440781e": 54, "396935e": 54, "663634e": 54, "520091e": 54, "528875e": 54, "663632e": 54, "288193e": 54, "143080e": 54, "663630e": 54, "123055e": 54, "868347e": 54, "663628e": 54, "024487e": 54, "704365e": 54, "663627e": 54, "079606e": 54, "796061e": 54, "663625e": 54, "172093e": 54, "949922e": 54, "663623e": 54, "047880e": 54, "743277e": 54, "663621e": 54, "010577e": 54, "681217e": 54, "663619e": 54, "064438e": 54, "770820e": 54, "663618e": 54, "882375e": 54, "644049e": 54, "663616e": 54, "532647e": 54, "419505e": 54, "663615e": 54, "930189e": 54, "652001e": 54, "663613e": 54, "728955e": 54, "452161e": 54, "663612e": 54, "524214e": 54, "584459e": 54, "663610e": 54, "088418e": 54, "511958e": 54, "663609e": 54, "639430e": 54, "270902e": 54, "52": [54, 90], "663608e": 54, "662611e": 54, "108397e": 54, "53": 54, "663607e": 54, "133700e": 54, "186767e": 54, "54": 54, "663605e": 54, "648141e": 54, "272349e": 54, "55": [54, 90], "663604e": 54, "557516e": 54, "090911e": 54, "56": [54, 90], "663603e": 54, "304213e": 54, "215131e": 54, "663602e": 54, "353809e": 54, "057021e": 54, "58": [54, 90], "663601e": 54, "968279e": 54, "325603e": 54, "59": [54, 89, 90], "663600e": 54, "367159e": 54, "059240e": 54, "663599e": 54, "610790e": 54, "334102e": 54, "61": 54, "663598e": 54, "787466e": 54, "628015e": 54, "62": [54, 90], "663596e": 54, "937777e": 54, "154166e": 54, "63": 54, "599432e": 54, "315190e": 54, "64": [54, 90], "663595e": 54, "813048e": 54, "670555e": 54, "65": [54, 61], "663594e": 54, "724600e": 54, "523409e": 54, "66": [54, 61, 69, 88, 89, 90], "663593e": 54, "081892e": 54, "011779e": 54, "67": [54, 90], "663592e": 54, "948732e": 54, "896260e": 54, "68": 54, "663591e": 54, "941833e": 54, "221188e": 54, "69": [54, 79], "663590e": 54, "213739e": 54, "673523e": 54, "663589e": 54, "127355e": 54, "529811e": 54, "71": 54, "663588e": 54, "349251e": 54, "235363e": 54, "72": [54, 90], "007084e": 54, "329722e": 54, "663587e": 54, "880265e": 54, "118744e": 54, "74": 54, "663586e": 54, "931950e": 54, "204723e": 54, "663585e": 54, "981309e": 54, "286832e": 54, "76": [54, 90], "663584e": 54, "952959e": 54, "576082e": 54, "77": 54, "544857e": 54, "560750e": 54, "78": [54, 88], "663583e": 54, "237579e": 54, "049564e": 54, "79": [54, 90], "663582e": 54, "382386e": 54, "290460e": 54, "646051e": 54, "065503e": 54, "663581e": 54, "197994e": 54, "983702e": 54, "663580e": 54, "072764e": 54, "775370e": 54, "83": 54, "994645e": 54, "645410e": 54, "84": [54, 90], "663579e": 54, "842721e": 54, "056248e": 54, "663578e": 54, "276486e": 54, "450691e": 54, "86": [54, 90], "737346e": 54, "217366e": 54, "87": [54, 79, 90], "663577e": 54, "282043e": 54, "123508e": 54, "663576e": 54, "020937e": 54, "689135e": 54, "431951e": 54, "709310e": 54, "663575e": 54, "052335e": 54, "077789e": 54, "500538e": 54, "823407e": 54, "663574e": 54, "063176e": 54, "095821e": 54, "663573e": 54, "576367e": 54, "949549e": 54, "94": 54, "224681e": 54, "364492e": 54, "663572e": 54, "673221e": 54, "110670e": 54, "96": 54, "635561e": 54, "048017e": 54, "97": 54, "663571e": 54, "527236e": 54, "867807e": 54, "98": [54, 79], "788548e": 54, "638946e": 54, "663570e": 54, "727141e": 54, "536791e": 54, "127278e": 54, "202445e": 54, "101": 54, "663569e": 54, "637504e": 54, "387670e": 54, "102": 54, "922750e": 54, "862195e": 54, "663568e": 54, "076454e": 54, "117891e": 54, "911509e": 54, "843492e": 54, "105": 54, "663567e": 54, "403398e": 54, "998215e": 54, "106": [54, 90], "439790e": 54, "058755e": 54, "107": [54, 90], "634542e": 54, "382735e": 54, "663566e": 54, "452203e": 54, "079401e": 54, "109": 54, "852991e": 54, "746137e": 54, "663565e": 54, "165490e": 54, "602434e": 54, "111": 54, "450250e": 54, "076149e": 54, "112": 54, "663564e": 54, "685294e": 54, "467159e": 54, "113": [54, 90], "821800e": 54, "694245e": 54, "114": [54, 90], "237390e": 54, "722040e": 54, "115": 54, "663563e": 54, "992842e": 54, "315219e": 54, "116": [54, 90], "166739e": 54, "604506e": 54, "117": 54, "086064e": 54, "470297e": 54, "118": [54, 90], "663562e": 54, "435945e": 54, "052346e": 54, "292497e": 54, "813711e": 54, "663561e": 54, "366209e": 54, "936334e": 54, "138746e": 54, "557935e": 54, "009637e": 54, "343153e": 54, "123": [54, 60], "663560e": 54, "386258e": 54, "969683e": 54, "124": [54, 90], "927442e": 54, "206415e": 54, "081681e": 54, "463000e": 54, "126": [54, 90], "663559e": 54, "759123e": 54, "926406e": 54, "127": [54, 90], "890771e": 54, "145409e": 54, "128": [54, 71], "971315e": 54, "279398e": 54, "129": 54, "663558e": 54, "101983e": 54, "496771e": 54, "035645e": 54, "386414e": 54, "984492e": 54, "301317e": 54, "663557e": 54, "849064e": 54, "076024e": 54, "795703e": 54, "987255e": 54, "134": [54, 90], "624087e": 54, "701762e": 54, "135": 54, "689557e": 54, "810673e": 54, "663556e": 54, "644308e": 54, "735399e": 54, "137": [54, 90], "618007e": 54, "691644e": 54, "138": [54, 61, 90], "483013e": 54, "467075e": 54, "139": [54, 90], "663555e": 54, "708771e": 54, "842636e": 54, "013847e": 54, "350146e": 54, "141": [54, 90], "721217e": 54, "863339e": 54, "142": [54, 90], "663554e": 54, "027911e": 54, "373540e": 54, "143": [54, 90], "935449e": 54, "144": [54, 90], "677151e": 54, "790030e": 54, "145": [54, 60, 90], "351982e": 54, "249094e": 54, "146": [54, 90], "663553e": 54, "423360e": 54, "367836e": 54, "147": 54, "541112e": 54, "563722e": 54, "148": [54, 90], "491601e": 54, "481358e": 54, "149": 54, "466407e": 54, "439446e": 54, "663552e": 54, "801524e": 54, "996929e": 54, "151": 54, "714107e": 54, "851507e": 54, "152": 54, "491257e": 54, "480784e": 54, "153": 54, "513799e": 54, "518282e": 54, "154": 54, "663551e": 54, "354539e": 54, "253345e": 54, "155": [54, 90], "233818e": 54, "052519e": 54, "156": [54, 90], "576219e": 54, "622121e": 54, "157": [54, 90], "452791e": 54, "416792e": 54, "663550e": 54, "262867e": 54, "100843e": 54, "316379e": 54, "189863e": 54, "295447e": 54, "155041e": 54, "161": 54, "283286e": 54, "134810e": 54, "162": 54, "569222e": 54, "610479e": 54, "163": 54, "663549e": 54, "172942e": 54, "951247e": 54, "164": 54, "399809e": 54, "328651e": 54, "165": 54, "229432e": 54, "045221e": 54, "166": 54, "326191e": 54, "206184e": 54, "167": 54, "663548e": 54, "209694e": 54, "012384e": 54, "168": 54, "372136e": 54, "282614e": 54, "169": [54, 90], "338395e": 54, "226484e": 54, "416497e": 54, "356410e": 54, "171": 54, "298576e": 54, "160242e": 54, "172": [54, 90], "663547e": 54, "190590e": 54, "980603e": 54, "167083e": 54, "941497e": 54, "174": [54, 90], "069425e": 54, "779038e": 54, "217780e": 54, "025834e": 54, "176": [54, 90], "140754e": 54, "897697e": 54, "177": 54, "663546e": 54, "160707e": 54, "930890e": 54, "178": [54, 90], "101798e": 54, "832892e": 54, "179": 54, "114904e": 54, "854694e": 54, "064022e": 54, "770049e": 54, "181": [54, 90], "258231e": 54, "540149e": 54, "213120e": 54, "018080e": 54, "183": 54, "663545e": 54, "164296e": 54, "936859e": 54, "184": [54, 90], "188762e": 54, "977559e": 54, "185": 54, "394153e": 54, "562760e": 54, "186": 54, "028656e": 54, "711216e": 54, "115348e": 54, "855431e": 54, "188": 54, "663544e": 54, "768310e": 54, "625002e": 54, "189": [54, 90], "021806e": 54, "699820e": 54, "086303e": 54, "807113e": 54, "191": [54, 90], "879008e": 54, "643416e": 54, "050210e": 54, "747071e": 54, "193": 54, "002463e": 54, "667641e": 54, "194": 54, "663543e": 54, "062747e": 54, "767925e": 54, "195": [54, 90], "348538e": 54, "555170e": 54, "196": 54, "992512e": 54, "329589e": 54, "197": 54, "558020e": 54, "590018e": 54, "198": [54, 90], "993772e": 54, "662507e": 54, "588499e": 54, "428734e": 54, "737134e": 54, "453459e": 54, "692289e": 54, "617643e": 54, "614437e": 54, "464513e": 54, "612639e": 54, "102965e": 54, "003963e": 54, "611291e": 54, "371098e": 54, "348827e": 54, "610468e": 54, "110558e": 54, "230389e": 54, "610198e": 54, "672927e": 54, "693743e": 54, "610130e": 54, "232417e": 54, "814742e": 54, "610090e": 54, "513455e": 54, "046887e": 54, "610002e": 54, "443507e": 54, "764057e": 54, "609996e": 54, "657071e": 54, "887869e": 54, "609948e": 54, "998735e": 54, "827807e": 54, "609695e": 54, "569217e": 54, "525962e": 54, "609533e": 54, "010779e": 54, "626881e": 54, "609520e": 54, "043897e": 54, "294681e": 54, "609465e": 54, "415246e": 54, "496718e": 54, "609386e": 54, "898605e": 54, "883745e": 54, "609324e": 54, "837052e": 54, "175060e": 54, "609298e": 54, "617826e": 54, "603564e": 54, "609184e": 54, "080015e": 54, "139305e": 54, "609083e": 54, "273206e": 54, "009411e": 54, "608988e": 54, "940805e": 54, "558681e": 54, "608853e": 54, "380030e": 54, "348223e": 54, "608844e": 54, "185045e": 54, "341930e": 54, "608824e": 54, "279113e": 54, "057868e": 54, "608819e": 54, "156821e": 54, "078753e": 54, "608783e": 54, "205746e": 54, "548567e": 54, "608764e": 54, "189894e": 54, "914259e": 54, "608755e": 54, "474607e": 54, "807303e": 54, "608737e": 54, "144227e": 54, "840760e": 54, "608676e": 54, "775335e": 54, "073291e": 54, "608638e": 54, "348020e": 54, "777116e": 54, "608627e": 54, "863136e": 54, "104023e": 54, "608529e": 54, "110230e": 54, "828482e": 54, "608487e": 54, "641106e": 54, "248184e": 54, "608409e": 54, "823638e": 54, "758383e": 54, "608373e": 54, "256641e": 54, "629519e": 54, "608338e": 54, "132444e": 54, "429691e": 54, "608310e": 54, "786649e": 54, "873484e": 54, "608260e": 54, "103848e": 54, "991794e": 54, "608206e": 54, "321265e": 54, "341279e": 54, "608201e": 54, "054747e": 54, "912648e": 54, "608195e": 54, "198335e": 54, "751739e": 54, "608193e": 54, "458736e": 54, "360328e": 54, "608159e": 54, "153759e": 54, "463587e": 54, "608115e": 54, "738314e": 54, "403523e": 54, "608108e": 54, "960032e": 54, "368161e": 54, "608081e": 54, "675447e": 54, "694254e": 54, "608072e": 54, "976340e": 54, "610383e": 54, "608046e": 54, "604130e": 54, "579515e": 54, "608020e": 54, "617036e": 54, "600226e": 54, "608014e": 54, "957795e": 54, "364188e": 54, "608011e": 54, "292411e": 54, "078211e": 54, "607998e": 54, "431795e": 54, "355831e": 54, "607964e": 54, "127054e": 54, "420225e": 54, "607947e": 54, "021878e": 54, "643126e": 54, "560621e": 54, "725288e": 54, "607900e": 54, "929781e": 54, "710793e": 54, "607890e": 54, "740229e": 54, "229659e": 54, "607858e": 54, "039550e": 54, "279306e": 54, "607836e": 54, "319545e": 54, "121612e": 54, "607826e": 54, "378947e": 54, "025624e": 54, "607808e": 54, "145102e": 54, "841105e": 54, "607776e": 54, "941743e": 54, "121889e": 54, "607743e": 54, "087422e": 54, "356037e": 54, "607741e": 54, "310249e": 54, "106541e": 54, "607738e": 54, "682752e": 54, "705425e": 54, "607691e": 54, "913936e": 54, "684709e": 54, "607671e": 54, "288855e": 54, "072055e": 54, "607654e": 54, "002448e": 54, "611590e": 54, "607641e": 54, "209492e": 54, "319792e": 54, "607632e": 54, "588467e": 54, "984199e": 54, "607619e": 54, "050388e": 54, "294196e": 54, "607618e": 54, "417493e": 54, "513973e": 54, "607598e": 54, "210509e": 54, "946012e": 54, "607591e": 54, "392914e": 54, "062009e": 54, "607579e": 54, "759587e": 54, "247415e": 54, "607574e": 54, "760280e": 54, "437356e": 54, "607556e": 54, "146469e": 54, "843012e": 54, "607550e": 54, "689456e": 54, "930984e": 54, "065631e": 54, "535705e": 54, "607539e": 54, "555681e": 54, "053852e": 54, "607528e": 54, "177470e": 54, "153798e": 54, "607527e": 54, "306068e": 54, "529648e": 54, "607514e": 54, "816045e": 54, "256440e": 54, "607511e": 54, "301970e": 54, "700442e": 54, "607504e": 54, "281072e": 54, "881840e": 54, "607503e": 54, "821886e": 54, "257370e": 54, "607480e": 54, "403013e": 54, "255315e": 54, "169298e": 54, "879624e": 54, "607473e": 54, "235982e": 54, "809227e": 54, "607470e": 54, "717105e": 54, "760195e": 54, "148402e": 54, "883374e": 54, "reg1": [54, 78], "reg2": [54, 78], "gel2": 54, "gcg": [54, 71, 89], "693084e": 54, "610202e": 54, "147342e": 54, "288260e": 54, "610179e": 54, "406304e": 54, "264402e": 54, "610174e": 54, "352083e": 54, "397436e": 54, "715023e": 54, "371659e": 54, "154387e": 54, "474015e": 54, "493": [54, 55], "plot_optim_otreg": [54, 55], "575": 55, "auto_exampl": 55, "adrien": [56, 67, 88], "corenflo": [56, 67, 88], "aalto": 56, "fi": [56, 60], "n_seed": [56, 57], "n_projections_arr": [56, 57], "res_mean": [56, 57], "res_std": [56, 57], "xscale": [56, 57], "confid": [56, 57], "699": [56, 58], "plot_vari": [56, 58], "mgrid": 57, "30j": 57, "plot_surfac": 57, "set_zlim": 57, "tick": 57, "ssw_1": 57, "689": [57, 58], "plot_variance_ssw": [57, 58], "388": [58, 90], "auto_examples_sl": 58, "uot": [59, 81, 88, 89], "541": [59, 64], "plot_uot_1d": [59, 64], "n_weight": 60, "weight_list": 60, "overflow": [60, 90], "kv": 60, "915": 60, "ktu": 60, "922": 60, "595": 60, "974": 60, "615": 60, "455": [60, 90], "361": [60, 90], "plot_uot_barycenter_1d": [60, 64], "304": [60, 64, 90], "n_nois": [61, 63], "cov": 61, "w0": 61, "partial_wasserstein": [61, 63, 89], "entropic_partial_wasserstein": [61, 89], "partial_w_dist": 61, "jet": [61, 63], "47910182636916243": 61, "5034205945081646": 61, "res0": 61, "partial_gromov_wasserstein": [61, 89], "entropic_partial_gromov_wasserstein": [61, 89], "partial_gw_dist": [61, 79], "611280e": 61, "345385e": 61, "584346e": 61, "659015e": 61, "38071035222889": 61, "59015303098326": 61, "plot_partial_wass_and_gromov": [61, 64], "overlap": [61, 89], "sinc": [61, 77, 89, 90], "explicitli": [61, 73, 80, 90], "478237e": 61, "894947e": 61, "251769e": 61, "596705e": 61, "808371e": 61, "136110e": 61, "859072e": 61, "136043e": 61, "11743971783944865": 61, "9136043100219415": 61, "574": [61, 64], "wu": [62, 81, 85, 88], "f\u00e9vott": [62, 81, 85, 88], "through": [62, 81, 85, 88, 89], "regress": [62, 66, 81, 85, 88], "haoran": 62, "final_gamma": 62, "t_list": [62, 81], "g_list": [62, 81], "regularization_path": 62, "semi_relax": [62, 81], "t_list2": 62, "g_list2": 62, "selected_gamma": 62, "compute_transport_plan": 62, "ell_2": [62, 63, 85], "g_list_v": 62, "l_2": 62, "813": [62, 64], "plot_regpath": [62, 64], "_f": [63, 89], "div": [63, 85], "ell_1": 63, "reg_m_kl": 63, "reg_m_l2": 63, "entropic_kl_uot": 63, "kl_uot": 63, "mm_unbalanc": 63, "l2_uot": 63, "partial_ot": 63, "334": [63, 64, 90], "plot_unbalanced_ot": [63, 64], "566": 64, "auto_examples_unbalanc": 64, "interest": [65, 89], "foster": [65, 89], "open": [65, 66, 67, 88, 89, 90], "welcom": [65, 88], "environ": 65, "contributor": [65, 88, 90], "maintain": [65, 68, 88, 90], "particip": 65, "harass": 65, "experi": 65, "everyon": 65, "regardless": [65, 90], "ag": 65, "bodi": 65, "disabl": 65, "ethnic": 65, "gender": 65, "ident": [65, 68, 71], "nation": 65, "person": [65, 67], "appear": [65, 69], "race": 65, "religion": 65, "sexual": 65, "orient": 65, "behavior": [65, 66, 90], "includ": [65, 66, 70, 73, 86, 89, 90], "inclus": [65, 66], "languag": [65, 67, 89], "Being": 65, "viewpoint": 65, "gracefulli": 65, "critic": 65, "focus": 65, "best": [65, 66, 76, 89, 90], "empathi": 65, "toward": [65, 90], "member": [65, 88], "unaccept": 65, "imageri": 65, "unwelcom": 65, "attent": 65, "troll": 65, "insult": 65, "derogatori": 65, "comment": 65, "polit": 65, "attack": 65, "public": [65, 66, 90], "privat": 65, "publish": 65, "physic": 65, "electron": 65, "address": [65, 66, 89], "permiss": 65, "could": [65, 90], "inappropri": 65, "profession": 65, "clarifi": 65, "appropri": [65, 66, 86], "fair": [65, 77], "correct": [65, 66, 77, 88, 90], "action": [65, 90], "edit": [65, 66], "reject": 65, "commit": [65, 66, 68, 90], "wiki": 65, "ban": 65, "temporarili": 65, "perman": 65, "deem": 65, "threaten": 65, "offens": 65, "harm": 65, "offici": [65, 90], "mail": [65, 66, 88], "post": 65, "social": 65, "media": 65, "act": 65, "appoint": 65, "offlin": 65, "event": 65, "abus": 65, "report": [65, 66, 88, 90], "contact": 65, "team": [65, 66, 90], "complaint": 65, "review": [65, 66], "investig": [65, 89], "circumst": 65, "oblig": 65, "confidenti": 65, "regard": 65, "incid": 65, "polici": 65, "separ": [65, 89, 90], "who": [65, 90], "faith": 65, "face": [65, 79], "temporari": 65, "repercuss": 65, "determin": [65, 69], "leadership": 65, "coven": 65, "thank": [66, 67, 81, 90], "workflow": 66, "fork": 66, "repositori": [66, 90], "develop": [66, 88, 89, 90], "branch": [66, 90], "click": 66, "button": 66, "page": [66, 88, 90], "under": [66, 69, 70, 71, 88], "your": [66, 88, 89], "guid": [66, 88, 90], "repo": [66, 90], "disk": 66, "git": 66, "yourlogin": 66, "cd": 66, "hold": 66, "checkout": 66, "my": 66, "never": [66, 90], "master": [66, 86, 88, 90], "modified_fil": 66, "push": [66, 89, 90], "instruct": 66, "email": 66, "committ": 66, "abov": [66, 76, 80, 81, 89, 90], "seem": 66, "magic": 66, "look": [66, 81], "web": 66, "ask": [66, 88, 90], "friend": 66, "anoth": [66, 71, 77, 89, 90], "compli": 66, "rule": [66, 78], "submit": 66, "pep8": [66, 90], "guidelin": [66, 88], "mention": 66, "descript": 66, "docstr": [66, 86, 90], "usag": 66, "doctest": [66, 90], "prefix": 66, "mrg": 66, "readi": 66, "merg": [66, 90], "core": [66, 90], "approv": [66, 90], "elig": 66, "incomplet": [66, 90], "wip": 66, "progress": 66, "matur": 66, "duplic": 66, "broad": 66, "api": [66, 68, 88, 90], "seek": [66, 89], "collabor": 66, "often": [66, 89], "benefit": [66, 67, 88], "task": 66, "pr": [66, 68, 90], "folder": [66, 88, 90], "coverag": [66, 90], "enhanc": 66, "verifi": 66, "manner": 66, "modif": 66, "grant": 66, "desir": [66, 69, 76, 77, 86], "fail": [66, 77, 89, 90], "At": [66, 89], "paragraph": 66, "narr": 66, "literatur": [66, 69, 89], "common": [66, 89], "program": [66, 69, 77, 78, 88, 89, 90], "tool": [66, 89], "pyflak": 66, "autopep8": 66, "easi": [66, 88, 89], "redund": [66, 90], "bonu": 66, "benchmark": [66, 68, 90], "profil": 66, "track": [66, 76, 90], "feel": 66, "wish": 66, "snippet": 66, "highlight": [66, 90], "well": [66, 68, 77, 86, 89], "platform": [66, 90], "__version__": 66, "about": [66, 69, 89, 90], "gist": 66, "except": 66, "traceback": 66, "great": 66, "pick": [66, 84], "tracker": 66, "resolv": 66, "knowledg": [66, 89], "assist": 66, "area": [66, 89], "greatli": [66, 89, 90], "appreci": 66, "experienc": 66, "concentr": 66, "glad": 66, "restructuredtext": 66, "etc": [66, 70], "directori": 66, "editor": 66, "noplot": 66, "place": [66, 90], "viewabl": 66, "browser": 66, "pillow": 66, "write": [66, 68], "keep": [66, 89, 90], "compromis": 66, "reader": [66, 89], "hand": 66, "wave": 66, "explan": 66, "inspir": 66, "scikit": [66, 86, 89, 90], "wrapper": [67, 89], "alexandr": [67, 88], "ci": [67, 90], "michael": 67, "l\u00e9o": [67, 88], "gautheron": [67, 88], "nathali": [67, 88], "gayraud": [67, 88], "antoin": [67, 83, 88], "debug": [67, 90], "alain": [67, 88], "jcpot": [67, 88, 90], "minhui": 67, "huang": [67, 73, 88, 89], "robust": [67, 73, 88, 89, 90], "nathan": [67, 90], "cassereau": [67, 90], "camil": 67, "le": [67, 86], "coz": 67, "theo": 67, "gnassoun": 67, "wassertstein": 67, "lot": [67, 90], "would": [67, 68, 90], "variou": [67, 86, 90], "mathieu": [67, 83, 90], "financ": [67, 88], "manpow": [67, 88], "partner": [67, 88], "goal": [68, 84], "agnost": 68, "whether": [68, 76, 77, 86], "cupi": [68, 88, 89, 90], "nonetheless": 68, "achiev": 68, "imit": 68, "As": [68, 77, 89, 90], "convent": [68, 71], "list_to_arrai": [68, 86], "get_backend": 68, "know": 68, "argument": [68, 71, 78, 86, 90], "op": 68, "numpy_op": 68, "np_config": 68, "enable_numpy_behavior": 68, "intel": 68, "xeon": 68, "6248": 68, "50ghz": 68, "tesla": 68, "v100": 68, "sxm2": 68, "32gb": 68, "date": [68, 90], "8th": 68, "316": [68, 90], "pull": [68, 90], "bitsize32": 68, "bit": 68, "devicecpugpu": 68, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 68, "00080": 68, "00220": 68, "01510": 68, "00950": 68, "01930": 68, "00510": 68, "0293": 68, "00050": 68, "00130": 68, "00970": 68, "00570": 68, "01150": 68, "00290": 68, "0173": 68, "5000": 68, "00090": 68, "00160": 68, "01100": 68, "00580": 68, "0166": 68, "00210": 68, "01450": 68, "00560": 68, "01180": 68, "0168": 68, "20000": 68, "00690": 68, "00430": 68, "02780": 68, "00590": 68, "00300": 68, "0165": 68, "50000": [68, 81], "07070": 68, "03140": 68, "13950": 68, "00740": 68, "01250": 68, "00350": 68, "0198": 68, "nbsp": 68, "bitsize64": 68, "00200": 68, "01540": 68, "00930": 68, "01910": 68, "0328": 68, "00940": 68, "01140": 68, "0169": 68, "00170": 68, "01200": 68, "01160": 68, "00340": 68, "00270": 68, "01770": 68, "0167": 68, "01460": 68, "00750": 68, "04360": 68, "14670": 68, "05680": 68, "24680": 68, "00770": 68, "00450": 68, "0204": 68, "proper": [68, 90], "typeerror": 68, "get_backend_list": 68, "to_numpi": 68, "abstract": 68, "jaxbackend": 68, "numpybackend": 68, "torchbackend": [68, 90], "cupybackend": 68, "tensorflowbackend": 68, "__name__": 68, "__type__": 68, "rtol": 68, "equal_nan": 68, "evalu": [68, 69, 70], "evenli": 68, "argsort": 68, "array_equ": 68, "assert_same_dtype_devic": 68, "arctang": 68, "arctan2": 68, "bitsiz": 68, "a_min": 68, "a_max": 68, "sequenc": 68, "exist": [68, 69, 89, 90], "col": 68, "cumsum": 68, "device_typ": 68, "dtype_devic": 68, "einsum": 68, "subscript": 68, "operand": 68, "einstein": 68, "summat": 68, "eliminate_zero": 68, "smaller": [68, 90], "csr_matrix": 68, "exponenti": [68, 69], "flip": 68, "from_numpi": 68, "fill_valu": 68, "inv": 68, "is_floating_point": 68, "isfinit": 68, "infin": 68, "Not": 68, "isinf": 68, "isnan": 68, "nan": 68, "isspars": 68, "kl_div": 68, "stat": 68, "specifi": [68, 71, 83, 86, 90], "logsumexp": [68, 73, 89], "matmul": 68, "amax": 68, "arithmet": 68, "median": [68, 86, 90], "amin": 68, "frobeniu": 68, "outer": 68, "expon": 68, "prod": 68, "qr": 68, "repeat": 68, "searchsort": 68, "side": [68, 81], "insert": 68, "set_gradi": [68, 90], "val": 68, "equat": [68, 69, 76, 84, 89], "scalar": [68, 69, 70], "sort2": 68, "ngeativ": 68, "root": [68, 88, 89], "definit": [68, 89], "squeez": 68, "deviat": [68, 72, 76], "take_along_axi": 68, "arr": 68, "gather": 68, "tile": 68, "rep": 68, "tocsr": 68, "compress": 68, "todens": 68, "trace": 68, "dim0": 68, "dim1": 68, "swap": 68, "chosen": [68, 86, 89], "zero_pad": 68, "pad_width": 68, "pad": 68, "cp": 68, "s_": 69, "empirical_sinkhorn_diverg": [69, 89, 90], "barycenter_sinkhorn": 69, "barycenter_stabil": [69, 90], "tau": [69, 73, 85], "10000000000": 69, "mast": 69, "strength": 69, "height": 69, "stabthr": 69, "goe": [69, 88, 89], "butscher": [69, 88, 89], "nguyen": [69, 88, 89], "guiba": [69, 88, 89], "effici": [69, 77, 88, 89, 90], "geometr": [69, 88, 89], "islazi": 69, "batchsiz": 69, "99977301e": 69, "26989344e": 69, "empirical_sinkhorn2": [69, 89], "53978687e": 69, "w_a": 69, "gamma_a": 69, "m_a": 69, "w_b": 69, "gamma_b": 69, "m_b": 69, "_a": [69, 81], "_b": 69, "499887176049052": 69, "frechet": [69, 77], "w_i": [69, 77], "measure_weight": [69, 77], "k_i": [69, 77], "There": [69, 77, 89], "arnaud": [69, 77], "doucet": [69, 77, 88, 89], "\u00e1lvarez": [69, 77, 88], "esteban": [69, 77, 88], "pedro": [69, 77, 88], "744": [69, 77, 88], "geometricbar": 69, "alldistribt": 69, "geometricmean": 69, "jcpot_barycent": 69, "lambda_k": 69, "gamma_k": 69, "_n": 69, "th": [69, 70, 81, 83], "relat": [69, 76, 88, 89, 90], "n_k": 69, "unknown": 69, "nsk": 69, "control": [69, 71, 76], "devi": [69, 71], "projc": 69, "constrint": 69, "projr": 69, "maxfun": 69, "pgtol": 69, "written": [69, 77], "u_i": 69, "ldot": 69, "v_j": 69, "regularis": 69, "bfg": [69, 83, 85, 89], "lbfg": 69, "final": [69, 77, 89, 90], "accuraci": 69, "gain": [69, 90], "isn": 69, "epsilon0": 69, "print_period": 69, "decreas": [69, 71], "tabl": 69, "m0": 69, "h0": 69, "reg0": 69, "dh": 69, "m_0": 69, "_0": [69, 86], "n_atom": 69, "dim_prior": 69, "trust": [69, 73], "nakhostin": [69, 88], "corpetti": [69, 88], "planetari": [69, 88], "workshop": [69, 71, 88, 89], "hyperspectr": [69, 88], "signal": [69, 88, 89], "remot": [69, 88], "whisper": [69, 88], "wx_samp": 70, "wx_feat": 70, "wy_feat": 70, "m_samp": 70, "m_feat": 70, "nits_bcd": 70, "tol_bcd": 70, "eval_bcd": 70, "nits_ot": 70, "tol_sinkhorn": 70, "method_sinkhorn": 70, "early_stopping_tol": 70, "xf": 70, "yf": 70, "alpha_": 70, "alpha_f": 70, "varepsilon_": 70, "varepsilon_f": 70, "n_sample_x": 70, "n_feature_x": 70, "n_sample_i": 70, "n_feature_i": 70, "kei": [70, 76], "duals_sampl": 70, "duals_featur": 70, "whose": [70, 76, 77, 81], "bcd": [70, 71, 76], "scheme": 70, "previou": [70, 81], "multipli": [70, 86], "earli": [70, 90], "pi_samp": 70, "pi_feat": 70, "pair": [70, 86], "ny_sampstem": 70, "alpha_1": 70, "alpha_2": 70, "varepsilon_1": 70, "varepsilon_2": 70, "distribution_estimation_uniform": 71, "emd_laplac": 71, "knn": 71, "sim_param": 71, "n_": 71, "s_i": 71, "s_j": 71, "n_t": 71, "t_i": 71, "t_j": 71, "neighbor": 71, "bandwidth": 71, "otml": [71, 88, 89], "joint_ot_mapping_kernel": [71, 89], "kerneltyp": 71, "verbose2": 71, "nonlinear": [71, 89], "2_f": 71, "2_": 71, "jointli": 71, "constant": [71, 76, 77], "supplementari": 71, "materi": 71, "joint_ot_mapping_linear": [71, 89], "neutral": 71, "sinkhorn_l1l2_gl": [71, 89], "keyword": [71, 86], "store": 71, "transform_label": 71, "inverse_transform_label": 71, "y_t": 71, "unlabel": [71, 79, 88, 89], "transp_x": 71, "transp_xt": 71, "propag": 71, "transp_i": 71, "soft": 71, "nb_class": 71, "similarity_param": 71, "max_inner_it": 71, "inner_tol": 71, "distribution_estim": 71, "out_of_sample_map": 71, "disp": 71, "occur": [71, 89], "kind": [71, 77, 89], "emploi": 71, "limit_max": 71, "10e": 71, "n_class": 71, "858": 71, "nk_source_sampl": 71, "sigma_": [71, 75], "sigma_t": [71, 75], "remark": [71, 75, 89], "daigon": 71, "covari": [71, 72, 75, 89], "knott": [71, 75, 88, 89], "smith": [71, 75, 88, 89], "theori": [71, 75, 88, 89], "1984": [71, 75, 88, 89], "mapping_": 71, "lpl1": 71, "infti": 71, "unbalancedsinkhorntransport": 71, "classif": 72, "reduct": [73, 88, 90], "fisher": [73, 79, 89], "ridg": 73, "proj": [73, 82], "projection_robust_wasserstein": 73, "u0": 73, "max_": [73, 81, 83, 84], "pi_": 73, "stiefel": [73, 89], "stepsiz": 73, "riemannian": [73, 88, 89], "ma": [73, 88, 89], "lai": [73, 88, 89], "split_class": 73, "split": 73, "sinkhorn_method": 73, "limits_i": 73, "limits_": 73, "neq": [73, 89], "steepest": 73, "trustregion": 73, "region": 73, "wasserstaiun": 73, "1608": [73, 88, 89], "08063": [73, 88, 89], "bures_wasserstein_dist": 75, "ct": 75, "bure": [75, 90], "lvert": 75, "_t": 75, "rvert": 75, "tr": 75, "bures_wasserstein_map": [75, 89], "empirical_bures_wasserstein_dist": 75, "gw_distance_estim": 76, "nb_samples_p": 76, "nb_samples_q": 76, "unbias": 76, "csr": 76, "replac": [76, 89, 90], "sebban": 76, "mlj": 76, "entropic_fused_gromov_barycent": 76, "init_i": 76, "y_1": 76, "y_2": 76, "necessarili": 76, "asymetr": 76, "recommand": 76, "correcli": 76, "Such": 76, "suggest": 76, "entropic_fused_gromov_wasserstein2": 76, "entropic_gromov_barycent": [76, 89], "entropic_gromov_wasserstein2": 76, "howev": [76, 89], "yet": [76, 89, 90], "entropic_semirelaxed_fused_gromov_wasserstein2": 76, "mirror": 76, "geometri": 76, "entropic_semirelaxed_gromov_wasserstein2": 76, "fixed_structur": 76, "fixed_featur": 76, "init_x": 76, "eq": [76, 83], "cdict_init": 76, "ydict_init": 76, "fgw_": 76, "_d": 76, "distibut": 76, "cdict": 76, "ydict": 76, "randomli": 76, "nonneg": 76, "strategi": 76, "consecut": 76, "cdict_best_st": 76, "compos": 76, "ydict_best_st": 76, "w_d": 76, "emb": 76, "depict": 76, "span": [76, 77], "current_loss": 76, "gw_2": 76, "gwggrad": 76, "constc": 76, "hc1": 76, "hc2": 76, "proposit": [76, 83, 84], "h1": 76, "gwloss": 76, "init_matrix": 76, "otim": 76, "read": [76, 88], "f_1": 76, "h_1": 76, "2b": 76, "init_matrix_semirelax": 76, "anymor": 76, "fc2t": 76, "threshold_plan": 76, "frank": 76, "wolf": 76, "_iter": 76, "pn": 76, "delet": [76, 81], "violat": [76, 77, 89], "nb_samples_grad": 76, "semirelaxed_fused_gromov_wasserstein2": 76, "semirelaxed_gromov_wasserstein2": 76, "solve_gromov_linesearch": [76, 78], "deltag": 76, "cost_g": 76, "alpha_min": [76, 78], "alpha_max": [76, 78], "fw": 76, "fc": [76, 78], "useless": [76, 90], "solve_semirelaxed_gromov_linesearch": [76, 78], "ones_p": 76, "tensor_product": 76, "ten": 76, "update_feature_matrix": 76, "update_kl_loss": 76, "update_square_loss": 76, "alpha0": [77, 78], "beta0": 77, "below": [77, 88, 90], "basic": 77, "alpha_0": 77, "beta_0": 77, "check_number_thread": 77, "request": [77, 82, 88], "valid": 77, "estimate_dual_null_weight": 77, "rather": 77, "coars": 77, "emd_c": 77, "amount": [77, 79, 89, 90], "max_j": 77, "max_i": 77, "beta_j": [77, 83], "y_init": 77, "nu_i": 77, "b_l": 77, "y_l": 77, "a_": 77, "d_i": 77, "p_i": 77, "p_ix_": 77, "rightarrow": 77, "don": 77, "ill": 77, "anywai": 77, "cvxopt": [77, 89, 90], "glpk": 77, "mosek": 77, "agueh": [77, 88, 89], "904": [77, 88, 89], "924": [77, 88, 89], "line_search": 78, "line_search_armijo": [78, 90], "reg_1": 78, "reg_2": 78, "generic_conditional_gradi": 78, "lp_solver": 78, "lp_semi_relaxed_ot": 78, "gcg_linesearch": 78, "xk": 78, "pk": 78, "gfk": 78, "old_fval": 78, "x_k": 78, "p_k": 78, "fa": 78, "const": 78, "semirelaxed_cg": 78, "solve_1d_linesearch_quad": 78, "bx": 78, "entropic_partial_gromov_wasserstein2": 79, "gwgrad_parti": 79, "n_p": 79, "n_u": 79, "nb_dummi": 79, "gwloss_parti": 79, "thre": 79, "costfr": 79, "dummi": [79, 90], "instabl": 79, "popul": 79, "partial_gromov_wasserstein2": 79, "especi": [79, 89], "smoother": 79, "repartit": 79, "reservoir": [79, 89], "caffarelli": [79, 88, 89], "mccann": [79, 88, 89], "boundari": [79, 88, 89], "amper": [79, 88, 89], "obstacl": [79, 88, 89], "annal": [79, 88, 89], "673": [79, 88, 89], "partial_wasserstein_lagrang": 79, "partial_wasserstein2": [79, 89], "rao": 79, "tune": 79, "shown": [80, 89], "na": 80, "thr": 80, "noth": 80, "complement_schur": 81, "m_current": 81, "id_pop": 81, "schur": 81, "complement": 81, "aris": 81, "bmatrix": 81, "m_k": 81, "h_a": 81, "th_a": 81, "backslash": 81, "r_": 81, "depriv": 81, "compute_next_remov": 81, "current_gamma": 81, "largest": 81, "vanish": [81, 89], "phi_j": 81, "delta_j": 81, "intercept": 81, "slope": 81, "next_removal_gamma": 81, "next_removal_index": 81, "gamma_list": 81, "pi_list": 81, "piecewis": 81, "flatten": 81, "19722222": 81, "05555556": 81, "24722222": 81, "construct_augmented_h": 81, "active_index": 81, "hc": 81, "hrhr": 81, "augment": 81, "_h": 81, "h_": 81, "h_r": 81, "h_c": 81, "h_augment": 81, "fully_relaxed_path": 81, "itmax": 81, "reformul": 81, "min_t": 81, "99958333e": 81, "00000000e": 81, "88888889e": 81, "99938889e": 81, "ot_next_gamma": 81, "hth": 81, "hty": 81, "inact": 81, "next_gamma": 81, "next_active_index": 81, "recast_ot_as_lasso": 81, "recast": 81, "1_m": 81, "1_n": 81, "particularli": [81, 89], "uot2": 81, "recast_semi_relaxed_as_lasso": 81, "hr": 81, "auxiliari": 81, "constitut": 81, "semi_relaxed_next_gamma": 81, "phi_u": 81, "delta_u": 81, "hra": 81, "ri": 81, "ra": 81, "ith": 81, "lagrang": [81, 86], "semi_relaxed_path": 81, "99980556e": 81, "94444444e": 81, "get_random_project": 82, "unit": [82, 89], "ue": 82, "proc": 83, "1710": 83, "06276": 83, "mblondel": 83, "liu": [83, 88], "puigcerv": [83, 88], "eleventh": [83, 88], "2209": 83, "15466": 83, "dual_obj_grad": 83, "regul": 83, "delta_omega": 83, "grad_alpha": 83, "grad_beta": 83, "get_plan_from_du": 83, "retriev": 83, "get_plan_from_semi_du": 83, "projection_simplex": 83, "substack": [83, 86], "z_i": [83, 86], "z_j": [83, 86], "semi_dual_obj_grad": 83, "max_omega": 83, "decent": 83, "nbb": 83, "nonzero": 83, "sinhorn": 83, "smooth_ot_semi_du": [83, 89], "solve_du": 83, "solve_semi_du": 83, "negentropi": 83, "sup_": 83, "nabla": 83, "intend": 83, "appar": 83, "sparsityconstrain": 83, "squaredl2": 83, "averaged_sgd_entropic_transport": 84, "300000": 84, "contin": 84, "alg": 84, "ave_v": 84, "_refer": 84, "batch_grad_du": 84, "batch_alpha": 84, "batch_beta": 84, "partial_": 84, "b_": 84, "l_v": 84, "b_v": 84, "l_u": 84, "b_u": 84, "c_transform_entrop": 84, "coordinate_grad_semi_du": 84, "bewar": 84, "dual_loss": 84, "sag_entropic_transport": 84, "sgd_entropic_regular": 84, "barycenter_unbalanced_sinkhorn": 85, "barycenter_unbalanced_stabil": [85, 89], "absorpt": 85, "lbfgsb_unbalanc": 85, "reg_div": 85, "regm_div": 85, "div_m": 85, "quantifi": 85, "mm_unbalanced2": 85, "b_i": 85, "check_param": 86, "miss": 86, "check_random_st": 86, "turn": 86, "singleton": 86, "alreadi": [86, 89, 90], "valueerror": 86, "clean_zero": [86, 90], "compon": [86, 89], "cost_norm": [86, 90], "loglog": 86, "lin_squar": 86, "euclidean_dist": 86, "n_samples_1": 86, "n_samples_2": 86, "ambient": 86, "y1": 86, "label_norm": 86, "smallest": 86, "lst": 86, "parmap": 86, "nproc": 86, "multiprocess": 86, "closest": 86, "orthogon": 86, "projection_sparse_simplex": [86, 90], "anastasio": 86, "kyrillidi": 86, "stephen": 86, "becker": 86, "volkan": 86, "cevher": 86, "christoph": 86, "koch": 86, "1206": 86, "1529": 86, "get_param": 86, "deep": 86, "subobject": 86, "param": 86, "set_param": 86, "nest": 86, "pipelin": 86, "latter": 86, "__": 86, "sparse_plan": 86, "lazy_plan": 86, "a_to_b": 86, "b_to_a": 86, "citat": 86, "plain": 86, "bibtex": [86, 88], "symbol": 86, "keop": 86, "lazytensor": 86, "marginal_a": 86, "marginal_b": 86, "potential_a": 86, "potential_b": 86, "extra": 86, "decor": 86, "mark": 86, "blob": 86, "instanti": [86, 90], "parenthes": 86, "some_funct": 86, "undefinedparamet": 86, "undefin": 86, "ransport": 87, "sever": [88, 89, 90], "websit": 88, "jmlr": [88, 90], "aur\u00e9li": 88, "nemo": 88, "fournier": 88, "antoni": 88, "schutz": 88, "danica": 88, "sutherland": 88, "alexand": 88, "tong": 88, "articl": 88, "flamary2021pot": 88, "mi": 88, "aur": 88, "lie": [88, 89], "year": [88, 89, 90], "volum": 88, "url": 88, "v22": 88, "451": 88, "linux": [88, 90], "macosx": [88, 90], "window": [88, 90], "cython": [88, 89, 90], "latest": 88, "archiv": 88, "abl": 88, "easier": [88, 89], "wd": 88, "wd_reg": 88, "t_reg": [88, 89], "ba": 88, "question": 88, "slack": 88, "channel": 88, "gitter": 88, "bug": [88, 90], "2292": [88, 89], "2300": [88, 89], "36th": [88, 89], "38th": [88, 89], "pointer": [89, 90], "concret": 89, "book": 89, "ml": 89, "gaspard": 89, "1781": 89, "move": [89, 90], "overal": 89, "difficult": 89, "kantorovitch": 89, "aspect": [89, 90], "share": 89, "disjoint": 89, "favor": 89, "popular": 89, "jensen": 89, "shannon": 89, "meaning": 89, "becam": 89, "overcom": 89, "spectra": 89, "itself": 89, "criterion": [89, 90], "context": 89, "recent": [89, 90], "rapidli": 89, "grow": 89, "novel": [89, 90], "abil": 89, "extend": 89, "proven": 89, "nearli": 89, "still": [89, 90], "geomloss": 89, "lipschitz": 89, "exactli": 89, "filter": 89, "quit": [89, 90], "known": 89, "affin": 89, "hi": 89, "semin": 89, "strong": 89, "procedur": 89, "slower": 89, "variant": [89, 90], "tu": 89, "kullbach": 89, "similarli": 89, "pure": 89, "speed": [89, 90], "effect": 89, "densifi": 89, "lost": 89, "soon": 89, "_q": 89, "forc": 89, "choic": [89, 90], "major": [89, 90], "long": [89, 90], "w_kw": 89, "mu_k": 89, "b_k": 89, "linprog": 89, "brought": 89, "brenier": 89, "eponym": 89, "theorem": 89, "interfac": 89, "basetransport": [89, 90], "classifi": [89, 90], "xs_map": 89, "inherit": [89, 90], "w_u": 89, "interestingli": 89, "fr\u00e9chet": 89, "w_kw_u": 89, "barycenter_unbalanced_sinkhorn_unbalanc": 89, "surplu": 89, "resolut": 89, "c1_": 89, "c2_": 89, "realign": 89, "ck": 89, "fusion": 89, "coin": 89, "partli": 89, "linearli": 89, "projector": 89, "min_p": 89, "mu_j": 89, "hard": [89, 90], "seamlessli": [89, 90], "en": 89, "incur": 89, "far": 89, "longer": 89, "hopefulli": [89, 90], "disappear": 89, "becom": 89, "fulli": [89, 90], "importerror": 89, "shortli": 89, "readm": [89, 90], "tri": [89, 90], "quicker": [89, 90], "configur": 89, "nterpol": 89, "cc": 89, "9386": 89, "www": 89, "toronto": 89, "annals2010": 89, "2002": 89, "08276": 89, "483": 90, "463": 90, "459": 90, "473": 90, "472": 90, "maco": 90, "484": 90, "_gw": 90, "_bregman": 90, "_semirelax": 90, "redirector": 90, "codecov": 90, "457": 90, "cleanup": 90, "462": 90, "467": 90, "475": 90, "wasserstein2": 90, "466": 90, "468": 90, "471": 90, "rp": 90, "474": 90, "decid": 90, "bring": 90, "431": 90, "happi": 90, "began": 90, "unifi": 90, "behind": 90, "facilit": 90, "explor": 90, "just": 90, "old": 90, "sol": 90, "ot_loss": 90, "ot_loss_linear": 90, "sol2": 90, "sol_rkl": 90, "sol_rl2": 90, "sol_ul2": 90, "sol_rkl_ukl": 90, "kickstart": 90, "encourag": 90, "plai": 90, "made": 90, "big": 90, "434": 90, "428": 90, "372": 90, "376": 90, "387": 90, "449": 90, "437": 90, "443": 90, "447": 90, "448": 90, "395": 90, "393": 90, "394": 90, "371": 90, "373": 90, "374": 90, "hit": 90, "stderr": 90, "cerr": 90, "stream": 90, "377": 90, "378": 90, "379": 90, "beyond": 90, "certain": 90, "slightli": 90, "46k": 90, "roughli": 90, "381": 90, "mismatch": 90, "386": 90, "389": 90, "391": 90, "around": 90, "402": 90, "built": 90, "403": 90, "setuptool": 90, "408": 90, "409": 90, "404": 90, "412": 90, "413": 90, "render": 90, "subcal": 90, "421": 90, "422": 90, "break": 90, "try": 90, "424": 90, "425": 90, "444": 90, "445": 90, "446": 90, "notabl": 90, "less": 90, "background": 90, "autodiff": 90, "front": 90, "submodul": 90, "359": 90, "358": 90, "brand": 90, "357": 90, "minigalleri": 90, "336": 90, "341": 90, "319": 90, "362": 90, "364": 90, "363": 90, "valfunct": 90, "337": 90, "338": 90, "abi": 90, "346": 90, "349": 90, "feed": 90, "345": 90, "backpropag": 90, "351": 90, "352": 90, "tag": 90, "332": 90, "global": 90, "namespac": 90, "331": 90, "333": 90, "enabl": 90, "wheel": 90, "older": 90, "realli": 90, "315": 90, "code_of_conduct": 90, "322": 90, "308": 90, "326": 90, "305": 90, "306": 90, "309": 90, "sinkhornl1l2": 90, "311": 90, "313": 90, "317": 90, "3018": 90, "novemb": 90, "nice": 90, "mechan": 90, "moment": 90, "ott": 90, "simplifi": 90, "pyproject": 90, "toml": 90, "aarch64": 90, "raspberri": 90, "android": 90, "phone": 90, "arm": 90, "processor": 90, "softwar": 90, "cite": 90, "improv": 90, "particular": 90, "usual": 90, "peopl": 90, "kamel": 90, "guerda": 90, "ai": 90, "idri": 90, "249": 90, "282": 90, "302": 90, "303": 90, "274": 90, "267": 90, "291": 90, "275": 90, "293": 90, "lazi": 90, "259": 90, "smartphon": 90, "236": 90, "253": 90, "202": 90, "262": 90, "introductori": 90, "leak": 90, "254": 90, "284": 90, "287": 90, "288": 90, "258": 90, "234": 90, "241": 90, "242": 90, "215": 90, "281": 90, "286": 90, "infeas": 90, "217": 90, "201": 90, "207": 90, "208": 90, "296": 90, "flake8": 90, "setup": 90, "flag": 90, "organ": 90, "own": 90, "host": 90, "offer": 90, "readthedoc": 90, "beauti": 90, "huge": 90, "correctli": 90, "travi": 90, "simpler": 90, "laplac": 90, "acknowledg": 90, "231": 90, "232": 90, "bad": 90, "jump": 90, "wild": 90, "state": 90, "fundament": 90, "month": 90, "until": 90, "python3stat": 90, "relev": 90, "64bit": 90, "past": 90, "manylinux": 90, "sep": 90, "among": 90, "rewrit": 90, "unmaintain": 90, "cudamat": 90, "were": 90, "stai": 90, "qualiti": 90, "stuff": 90, "markdown": 90, "pipi": 90, "renam": 90, "compliant": 90, "un": 90, "plug": 90, "unus": 90, "unicodedecodeerror": 90, "ascii": 90, "pytest": 90, "pep": 90, "du": 90, "jul": 90, "reloc": 90, "apr": 90, "jan": 90, "tweak": 90, "nov": 90, "oct": 90}, "objects": {"": [[0, 0, 0, "-", "ot"]], "ot": [[68, 0, 0, "-", "backend"], [0, 3, 1, "", "barycenter"], [0, 3, 1, "", "barycenter_unbalanced"], [0, 3, 1, "", "binary_search_circle"], [69, 0, 0, "-", "bregman"], [70, 0, 0, "-", "coot"], [71, 0, 0, "-", "da"], [72, 0, 0, "-", "datasets"], [0, 3, 1, "", "dist"], [73, 0, 0, "-", "dr"], [0, 3, 1, "", "emd"], [0, 3, 1, "", "emd2"], [0, 3, 1, "", "emd2_1d"], [0, 3, 1, "", "emd_1d"], [74, 0, 0, "-", "factored"], [0, 3, 1, "", "factored_optimal_transport"], [0, 3, 1, "", "fused_gromov_wasserstein"], [0, 3, 1, "", "fused_gromov_wasserstein2"], [75, 0, 0, "-", "gaussian"], [76, 0, 0, "-", "gromov"], [0, 3, 1, "", "gromov_barycenters"], [0, 3, 1, "", "gromov_wasserstein"], [0, 3, 1, "", "gromov_wasserstein2"], [77, 0, 0, "-", "lp"], [0, 3, 1, "", "max_sliced_wasserstein_distance"], [78, 0, 0, "-", "optim"], [79, 0, 0, "-", "partial"], [80, 0, 0, "-", "plot"], [81, 0, 0, "-", "regpath"], [0, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [0, 3, 1, "", "sinkhorn"], [0, 3, 1, "", "sinkhorn2"], [0, 3, 1, "", "sinkhorn_lpl1_mm"], [0, 3, 1, "", "sinkhorn_unbalanced"], [0, 3, 1, "", "sinkhorn_unbalanced2"], [82, 0, 0, "-", "sliced"], [0, 3, 1, "", "sliced_wasserstein_distance"], [0, 3, 1, "", "sliced_wasserstein_sphere"], [0, 3, 1, "", "sliced_wasserstein_sphere_unif"], [83, 0, 0, "-", "smooth"], [0, 3, 1, "", "solve"], [84, 0, 0, "-", "stochastic"], [0, 3, 1, "", "tic"], [0, 3, 1, "", "toc"], [0, 3, 1, "", "toq"], [85, 0, 0, "-", "unbalanced"], [0, 3, 1, "", "unif"], [86, 0, 0, "-", "utils"], [0, 3, 1, "", "wasserstein_1d"], [0, 3, 1, "", "wasserstein_circle"], [87, 0, 0, "-", "weak"], [0, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[68, 1, 1, "id0", "Backend"], [68, 1, 1, "id81", "CupyBackend"], [68, 1, 1, "id160", "JaxBackend"], [68, 1, 1, "id239", "NumpyBackend"], [68, 1, 1, "id318", "TensorflowBackend"], [68, 1, 1, "id397", "TorchBackend"], [68, 3, 1, "id476", "get_backend"], [68, 3, 1, "id477", "get_backend_list"], [68, 3, 1, "id478", "to_numpy"]], "ot.backend.Backend": [[68, 2, 1, "id1", "abs"], [68, 2, 1, "id2", "allclose"], [68, 2, 1, "id3", "any"], [68, 2, 1, "id4", "arange"], [68, 2, 1, "id5", "argmax"], [68, 2, 1, "id6", "argmin"], [68, 2, 1, "id7", "argsort"], [68, 2, 1, "id8", "array_equal"], [68, 2, 1, "id9", "assert_same_dtype_device"], [68, 2, 1, "id10", "atan2"], [68, 2, 1, "id11", "bitsize"], [68, 2, 1, "id12", "clip"], [68, 2, 1, "id13", "concatenate"], [68, 2, 1, "id14", "coo_matrix"], [68, 2, 1, "id15", "copy"], [68, 2, 1, "id16", "cumsum"], [68, 2, 1, "id17", "detach"], [68, 2, 1, "id18", "device_type"], [68, 2, 1, "id19", "diag"], [68, 2, 1, "id20", "dot"], [68, 2, 1, "id21", "dtype_device"], [68, 2, 1, "id22", "einsum"], [68, 2, 1, "id23", "eliminate_zeros"], [68, 2, 1, "id24", "exp"], [68, 2, 1, "id25", "eye"], [68, 2, 1, "id26", "flip"], [68, 2, 1, "id27", "floor"], [68, 2, 1, "id28", "from_numpy"], [68, 2, 1, "id29", "full"], [68, 2, 1, "id30", "inv"], [68, 2, 1, "id31", "is_floating_point"], [68, 2, 1, "id32", "isfinite"], [68, 2, 1, "id33", "isinf"], [68, 2, 1, "id34", "isnan"], [68, 2, 1, "id35", "issparse"], [68, 2, 1, "id36", "kl_div"], [68, 2, 1, "id37", "linspace"], [68, 2, 1, "id38", "log"], [68, 2, 1, "id39", "logsumexp"], [68, 2, 1, "id40", "matmul"], [68, 2, 1, "id41", "max"], [68, 2, 1, "id42", "maximum"], [68, 2, 1, "id43", "mean"], [68, 2, 1, "id44", "median"], [68, 2, 1, "id45", "meshgrid"], [68, 2, 1, "id46", "min"], [68, 2, 1, "id47", "minimum"], [68, 2, 1, "id48", "norm"], [68, 2, 1, "id49", "ones"], [68, 2, 1, "id50", "outer"], [68, 2, 1, "id51", "power"], [68, 2, 1, "id52", "prod"], [68, 2, 1, "id53", "qr"], [68, 2, 1, "id54", "rand"], [68, 2, 1, "id55", "randn"], [68, 2, 1, "id56", "repeat"], [68, 2, 1, "id57", "reshape"], [68, 2, 1, "id58", "searchsorted"], [68, 2, 1, "id59", "seed"], [68, 2, 1, "id60", "set_gradients"], [68, 2, 1, "id61", "solve"], [68, 2, 1, "id62", "sort"], [68, 2, 1, "id63", "sort2"], [68, 2, 1, "id64", "sqrt"], [68, 2, 1, "id65", "sqrtm"], [68, 2, 1, "id66", "squeeze"], [68, 2, 1, "id67", "stack"], [68, 2, 1, "id68", "std"], [68, 2, 1, "id69", "sum"], [68, 2, 1, "id70", "take_along_axis"], [68, 2, 1, "id71", "tile"], [68, 2, 1, "id72", "to_numpy"], [68, 2, 1, "id73", "tocsr"], [68, 2, 1, "id74", "todense"], [68, 2, 1, "id75", "trace"], [68, 2, 1, "id76", "transpose"], [68, 2, 1, "id77", "unique"], [68, 2, 1, "id78", "where"], [68, 2, 1, "id79", "zero_pad"], [68, 2, 1, "id80", "zeros"]], "ot.backend.CupyBackend": [[68, 2, 1, "id82", "abs"], [68, 2, 1, "id83", "allclose"], [68, 2, 1, "id84", "any"], [68, 2, 1, "id85", "arange"], [68, 2, 1, "id86", "argmax"], [68, 2, 1, "id87", "argmin"], [68, 2, 1, "id88", "argsort"], [68, 2, 1, "id89", "array_equal"], [68, 2, 1, "id90", "assert_same_dtype_device"], [68, 2, 1, "id91", "atan2"], [68, 2, 1, "id92", "bitsize"], [68, 2, 1, "id93", "clip"], [68, 2, 1, "id94", "concatenate"], [68, 2, 1, "id95", "coo_matrix"], [68, 2, 1, "id96", "copy"], [68, 2, 1, "id97", "cumsum"], [68, 2, 1, "id98", "detach"], [68, 2, 1, "id99", "device_type"], [68, 2, 1, "id100", "diag"], [68, 2, 1, "id101", "dot"], [68, 2, 1, "id102", "dtype_device"], [68, 2, 1, "id103", "einsum"], [68, 2, 1, "id104", "eliminate_zeros"], [68, 2, 1, "id105", "exp"], [68, 2, 1, "id106", "eye"], [68, 2, 1, "id107", "flip"], [68, 2, 1, "id108", "floor"], [68, 2, 1, "id109", "full"], [68, 2, 1, "id110", "inv"], [68, 2, 1, "id111", "is_floating_point"], [68, 2, 1, "id112", "isfinite"], [68, 2, 1, "id113", "isinf"], [68, 2, 1, "id114", "isnan"], [68, 2, 1, "id115", "issparse"], [68, 2, 1, "id116", "kl_div"], [68, 2, 1, "id117", "linspace"], [68, 2, 1, "id118", "log"], [68, 2, 1, "id119", "logsumexp"], [68, 2, 1, "id120", "matmul"], [68, 2, 1, "id121", "max"], [68, 2, 1, "id122", "maximum"], [68, 2, 1, "id123", "mean"], [68, 2, 1, "id124", "median"], [68, 2, 1, "id125", "meshgrid"], [68, 2, 1, "id126", "min"], [68, 2, 1, "id127", "minimum"], [68, 2, 1, "id128", "norm"], [68, 2, 1, "id129", "ones"], [68, 2, 1, "id130", "outer"], [68, 2, 1, "id131", "power"], [68, 2, 1, "id132", "prod"], [68, 2, 1, "id133", "qr"], [68, 2, 1, "id134", "rand"], [68, 2, 1, "id135", "randn"], [68, 2, 1, "id136", "repeat"], [68, 2, 1, "id137", "reshape"], [68, 2, 1, "id138", "searchsorted"], [68, 2, 1, "id139", "seed"], [68, 2, 1, "id140", "set_gradients"], [68, 2, 1, "id141", "solve"], [68, 2, 1, "id142", "sort"], [68, 2, 1, "id143", "sort2"], [68, 2, 1, "id144", "sqrt"], [68, 2, 1, "id145", "sqrtm"], [68, 2, 1, "id146", "squeeze"], [68, 2, 1, "id147", "stack"], [68, 2, 1, "id148", "std"], [68, 2, 1, "id149", "sum"], [68, 2, 1, "id150", "take_along_axis"], [68, 2, 1, "id151", "tile"], [68, 2, 1, "id152", "tocsr"], [68, 2, 1, "id153", "todense"], [68, 2, 1, "id154", "trace"], [68, 2, 1, "id155", "transpose"], [68, 2, 1, "id156", "unique"], [68, 2, 1, "id157", "where"], [68, 2, 1, "id158", "zero_pad"], [68, 2, 1, "id159", "zeros"]], "ot.backend.JaxBackend": [[68, 2, 1, "id161", "abs"], [68, 2, 1, "id162", "allclose"], [68, 2, 1, "id163", "any"], [68, 2, 1, "id164", "arange"], [68, 2, 1, "id165", "argmax"], [68, 2, 1, "id166", "argmin"], [68, 2, 1, "id167", "argsort"], [68, 2, 1, "id168", "array_equal"], [68, 2, 1, "id169", "assert_same_dtype_device"], [68, 2, 1, "id170", "atan2"], [68, 2, 1, "id171", "bitsize"], [68, 2, 1, "id172", "clip"], [68, 2, 1, "id173", "concatenate"], [68, 2, 1, "id174", "coo_matrix"], [68, 2, 1, "id175", "copy"], [68, 2, 1, "id176", "cumsum"], [68, 2, 1, "id177", "detach"], [68, 2, 1, "id178", "device_type"], [68, 2, 1, "id179", "diag"], [68, 2, 1, "id180", "dot"], [68, 2, 1, "id181", "dtype_device"], [68, 2, 1, "id182", "einsum"], [68, 2, 1, "id183", "eliminate_zeros"], [68, 2, 1, "id184", "exp"], [68, 2, 1, "id185", "eye"], [68, 2, 1, "id186", "flip"], [68, 2, 1, "id187", "floor"], [68, 2, 1, "id188", "full"], [68, 2, 1, "id189", "inv"], [68, 2, 1, "id190", "is_floating_point"], [68, 2, 1, "id191", "isfinite"], [68, 2, 1, "id192", "isinf"], [68, 2, 1, "id193", "isnan"], [68, 2, 1, "id194", "issparse"], [68, 2, 1, "id195", "kl_div"], [68, 2, 1, "id196", "linspace"], [68, 2, 1, "id197", "log"], [68, 2, 1, "id198", "logsumexp"], [68, 2, 1, "id199", "matmul"], [68, 2, 1, "id200", "max"], [68, 2, 1, "id201", "maximum"], [68, 2, 1, "id202", "mean"], [68, 2, 1, "id203", "median"], [68, 2, 1, "id204", "meshgrid"], [68, 2, 1, "id205", "min"], [68, 2, 1, "id206", "minimum"], [68, 2, 1, "id207", "norm"], [68, 2, 1, "id208", "ones"], [68, 2, 1, "id209", "outer"], [68, 2, 1, "id210", "power"], [68, 2, 1, "id211", "prod"], [68, 2, 1, "id212", "qr"], [68, 2, 1, "id213", "rand"], [68, 2, 1, "id214", "randn"], [68, 2, 1, "id215", "repeat"], [68, 2, 1, "id216", "reshape"], [68, 2, 1, "id217", "searchsorted"], [68, 2, 1, "id218", "seed"], [68, 2, 1, "id219", "set_gradients"], [68, 2, 1, "id220", "solve"], [68, 2, 1, "id221", "sort"], [68, 2, 1, "id222", "sort2"], [68, 2, 1, "id223", "sqrt"], [68, 2, 1, "id224", "sqrtm"], [68, 2, 1, "id225", "squeeze"], [68, 2, 1, "id226", "stack"], [68, 2, 1, "id227", "std"], [68, 2, 1, "id228", "sum"], [68, 2, 1, "id229", "take_along_axis"], [68, 2, 1, "id230", "tile"], [68, 2, 1, "id231", "tocsr"], [68, 2, 1, "id232", "todense"], [68, 2, 1, "id233", "trace"], [68, 2, 1, "id234", "transpose"], [68, 2, 1, "id235", "unique"], [68, 2, 1, "id236", "where"], [68, 2, 1, "id237", "zero_pad"], [68, 2, 1, "id238", "zeros"]], "ot.backend.NumpyBackend": [[68, 2, 1, "id240", "abs"], [68, 2, 1, "id241", "allclose"], [68, 2, 1, "id242", "any"], [68, 2, 1, "id243", "arange"], [68, 2, 1, "id244", "argmax"], [68, 2, 1, "id245", "argmin"], [68, 2, 1, "id246", "argsort"], [68, 2, 1, "id247", "array_equal"], [68, 2, 1, "id248", "assert_same_dtype_device"], [68, 2, 1, "id249", "atan2"], [68, 2, 1, "id250", "bitsize"], [68, 2, 1, "id251", "clip"], [68, 2, 1, "id252", "concatenate"], [68, 2, 1, "id253", "coo_matrix"], [68, 2, 1, "id254", "copy"], [68, 2, 1, "id255", "cumsum"], [68, 2, 1, "id256", "detach"], [68, 2, 1, "id257", "device_type"], [68, 2, 1, "id258", "diag"], [68, 2, 1, "id259", "dot"], [68, 2, 1, "id260", "dtype_device"], [68, 2, 1, "id261", "einsum"], [68, 2, 1, "id262", "eliminate_zeros"], [68, 2, 1, "id263", "exp"], [68, 2, 1, "id264", "eye"], [68, 2, 1, "id265", "flip"], [68, 2, 1, "id266", "floor"], [68, 2, 1, "id267", "full"], [68, 2, 1, "id268", "inv"], [68, 2, 1, "id269", "is_floating_point"], [68, 2, 1, "id270", "isfinite"], [68, 2, 1, "id271", "isinf"], [68, 2, 1, "id272", "isnan"], [68, 2, 1, "id273", "issparse"], [68, 2, 1, "id274", "kl_div"], [68, 2, 1, "id275", "linspace"], [68, 2, 1, "id276", "log"], [68, 2, 1, "id277", "logsumexp"], [68, 2, 1, "id278", "matmul"], [68, 2, 1, "id279", "max"], [68, 2, 1, "id280", "maximum"], [68, 2, 1, "id281", "mean"], [68, 2, 1, "id282", "median"], [68, 2, 1, "id283", "meshgrid"], [68, 2, 1, "id284", "min"], [68, 2, 1, "id285", "minimum"], [68, 2, 1, "id286", "norm"], [68, 2, 1, "id287", "ones"], [68, 2, 1, "id288", "outer"], [68, 2, 1, "id289", "power"], [68, 2, 1, "id290", "prod"], [68, 2, 1, "id291", "qr"], [68, 2, 1, "id292", "rand"], [68, 2, 1, "id293", "randn"], [68, 2, 1, "id294", "repeat"], [68, 2, 1, "id295", "reshape"], [68, 2, 1, "id296", "searchsorted"], [68, 2, 1, "id297", "seed"], [68, 2, 1, "id298", "set_gradients"], [68, 2, 1, "id299", "solve"], [68, 2, 1, "id300", "sort"], [68, 2, 1, "id301", "sort2"], [68, 2, 1, "id302", "sqrt"], [68, 2, 1, "id303", "sqrtm"], [68, 2, 1, "id304", "squeeze"], [68, 2, 1, "id305", "stack"], [68, 2, 1, "id306", "std"], [68, 2, 1, "id307", "sum"], [68, 2, 1, "id308", "take_along_axis"], [68, 2, 1, "id309", "tile"], [68, 2, 1, "id310", "tocsr"], [68, 2, 1, "id311", "todense"], [68, 2, 1, "id312", "trace"], [68, 2, 1, "id313", "transpose"], [68, 2, 1, "id314", "unique"], [68, 2, 1, "id315", "where"], [68, 2, 1, "id316", "zero_pad"], [68, 2, 1, "id317", "zeros"]], "ot.backend.TensorflowBackend": [[68, 2, 1, "id319", "abs"], [68, 2, 1, "id320", "allclose"], [68, 2, 1, "id321", "any"], [68, 2, 1, "id322", "arange"], [68, 2, 1, "id323", "argmax"], [68, 2, 1, "id324", "argmin"], [68, 2, 1, "id325", "argsort"], [68, 2, 1, "id326", "array_equal"], [68, 2, 1, "id327", "assert_same_dtype_device"], [68, 2, 1, "id328", "atan2"], [68, 2, 1, "id329", "bitsize"], [68, 2, 1, "id330", "clip"], [68, 2, 1, "id331", "concatenate"], [68, 2, 1, "id332", "coo_matrix"], [68, 2, 1, "id333", "copy"], [68, 2, 1, "id334", "cumsum"], [68, 2, 1, "id335", "detach"], [68, 2, 1, "id336", "device_type"], [68, 2, 1, "id337", "diag"], [68, 2, 1, "id338", "dot"], [68, 2, 1, "id339", "dtype_device"], [68, 2, 1, "id340", "einsum"], [68, 2, 1, "id341", "eliminate_zeros"], [68, 2, 1, "id342", "exp"], [68, 2, 1, "id343", "eye"], [68, 2, 1, "id344", "flip"], [68, 2, 1, "id345", "floor"], [68, 2, 1, "id346", "full"], [68, 2, 1, "id347", "inv"], [68, 2, 1, "id348", "is_floating_point"], [68, 2, 1, "id349", "isfinite"], [68, 2, 1, "id350", "isinf"], [68, 2, 1, "id351", "isnan"], [68, 2, 1, "id352", "issparse"], [68, 2, 1, "id353", "kl_div"], [68, 2, 1, "id354", "linspace"], [68, 2, 1, "id355", "log"], [68, 2, 1, "id356", "logsumexp"], [68, 2, 1, "id357", "matmul"], [68, 2, 1, "id358", "max"], [68, 2, 1, "id359", "maximum"], [68, 2, 1, "id360", "mean"], [68, 2, 1, "id361", "median"], [68, 2, 1, "id362", "meshgrid"], [68, 2, 1, "id363", "min"], [68, 2, 1, "id364", "minimum"], [68, 2, 1, "id365", "norm"], [68, 2, 1, "id366", "ones"], [68, 2, 1, "id367", "outer"], [68, 2, 1, "id368", "power"], [68, 2, 1, "id369", "prod"], [68, 2, 1, "id370", "qr"], [68, 2, 1, "id371", "rand"], [68, 2, 1, "id372", "randn"], [68, 2, 1, "id373", "repeat"], [68, 2, 1, "id374", "reshape"], [68, 2, 1, "id375", "searchsorted"], [68, 2, 1, "id376", "seed"], [68, 2, 1, "id377", "set_gradients"], [68, 2, 1, "id378", "solve"], [68, 2, 1, "id379", "sort"], [68, 2, 1, "id380", "sort2"], [68, 2, 1, "id381", "sqrt"], [68, 2, 1, "id382", "sqrtm"], [68, 2, 1, "id383", "squeeze"], [68, 2, 1, "id384", "stack"], [68, 2, 1, "id385", "std"], [68, 2, 1, "id386", "sum"], [68, 2, 1, "id387", "take_along_axis"], [68, 2, 1, "id388", "tile"], [68, 2, 1, "id389", "tocsr"], [68, 2, 1, "id390", "todense"], [68, 2, 1, "id391", "trace"], [68, 2, 1, "id392", "transpose"], [68, 2, 1, "id393", "unique"], [68, 2, 1, "id394", "where"], [68, 2, 1, "id395", "zero_pad"], [68, 2, 1, "id396", "zeros"]], "ot.backend.TorchBackend": [[68, 2, 1, "id398", "abs"], [68, 2, 1, "id399", "allclose"], [68, 2, 1, "id400", "any"], [68, 2, 1, "id401", "arange"], [68, 2, 1, "id402", "argmax"], [68, 2, 1, "id403", "argmin"], [68, 2, 1, "id404", "argsort"], [68, 2, 1, "id405", "array_equal"], [68, 2, 1, "id406", "assert_same_dtype_device"], [68, 2, 1, "id407", "atan2"], [68, 2, 1, "id408", "bitsize"], [68, 2, 1, "id409", "clip"], [68, 2, 1, "id410", "concatenate"], [68, 2, 1, "id411", "coo_matrix"], [68, 2, 1, "id412", "copy"], [68, 2, 1, "id413", "cumsum"], [68, 2, 1, "id414", "detach"], [68, 2, 1, "id415", "device_type"], [68, 2, 1, "id416", "diag"], [68, 2, 1, "id417", "dot"], [68, 2, 1, "id418", "dtype_device"], [68, 2, 1, "id419", "einsum"], [68, 2, 1, "id420", "eliminate_zeros"], [68, 2, 1, "id421", "exp"], [68, 2, 1, "id422", "eye"], [68, 2, 1, "id423", "flip"], [68, 2, 1, "id424", "floor"], [68, 2, 1, "id425", "full"], [68, 2, 1, "id426", "inv"], [68, 2, 1, "id427", "is_floating_point"], [68, 2, 1, "id428", "isfinite"], [68, 2, 1, "id429", "isinf"], [68, 2, 1, "id430", "isnan"], [68, 2, 1, "id431", "issparse"], [68, 2, 1, "id432", "kl_div"], [68, 2, 1, "id433", "linspace"], [68, 2, 1, "id434", "log"], [68, 2, 1, "id435", "logsumexp"], [68, 2, 1, "id436", "matmul"], [68, 2, 1, "id437", "max"], [68, 2, 1, "id438", "maximum"], [68, 2, 1, "id439", "mean"], [68, 2, 1, "id440", "median"], [68, 2, 1, "id441", "meshgrid"], [68, 2, 1, "id442", "min"], [68, 2, 1, "id443", "minimum"], [68, 2, 1, "id444", "norm"], [68, 2, 1, "id445", "ones"], [68, 2, 1, "id446", "outer"], [68, 2, 1, "id447", "power"], [68, 2, 1, "id448", "prod"], [68, 2, 1, "id449", "qr"], [68, 2, 1, "id450", "rand"], [68, 2, 1, "id451", "randn"], [68, 2, 1, "id452", "repeat"], [68, 2, 1, "id453", "reshape"], [68, 2, 1, "id454", "searchsorted"], [68, 2, 1, "id455", "seed"], [68, 2, 1, "id456", "set_gradients"], [68, 2, 1, "id457", "solve"], [68, 2, 1, "id458", "sort"], [68, 2, 1, "id459", "sort2"], [68, 2, 1, "id460", "sqrt"], [68, 2, 1, "id461", "sqrtm"], [68, 2, 1, "id462", "squeeze"], [68, 2, 1, "id463", "stack"], [68, 2, 1, "id464", "std"], [68, 2, 1, "id465", "sum"], [68, 2, 1, "id466", "take_along_axis"], [68, 2, 1, "id467", "tile"], [68, 2, 1, "id468", "tocsr"], [68, 2, 1, "id469", "todense"], [68, 2, 1, "id470", "trace"], [68, 2, 1, "id471", "transpose"], [68, 2, 1, "id472", "unique"], [68, 2, 1, "id473", "where"], [68, 2, 1, "id474", "zero_pad"], [68, 2, 1, "id475", "zeros"]], "ot.bregman": [[69, 3, 1, "id0", "barycenter"], [69, 3, 1, "id43", "barycenter_debiased"], [69, 3, 1, "id46", "barycenter_sinkhorn"], [69, 3, 1, "id49", "barycenter_stabilized"], [69, 3, 1, "id52", "convolutional_barycenter2d"], [69, 3, 1, "id56", "convolutional_barycenter2d_debiased"], [69, 3, 1, "id59", "empirical_sinkhorn"], [69, 3, 1, "id63", "empirical_sinkhorn2"], [69, 3, 1, "id67", "empirical_sinkhorn_divergence"], [69, 3, 1, "id69", "free_support_sinkhorn_barycenter"], [69, 3, 1, "id72", "geometricBar"], [69, 3, 1, "id73", "geometricMean"], [69, 3, 1, "id74", "greenkhorn"], [69, 3, 1, "id78", "jcpot_barycenter"], [69, 3, 1, "id81", "projC"], [69, 3, 1, "id82", "projR"], [69, 3, 1, "id83", "screenkhorn"], [69, 3, 1, "id87", "sinkhorn"], [69, 3, 1, "id93", "sinkhorn2"], [69, 3, 1, "id100", "sinkhorn_epsilon_scaling"], [69, 3, 1, "id105", "sinkhorn_knopp"], [69, 3, 1, "id108", "sinkhorn_log"], [69, 3, 1, "id112", "sinkhorn_stabilized"], [69, 3, 1, "id117", "unmix"]], "ot.coot": [[70, 3, 1, "id0", "co_optimal_transport"], [70, 3, 1, "id4", "co_optimal_transport2"]], "ot.da": [[71, 1, 1, "id0", "BaseTransport"], [71, 1, 1, "id40", "EMDLaplaceTransport"], [71, 1, 1, "id47", "EMDTransport"], [71, 1, 1, "id53", "JCPOTTransport"], [71, 1, 1, "id66", "LinearTransport"], [71, 1, 1, "id73", "MappingTransport"], [71, 1, 1, "id80", "SinkhornL1l2Transport"], [71, 1, 1, "id88", "SinkhornLpl1Transport"], [71, 1, 1, "id95", "SinkhornTransport"], [71, 1, 1, "id103", "UnbalancedSinkhornTransport"], [71, 3, 1, "id110", "distribution_estimation_uniform"], [71, 3, 1, "id111", "emd_laplace"], [71, 3, 1, "id115", "joint_OT_mapping_kernel"], [71, 3, 1, "id118", "joint_OT_mapping_linear"], [71, 3, 1, "id121", "sinkhorn_l1l2_gl"], [71, 3, 1, "id125", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[71, 2, 1, "id32", "fit"], [71, 2, 1, "id33", "fit_transform"], [71, 2, 1, "id34", "inverse_transform"], [71, 2, 1, "id35", "inverse_transform_labels"], [71, 2, 1, "id36", "transform"], [71, 2, 1, "id37", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[71, 4, 1, "id41", "coupling_"], [71, 2, 1, "id46", "fit"]], "ot.da.EMDTransport": [[71, 4, 1, "id48", "coupling_"], [71, 2, 1, "id52", "fit"]], "ot.da.JCPOTTransport": [[71, 4, 1, "id54", "coupling_"], [71, 2, 1, "id60", "fit"], [71, 2, 1, "id61", "inverse_transform_labels"], [71, 4, 1, "id56", "log_"], [71, 4, 1, "id55", "proportions_"], [71, 2, 1, "id62", "transform"], [71, 2, 1, "id63", "transform_labels"]], "ot.da.LinearTransport": [[71, 2, 1, "id70", "fit"], [71, 2, 1, "id71", "inverse_transform"], [71, 2, 1, "id72", "transform"]], "ot.da.MappingTransport": [[71, 4, 1, "id74", "coupling_"], [71, 2, 1, "id78", "fit"], [71, 4, 1, "id76", "log_"], [71, 4, 1, "id75", "mapping_"], [71, 2, 1, "id79", "transform"]], "ot.da.SinkhornL1l2Transport": [[71, 4, 1, "id81", "coupling_"], [71, 2, 1, "id87", "fit"], [71, 4, 1, "id82", "log_"]], "ot.da.SinkhornLpl1Transport": [[71, 4, 1, "id89", "coupling_"], [71, 2, 1, "id94", "fit"]], "ot.da.SinkhornTransport": [[71, 4, 1, "id96", "coupling_"], [71, 2, 1, "id102", "fit"], [71, 4, 1, "id97", "log_"]], "ot.da.UnbalancedSinkhornTransport": [[71, 4, 1, "id104", "coupling_"], [71, 2, 1, "id109", "fit"], [71, 4, 1, "id105", "log_"]], "ot.datasets": [[72, 3, 1, "id0", "make_1D_gauss"], [72, 3, 1, "id1", "make_2D_samples_gauss"], [72, 3, 1, "id2", "make_data_classif"]], "ot.dr": [[73, 3, 1, "id0", "dist"], [73, 3, 1, "id3", "fda"], [73, 3, 1, "id4", "logsumexp"], [73, 3, 1, "id5", "projection_robust_wasserstein"], [73, 3, 1, "id8", "sinkhorn"], [73, 3, 1, "id9", "sinkhorn_log"], [73, 3, 1, "id10", "split_classes"], [73, 3, 1, "id11", "wda"]], "ot.factored": [[74, 3, 1, "id0", "factored_optimal_transport"]], "ot.gaussian": [[75, 3, 1, "id0", "bures_wasserstein_distance"], [75, 3, 1, "id11", "bures_wasserstein_mapping"], [75, 3, 1, "id15", "empirical_bures_wasserstein_distance"], [75, 3, 1, "id18", "empirical_bures_wasserstein_mapping"]], "ot.gromov": [[76, 3, 1, "", "GW_distance_estimation"], [76, 3, 1, "", "entropic_fused_gromov_barycenters"], [76, 3, 1, "", "entropic_fused_gromov_wasserstein"], [76, 3, 1, "", "entropic_fused_gromov_wasserstein2"], [76, 3, 1, "", "entropic_gromov_barycenters"], [76, 3, 1, "", "entropic_gromov_wasserstein"], [76, 3, 1, "", "entropic_gromov_wasserstein2"], [76, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein"], [76, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein2"], [76, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein"], [76, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein2"], [76, 3, 1, "", "fgw_barycenters"], [76, 3, 1, "", "fused_gromov_wasserstein"], [76, 3, 1, "", "fused_gromov_wasserstein2"], [76, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [76, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [76, 3, 1, "", "gromov_barycenters"], [76, 3, 1, "", "gromov_wasserstein"], [76, 3, 1, "", "gromov_wasserstein2"], [76, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [76, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [76, 3, 1, "", "gwggrad"], [76, 3, 1, "", "gwloss"], [76, 3, 1, "", "init_matrix"], [76, 3, 1, "", "init_matrix_semirelaxed"], [76, 3, 1, "", "pointwise_gromov_wasserstein"], [76, 3, 1, "", "sampled_gromov_wasserstein"], [76, 3, 1, "", "semirelaxed_fused_gromov_wasserstein"], [76, 3, 1, "", "semirelaxed_fused_gromov_wasserstein2"], [76, 3, 1, "", "semirelaxed_gromov_wasserstein"], [76, 3, 1, "", "semirelaxed_gromov_wasserstein2"], [76, 3, 1, "", "solve_gromov_linesearch"], [76, 3, 1, "", "solve_semirelaxed_gromov_linesearch"], [76, 3, 1, "", "tensor_product"], [76, 3, 1, "", "update_feature_matrix"], [76, 3, 1, "", "update_kl_loss"], [76, 3, 1, "", "update_square_loss"]], "ot.lp": [[77, 3, 1, "", "barycenter"], [77, 3, 1, "", "binary_search_circle"], [77, 3, 1, "", "center_ot_dual"], [77, 3, 1, "", "check_number_threads"], [77, 3, 1, "id0", "emd"], [77, 3, 1, "id11", "emd2"], [77, 3, 1, "", "emd2_1d"], [77, 3, 1, "", "emd_1d"], [77, 3, 1, "", "estimate_dual_null_weights"], [77, 3, 1, "id18", "free_support_barycenter"], [77, 3, 1, "id22", "generalized_free_support_barycenter"], [77, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [77, 3, 1, "", "wasserstein_1d"], [77, 3, 1, "", "wasserstein_circle"]], "ot.optim": [[78, 3, 1, "id0", "cg"], [78, 3, 1, "id13", "gcg"], [78, 3, 1, "id17", "generic_conditional_gradient"], [78, 3, 1, "id23", "line_search_armijo"], [78, 3, 1, "id24", "semirelaxed_cg"], [78, 3, 1, "id27", "solve_1d_linesearch_quad"]], "ot.partial": [[79, 3, 1, "id0", "entropic_partial_gromov_wasserstein"], [79, 3, 1, "id17", "entropic_partial_gromov_wasserstein2"], [79, 3, 1, "id21", "entropic_partial_wasserstein"], [79, 3, 1, "id24", "gwgrad_partial"], [79, 3, 1, "id27", "gwloss_partial"], [79, 3, 1, "id28", "partial_gromov_wasserstein"], [79, 3, 1, "id31", "partial_gromov_wasserstein2"], [79, 3, 1, "id34", "partial_wasserstein"], [79, 3, 1, "id37", "partial_wasserstein2"], [79, 3, 1, "id40", "partial_wasserstein_lagrange"]], "ot.plot": [[80, 3, 1, "id0", "plot1D_mat"], [80, 3, 1, "id1", "plot2D_samples_mat"]], "ot.regpath": [[81, 3, 1, "id0", "complement_schur"], [81, 3, 1, "id12", "compute_next_removal"], [81, 3, 1, "id15", "compute_transport_plan"], [81, 3, 1, "id18", "construct_augmented_H"], [81, 3, 1, "id19", "fully_relaxed_path"], [81, 3, 1, "id21", "ot_next_gamma"], [81, 3, 1, "id23", "recast_ot_as_lasso"], [81, 3, 1, "id25", "recast_semi_relaxed_as_lasso"], [81, 3, 1, "id26", "regularization_path"], [81, 3, 1, "id28", "semi_relaxed_next_gamma"], [81, 3, 1, "id30", "semi_relaxed_path"]], "ot.sliced": [[82, 3, 1, "id0", "get_random_projections"], [82, 3, 1, "id5", "max_sliced_wasserstein_distance"], [82, 3, 1, "id7", "sliced_wasserstein_distance"], [82, 3, 1, "id9", "sliced_wasserstein_sphere"], [82, 3, 1, "id11", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[83, 1, 1, "id0", "NegEntropy"], [83, 1, 1, "id10", "Regularization"], [83, 1, 1, "id14", "SparsityConstrained"], [83, 1, 1, "id18", "SquaredL2"], [83, 3, 1, "id22", "dual_obj_grad"], [83, 3, 1, "id23", "get_plan_from_dual"], [83, 3, 1, "id24", "get_plan_from_semi_dual"], [83, 3, 1, "id25", "projection_simplex"], [83, 3, 1, "id26", "semi_dual_obj_grad"], [83, 3, 1, "id27", "smooth_ot_dual"], [83, 3, 1, "id32", "smooth_ot_semi_dual"], [83, 3, 1, "id37", "solve_dual"], [83, 3, 1, "id38", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[83, 2, 1, "id7", "Omega"], [83, 2, 1, "id8", "delta_Omega"], [83, 2, 1, "id9", "max_Omega"]], "ot.smooth.Regularization": [[83, 2, 1, "id11", "Omega"], [83, 2, 1, "id12", "delta_Omega"], [83, 2, 1, "id13", "max_Omega"]], "ot.smooth.SparsityConstrained": [[83, 2, 1, "id15", "Omega"], [83, 2, 1, "id16", "delta_Omega"], [83, 2, 1, "id17", "max_Omega"]], "ot.smooth.SquaredL2": [[83, 2, 1, "id19", "Omega"], [83, 2, 1, "id20", "delta_Omega"], [83, 2, 1, "id21", "max_Omega"]], "ot.stochastic": [[84, 3, 1, "id0", "averaged_sgd_entropic_transport"], [84, 3, 1, "id14", "batch_grad_dual"], [84, 3, 1, "id16", "c_transform_entropic"], [84, 3, 1, "id18", "coordinate_grad_semi_dual"], [84, 3, 1, "id20", "loss_dual_entropic"], [84, 3, 1, "id22", "loss_dual_quadratic"], [84, 3, 1, "id24", "plan_dual_entropic"], [84, 3, 1, "id26", "plan_dual_quadratic"], [84, 3, 1, "id28", "sag_entropic_transport"], [84, 3, 1, "id30", "sgd_entropic_regularization"], [84, 3, 1, "id32", "solve_dual_entropic"], [84, 3, 1, "id34", "solve_semi_dual_entropic"]], "ot.unbalanced": [[85, 3, 1, "id0", "barycenter_unbalanced"], [85, 3, 1, "id25", "barycenter_unbalanced_sinkhorn"], [85, 3, 1, "id29", "barycenter_unbalanced_stabilized"], [85, 3, 1, "id33", "lbfgsb_unbalanced"], [85, 3, 1, "id35", "mm_unbalanced"], [85, 3, 1, "id38", "mm_unbalanced2"], [85, 3, 1, "id40", "sinkhorn_knopp_unbalanced"], [85, 3, 1, "id44", "sinkhorn_stabilized_unbalanced"], [85, 3, 1, "id48", "sinkhorn_unbalanced"], [85, 3, 1, "id54", "sinkhorn_unbalanced2"]], "ot.utils": [[86, 1, 1, "id0", "BaseEstimator"], [86, 1, 1, "", "OTResult"], [86, 6, 1, "", "UndefinedParameter"], [86, 3, 1, "id3", "check_params"], [86, 3, 1, "id4", "check_random_state"], [86, 3, 1, "id5", "clean_zeros"], [86, 3, 1, "id6", "cost_normalization"], [86, 1, 1, "id7", "deprecated"], [86, 3, 1, "id8", "dist"], [86, 3, 1, "id9", "dist0"], [86, 3, 1, "id10", "dots"], [86, 3, 1, "id11", "euclidean_distances"], [86, 3, 1, "id12", "get_coordinate_circle"], [86, 3, 1, "id13", "kernel"], [86, 3, 1, "id14", "label_normalization"], [86, 3, 1, "id15", "laplacian"], [86, 3, 1, "id16", "list_to_array"], [86, 3, 1, "id17", "parmap"], [86, 3, 1, "id18", "proj_simplex"], [86, 3, 1, "id19", "projection_sparse_simplex"], [86, 3, 1, "id20", "tic"], [86, 3, 1, "id21", "toc"], [86, 3, 1, "id22", "toq"], [86, 3, 1, "id23", "unif"]], "ot.utils.BaseEstimator": [[86, 2, 1, "id1", "get_params"], [86, 2, 1, "id2", "set_params"]], "ot.utils.OTResult": [[86, 5, 1, "", "a_to_b"], [86, 5, 1, "", "b_to_a"], [86, 5, 1, "", "citation"], [86, 5, 1, "", "lazy_plan"], [86, 5, 1, "", "marginal_a"], [86, 5, 1, "", "marginal_b"], [86, 5, 1, "", "marginals"], [86, 5, 1, "", "plan"], [86, 5, 1, "", "potential_a"], [86, 5, 1, "", "potential_b"], [86, 5, 1, "", "potentials"], [86, 5, 1, "", "sparse_plan"], [86, 5, 1, "", "status"], [86, 5, 1, "", "value"], [86, 5, 1, "", "value_linear"]], "ot.weak": [[87, 3, 1, "id0", "weak_optimal_transport"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "modul": [0, 89], "main": 0, "ot": [0, 1, 5, 18, 19, 20, 21, 22, 23, 24, 25, 37, 40, 41, 47, 49, 51, 52, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "function": [0, 32, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "refer": [0, 82, 88, 89], "dual": [1, 5, 45, 47], "solver": [1, 31, 54, 89], "entrop": [1, 5, 11, 29, 54, 63, 89], "quadrat": [1, 89], "regular": [1, 11, 22, 29, 37, 47, 54, 62, 63, 89], "pytorch": [1, 2, 3, 5, 6, 7, 8], "data": [1, 4, 5, 6, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 33, 39, 40, 41, 42, 43, 44, 48, 49, 50, 52, 53, 54, 56, 57, 59, 60, 62, 63], "gener": [1, 2, 4, 5, 6, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 39, 40, 41, 42, 44, 48, 49, 50, 52, 54, 56, 57, 59, 60, 62, 63, 89], "plot": [1, 4, 5, 6, 8, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 80], "convert": [1, 5], "torch": [1, 5], "tensor": [1, 5], "estim": [1, 2, 5, 6, 23, 24, 25, 34, 42, 89], "variabl": [1, 5, 47], "plan": [1, 5, 32, 47, 61], "optim": [2, 6, 18, 20, 21, 22, 26, 38, 40, 41, 42, 44, 47, 48, 50, 51, 59, 62, 63, 78, 88, 89], "gromov": [2, 29, 30, 31, 32, 33, 34, 35, 37, 61, 76, 89], "wasserstein": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 29, 30, 31, 32, 33, 34, 35, 37, 39, 47, 53, 56, 57, 60, 61, 89], "distanc": [2, 6, 20, 26, 30, 31, 32, 37, 42, 52, 53, 56, 61, 89], "graph": [2, 28, 29, 31, 34, 35], "gw": [2, 30, 32, 89], "w": 2, "r": 2, "t": 2, "weight": [2, 6], "templat": 2, "structur": [2, 30], "commun": 2, "cluster": [2, 29, 31, 34, 35], "uniform": [2, 51, 53], "compress": 2, "slice": [3, 4, 37, 56, 57, 82], "barycent": [3, 7, 10, 11, 12, 13, 14, 15, 16, 28, 33, 37, 60, 89], "gradient": [3, 4], "flow": [3, 7], "anim": [3, 4, 8, 16, 62], "trajectori": [3, 4, 8], "along": [3, 4, 8], "iter": [3, 4, 8], "comput": [3, 9, 10, 12, 13, 14, 16, 17, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 45, 46, 47, 50, 52, 55, 58, 60, 61, 62, 63, 64, 89], "descent": [3, 4], "spheric": [4, 57], "embed": [4, 34], "sphere": 4, "sampl": [4, 5, 8, 18, 20, 21, 22, 23, 24, 26, 32, 42, 51, 61], "continu": [5, 45], "deep": 5, "densiti": 5, "target": [5, 18, 20, 21, 22, 26], "given": 5, "sourc": [5, 6, 18, 20, 21, 22, 26], "unmix": 6, "model": [6, 8, 29, 31, 34, 35], "wrt": 6, "converg": 6, "object": 6, "reweight": 6, "distribut": [6, 14, 15, 20, 25, 32, 42, 44, 48, 49, 50, 56, 57, 59, 60, 61, 89], "1d": [7, 10, 11, 13, 48, 52, 59, 60], "2": [8, 18, 20, 21, 22, 26, 29, 31, 34, 35, 51, 57, 90], "minibatch": 8, "gan": 8, "train": 8, "visual": [8, 12, 13, 29, 30, 31, 33, 34, 35, 42, 47], "time": [9, 17, 27, 36, 46, 47, 55, 58, 64], "demo": [10, 13, 16, 60], "barycentr": [10, 60], "interpol": [10, 15, 60], "exact": [11, 40, 41, 63], "lp": [11, 77], "v": [11, 26, 40], "gaussian": [11, 13, 32, 61, 75], "stair": 11, "dirac": 11, "final": 11, "figur": 11, "convolut": [12, 89], "exampl": [12, 29, 32, 33, 35, 37, 45, 49, 61, 63, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89], "prepar": [12, 33], "debias": 13, "sinkhorn": [13, 15, 21, 45, 47, 48, 50, 52, 59, 89], "2d": [13, 14, 15, 32, 39, 50, 56, 61, 63], "imag": [13, 19, 23, 25], "free": [14, 15, 89], "support": [14, 15, 88, 89], "paramet": [15, 47], "inspect": 15, "empir": [15, 20, 50], "project": [16, 39, 56, 57], "match": [16, 29, 31, 35], "rotat": 16, "domain": [18, 20, 21, 22, 24, 25, 37, 89], "adapt": [18, 19, 20, 21, 22, 23, 24, 25, 37, 89], "instanti": [18, 19, 20, 21, 22, 24], "differ": [18, 19, 20, 22, 24, 26, 51, 52, 53, 56, 57], "transport": [18, 19, 20, 21, 22, 23, 24, 26, 30, 38, 40, 41, 42, 44, 45, 47, 48, 50, 51, 59, 62, 63, 88, 89], "algorithm": [18, 19, 20, 21, 22, 24, 45, 47], "fit": [18, 19, 20, 21, 22, 24], "them": [18, 19, 20, 21, 22, 24, 32, 61], "fig": [18, 20, 21, 22, 26], "1": [18, 20, 21, 22, 26, 34, 51, 90], "coupl": [18, 20, 21, 22, 26, 41], "color": [19, 25], "origin": [19, 25], "scatter": 19, "new": [19, 66, 90], "matrix": [20, 26, 30, 44, 45, 47, 48, 49, 59], "pairwis": [20, 26], "method": [20, 26, 32], "3": [20, 26, 29, 31, 34, 35, 90], "multi": 21, "shift": 21, "all": 21, "jcpot": 21, "run": 21, "oracl": 21, "known": 21, "proport": 21, "laplacian": 22, "linear": [23, 34], "map": [23, 24, 25, 47, 89], "load": 23, "transform": [23, 25], "pixel": 25, "transfer": 25, "valu": 25, "otda": [26, 89], "unsupervis": 26, "semi": [26, 29, 35, 45, 62], "supervis": 26, "set": 26, "onto": 26, "us": [28, 69, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89], "fgw": [28, 30, 89], "relax": [29, 35, 62], "fuse": [29, 30, 31, 34, 35, 37], "two": [29, 31, 32, 35, 61], "follow": [29, 31, 34, 35], "stochast": [29, 31, 32, 34, 35, 45, 84], "block": [29, 31, 34, 35], "diverg": [29, 35], "add": [29, 35], "node": [29, 34, 35], "featur": [29, 30, 34, 35, 90], "creat": 30, "matric": [30, 45, 51], "across": 30, "comparison": 31, "3d": [32, 61], "kernel": 32, "normal": 32, "displai": 32, "scalabl": 32, "ani": 32, "loss": [32, 44, 47, 48, 49, 52, 59], "smacof": 33, "md": 33, "dictionari": 34, "learn": [34, 42], "dataset": [34, 51, 72], "compos": 34, "from": 34, "atom": 34, "space": 34, "endow": 34, "attribut": [34, 65], "galleri": 37, "pot": [37, 43, 47, 66, 88, 89], "backend": [37, 68, 89], "other": [37, 89], "problem": [37, 45, 47], "unbalanc": [37, 59, 60, 62, 63, 85, 89], "partial": [37, 51, 61, 79, 89], "row": [38, 42], "column": [38, 42], "align": [38, 42], "co": [38, 42], "discrimin": [39, 89], "analysi": [39, 89], "fisher": 39, "weak": [40, 87], "an": [40, 41, 89], "solut": [40, 41], "factor": [41, 74], "margin": 42, "coot": [42, 70], "respect": 42, "logo": 43, "toolbox": [43, 47, 88], "clear": 43, "background": 43, "dark": 43, "screen": 44, "screenkhorn": [44, 69], "solv": [44, 47, 48, 49, 54, 59, 89], "discret": 45, "case": [45, 89], "compar": [45, 53], "result": [45, 63], "introduct": 47, "python": [47, 88], "instal": [47, 88], "import": 47, "get": 47, "help": 47, "first": [47, 90], "bakeri": 47, "citi": 47, "cost": 47, "emd": [47, 48, 50, 52, 54, 89], "vari": 47, "smooth": [49, 83], "spars": 49, "between": [50, 53, 89], "ground": 51, "metric": 51, "circl": [51, 53], "euclidean": 53, "von": 53, "mise": 53, "kappa": 53, "frobeniu": 54, "norm": 54, "seed": [56, 57], "number": [56, 57], "": 57, "mass": 59, "one": 61, "path": 62, "l2": [62, 63], "penal": 62, "fulli": 62, "regpath": [62, 81], "uot": [62, 63], "kl": 63, "code": [65, 88], "conduct": [65, 88], "our": 65, "pledg": 65, "standard": 65, "respons": 65, "scope": 65, "enforc": 65, "contribut": [66, 88], "how": [66, 89], "pull": 66, "request": 66, "checklist": 66, "file": 66, "bug": 66, "contributor": [66, 67], "tip": 66, "document": 66, "creator": 67, "maintain": 67, "acknowledg": [67, 88], "perform": 68, "class": [68, 71, 83, 86, 89], "bregman": [69, 89], "barycenter_debias": 69, "convolutional_barycenter2d": [69, 89], "convolutional_barycenter2d_debias": 69, "empirical_sinkhorn": 69, "free_support_sinkhorn_barycent": 69, "depend": [69, 88], "co_optimal_transport": 70, "co_optimal_transport2": 70, "da": 71, "basetransport": 71, "emdlaplacetransport": 71, "emdtransport": 71, "jcpottransport": 71, "lineartransport": 71, "mappingtransport": 71, "sinkhornl1l2transport": 71, "sinkhornlpl1transport": 71, "sinkhorntransport": 71, "make_1d_gauss": 72, "make_2d_samples_gauss": 72, "make_data_classif": 72, "dr": 73, "fda": 73, "wda": [73, 89], "empirical_bures_wasserstein_map": 75, "free_support_barycent": 77, "generalized_free_support_barycent": 77, "cg": 78, "gcg": 78, "entropic_partial_gromov_wasserstein": 79, "entropic_partial_wasserstein": 79, "partial_gromov_wasserstein": 79, "partial_wasserstein": 79, "plot1d_mat": 80, "plot2d_samples_mat": 80, "compute_transport_plan": 81, "regularization_path": 81, "smooth_ot_du": 83, "loss_dual_entrop": 84, "loss_dual_quadrat": 84, "plan_dual_entrop": 84, "plan_dual_quadrat": 84, "solve_dual_entrop": 84, "solve_semi_dual_entrop": 84, "mm_unbalanc": 85, "util": 86, "dist0": 86, "proj_simplex": 86, "baseestim": 86, "except": 86, "content": 88, "cite": 88, "pip": 88, "anaconda": 88, "conda": 88, "forg": 88, "post": 88, "check": 88, "short": 88, "notebook": 88, "indic": 88, "tabl": 88, "quick": 89, "start": 89, "guid": 89, "why": 89, "when": 89, "emd2": 89, "special": 89, "sinkhorn2": 89, "group": 89, "lasso": 89, "fix": 89, "mong": 89, "extens": 89, "g": 89, "applic": 89, "multipl": 89, "cpu": 89, "gpu": 89, "work": 89, "acceler": 89, "list": 89, "compat": 89, "faq": 89, "releas": 90, "0": 90, "9": 90, "1dev": 90, "close": 90, "issu": 90, "8": 90, "7": 90, "6": 90, "5": 90, "deprec": 90, "4": 90, "v0": 90, "11": 90, "10": 90, "pre": 90}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API and modules": [[0, "api-and-modules"]], "Main ot functions": [[0, "module-ot"]], "References:": [[0, "references"], [82, "references"], [82, "id12"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[1, "dual-ot-solvers-for-entropic-and-quadratic-regularized-ot-with-pytorch"]], "Data generation": [[1, "data-generation"], [4, "data-generation"], [5, "data-generation"], [8, "data-generation"]], "Plot data": [[1, "plot-data"], [4, "plot-data"], [5, "plot-data"], [6, "plot-data"], [8, "plot-data"], [23, "plot-data"], [24, "plot-data"], [28, "plot-data"], [30, "plot-data"], [39, "plot-data"], [50, "plot-data"], [52, "plot-data"], [53, "plot-data"], [56, "plot-data"], [57, "plot-data"], [60, "plot-data"], [62, "plot-data"]], "Convert data to torch tensors": [[1, "convert-data-to-torch-tensors"], [5, "convert-data-to-torch-tensors"]], "Estimating dual variables for entropic OT": [[1, "estimating-dual-variables-for-entropic-ot"]], "Plot the estimated entropic OT plan": [[1, "plot-the-estimated-entropic-ot-plan"]], "Estimating dual variables for quadratic OT": [[1, "estimating-dual-variables-for-quadratic-ot"]], "Plot the estimated quadratic OT plan": [[1, "plot-the-estimated-quadratic-ot-plan"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[2, "optimizing-the-gromov-wasserstein-distance-with-pytorch"]], "Graph generation": [[2, "graph-generation"]], "Optimizing GW w.r.t. the weights on a template structure": [[2, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Community clustering with uniform and estimated weights": [[2, "community-clustering-with-uniform-and-estimated-weights"]], "Graph compression with GW": [[2, "graph-compression-with-gw"]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[3, "sliced-wasserstein-barycenter-and-gradient-flow-with-pytorch"]], "Sliced Wasserstein gradient flow with Pytorch": [[3, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Animate trajectories of the gradient flow along iteration": [[3, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Compute the Sliced Wasserstein Barycenter": [[3, "compute-the-sliced-wasserstein-barycenter"]], "Animate trajectories of the barycenter along gradient descent": [[3, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[4, "spherical-sliced-wasserstein-embedding-on-sphere"]], "Gradient descent": [[4, "gradient-descent"]], "Plot trajectories of generated samples along iterations": [[4, "plot-trajectories-of-generated-samples-along-iterations"], [8, "plot-trajectories-of-generated-samples-along-iterations"]], "Animate trajectories of generated samples along iteration": [[4, "animate-trajectories-of-generated-samples-along-iteration"], [8, "animate-trajectories-of-generated-samples-along-iteration"]], "Continuous OT plan estimation with Pytorch": [[5, "continuous-ot-plan-estimation-with-pytorch"]], "Estimating deep dual variables for entropic OT": [[5, "estimating-deep-dual-variables-for-entropic-ot"]], "Plot the density on target for a given source sample": [[5, "plot-the-density-on-target-for-a-given-source-sample"]], "Wasserstein unmixing with PyTorch": [[6, "wasserstein-unmixing-with-pytorch"]], "Generate data": [[6, "generate-data"], [10, "generate-data"], [14, "generate-data"], [18, "generate-data"], [19, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [28, "generate-data"], [30, "generate-data"], [39, "generate-data"], [42, "generate-data"], [44, "generate-data"], [48, "generate-data"], [49, "generate-data"], [50, "generate-data"], [52, "generate-data"], [54, "generate-data"], [56, "generate-data"], [57, "generate-data"], [59, "generate-data"], [60, "generate-data"], [62, "generate-data"], [63, "generate-data"]], "Optimization of the model wrt the Wasserstein distance": [[6, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Estimated weights and convergence of the objective": [[6, "estimated-weights-and-convergence-of-the-objective"]], "Plotting the reweighted source distribution": [[6, "plotting-the-reweighted-source-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[7, "wasserstein-1d-flow-and-barycenter-with-pytorch"]], "Wasserstein barycenter": [[7, "wasserstein-barycenter"]], "Wasserstein 2 Minibatch GAN with PyTorch": [[8, "wasserstein-2-minibatch-gan-with-pytorch"]], "Generator Model": [[8, "generator-model"]], "Training the model": [[8, "training-the-model"]], "Generate and visualize data": [[8, "generate-and-visualize-data"]], "Computation times": [[9, "computation-times"], [17, "computation-times"], [27, "computation-times"], [36, "computation-times"], [46, "computation-times"], [55, "computation-times"], [58, "computation-times"], [64, "computation-times"]], "1D Wasserstein barycenter demo": [[10, "d-wasserstein-barycenter-demo"]], "Barycenter computation": [[10, "barycenter-computation"], [28, "barycenter-computation"], [33, "barycenter-computation"], [60, "barycenter-computation"]], "Barycentric interpolation": [[10, "barycentric-interpolation"], [60, "barycentric-interpolation"]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[11, "d-wasserstein-barycenter-exact-lp-vs-entropic-regularization"]], "Gaussian Data": [[11, "gaussian-data"]], "Stair Data": [[11, "stair-data"]], "Dirac Data": [[11, "dirac-data"]], "Final figure": [[11, "final-figure"]], "Convolutional Wasserstein Barycenter example": [[12, "convolutional-wasserstein-barycenter-example"]], "Data preparation": [[12, "data-preparation"], [33, "data-preparation"]], "Barycenter computation and visualization": [[12, "barycenter-computation-and-visualization"], [13, "barycenter-computation-and-visualization"]], "Debiased Sinkhorn barycenter demo": [[13, "debiased-sinkhorn-barycenter-demo"]], "Debiased barycenter of 1D Gaussians": [[13, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[13, "debiased-barycenter-of-2d-images"]], "2D free support Wasserstein barycenters of distributions": [[14, "d-free-support-wasserstein-barycenters-of-distributions"]], "Compute free support Wasserstein barycenter": [[14, "compute-free-support-wasserstein-barycenter"]], "Plot the Wasserstein barycenter": [[14, "plot-the-wasserstein-barycenter"], [14, "id1"]], "2D free support Sinkhorn barycenters of distributions": [[15, "d-free-support-sinkhorn-barycenters-of-distributions"]], "General Parameters": [[15, "general-parameters"]], "Generate Data": [[15, "generate-data"]], "Inspect generated distributions": [[15, "inspect-generated-distributions"]], "Interpolating Empirical Distributions": [[15, "interpolating-empirical-distributions"]], "Generalized Wasserstein Barycenter Demo": [[16, "generalized-wasserstein-barycenter-demo"]], "Generate and plot data": [[16, "generate-and-plot-data"]], "Barycenter computation and plot": [[16, "barycenter-computation-and-plot"]], "Plotting projection matches": [[16, "plotting-projection-matches"]], "Rotation animation": [[16, "rotation-animation"]], "OT for domain adaptation": [[18, "ot-for-domain-adaptation"]], "Instantiate the different transport algorithms and fit them": [[18, "instantiate-the-different-transport-algorithms-and-fit-them"], [19, "instantiate-the-different-transport-algorithms-and-fit-them"], [20, "instantiate-the-different-transport-algorithms-and-fit-them"], [22, "instantiate-the-different-transport-algorithms-and-fit-them"], [24, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Fig 1 : plots source and target samples": [[18, "fig-1-plots-source-and-target-samples"], [21, "fig-1-plots-source-and-target-samples"], [22, "fig-1-plots-source-and-target-samples"]], "Fig 2 : plot optimal couplings and transported samples": [[18, "fig-2-plot-optimal-couplings-and-transported-samples"], [21, "fig-2-plot-optimal-couplings-and-transported-samples"], [22, "fig-2-plot-optimal-couplings-and-transported-samples"]], "OT for image color adaptation": [[19, "ot-for-image-color-adaptation"]], "Plot original image": [[19, "plot-original-image"]], "Scatter plot of colors": [[19, "scatter-plot-of-colors"]], "Plot new images": [[19, "plot-new-images"]], "OT for domain adaptation on empirical distributions": [[20, "ot-for-domain-adaptation-on-empirical-distributions"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[20, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [26, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plots optimal couplings for the different methods": [[20, "fig-2-plots-optimal-couplings-for-the-different-methods"], [26, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[20, "fig-3-plot-transported-samples"], [26, "fig-3-plot-transported-samples"]], "OT for multi-source target shift": [[21, "ot-for-multi-source-target-shift"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[21, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate JCPOT adaptation algorithm and fit it": [[21, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Run oracle transport algorithm with known proportions": [[21, "run-oracle-transport-algorithm-with-known-proportions"]], "OT with Laplacian regularization for domain adaptation": [[22, "ot-with-laplacian-regularization-for-domain-adaptation"]], "Linear OT mapping estimation": [[23, "linear-ot-mapping-estimation"]], "Estimate linear mapping and transport": [[23, "estimate-linear-mapping-and-transport"]], "Plot transported samples": [[23, "plot-transported-samples"], [24, "plot-transported-samples"]], "Load image data": [[23, "load-image-data"]], "Estimate mapping and adapt": [[23, "estimate-mapping-and-adapt"]], "Plot transformed images": [[23, "plot-transformed-images"], [25, "plot-transformed-images"]], "OT mapping estimation for domain adaptation": [[24, "ot-mapping-estimation-for-domain-adaptation"]], "OT for image color adaptation with mapping estimation": [[25, "ot-for-image-color-adaptation-with-mapping-estimation"]], "Domain adaptation for pixel distribution transfer": [[25, "domain-adaptation-for-pixel-distribution-transfer"]], "Plot original images": [[25, "plot-original-images"]], "Plot pixel values distribution": [[25, "plot-pixel-values-distribution"]], "OTDA unsupervised vs semi-supervised setting": [[26, "otda-unsupervised-vs-semi-supervised-setting"]], "Transport source samples onto target samples": [[26, "transport-source-samples-onto-target-samples"]], "Plot graphs barycenter using FGW": [[28, "plot-graphs-barycenter-using-fgw"]], "Plot Barycenter": [[28, "plot-barycenter"]], "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example": [[29, "entropic-regularized-semi-relaxed-fused-gromov-wasserstein-example"]], "Generate two graphs following Stochastic Block models of 2 and 3 clusters.": [[29, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [31, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [35, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"]], "Compute their entropic-regularized semi-relaxed Gromov-Wasserstein divergences": [[29, "compute-their-entropic-regularized-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the entropic-regularized semi-relaxed Gromov-Wasserstein matchings": [[29, "visualization-of-the-entropic-regularized-semi-relaxed-gromov-wasserstein-matchings"]], "Add node features": [[29, "add-node-features"], [35, "add-node-features"]], "Compute their semi-relaxed Fused Gromov-Wasserstein divergences": [[29, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"], [35, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"]], "Visualization of the entropic semi-relaxed Fused Gromov-Wasserstein matchings": [[29, "visualization-of-the-entropic-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Plot Fused-Gromov-Wasserstein": [[30, "plot-fused-gromov-wasserstein"]], "Create structure matrices and across-feature distance matrix": [[30, "create-structure-matrices-and-across-feature-distance-matrix"]], "Plot matrices": [[30, "plot-matrices"]], "Compute FGW/GW": [[30, "compute-fgw-gw"]], "Visualize transport matrices": [[30, "visualize-transport-matrices"]], "Comparison of Fused Gromov-Wasserstein solvers": [[31, "comparison-of-fused-gromov-wasserstein-solvers"]], "Compute their Fused Gromov-Wasserstein distances": [[31, "compute-their-fused-gromov-wasserstein-distances"]], "Visualization of the Fused Gromov-Wasserstein matchings": [[31, "visualization-of-the-fused-gromov-wasserstein-matchings"]], "Gromov-Wasserstein example": [[32, "gromov-wasserstein-example"]], "Sample two Gaussian distributions (2D and 3D)": [[32, "sample-two-gaussian-distributions-2d-and-3d"]], "Plotting the distributions": [[32, "plotting-the-distributions"]], "Compute distance kernels, normalize them and then display": [[32, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute Gromov-Wasserstein plans and distance": [[32, "compute-gromov-wasserstein-plans-and-distance"]], "Compute GW with scalable stochastic methods with any loss function": [[32, "compute-gw-with-scalable-stochastic-methods-with-any-loss-function"]], "Gromov-Wasserstein Barycenter example": [[33, "gromov-wasserstein-barycenter-example"]], "Smacof MDS": [[33, "smacof-mds"]], "Visualization": [[33, "visualization"]], "(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[34, "fused-gromov-wasserstein-linear-dictionary-learning"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[34, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Estimate the Gromov-Wasserstein dictionary from the dataset": [[34, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Visualization of the estimated dictionary atoms": [[34, "visualization-of-the-estimated-dictionary-atoms"], [34, "id1"]], "Visualization of the embedding space": [[34, "visualization-of-the-embedding-space"], [34, "id2"]], "Endow the dataset with node features": [[34, "endow-the-dataset-with-node-features"]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[34, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Semi-relaxed (Fused) Gromov-Wasserstein example": [[35, "semi-relaxed-fused-gromov-wasserstein-example"]], "Compute their semi-relaxed Gromov-Wasserstein divergences": [[35, "compute-their-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the semi-relaxed Gromov-Wasserstein matchings": [[35, "visualization-of-the-semi-relaxed-gromov-wasserstein-matchings"]], "Visualization of the semi-relaxed Fused Gromov-Wasserstein matchings": [[35, "visualization-of-the-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Examples gallery": [[37, "examples-gallery"]], "OT and regularized OT": [[37, "ot-and-regularized-ot"]], "POT backend examples": [[37, "pot-backend-examples"]], "Wasserstein barycenters": [[37, "wasserstein-barycenters"]], "Domain adaptation examples": [[37, "domain-adaptation-examples"]], "Gromov and Fused-Gromov-Wasserstein": [[37, "gromov-and-fused-gromov-wasserstein"]], "Other OT problems": [[37, "other-ot-problems"]], "Sliced Wasserstein Distance": [[37, "sliced-wasserstein-distance"]], "Unbalanced and Partial OT": [[37, "unbalanced-and-partial-ot"]], "Row and column alignments with CO-Optimal Transport": [[38, "row-and-column-alignments-with-co-optimal-transport"]], "Wasserstein Discriminant Analysis": [[39, "wasserstein-discriminant-analysis"], [89, "wasserstein-discriminant-analysis"]], "Compute Fisher Discriminant Analysis": [[39, "compute-fisher-discriminant-analysis"]], "Compute Wasserstein Discriminant Analysis": [[39, "compute-wasserstein-discriminant-analysis"]], "Plot 2D projections": [[39, "plot-2d-projections"]], "Weak Optimal Transport VS exact Optimal Transport": [[40, "weak-optimal-transport-vs-exact-optimal-transport"]], "Generate data an plot it": [[40, "generate-data-an-plot-it"], [41, "generate-data-an-plot-it"]], "Compute Weak OT and exact OT solutions": [[40, "compute-weak-ot-and-exact-ot-solutions"]], "Plot weak OT and exact OT solutions": [[40, "plot-weak-ot-and-exact-ot-solutions"]], "Optimal transport with factored couplings": [[41, "optimal-transport-with-factored-couplings"]], "Compute Factored OT and exact OT solutions": [[41, "compute-factored-ot-and-exact-ot-solutions"]], "Plot factored OT and exact OT solutions": [[41, "plot-factored-ot-and-exact-ot-solutions"]], "Learning sample marginal distribution with CO-Optimal Transport": [[42, "learning-sample-marginal-distribution-with-co-optimal-transport"]], "Optimize the COOT distance with respect to the sample marginal distribution": [[42, "optimize-the-coot-distance-with-respect-to-the-sample-marginal-distribution"]], "Visualizing the row and column alignments with the estimated sample marginal distribution": [[42, "visualizing-the-row-and-column-alignments-with-the-estimated-sample-marginal-distribution"]], "Logo of the POT toolbox": [[43, "logo-of-the-pot-toolbox"]], "Data for logo": [[43, "data-for-logo"]], "Plot the logo (clear background)": [[43, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[43, "plot-the-logo-dark-background"]], "Screened optimal transport (Screenkhorn)": [[44, "screened-optimal-transport-screenkhorn"]], "Plot distributions and loss matrix": [[44, "plot-distributions-and-loss-matrix"], [48, "plot-distributions-and-loss-matrix"], [49, "plot-distributions-and-loss-matrix"], [59, "plot-distributions-and-loss-matrix"]], "Solve Screenkhorn": [[44, "solve-screenkhorn"]], "Stochastic examples": [[45, "stochastic-examples"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[45, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Discrete case": [[45, "discrete-case"]], "Semi-Continuous Case": [[45, "semi-continuous-case"]], "Plot Transportation Matrices": [[45, "plot-transportation-matrices"], [45, "id2"]], "Compute the Transportation Matrix for the Dual Problem": [[45, "compute-the-transportation-matrix-for-the-dual-problem"]], "Semi-continuous case": [[45, "id1"]], "Compare the results with the Sinkhorn algorithm": [[45, "compare-the-results-with-the-sinkhorn-algorithm"]], "Introduction to Optimal Transport with Python": [[47, "introduction-to-optimal-transport-with-python"]], "POT Python Optimal Transport Toolbox": [[47, "pot-python-optimal-transport-toolbox"]], "POT installation": [[47, "pot-installation"]], "Import the toolbox": [[47, "import-the-toolbox"]], "Getting help": [[47, "getting-help"]], "First OT Problem": [[47, "first-ot-problem"]], "Plotting bakeries in the city": [[47, "plotting-bakeries-in-the-city"]], "Cost matrix": [[47, "cost-matrix"]], "Solving the OT problem with ot.emd": [[47, "solving-the-ot-problem-with-ot-emd"]], "Transportation plan visualization": [[47, "transportation-plan-visualization"]], "OT loss and dual variables": [[47, "ot-loss-and-dual-variables"]], "Regularized OT with Sinkhorn": [[47, "regularized-ot-with-sinkhorn"]], "Algorithm": [[47, "algorithm"]], "Plot the matrix and the map": [[47, "plot-the-matrix-and-the-map"]], "Varying the regularization parameter in Sinkhorn": [[47, "varying-the-regularization-parameter-in-sinkhorn"]], "Wasserstein loss and computational time": [[47, "wasserstein-loss-and-computational-time"]], "Optimal Transport for 1D distributions": [[48, "optimal-transport-for-1d-distributions"]], "Solve EMD": [[48, "solve-emd"], [54, "solve-emd"]], "Solve Sinkhorn": [[48, "solve-sinkhorn"]], "Smooth and sparse OT example": [[49, "smooth-and-sparse-ot-example"]], "Solve Smooth OT": [[49, "solve-smooth-ot"]], "Optimal Transport between 2D empirical distributions": [[50, "optimal-transport-between-2d-empirical-distributions"]], "Compute EMD": [[50, "compute-emd"]], "Compute Sinkhorn": [[50, "compute-sinkhorn"]], "Empirical Sinkhorn": [[50, "empirical-sinkhorn"]], "Optimal Transport with different ground metrics": [[51, "optimal-transport-with-different-ground-metrics"]], "Dataset 1 : uniform sampling": [[51, "dataset-1-uniform-sampling"]], "Dataset 1 : Plot OT Matrices": [[51, "dataset-1-plot-ot-matrices"]], "Dataset 2 : Partial circle": [[51, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[51, "dataset-2-plot-ot-matrices"]], "OT distances in 1D": [[52, "ot-distances-in-1d"]], "Compute EMD for the different losses": [[52, "compute-emd-for-the-different-losses"]], "Compute Sinkhorn for the different losses": [[52, "compute-sinkhorn-for-the-different-losses"]], "OT distance on the Circle": [[53, "ot-distance-on-the-circle"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[53, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Wasserstein distance between von Mises and uniform for different kappa": [[53, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Regularized OT with generic solver": [[54, "regularized-ot-with-generic-solver"]], "Solve EMD with Frobenius norm regularization": [[54, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[54, "solve-emd-with-entropic-regularization"]], "Solve EMD with Frobenius norm + entropic regularization": [[54, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Sliced Wasserstein Distance on 2D distributions": [[56, "sliced-wasserstein-distance-on-2d-distributions"]], "Sliced Wasserstein distance for different seeds and number of projections": [[56, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Plot Sliced Wasserstein Distance": [[56, "plot-sliced-wasserstein-distance"]], "Spherical Sliced Wasserstein on distributions in S^2": [[57, "spherical-sliced-wasserstein-on-distributions-in-s-2"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[57, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Plot Spherical Sliced Wasserstein": [[57, "plot-spherical-sliced-wasserstein"]], "1D Unbalanced optimal transport": [[59, "d-unbalanced-optimal-transport"]], "Solve Unbalanced Sinkhorn": [[59, "solve-unbalanced-sinkhorn"]], "plot the transported mass": [[59, "plot-the-transported-mass"]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[60, "d-wasserstein-barycenter-demo-for-unbalanced-distributions"]], "Partial Wasserstein and Gromov-Wasserstein example": [[61, "partial-wasserstein-and-gromov-wasserstein-example"]], "Sample two 2D Gaussian distributions and plot them": [[61, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Compute partial Wasserstein plans and distance": [[61, "compute-partial-wasserstein-plans-and-distance"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[61, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Compute partial Gromov-Wasserstein plans and distance": [[61, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Regularization path of l2-penalized unbalanced optimal transport": [[62, "regularization-path-of-l2-penalized-unbalanced-optimal-transport"]], "Compute semi-relaxed and fully relaxed regularization paths": [[62, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Plot the regularization path": [[62, "plot-the-regularization-path"]], "Animation of the regpath for UOT l2": [[62, "animation-of-the-regpath-for-uot-l2"]], "Plot the semi-relaxed regularization path": [[62, "plot-the-semi-relaxed-regularization-path"]], "Animation of the regpath for semi-relaxed UOT l2": [[62, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "2D examples of exact and entropic unbalanced optimal transport": [[63, "d-examples-of-exact-and-entropic-unbalanced-optimal-transport"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[63, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Plot the results": [[63, "plot-the-results"]], "Code of conduct": [[65, "code-of-conduct"]], "Our Pledge": [[65, "our-pledge"]], "Our Standards": [[65, "our-standards"]], "Our Responsibilities": [[65, "our-responsibilities"]], "Scope": [[65, "scope"]], "Enforcement": [[65, "enforcement"]], "Attribution": [[65, "attribution"]], "Contributing to POT": [[66, "contributing-to-pot"]], "How to contribute": [[66, "how-to-contribute"]], "Pull Request Checklist": [[66, "pull-request-checklist"]], "Filing bugs": [[66, "filing-bugs"]], "New contributor tips": [[66, "new-contributor-tips"]], "Documentation": [[66, "documentation"]], "Contributors": [[67, "contributors"], [67, "contributors"]], "Creators and Maintainers": [[67, "creators-and-maintainers"]], "Acknowledgments": [[67, "acknowledgments"]], "ot.backend": [[68, "module-ot.backend"]], "Performance": [[68, "performance"]], "Functions": [[68, "functions"], [69, "functions"], [70, "functions"], [71, "functions"], [72, "functions"], [73, "functions"], [74, "functions"], [75, "functions"], [77, "functions"], [78, "functions"], [79, "functions"], [80, "functions"], [81, "functions"], [82, "functions"], [83, "functions"], [84, "functions"], [85, "functions"], [86, "functions"], [87, "functions"]], "Classes": [[68, "classes"], [71, "classes"], [83, "classes"], [86, "classes"]], "ot.bregman": [[69, "module-ot.bregman"]], "Examples using ot.bregman.barycenter_debiased": [[69, "examples-using-ot-bregman-barycenter-debiased"]], "Examples using ot.bregman.convolutional_barycenter2d": [[69, "examples-using-ot-bregman-convolutional-barycenter2d"]], "Examples using ot.bregman.convolutional_barycenter2d_debiased": [[69, "examples-using-ot-bregman-convolutional-barycenter2d-debiased"]], "Examples using ot.bregman.empirical_sinkhorn": [[69, "examples-using-ot-bregman-empirical-sinkhorn"]], "Examples using ot.bregman.free_support_sinkhorn_barycenter": [[69, "examples-using-ot-bregman-free-support-sinkhorn-barycenter"]], "Dependency": [[69, null], [69, null]], "Examples using ot.bregman.screenkhorn": [[69, "examples-using-ot-bregman-screenkhorn"]], "ot.coot": [[70, "module-ot.coot"]], "Examples using ot.coot.co_optimal_transport": [[70, "examples-using-ot-coot-co-optimal-transport"]], "Examples using ot.coot.co_optimal_transport2": [[70, "examples-using-ot-coot-co-optimal-transport2"]], "ot.da": [[71, "module-ot.da"]], "Examples using ot.da.BaseTransport": [[71, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[71, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[71, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[71, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearTransport": [[71, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[71, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[71, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[71, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[71, "examples-using-ot-da-sinkhorntransport"]], "ot.datasets": [[72, "module-ot.datasets"]], "Examples using ot.datasets.make_1D_gauss": [[72, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[72, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[72, "examples-using-ot-datasets-make-data-classif"]], "ot.dr": [[73, "module-ot.dr"]], "Examples using ot.dr.fda": [[73, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[73, "examples-using-ot-dr-wda"]], "ot.factored": [[74, "module-ot.factored"]], "ot.gaussian": [[75, "module-ot.gaussian"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[75, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "ot.gromov": [[76, "module-ot.gromov"]], "ot.lp": [[77, "module-ot.lp"]], "Examples using ot.lp.free_support_barycenter": [[77, "examples-using-ot-lp-free-support-barycenter"]], "Examples using ot.lp.generalized_free_support_barycenter": [[77, "examples-using-ot-lp-generalized-free-support-barycenter"]], "ot.optim": [[78, "module-ot.optim"]], "Examples using ot.optim.cg": [[78, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[78, "examples-using-ot-optim-gcg"]], "ot.partial": [[79, "module-ot.partial"]], "Examples using ot.partial.entropic_partial_gromov_wasserstein": [[79, "examples-using-ot-partial-entropic-partial-gromov-wasserstein"]], "Examples using ot.partial.entropic_partial_wasserstein": [[79, "examples-using-ot-partial-entropic-partial-wasserstein"]], "Examples using ot.partial.partial_gromov_wasserstein": [[79, "examples-using-ot-partial-partial-gromov-wasserstein"]], "Examples using ot.partial.partial_wasserstein": [[79, "examples-using-ot-partial-partial-wasserstein"]], "ot.plot": [[80, "module-ot.plot"]], "Examples using ot.plot.plot1D_mat": [[80, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[80, "examples-using-ot-plot-plot2d-samples-mat"]], "ot.regpath": [[81, "module-ot.regpath"]], "Examples using ot.regpath.compute_transport_plan": [[81, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[81, "examples-using-ot-regpath-regularization-path"]], "ot.sliced": [[82, "module-ot.sliced"]], "ot.smooth": [[83, "module-ot.smooth"]], "Examples using ot.smooth.smooth_ot_dual": [[83, "examples-using-ot-smooth-smooth-ot-dual"]], "ot.stochastic": [[84, "module-ot.stochastic"]], "Examples using ot.stochastic.loss_dual_entropic": [[84, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[84, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[84, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[84, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[84, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[84, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "ot.unbalanced": [[85, "module-ot.unbalanced"]], "Examples using ot.unbalanced.mm_unbalanced": [[85, "examples-using-ot-unbalanced-mm-unbalanced"]], "ot.utils": [[86, "module-ot.utils"]], "Examples using ot.utils.dist0": [[86, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_simplex": [[86, "examples-using-ot-utils-proj-simplex"]], "Examples using ot.utils.BaseEstimator": [[86, "examples-using-ot-utils-baseestimator"]], "Exceptions": [[86, "exceptions"]], "ot.weak": [[87, "module-ot.weak"]], "POT: Python Optimal Transport": [[88, "pot-python-optimal-transport"], [88, "pot-python-optimal-transport"]], "Contents": [[88, "contents"]], "Using and citing the toolbox": [[88, "using-and-citing-the-toolbox"]], "Installation": [[88, "installation"]], "Pip installation": [[88, "pip-installation"]], "Anaconda installation with conda-forge": [[88, "anaconda-installation-with-conda-forge"]], "Post installation check": [[88, "post-installation-check"]], "Dependencies": [[88, "dependencies"]], "Examples": [[88, "examples"]], "Short examples": [[88, "short-examples"]], "Examples and Notebooks": [[88, "examples-and-notebooks"]], "Acknowledgements": [[88, "acknowledgements"]], "Contributions and code of conduct": [[88, "contributions-and-code-of-conduct"]], "Support": [[88, "support"]], "References": [[88, "references"], [89, "references"]], "Indices and tables": [[88, "indices-and-tables"]], "Quick start guide": [[89, "quick-start-guide"]], "Why Optimal Transport ?": [[89, "why-optimal-transport"]], "When to use OT": [[89, "when-to-use-ot"]], "Wasserstein distance between distributions": [[89, "wasserstein-distance-between-distributions"]], "OT for mapping estimation": [[89, "ot-for-mapping-estimation"]], "When to use POT": [[89, "when-to-use-pot"]], "When not to use POT": [[89, "when-not-to-use-pot"]], "Optimal transport and Wasserstein distance": [[89, "optimal-transport-and-wasserstein-distance"]], "Solving optimal transport": [[89, "solving-optimal-transport"]], "Examples of use for ot.emd": [[89, "examples-of-use-for-ot-emd"]], "Computing Wasserstein distance": [[89, "computing-wasserstein-distance"]], "Examples of use for ot.emd2": [[89, "examples-of-use-for-ot-emd2"]], "Special cases": [[89, "special-cases"]], "Regularized Optimal Transport": [[89, "regularized-optimal-transport"]], "Entropic regularized OT": [[89, "entropic-regularized-ot"]], "Examples of use for ot.sinkhorn": [[89, "examples-of-use-for-ot-sinkhorn"]], "Examples of use for ot.sinkhorn2": [[89, "examples-of-use-for-ot-sinkhorn2"]], "Other regularizations": [[89, "other-regularizations"]], "Quadratic regularization": [[89, "quadratic-regularization"]], "Examples of use of quadratic regularization": [[89, "examples-of-use-of-quadratic-regularization"]], "Group Lasso regularization": [[89, "group-lasso-regularization"]], "Examples of group Lasso regularization": [[89, "examples-of-group-lasso-regularization"]], "Generic solvers": [[89, "generic-solvers"]], "Examples of the generic solvers": [[89, "examples-of-the-generic-solvers"]], "Wasserstein Barycenters": [[89, "wasserstein-barycenters"]], "Barycenters with fixed support": [[89, "barycenters-with-fixed-support"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[89, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[89, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Barycenters with free support": [[89, "barycenters-with-free-support"]], "Examples of free support barycenter estimation": [[89, "examples-of-free-support-barycenter-estimation"]], "Monge mapping and Domain adaptation": [[89, "monge-mapping-and-domain-adaptation"]], "Monge Mapping estimation": [[89, "monge-mapping-estimation"]], "Domain adaptation classes": [[89, "domain-adaptation-classes"]], "Examples of the use of OTDA classes": [[89, "examples-of-the-use-of-otda-classes"]], "Unbalanced and partial OT": [[89, "unbalanced-and-partial-ot"]], "Unbalanced optimal transport": [[89, "unbalanced-optimal-transport"]], "Examples of Unbalanced OT": [[89, "examples-of-unbalanced-ot"]], "Unbalanced Barycenters": [[89, "unbalanced-barycenters"]], "Examples of Unbalanced OT barycenters": [[89, "examples-of-unbalanced-ot-barycenters"]], "Partial optimal transport": [[89, "partial-optimal-transport"]], "Examples of Partial OT": [[89, "examples-of-partial-ot"]], "Gromov Wasserstein and extensions": [[89, "gromov-wasserstein-and-extensions"]], "Gromov Wasserstein(GW)": [[89, "gromov-wasserstein-gw"]], "Examples of computation of GW, regularized G and FGW": [[89, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Gromov Wasserstein barycenters": [[89, "gromov-wasserstein-barycenters"]], "Examples of GW, regularized G and FGW barycenters": [[89, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Other applications": [[89, "other-applications"]], "Examples of the use of WDA": [[89, "examples-of-the-use-of-wda"]], "Solving OT with Multiple backends on CPU/GPU": [[89, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "How it works": [[89, "how-it-works"]], "GPU acceleration": [[89, "gpu-acceleration"]], "List of compatible Backends": [[89, "list-of-compatible-backends"]], "List of compatible modules": [[89, "list-of-compatible-modules"]], "FAQ": [[89, "faq"]], "Releases": [[90, "releases"]], "0.9.1dev": [[90, "dev"]], "New features": [[90, "new-features"], [90, "id2"], [90, "id5"], [90, "id10"], [90, "id13"]], "Closed issues": [[90, "closed-issues"], [90, "id3"], [90, "id6"], [90, "id8"], [90, "id11"], [90, "id14"], [90, "id16"], [90, "id19"], [90, "id22"], [90, "id25"]], "0.9.0": [[90, "id1"]], "0.8.2": [[90, "id4"]], "0.8.1.0": [[90, "id7"]], "0.8.1": [[90, "id9"]], "0.8.0": [[90, "id12"]], "0.7.0": [[90, "id15"]], "Features": [[90, "features"], [90, "id18"], [90, "id21"], [90, "id24"]], "0.6.0": [[90, "id17"]], "0.5.0": [[90, "id20"]], "Deprecation": [[90, "deprecation"]], "0.4": [[90, "id23"]], "0.3.1": [[90, "id26"]], "0.3": [[90, "id27"]], "V0.2": [[90, "v0-2"]], "0.1.11": [[90, "id28"]], "0.1.10": [[90, "id29"]], "0.1.9": [[90, "id30"]], "0.1.7": [[90, "id31"]], "0.1.3": [[90, "id32"]], "First pre-release": [[90, "first-pre-release"]]}, "indexentries": {"barycenter() (in module ot)": [[0, "ot.barycenter"]], "barycenter_unbalanced() (in module ot)": [[0, "ot.barycenter_unbalanced"]], "binary_search_circle() (in module ot)": [[0, "ot.binary_search_circle"]], "dist() (in module ot)": [[0, "ot.dist"]], "emd() (in module ot)": [[0, "ot.emd"]], "emd2() (in module ot)": [[0, "ot.emd2"]], "emd2_1d() (in module ot)": [[0, "ot.emd2_1d"]], "emd_1d() (in module ot)": [[0, "ot.emd_1d"]], "factored_optimal_transport() (in module ot)": [[0, "ot.factored_optimal_transport"]], "fused_gromov_wasserstein() (in module ot)": [[0, "ot.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot)": [[0, "ot.fused_gromov_wasserstein2"]], "gromov_barycenters() (in module ot)": [[0, "ot.gromov_barycenters"]], "gromov_wasserstein() (in module ot)": [[0, "ot.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot)": [[0, "ot.gromov_wasserstein2"]], "max_sliced_wasserstein_distance() (in module ot)": [[0, "ot.max_sliced_wasserstein_distance"]], "module": [[0, "module-ot"], [68, "module-ot.backend"], [69, "module-ot.bregman"], [70, "module-ot.coot"], [71, "module-ot.da"], [72, "module-ot.datasets"], [73, "module-ot.dr"], [74, "module-ot.factored"], [75, "module-ot.gaussian"], [76, "module-ot.gromov"], [77, "module-ot.lp"], [78, "module-ot.optim"], [79, "module-ot.partial"], [80, "module-ot.plot"], [81, "module-ot.regpath"], [82, "module-ot.sliced"], [83, "module-ot.smooth"], [84, "module-ot.stochastic"], [85, "module-ot.unbalanced"], [86, "module-ot.utils"], [87, "module-ot.weak"]], "ot": [[0, "module-ot"]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[0, "ot.semidiscrete_wasserstein2_unif_circle"]], "sinkhorn() (in module ot)": [[0, "ot.sinkhorn"]], "sinkhorn2() (in module ot)": [[0, "ot.sinkhorn2"]], "sinkhorn_lpl1_mm() (in module ot)": [[0, "ot.sinkhorn_lpl1_mm"]], "sinkhorn_unbalanced() (in module ot)": [[0, "ot.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot)": [[0, "ot.sinkhorn_unbalanced2"]], "sliced_wasserstein_distance() (in module ot)": [[0, "ot.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot)": [[0, "ot.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot)": [[0, "ot.sliced_wasserstein_sphere_unif"]], "solve() (in module ot)": [[0, "ot.solve"]], "tic() (in module ot)": [[0, "ot.tic"]], "toc() (in module ot)": [[0, "ot.toc"]], "toq() (in module ot)": [[0, "ot.toq"]], "unif() (in module ot)": [[0, "ot.unif"]], "wasserstein_1d() (in module ot)": [[0, "ot.wasserstein_1d"]], "wasserstein_circle() (in module ot)": [[0, "ot.wasserstein_circle"]], "weak_optimal_transport() (in module ot)": [[0, "ot.weak_optimal_transport"]], "backend (class in ot.backend)": [[68, "id0"], [68, "ot.backend.Backend"]], "cupybackend (class in ot.backend)": [[68, "id81"], [68, "ot.backend.CupyBackend"]], "jaxbackend (class in ot.backend)": [[68, "id160"], [68, "ot.backend.JaxBackend"]], "numpybackend (class in ot.backend)": [[68, "id239"], [68, "ot.backend.NumpyBackend"]], "tensorflowbackend (class in ot.backend)": [[68, "id318"], [68, "ot.backend.TensorflowBackend"]], "torchbackend (class in ot.backend)": [[68, "id397"], [68, "ot.backend.TorchBackend"]], "abs() (ot.backend.backend method)": [[68, "id1"], [68, "ot.backend.Backend.abs"]], "abs() (ot.backend.cupybackend method)": [[68, "id82"], [68, "ot.backend.CupyBackend.abs"]], "abs() (ot.backend.jaxbackend method)": [[68, "id161"], [68, "ot.backend.JaxBackend.abs"]], "abs() (ot.backend.numpybackend method)": [[68, "id240"], [68, "ot.backend.NumpyBackend.abs"]], "abs() (ot.backend.tensorflowbackend method)": [[68, "id319"], [68, "ot.backend.TensorflowBackend.abs"]], "abs() (ot.backend.torchbackend method)": [[68, "id398"], [68, "ot.backend.TorchBackend.abs"]], "allclose() (ot.backend.backend method)": [[68, "id2"], [68, "ot.backend.Backend.allclose"]], "allclose() (ot.backend.cupybackend method)": [[68, "id83"], [68, "ot.backend.CupyBackend.allclose"]], "allclose() (ot.backend.jaxbackend method)": [[68, "id162"], [68, "ot.backend.JaxBackend.allclose"]], "allclose() (ot.backend.numpybackend method)": [[68, "id241"], [68, "ot.backend.NumpyBackend.allclose"]], "allclose() (ot.backend.tensorflowbackend method)": [[68, "id320"], [68, "ot.backend.TensorflowBackend.allclose"]], "allclose() (ot.backend.torchbackend method)": [[68, "id399"], [68, "ot.backend.TorchBackend.allclose"]], "any() (ot.backend.backend method)": [[68, "id3"], [68, "ot.backend.Backend.any"]], "any() (ot.backend.cupybackend method)": [[68, "id84"], [68, "ot.backend.CupyBackend.any"]], "any() (ot.backend.jaxbackend method)": [[68, "id163"], [68, "ot.backend.JaxBackend.any"]], "any() (ot.backend.numpybackend method)": [[68, "id242"], [68, "ot.backend.NumpyBackend.any"]], "any() (ot.backend.tensorflowbackend method)": [[68, "id321"], [68, "ot.backend.TensorflowBackend.any"]], "any() (ot.backend.torchbackend method)": [[68, "id400"], [68, "ot.backend.TorchBackend.any"]], "arange() (ot.backend.backend method)": [[68, "id4"], [68, "ot.backend.Backend.arange"]], "arange() (ot.backend.cupybackend method)": [[68, "id85"], [68, "ot.backend.CupyBackend.arange"]], "arange() (ot.backend.jaxbackend method)": [[68, "id164"], [68, "ot.backend.JaxBackend.arange"]], "arange() (ot.backend.numpybackend method)": [[68, "id243"], [68, "ot.backend.NumpyBackend.arange"]], "arange() (ot.backend.tensorflowbackend method)": [[68, "id322"], [68, "ot.backend.TensorflowBackend.arange"]], "arange() (ot.backend.torchbackend method)": [[68, "id401"], [68, "ot.backend.TorchBackend.arange"]], "argmax() (ot.backend.backend method)": [[68, "id5"], [68, "ot.backend.Backend.argmax"]], "argmax() (ot.backend.cupybackend method)": [[68, "id86"], [68, "ot.backend.CupyBackend.argmax"]], "argmax() (ot.backend.jaxbackend method)": [[68, "id165"], [68, "ot.backend.JaxBackend.argmax"]], "argmax() (ot.backend.numpybackend method)": [[68, "id244"], [68, "ot.backend.NumpyBackend.argmax"]], "argmax() (ot.backend.tensorflowbackend method)": [[68, "id323"], [68, "ot.backend.TensorflowBackend.argmax"]], "argmax() (ot.backend.torchbackend method)": [[68, "id402"], [68, "ot.backend.TorchBackend.argmax"]], "argmin() (ot.backend.backend method)": [[68, "id6"], [68, "ot.backend.Backend.argmin"]], "argmin() (ot.backend.cupybackend method)": [[68, "id87"], [68, "ot.backend.CupyBackend.argmin"]], "argmin() (ot.backend.jaxbackend method)": [[68, "id166"], [68, "ot.backend.JaxBackend.argmin"]], "argmin() (ot.backend.numpybackend method)": [[68, "id245"], [68, "ot.backend.NumpyBackend.argmin"]], "argmin() (ot.backend.tensorflowbackend method)": [[68, "id324"], [68, "ot.backend.TensorflowBackend.argmin"]], "argmin() (ot.backend.torchbackend method)": [[68, "id403"], [68, "ot.backend.TorchBackend.argmin"]], "argsort() (ot.backend.backend method)": [[68, "id7"], [68, "ot.backend.Backend.argsort"]], "argsort() (ot.backend.cupybackend method)": [[68, "id88"], [68, "ot.backend.CupyBackend.argsort"]], "argsort() (ot.backend.jaxbackend method)": [[68, "id167"], [68, "ot.backend.JaxBackend.argsort"]], "argsort() (ot.backend.numpybackend method)": [[68, "id246"], [68, "ot.backend.NumpyBackend.argsort"]], "argsort() (ot.backend.tensorflowbackend method)": [[68, "id325"], [68, "ot.backend.TensorflowBackend.argsort"]], "argsort() (ot.backend.torchbackend method)": [[68, "id404"], [68, "ot.backend.TorchBackend.argsort"]], "array_equal() (ot.backend.backend method)": [[68, "id8"], [68, "ot.backend.Backend.array_equal"]], "array_equal() (ot.backend.cupybackend method)": [[68, "id89"], [68, "ot.backend.CupyBackend.array_equal"]], "array_equal() (ot.backend.jaxbackend method)": [[68, "id168"], [68, "ot.backend.JaxBackend.array_equal"]], "array_equal() (ot.backend.numpybackend method)": [[68, "id247"], [68, "ot.backend.NumpyBackend.array_equal"]], "array_equal() (ot.backend.tensorflowbackend method)": [[68, "id326"], [68, "ot.backend.TensorflowBackend.array_equal"]], "array_equal() (ot.backend.torchbackend method)": [[68, "id405"], [68, "ot.backend.TorchBackend.array_equal"]], "assert_same_dtype_device() (ot.backend.backend method)": [[68, "id9"], [68, "ot.backend.Backend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[68, "id90"], [68, "ot.backend.CupyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[68, "id169"], [68, "ot.backend.JaxBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[68, "id248"], [68, "ot.backend.NumpyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[68, "id327"], [68, "ot.backend.TensorflowBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[68, "id406"], [68, "ot.backend.TorchBackend.assert_same_dtype_device"]], "atan2() (ot.backend.backend method)": [[68, "id10"], [68, "ot.backend.Backend.atan2"]], "atan2() (ot.backend.cupybackend method)": [[68, "id91"], [68, "ot.backend.CupyBackend.atan2"]], "atan2() (ot.backend.jaxbackend method)": [[68, "id170"], [68, "ot.backend.JaxBackend.atan2"]], "atan2() (ot.backend.numpybackend method)": [[68, "id249"], [68, "ot.backend.NumpyBackend.atan2"]], "atan2() (ot.backend.tensorflowbackend method)": [[68, "id328"], [68, "ot.backend.TensorflowBackend.atan2"]], "atan2() (ot.backend.torchbackend method)": [[68, "id407"], [68, "ot.backend.TorchBackend.atan2"]], "bitsize() (ot.backend.backend method)": [[68, "id11"], [68, "ot.backend.Backend.bitsize"]], "bitsize() (ot.backend.cupybackend method)": [[68, "id92"], [68, "ot.backend.CupyBackend.bitsize"]], "bitsize() (ot.backend.jaxbackend method)": [[68, "id171"], [68, "ot.backend.JaxBackend.bitsize"]], "bitsize() (ot.backend.numpybackend method)": [[68, "id250"], [68, "ot.backend.NumpyBackend.bitsize"]], "bitsize() (ot.backend.tensorflowbackend method)": [[68, "id329"], [68, "ot.backend.TensorflowBackend.bitsize"]], "bitsize() (ot.backend.torchbackend method)": [[68, "id408"], [68, "ot.backend.TorchBackend.bitsize"]], "clip() (ot.backend.backend method)": [[68, "id12"], [68, "ot.backend.Backend.clip"]], "clip() (ot.backend.cupybackend method)": [[68, "id93"], [68, "ot.backend.CupyBackend.clip"]], "clip() (ot.backend.jaxbackend method)": [[68, "id172"], [68, "ot.backend.JaxBackend.clip"]], "clip() (ot.backend.numpybackend method)": [[68, "id251"], [68, "ot.backend.NumpyBackend.clip"]], "clip() (ot.backend.tensorflowbackend method)": [[68, "id330"], [68, "ot.backend.TensorflowBackend.clip"]], "clip() (ot.backend.torchbackend method)": [[68, "id409"], [68, "ot.backend.TorchBackend.clip"]], "concatenate() (ot.backend.backend method)": [[68, "id13"], [68, "ot.backend.Backend.concatenate"]], "concatenate() (ot.backend.cupybackend method)": [[68, "id94"], [68, "ot.backend.CupyBackend.concatenate"]], "concatenate() (ot.backend.jaxbackend method)": [[68, "id173"], [68, "ot.backend.JaxBackend.concatenate"]], "concatenate() (ot.backend.numpybackend method)": [[68, "id252"], [68, "ot.backend.NumpyBackend.concatenate"]], "concatenate() (ot.backend.tensorflowbackend method)": [[68, "id331"], [68, "ot.backend.TensorflowBackend.concatenate"]], "concatenate() (ot.backend.torchbackend method)": [[68, "id410"], [68, "ot.backend.TorchBackend.concatenate"]], "coo_matrix() (ot.backend.backend method)": [[68, "id14"], [68, "ot.backend.Backend.coo_matrix"]], "coo_matrix() (ot.backend.cupybackend method)": [[68, "id95"], [68, "ot.backend.CupyBackend.coo_matrix"]], "coo_matrix() (ot.backend.jaxbackend method)": [[68, "id174"], [68, "ot.backend.JaxBackend.coo_matrix"]], "coo_matrix() (ot.backend.numpybackend method)": [[68, "id253"], [68, "ot.backend.NumpyBackend.coo_matrix"]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[68, "id332"], [68, "ot.backend.TensorflowBackend.coo_matrix"]], "coo_matrix() (ot.backend.torchbackend method)": [[68, "id411"], [68, "ot.backend.TorchBackend.coo_matrix"]], "copy() (ot.backend.backend method)": [[68, "id15"], [68, "ot.backend.Backend.copy"]], "copy() (ot.backend.cupybackend method)": [[68, "id96"], [68, "ot.backend.CupyBackend.copy"]], "copy() (ot.backend.jaxbackend method)": [[68, "id175"], [68, "ot.backend.JaxBackend.copy"]], "copy() (ot.backend.numpybackend method)": [[68, "id254"], [68, "ot.backend.NumpyBackend.copy"]], "copy() (ot.backend.tensorflowbackend method)": [[68, "id333"], [68, "ot.backend.TensorflowBackend.copy"]], "copy() (ot.backend.torchbackend method)": [[68, "id412"], [68, "ot.backend.TorchBackend.copy"]], "cumsum() (ot.backend.backend method)": [[68, "id16"], [68, "ot.backend.Backend.cumsum"]], "cumsum() (ot.backend.cupybackend method)": [[68, "id97"], [68, "ot.backend.CupyBackend.cumsum"]], "cumsum() (ot.backend.jaxbackend method)": [[68, "id176"], [68, "ot.backend.JaxBackend.cumsum"]], "cumsum() (ot.backend.numpybackend method)": [[68, "id255"], [68, "ot.backend.NumpyBackend.cumsum"]], "cumsum() (ot.backend.tensorflowbackend method)": [[68, "id334"], [68, "ot.backend.TensorflowBackend.cumsum"]], "cumsum() (ot.backend.torchbackend method)": [[68, "id413"], [68, "ot.backend.TorchBackend.cumsum"]], "detach() (ot.backend.backend method)": [[68, "id17"], [68, "ot.backend.Backend.detach"]], "detach() (ot.backend.cupybackend method)": [[68, "id98"], [68, "ot.backend.CupyBackend.detach"]], "detach() (ot.backend.jaxbackend method)": [[68, "id177"], [68, "ot.backend.JaxBackend.detach"]], "detach() (ot.backend.numpybackend method)": [[68, "id256"], [68, "ot.backend.NumpyBackend.detach"]], "detach() (ot.backend.tensorflowbackend method)": [[68, "id335"], [68, "ot.backend.TensorflowBackend.detach"]], "detach() (ot.backend.torchbackend method)": [[68, "id414"], [68, "ot.backend.TorchBackend.detach"]], "device_type() (ot.backend.backend method)": [[68, "id18"], [68, "ot.backend.Backend.device_type"]], "device_type() (ot.backend.cupybackend method)": [[68, "id99"], [68, "ot.backend.CupyBackend.device_type"]], "device_type() (ot.backend.jaxbackend method)": [[68, "id178"], [68, "ot.backend.JaxBackend.device_type"]], "device_type() (ot.backend.numpybackend method)": [[68, "id257"], [68, "ot.backend.NumpyBackend.device_type"]], "device_type() (ot.backend.tensorflowbackend method)": [[68, "id336"], [68, "ot.backend.TensorflowBackend.device_type"]], "device_type() (ot.backend.torchbackend method)": [[68, "id415"], [68, "ot.backend.TorchBackend.device_type"]], "diag() (ot.backend.backend method)": [[68, "id19"], [68, "ot.backend.Backend.diag"]], "diag() (ot.backend.cupybackend method)": [[68, "id100"], [68, "ot.backend.CupyBackend.diag"]], "diag() (ot.backend.jaxbackend method)": [[68, "id179"], [68, "ot.backend.JaxBackend.diag"]], "diag() (ot.backend.numpybackend method)": [[68, "id258"], [68, "ot.backend.NumpyBackend.diag"]], "diag() (ot.backend.tensorflowbackend method)": [[68, "id337"], [68, "ot.backend.TensorflowBackend.diag"]], "diag() (ot.backend.torchbackend method)": [[68, "id416"], [68, "ot.backend.TorchBackend.diag"]], "dot() (ot.backend.backend method)": [[68, "id20"], [68, "ot.backend.Backend.dot"]], "dot() (ot.backend.cupybackend method)": [[68, "id101"], [68, "ot.backend.CupyBackend.dot"]], "dot() (ot.backend.jaxbackend method)": [[68, "id180"], [68, "ot.backend.JaxBackend.dot"]], "dot() (ot.backend.numpybackend method)": [[68, "id259"], [68, "ot.backend.NumpyBackend.dot"]], "dot() (ot.backend.tensorflowbackend method)": [[68, "id338"], [68, "ot.backend.TensorflowBackend.dot"]], "dot() (ot.backend.torchbackend method)": [[68, "id417"], [68, "ot.backend.TorchBackend.dot"]], "dtype_device() (ot.backend.backend method)": [[68, "id21"], [68, "ot.backend.Backend.dtype_device"]], "dtype_device() (ot.backend.cupybackend method)": [[68, "id102"], [68, "ot.backend.CupyBackend.dtype_device"]], "dtype_device() (ot.backend.jaxbackend method)": [[68, "id181"], [68, "ot.backend.JaxBackend.dtype_device"]], "dtype_device() (ot.backend.numpybackend method)": [[68, "id260"], [68, "ot.backend.NumpyBackend.dtype_device"]], "dtype_device() (ot.backend.tensorflowbackend method)": [[68, "id339"], [68, "ot.backend.TensorflowBackend.dtype_device"]], "dtype_device() (ot.backend.torchbackend method)": [[68, "id418"], [68, "ot.backend.TorchBackend.dtype_device"]], "einsum() (ot.backend.backend method)": [[68, "id22"], [68, "ot.backend.Backend.einsum"]], "einsum() (ot.backend.cupybackend method)": [[68, "id103"], [68, "ot.backend.CupyBackend.einsum"]], "einsum() (ot.backend.jaxbackend method)": [[68, "id182"], [68, "ot.backend.JaxBackend.einsum"]], "einsum() (ot.backend.numpybackend method)": [[68, "id261"], [68, "ot.backend.NumpyBackend.einsum"]], "einsum() (ot.backend.tensorflowbackend method)": [[68, "id340"], [68, "ot.backend.TensorflowBackend.einsum"]], "einsum() (ot.backend.torchbackend method)": [[68, "id419"], [68, "ot.backend.TorchBackend.einsum"]], "eliminate_zeros() (ot.backend.backend method)": [[68, "id23"], [68, "ot.backend.Backend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.cupybackend method)": [[68, "id104"], [68, "ot.backend.CupyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[68, "id183"], [68, "ot.backend.JaxBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.numpybackend method)": [[68, "id262"], [68, "ot.backend.NumpyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[68, "id341"], [68, "ot.backend.TensorflowBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.torchbackend method)": [[68, "id420"], [68, "ot.backend.TorchBackend.eliminate_zeros"]], "exp() (ot.backend.backend method)": [[68, "id24"], [68, "ot.backend.Backend.exp"]], "exp() (ot.backend.cupybackend method)": [[68, "id105"], [68, "ot.backend.CupyBackend.exp"]], "exp() (ot.backend.jaxbackend method)": [[68, "id184"], [68, "ot.backend.JaxBackend.exp"]], "exp() (ot.backend.numpybackend method)": [[68, "id263"], [68, "ot.backend.NumpyBackend.exp"]], "exp() (ot.backend.tensorflowbackend method)": [[68, "id342"], [68, "ot.backend.TensorflowBackend.exp"]], "exp() (ot.backend.torchbackend method)": [[68, "id421"], [68, "ot.backend.TorchBackend.exp"]], "eye() (ot.backend.backend method)": [[68, "id25"], [68, "ot.backend.Backend.eye"]], "eye() (ot.backend.cupybackend method)": [[68, "id106"], [68, "ot.backend.CupyBackend.eye"]], "eye() (ot.backend.jaxbackend method)": [[68, "id185"], [68, "ot.backend.JaxBackend.eye"]], "eye() (ot.backend.numpybackend method)": [[68, "id264"], [68, "ot.backend.NumpyBackend.eye"]], "eye() (ot.backend.tensorflowbackend method)": [[68, "id343"], [68, "ot.backend.TensorflowBackend.eye"]], "eye() (ot.backend.torchbackend method)": [[68, "id422"], [68, "ot.backend.TorchBackend.eye"]], "flip() (ot.backend.backend method)": [[68, "id26"], [68, "ot.backend.Backend.flip"]], "flip() (ot.backend.cupybackend method)": [[68, "id107"], [68, "ot.backend.CupyBackend.flip"]], "flip() (ot.backend.jaxbackend method)": [[68, "id186"], [68, "ot.backend.JaxBackend.flip"]], "flip() (ot.backend.numpybackend method)": [[68, "id265"], [68, "ot.backend.NumpyBackend.flip"]], "flip() (ot.backend.tensorflowbackend method)": [[68, "id344"], [68, "ot.backend.TensorflowBackend.flip"]], "flip() (ot.backend.torchbackend method)": [[68, "id423"], [68, "ot.backend.TorchBackend.flip"]], "floor() (ot.backend.backend method)": [[68, "id27"], [68, "ot.backend.Backend.floor"]], "floor() (ot.backend.cupybackend method)": [[68, "id108"], [68, "ot.backend.CupyBackend.floor"]], "floor() (ot.backend.jaxbackend method)": [[68, "id187"], [68, "ot.backend.JaxBackend.floor"]], "floor() (ot.backend.numpybackend method)": [[68, "id266"], [68, "ot.backend.NumpyBackend.floor"]], "floor() (ot.backend.tensorflowbackend method)": [[68, "id345"], [68, "ot.backend.TensorflowBackend.floor"]], "floor() (ot.backend.torchbackend method)": [[68, "id424"], [68, "ot.backend.TorchBackend.floor"]], "from_numpy() (ot.backend.backend method)": [[68, "id28"], [68, "ot.backend.Backend.from_numpy"]], "full() (ot.backend.backend method)": [[68, "id29"], [68, "ot.backend.Backend.full"]], "full() (ot.backend.cupybackend method)": [[68, "id109"], [68, "ot.backend.CupyBackend.full"]], "full() (ot.backend.jaxbackend method)": [[68, "id188"], [68, "ot.backend.JaxBackend.full"]], "full() (ot.backend.numpybackend method)": [[68, "id267"], [68, "ot.backend.NumpyBackend.full"]], "full() (ot.backend.tensorflowbackend method)": [[68, "id346"], [68, "ot.backend.TensorflowBackend.full"]], "full() (ot.backend.torchbackend method)": [[68, "id425"], [68, "ot.backend.TorchBackend.full"]], "get_backend() (in module ot.backend)": [[68, "id476"], [68, "ot.backend.get_backend"]], "get_backend_list() (in module ot.backend)": [[68, "id477"], [68, "ot.backend.get_backend_list"]], "inv() (ot.backend.backend method)": [[68, "id30"], [68, "ot.backend.Backend.inv"]], "inv() (ot.backend.cupybackend method)": [[68, "id110"], [68, "ot.backend.CupyBackend.inv"]], "inv() (ot.backend.jaxbackend method)": [[68, "id189"], [68, "ot.backend.JaxBackend.inv"]], "inv() (ot.backend.numpybackend method)": [[68, "id268"], [68, "ot.backend.NumpyBackend.inv"]], "inv() (ot.backend.tensorflowbackend method)": [[68, "id347"], [68, "ot.backend.TensorflowBackend.inv"]], "inv() (ot.backend.torchbackend method)": [[68, "id426"], [68, "ot.backend.TorchBackend.inv"]], "is_floating_point() (ot.backend.backend method)": [[68, "id31"], [68, "ot.backend.Backend.is_floating_point"]], "is_floating_point() (ot.backend.cupybackend method)": [[68, "id111"], [68, "ot.backend.CupyBackend.is_floating_point"]], "is_floating_point() (ot.backend.jaxbackend method)": [[68, "id190"], [68, "ot.backend.JaxBackend.is_floating_point"]], "is_floating_point() (ot.backend.numpybackend method)": [[68, "id269"], [68, "ot.backend.NumpyBackend.is_floating_point"]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[68, "id348"], [68, "ot.backend.TensorflowBackend.is_floating_point"]], "is_floating_point() (ot.backend.torchbackend method)": [[68, "id427"], [68, "ot.backend.TorchBackend.is_floating_point"]], "isfinite() (ot.backend.backend method)": [[68, "id32"], [68, "ot.backend.Backend.isfinite"]], "isfinite() (ot.backend.cupybackend method)": [[68, "id112"], [68, "ot.backend.CupyBackend.isfinite"]], "isfinite() (ot.backend.jaxbackend method)": [[68, "id191"], [68, "ot.backend.JaxBackend.isfinite"]], "isfinite() (ot.backend.numpybackend method)": [[68, "id270"], [68, "ot.backend.NumpyBackend.isfinite"]], "isfinite() (ot.backend.tensorflowbackend method)": [[68, "id349"], [68, "ot.backend.TensorflowBackend.isfinite"]], "isfinite() (ot.backend.torchbackend method)": [[68, "id428"], [68, "ot.backend.TorchBackend.isfinite"]], "isinf() (ot.backend.backend method)": [[68, "id33"], [68, "ot.backend.Backend.isinf"]], "isinf() (ot.backend.cupybackend method)": [[68, "id113"], [68, "ot.backend.CupyBackend.isinf"]], "isinf() (ot.backend.jaxbackend method)": [[68, "id192"], [68, "ot.backend.JaxBackend.isinf"]], "isinf() (ot.backend.numpybackend method)": [[68, "id271"], [68, "ot.backend.NumpyBackend.isinf"]], "isinf() (ot.backend.tensorflowbackend method)": [[68, "id350"], [68, "ot.backend.TensorflowBackend.isinf"]], "isinf() (ot.backend.torchbackend method)": [[68, "id429"], [68, "ot.backend.TorchBackend.isinf"]], "isnan() (ot.backend.backend method)": [[68, "id34"], [68, "ot.backend.Backend.isnan"]], "isnan() (ot.backend.cupybackend method)": [[68, "id114"], [68, "ot.backend.CupyBackend.isnan"]], "isnan() (ot.backend.jaxbackend method)": [[68, "id193"], [68, "ot.backend.JaxBackend.isnan"]], "isnan() (ot.backend.numpybackend method)": [[68, "id272"], [68, "ot.backend.NumpyBackend.isnan"]], "isnan() (ot.backend.tensorflowbackend method)": [[68, "id351"], [68, "ot.backend.TensorflowBackend.isnan"]], "isnan() (ot.backend.torchbackend method)": [[68, "id430"], [68, "ot.backend.TorchBackend.isnan"]], "issparse() (ot.backend.backend method)": [[68, "id35"], [68, "ot.backend.Backend.issparse"]], "issparse() (ot.backend.cupybackend method)": [[68, "id115"], [68, "ot.backend.CupyBackend.issparse"]], "issparse() (ot.backend.jaxbackend method)": [[68, "id194"], [68, "ot.backend.JaxBackend.issparse"]], "issparse() (ot.backend.numpybackend method)": [[68, "id273"], [68, "ot.backend.NumpyBackend.issparse"]], "issparse() (ot.backend.tensorflowbackend method)": [[68, "id352"], [68, "ot.backend.TensorflowBackend.issparse"]], "issparse() (ot.backend.torchbackend method)": [[68, "id431"], [68, "ot.backend.TorchBackend.issparse"]], "kl_div() (ot.backend.backend method)": [[68, "id36"], [68, "ot.backend.Backend.kl_div"]], "kl_div() (ot.backend.cupybackend method)": [[68, "id116"], [68, "ot.backend.CupyBackend.kl_div"]], "kl_div() (ot.backend.jaxbackend method)": [[68, "id195"], [68, "ot.backend.JaxBackend.kl_div"]], "kl_div() (ot.backend.numpybackend method)": [[68, "id274"], [68, "ot.backend.NumpyBackend.kl_div"]], "kl_div() (ot.backend.tensorflowbackend method)": [[68, "id353"], [68, "ot.backend.TensorflowBackend.kl_div"]], "kl_div() (ot.backend.torchbackend method)": [[68, "id432"], [68, "ot.backend.TorchBackend.kl_div"]], "linspace() (ot.backend.backend method)": [[68, "id37"], [68, "ot.backend.Backend.linspace"]], "linspace() (ot.backend.cupybackend method)": [[68, "id117"], [68, "ot.backend.CupyBackend.linspace"]], "linspace() (ot.backend.jaxbackend method)": [[68, "id196"], [68, "ot.backend.JaxBackend.linspace"]], "linspace() (ot.backend.numpybackend method)": [[68, "id275"], [68, "ot.backend.NumpyBackend.linspace"]], "linspace() (ot.backend.tensorflowbackend method)": [[68, "id354"], [68, "ot.backend.TensorflowBackend.linspace"]], "linspace() (ot.backend.torchbackend method)": [[68, "id433"], [68, "ot.backend.TorchBackend.linspace"]], "log() (ot.backend.backend method)": [[68, "id38"], [68, "ot.backend.Backend.log"]], "log() (ot.backend.cupybackend method)": [[68, "id118"], [68, "ot.backend.CupyBackend.log"]], "log() (ot.backend.jaxbackend method)": [[68, "id197"], [68, "ot.backend.JaxBackend.log"]], "log() (ot.backend.numpybackend method)": [[68, "id276"], [68, "ot.backend.NumpyBackend.log"]], "log() (ot.backend.tensorflowbackend method)": [[68, "id355"], [68, "ot.backend.TensorflowBackend.log"]], "log() (ot.backend.torchbackend method)": [[68, "id434"], [68, "ot.backend.TorchBackend.log"]], "logsumexp() (ot.backend.backend method)": [[68, "id39"], [68, "ot.backend.Backend.logsumexp"]], "logsumexp() (ot.backend.cupybackend method)": [[68, "id119"], [68, "ot.backend.CupyBackend.logsumexp"]], "logsumexp() (ot.backend.jaxbackend method)": [[68, "id198"], [68, "ot.backend.JaxBackend.logsumexp"]], "logsumexp() (ot.backend.numpybackend method)": [[68, "id277"], [68, "ot.backend.NumpyBackend.logsumexp"]], "logsumexp() (ot.backend.tensorflowbackend method)": [[68, "id356"], [68, "ot.backend.TensorflowBackend.logsumexp"]], "logsumexp() (ot.backend.torchbackend method)": [[68, "id435"], [68, "ot.backend.TorchBackend.logsumexp"]], "matmul() (ot.backend.backend method)": [[68, "id40"], [68, "ot.backend.Backend.matmul"]], "matmul() (ot.backend.cupybackend method)": [[68, "id120"], [68, "ot.backend.CupyBackend.matmul"]], "matmul() (ot.backend.jaxbackend method)": [[68, "id199"], [68, "ot.backend.JaxBackend.matmul"]], "matmul() (ot.backend.numpybackend method)": [[68, "id278"], [68, "ot.backend.NumpyBackend.matmul"]], "matmul() (ot.backend.tensorflowbackend method)": [[68, "id357"], [68, "ot.backend.TensorflowBackend.matmul"]], "matmul() (ot.backend.torchbackend method)": [[68, "id436"], [68, "ot.backend.TorchBackend.matmul"]], "max() (ot.backend.backend method)": [[68, "id41"], [68, "ot.backend.Backend.max"]], "max() (ot.backend.cupybackend method)": [[68, "id121"], [68, "ot.backend.CupyBackend.max"]], "max() (ot.backend.jaxbackend method)": [[68, "id200"], [68, "ot.backend.JaxBackend.max"]], "max() (ot.backend.numpybackend method)": [[68, "id279"], [68, "ot.backend.NumpyBackend.max"]], "max() (ot.backend.tensorflowbackend method)": [[68, "id358"], [68, "ot.backend.TensorflowBackend.max"]], "max() (ot.backend.torchbackend method)": [[68, "id437"], [68, "ot.backend.TorchBackend.max"]], "maximum() (ot.backend.backend method)": [[68, "id42"], [68, "ot.backend.Backend.maximum"]], "maximum() (ot.backend.cupybackend method)": [[68, "id122"], [68, "ot.backend.CupyBackend.maximum"]], "maximum() (ot.backend.jaxbackend method)": [[68, "id201"], [68, "ot.backend.JaxBackend.maximum"]], "maximum() (ot.backend.numpybackend method)": [[68, "id280"], [68, "ot.backend.NumpyBackend.maximum"]], "maximum() (ot.backend.tensorflowbackend method)": [[68, "id359"], [68, "ot.backend.TensorflowBackend.maximum"]], "maximum() (ot.backend.torchbackend method)": [[68, "id438"], [68, "ot.backend.TorchBackend.maximum"]], "mean() (ot.backend.backend method)": [[68, "id43"], [68, "ot.backend.Backend.mean"]], "mean() (ot.backend.cupybackend method)": [[68, "id123"], [68, "ot.backend.CupyBackend.mean"]], "mean() (ot.backend.jaxbackend method)": [[68, "id202"], [68, "ot.backend.JaxBackend.mean"]], "mean() (ot.backend.numpybackend method)": [[68, "id281"], [68, "ot.backend.NumpyBackend.mean"]], "mean() (ot.backend.tensorflowbackend method)": [[68, "id360"], [68, "ot.backend.TensorflowBackend.mean"]], "mean() (ot.backend.torchbackend method)": [[68, "id439"], [68, "ot.backend.TorchBackend.mean"]], "median() (ot.backend.backend method)": [[68, "id44"], [68, "ot.backend.Backend.median"]], "median() (ot.backend.cupybackend method)": [[68, "id124"], [68, "ot.backend.CupyBackend.median"]], "median() (ot.backend.jaxbackend method)": [[68, "id203"], [68, "ot.backend.JaxBackend.median"]], "median() (ot.backend.numpybackend method)": [[68, "id282"], [68, "ot.backend.NumpyBackend.median"]], "median() (ot.backend.tensorflowbackend method)": [[68, "id361"], [68, "ot.backend.TensorflowBackend.median"]], "median() (ot.backend.torchbackend method)": [[68, "id440"], [68, "ot.backend.TorchBackend.median"]], "meshgrid() (ot.backend.backend method)": [[68, "id45"], [68, "ot.backend.Backend.meshgrid"]], "meshgrid() (ot.backend.cupybackend method)": [[68, "id125"], [68, "ot.backend.CupyBackend.meshgrid"]], "meshgrid() (ot.backend.jaxbackend method)": [[68, "id204"], [68, "ot.backend.JaxBackend.meshgrid"]], "meshgrid() (ot.backend.numpybackend method)": [[68, "id283"], [68, "ot.backend.NumpyBackend.meshgrid"]], "meshgrid() (ot.backend.tensorflowbackend method)": [[68, "id362"], [68, "ot.backend.TensorflowBackend.meshgrid"]], "meshgrid() (ot.backend.torchbackend method)": [[68, "id441"], [68, "ot.backend.TorchBackend.meshgrid"]], "min() (ot.backend.backend method)": [[68, "id46"], [68, "ot.backend.Backend.min"]], "min() (ot.backend.cupybackend method)": [[68, "id126"], [68, "ot.backend.CupyBackend.min"]], "min() (ot.backend.jaxbackend method)": [[68, "id205"], [68, "ot.backend.JaxBackend.min"]], "min() (ot.backend.numpybackend method)": [[68, "id284"], [68, "ot.backend.NumpyBackend.min"]], "min() (ot.backend.tensorflowbackend method)": [[68, "id363"], [68, "ot.backend.TensorflowBackend.min"]], "min() (ot.backend.torchbackend method)": [[68, "id442"], [68, "ot.backend.TorchBackend.min"]], "minimum() (ot.backend.backend method)": [[68, "id47"], [68, "ot.backend.Backend.minimum"]], "minimum() (ot.backend.cupybackend method)": [[68, "id127"], [68, "ot.backend.CupyBackend.minimum"]], "minimum() (ot.backend.jaxbackend method)": [[68, "id206"], [68, "ot.backend.JaxBackend.minimum"]], "minimum() (ot.backend.numpybackend method)": [[68, "id285"], [68, "ot.backend.NumpyBackend.minimum"]], "minimum() (ot.backend.tensorflowbackend method)": [[68, "id364"], [68, "ot.backend.TensorflowBackend.minimum"]], "minimum() (ot.backend.torchbackend method)": [[68, "id443"], [68, "ot.backend.TorchBackend.minimum"]], "norm() (ot.backend.backend method)": [[68, "id48"], [68, "ot.backend.Backend.norm"]], "norm() (ot.backend.cupybackend method)": [[68, "id128"], [68, "ot.backend.CupyBackend.norm"]], "norm() (ot.backend.jaxbackend method)": [[68, "id207"], [68, "ot.backend.JaxBackend.norm"]], "norm() (ot.backend.numpybackend method)": [[68, "id286"], [68, "ot.backend.NumpyBackend.norm"]], "norm() (ot.backend.tensorflowbackend method)": [[68, "id365"], [68, "ot.backend.TensorflowBackend.norm"]], "norm() (ot.backend.torchbackend method)": [[68, "id444"], [68, "ot.backend.TorchBackend.norm"]], "ones() (ot.backend.backend method)": [[68, "id49"], [68, "ot.backend.Backend.ones"]], "ones() (ot.backend.cupybackend method)": [[68, "id129"], [68, "ot.backend.CupyBackend.ones"]], "ones() (ot.backend.jaxbackend method)": [[68, "id208"], [68, "ot.backend.JaxBackend.ones"]], "ones() (ot.backend.numpybackend method)": [[68, "id287"], [68, "ot.backend.NumpyBackend.ones"]], "ones() (ot.backend.tensorflowbackend method)": [[68, "id366"], [68, "ot.backend.TensorflowBackend.ones"]], "ones() (ot.backend.torchbackend method)": [[68, "id445"], [68, "ot.backend.TorchBackend.ones"]], "ot.backend": [[68, "module-ot.backend"]], "outer() (ot.backend.backend method)": [[68, "id50"], [68, "ot.backend.Backend.outer"]], "outer() (ot.backend.cupybackend method)": [[68, "id130"], [68, "ot.backend.CupyBackend.outer"]], "outer() (ot.backend.jaxbackend method)": [[68, "id209"], [68, "ot.backend.JaxBackend.outer"]], "outer() (ot.backend.numpybackend method)": [[68, "id288"], [68, "ot.backend.NumpyBackend.outer"]], "outer() (ot.backend.tensorflowbackend method)": [[68, "id367"], [68, "ot.backend.TensorflowBackend.outer"]], "outer() (ot.backend.torchbackend method)": [[68, "id446"], [68, "ot.backend.TorchBackend.outer"]], "power() (ot.backend.backend method)": [[68, "id51"], [68, "ot.backend.Backend.power"]], "power() (ot.backend.cupybackend method)": [[68, "id131"], [68, "ot.backend.CupyBackend.power"]], "power() (ot.backend.jaxbackend method)": [[68, "id210"], [68, "ot.backend.JaxBackend.power"]], "power() (ot.backend.numpybackend method)": [[68, "id289"], [68, "ot.backend.NumpyBackend.power"]], "power() (ot.backend.tensorflowbackend method)": [[68, "id368"], [68, "ot.backend.TensorflowBackend.power"]], "power() (ot.backend.torchbackend method)": [[68, "id447"], [68, "ot.backend.TorchBackend.power"]], "prod() (ot.backend.backend method)": [[68, "id52"], [68, "ot.backend.Backend.prod"]], "prod() (ot.backend.cupybackend method)": [[68, "id132"], [68, "ot.backend.CupyBackend.prod"]], "prod() (ot.backend.jaxbackend method)": [[68, "id211"], [68, "ot.backend.JaxBackend.prod"]], "prod() (ot.backend.numpybackend method)": [[68, "id290"], [68, "ot.backend.NumpyBackend.prod"]], "prod() (ot.backend.tensorflowbackend method)": [[68, "id369"], [68, "ot.backend.TensorflowBackend.prod"]], "prod() (ot.backend.torchbackend method)": [[68, "id448"], [68, "ot.backend.TorchBackend.prod"]], "qr() (ot.backend.backend method)": [[68, "id53"], [68, "ot.backend.Backend.qr"]], "qr() (ot.backend.cupybackend method)": [[68, "id133"], [68, "ot.backend.CupyBackend.qr"]], "qr() (ot.backend.jaxbackend method)": [[68, "id212"], [68, "ot.backend.JaxBackend.qr"]], "qr() (ot.backend.numpybackend method)": [[68, "id291"], [68, "ot.backend.NumpyBackend.qr"]], "qr() (ot.backend.tensorflowbackend method)": [[68, "id370"], [68, "ot.backend.TensorflowBackend.qr"]], "qr() (ot.backend.torchbackend method)": [[68, "id449"], [68, "ot.backend.TorchBackend.qr"]], "rand() (ot.backend.backend method)": [[68, "id54"], [68, "ot.backend.Backend.rand"]], "rand() (ot.backend.cupybackend method)": [[68, "id134"], [68, "ot.backend.CupyBackend.rand"]], "rand() (ot.backend.jaxbackend method)": [[68, "id213"], [68, "ot.backend.JaxBackend.rand"]], "rand() (ot.backend.numpybackend method)": [[68, "id292"], [68, "ot.backend.NumpyBackend.rand"]], "rand() (ot.backend.tensorflowbackend method)": [[68, "id371"], [68, "ot.backend.TensorflowBackend.rand"]], "rand() (ot.backend.torchbackend method)": [[68, "id450"], [68, "ot.backend.TorchBackend.rand"]], "randn() (ot.backend.backend method)": [[68, "id55"], [68, "ot.backend.Backend.randn"]], "randn() (ot.backend.cupybackend method)": [[68, "id135"], [68, "ot.backend.CupyBackend.randn"]], "randn() (ot.backend.jaxbackend method)": [[68, "id214"], [68, "ot.backend.JaxBackend.randn"]], "randn() (ot.backend.numpybackend method)": [[68, "id293"], [68, "ot.backend.NumpyBackend.randn"]], "randn() (ot.backend.tensorflowbackend method)": [[68, "id372"], [68, "ot.backend.TensorflowBackend.randn"]], "randn() (ot.backend.torchbackend method)": [[68, "id451"], [68, "ot.backend.TorchBackend.randn"]], "repeat() (ot.backend.backend method)": [[68, "id56"], [68, "ot.backend.Backend.repeat"]], "repeat() (ot.backend.cupybackend method)": [[68, "id136"], [68, "ot.backend.CupyBackend.repeat"]], "repeat() (ot.backend.jaxbackend method)": [[68, "id215"], [68, "ot.backend.JaxBackend.repeat"]], "repeat() (ot.backend.numpybackend method)": [[68, "id294"], [68, "ot.backend.NumpyBackend.repeat"]], "repeat() (ot.backend.tensorflowbackend method)": [[68, "id373"], [68, "ot.backend.TensorflowBackend.repeat"]], "repeat() (ot.backend.torchbackend method)": [[68, "id452"], [68, "ot.backend.TorchBackend.repeat"]], "reshape() (ot.backend.backend method)": [[68, "id57"], [68, "ot.backend.Backend.reshape"]], "reshape() (ot.backend.cupybackend method)": [[68, "id137"], [68, "ot.backend.CupyBackend.reshape"]], "reshape() (ot.backend.jaxbackend method)": [[68, "id216"], [68, "ot.backend.JaxBackend.reshape"]], "reshape() (ot.backend.numpybackend method)": [[68, "id295"], [68, "ot.backend.NumpyBackend.reshape"]], "reshape() (ot.backend.tensorflowbackend method)": [[68, "id374"], [68, "ot.backend.TensorflowBackend.reshape"]], "reshape() (ot.backend.torchbackend method)": [[68, "id453"], [68, "ot.backend.TorchBackend.reshape"]], "searchsorted() (ot.backend.backend method)": [[68, "id58"], [68, "ot.backend.Backend.searchsorted"]], "searchsorted() (ot.backend.cupybackend method)": [[68, "id138"], [68, "ot.backend.CupyBackend.searchsorted"]], "searchsorted() (ot.backend.jaxbackend method)": [[68, "id217"], [68, "ot.backend.JaxBackend.searchsorted"]], "searchsorted() (ot.backend.numpybackend method)": [[68, "id296"], [68, "ot.backend.NumpyBackend.searchsorted"]], "searchsorted() (ot.backend.tensorflowbackend method)": [[68, "id375"], [68, "ot.backend.TensorflowBackend.searchsorted"]], "searchsorted() (ot.backend.torchbackend method)": [[68, "id454"], [68, "ot.backend.TorchBackend.searchsorted"]], "seed() (ot.backend.backend method)": [[68, "id59"], [68, "ot.backend.Backend.seed"]], "seed() (ot.backend.cupybackend method)": [[68, "id139"], [68, "ot.backend.CupyBackend.seed"]], "seed() (ot.backend.jaxbackend method)": [[68, "id218"], [68, "ot.backend.JaxBackend.seed"]], "seed() (ot.backend.numpybackend method)": [[68, "id297"], [68, "ot.backend.NumpyBackend.seed"]], "seed() (ot.backend.tensorflowbackend method)": [[68, "id376"], [68, "ot.backend.TensorflowBackend.seed"]], "seed() (ot.backend.torchbackend method)": [[68, "id455"], [68, "ot.backend.TorchBackend.seed"]], "set_gradients() (ot.backend.backend method)": [[68, "id60"], [68, "ot.backend.Backend.set_gradients"]], "set_gradients() (ot.backend.cupybackend method)": [[68, "id140"], [68, "ot.backend.CupyBackend.set_gradients"]], "set_gradients() (ot.backend.jaxbackend method)": [[68, "id219"], [68, "ot.backend.JaxBackend.set_gradients"]], "set_gradients() (ot.backend.numpybackend method)": [[68, "id298"], [68, "ot.backend.NumpyBackend.set_gradients"]], "set_gradients() (ot.backend.tensorflowbackend method)": [[68, "id377"], [68, "ot.backend.TensorflowBackend.set_gradients"]], "set_gradients() (ot.backend.torchbackend method)": [[68, "id456"], [68, "ot.backend.TorchBackend.set_gradients"]], "solve() (ot.backend.backend method)": [[68, "id61"], [68, "ot.backend.Backend.solve"]], "solve() (ot.backend.cupybackend method)": [[68, "id141"], [68, "ot.backend.CupyBackend.solve"]], "solve() (ot.backend.jaxbackend method)": [[68, "id220"], [68, "ot.backend.JaxBackend.solve"]], "solve() (ot.backend.numpybackend method)": [[68, "id299"], [68, "ot.backend.NumpyBackend.solve"]], "solve() (ot.backend.tensorflowbackend method)": [[68, "id378"], [68, "ot.backend.TensorflowBackend.solve"]], "solve() (ot.backend.torchbackend method)": [[68, "id457"], [68, "ot.backend.TorchBackend.solve"]], "sort() (ot.backend.backend method)": [[68, "id62"], [68, "ot.backend.Backend.sort"]], "sort() (ot.backend.cupybackend method)": [[68, "id142"], [68, "ot.backend.CupyBackend.sort"]], "sort() (ot.backend.jaxbackend method)": [[68, "id221"], [68, "ot.backend.JaxBackend.sort"]], "sort() (ot.backend.numpybackend method)": [[68, "id300"], [68, "ot.backend.NumpyBackend.sort"]], "sort() (ot.backend.tensorflowbackend method)": [[68, "id379"], [68, "ot.backend.TensorflowBackend.sort"]], "sort() (ot.backend.torchbackend method)": [[68, "id458"], [68, "ot.backend.TorchBackend.sort"]], "sort2() (ot.backend.backend method)": [[68, "id63"], [68, "ot.backend.Backend.sort2"]], "sort2() (ot.backend.cupybackend method)": [[68, "id143"], [68, "ot.backend.CupyBackend.sort2"]], "sort2() (ot.backend.jaxbackend method)": [[68, "id222"], [68, "ot.backend.JaxBackend.sort2"]], "sort2() (ot.backend.numpybackend method)": [[68, "id301"], [68, "ot.backend.NumpyBackend.sort2"]], "sort2() (ot.backend.tensorflowbackend method)": [[68, "id380"], [68, "ot.backend.TensorflowBackend.sort2"]], "sort2() (ot.backend.torchbackend method)": [[68, "id459"], [68, "ot.backend.TorchBackend.sort2"]], "sqrt() (ot.backend.backend method)": [[68, "id64"], [68, "ot.backend.Backend.sqrt"]], "sqrt() (ot.backend.cupybackend method)": [[68, "id144"], [68, "ot.backend.CupyBackend.sqrt"]], "sqrt() (ot.backend.jaxbackend method)": [[68, "id223"], [68, "ot.backend.JaxBackend.sqrt"]], "sqrt() (ot.backend.numpybackend method)": [[68, "id302"], [68, "ot.backend.NumpyBackend.sqrt"]], "sqrt() (ot.backend.tensorflowbackend method)": [[68, "id381"], [68, "ot.backend.TensorflowBackend.sqrt"]], "sqrt() (ot.backend.torchbackend method)": [[68, "id460"], [68, "ot.backend.TorchBackend.sqrt"]], "sqrtm() (ot.backend.backend method)": [[68, "id65"], [68, "ot.backend.Backend.sqrtm"]], "sqrtm() (ot.backend.cupybackend method)": [[68, "id145"], [68, "ot.backend.CupyBackend.sqrtm"]], "sqrtm() (ot.backend.jaxbackend method)": [[68, "id224"], [68, "ot.backend.JaxBackend.sqrtm"]], "sqrtm() (ot.backend.numpybackend method)": [[68, "id303"], [68, "ot.backend.NumpyBackend.sqrtm"]], "sqrtm() (ot.backend.tensorflowbackend method)": [[68, "id382"], [68, "ot.backend.TensorflowBackend.sqrtm"]], "sqrtm() (ot.backend.torchbackend method)": [[68, "id461"], [68, "ot.backend.TorchBackend.sqrtm"]], "squeeze() (ot.backend.backend method)": [[68, "id66"], [68, "ot.backend.Backend.squeeze"]], "squeeze() (ot.backend.cupybackend method)": [[68, "id146"], [68, "ot.backend.CupyBackend.squeeze"]], "squeeze() (ot.backend.jaxbackend method)": [[68, "id225"], [68, "ot.backend.JaxBackend.squeeze"]], "squeeze() (ot.backend.numpybackend method)": [[68, "id304"], [68, "ot.backend.NumpyBackend.squeeze"]], "squeeze() (ot.backend.tensorflowbackend method)": [[68, "id383"], [68, "ot.backend.TensorflowBackend.squeeze"]], "squeeze() (ot.backend.torchbackend method)": [[68, "id462"], [68, "ot.backend.TorchBackend.squeeze"]], "stack() (ot.backend.backend method)": [[68, "id67"], [68, "ot.backend.Backend.stack"]], "stack() (ot.backend.cupybackend method)": [[68, "id147"], [68, "ot.backend.CupyBackend.stack"]], "stack() (ot.backend.jaxbackend method)": [[68, "id226"], [68, "ot.backend.JaxBackend.stack"]], "stack() (ot.backend.numpybackend method)": [[68, "id305"], [68, "ot.backend.NumpyBackend.stack"]], "stack() (ot.backend.tensorflowbackend method)": [[68, "id384"], [68, "ot.backend.TensorflowBackend.stack"]], "stack() (ot.backend.torchbackend method)": [[68, "id463"], [68, "ot.backend.TorchBackend.stack"]], "std() (ot.backend.backend method)": [[68, "id68"], [68, "ot.backend.Backend.std"]], "std() (ot.backend.cupybackend method)": [[68, "id148"], [68, "ot.backend.CupyBackend.std"]], "std() (ot.backend.jaxbackend method)": [[68, "id227"], [68, "ot.backend.JaxBackend.std"]], "std() (ot.backend.numpybackend method)": [[68, "id306"], [68, "ot.backend.NumpyBackend.std"]], "std() (ot.backend.tensorflowbackend method)": [[68, "id385"], [68, "ot.backend.TensorflowBackend.std"]], "std() (ot.backend.torchbackend method)": [[68, "id464"], [68, "ot.backend.TorchBackend.std"]], "sum() (ot.backend.backend method)": [[68, "id69"], [68, "ot.backend.Backend.sum"]], "sum() (ot.backend.cupybackend method)": [[68, "id149"], [68, "ot.backend.CupyBackend.sum"]], "sum() (ot.backend.jaxbackend method)": [[68, "id228"], [68, "ot.backend.JaxBackend.sum"]], "sum() (ot.backend.numpybackend method)": [[68, "id307"], [68, "ot.backend.NumpyBackend.sum"]], "sum() (ot.backend.tensorflowbackend method)": [[68, "id386"], [68, "ot.backend.TensorflowBackend.sum"]], "sum() (ot.backend.torchbackend method)": [[68, "id465"], [68, "ot.backend.TorchBackend.sum"]], "take_along_axis() (ot.backend.backend method)": [[68, "id70"], [68, "ot.backend.Backend.take_along_axis"]], "take_along_axis() (ot.backend.cupybackend method)": [[68, "id150"], [68, "ot.backend.CupyBackend.take_along_axis"]], "take_along_axis() (ot.backend.jaxbackend method)": [[68, "id229"], [68, "ot.backend.JaxBackend.take_along_axis"]], "take_along_axis() (ot.backend.numpybackend method)": [[68, "id308"], [68, "ot.backend.NumpyBackend.take_along_axis"]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[68, "id387"], [68, "ot.backend.TensorflowBackend.take_along_axis"]], "take_along_axis() (ot.backend.torchbackend method)": [[68, "id466"], [68, "ot.backend.TorchBackend.take_along_axis"]], "tile() (ot.backend.backend method)": [[68, "id71"], [68, "ot.backend.Backend.tile"]], "tile() (ot.backend.cupybackend method)": [[68, "id151"], [68, "ot.backend.CupyBackend.tile"]], "tile() (ot.backend.jaxbackend method)": [[68, "id230"], [68, "ot.backend.JaxBackend.tile"]], "tile() (ot.backend.numpybackend method)": [[68, "id309"], [68, "ot.backend.NumpyBackend.tile"]], "tile() (ot.backend.tensorflowbackend method)": [[68, "id388"], [68, "ot.backend.TensorflowBackend.tile"]], "tile() (ot.backend.torchbackend method)": [[68, "id467"], [68, "ot.backend.TorchBackend.tile"]], "to_numpy() (in module ot.backend)": [[68, "id478"], [68, "ot.backend.to_numpy"]], "to_numpy() (ot.backend.backend method)": [[68, "id72"], [68, "ot.backend.Backend.to_numpy"]], "tocsr() (ot.backend.backend method)": [[68, "id73"], [68, "ot.backend.Backend.tocsr"]], "tocsr() (ot.backend.cupybackend method)": [[68, "id152"], [68, "ot.backend.CupyBackend.tocsr"]], "tocsr() (ot.backend.jaxbackend method)": [[68, "id231"], [68, "ot.backend.JaxBackend.tocsr"]], "tocsr() (ot.backend.numpybackend method)": [[68, "id310"], [68, "ot.backend.NumpyBackend.tocsr"]], "tocsr() (ot.backend.tensorflowbackend method)": [[68, "id389"], [68, "ot.backend.TensorflowBackend.tocsr"]], "tocsr() (ot.backend.torchbackend method)": [[68, "id468"], [68, "ot.backend.TorchBackend.tocsr"]], "todense() (ot.backend.backend method)": [[68, "id74"], [68, "ot.backend.Backend.todense"]], "todense() (ot.backend.cupybackend method)": [[68, "id153"], [68, "ot.backend.CupyBackend.todense"]], "todense() (ot.backend.jaxbackend method)": [[68, "id232"], [68, "ot.backend.JaxBackend.todense"]], "todense() (ot.backend.numpybackend method)": [[68, "id311"], [68, "ot.backend.NumpyBackend.todense"]], "todense() (ot.backend.tensorflowbackend method)": [[68, "id390"], [68, "ot.backend.TensorflowBackend.todense"]], "todense() (ot.backend.torchbackend method)": [[68, "id469"], [68, "ot.backend.TorchBackend.todense"]], "trace() (ot.backend.backend method)": [[68, "id75"], [68, "ot.backend.Backend.trace"]], "trace() (ot.backend.cupybackend method)": [[68, "id154"], [68, "ot.backend.CupyBackend.trace"]], "trace() (ot.backend.jaxbackend method)": [[68, "id233"], [68, "ot.backend.JaxBackend.trace"]], "trace() (ot.backend.numpybackend method)": [[68, "id312"], [68, "ot.backend.NumpyBackend.trace"]], "trace() (ot.backend.tensorflowbackend method)": [[68, "id391"], [68, "ot.backend.TensorflowBackend.trace"]], "trace() (ot.backend.torchbackend method)": [[68, "id470"], [68, "ot.backend.TorchBackend.trace"]], "transpose() (ot.backend.backend method)": [[68, "id76"], [68, "ot.backend.Backend.transpose"]], "transpose() (ot.backend.cupybackend method)": [[68, "id155"], [68, "ot.backend.CupyBackend.transpose"]], "transpose() (ot.backend.jaxbackend method)": [[68, "id234"], [68, "ot.backend.JaxBackend.transpose"]], "transpose() (ot.backend.numpybackend method)": [[68, "id313"], [68, "ot.backend.NumpyBackend.transpose"]], "transpose() (ot.backend.tensorflowbackend method)": [[68, "id392"], [68, "ot.backend.TensorflowBackend.transpose"]], "transpose() (ot.backend.torchbackend method)": [[68, "id471"], [68, "ot.backend.TorchBackend.transpose"]], "unique() (ot.backend.backend method)": [[68, "id77"], [68, "ot.backend.Backend.unique"]], "unique() (ot.backend.cupybackend method)": [[68, "id156"], [68, "ot.backend.CupyBackend.unique"]], "unique() (ot.backend.jaxbackend method)": [[68, "id235"], [68, "ot.backend.JaxBackend.unique"]], "unique() (ot.backend.numpybackend method)": [[68, "id314"], [68, "ot.backend.NumpyBackend.unique"]], "unique() (ot.backend.tensorflowbackend method)": [[68, "id393"], [68, "ot.backend.TensorflowBackend.unique"]], "unique() (ot.backend.torchbackend method)": [[68, "id472"], [68, "ot.backend.TorchBackend.unique"]], "where() (ot.backend.backend method)": [[68, "id78"], [68, "ot.backend.Backend.where"]], "where() (ot.backend.cupybackend method)": [[68, "id157"], [68, "ot.backend.CupyBackend.where"]], "where() (ot.backend.jaxbackend method)": [[68, "id236"], [68, "ot.backend.JaxBackend.where"]], "where() (ot.backend.numpybackend method)": [[68, "id315"], [68, "ot.backend.NumpyBackend.where"]], "where() (ot.backend.tensorflowbackend method)": [[68, "id394"], [68, "ot.backend.TensorflowBackend.where"]], "where() (ot.backend.torchbackend method)": [[68, "id473"], [68, "ot.backend.TorchBackend.where"]], "zero_pad() (ot.backend.backend method)": [[68, "id79"], [68, "ot.backend.Backend.zero_pad"]], "zero_pad() (ot.backend.cupybackend method)": [[68, "id158"], [68, "ot.backend.CupyBackend.zero_pad"]], "zero_pad() (ot.backend.jaxbackend method)": [[68, "id237"], [68, "ot.backend.JaxBackend.zero_pad"]], "zero_pad() (ot.backend.numpybackend method)": [[68, "id316"], [68, "ot.backend.NumpyBackend.zero_pad"]], "zero_pad() (ot.backend.tensorflowbackend method)": [[68, "id395"], [68, "ot.backend.TensorflowBackend.zero_pad"]], "zero_pad() (ot.backend.torchbackend method)": [[68, "id474"], [68, "ot.backend.TorchBackend.zero_pad"]], "zeros() (ot.backend.backend method)": [[68, "id80"], [68, "ot.backend.Backend.zeros"]], "zeros() (ot.backend.cupybackend method)": [[68, "id159"], [68, "ot.backend.CupyBackend.zeros"]], "zeros() (ot.backend.jaxbackend method)": [[68, "id238"], [68, "ot.backend.JaxBackend.zeros"]], "zeros() (ot.backend.numpybackend method)": [[68, "id317"], [68, "ot.backend.NumpyBackend.zeros"]], "zeros() (ot.backend.tensorflowbackend method)": [[68, "id396"], [68, "ot.backend.TensorflowBackend.zeros"]], "zeros() (ot.backend.torchbackend method)": [[68, "id475"], [68, "ot.backend.TorchBackend.zeros"]], "barycenter() (in module ot.bregman)": [[69, "id0"], [69, "ot.bregman.barycenter"]], "barycenter_debiased() (in module ot.bregman)": [[69, "id43"], [69, "ot.bregman.barycenter_debiased"]], "barycenter_sinkhorn() (in module ot.bregman)": [[69, "id46"], [69, "ot.bregman.barycenter_sinkhorn"]], "barycenter_stabilized() (in module ot.bregman)": [[69, "id49"], [69, "ot.bregman.barycenter_stabilized"]], "convolutional_barycenter2d() (in module ot.bregman)": [[69, "id52"], [69, "ot.bregman.convolutional_barycenter2d"]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[69, "id56"], [69, "ot.bregman.convolutional_barycenter2d_debiased"]], "empirical_sinkhorn() (in module ot.bregman)": [[69, "id59"], [69, "ot.bregman.empirical_sinkhorn"]], "empirical_sinkhorn2() (in module ot.bregman)": [[69, "id63"], [69, "ot.bregman.empirical_sinkhorn2"]], "empirical_sinkhorn_divergence() (in module ot.bregman)": [[69, "id67"], [69, "ot.bregman.empirical_sinkhorn_divergence"]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[69, "id69"], [69, "ot.bregman.free_support_sinkhorn_barycenter"]], "geometricbar() (in module ot.bregman)": [[69, "id72"], [69, "ot.bregman.geometricBar"]], "geometricmean() (in module ot.bregman)": [[69, "id73"], [69, "ot.bregman.geometricMean"]], "greenkhorn() (in module ot.bregman)": [[69, "id74"], [69, "ot.bregman.greenkhorn"]], "jcpot_barycenter() (in module ot.bregman)": [[69, "id78"], [69, "ot.bregman.jcpot_barycenter"]], "ot.bregman": [[69, "module-ot.bregman"]], "projc() (in module ot.bregman)": [[69, "id81"], [69, "ot.bregman.projC"]], "projr() (in module ot.bregman)": [[69, "id82"], [69, "ot.bregman.projR"]], "screenkhorn() (in module ot.bregman)": [[69, "id83"], [69, "ot.bregman.screenkhorn"]], "sinkhorn() (in module ot.bregman)": [[69, "id87"], [69, "ot.bregman.sinkhorn"]], "sinkhorn2() (in module ot.bregman)": [[69, "id93"], [69, "ot.bregman.sinkhorn2"]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[69, "id100"], [69, "ot.bregman.sinkhorn_epsilon_scaling"]], "sinkhorn_knopp() (in module ot.bregman)": [[69, "id105"], [69, "ot.bregman.sinkhorn_knopp"]], "sinkhorn_log() (in module ot.bregman)": [[69, "id108"], [69, "ot.bregman.sinkhorn_log"]], "sinkhorn_stabilized() (in module ot.bregman)": [[69, "id112"], [69, "ot.bregman.sinkhorn_stabilized"]], "unmix() (in module ot.bregman)": [[69, "id117"], [69, "ot.bregman.unmix"]], "co_optimal_transport() (in module ot.coot)": [[70, "id0"], [70, "ot.coot.co_optimal_transport"]], "co_optimal_transport2() (in module ot.coot)": [[70, "id4"], [70, "ot.coot.co_optimal_transport2"]], "ot.coot": [[70, "module-ot.coot"]], "basetransport (class in ot.da)": [[71, "id0"], [71, "ot.da.BaseTransport"]], "emdlaplacetransport (class in ot.da)": [[71, "id40"], [71, "ot.da.EMDLaplaceTransport"]], "emdtransport (class in ot.da)": [[71, "id47"], [71, "ot.da.EMDTransport"]], "jcpottransport (class in ot.da)": [[71, "id53"], [71, "ot.da.JCPOTTransport"]], "lineartransport (class in ot.da)": [[71, "id66"], [71, "ot.da.LinearTransport"]], "mappingtransport (class in ot.da)": [[71, "id73"], [71, "ot.da.MappingTransport"]], "sinkhornl1l2transport (class in ot.da)": [[71, "id80"], [71, "ot.da.SinkhornL1l2Transport"]], "sinkhornlpl1transport (class in ot.da)": [[71, "id88"], [71, "ot.da.SinkhornLpl1Transport"]], "sinkhorntransport (class in ot.da)": [[71, "id95"], [71, "ot.da.SinkhornTransport"]], "unbalancedsinkhorntransport (class in ot.da)": [[71, "id103"], [71, "ot.da.UnbalancedSinkhornTransport"]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[71, "id41"], [71, "ot.da.EMDLaplaceTransport.coupling_"]], "coupling_ (ot.da.emdtransport attribute)": [[71, "id48"], [71, "ot.da.EMDTransport.coupling_"]], "coupling_ (ot.da.jcpottransport attribute)": [[71, "id54"], [71, "ot.da.JCPOTTransport.coupling_"]], "coupling_ (ot.da.mappingtransport attribute)": [[71, "id74"], [71, "ot.da.MappingTransport.coupling_"]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[71, "id81"], [71, "ot.da.SinkhornL1l2Transport.coupling_"]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[71, "id89"], [71, "ot.da.SinkhornLpl1Transport.coupling_"]], "coupling_ (ot.da.sinkhorntransport attribute)": [[71, "id96"], [71, "ot.da.SinkhornTransport.coupling_"]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[71, "id104"], [71, "ot.da.UnbalancedSinkhornTransport.coupling_"]], "distribution_estimation_uniform() (in module ot.da)": [[71, "id110"], [71, "ot.da.distribution_estimation_uniform"]], "emd_laplace() (in module ot.da)": [[71, "id111"], [71, "ot.da.emd_laplace"]], "fit() (ot.da.basetransport method)": [[71, "id32"], [71, "ot.da.BaseTransport.fit"]], "fit() (ot.da.emdlaplacetransport method)": [[71, "id46"], [71, "ot.da.EMDLaplaceTransport.fit"]], "fit() (ot.da.emdtransport method)": [[71, "id52"], [71, "ot.da.EMDTransport.fit"]], "fit() (ot.da.jcpottransport method)": [[71, "id60"], [71, "ot.da.JCPOTTransport.fit"]], "fit() (ot.da.lineartransport method)": [[71, "id70"], [71, "ot.da.LinearTransport.fit"]], "fit() (ot.da.mappingtransport method)": [[71, "id78"], [71, "ot.da.MappingTransport.fit"]], "fit() (ot.da.sinkhornl1l2transport method)": [[71, "id87"], [71, "ot.da.SinkhornL1l2Transport.fit"]], "fit() (ot.da.sinkhornlpl1transport method)": [[71, "id94"], [71, "ot.da.SinkhornLpl1Transport.fit"]], "fit() (ot.da.sinkhorntransport method)": [[71, "id102"], [71, "ot.da.SinkhornTransport.fit"]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[71, "id109"], [71, "ot.da.UnbalancedSinkhornTransport.fit"]], "fit_transform() (ot.da.basetransport method)": [[71, "id33"], [71, "ot.da.BaseTransport.fit_transform"]], "inverse_transform() (ot.da.basetransport method)": [[71, "id34"], [71, "ot.da.BaseTransport.inverse_transform"]], "inverse_transform() (ot.da.lineartransport method)": [[71, "id71"], [71, "ot.da.LinearTransport.inverse_transform"]], "inverse_transform_labels() (ot.da.basetransport method)": [[71, "id35"], [71, "ot.da.BaseTransport.inverse_transform_labels"]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[71, "id61"], [71, "ot.da.JCPOTTransport.inverse_transform_labels"]], "joint_ot_mapping_kernel() (in module ot.da)": [[71, "id115"], [71, "ot.da.joint_OT_mapping_kernel"]], "joint_ot_mapping_linear() (in module ot.da)": [[71, "id118"], [71, "ot.da.joint_OT_mapping_linear"]], "log_ (ot.da.jcpottransport attribute)": [[71, "id56"], [71, "ot.da.JCPOTTransport.log_"]], "log_ (ot.da.mappingtransport attribute)": [[71, "id76"], [71, "ot.da.MappingTransport.log_"]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[71, "id82"], [71, "ot.da.SinkhornL1l2Transport.log_"]], "log_ (ot.da.sinkhorntransport attribute)": [[71, "id97"], [71, "ot.da.SinkhornTransport.log_"]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[71, "id105"], [71, "ot.da.UnbalancedSinkhornTransport.log_"]], "mapping_ (ot.da.mappingtransport attribute)": [[71, "id75"], [71, "ot.da.MappingTransport.mapping_"]], "ot.da": [[71, "module-ot.da"]], "proportions_ (ot.da.jcpottransport attribute)": [[71, "id55"], [71, "ot.da.JCPOTTransport.proportions_"]], "sinkhorn_l1l2_gl() (in module ot.da)": [[71, "id121"], [71, "ot.da.sinkhorn_l1l2_gl"]], "sinkhorn_lpl1_mm() (in module ot.da)": [[71, "id125"], [71, "ot.da.sinkhorn_lpl1_mm"]], "transform() (ot.da.basetransport method)": [[71, "id36"], [71, "ot.da.BaseTransport.transform"]], "transform() (ot.da.jcpottransport method)": [[71, "id62"], [71, "ot.da.JCPOTTransport.transform"]], "transform() (ot.da.lineartransport method)": [[71, "id72"], [71, "ot.da.LinearTransport.transform"]], "transform() (ot.da.mappingtransport method)": [[71, "id79"], [71, "ot.da.MappingTransport.transform"]], "transform_labels() (ot.da.basetransport method)": [[71, "id37"], [71, "ot.da.BaseTransport.transform_labels"]], "transform_labels() (ot.da.jcpottransport method)": [[71, "id63"], [71, "ot.da.JCPOTTransport.transform_labels"]], "make_1d_gauss() (in module ot.datasets)": [[72, "id0"], [72, "ot.datasets.make_1D_gauss"]], "make_2d_samples_gauss() (in module ot.datasets)": [[72, "id1"], [72, "ot.datasets.make_2D_samples_gauss"]], "make_data_classif() (in module ot.datasets)": [[72, "id2"], [72, "ot.datasets.make_data_classif"]], "ot.datasets": [[72, "module-ot.datasets"]], "dist() (in module ot.dr)": [[73, "id0"], [73, "ot.dr.dist"]], "fda() (in module ot.dr)": [[73, "id3"], [73, "ot.dr.fda"]], "logsumexp() (in module ot.dr)": [[73, "id4"], [73, "ot.dr.logsumexp"]], "ot.dr": [[73, "module-ot.dr"]], "projection_robust_wasserstein() (in module ot.dr)": [[73, "id5"], [73, "ot.dr.projection_robust_wasserstein"]], "sinkhorn() (in module ot.dr)": [[73, "id8"], [73, "ot.dr.sinkhorn"]], "sinkhorn_log() (in module ot.dr)": [[73, "id9"], [73, "ot.dr.sinkhorn_log"]], "split_classes() (in module ot.dr)": [[73, "id10"], [73, "ot.dr.split_classes"]], "wda() (in module ot.dr)": [[73, "id11"], [73, "ot.dr.wda"]], "factored_optimal_transport() (in module ot.factored)": [[74, "id0"], [74, "ot.factored.factored_optimal_transport"]], "ot.factored": [[74, "module-ot.factored"]], "bures_wasserstein_distance() (in module ot.gaussian)": [[75, "id0"], [75, "ot.gaussian.bures_wasserstein_distance"]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[75, "id11"], [75, "ot.gaussian.bures_wasserstein_mapping"]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[75, "id15"], [75, "ot.gaussian.empirical_bures_wasserstein_distance"]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[75, "id18"], [75, "ot.gaussian.empirical_bures_wasserstein_mapping"]], "ot.gaussian": [[75, "module-ot.gaussian"]], "gw_distance_estimation() (in module ot.gromov)": [[76, "ot.gromov.GW_distance_estimation"]], "entropic_fused_gromov_barycenters() (in module ot.gromov)": [[76, "ot.gromov.entropic_fused_gromov_barycenters"]], "entropic_fused_gromov_wasserstein() (in module ot.gromov)": [[76, "ot.gromov.entropic_fused_gromov_wasserstein"]], "entropic_fused_gromov_wasserstein2() (in module ot.gromov)": [[76, "ot.gromov.entropic_fused_gromov_wasserstein2"]], "entropic_gromov_barycenters() (in module ot.gromov)": [[76, "ot.gromov.entropic_gromov_barycenters"]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[76, "ot.gromov.entropic_gromov_wasserstein"]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[76, "ot.gromov.entropic_gromov_wasserstein2"]], "entropic_semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[76, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein"]], "entropic_semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[76, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein2"]], "entropic_semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[76, "ot.gromov.entropic_semirelaxed_gromov_wasserstein"]], "entropic_semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[76, "ot.gromov.entropic_semirelaxed_gromov_wasserstein2"]], "fgw_barycenters() (in module ot.gromov)": [[76, "ot.gromov.fgw_barycenters"]], "fused_gromov_wasserstein() (in module ot.gromov)": [[76, "ot.gromov.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[76, "ot.gromov.fused_gromov_wasserstein2"]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[76, "ot.gromov.fused_gromov_wasserstein_dictionary_learning"]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[76, "ot.gromov.fused_gromov_wasserstein_linear_unmixing"]], "gromov_barycenters() (in module ot.gromov)": [[76, "ot.gromov.gromov_barycenters"]], "gromov_wasserstein() (in module ot.gromov)": [[76, "ot.gromov.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot.gromov)": [[76, "ot.gromov.gromov_wasserstein2"]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[76, "ot.gromov.gromov_wasserstein_dictionary_learning"]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[76, "ot.gromov.gromov_wasserstein_linear_unmixing"]], "gwggrad() (in module ot.gromov)": [[76, "ot.gromov.gwggrad"]], "gwloss() (in module ot.gromov)": [[76, "ot.gromov.gwloss"]], "init_matrix() (in module ot.gromov)": [[76, "ot.gromov.init_matrix"]], "init_matrix_semirelaxed() (in module ot.gromov)": [[76, "ot.gromov.init_matrix_semirelaxed"]], "ot.gromov": [[76, "module-ot.gromov"]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[76, "ot.gromov.pointwise_gromov_wasserstein"]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[76, "ot.gromov.sampled_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[76, "ot.gromov.semirelaxed_fused_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[76, "ot.gromov.semirelaxed_fused_gromov_wasserstein2"]], "semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[76, "ot.gromov.semirelaxed_gromov_wasserstein"]], "semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[76, "ot.gromov.semirelaxed_gromov_wasserstein2"]], "solve_gromov_linesearch() (in module ot.gromov)": [[76, "ot.gromov.solve_gromov_linesearch"]], "solve_semirelaxed_gromov_linesearch() (in module ot.gromov)": [[76, "ot.gromov.solve_semirelaxed_gromov_linesearch"]], "tensor_product() (in module ot.gromov)": [[76, "ot.gromov.tensor_product"]], "update_feature_matrix() (in module ot.gromov)": [[76, "ot.gromov.update_feature_matrix"]], "update_kl_loss() (in module ot.gromov)": [[76, "ot.gromov.update_kl_loss"]], "update_square_loss() (in module ot.gromov)": [[76, "ot.gromov.update_square_loss"]], "barycenter() (in module ot.lp)": [[77, "ot.lp.barycenter"]], "binary_search_circle() (in module ot.lp)": [[77, "ot.lp.binary_search_circle"]], "center_ot_dual() (in module ot.lp)": [[77, "ot.lp.center_ot_dual"]], "check_number_threads() (in module ot.lp)": [[77, "ot.lp.check_number_threads"]], "emd() (in module ot.lp)": [[77, "id0"], [77, "ot.lp.emd"]], "emd2() (in module ot.lp)": [[77, "id11"], [77, "ot.lp.emd2"]], "emd2_1d() (in module ot.lp)": [[77, "ot.lp.emd2_1d"]], "emd_1d() (in module ot.lp)": [[77, "ot.lp.emd_1d"]], "estimate_dual_null_weights() (in module ot.lp)": [[77, "ot.lp.estimate_dual_null_weights"]], "free_support_barycenter() (in module ot.lp)": [[77, "id18"], [77, "ot.lp.free_support_barycenter"]], "generalized_free_support_barycenter() (in module ot.lp)": [[77, "id22"], [77, "ot.lp.generalized_free_support_barycenter"]], "ot.lp": [[77, "module-ot.lp"]], "semidiscrete_wasserstein2_unif_circle() (in module ot.lp)": [[77, "ot.lp.semidiscrete_wasserstein2_unif_circle"]], "wasserstein_1d() (in module ot.lp)": [[77, "ot.lp.wasserstein_1d"]], "wasserstein_circle() (in module ot.lp)": [[77, "ot.lp.wasserstein_circle"]], "cg() (in module ot.optim)": [[78, "id0"], [78, "ot.optim.cg"]], "gcg() (in module ot.optim)": [[78, "id13"], [78, "ot.optim.gcg"]], "generic_conditional_gradient() (in module ot.optim)": [[78, "id17"], [78, "ot.optim.generic_conditional_gradient"]], "line_search_armijo() (in module ot.optim)": [[78, "id23"], [78, "ot.optim.line_search_armijo"]], "ot.optim": [[78, "module-ot.optim"]], "semirelaxed_cg() (in module ot.optim)": [[78, "id24"], [78, "ot.optim.semirelaxed_cg"]], "solve_1d_linesearch_quad() (in module ot.optim)": [[78, "id27"], [78, "ot.optim.solve_1d_linesearch_quad"]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[79, "id0"], [79, "ot.partial.entropic_partial_gromov_wasserstein"]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[79, "id17"], [79, "ot.partial.entropic_partial_gromov_wasserstein2"]], "entropic_partial_wasserstein() (in module ot.partial)": [[79, "id21"], [79, "ot.partial.entropic_partial_wasserstein"]], "gwgrad_partial() (in module ot.partial)": [[79, "id24"], [79, "ot.partial.gwgrad_partial"]], "gwloss_partial() (in module ot.partial)": [[79, "id27"], [79, "ot.partial.gwloss_partial"]], "ot.partial": [[79, "module-ot.partial"]], "partial_gromov_wasserstein() (in module ot.partial)": [[79, "id28"], [79, "ot.partial.partial_gromov_wasserstein"]], "partial_gromov_wasserstein2() (in module ot.partial)": [[79, "id31"], [79, "ot.partial.partial_gromov_wasserstein2"]], "partial_wasserstein() (in module ot.partial)": [[79, "id34"], [79, "ot.partial.partial_wasserstein"]], "partial_wasserstein2() (in module ot.partial)": [[79, "id37"], [79, "ot.partial.partial_wasserstein2"]], "partial_wasserstein_lagrange() (in module ot.partial)": [[79, "id40"], [79, "ot.partial.partial_wasserstein_lagrange"]], "ot.plot": [[80, "module-ot.plot"]], "plot1d_mat() (in module ot.plot)": [[80, "id0"], [80, "ot.plot.plot1D_mat"]], "plot2d_samples_mat() (in module ot.plot)": [[80, "id1"], [80, "ot.plot.plot2D_samples_mat"]], "complement_schur() (in module ot.regpath)": [[81, "id0"], [81, "ot.regpath.complement_schur"]], "compute_next_removal() (in module ot.regpath)": [[81, "id12"], [81, "ot.regpath.compute_next_removal"]], "compute_transport_plan() (in module ot.regpath)": [[81, "id15"], [81, "ot.regpath.compute_transport_plan"]], "construct_augmented_h() (in module ot.regpath)": [[81, "id18"], [81, "ot.regpath.construct_augmented_H"]], "fully_relaxed_path() (in module ot.regpath)": [[81, "id19"], [81, "ot.regpath.fully_relaxed_path"]], "ot.regpath": [[81, "module-ot.regpath"]], "ot_next_gamma() (in module ot.regpath)": [[81, "id21"], [81, "ot.regpath.ot_next_gamma"]], "recast_ot_as_lasso() (in module ot.regpath)": [[81, "id23"], [81, "ot.regpath.recast_ot_as_lasso"]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[81, "id25"], [81, "ot.regpath.recast_semi_relaxed_as_lasso"]], "regularization_path() (in module ot.regpath)": [[81, "id26"], [81, "ot.regpath.regularization_path"]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[81, "id28"], [81, "ot.regpath.semi_relaxed_next_gamma"]], "semi_relaxed_path() (in module ot.regpath)": [[81, "id30"], [81, "ot.regpath.semi_relaxed_path"]], "get_random_projections() (in module ot.sliced)": [[82, "id0"], [82, "ot.sliced.get_random_projections"]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[82, "id5"], [82, "ot.sliced.max_sliced_wasserstein_distance"]], "ot.sliced": [[82, "module-ot.sliced"]], "sliced_wasserstein_distance() (in module ot.sliced)": [[82, "id7"], [82, "ot.sliced.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[82, "id9"], [82, "ot.sliced.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[82, "id11"], [82, "ot.sliced.sliced_wasserstein_sphere_unif"]], "negentropy (class in ot.smooth)": [[83, "id0"], [83, "ot.smooth.NegEntropy"]], "omega() (ot.smooth.negentropy method)": [[83, "id7"], [83, "ot.smooth.NegEntropy.Omega"]], "omega() (ot.smooth.regularization method)": [[83, "id11"], [83, "ot.smooth.Regularization.Omega"]], "omega() (ot.smooth.sparsityconstrained method)": [[83, "id15"], [83, "ot.smooth.SparsityConstrained.Omega"]], "omega() (ot.smooth.squaredl2 method)": [[83, "id19"], [83, "ot.smooth.SquaredL2.Omega"]], "regularization (class in ot.smooth)": [[83, "id10"], [83, "ot.smooth.Regularization"]], "sparsityconstrained (class in ot.smooth)": [[83, "id14"], [83, "ot.smooth.SparsityConstrained"]], "squaredl2 (class in ot.smooth)": [[83, "id18"], [83, "ot.smooth.SquaredL2"]], "delta_omega() (ot.smooth.negentropy method)": [[83, "id8"], [83, "ot.smooth.NegEntropy.delta_Omega"]], "delta_omega() (ot.smooth.regularization method)": [[83, "id12"], [83, "ot.smooth.Regularization.delta_Omega"]], "delta_omega() (ot.smooth.sparsityconstrained method)": [[83, "id16"], [83, "ot.smooth.SparsityConstrained.delta_Omega"]], "delta_omega() (ot.smooth.squaredl2 method)": [[83, "id20"], [83, "ot.smooth.SquaredL2.delta_Omega"]], "dual_obj_grad() (in module ot.smooth)": [[83, "id22"], [83, "ot.smooth.dual_obj_grad"]], "get_plan_from_dual() (in module ot.smooth)": [[83, "id23"], [83, "ot.smooth.get_plan_from_dual"]], "get_plan_from_semi_dual() (in module ot.smooth)": [[83, "id24"], [83, "ot.smooth.get_plan_from_semi_dual"]], "max_omega() (ot.smooth.negentropy method)": [[83, "id9"], [83, "ot.smooth.NegEntropy.max_Omega"]], "max_omega() (ot.smooth.regularization method)": [[83, "id13"], [83, "ot.smooth.Regularization.max_Omega"]], "max_omega() (ot.smooth.sparsityconstrained method)": [[83, "id17"], [83, "ot.smooth.SparsityConstrained.max_Omega"]], "max_omega() (ot.smooth.squaredl2 method)": [[83, "id21"], [83, "ot.smooth.SquaredL2.max_Omega"]], "ot.smooth": [[83, "module-ot.smooth"]], "projection_simplex() (in module ot.smooth)": [[83, "id25"], [83, "ot.smooth.projection_simplex"]], "semi_dual_obj_grad() (in module ot.smooth)": [[83, "id26"], [83, "ot.smooth.semi_dual_obj_grad"]], "smooth_ot_dual() (in module ot.smooth)": [[83, "id27"], [83, "ot.smooth.smooth_ot_dual"]], "smooth_ot_semi_dual() (in module ot.smooth)": [[83, "id32"], [83, "ot.smooth.smooth_ot_semi_dual"]], "solve_dual() (in module ot.smooth)": [[83, "id37"], [83, "ot.smooth.solve_dual"]], "solve_semi_dual() (in module ot.smooth)": [[83, "id38"], [83, "ot.smooth.solve_semi_dual"]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[84, "id0"], [84, "ot.stochastic.averaged_sgd_entropic_transport"]], "batch_grad_dual() (in module ot.stochastic)": [[84, "id14"], [84, "ot.stochastic.batch_grad_dual"]], "c_transform_entropic() (in module ot.stochastic)": [[84, "id16"], [84, "ot.stochastic.c_transform_entropic"]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[84, "id18"], [84, "ot.stochastic.coordinate_grad_semi_dual"]], "loss_dual_entropic() (in module ot.stochastic)": [[84, "id20"], [84, "ot.stochastic.loss_dual_entropic"]], "loss_dual_quadratic() (in module ot.stochastic)": [[84, "id22"], [84, "ot.stochastic.loss_dual_quadratic"]], "ot.stochastic": [[84, "module-ot.stochastic"]], "plan_dual_entropic() (in module ot.stochastic)": [[84, "id24"], [84, "ot.stochastic.plan_dual_entropic"]], "plan_dual_quadratic() (in module ot.stochastic)": [[84, "id26"], [84, "ot.stochastic.plan_dual_quadratic"]], "sag_entropic_transport() (in module ot.stochastic)": [[84, "id28"], [84, "ot.stochastic.sag_entropic_transport"]], "sgd_entropic_regularization() (in module ot.stochastic)": [[84, "id30"], [84, "ot.stochastic.sgd_entropic_regularization"]], "solve_dual_entropic() (in module ot.stochastic)": [[84, "id32"], [84, "ot.stochastic.solve_dual_entropic"]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[84, "id34"], [84, "ot.stochastic.solve_semi_dual_entropic"]], "barycenter_unbalanced() (in module ot.unbalanced)": [[85, "id0"], [85, "ot.unbalanced.barycenter_unbalanced"]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[85, "id25"], [85, "ot.unbalanced.barycenter_unbalanced_sinkhorn"]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[85, "id29"], [85, "ot.unbalanced.barycenter_unbalanced_stabilized"]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[85, "id33"], [85, "ot.unbalanced.lbfgsb_unbalanced"]], "mm_unbalanced() (in module ot.unbalanced)": [[85, "id35"], [85, "ot.unbalanced.mm_unbalanced"]], "mm_unbalanced2() (in module ot.unbalanced)": [[85, "id38"], [85, "ot.unbalanced.mm_unbalanced2"]], "ot.unbalanced": [[85, "module-ot.unbalanced"]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[85, "id40"], [85, "ot.unbalanced.sinkhorn_knopp_unbalanced"]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[85, "id44"], [85, "ot.unbalanced.sinkhorn_stabilized_unbalanced"]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[85, "id48"], [85, "ot.unbalanced.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[85, "id54"], [85, "ot.unbalanced.sinkhorn_unbalanced2"]], "baseestimator (class in ot.utils)": [[86, "id0"], [86, "ot.utils.BaseEstimator"]], "otresult (class in ot.utils)": [[86, "ot.utils.OTResult"]], "undefinedparameter": [[86, "ot.utils.UndefinedParameter"]], "a_to_b (ot.utils.otresult property)": [[86, "ot.utils.OTResult.a_to_b"]], "b_to_a (ot.utils.otresult property)": [[86, "ot.utils.OTResult.b_to_a"]], "check_params() (in module ot.utils)": [[86, "id3"], [86, "ot.utils.check_params"]], "check_random_state() (in module ot.utils)": [[86, "id4"], [86, "ot.utils.check_random_state"]], "citation (ot.utils.otresult property)": [[86, "ot.utils.OTResult.citation"]], "clean_zeros() (in module ot.utils)": [[86, "id5"], [86, "ot.utils.clean_zeros"]], "cost_normalization() (in module ot.utils)": [[86, "id6"], [86, "ot.utils.cost_normalization"]], "deprecated (class in ot.utils)": [[86, "id7"], [86, "ot.utils.deprecated"]], "dist() (in module ot.utils)": [[86, "id8"], [86, "ot.utils.dist"]], "dist0() (in module ot.utils)": [[86, "id9"], [86, "ot.utils.dist0"]], "dots() (in module ot.utils)": [[86, "id10"], [86, "ot.utils.dots"]], "euclidean_distances() (in module ot.utils)": [[86, "id11"], [86, "ot.utils.euclidean_distances"]], "get_coordinate_circle() (in module ot.utils)": [[86, "id12"], [86, "ot.utils.get_coordinate_circle"]], "get_params() (ot.utils.baseestimator method)": [[86, "id1"], [86, "ot.utils.BaseEstimator.get_params"]], "kernel() (in module ot.utils)": [[86, "id13"], [86, "ot.utils.kernel"]], "label_normalization() (in module ot.utils)": [[86, "id14"], [86, "ot.utils.label_normalization"]], "laplacian() (in module ot.utils)": [[86, "id15"], [86, "ot.utils.laplacian"]], "lazy_plan (ot.utils.otresult property)": [[86, "ot.utils.OTResult.lazy_plan"]], "list_to_array() (in module ot.utils)": [[86, "id16"], [86, "ot.utils.list_to_array"]], "marginal_a (ot.utils.otresult property)": [[86, "ot.utils.OTResult.marginal_a"]], "marginal_b (ot.utils.otresult property)": [[86, "ot.utils.OTResult.marginal_b"]], "marginals (ot.utils.otresult property)": [[86, "ot.utils.OTResult.marginals"]], "ot.utils": [[86, "module-ot.utils"]], "parmap() (in module ot.utils)": [[86, "id17"], [86, "ot.utils.parmap"]], "plan (ot.utils.otresult property)": [[86, "ot.utils.OTResult.plan"]], "potential_a (ot.utils.otresult property)": [[86, "ot.utils.OTResult.potential_a"]], "potential_b (ot.utils.otresult property)": [[86, "ot.utils.OTResult.potential_b"]], "potentials (ot.utils.otresult property)": [[86, "ot.utils.OTResult.potentials"]], "proj_simplex() (in module ot.utils)": [[86, "id18"], [86, "ot.utils.proj_simplex"]], "projection_sparse_simplex() (in module ot.utils)": [[86, "id19"], [86, "ot.utils.projection_sparse_simplex"]], "set_params() (ot.utils.baseestimator method)": [[86, "id2"], [86, "ot.utils.BaseEstimator.set_params"]], "sparse_plan (ot.utils.otresult property)": [[86, "ot.utils.OTResult.sparse_plan"]], "status (ot.utils.otresult property)": [[86, "ot.utils.OTResult.status"]], "tic() (in module ot.utils)": [[86, "id20"], [86, "ot.utils.tic"]], "toc() (in module ot.utils)": [[86, "id21"], [86, "ot.utils.toc"]], "toq() (in module ot.utils)": [[86, "id22"], [86, "ot.utils.toq"]], "unif() (in module ot.utils)": [[86, "id23"], [86, "ot.utils.unif"]], "value (ot.utils.otresult property)": [[86, "ot.utils.OTResult.value"]], "value_linear (ot.utils.otresult property)": [[86, "ot.utils.OTResult.value_linear"]], "ot.weak": [[87, "module-ot.weak"]], "weak_optimal_transport() (in module ot.weak)": [[87, "id0"], [87, "ot.weak.weak_optimal_transport"]]}})