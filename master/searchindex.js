Search.setIndex({"docnames": ["all", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_entropic_semirelaxed_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_fgw_solvers", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/plot_semirelaxed_fgw", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_COOT", "auto_examples/others/plot_EWCA", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_learning_weights_with_COOT", "auto_examples/others/plot_logo", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_compute_wasserstein_circle", "auto_examples/plot_optim_OTreg", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "code_of_conduct", "contributing", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.coot", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gromov", "gen_modules/ot.lp", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "quickstart", "releases"], "filenames": ["all.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_entropic_semirelaxed_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_fgw_solvers.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/plot_semirelaxed_fgw.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_COOT.rst", "auto_examples/others/plot_EWCA.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_learning_weights_with_COOT.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_compute_wasserstein_circle.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "code_of_conduct.rst", "contributing.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.coot.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "quickstart.rst", "releases.rst"], "titles": ["API and modules", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example", "Plot Fused-Gromov-Wasserstein", "Comparison of Fused Gromov-Wasserstein solvers", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Semi-relaxed (Fused) Gromov-Wasserstein example", "Computation times", "Examples gallery", "Row and column alignments with CO-Optimal Transport", "Entropic Wasserstein Component Analysis", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Optimal transport with factored couplings", "Learning sample marginal distribution with CO-Optimal Transport", "Logo of the POT toolbox", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth and sparse OT example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different ground metrics", "OT distances in 1D", "OT distance on the Circle", "Regularized OT with generic solver", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Code of conduct", "Contributing to POT", "Contributors", "ot.backend", "ot.bregman", "ot.coot", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gromov", "ot.lp", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Quick start guide", "Releases"], "terms": {"The": [0, 2, 7, 10, 12, 26, 28, 32, 33, 34, 41, 43, 48, 51, 54, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91], "list": [0, 5, 10, 28, 61, 67, 69, 70, 71, 72, 75, 77, 78, 82, 85, 87, 88, 89, 91], "automat": [0, 6, 7, 43, 78, 90, 91], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 72, 74, 78, 80, 81, 82, 86, 87, 89, 90, 91], "sub": [0, 82, 89, 90], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 43, 44, 45, 46, 48, 51, 53, 54, 57, 58, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "follow": [0, 6, 7, 8, 11, 33, 43, 48, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 84, 85, 86, 89, 90, 91], "lp": [0, 7, 14, 16, 17, 37, 54, 70, 71, 72, 73, 79, 84, 86, 87, 89, 90, 91], "bregman": [0, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 31, 32, 45, 48, 51, 55, 72, 74, 75, 78, 79, 80, 86, 88, 89, 91], "optim": [0, 1, 3, 5, 8, 9, 11, 14, 19, 24, 25, 28, 29, 30, 31, 32, 35, 37, 40, 46, 47, 55, 56, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 91], "util": [0, 2, 6, 7, 10, 11, 13, 43, 46, 48, 61, 69, 72, 78, 90, 91], "dataset": [0, 1, 7, 8, 10, 11, 13, 18, 20, 21, 22, 24, 26, 28, 32, 39, 40, 41, 45, 49, 50, 51, 53, 55, 57, 60, 61, 62, 63, 64, 74, 77, 85, 90, 91], "gromov": [0, 9, 28, 36, 65, 68, 73, 79, 80, 87, 89, 91], "smooth": [0, 11, 37, 56, 68, 73, 81, 89, 90, 91], "stochast": [0, 1, 2, 5, 37, 47, 68, 70, 77, 81, 89, 90, 91], "partial": [0, 61, 64, 65, 68, 73, 85, 89, 91], "regpath": 0, "unbalanc": [0, 62, 65, 68, 70, 72, 73, 80, 81, 82, 87, 89, 91], "ar": [0, 7, 12, 14, 20, 26, 28, 29, 31, 33, 34, 35, 41, 43, 46, 48, 50, 51, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "due": [0, 72, 78, 90, 91], "addit": [0, 67, 71, 78, 82, 89, 90, 91], "depend": [0, 34, 69, 77, 79, 90, 91], "dr": [0, 39, 40, 89, 90, 91], "pymanopt": [0, 74, 89, 90, 91], "autograd": [0, 4, 74, 89, 90, 91], "plot": [0, 2, 7, 10, 11, 13, 29, 31, 34, 35, 36, 37, 43, 55, 90, 91], "matplotlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 91], "barycent": [0, 9, 17, 36, 57, 65, 68, 70, 72, 73, 77, 78, 83, 86, 87, 89, 91], "A": [0, 3, 10, 11, 12, 13, 16, 23, 24, 25, 26, 28, 39, 40, 45, 46, 48, 55, 61, 67, 70, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91], "m": [0, 2, 6, 7, 8, 10, 11, 13, 20, 21, 24, 25, 29, 30, 31, 34, 35, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 53, 55, 58, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "reg": [0, 1, 5, 10, 11, 12, 13, 15, 18, 19, 20, 21, 31, 32, 34, 39, 40, 46, 48, 50, 51, 53, 55, 61, 62, 63, 64, 70, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 89, 90, 91], "weight": [0, 10, 11, 12, 13, 14, 15, 16, 29, 31, 34, 35, 41, 43, 48, 51, 61, 63, 70, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 91], "none": [0, 2, 5, 13, 15, 28, 29, 30, 31, 34, 35, 38, 39, 43, 48, 54, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91], "method": [0, 7, 13, 28, 31, 46, 67, 70, 71, 72, 74, 77, 78, 84, 85, 86, 87, 89, 90, 91], "sinkhorn": [0, 8, 14, 17, 18, 20, 22, 31, 32, 37, 45, 55, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 84, 86, 87, 88, 89, 91], "numitermax": [0, 14, 15, 18, 20, 21, 31, 32, 46, 48, 51, 55, 70, 72, 75, 77, 78, 79, 80, 84, 85, 86, 88], "10000": [0, 69, 70, 77, 85], "stopthr": [0, 70, 72, 74, 75, 77, 78, 79, 80, 84, 86, 88, 91], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90], "0001": [0, 70, 79, 82], "verbos": [0, 11, 18, 21, 24, 25, 30, 31, 32, 34, 38, 43, 45, 49, 55, 60, 62, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 86, 88], "fals": [0, 13, 25, 28, 29, 31, 34, 35, 39, 43, 45, 54, 58, 63, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88], "log": [0, 13, 21, 28, 29, 30, 31, 32, 34, 35, 38, 43, 46, 55, 57, 58, 62, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 90, 91], "warn": [0, 2, 15, 18, 20, 21, 22, 26, 31, 32, 33, 34, 45, 48, 51, 55, 61, 67, 70, 72, 87, 91], "true": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 13, 16, 18, 21, 24, 25, 28, 29, 30, 31, 32, 34, 35, 38, 40, 43, 44, 45, 46, 48, 49, 55, 58, 60, 62, 63, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91], "kwarg": [0, 70, 72, 73, 75, 77, 79, 80, 81, 86, 87, 88, 91], "sourc": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "comput": [0, 2, 6, 7, 8, 11, 34, 43, 45, 49, 50, 54, 57, 58, 60, 69, 70, 71, 72, 74, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 91], "entrop": [0, 9, 15, 17, 31, 32, 36, 37, 47, 62, 65, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 91], "regular": [0, 9, 10, 12, 15, 17, 18, 19, 20, 21, 25, 27, 31, 32, 34, 36, 45, 51, 56, 61, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91], "wasserstein": [0, 9, 17, 36, 47, 53, 59, 65, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 86, 87, 89, 91], "distribut": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 17, 24, 27, 30, 33, 37, 41, 42, 47, 48, 52, 53, 54, 55, 56, 59, 63, 64, 65, 68, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91], "mathbf": [0, 6, 29, 34, 35, 39, 48, 64, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88], "solv": [0, 2, 20, 26, 43, 44, 64, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 86, 87, 88, 91], "problem": [0, 6, 7, 8, 10, 11, 20, 21, 26, 43, 44, 61, 64, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91], "mathop": [0, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 86, 87, 88], "arg": [0, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 86, 87, 88, 90], "min": [0, 29, 31, 34, 39, 40, 48, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 86, 87, 88, 90], "_": [0, 24, 34, 38, 43, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90], "quad": [0, 6, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 86, 87, 88, 90], "sum_i": [0, 30, 69, 70, 78, 84, 85, 86, 87, 88, 90], "w_": [0, 34, 70, 77, 78, 86], "_i": [0, 39, 70, 74, 78, 82, 84, 85, 86, 87, 88], "where": [0, 4, 6, 7, 28, 34, 43, 46, 48, 64, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 90, 91], "cdot": [0, 39, 64, 70, 72, 74, 78, 79, 80, 85, 86, 90], "distanc": [0, 3, 8, 9, 28, 29, 33, 34, 35, 38, 48, 56, 58, 59, 68, 70, 71, 72, 73, 74, 76, 77, 78, 80, 83, 84, 86, 87, 89, 91], "see": [0, 2, 5, 8, 48, 67, 69, 70, 72, 73, 74, 77, 78, 80, 82, 84, 85, 86, 90, 91], "sinkhorn_stabil": [0, 70, 72, 86, 90], "sinkhorn_log": [0, 70, 71, 74, 90, 91], "train": [0, 19, 25, 40, 43, 70, 72, 73, 74, 78, 86, 90, 91], "column": [0, 6, 29, 31, 35, 37, 47, 50, 70, 71, 78, 82, 84, 86], "matrix": [0, 2, 6, 8, 10, 11, 13, 19, 23, 25, 28, 33, 34, 41, 43, 51, 52, 53, 55, 61, 63, 64, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "respect": [0, 6, 16, 34, 48, 66, 69, 70, 71, 72, 74, 77, 78, 86, 89, 90, 91], "term": [0, 8, 51, 55, 70, 71, 72, 74, 77, 78, 79, 80, 84, 85, 86, 87, 90, 91], "cost": [0, 20, 26, 32, 38, 40, 41, 43, 45, 46, 49, 50, 51, 52, 60, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "algorithm": [0, 15, 31, 32, 33, 45, 61, 67, 70, 71, 72, 74, 75, 77, 78, 79, 84, 85, 86, 88, 89, 90, 91], "us": [0, 2, 3, 6, 7, 8, 10, 11, 19, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 46, 48, 49, 55, 60, 61, 62, 64, 66, 67, 69, 75, 77, 83, 88, 91], "knopp": [0, 68, 69, 70, 86, 89, 90, 91], "scale": [0, 29, 31, 33, 35, 39, 44, 46, 61, 70, 72, 78, 84, 85, 86, 87, 89, 90, 91], "propos": [0, 3, 6, 8, 10, 11, 13, 16, 39, 40, 55, 57, 58, 61, 70, 72, 75, 76, 77, 78, 80, 85, 86, 88, 90, 91], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 28, 30, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 70, 72, 78, 79, 80, 82, 83, 86, 89, 90], "paramet": [0, 2, 5, 6, 7, 8, 11, 12, 18, 20, 21, 28, 30, 31, 32, 33, 34, 42, 45, 51, 54, 55, 60, 61, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "arrai": [0, 2, 6, 7, 10, 11, 12, 13, 15, 16, 21, 23, 28, 32, 33, 34, 39, 41, 44, 48, 51, 57, 61, 62, 63, 64, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91], "like": [0, 2, 48, 67, 68, 70, 71, 72, 75, 76, 77, 78, 79, 85, 86, 87, 88, 91], "shape": [0, 2, 3, 4, 7, 10, 11, 13, 14, 16, 19, 21, 23, 25, 26, 28, 29, 30, 31, 33, 34, 35, 40, 44, 48, 61, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91], "dim": [0, 4, 33, 70, 83, 86, 87], "n_hist": [0, 70, 86], "size": [0, 4, 6, 8, 15, 19, 25, 29, 31, 34, 35, 38, 48, 54, 66, 69, 70, 71, 72, 73, 74, 77, 78, 82, 85, 87, 91], "loss": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 18, 24, 25, 30, 31, 34, 41, 43, 51, 52, 55, 61, 62, 63, 64, 70, 72, 77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 91], "float": [0, 1, 5, 6, 7, 8, 12, 28, 33, 40, 43, 48, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "str": [0, 31, 32, 34, 48, 62, 64, 70, 72, 73, 74, 77, 78, 84, 85, 86, 87], "option": [0, 48, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91], "solver": [0, 9, 11, 30, 32, 36, 37, 44, 49, 56, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91], "either": [0, 24, 64, 70, 72, 74, 77, 78, 86], "each": [0, 6, 8, 28, 31, 34, 48, 70, 71, 72, 77, 78, 84, 85, 86, 87, 89, 90, 91], "histogram": [0, 43, 70, 71, 73, 75, 78, 80, 82, 84, 86, 87, 88, 89, 90, 91], "simplex": [0, 2, 6, 7, 34, 43, 70, 78, 84, 87, 89, 90], "barycentr": [0, 24, 70, 72, 78, 86, 90], "coodin": [0, 70, 86], "int": [0, 2, 33, 34, 39, 57, 58, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90], "max": [0, 10, 11, 13, 29, 31, 32, 33, 34, 35, 39, 41, 45, 48, 49, 50, 52, 53, 54, 55, 60, 61, 63, 64, 69, 70, 72, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "number": [0, 1, 5, 6, 8, 14, 15, 16, 18, 20, 21, 28, 30, 31, 32, 33, 34, 45, 48, 51, 55, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "iter": [0, 1, 2, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 31, 32, 33, 38, 40, 43, 48, 51, 55, 61, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91], "stop": [0, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 86, 88, 91], "threshold": [0, 28, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 84, 86, 88, 90], "error": [0, 7, 22, 28, 31, 32, 34, 61, 67, 69, 70, 72, 74, 77, 78, 80, 84, 86, 89, 90, 91], "bool": [0, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88], "print": [0, 1, 2, 4, 5, 6, 8, 29, 31, 32, 34, 35, 38, 43, 46, 48, 62, 67, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 86, 88, 91], "inform": [0, 24, 25, 34, 38, 43, 45, 46, 66, 67, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 86, 88, 89, 90], "along": [0, 2, 6, 7, 69, 70, 72, 74, 75, 77, 78, 79, 80, 82, 84, 86, 88], "record": [0, 7, 67, 70, 71, 72, 75, 76, 77, 78, 79, 80, 84, 85, 86, 88], "rais": [0, 67, 69, 70, 77, 78, 80, 87, 91], "doesn": [0, 70], "t": [0, 6, 7, 10, 11, 13, 29, 31, 32, 33, 34, 35, 38, 39, 40, 43, 44, 48, 54, 58, 61, 63, 64, 70, 71, 72, 74, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "converg": [0, 2, 15, 18, 20, 21, 31, 32, 33, 48, 51, 55, 70, 72, 77, 78, 79, 89, 90, 91], "return": [0, 2, 3, 4, 5, 6, 8, 16, 19, 23, 25, 28, 29, 31, 32, 33, 35, 48, 54, 55, 63, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "dict": [0, 34, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88], "dictionari": [0, 2, 36, 37, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 88, 89, 90, 91], "onli": [0, 6, 14, 30, 48, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91], "benam": [0, 10, 11, 70, 80, 86, 89, 90], "j": [0, 2, 10, 11, 12, 16, 19, 21, 25, 29, 30, 31, 33, 34, 35, 38, 39, 43, 44, 48, 55, 63, 64, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 84, 85, 86, 87, 89, 90], "d": [0, 10, 11, 14, 22, 23, 28, 31, 32, 34, 48, 55, 62, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90], "carlier": [0, 10, 11, 70, 78, 80, 86, 89, 90], "g": [0, 4, 8, 10, 11, 19, 21, 25, 28, 29, 30, 31, 34, 35, 45, 46, 48, 49, 51, 55, 60, 61, 63, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 91], "cuturi": [0, 8, 10, 11, 13, 31, 32, 40, 46, 68, 70, 72, 74, 76, 77, 78, 80, 84, 85, 86, 89, 90], "nenna": [0, 10, 11, 70, 80, 86, 89, 90], "l": [0, 8, 10, 11, 13, 30, 31, 32, 58, 61, 63, 70, 71, 72, 74, 77, 78, 80, 82, 83, 84, 86, 89, 90], "peyr\u00e9": [0, 8, 10, 11, 31, 32, 46, 55, 61, 68, 70, 72, 76, 77, 78, 79, 80, 85, 86, 89, 90], "2015": [0, 3, 10, 11, 55, 57, 70, 72, 79, 80, 83, 86, 89, 90], "project": [0, 2, 3, 4, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 29, 31, 32, 34, 35, 43, 45, 48, 51, 54, 55, 61, 62, 66, 67, 68, 70, 74, 77, 78, 80, 83, 84, 86, 87, 89, 90, 91], "transport": [0, 3, 5, 10, 11, 25, 28, 29, 31, 32, 35, 37, 47, 55, 56, 61, 62, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 91], "siam": [0, 10, 11, 19, 25, 55, 70, 72, 78, 79, 80, 86, 89, 90], "journal": [0, 3, 10, 11, 19, 25, 32, 55, 57, 70, 72, 76, 77, 78, 79, 80, 83, 86, 88, 89, 90, 91], "scientif": [0, 10, 11, 70, 80, 86, 89, 90, 91], "37": [0, 4, 5, 9, 10, 11, 13, 55, 70, 80, 86, 89, 90, 91], "2": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 30, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "a1111": [0, 10, 11, 70, 80, 86, 89, 90], "a1138": [0, 10, 11, 70, 80, 86, 89, 90], "barycenter_unbalanc": [0, 61, 86, 90], "reg_m": [0, 64, 72, 80, 86, 90], "1000": [0, 5, 8, 14, 21, 23, 40, 43, 46, 54, 69, 70, 72, 74, 77, 80, 86], "1e": [0, 2, 7, 8, 10, 11, 13, 15, 18, 19, 20, 21, 24, 25, 26, 30, 33, 43, 44, 48, 49, 50, 51, 53, 55, 61, 63, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 91], "06": [0, 11, 17, 24, 31, 40, 46, 49, 55, 70, 71, 72, 74, 76, 78, 80, 86], "u_": [0, 83, 86], "sinkhorn_unbalanc": [0, 60, 64, 86, 90], "reg_mi": [0, 86], "margin": [0, 31, 32, 37, 47, 63, 70, 71, 77, 78, 80, 82, 86, 87, 90, 91], "relax": [0, 36, 37, 60, 68, 77, 79, 82, 84, 86, 89, 90, 91], "hyperparamet": [0, 86], "gener": [0, 3, 7, 11, 12, 13, 17, 32, 33, 37, 38, 44, 46, 48, 52, 54, 56, 62, 67, 68, 69, 70, 72, 73, 75, 78, 79, 81, 83, 84, 86, 87, 88, 89, 91], "10": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 15, 18, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 43, 45, 47, 49, 50, 54, 55, 57, 58, 60, 61, 62, 63, 64, 70, 72, 74, 77, 78, 79, 84, 86, 89, 90], "dimens": [0, 7, 33, 40, 69, 70, 74, 77, 80, 82, 83, 86, 91], "ground": [0, 37, 53, 56, 70, 72, 78, 81, 84, 85, 86, 89, 90], "metric": [0, 20, 21, 32, 37, 44, 48, 53, 56, 62, 70, 72, 77, 78, 79, 80, 81, 82, 85, 86, 87, 89, 90, 91], "entropi": [0, 45, 60, 69, 70, 74, 77, 84, 86, 89, 90], "If": [0, 67, 70, 71, 72, 73, 74, 75, 77, 78, 79, 84, 86, 87, 88, 89, 90, 91], "uniform": [0, 4, 6, 34, 41, 42, 45, 48, 51, 57, 58, 63, 64, 69, 70, 71, 72, 75, 77, 78, 83, 86, 87, 88, 90, 91], "chizat": [0, 61, 70, 72, 80, 86, 89, 90], "schmitzer": [0, 61, 70, 72, 80, 86, 89, 90], "b": [0, 6, 7, 11, 14, 21, 22, 23, 26, 30, 32, 33, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "vialard": [0, 61, 70, 72, 80, 86, 89, 90], "f": [0, 3, 4, 10, 13, 19, 25, 29, 30, 34, 35, 39, 43, 46, 48, 55, 58, 61, 69, 70, 71, 72, 74, 77, 78, 79, 80, 83, 85, 86, 87, 89, 90, 91], "x": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 39, 40, 41, 42, 43, 45, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "2016": [0, 11, 24, 25, 31, 32, 40, 46, 61, 70, 72, 74, 77, 78, 80, 85, 86, 89, 90, 91], "arxiv": [0, 16, 52, 55, 61, 70, 72, 74, 78, 79, 84, 86, 87, 89, 90], "preprin": [0, 86], "1607": [0, 61, 70, 72, 86, 89, 90], "05816": [0, 61, 70, 72, 86, 89, 90], "binary_search_circl": [0, 78, 91], "u_valu": [0, 78], "v_valu": [0, 78], "u_weight": [0, 78], "v_weight": [0, 78], "p": [0, 2, 4, 7, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 44, 48, 54, 58, 62, 63, 64, 69, 70, 71, 72, 73, 74, 75, 77, 78, 80, 83, 84, 87, 88, 89, 90, 91], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90], "lm": [0, 78], "tm": [0, 54, 78], "tp": [0, 54, 63, 78], "ep": [0, 8, 13, 33, 69, 78], "require_sort": [0, 78], "circl": [0, 37, 40, 48, 56, 68, 78, 87, 89, 91], "binari": [0, 34, 73, 78], "search": [0, 28, 29, 35, 48, 70, 77, 78, 79, 89, 90], "44": [0, 55, 78, 80, 89, 91], "sampl": [0, 1, 6, 19, 25, 34, 37, 40, 41, 42, 44, 46, 47, 48, 51, 54, 57, 58, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91], "need": [0, 48, 62, 67, 70, 74, 78, 81, 90, 91], "": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 39, 43, 45, 48, 49, 50, 53, 54, 55, 59, 60, 61, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91], "cong": [0, 78], "thei": [0, 66, 78, 90, 91], "mathbb": [0, 70, 77, 78, 83, 85, 87, 90], "r": [0, 3, 4, 7, 8, 10, 11, 13, 21, 24, 25, 29, 32, 33, 34, 35, 38, 39, 40, 42, 43, 45, 46, 48, 49, 50, 53, 54, 55, 58, 60, 61, 62, 63, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91], "take": [0, 54, 66, 78, 79, 82, 85, 86, 90], "valu": [0, 2, 7, 11, 26, 28, 30, 33, 34, 40, 48, 53, 54, 61, 69, 70, 71, 72, 73, 77, 78, 79, 80, 81, 82, 84, 86, 87, 90, 91], "modulo": [0, 78], "subset": [0, 78, 87], "requir": [0, 28, 69, 72, 77, 78, 89, 90, 91], "first": [0, 2, 3, 29, 30, 32, 34, 35, 67, 69, 70, 71, 77, 78, 82, 84, 87, 89, 90], "find": [0, 28, 33, 46, 69, 78, 79, 89, 90, 91], "coordin": [0, 12, 30, 33, 69, 71, 72, 74, 77, 78, 85, 86, 87, 89, 90], "e": [0, 43, 66, 70, 77, 78, 83, 87, 89], "atan2": [0, 69, 78, 87], "w_p": [0, 78, 83, 90], "u": [0, 1, 2, 3, 5, 6, 14, 39, 43, 48, 58, 61, 67, 70, 74, 78, 80, 83, 85, 86, 87, 89, 90, 91], "v": [0, 1, 5, 17, 22, 27, 28, 29, 31, 35, 37, 39, 46, 47, 48, 58, 61, 69, 70, 72, 73, 78, 81, 83, 84, 85, 86, 87, 89, 90, 91], "inf_": [0, 78], "theta": [0, 1, 5, 8, 24, 54, 70, 73, 78, 83], "int_0": [0, 78], "f_u": [0, 78], "q": [0, 30, 31, 32, 34, 61, 62, 69, 70, 71, 77, 78, 80, 82, 90], "f_v": [0, 78], "mathrm": [0, 4, 54, 64, 70, 72, 74, 77, 78, 79, 80, 83, 84, 85, 86, 87], "cdf": [0, 78], "For": [0, 26, 31, 32, 34, 46, 48, 62, 67, 70, 71, 78, 79, 82, 85, 87, 90, 91], "x_1": [0, 38, 48, 78, 87], "x_2": [0, 38, 48, 78, 87], "get": [0, 2, 29, 31, 33, 34, 35, 70, 72, 74, 77, 78, 87, 89, 90, 91], "frac": [0, 4, 38, 43, 69, 70, 72, 74, 77, 78, 80, 82, 83, 84, 85, 87, 88, 90], "pi": [0, 1, 5, 8, 16, 23, 24, 28, 38, 39, 40, 43, 52, 54, 58, 74, 78, 85, 87, 91], "get_coordinate_circl": [0, 78, 87], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 69, 78, 83, 89, 91], "backend": [0, 2, 3, 5, 6, 7, 31, 32, 43, 48, 68, 70, 75, 77, 78, 79, 83, 85, 87, 88, 89, 91], "tensorflow": [0, 69, 78, 83, 89, 90, 91], "jax": [0, 69, 78, 83, 87, 89, 90, 91], "support": [0, 3, 5, 7, 17, 18, 37, 68, 70, 71, 75, 78, 83, 91], "ndarrai": [0, 28, 33, 69, 70, 73, 74, 78, 79, 80, 81, 82, 83, 84, 85, 87], "n": [0, 2, 4, 6, 7, 8, 10, 11, 13, 14, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 49, 50, 51, 52, 53, 55, 57, 58, 60, 61, 63, 64, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90], "domain": [0, 26, 27, 29, 31, 55, 70, 72, 73, 74, 76, 77, 78, 79, 81, 83, 84, 86, 87, 89, 91], "target": [0, 1, 6, 7, 8, 23, 24, 27, 33, 37, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 63, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "default": [0, 2, 33, 34, 48, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 90, 91], "power": [0, 48, 69, 78, 83, 91], "lower": [0, 14, 18, 22, 32, 48, 78], "bound": [0, 78, 91], "dc": [0, 78], "upper": [0, 39, 60, 78], "condit": [0, 30, 31, 32, 55, 68, 69, 72, 75, 77, 78, 79, 88, 89, 90, 91], "sort": [0, 39, 67, 69, 78, 90], "also": [0, 2, 48, 67, 69, 70, 72, 77, 78, 87, 89, 90, 91], "associ": [0, 43, 72, 77, 78, 80, 83, 87], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 66, 67, 69, 83, 91], "np": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 69, 70, 72, 73, 78, 80, 82, 83, 84, 86, 87, 90, 91], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 70, 72, 73, 77, 78, 79, 80, 82, 83, 86, 87, 89, 90], "8": [0, 3, 4, 7, 8, 10, 11, 13, 14, 16, 18, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 43, 44, 46, 49, 51, 52, 55, 57, 61, 62, 63, 64, 71, 72, 77, 78, 85, 87, 89, 90], "4": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 60, 61, 62, 63, 64, 66, 70, 71, 77, 78, 80, 82, 86, 89, 90], "7": [0, 10, 11, 12, 13, 16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 38, 40, 43, 44, 46, 48, 51, 52, 53, 55, 58, 61, 64, 71, 72, 78, 79, 82, 84, 85, 89, 90], "delon": [0, 16, 78, 89], "juli": [0, 8, 78, 89, 91], "julien": [0, 78, 89], "salomon": [0, 78, 89], "andrei": [0, 78, 89], "sobolevski": [0, 78, 89], "fast": [0, 49, 70, 77, 78, 89, 90, 91], "mong": [0, 78, 80, 89], "appli": [0, 24, 66, 71, 72, 78, 87, 89], "mathemat": [0, 3, 57, 67, 70, 77, 78, 80, 83, 89, 90, 91], "70": [0, 1, 4, 5, 8, 29, 30, 31, 35, 49, 55, 78, 89], "2010": [0, 78, 80, 89], "2239": [0, 78, 89], "2258": [0, 78, 89], "dist": [0, 6, 8, 20, 28, 30, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 60, 61, 63, 64, 74, 77, 78, 82, 87, 90, 91], "x1": [0, 2, 3, 14, 15, 19, 23, 25, 38, 39, 44, 48, 54, 74, 87], "x2": [0, 3, 14, 15, 19, 23, 25, 38, 44, 48, 54, 74, 87], "sqeuclidean": [0, 20, 21, 48, 52, 53, 70, 72, 78, 85, 87], "w": [0, 6, 7, 8, 33, 34, 44, 48, 62, 64, 70, 71, 74, 76, 77, 78, 83, 84, 85, 86, 87, 89, 90, 91], "between": [0, 2, 3, 6, 15, 16, 19, 28, 29, 31, 33, 34, 35, 37, 38, 41, 42, 43, 44, 48, 56, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 86, 87, 88, 89, 91], "thi": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 48, 49, 50, 54, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 82, 83, 84, 85, 87, 88, 89, 90, 91], "compat": [0, 48, 69, 70, 74, 75, 77, 78, 84, 85, 87, 88, 91], "work": [0, 12, 48, 67, 69, 70, 75, 77, 78, 79, 87, 88, 91], "from": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 19, 21, 23, 25, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "all": [0, 10, 11, 13, 26, 28, 31, 33, 34, 37, 44, 48, 61, 66, 67, 69, 70, 72, 75, 77, 78, 82, 86, 87, 88, 89, 90, 91], "n1": [0, 38, 43, 48, 87], "n2": [0, 29, 30, 31, 35, 38, 43, 48, 87], "callabl": [0, 48, 72, 74, 77, 79, 85, 87, 91], "euclidean": [0, 11, 28, 29, 31, 35, 44, 48, 52, 53, 72, 74, 78, 84, 87, 90, 91], "On": [0, 48, 72, 76, 87, 89, 90, 91], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 74, 77, 78, 80, 82, 83, 86, 87, 89, 90, 91], "accept": [0, 48, 66, 67, 78, 87, 91], "scipi": [0, 28, 32, 33, 48, 54, 62, 67, 69, 78, 80, 84, 86, 87, 89, 90, 91], "spatial": [0, 32, 33, 48, 62, 80, 87], "cdist": [0, 32, 33, 48, 62, 80, 87, 91], "braycurti": [0, 48, 87], "canberra": [0, 48, 87], "chebyshev": [0, 48, 87], "cityblock": [0, 48, 52, 78, 87], "correl": [0, 48, 87], "cosin": [0, 48, 87], "dice": [0, 48, 87], "ham": [0, 48, 87, 91], "jaccard": [0, 48, 87], "kulczynski1": [0, 48, 87], "mahalanobi": [0, 48, 87], "match": [0, 32, 48, 72, 77, 87, 89, 90], "minkowski": [0, 48, 78, 87], "rogerstanimoto": [0, 48, 87], "russellrao": [0, 48, 87], "seuclidean": [0, 48, 87], "sokalmichen": [0, 48, 87], "sokalsneath": [0, 48, 87], "wminkowski": [0, 48, 87], "yule": [0, 48, 87], "norm": [0, 15, 28, 31, 32, 39, 40, 48, 64, 69, 71, 72, 78, 87], "rank": [0, 42, 48, 75, 84, 87], "given": [0, 2, 29, 31, 33, 34, 35, 43, 48, 69, 70, 72, 74, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91], "type": [0, 67, 69, 70, 72, 73, 77, 78, 79, 80, 82, 83, 84, 85, 87, 90, 91], "emd": [0, 18, 20, 22, 30, 41, 42, 44, 52, 68, 70, 71, 72, 78, 79, 80, 83, 84, 86, 88, 89, 91], "100000": [0, 46, 72, 78, 79, 86], "center_du": [0, 78], "numthread": [0, 78, 91], "earth": [0, 72, 78, 89, 91], "mover": [0, 72, 78, 89, 91], "gamma": [0, 48, 63, 64, 70, 72, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 90], "langl": [0, 70, 72, 77, 78, 79, 80, 83, 85, 86], "rangle_f": [0, 70, 72, 77, 78, 79, 80, 85, 86], "geq": [0, 64, 70, 72, 77, 78, 79, 80, 82, 85, 86, 87, 88, 90], "note": [0, 26, 48, 70, 72, 74, 77, 78, 80, 81, 84, 87, 89, 90, 91], "c": [0, 2, 7, 8, 15, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 41, 42, 46, 48, 51, 52, 54, 58, 63, 64, 68, 69, 70, 72, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "order": [0, 6, 20, 26, 28, 48, 69, 74, 78, 81, 90], "float64": [0, 3, 7, 10, 11, 13, 14, 16, 19, 23, 25, 31, 32, 33, 45, 49, 50, 53, 55, 60, 61, 70, 78], "format": [0, 1, 2, 3, 4, 5, 8, 21, 38, 48, 63, 67, 69, 78, 87, 89, 91], "It": [0, 2, 11, 18, 20, 21, 24, 25, 26, 30, 31, 32, 49, 55, 62, 67, 77, 78, 85, 89, 90, 91], "convert": [0, 6, 19, 23, 25, 33, 69, 78, 87], "But": [0, 75, 77, 78, 88, 90, 91], "cpu": [0, 2, 3, 7, 69, 75, 77, 78, 88, 91], "which": [0, 2, 28, 43, 48, 66, 69, 70, 71, 72, 75, 77, 78, 79, 81, 82, 88, 89, 90, 91], "can": [0, 2, 6, 48, 64, 67, 70, 72, 74, 75, 77, 78, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91], "lead": [0, 6, 48, 70, 75, 77, 78, 79, 88, 90, 91], "copi": [0, 7, 10, 29, 31, 35, 61, 67, 69, 75, 77, 78, 88, 90], "overhead": [0, 70, 75, 77, 78, 88, 90], "gpu": [0, 68, 69, 70, 75, 77, 78, 88, 91], "cast": [0, 40, 78, 90], "plan": [0, 2, 9, 29, 31, 35, 37, 42, 44, 49, 50, 63, 64, 70, 71, 75, 77, 78, 80, 82, 84, 85, 86, 87, 90, 91], "data": [0, 2, 3, 7, 13, 31, 32, 34, 48, 52, 67, 69, 70, 71, 72, 77, 78, 89, 90, 91], "provid": [0, 2, 34, 48, 67, 68, 69, 70, 72, 77, 78, 79, 82, 89, 90, 91], "input": [0, 13, 16, 61, 69, 70, 71, 72, 75, 77, 78, 84, 87, 88, 90], "prioriti": [0, 78], "an": [0, 2, 7, 8, 19, 23, 25, 28, 33, 48, 50, 66, 67, 69, 70, 72, 75, 77, 78, 79, 80, 82, 84, 85, 87, 91], "integ": [0, 28, 78, 91], "tensor": [0, 2, 3, 6, 7, 43, 69, 77, 78, 79, 90, 91], "might": [0, 15, 18, 20, 21, 26, 31, 32, 48, 51, 55, 70, 78, 90, 91], "result": [0, 2, 48, 66, 67, 69, 77, 78, 87, 90, 91], "precis": [0, 43, 69, 70, 72, 77, 78], "behaviour": [0, 78], "unwant": [0, 78], "pleas": [0, 67, 69, 78, 89], "make": [0, 29, 31, 35, 48, 52, 60, 61, 66, 67, 69, 73, 78, 89, 90, 91], "sure": [0, 67, 78, 89], "point": [0, 11, 15, 16, 30, 31, 32, 33, 44, 45, 46, 54, 67, 70, 74, 77, 78, 80, 87, 89, 90, 91], "vector": [0, 6, 69, 70, 71, 78, 82, 83, 87, 89, 90], "do": [0, 8, 20, 26, 32, 48, 62, 66, 67, 69, 70, 78, 87, 90, 91], "sum": [0, 2, 5, 6, 7, 11, 12, 13, 14, 29, 31, 32, 34, 35, 40, 41, 48, 51, 53, 55, 58, 60, 63, 64, 69, 70, 72, 74, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91], "same": [0, 24, 29, 32, 35, 48, 62, 69, 71, 78, 87, 90], "empti": [0, 57, 58, 72, 75, 78, 87, 88], "nt": [0, 6, 34, 70, 72, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 88], "maximum": [0, 4, 15, 28, 33, 48, 54, 69, 70, 72, 74, 77, 78, 79, 82, 84, 87], "befor": [0, 67, 72, 78, 91], "ha": [0, 2, 6, 8, 48, 68, 70, 72, 77, 78, 80, 87, 89, 90, 91], "contain": [0, 10, 11, 13, 61, 71, 75, 77, 78, 82, 87, 88, 89, 90, 91], "dual": [0, 8, 9, 11, 37, 70, 71, 73, 75, 77, 78, 81, 84, 85, 87, 88, 89, 90, 91], "variabl": [0, 34, 70, 72, 75, 77, 78, 82, 84, 85, 88, 90, 91], "otherwis": [0, 66, 69, 77, 78, 87], "boolean": [0, 69, 70, 72, 76, 78, 87], "center": [0, 39, 48, 74, 78, 91], "potenti": [0, 5, 8, 31, 70, 77, 78, 84, 85, 87, 91], "center_ot_du": [0, 78], "openmp": [0, 78, 91], "compil": [0, 78, 89, 90, 91], "choos": [0, 28, 54, 70, 74, 78, 90], "thread": [0, 78], "parallel": [0, 78, 87, 90, 91], "select": [0, 45, 77, 78, 90], "highest": [0, 78], "possibl": [0, 67, 70, 72, 78, 87, 90, 91], "exit": [0, 75, 78, 88, 91], "statu": [0, 75, 78, 87, 88, 91], "simpl": [0, 2, 6, 12, 33, 43, 48, 73, 78, 87, 90, 91], "obviou": [0, 78], "solut": [0, 44, 48, 70, 78, 82, 90, 91], "perform": [0, 2, 3, 7, 45, 67, 77, 78, 87, 90, 91], "convers": [0, 78], "bonneel": [0, 3, 57, 68, 78, 83, 89, 90], "van": [0, 78, 89, 90], "de": [0, 70, 78, 89, 90], "pann": [0, 78, 89, 90], "pari": [0, 14, 15, 78, 89, 90], "heidrich": [0, 78, 89, 90], "2011": [0, 77, 78, 89, 90], "decemb": [0, 69, 78, 89, 90, 91], "displac": [0, 53, 78, 87, 89, 90], "interpol": [0, 2, 7, 12, 18, 20, 22, 26, 30, 33, 34, 41, 48, 51, 52, 70, 78, 80, 89, 90], "lagrangian": [0, 78, 80, 82, 89, 90], "mass": [0, 2, 21, 29, 31, 48, 62, 64, 72, 77, 78, 80, 89, 90, 91], "In": [0, 2, 3, 6, 7, 8, 31, 32, 34, 38, 43, 44, 48, 66, 67, 70, 71, 74, 75, 77, 78, 81, 83, 84, 89, 90, 91], "acm": [0, 70, 78, 89, 90], "transact": [0, 55, 70, 72, 78, 79, 89, 90], "graphic": [0, 70, 78, 89, 90, 91], "tog": [0, 70, 78, 89, 90], "vol": [0, 8, 55, 72, 76, 78, 79, 89, 90], "30": [0, 1, 3, 4, 5, 8, 11, 18, 20, 22, 26, 28, 29, 30, 31, 32, 33, 34, 35, 39, 40, 45, 48, 49, 55, 72, 78, 89, 90, 91], "No": [0, 2, 34, 67, 78, 89, 90], "6": [0, 2, 5, 7, 11, 13, 15, 16, 18, 19, 20, 22, 24, 25, 29, 31, 32, 34, 40, 42, 44, 45, 46, 48, 49, 50, 51, 52, 55, 60, 61, 62, 63, 64, 71, 72, 77, 78, 82, 85, 89, 90], "158": [0, 55, 78, 89, 90], "cg": [0, 31, 32, 55, 70, 72, 75, 77, 78, 84, 86, 88, 90, 91], "emd2": [0, 6, 8, 53, 68, 78, 86, 89, 91], "process": [0, 24, 25, 29, 35, 38, 43, 45, 46, 48, 70, 71, 72, 78, 84, 85, 86, 89, 90, 91], "return_matrix": [0, 78], "min_": [0, 4, 6, 7, 8, 43, 64, 70, 72, 74, 77, 78, 80, 82, 86, 90], "nb": [0, 7, 10, 11, 13, 19, 25, 29, 31, 32, 33, 35, 40, 41, 42, 45, 49, 50, 51, 52, 53, 55, 57, 58, 60, 61, 62, 63, 64, 77, 78, 79, 81], "multipl": [0, 53, 70, 77, 78, 84, 86, 87, 91], "deprec": [0, 7, 10, 61, 62, 78, 87], "emd2_1d": [0, 78, 90], "x_a": [0, 78], "x_b": [0, 78], "dens": [0, 69, 77, 78, 87], "1d": [0, 9, 17, 30, 37, 56, 65, 68, 73, 77, 78, 79, 81, 87, 89, 90, 91], "measur": [0, 3, 7, 14, 16, 30, 46, 57, 70, 71, 74, 77, 78, 83, 85, 87, 89, 90], "sum_j": [0, 30, 78, 84, 85, 88], "gamma_": [0, 48, 70, 72, 78, 79, 80, 85, 86, 88, 90], "ij": [0, 39, 78, 88], "when": [0, 2, 54, 64, 66, 67, 70, 71, 74, 77, 78, 80, 82, 87, 89, 91], "y": [0, 1, 4, 8, 10, 15, 16, 18, 20, 21, 22, 24, 26, 28, 30, 32, 34, 39, 40, 43, 58, 61, 69, 70, 71, 72, 73, 74, 77, 78, 80, 82, 83, 84, 87, 89, 90], "detail": [0, 66, 67, 74, 78, 90, 91], "dirac": [0, 14, 41, 51, 78], "locat": [0, 14, 16, 69, 70, 78], "real": [0, 40, 78], "line": [0, 19, 23, 25, 33, 48, 70, 77, 78, 79, 81, 90], "string": [0, 70, 71, 72, 77, 78, 85, 86, 87], "implement": [0, 5, 48, 67, 68, 69, 70, 74, 77, 78, 84, 87, 90, 91], "faster": [0, 78, 91], "math": [0, 28, 48, 78, 80, 84, 90], "spars": [0, 28, 37, 48, 56, 69, 70, 73, 74, 77, 78, 81, 84, 86, 87, 89, 90, 91], "represent": [0, 29, 34, 35, 46, 58, 66, 77, 78, 79, 83, 84, 85, 89, 90], "coo_matrix": [0, 69, 78], "set": [0, 2, 8, 18, 20, 22, 27, 28, 33, 34, 37, 48, 66, 69, 70, 72, 73, 77, 78, 79, 82, 87, 89, 90], "2017": [0, 8, 70, 72, 76, 78, 88, 89, 90, 91], "2018": [0, 8, 46, 70, 72, 76, 78, 80, 84, 85, 89, 90, 91], "multidimension": [0, 33, 78], "emd_1d": [0, 49, 78, 90, 91], "instead": [0, 5, 8, 10, 34, 61, 69, 70, 71, 78, 89, 90, 91], "factored_optimal_transport": [0, 42, 75], "xa": [0, 75, 88], "xb": [0, 3, 15, 42, 75, 88], "100": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 22, 24, 28, 31, 32, 33, 34, 39, 40, 42, 44, 45, 48, 49, 50, 53, 54, 55, 60, 61, 62, 63, 69, 70, 71, 72, 74, 75, 77, 78, 80, 83], "x0": [0, 4, 28, 75, 78, 83], "07": [0, 11, 25, 27, 32, 36, 40, 46, 47, 49, 55, 59, 62, 70, 71, 75, 78, 80, 86], "factor": [0, 37, 47, 69, 81, 89, 90, 91], "intermedi": [0, 5, 75], "40": [0, 1, 4, 5, 8, 9, 29, 31, 32, 34, 35, 48, 49, 55, 64, 75, 82, 89, 90], "mu": [0, 3, 6, 7, 24, 25, 28, 30, 54, 62, 72, 74, 75, 83, 90], "w_2": [0, 54, 75, 78, 90], "mu_a": [0, 75], "mu_b": [0, 75], "empir": [0, 2, 3, 27, 37, 42, 52, 56, 68, 70, 72, 73, 75, 76, 78, 81, 87, 88, 89, 90, 91], "And": [0, 75], "two": [0, 2, 3, 10, 19, 21, 30, 38, 43, 46, 48, 50, 53, 61, 67, 69, 70, 71, 72, 75, 76, 77, 78, 82, 86, 88, 89, 90, 91], "gradient": [0, 2, 6, 7, 8, 9, 30, 31, 32, 37, 40, 43, 55, 68, 69, 70, 72, 74, 75, 77, 78, 79, 80, 82, 84, 85, 88, 89, 90, 91], "39": [0, 1, 55, 63, 65, 75, 88, 89, 90], "rel": [0, 18, 30, 31, 32, 33, 55, 70, 72, 75, 77, 79, 88, 91], "variat": [0, 11, 53, 75, 79, 88, 90, 91], "ga": [0, 42, 75], "gb": [0, 42, 75], "forrow": [0, 75, 89, 90], "h\u00fctter": [0, 75, 89, 90], "nitzan": [0, 75, 89, 90], "rigollet": [0, 70, 75, 89, 90], "schiebing": [0, 75, 89, 90], "weed": [0, 70, 75, 89, 90], "2019": [0, 3, 28, 30, 31, 32, 45, 70, 72, 75, 77, 83, 89, 90, 91], "april": [0, 70, 75, 89, 90, 91], "statist": [0, 8, 70, 72, 75, 78, 84, 89, 90], "via": [0, 2, 3, 34, 66, 70, 75, 77, 89, 90, 91], "coupl": [0, 24, 37, 47, 70, 71, 72, 75, 77, 81, 89, 90, 91], "22nd": [0, 70, 75, 89, 90], "intern": [0, 2, 3, 7, 8, 13, 28, 29, 30, 31, 32, 34, 35, 46, 58, 70, 72, 75, 77, 78, 79, 80, 83, 84, 85, 89, 90], "confer": [0, 2, 3, 8, 13, 28, 29, 30, 31, 32, 34, 35, 46, 58, 70, 72, 75, 77, 78, 79, 80, 83, 84, 85, 89, 90], "artifici": [0, 8, 70, 72, 75, 84, 89, 90], "intellig": [0, 8, 55, 70, 72, 75, 79, 84, 89, 90], "pp": [0, 3, 8, 31, 32, 55, 70, 72, 75, 79, 83, 89, 90], "2454": [0, 75, 89, 90], "2465": [0, 75, 89, 90], "pmlr": [0, 3, 8, 13, 70, 75, 89, 90], "fused_gromov_wasserstein": [0, 29, 30, 31, 35, 77, 90], "c1": [0, 2, 29, 30, 31, 32, 35, 62, 63, 64, 77, 79, 80, 90], "c2": [0, 2, 29, 30, 31, 32, 35, 62, 63, 64, 77, 80, 90], "loss_fun": [0, 30, 77], "square_loss": [0, 30, 31, 32, 33, 77], "symmetr": [0, 29, 35, 70, 77, 90, 91], "alpha": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 18, 20, 21, 22, 24, 26, 28, 29, 30, 31, 34, 35, 39, 42, 44, 46, 48, 53, 54, 57, 58, 60, 61, 63, 64, 70, 71, 72, 77, 78, 79, 81, 84, 85, 91], "armijo": [0, 77, 79, 91], "g0": [0, 29, 35, 41, 42, 49, 51, 55, 77, 79, 80, 86, 88], "max_it": [0, 18, 21, 24, 25, 32, 33, 72, 77, 84, 91], "tol_rel": [0, 77], "09": [0, 9, 11, 17, 32, 46, 49, 55, 59, 70, 72, 77, 79, 84], "tol_ab": [0, 77], "fgw": [0, 29, 31, 35, 36, 37, 68, 77, 89, 91], "graph": [0, 30, 32, 36, 37, 48, 68, 69, 77, 79, 89, 90, 91], "24": [0, 30, 31, 32, 40, 55, 71, 77, 89, 90, 91], "sum_": [0, 4, 6, 48, 70, 71, 72, 74, 77, 78, 79, 80, 83, 85, 86, 90], "k": [0, 2, 6, 8, 13, 14, 15, 21, 28, 29, 30, 31, 34, 35, 39, 40, 44, 48, 50, 54, 69, 70, 71, 72, 74, 77, 78, 80, 82, 90], "c_1": [0, 30, 77, 79, 80], "c_2": [0, 29, 30, 35, 77, 80], "account": [0, 54, 66, 67, 70, 77], "misfit": [0, 77], "similar": [0, 8, 26, 48, 72, 77, 82, 90], "matric": [0, 7, 31, 32, 33, 38, 43, 48, 55, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 87, 88, 89, 90, 91], "conjug": [0, 77, 84], "done": [0, 6, 43, 44, 48, 77, 90, 91], "limit": [0, 69, 77, 91], "memori": [0, 70, 77, 78, 85, 90, 91], "discuss": [0, 72, 76, 77, 79, 89, 90, 91], "featur": [0, 28, 31, 43, 67, 70, 71, 77, 89], "across": [0, 29, 31, 77, 91], "repres": [0, 20, 26, 28, 66, 70, 77, 78, 90], "structur": [0, 28, 31, 32, 34, 69, 77, 89, 90, 91], "space": [0, 16, 32, 33, 62, 66, 69, 70, 71, 77, 78, 80, 83, 89, 90, 91], "let": [0, 77, 79], "its": [0, 1, 2, 5, 24, 29, 31, 34, 35, 48, 54, 66, 69, 70, 77, 79, 80, 83, 89, 90, 91], "taken": [0, 34, 77, 90], "assum": [0, 77, 91], "symmetri": [0, 77], "test": [0, 28, 40, 67, 69, 77, 79, 89, 91], "conduct": [0, 77, 79], "els": [0, 2, 3, 7, 12, 16, 21, 28, 29, 31, 34, 35, 39, 54, 72, 74, 76, 77, 86], "resp": [0, 70, 77, 79], "asymmetr": [0, 77, 91], "trade": [0, 34, 77], "off": [0, 2, 4, 12, 13, 19, 21, 23, 25, 29, 31, 34, 35, 44, 55, 67, 77], "step": [0, 1, 2, 3, 5, 6, 7, 8, 11, 28, 43, 67, 69, 70, 77, 79, 91], "found": [0, 28, 67, 77, 90], "research": [0, 68, 77, 89, 90, 91], "close": [0, 28, 48, 72, 76, 77, 78, 87, 90], "form": [0, 6, 8, 48, 72, 76, 77, 78, 82, 87, 90, 91], "issu": [0, 66, 67, 70, 77, 87, 89, 90], "initi": [0, 14, 68, 70, 71, 74, 77, 78, 79, 80, 86, 88, 90], "pq": [0, 77], "must": [0, 77, 84, 87], "satisfi": [0, 77, 79], "constraint": [0, 31, 32, 70, 77, 78, 79, 84, 87, 90], "absolut": [0, 18, 30, 31, 32, 55, 69, 71, 77, 79, 88, 91], "directli": [0, 48, 77, 80, 90], "pass": [0, 67, 77, 78, 80, 84, 87, 91], "vayer": [0, 2, 28, 29, 30, 31, 32, 34, 35, 38, 39, 43, 68, 71, 74, 77, 79, 89, 90], "titouan": [0, 28, 29, 30, 31, 32, 35, 68, 77, 79, 89], "chapel": [0, 28, 30, 31, 32, 62, 63, 64, 68, 77, 80, 82, 86, 89, 90], "laetitia": [0, 28, 30, 31, 32, 62, 64, 68, 77, 89], "flamari": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 53, 55, 63, 68, 70, 71, 72, 74, 77, 79, 82, 85, 86, 89, 90], "r\u00e9mi": [0, 2, 3, 7, 14, 28, 29, 30, 31, 32, 35, 68, 70, 72, 77, 79, 89, 90], "tavenard": [0, 28, 30, 31, 32, 68, 77, 89, 90], "romain": [0, 28, 30, 31, 32, 68, 77, 89], "courti": [0, 2, 7, 8, 12, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 40, 43, 46, 48, 55, 58, 68, 70, 71, 72, 74, 77, 78, 79, 83, 85, 89, 90], "nicola": [0, 3, 7, 12, 28, 29, 30, 31, 32, 33, 35, 48, 57, 68, 70, 72, 77, 79, 83, 89, 90], "applic": [0, 26, 28, 29, 30, 31, 32, 35, 55, 70, 72, 76, 77, 78, 79, 80, 88, 89], "machin": [0, 2, 3, 8, 13, 28, 30, 31, 32, 34, 55, 70, 72, 77, 78, 79, 80, 89, 90, 91], "learn": [0, 2, 3, 6, 8, 13, 24, 28, 29, 30, 31, 32, 35, 36, 37, 46, 47, 58, 67, 68, 70, 71, 72, 77, 78, 79, 80, 83, 84, 85, 86, 87, 89, 90, 91], "icml": [0, 2, 28, 30, 31, 32, 34, 74, 77, 80, 87, 89, 90], "47": [0, 16, 17, 38, 43, 55, 71, 77, 89, 91], "chowdhuri": [0, 77, 89], "m\u00e9moli": [0, 77, 89, 90], "network": [0, 8, 77, 89, 90, 91], "stabl": [0, 5, 69, 77, 89, 90, 91], "invari": [0, 77, 89], "infer": [0, 69, 77, 89], "ima": [0, 77, 89], "757": [0, 77, 89], "787": [0, 77, 89], "fused_gromov_wasserstein2": [0, 77], "gw": [0, 29, 35, 77, 79, 80, 89, 91], "differenti": [0, 6, 7, 43, 77, 89, 90, 91], "wrt": [0, 2, 69, 77, 87], "quadrat": [0, 9, 37, 64, 73, 77, 79, 80, 81, 85, 86, 87, 89, 91], "38": [0, 1, 2, 25, 27, 34, 55, 77, 89, 90], "fuse": [0, 36, 68, 77, 89, 90, 91], "vincent": [0, 2, 29, 31, 32, 34, 35, 68, 77, 79, 89, 90], "cuaz": [0, 2, 29, 31, 32, 34, 35, 68, 77, 79, 89, 90], "corn": [0, 2, 29, 34, 35, 77, 79, 89, 90], "onlin": [0, 2, 34, 48, 66, 77, 89, 90], "2021": [0, 2, 16, 29, 32, 34, 35, 63, 69, 74, 77, 78, 79, 82, 86, 89, 90, 91], "gromov_barycent": [0, 33, 77, 90, 91], "lambda": [0, 28, 77, 80, 82, 90], "tol": [0, 21, 33, 72, 77, 80, 84], "warmstartt": [0, 77, 91], "init_c": [0, 77], "random_st": [0, 2, 33, 34, 39, 73, 77], "leq": [0, 77, 79, 80, 90], "block": [0, 2, 26, 67, 70, 71, 72, 74, 77, 89, 90], "descent": [0, 2, 6, 7, 43, 71, 72, 74, 77, 79, 89, 90], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 72, 77, 78, 85, 87, 89, 90, 91], "lambda_": [0, 77, 90], "base": [0, 29, 31, 32, 35, 67, 70, 72, 77, 84, 87, 90, 91], "specif": [0, 33, 66, 67, 70, 72, 77, 86, 90, 91], "updat": [0, 70, 72, 77, 78, 82, 85, 87, 91], "accord": [0, 77, 87], "kernel": [0, 24, 31, 72, 77, 80, 87, 89, 90], "calcul": [0, 15, 38, 69, 70, 71, 77], "warmstart": [0, 31, 70, 71, 77, 91], "success": [0, 77], "random": [0, 2, 3, 5, 6, 8, 14, 15, 19, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 46, 54, 58, 62, 63, 64, 69, 73, 77, 83, 87, 91], "user": [0, 55, 67, 77, 89, 90, 91], "randomst": [0, 2, 6, 19, 23, 25, 33, 39, 46, 73, 77, 83, 87], "instanc": [0, 5, 66, 73, 77, 79, 87, 90, 91], "fix": [0, 34, 43, 67, 70, 74, 77, 78, 80, 84, 89, 91], "seed": [0, 3, 5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 40, 42, 43, 63, 64, 69, 73, 77, 83, 87], "reproduc": [0, 11, 67, 77, 90], "permut": [0, 2, 3, 7, 77], "arbitrarili": [0, 77], "dure": [0, 77], "12": [0, 5, 11, 13, 14, 18, 25, 31, 32, 34, 40, 43, 55, 77, 78, 80, 89, 90], "gabriel": [0, 8, 31, 32, 68, 70, 77, 80, 89, 90], "marco": [0, 8, 29, 31, 32, 35, 68, 70, 77, 78, 79, 80, 89, 90], "justin": [0, 31, 32, 77, 80, 89, 90], "solomon": [0, 31, 32, 70, 77, 80, 89, 90], "averag": [0, 31, 32, 69, 72, 74, 77, 80, 85, 89, 90], "gromov_wasserstein": [0, 2, 29, 30, 32, 35, 77, 90], "kl_loss": [0, 77], "minim": [0, 2, 3, 4, 6, 7, 28, 29, 31, 34, 35, 43, 74, 77, 79, 84, 86, 87, 90, 91], "13": [0, 11, 13, 18, 25, 30, 31, 40, 48, 53, 55, 77, 80, 89, 90, 91], "facundo": [0, 77, 89, 90], "approach": [0, 11, 18, 20, 22, 26, 70, 77, 78, 89, 90], "object": [0, 1, 2, 3, 4, 5, 8, 11, 23, 33, 49, 50, 53, 54, 70, 71, 72, 77, 78, 84, 87, 89, 90, 91], "foundat": [0, 77, 80, 89, 90, 91], "11": [0, 5, 10, 11, 18, 25, 31, 32, 34, 40, 55, 61, 63, 74, 77, 88, 89, 90], "417": [0, 77, 89, 90, 91], "487": [0, 77, 89, 90, 91], "gromov_wasserstein2": [0, 2, 77, 90, 91], "discrep": [0, 58, 77, 80, 83, 91], "gw_dist": [0, 29, 32, 35, 77], "max_sliced_wasserstein_dist": [0, 83], "x_": [0, 43, 70, 72, 78, 83], "x_t": [0, 70, 72, 83, 87], "n_project": [0, 3, 4, 57, 58, 83], "50": [0, 1, 3, 4, 5, 6, 8, 11, 15, 16, 21, 31, 32, 34, 39, 41, 49, 51, 55, 63, 70, 80, 83, 84, 89, 91], "mont": [0, 83], "carlo": [0, 83], "approxim": [0, 8, 11, 24, 70, 71, 72, 77, 79, 83, 89, 90], "slice": [0, 9, 59, 68, 73, 78, 89, 90, 91], "mathcal": [0, 38, 72, 73, 76, 77, 83, 87, 90], "swd": [0, 57, 83], "_p": [0, 83, 90], "nu": [0, 3, 4, 7, 30, 74, 78, 83], "underset": [0, 83], "_in": [0, 83], "theta_": [0, 83], "stand": [0, 83, 91], "pushforward": [0, 83], "ni": [0, 83], "mapsto": [0, 77, 83], "rangl": [0, 70, 83], "n_samples_a": [0, 70, 83], "n_samples_b": [0, 70, 83], "case": [0, 26, 48, 63, 67, 69, 71, 78, 82, 83, 84, 89], "sliced_wasserstein_dist": [0, 3, 57, 83, 91], "20": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 18, 24, 25, 28, 29, 30, 31, 32, 35, 38, 39, 40, 43, 45, 48, 49, 50, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 70, 77, 78, 83, 89, 90, 91], "normal": [0, 4, 10, 11, 13, 14, 28, 29, 31, 35, 53, 61, 69, 72, 74, 83, 87, 91], "35": [0, 5, 17, 21, 40, 55, 83, 89, 90, 91], "deshpand": [0, 83, 89, 90], "hu": [0, 83, 89, 90], "sun": [0, 83, 89, 90], "pyrro": [0, 83, 89, 90], "siddiqui": [0, 83, 89, 90], "koyejo": [0, 83, 89, 90], "schwing": [0, 83, 89, 90], "gan": [0, 9, 37, 83, 89, 90, 91], "proceed": [0, 13, 70, 83, 84, 89, 90], "ieee": [0, 55, 72, 79, 83, 89, 90], "cvf": [0, 83, 89, 90], "vision": [0, 3, 57, 83, 89, 90], "pattern": [0, 55, 72, 79, 83, 89, 90], "recognit": [0, 83, 89, 90], "10648": [0, 83, 89, 90], "10656": [0, 83, 89, 90], "semidiscrete_wasserstein2_unif_circl": [0, 54, 78, 91], "mu_n": [0, 4, 8, 78, 83], "alpha_i": [0, 78, 83], "x_i": [0, 4, 30, 78, 83, 90], "left": [0, 6, 13, 18, 22, 39, 43, 69, 70, 72, 76, 77, 78, 81, 83, 84, 85, 87, 88], "right": [0, 6, 13, 14, 29, 31, 35, 43, 48, 60, 66, 67, 70, 72, 76, 77, 78, 83, 84, 85, 87, 88, 91], "alpha_k": [0, 78], "unif": [0, 2, 4, 6, 14, 15, 16, 30, 32, 33, 34, 41, 42, 43, 46, 52, 54, 62, 78, 83, 85, 87], "delta_": [0, 4, 30, 78, 83, 84, 90], "02111111": [0, 78], "46": [0, 55, 58, 78, 83, 89, 91], "bonet": [0, 4, 54, 58, 68, 78, 83, 89], "berg": [0, 58, 78, 83, 89], "septier": [0, 58, 78, 83, 89], "drumetz": [0, 58, 78, 83, 89], "pham": [0, 58, 78, 83, 89], "2023": [0, 39, 58, 74, 78, 83, 84, 89, 91], "spheric": [0, 9, 37, 59, 68, 78, 83, 89, 91], "omega": [0, 64, 70, 79, 80, 84, 85, 86, 90], "dim_a": [0, 70, 80, 82, 86], "dim_b": [0, 70, 80, 82, 86], "both": [0, 2, 7, 24, 48, 63, 66, 70, 71, 78, 82, 90, 91], "By": [0, 70, 74, 82, 90], "too": [0, 70, 74, 90], "small": [0, 2, 7, 48, 67, 70, 74, 77, 78, 89, 90, 91], "should": [0, 26, 43, 64, 67, 69, 70, 72, 74, 77, 78, 82, 84, 87, 89, 90, 91], "enough": [0, 28, 70, 74, 90], "you": [0, 15, 18, 20, 21, 31, 32, 48, 51, 55, 67, 69, 70, 74, 81, 89, 90, 91], "sharper": [0, 70, 90], "avoid": [0, 67, 69, 70, 72, 74, 80, 90], "numer": [0, 22, 32, 48, 61, 69, 70, 72, 74, 80, 87, 89, 90, 91], "last": [0, 48, 70, 71, 82, 90, 91], "veri": [0, 26, 48, 70, 77, 87, 89, 90, 91], "slow": [0, 70, 74, 90, 91], "practic": [0, 8, 67, 70, 74, 90], "even": [0, 10, 11, 61, 62, 70, 90, 91], "reason": [0, 66, 70, 90, 91], "finit": [0, 69, 70, 90], "why": [0, 67, 70, 91], "sinkhorn_epsilon_sc": [0, 70, 72, 90], "reli": [0, 70, 77, 89, 90], "warm": [0, 70, 90], "start": [0, 34, 48, 67, 69, 70, 74, 82, 87, 89, 91], "sometim": [0, 70, 90], "better": [0, 8, 45, 70, 84, 90, 91], "greedi": [0, 70, 89, 90, 91], "version": [0, 2, 33, 34, 54, 66, 67, 69, 70, 79, 82, 89, 90, 91], "greenkhorn": [0, 68, 70, 90, 91], "speedup": [0, 70, 90, 91], "screen": [0, 37, 47, 70, 73, 81, 89, 90], "screenkhorn": [0, 37, 47, 68, 73, 81, 90, 91], "aim": [0, 4, 8, 64, 70, 72, 87, 90], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 26, 28, 29, 30, 31, 32, 34, 35, 38, 43, 44, 48, 54, 62, 63, 66, 67, 68, 69, 70, 77, 78, 80, 82, 90, 91], "strongli": [0, 67, 70, 77, 90, 91], "recommend": [0, 67, 70, 90, 91], "check": [0, 31, 67, 69, 70, 78, 87, 90, 91], "those": [0, 12, 48, 70, 72, 77, 78, 86, 90, 91], "tupl": [0, 70, 71, 79], "logarithm": [0, 69, 70], "36552929": [0, 70, 90], "13447071": [0, 70, 90], "lightspe": [0, 70, 72, 84, 86, 89, 90], "advanc": [0, 38, 43, 45, 46, 66, 70, 71, 72, 84, 85, 86, 89, 90], "neural": [0, 8, 24, 25, 38, 43, 45, 46, 70, 71, 72, 84, 85, 86, 89, 90, 91], "system": [0, 24, 25, 38, 43, 45, 46, 67, 69, 70, 72, 84, 85, 86, 89, 90], "nip": [0, 24, 25, 70, 72, 84, 86, 89, 90], "26": [0, 40, 45, 55, 70, 72, 84, 86, 89, 90, 91], "2013": [0, 70, 72, 84, 86, 87, 89, 90], "9": [0, 2, 3, 4, 8, 11, 16, 18, 21, 24, 25, 28, 29, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 44, 46, 49, 55, 62, 70, 72, 82, 84, 86, 89, 90], "stabil": [0, 70, 78, 86, 89, 90, 91], "preprint": [0, 16, 55, 61, 70, 72, 74, 78, 79, 86, 89, 90], "1610": [0, 70, 86, 89, 90], "06519": [0, 70, 86, 89, 90], "34": [0, 5, 40, 55, 70, 89, 90], "feydi": [0, 70, 89, 90], "s\u00e9journ\u00e9": [0, 70, 89, 90], "amari": [0, 70, 89, 90], "trouv\u00e9": [0, 70, 89, 90], "mmd": [0, 70, 89, 90], "diverg": [0, 8, 53, 64, 69, 70, 77, 79, 86, 89, 90, 91], "2681": [0, 70, 89, 90], "2690": [0, 70, 89, 90], "unregular": [0, 70, 72, 79, 82, 84, 86], "sinkhorn_knopp": [0, 70, 86, 90], "classic": [0, 70, 72, 86, 90, 91], "epsilon": [0, 13, 29, 31, 32, 45, 60, 69, 70, 71, 77, 86, 90, 91], "sinkhorn2": [0, 53, 70, 89, 91], "without": [0, 66, 67, 69, 70, 77, 82, 89, 91], "contribut": [0, 66, 70, 90, 91], "26894142136999516": [0, 70], "21": [0, 40, 55, 70, 89, 90], "altschul": [0, 70, 89, 90], "Near": [0, 70, 89, 90], "linear": [0, 1, 5, 8, 24, 25, 27, 36, 37, 63, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 82, 86, 87, 89, 90, 91], "31": [0, 1, 3, 5, 40, 48, 55, 57, 70, 76, 83, 89, 90, 91], "sinkhorn_lpl1_mm": [0, 72, 90], "labels_a": [0, 72], "eta": [0, 7, 24, 25, 72], "numinneritermax": [0, 15, 70, 72, 79], "200": [0, 1, 4, 5, 8, 14, 15, 31, 49, 54, 55, 57, 58, 72, 77, 79, 80, 91], "stopinnerthr": [0, 72], "non": [0, 50, 61, 63, 67, 68, 69, 70, 72, 78, 79, 82, 84, 86, 87, 89, 90, 91], "convex": [0, 34, 52, 72, 79, 84, 90], "group": [0, 18, 20, 72, 89, 91], "lasso": [0, 18, 20, 72, 82, 89, 91], "omega_": [0, 72, 90], "omega_g": [0, 72], "_c": [0, 72], "_1": [0, 39, 70, 72, 80, 90], "index": [0, 2, 71, 72, 82, 85, 89], "class": [0, 2, 5, 8, 21, 26, 39, 68, 70, 73, 74, 91], "label": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 24, 26, 28, 32, 34, 39, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 70, 72, 73, 74, 87, 90, 91], "inner": [0, 70, 72, 77], "tuia": [0, 55, 70, 72, 79, 89, 90], "rakotomamonji": [0, 40, 45, 55, 68, 70, 72, 74, 79, 89, 90], "adapt": [0, 26, 27, 55, 66, 70, 72, 73, 77, 79, 81, 87, 89, 91], "analysi": [0, 37, 47, 55, 67, 70, 72, 74, 78, 79, 88, 89, 91], "99": [0, 2, 55, 72, 79, 89, 90, 91], "1510": [0, 55, 72, 79, 89, 90], "06567": [0, 55, 72, 79, 89, 90], "kl": [0, 50, 60, 69, 70, 71, 77, 84, 86, 89, 90, 91], "kullback": [0, 31, 32, 60, 64, 69, 77, 84, 86, 90], "leibler": [0, 31, 32, 60, 64, 69, 77, 84, 86, 90], "25": [0, 5, 8, 11, 28, 30, 40, 54, 55, 58, 80, 82, 86, 89, 90, 91], "unnorm": [0, 80, 86], "One": [0, 72, 86, 89, 90, 91], "mani": [0, 86, 91], "sinkhorn_reg_sc": [0, 86], "ot_dist": [0, 86], "51122823": [0, 86], "18807035": [0, 86], "frogner": [0, 86, 89, 90], "zhang": [0, 86, 89, 90], "mobahi": [0, 86, 89, 90], "h": [0, 6, 13, 28, 31, 32, 63, 70, 72, 73, 74, 77, 82, 86, 87, 89, 90], "araya": [0, 86, 89, 90], "polo": [0, 86, 89, 90], "poggio": [0, 86, 89, 90], "sinkhorn_knopp_unbalanc": [0, 86, 90], "sinkhorn_stabilized_unbalanc": [0, 86, 90], "sinkhorn_reg_scaling_unbalanc": [0, 86], "sinkhorn_unbalanced2": [0, 86, 90], "31912866": [0, 86], "sim": [0, 72, 83], "et": [0, 3, 57, 63, 70, 78, 83, 89, 90], "al": [0, 3, 57, 63, 70, 78, 83, 89, 90], "radon": [0, 3, 57, 83, 89, 90], "imag": [0, 3, 11, 12, 27, 33, 37, 48, 55, 57, 70, 72, 79, 83, 87, 89, 90, 91], "51": [0, 3, 31, 32, 55, 57, 77, 83, 89, 90], "22": [0, 3, 5, 11, 40, 55, 57, 70, 83, 89, 90, 91], "45": [0, 3, 16, 55, 57, 78, 83, 89, 90, 91], "sliced_wasserstein_spher": [0, 58, 83, 91], "ssw_p": [0, 83], "int_": [0, 28, 83], "sigma": [0, 8, 21, 23, 24, 25, 28, 38, 72, 73, 83, 87], "foral": [0, 70, 77, 83, 87], "tx": [0, 12, 83], "_2": [0, 70, 76, 77, 82, 83, 87], "sqrt": [0, 4, 34, 40, 58, 69, 76, 80, 83], "keepdim": [0, 40, 58, 69, 83], "sliced_wasserstein_sphere_unif": [0, 4, 83, 91], "ssw_2": [0, 4, 83], "42": [0, 2, 3, 5, 8, 9, 16, 19, 23, 25, 34, 39, 42, 55, 78, 83, 89, 91], "randn": [0, 1, 3, 5, 6, 8, 15, 23, 30, 32, 38, 40, 43, 46, 58, 62, 69, 83], "500": [0, 3, 4, 5, 6, 8, 19, 25, 31, 54, 69, 71, 77, 83, 84], "ssw": [0, 4, 83], "allclos": [0, 69, 83], "01734": [0, 83], "atol": [0, 69, 83], "reg_typ": [0, 50, 72, 84, 90, 91], "unbalanced_typ": [0, 91], "n_thread": 0, "plan_init": 0, "potentials_init": 0, "discret": [0, 19, 24, 25, 34, 55, 70, 72, 78, 79, 85, 89, 90, 91], "otresult": [0, 87, 91], "t_": [0, 77], "m_": [0, 30, 82, 90], "lambda_r": 0, "lambda_u": 0, "penal": [0, 37, 65, 73, 82, 86, 89], "exact": [0, 17, 37, 47, 55, 65, 70, 73, 78, 80, 81, 86, 87, 89, 90, 91], "array_lik": [0, 87], "l2": [0, 10, 11, 37, 50, 61, 65, 73, 77, 82, 84, 86, 89, 90, 91], "balanc": [0, 87, 90], "unction": 0, "tv": [0, 53], "omp": 0, "_type_": 0, "toler": [0, 33, 69, 71, 80, 84], "re": [0, 57, 58, 62, 63, 69, 78, 91], "obtain": [0, 54, 72, 82, 90], "value_linear": [0, 87, 91], "more": [0, 29, 31, 35, 43, 48, 67, 70, 74, 78, 90, 91], "avail": [0, 26, 66, 67, 69, 89, 90, 91], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 68, 69, 70, 73, 78, 84, 87, 90, 91], "origin": [0, 2, 24, 28, 67, 68, 78, 84, 90, 91], "paper": [0, 11, 70, 89, 90, 91], "formul": [0, 80, 84, 89, 90], "17": [0, 18, 25, 40, 55, 84, 89, 90], "blondel": [0, 46, 68, 84, 85, 89, 90, 91], "segui": [0, 14, 46, 84, 85, 89, 90], "rolet": [0, 46, 68, 84, 85, 89, 90], "twenti": [0, 70, 84, 89, 90], "aistat": [0, 70, 72, 84, 89, 90], "tic": [0, 11, 30, 87, 91], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 69, 87, 90, 91], "matlab": [0, 68, 87], "toc": [0, 11, 30, 87, 91], "messag": [0, 67, 70, 87, 91], "elaps": [0, 11, 30, 87], "toq": [0, 87], "julia": [0, 87], "type_a": [0, 69, 83, 87], "length": [0, 69, 71, 82, 85, 87], "bin": [0, 7, 10, 11, 13, 45, 49, 50, 53, 55, 60, 61, 73, 87, 90], "expect": [0, 8, 43, 66, 67, 70, 87, 89, 90], "output": [0, 5, 8, 33, 67, 70, 87, 89, 90, 91], "pytorch": [0, 9, 37, 43, 68, 69, 73, 81, 85, 87, 89, 90, 91], "wasserstein_1d": [0, 7, 54, 78, 90, 91], "dimension": [0, 32, 62, 70, 74, 78, 89, 91], "15": [0, 5, 8, 12, 13, 14, 17, 18, 22, 25, 28, 30, 39, 40, 43, 55, 62, 72, 78, 86, 89, 90, 91], "batch": [0, 7, 8, 70, 72, 77, 78, 85], "formal": [0, 70, 78], "so": [0, 2, 8, 64, 77, 78, 87, 90, 91], "wai": [0, 19, 67, 78, 90, 91], "build": [0, 8, 28, 67, 72, 78, 89, 90, 91], "individu": [0, 66, 78], "quantil": [0, 78, 80], "integr": [0, 78], "them": [0, 29, 35, 72, 78, 80, 91], "prefer": [0, 67, 74, 78, 91], "whenev": [0, 78], "differ": [0, 2, 16, 31, 37, 48, 56, 66, 70, 71, 72, 77, 78, 81, 86, 89, 90, 91], "over": [0, 8, 34, 69, 70, 77, 78, 80], "posit": [0, 2, 7, 10, 11, 13, 34, 45, 48, 49, 50, 53, 55, 60, 61, 66, 69, 78, 79, 80, 81, 89, 90], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 69, 71, 77, 78, 79, 84, 87, 89, 90, 91], "least": [0, 67, 72, 78], "chap": [0, 78], "atom": [0, 70, 77, 78], "consid": [0, 7, 26, 28, 34, 38, 66, 67, 70, 78, 80, 87, 90], "have": [0, 8, 26, 34, 48, 66, 67, 69, 77, 78, 87, 90, 91], "been": [0, 8, 68, 78, 80, 87, 89, 90, 91], "prior": [0, 67, 70, 78, 90], "being": [0, 48, 67, 72, 78, 90, 91], "wasserstein_circl": [0, 54, 78, 91], "ot_": [0, 78, 90], "cdf_u": [0, 78], "cdf_v": [0, 78], "w_1": [0, 78, 90], "levm": [0, 78], "hundries": [0, 78, 89], "shayan": [0, 78, 89], "marcel": [0, 78, 89], "klatt": [0, 78, 89], "axel": [0, 78, 89], "munk": [0, 78, 89], "circular": [0, 28, 78, 89], "direct": [0, 34, 53, 78, 79, 84, 89, 91], "innov": [0, 78, 89], "bicentenni": [0, 78, 89], "tribut": [0, 78, 89], "florenc": [0, 78, 89], "nightingal": [0, 78, 89], "singapor": [0, 78, 89], "springer": [0, 78, 89], "natur": [0, 69, 78, 89], "2022": [0, 77, 78, 89], "57": [0, 55, 78, 86, 89, 91], "82": [0, 48, 55, 78, 89, 91], "weak_optimal_transport": [0, 41, 88], "weak": [0, 37, 47, 68, 73, 81, 89, 90, 91], "_j": [0, 74, 78, 84, 85, 88], "guess": [0, 79, 88], "indep": [0, 79, 88], "joint": [0, 34, 70, 72, 77, 79, 88, 89, 90, 91], "densiti": [0, 79, 88], "numitermaxemd": [0, 79, 88], "stopthr2": [0, 79, 88], "gozlan": [0, 16, 78, 88, 89, 90], "roberto": [0, 88, 89, 90], "samson": [0, 88, 89, 90], "tetali": [0, 88, 89, 90], "kantorovich": [0, 88, 89, 90], "dualiti": [0, 11, 88, 89, 90], "273": [0, 88, 89, 90], "3327": [0, 88, 89, 90], "3405": [0, 88, 89, 90], "go": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 91], "end": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 78, 82, 90, 91], "download": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64], "full": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 69, 70, 85, 87, 89, 91], "author": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 89], "remi": [1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 38, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 53], "polytechniqu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 41, 42, 44], "edu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 41, 42, 44, 90], "licens": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64], "mit": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 89], "sphinx_gallery_thumbnail_numb": [1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 39, 40, 41, 42, 44, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63], "pyplot": [1, 4, 5, 8, 10, 12, 13, 15, 16, 19, 23, 25, 28, 30, 33, 43, 44], "pl": [1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 16, 18, 20, 21, 22, 24, 26, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64], "manual_se": [1, 3, 4, 5, 8], "n_source_sampl": [1, 5, 18, 22, 24, 72], "n_target_sampl": [1, 5, 18, 22, 24, 72], "noise_level": [1, 5, 24], "make_data_classif": [1, 18, 20, 21, 22, 24, 26], "gaussrot": [1, 24], "nz": [1, 21, 24, 40, 73], "xt": [1, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 32, 40, 41, 42, 51, 52, 54, 57, 58, 62, 63, 64, 70, 72, 76, 81, 82, 85, 90], "yt": [1, 18, 20, 21, 22, 24, 26, 30, 40, 72], "one": [1, 3, 5, 7, 19, 23, 24, 25, 28, 33, 34, 46, 48, 67, 69, 70, 72, 73, 78, 82, 90, 91], "mode": [1, 5, 24, 72], "chang": [1, 2, 5, 24, 33, 34, 67, 69, 70, 78, 90, 91], "varianc": [1, 5, 24, 32], "map": [1, 5, 27, 37, 46, 64, 68, 72, 73, 76, 77, 78, 85, 87, 89, 91], "figur": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67], "clf": [1, 2, 3, 4, 5, 8, 11, 21, 23, 24, 29, 30, 31, 33, 34, 35, 38, 43, 44, 48, 52, 53, 61, 63], "scatter": [1, 2, 3, 4, 5, 6, 8, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 30, 32, 33, 34, 39, 40, 48, 54, 58, 62, 63, 64], "marker": [1, 5, 14, 16, 18, 20, 21, 22, 24, 26, 34, 39, 40], "o": [1, 5, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 33, 34, 44, 48, 77, 89, 90, 91], "legend": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 24, 26, 34, 39, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 63], "loc": [1, 5, 14, 18, 20, 22, 24, 26, 29, 31, 35, 39, 40, 41, 42, 51, 52, 57, 58, 60, 63], "titl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 81, 89], "text": [1, 4, 5, 6, 8, 14, 19, 21, 23, 24, 41, 42, 43, 48, 51, 55, 57, 58, 60, 67, 70, 76, 77, 78, 82, 87, 90], "requires_grad": [1, 6, 43], "adam": [1, 5, 77], "lr": [1, 2, 3, 4, 5, 6, 7, 8, 43, 46, 85], "n_iter": [1, 4, 5, 8], "rang": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 21, 28, 29, 31, 33, 34, 35, 38, 39, 43, 44, 48, 53, 54, 57, 58, 61, 63, 64], "nois": [1, 5, 8, 28, 62, 73], "minu": [1, 5], "becaus": [1, 5, 78, 90, 91], "maxim": [1, 5, 85, 86, 91], "te": [1, 5], "loss_dual_entrop": [1, 5], "append": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 28, 29, 31, 33, 34, 35, 43, 61, 62, 87], "detach": [1, 2, 3, 4, 5, 6, 7, 8, 43, 69], "3d": [1, 4, 5, 8, 10, 11, 16, 58, 61], "backward": [1, 2, 3, 5, 6, 7, 8, 43], "zero_grad": [1, 5, 8], "grid": [1, 4, 5, 6, 8, 58, 91], "neg": [1, 5, 63, 69, 70, 77, 78, 82, 84, 86, 89], "xlabel": [1, 4, 5, 6, 8, 19, 25, 30, 34, 38, 39, 43, 48, 53, 54, 57, 58], "ge": [1, 51, 55], "plan_dual_entrop": [1, 5], "2020494900224741": 1, "19": [1, 18, 25, 27, 40, 46, 55, 85, 89, 90, 91], "627253673755387": 1, "32": [1, 3, 5, 14, 40, 55, 74, 77, 89, 90], "02062797186045": 1, "36": [1, 3, 5, 55, 82, 86, 89, 90], "30824931089154": 1, "00548836993382": 1, "48892980525997": 1, "60": [1, 3, 4, 5, 7, 8, 10, 11, 13, 31, 32, 34, 45, 49, 50, 55, 60, 61], "41": [1, 7, 48, 55, 82, 86, 89, 91], "15751000916208": 1, "5287967070168": 1, "80": [1, 4, 5, 8, 11, 14, 31, 34, 49, 55, 91], "633341706670514": 1, "90": [1, 5, 8, 16, 31, 48, 49, 53, 55, 91], "68248931760953": 1, "70035380988001": 1, "110": [1, 5, 8, 31, 49, 55], "71229614915673": 1, "120": [1, 5, 8, 31, 49, 55, 58], "71899424735804": 1, "130": [1, 5, 8, 31, 49, 55, 91], "72351979387353": 1, "140": [1, 5, 8, 31, 49, 55, 91], "727094559369526": 1, "150": [1, 4, 5, 8, 16, 18, 20, 22, 26, 31, 44, 49, 54, 55, 91], "73005026754631": 1, "160": [1, 5, 8, 31, 49, 55, 91], "73258091792658": 1, "170": [1, 5, 8, 31, 49, 55, 91], "734824266172055": 1, "180": [1, 5, 8, 31, 49, 55], "73679562926442": 1, "190": [1, 5, 8, 31, 49, 55], "73850564925686": 1, "plot2d_samples_mat": [1, 20, 41, 42, 51, 52], "zorder": [1, 2, 5, 34, 39, 44], "01": [1, 9, 10, 17, 18, 22, 27, 29, 30, 31, 32, 35, 40, 46, 49, 53, 55, 56, 61, 62, 65, 70, 80, 82], "loss_dual_quadrat": 1, "gq": 1, "plan_dual_quadrat": 1, "0018442196020623663": 1, "68063780454439": 1, "723014738143878": 1, "003279660829016": 1, "72232548648316": 1, "214763178496604": 1, "021162956095615": 1, "406576944697754": 1, "508967782224396": 1, "566077311195244": 1, "58674991579014": 1, "59949554057146": 1, "60783042193371": 1, "61305878736542": 1, "61684177528407": 1, "619977723643956": 1, "62264022062573": 1, "6249630518441": 1, "62706322161171": 1, "62889445413205": 1, "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 90], "script": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 91], "minut": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64], "429": [1, 9], "plot_dual_ot_pytorch": [1, 9], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 87, 91], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 91], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 90, 91], "ipynb": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 89, 91], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 67, 91], "express": [2, 6, 66, 90], "part": [2, 40, 91], "node": [2, 28, 31, 32, 77, 89], "model": [2, 3, 5, 70, 89, 90], "actual": [2, 90], "recov": [2, 8, 85, 90, 91], "proport": [2, 29, 31, 34, 35, 48, 70, 72, 73, 81], "sbm": [2, 29, 31, 34, 35], "allow": [2, 6, 32, 33, 38, 43, 62, 67, 71, 80, 90, 91], "accur": 2, "simultan": [2, 91], "other": [2, 6, 7, 40, 48, 66, 67, 77, 84, 85, 87, 89, 91], "properti": [2, 8, 77, 87, 90], "sklearn": [2, 33, 34, 39, 87, 91], "manifold": [2, 33, 34, 74, 90], "md": [2, 34, 91], "pylab": [2, 3, 6, 7, 11, 14, 16, 18, 20, 21, 22, 24, 26, 29, 31, 32, 34, 35, 38, 39, 40, 41, 42, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64], "torch": [2, 3, 4, 6, 7, 8, 43, 69, 90, 91], "ot": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 43, 44, 45, 46, 49, 51, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 89, 91], "rng": [2, 6, 19, 23, 25, 33, 39, 46], "def": [2, 3, 4, 5, 6, 8, 16, 19, 21, 23, 25, 28, 29, 31, 32, 33, 34, 35, 54, 55, 63, 69, 87], "get_sbm": 2, "nc": [2, 34], "ratio": 2, "nbpc": 2, "round": [2, 29, 31, 32, 34, 35, 48, 80, 86], "astyp": [2, 3, 14, 15, 16, 19, 23, 25, 31, 32, 33, 34], "zero": [2, 3, 4, 6, 8, 10, 11, 22, 29, 31, 32, 34, 35, 43, 48, 50, 52, 53, 54, 61, 69, 71, 77, 78, 87, 91], "rand": [2, 4, 8, 23, 40, 42, 62, 64, 69], "ey": [2, 34, 69], "05": [2, 5, 9, 11, 18, 24, 25, 31, 32, 36, 40, 46, 49, 55, 64, 69, 70, 72, 77, 82], "ones": [2, 8, 14, 15, 28, 29, 30, 31, 34, 35, 48, 51, 57, 58, 63, 64, 69, 72, 77], "2d": [2, 16, 17, 18, 20, 21, 22, 26, 34, 37, 41, 42, 48, 52, 56, 59, 63, 65, 70, 73, 78, 80, 81, 86, 87, 90, 91], "dissimilar": [2, 33, 34], "precomput": [2, 33, 34, 90], "fit_transform": [2, 33, 34, 72], "plot_graph": [2, 34], "color": [2, 4, 5, 6, 7, 10, 13, 15, 27, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 48, 51, 54, 58, 62, 63, 64, 72, 81, 87, 90, 91], "c0": [2, 5, 34, 39, 63, 64], "edgecolor": [2, 15, 34, 39], "cmap": [2, 5, 10, 12, 13, 21, 28, 30, 32, 34, 39, 48, 61, 62, 64], "tab10": [2, 34, 39], "vmax": [2, 21, 28, 34, 39, 43, 48], "subplot": [2, 4, 5, 8, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 34, 35, 38, 40, 41, 42, 43, 48, 52, 53, 55, 61, 62, 63, 64, 81], "axi": [2, 3, 4, 5, 12, 13, 15, 16, 19, 21, 23, 25, 29, 31, 34, 35, 39, 44, 52, 54, 55, 57, 58, 62, 64, 69, 74, 84, 87], "imshow": [2, 12, 13, 18, 19, 20, 22, 23, 25, 26, 30, 32, 34, 38, 39, 41, 43, 48, 51, 52, 55, 62, 64], "nearest": [2, 18, 20, 22, 26, 30, 34, 41, 51, 52, 72], "adjac": [2, 28], "home": [2, 5, 7, 10, 15, 18, 20, 21, 22, 31, 32, 33, 34, 40, 45, 48, 51, 54, 55, 61, 62], "circleci": [2, 5, 7, 10, 15, 18, 20, 21, 22, 31, 32, 33, 34, 40, 45, 48, 51, 54, 55, 61, 62, 91], "local": [2, 33, 34, 40, 67, 90], "lib": [2, 33, 34, 40, 69], "python3": [2, 33, 34, 40], "site": [2, 33, 34, 40], "packag": [2, 33, 34, 40, 70, 87, 90], "_md": [2, 33, 34], "298": [2, 33, 34, 91], "futurewarn": [2, 33, 34], "normalized_stress": [2, 33, 34], "auto": [2, 30, 33, 34, 39, 62], "To": [2, 8, 33, 34, 69, 70, 80, 87, 89, 90], "suppress": [2, 33, 34], "manual": [2, 33, 34], "plot_optim_gromov_pytorch": [2, 9], "81": [2, 55], "userwarn": [2, 5, 7, 15, 18, 20, 21, 22, 31, 32, 34, 45, 48, 51, 55, 61], "colormap": [2, 10, 34, 39, 61], "ignor": [2, 34, 43, 79], "diagon": [2, 26, 28, 69, 76], "want": [2, 8, 15, 18, 20, 21, 31, 32, 43, 48, 51, 55, 90, 91], "up": [2, 67, 91], "min_weight_gw": 2, "a2": [2, 10, 11, 13, 15, 61], "nb_iter_max": [2, 3, 7], "min_a": [2, 90], "our": [2, 3, 7, 89, 90, 91], "c1_torch": 2, "c2_torch": 2, "a0": 2, "random_init": 2, "a1_torch": 2, "requires_grad_": [2, 3, 4, 7], "a2_torch": 2, "loss_it": [2, 3, 7], "clone": [2, 3, 4, 7, 67, 69], "03d": 2, "no_grad": [2, 3, 6, 7, 43], "grad": [2, 3, 4, 6, 7, 40, 43, 69, 77, 84, 85], "zero_": [2, 3, 6, 7, 43], "proj_simplex": [2, 6, 7, 43], "a1": [2, 10, 11, 13, 15, 61], "a0_est": 2, "loss_iter0": 2, "29850312": 2, "20157616": 2, "49992072": 2, "clear": 2, "noe": 2, "receiv": [2, 67], "most": [2, 70, 87, 90, 91], "show": [2, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 66, 78], "here": [2, 4, 63, 77, 89, 90, 91], "previous": 2, "t_unif": 2, "label_unif": 2, "argmax": [2, 29, 31, 34, 35, 38, 43, 69], "t_est": 2, "label_est": 2, "est": 2, "7760154087783518": 2, "5785554952306606": 2, "7708789474385981": 2, "6510858680020267": 2, "now": [2, 4, 48, 69, 90, 91], "seen": [2, 70, 78, 90], "probabl": [2, 7, 16, 34, 43, 77, 78, 89], "link": [2, 29, 31, 67, 89, 91], "graph_compression_gw": 2, "nb_node": 2, "clamp": 2, "a0_est2": 2, "c0_est2": 2, "loss_iter2": 2, "5e": [2, 13, 21, 32, 33, 63], "vmin": [2, 28, 39, 43, 48], "colorbar": [2, 34, 39, 48], "29985821": 2, "18926744": 2, "51087435": 2, "0x7fca60737b20": 2, "116": [2, 9, 55, 91], "liutku": [3, 89, 90], "simsekli": [3, 89, 90], "majewski": [3, 89, 90], "durmu": [3, 89, 90], "st\u00f6ter": [3, 89, 90], "mai": [3, 66, 67, 77, 78, 80, 82, 89, 90, 91], "nonparametr": [3, 89, 90], "diffus": [3, 89, 90], "4104": [3, 89, 90], "4113": [3, 89, 90], "load": [3, 19, 25, 48], "i1": [3, 14, 16, 19, 23, 25], "imread": [3, 12, 13, 14, 16, 19, 23, 25, 33], "redcross": [3, 12, 14, 16], "png": [3, 12, 13, 14, 16, 33, 44], "i2": [3, 14, 16, 19, 23, 25], "tooth": [3, 12, 16], "sz": [3, 14, 16], "xx": [3, 5, 14], "yy": [3, 5, 14], "meshgrid": [3, 4, 5, 14, 16, 69], "arang": [3, 7, 10, 11, 13, 14, 16, 30, 38, 39, 40, 43, 45, 49, 50, 52, 53, 55, 60, 61, 69, 70], "stack": [3, 14, 16, 34, 69], "x3": [3, 14, 15], "collect": [3, 10, 11, 33, 40, 54, 61, 70], "pathcollect": [3, 33, 54], "0x7fca82ddbe20": 3, "devic": [3, 7, 69, 90, 91], "cuda": [3, 7, 68, 91], "is_avail": [3, 7], "x1_torch": 3, "x2_torch": 3, "1e3": 3, "x_all": 3, "gen": 3, "5e1": 3, "ax": [3, 4, 10, 12, 13, 15, 16, 39, 43, 48, 58, 61, 62, 69, 79, 90], "_update_plot": [3, 4, 8, 16, 63], "ani": [3, 4, 8, 16, 63, 66, 67, 69, 71, 79, 82, 87, 89, 90], "funcanim": [3, 4, 8, 16, 63], "gcf": [3, 4, 8, 10, 61, 63], "interv": [3, 4, 8, 16, 57, 58, 63, 69], "repeat_delai": [3, 4, 8, 16, 63], "2000": [3, 4, 7, 8, 16, 63], "onc": [3, 4, 8, 16, 63], "loop": [3, 4, 8, 16, 48, 63, 72], "reflect": [3, 4, 8, 16, 63], "x3_torch": 3, "xbinit": 3, "16": [3, 7, 15, 18, 25, 30, 34, 38, 40, 43, 55, 56, 69, 71, 74, 78, 82, 89, 90], "xbary_torch": 3, "292": [3, 9], "plot_sliced_wass_grad_flow_pytorch": [3, 9], "transform": [4, 18, 19, 20, 22, 24, 26, 72, 85, 87, 90], "cl\u00e9ment": [4, 54, 58, 68], "clement": [4, 54, 58], "univ": [4, 21, 22, 38, 43, 54, 58, 63, 64], "ub": [4, 38, 43, 54, 58, 63, 64], "fr": [4, 7, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 38, 39, 40, 43, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64], "nn": [4, 5, 8, 91], "function": [4, 7, 10, 11, 12, 33, 48, 61, 63, 67, 77, 89, 90, 91], "plot_spher": 4, "xlist": 4, "linspac": [4, 5, 10, 15, 28, 53, 54, 61, 69], "ylist": 4, "z": [4, 10, 34, 45, 58, 61, 68, 70, 84, 87, 89, 90], "plot_wirefram": [4, 58], "grai": [4, 58], "bottom": [4, 13, 48], "half": 4, "set_titl": [4, 10, 13, 15, 43], "0x7fca820a6620": 4, "xvisu": [4, 8], "sw": 4, "grad_x": 4, "item": [4, 28, 29, 31, 35, 67], "semilogi": [4, 6, 8], "2123466581106186": 4, "23": [4, 5, 6, 8, 19, 27, 40, 53, 55, 70, 89, 90, 91], "52222222222222": [4, 5, 6, 8], "ivisu": [4, 8], "fig": [4, 12, 13, 15, 16, 32, 33, 38, 39, 43, 52, 58, 62], "add_subplot": [4, 10, 16, 32, 61, 62], "set_xlim": [4, 15, 58], "set_ylim": [4, 15, 58], "384": [4, 9, 43, 47], "plot_ssw_unif_torch": [4, 9], "nvisu": [5, 55], "300": [5, 31, 34], "ax_bound": 5, "defin": [5, 8, 33, 38, 46, 48, 66, 69, 70, 72, 78, 82, 84, 90, 91], "mlp": [5, 8], "modul": [5, 8, 45, 48, 67, 70, 74, 81, 89, 91], "__init__": [5, 8, 72, 87], "self": [5, 8, 72, 87], "super": [5, 8], "fc1": [5, 8], "fc2": [5, 8], "relu": [5, 8], "heavisid": [5, 8], "fn": [5, 8], "forward": [5, 8, 90], "ravel": [5, 28, 63, 64, 84, 87], "doubl": [5, 43, 48], "005": [5, 64], "n_batch": 5, "iperm": 5, "randint": [5, 19, 25, 28], "ipermt": 5, "xsi": 5, "xti": 5, "257329928299894": 5, "890456785604675": 5, "58037947236615": 5, "18": [5, 18, 25, 28, 40, 46, 55, 80, 85, 89, 90], "440996850749862": 5, "12608610815788": 5, "275903405782387": 5, "27": [5, 34, 40, 55, 70, 72, 89, 91], "268827591939186": 5, "29": [5, 34, 36, 40, 47, 55, 72, 76, 80, 89, 90, 91], "79159074243252": 5, "63488731570214": 5, "127228618478725": 5, "696522621311644": 5, "33": [5, 9, 32, 38, 40, 43, 45, 55, 70, 71, 89, 90], "46949401889149": 5, "64206913098602": 5, "153816351532946": 5, "283212421610095": 5, "52058538064263": 5, "676096587323535": 5, "458654411651835": 5, "43596310348253": 5, "26194570410683": 5, "01278968196741": 5, "210": [5, 31, 91], "87401169938976": 5, "220": [5, 31, 91], "12820568044987": 5, "230": [5, 31], "63722430960618": 5, "240": [5, 31, 91], "65926621902025": 5, "250": [5, 31], "52742547536184": 5, "260": [5, 31, 91], "12658368170403": 5, "270": [5, 31], "735871196038282": 5, "280": [5, 31, 91], "15756050565185": 5, "290": [5, 31, 91], "070647347170436": 5, "27069736487665": 5, "310": [5, 31, 91], "4032555710632": 5, "320": [5, 11, 31], "751519332118505": 5, "330": [5, 31], "505787072896766": 5, "340": [5, 31, 91], "833572391120526": 5, "350": [5, 31, 91], "540097202879465": 5, "360": [5, 31, 91], "54715464928039": 5, "370": [5, 31], "635978662861795": 5, "380": [5, 31, 91], "85734724064163": 5, "390": [5, 31], "22195044833465": 5, "400": [5, 31, 91], "54526255143114": 5, "410": [5, 31, 91], "2028827111356": 5, "420": [5, 31], "146730918684945": 5, "430": [5, 31], "32427691564021": 5, "440": [5, 31, 91], "51095472212391": 5, "450": [5, 9, 31], "56664149963812": 5, "460": [5, 31, 91], "5571464161218": 5, "470": [5, 31], "7012331965002": 5, "480": [5, 31], "754363123393354": 5, "490": [5, 31], "12920968279601": 5, "nv": [5, 63], "xl": 5, "yl": 5, "xg": [5, 8], "concaten": [5, 6, 15, 23, 40, 44, 54, 62, 64, 69, 82, 87], "wxg": 5, "exp": [5, 48, 54, 69, 74, 85, 90], "iv": [5, 54, 63], "gg": [5, 30], "wt": [5, 76, 85], "reshap": [5, 19, 23, 25, 28, 33, 40, 45, 49, 50, 53, 55, 60, 62, 63, 69, 70, 80, 82], "pcolormesh": 5, "green": [5, 7], "plot_stoch_continuous_ot_pytorch": [5, 9], "159": [5, 55], "doe": [5, 48, 67, 69, 77, 90, 91], "handl": [5, 7, 90, 91], "quadmesh": 5, "http": [5, 45, 48, 52, 66, 69, 70, 84, 87, 89, 90, 91], "org": [5, 45, 52, 66, 69, 70, 84, 87, 89, 90, 91], "tutori": [5, 67, 90], "legend_guid": 5, "html": [5, 48, 67, 69, 89], "custom": 5, "handler": 5, "173": [5, 55], "187": [5, 55], "819": [5, 9], "mix": [6, 7, 43], "word": [6, 90], "suppos": [6, 70, 90], "s_k": 6, "w_k": [6, 90], "belong": [6, 32, 62, 82], "delta_k": 6, "observ": [6, 70, 73], "pot": [6, 7, 12, 18, 32, 33, 38, 43, 46, 47, 62, 64, 68, 69, 71, 87, 91], "nt1": 6, "ns1": 6, "xs1": [6, 21], "xs2": [6, 21, 54], "correspond": [6, 7, 26, 48, 74, 77, 82, 90, 91], "s_1": 6, "s_2": 6, "0x7fca70868280": 6, "h2": [6, 29, 31, 35, 77], "m2": [6, 52, 53], "2e": [6, 45, 50, 63], "rate": [6, 77, 85], "niter": [6, 43], "get_loss": 6, "mv": 6, "squar": [6, 33, 48, 52, 53, 69, 72, 74, 77, 83, 84, 87, 89, 90, 91], "mixtur": 6, "09980706": 6, "90019294": 6, "dot": [6, 10, 11, 21, 23, 29, 31, 32, 35, 42, 48, 61, 62, 69, 87], "c3": [6, 29, 31, 35, 44], "0x7fca820a6770": 6, "831": [6, 9], "plot_unmix_optim_torch": [6, 9], "refer": [7, 29, 31, 35, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88], "ensur": [7, 67, 78, 90], "remain": 7, "illustr": [7, 10, 11, 12, 13, 14, 15, 16, 28, 29, 30, 31, 34, 35, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 54, 55, 57, 58, 60, 61, 63, 67, 91], "within": [7, 66, 69, 77], "framework": [7, 34, 91], "ncourti": [7, 12, 32, 33], "irisa": [7, 12, 28, 30, 32, 33, 51, 62], "mpl": 7, "make_1d_gauss": [7, 10, 11, 13, 45, 49, 50, 53, 55, 60, 61], "gauss": [7, 45, 49, 50, 53, 60, 72], "red": [7, 19, 25, 30, 48], "to_rgb": 7, "blue": [7, 12, 19, 25, 30, 32, 38, 39, 43, 48], "dtype": [7, 10, 11, 13, 28, 45, 49, 50, 53, 55, 57, 58, 60, 61, 69, 70], "gaussian": [7, 8, 10, 23, 24, 25, 28, 45, 49, 50, 53, 55, 60, 61, 68, 69, 72, 73, 87, 90, 91], "mean": [7, 10, 11, 13, 29, 31, 35, 39, 45, 49, 50, 53, 54, 55, 57, 58, 60, 61, 69, 70, 73, 74, 76, 78, 90, 91], "std": [7, 10, 11, 13, 30, 45, 49, 50, 53, 54, 55, 57, 58, 60, 61, 69, 73, 77, 91], "enforc": [7, 90], "x_torch": 7, "a_torch": 7, "b_torch": 7, "800": [7, 31], "figsiz": [7, 11, 12, 13, 15, 16, 18, 19, 20, 22, 23, 25, 26, 28, 29, 31, 33, 35, 39, 40, 43, 45, 46, 49, 50, 52, 55, 58, 60, 61], "onto": [7, 18, 20, 22, 72, 77, 84, 87, 90], "curv": [7, 43], "everi": [7, 34, 71, 77, 89], "lw": [7, 13, 29, 31, 35, 39, 48], "evolut": [7, 34, 54, 70, 77, 89], "fontsiz": [7, 13, 28, 29, 30, 31, 32, 34, 35, 39, 48, 58, 63], "solver_1d": [7, 54, 91], "than": [7, 48, 69, 77, 90, 91], "revers": [7, 69], "throw": [7, 91], "futur": [7, 70, 91], "releas": [7, 10, 61, 62, 70, 89, 90], "mt": [7, 76], "transpos": [7, 38, 43, 69, 91], "ndim": 7, "trigger": [7, 71], "aten": 7, "src": 7, "nativ": 7, "tensorshap": 7, "cpp": 7, "3571": 7, "cw": 7, "contigu": 7, "tw": 7, "bary_torch": 7, "instant": 7, "178": [7, 9, 55, 91], "plot_wass1d_torch": [7, 9], "fit": [8, 23, 25, 26, 33, 70, 72, 78, 90], "g_": 8, "realist": 8, "drawn": [8, 73, 81], "indistinguish": 8, "mu_d": 8, "arjovsky2017": 8, "access": [8, 48, 89], "cannot": [8, 26, 72, 90, 91], "larg": [8, 26, 46, 72, 74, 80, 85, 89, 90, 91], "genevay2018": 8, "studi": 8, "fatras2019": 8, "arjovski": 8, "chintala": 8, "bottou": 8, "adversari": [8, 90], "214": 8, "223": 8, "genevai": [8, 46, 70, 85, 89, 90], "aud": [8, 70, 89], "fatra": [8, 46, 51, 68, 89], "zine": 8, "gribonv": 8, "2020": [8, 13, 38, 43, 70, 71, 80, 89, 90, 91], "june": 8, "asymptot": 8, "23nd": 8, "108": [8, 55, 91], "n_dim": 8, "n_featur": [8, 39, 72, 87], "get_data": 8, "n_sampl": [8, 15, 32, 33, 39, 62, 72], "angl": [8, 23, 54], "cat": 8, "co": [8, 23, 37, 40, 47, 52, 54, 58, 71, 87, 89, 91], "sin": [8, 23, 28, 40, 52, 54, 58, 87], "0x7fca5b9da860": 8, "fc3": 8, "rmsprop": 8, "00019": 8, "doc": [8, 67, 69, 91], "size_batch": 8, "stati": 8, "n_visu": 8, "xnvisu": 8, "ab": [8, 30, 32, 53, 69, 84, 87, 90, 91], "xn": 8, "xd": 8, "smapl": 8, "compt": 8, "del": 8, "9009847640991211": 8, "10964284837245941": 8, "04564394801855087": 8, "03516071289777756": 8, "05013977363705635": 8, "058588504791259766": 8, "03730057179927826": 8, "04171676188707352": 8, "03168988972902298": 8, "031197285279631615": 8, "03596879169344902": 8, "03272819146513939": 8, "032379165291786194": 8, "03959248960018158": 8, "029337508603930473": 8, "05796702206134796": 8, "034939464181661606": 8, "022607704624533653": 8, "04347885772585869": 8, "1164197325706482": 8, "75": [8, 55, 91], "125": [8, 10, 11, 44, 55], "175": [8, 55, 91], "199": [8, 55, 80, 91], "xtick": [8, 11, 18, 20, 22, 26, 30, 39, 53, 63, 64], "ytick": [8, 11, 18, 20, 22, 26, 30, 39, 64], "xlim": [8, 33, 39, 48, 53, 54], "ylim": [8, 33, 39, 53, 54], "0x7fca6076b5e0": 8, "402": [8, 9, 91], "plot_wass2_gan_torch": [8, 9], "execut": [9, 17, 27, 36, 47, 56, 59, 65, 90, 91], "auto_examples_backend": 9, "file": [9, 17, 27, 36, 37, 44, 47, 56, 59, 65, 90, 91], "minibatch": [9, 37, 85, 90, 91], "mb": [9, 17, 27, 36, 47, 56, 59, 65], "continu": [9, 34, 37, 70, 78, 85, 90], "estim": [9, 21, 27, 30, 31, 32, 37, 46, 67, 68, 70, 72, 73, 76, 77, 78, 79, 85, 87, 89, 91], "flow": [9, 37, 73, 87, 89, 90, 91], "embed": [9, 31, 32, 33, 37, 77, 89, 90], "sphere": [9, 37, 83, 91], "00": [9, 17, 18, 21, 24, 25, 27, 30, 31, 32, 36, 47, 55, 56, 59, 62, 65, 82], "unmix": [9, 34, 37, 70, 77, 87, 89, 90, 91], "unic": [10, 11, 18, 19, 20, 21, 23, 24, 25, 26, 38, 40, 43, 49, 50, 51, 52, 53, 78], "plt": [10, 12, 13, 15, 16, 19, 23, 25, 28, 33], "necessari": [10, 11, 61, 62, 66, 67, 78, 89, 91], "mpl_toolkit": [10, 11, 32, 61, 62], "mplot3d": [10, 11, 32, 61, 62], "axes3d": [10, 11, 32, 61, 62], "noqa": [10, 11, 32, 61, 62], "polycollect": [10, 11, 61], "creat": [10, 11, 13, 28, 61, 66, 67, 68, 69, 81, 89, 91], "vstack": [10, 11, 13, 30, 61], "n_distribut": [10, 11, 13, 61], "dist0": [10, 11, 13, 61], "l2bari": [10, 11, 61], "bary_l2": [10, 11, 61], "bary_wass": [10, 11, 61], "ax1": [10, 30, 32, 33, 38, 43, 62], "ax2": [10, 30, 32, 33, 38, 43, 62], "tight_layout": [10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 34, 35, 38, 39, 40, 43, 48, 52, 53, 61], "num": [10, 13, 69], "black": [10, 29, 31, 34, 35, 38, 43, 81], "n_alpha": 10, "alpha_list": 10, "b_l2": [10, 61], "b_wass": [10, 61], "cm": [10, 12, 28, 39, 61], "get_cmap": [10, 39, 61], "viridi": [10, 28, 61], "vert": [10, 61], "enumer": [10, 13, 28, 29, 31, 34, 35, 39, 53, 54, 57, 58, 61], "zip": [10, 13, 16, 34, 37, 61, 89], "poli": [10, 61], "facecolor": [10, 39, 44, 61], "set_alpha": [10, 61], "add_collection3d": [10, 61], "zdir": [10, 61], "set_xlabel": [10, 58, 61], "set_xlim3d": [10, 61], "set_ylabel": [10, 13, 48, 58, 61], "set_ylim3d": [10, 61], "set_zlabel": [10, 58, 61], "set_zlim3d": [10, 61], "plot_barycenter_1d": [10, 17], "103": [10, 55], "matplotlibdeprecationwarn": [10, 61, 62], "wa": [10, 48, 61, 90, 91], "remov": [10, 61, 62, 66, 69, 78, 82, 87, 91], "minor": [10, 61, 62, 91], "later": [10, 29, 31, 35, 61, 62, 72], "name": [10, 21, 61, 69, 77, 87, 89, 90], "obj": [10, 61, 84], "579": [10, 17], "standard": [11, 69, 73, 77, 87, 91], "scienc": [11, 19, 25, 55, 72, 79, 89, 90], "343": [11, 91], "cvx": 11, "bary_wass2": 11, "interior": [11, 78, 90], "0035905838012695312": 11, "primal": [11, 78, 85], "feasibl": [11, 31, 32, 78], "gap": 11, "path": [11, 12, 13, 19, 23, 25, 33, 37, 65, 67, 73, 82, 89, 91], "1700": 11, "336700337": 11, "006776453137633": 11, "006776453137634": 11, "9932238647293": 11, "6700527543": 11, "004018712867874": 11, "4301142633": 11, "26594150092": 11, "001172775061627": 11, "7599932455028": 11, "3378536968897": 11, "0004375137005385": 11, "6422331807989": 11, "1468420566358": 11, "000232669046734": 11, "0002326690467341": 11, "5016999460893": 11, "09381703231432": 11, "430121674303e": 11, "7035962305812": 11, "0577787025717": 11, "321227838882e": 11, "321227838879e": 11, "3087841864401": 11, "05266249477204": 11, "990900379202e": 11, "990900379201e": 11, "6520472013245": 11, "0452605440552": 11, "305442046817e": 11, "30544204679e": 11, "305442046812e": 11, "7073953304073": 11, "305442046809e": 11, "04237597591383": 11, "290148391578e": 11, "290148391587e": 11, "290148391592e": 11, "6941812711476": 11, "290148391602e": 11, "041522849321": 11, "182864875418e": 11, "182864875486e": 11, "182864875459e": 11, "508455204664": 11, "182864875475e": 11, "04129461872827": 11, "626786380237e": 11, "626786380498e": 11, "626786380591e": 11, "7101651574148": 11, "626786380499e": 11, "04113032448919": 11, "53975423377e": 11, "539754239097e": 11, "539754238957e": 11, "627932209399": 11, "539754244458e": 11, "04108867636364": 11, "193221588102e": 11, "08": [11, 46, 49, 55, 69, 72, 81], "193221525716e": 11, "193221527893e": 11, "6843453372866": 11, "193221744194e": 11, "04106859618425": 11, "888204557375e": 11, "888204466916e": 11, "888204464386e": 11, "6673444754752": 11, "888205403e": 11, "04106214175154": 11, "676851456731e": 11, "676853754852e": 11, "676853775137e": 11, "7281705629265": 11, "676886118764e": 11, "04105958648699": 11, "50115020171e": 11, "501137125386e": 11, "501137136515e": 11, "4140221641718": 11, "501151490466e": 11, "04105916265115": 11, "110591805675e": 11, "110570750049e": 11, "110570733855e": 11, "699900032435": 11, "110619438659e": 11, "04105870073191": 11, "770990264961e": 11, "776274527894e": 11, "776273877079e": 11, "4996170321381": 11, "772744208187e": 11, "04105859774172": 11, "536197932746e": 11, "538885612866e": 11, "538885001653e": 11, "7515062666584": 11, "537834631178e": 11, "04105851682752": 11, "743041081423e": 11, "740002462354e": 11, "740001907827e": 11, "5949277749653": 11, "73465642858e": 11, "04105850033226": 11, "794231989236e": 11, "747423074042e": 11, "747429829833e": 11, "7557701998162": 11, "741755335329e": 11, "04105849090303": 11, "termin": [11, 40], "successfulli": [11, 43], "current": [11, 18, 67, 69, 71, 72, 77, 79, 82, 84, 91], "041058": 11, "9590249061584473": 11, "005366325378417969": 11, "006776466288967": 11, "9932238515788": 11, "006776466288968": 11, "6649255808": 11, "004036918865497": 11, "4272973099314": 11, "34716170111": 11, "001219232687069": 11, "7496986855994": 11, "3243835647407": 11, "0003837422984427": 11, "6926882608286": 11, "1361719397492": 11, "0001070128410182": 11, "7643889137854": 11, "07581952832515": 11, "0001001275033711": 11, "000100127503371": 11, "07058704837782": 11, "07347394936348": 11, "550897507833e": 11, "550897507832e": 11, "5761172484836": 11, "05555077655044": 11, "557124125502e": 11, "557124125495e": 11, "8535925441154": 11, "557124125503e": 11, "0443981466022": 11, "611995628362e": 11, "611995628359e": 11, "611995628375e": 11, "6002277331592": 11, "611995628377e": 11, "04283007762151": 11, "590393750322e": 11, "59039375014e": 11, "590393750355e": 11, "822148653339": 11, "590393750361e": 11, "04192322976247": 11, "299929287269e": 11, "299929283142e": 11, "299929287457e": 11, "9017467938803": 11, "299929287509e": 11, "04170825633295": 11, "117560215317e": 11, "117560474123e": 11, "117560204434e": 11, "9970399692198": 11, "117560202277e": 11, "04168179329766": 11, "559775055372e": 11, "14": [11, 13, 17, 18, 25, 34, 40, 42, 48, 55, 62, 69, 72, 77, 89, 90], "561428379782e": 11, "559760203488e": 11, "9999499685222": 11, "559752674386e": 11, "04168169240444": 11, "041682": 11, "4862287044525146": 11, "0010447502136230469": 11, "006774675520687": 11, "9932256422636": 11, "6956034733": 11, "002048208707529": 11, "7343095368176": 11, "213991622021": 11, "0002697365474824": 11, "8839403501148": 11, "5059383903968": 11, "832109993819e": 11, "832109993818e": 11, "7601171076044": 11, "2339657807265": 11, "437682932226e": 11, "6663448297416": 11, "1471256246326": 11, "134983216297e": 11, "134983216299e": 11, "5553643816468": 11, "1181584941169": 11, "342312725774e": 11, "342312725781e": 11, "723813357168": 11, "1006387519744": 11, "078561231268e": 11, "078561231235e": 11, "078561231266e": 11, "8033142552548": 11, "09474734646262": 11, "966870958108e": 11, "966870953918e": 11, "966870953989e": 11, "7525479178458": 11, "966870954248e": 11, "09354342735761": 11, "199895240123e": 11, "199895384126e": 11, "199895235332e": 11, "9984019849396": 11, "199895236104e": 11, "0931036778586": 11, "1017793609e": 11, "101768735229e": 11, "101780822184e": 11, "9999499563876": 11, "101780420221e": 11, "0931027446646": 11, "093103": 11, "2920143604278564": 11, "nbm": 11, "len": [11, 13, 15, 28, 29, 31, 33, 34, 35, 39, 48, 84, 87], "nbm2": 11, "299": [11, 17], "plot_barycenter_lp_vs_entrop": [11, 17], "design": [12, 29, 32, 33, 35, 38, 46, 55, 62, 64, 82, 90, 91], "how": [12, 24, 29, 32, 33, 34, 35, 38, 43, 46, 48, 53, 54, 62, 64, 70, 91], "pathlib": [12, 13, 19, 23, 25, 33], "four": [12, 33], "construct": [12, 33, 66, 69, 72, 82], "this_fil": [12, 13, 19, 23, 25, 33], "realpath": [12, 13, 19, 23, 25, 33], "__file__": [12, 13, 19, 23, 25, 33], "data_path": [12, 13, 19, 23, 25, 33], "join": [12, 13, 19, 23, 25, 33, 69, 89], "parent": [12, 13, 19, 23, 25, 33], "f1": [12, 13], "f2": [12, 13, 29, 31, 35, 77], "f3": [12, 29, 31, 35], "heart": [12, 13, 16], "f4": 12, "duck": [12, 13, 14], "nb_imag": 12, "corner": [12, 90], "bilinear": [12, 48], "v1": [12, 29, 31, 35], "v2": [12, 29, 31, 35], "v3": 12, "v4": 12, "suptitl": [12, 28], "004": 12, "ty": 12, "tmp1": 12, "tmp2": 12, "elif": [12, 29, 31, 34, 35], "call": [12, 46, 62, 64, 70, 72, 77, 78, 79, 87, 90, 91], "convolutional_barycenter2d": [12, 13], "218": [12, 17], "plot_convolutional_barycent": [12, 17], "janati": [13, 60, 61, 68, 70, 89, 90], "gramfort": [13, 68, 70, 89, 90], "37th": [13, 70, 89, 90], "119": [13, 55, 70, 89, 90], "4692": [13, 70, 89, 90], "4701": [13, 70, 89, 90], "hicham": [13, 60, 61, 68, 89], "janati100": 13, "gmail": [13, 18, 19, 20, 24, 25, 26, 29, 31, 32, 33, 35, 45, 46], "com": [13, 18, 19, 20, 24, 25, 26, 29, 31, 32, 33, 35, 45, 46, 67, 69, 84, 87, 89, 91], "barycenter_debias": 13, "convolutional_barycenter2d_debias": 13, "bar": [13, 82], "bars_debias": 13, "indianr": 13, "gold": [13, 69], "sharei": [13, 30], "bar_debias": 13, "varepsilon": [13, 71], "3f": [13, 21, 63], "asarrai": 13, "displai": [13, 20, 26, 48, 70], "img": [13, 19, 23, 25, 33], "grei": [13, 34, 39], "bars_sinkhorn": 13, "7e": 13, "all_bar": 13, "jj": 13, "ax_row": 13, "ii": [13, 22], "set_xtick": [13, 16, 58], "set_ytick": [13, 16, 58], "spine": 13, "top": [13, 39, 67, 77, 81], "set_vis": 13, "166": [13, 17, 55], "plot_debiased_barycent": [13, 17], "vivien": [14, 84, 89], "iip": 14, "ist": 14, "kyoto": 14, "ac": 14, "jp": 14, "eduardo": [14, 15, 68], "fernand": [14, 15, 68], "montesuma": [14, 15, 68], "universit": [14, 15], "saclai": [14, 15], "measures_loc": [14, 15, 70, 78], "measures_weight": [14, 15, 70, 78], "x_init": [14, 15, 70, 78], "free_support_barycent": [14, 70, 90, 91], "free_support_sinkhorn_barycent": [14, 15], "995": [14, 17], "plot_free_support_barycent": [14, 17], "understood": 15, "cloud": [15, 33], "linalg": [15, 28, 31, 32, 62, 69], "x4": 15, "multivariate_norm": 15, "a3": 15, "a4": 15, "steelblu": 15, "float32": 15, "xb_init": 15, "subplot2grid": [15, 33], "536": [15, 18, 20, 21, 31, 32, 48, 51, 55], "did": [15, 18, 20, 21, 31, 32, 48, 51, 55, 77, 91], "increas": [15, 18, 20, 21, 31, 32, 48, 51, 55, 80], "774": [15, 17], "plot_free_support_sinkhorn_barycent": [15, 17], "saint": [16, 78, 89], "dizier": [16, 78, 89], "live": [16, 34, 67, 78, 89], "subspac": [16, 74, 78, 89, 90], "2105": [16, 78, 89], "09755": [16, 78, 89], "eloi": [16, 68], "tangui": [16, 32, 68, 77], "sub_sample_factor": 16, "i3": 16, "uu": 16, "vv": 16, "x_list": [16, 78], "im": [16, 23, 25, 39, 48], "a_list": [16, 78], "p1": [16, 21, 29, 31, 35, 44], "p2": [16, 21, 29, 31, 35, 44], "p3": [16, 29, 31, 35], "p_list": [16, 78], "n_samples_bari": [16, 78], "send": [16, 67], "visual": [16, 20, 26, 38, 49, 50], "x_visu": 16, "xi": 16, "view_init": [16, 58], "azim": 16, "set_ztick": [16, 58], "generalized_free_support_barycent": 16, "elev": 16, "_init": 16, "init_func": 16, "frame": 16, "136": [16, 55, 56], "blit": 16, "830": [16, 17, 31], "plot_generalized_free_support_barycent": [16, 17], "861": 17, "auto_examples_barycent": 17, "demo": [17, 37, 65, 70, 73, 78, 87, 90], "convolut": [17, 37, 68, 70, 89, 91], "debias": [17, 37, 68, 70, 73, 87, 89, 90, 91], "free": [17, 37, 66, 67, 68, 70, 78, 80, 89, 91], "introduc": [18, 19, 20, 21, 22, 24, 26, 70, 90, 91], "otda": [18, 21, 22, 27, 37, 72, 73, 87, 91], "stanisla": [18, 19, 20, 24, 25, 26, 68, 89], "chambon": [18, 19, 20, 24, 25, 26, 68, 89], "stan": [18, 19, 20, 24, 25, 26], "3gauss": [18, 20, 22, 26], "3gauss2": [18, 20, 22, 26], "ot_emd": [18, 19, 20, 22, 25, 48, 90], "da": [18, 19, 20, 21, 22, 23, 24, 25, 26, 68, 90, 91], "emdtransport": [18, 19, 20, 22, 25, 90, 91], "ot_sinkhorn": [18, 19, 20, 21, 22, 25, 48], "sinkhorntransport": [18, 19, 20, 21, 22, 25, 26, 90, 91], "reg_": [18, 19, 20, 21, 22, 25, 26, 72], "ot_lpl1": [18, 20], "sinkhornlpl1transport": [18, 20, 90, 91], "reg_cl": [18, 20, 72], "1e0": [18, 20, 24, 25, 40], "l1l2": [18, 72], "ot_l1l2": 18, "sinkhornl1l2transport": [18, 90], "2e0": 18, "transp_xs_emd": [18, 19, 20, 22, 25], "transp_xs_sinkhorn": [18, 19, 20, 22, 25], "transp_xs_lpl1": [18, 20], "transp_xs_l1l2": 18, "763061e": 18, "000000e": [18, 24, 25, 30, 31, 32, 55], "081861e": 18, "689583e": 18, "681200e": 18, "862280e": 18, "179100e": 18, "195813e": 18, "821987e": 18, "211501e": 18, "02": [18, 24, 25, 27, 31, 32, 36, 40, 46, 47, 49, 55, 56, 59, 62, 65, 80], "029326e": 18, "808932e": 18, "216608e": 18, "03": [18, 24, 30, 31, 32, 36, 40, 44, 45, 46, 49, 55, 56, 58, 80], "305436e": 18, "792762e": 18, "019666e": 18, "617012e": 18, "785968e": 18, "804295e": 18, "794348e": 18, "778259e": 18, "335304e": 18, "709292e": 18, "772608e": 18, "187777e": 18, "650678e": 18, "768734e": 18, "190456e": 18, "874332e": 18, "768700e": 18, "876119e": 18, "318292e": 18, "767482e": 18, "894485e": 18, "04": [18, 24, 25, 30, 31, 32, 46, 47, 49, 55, 56, 65], "218588e": 18, "765491e": 18, "127725e": 18, "990989e": 18, "762434e": 18, "734384e": 18, "056738e": 18, "759833e": 18, "478250e": 18, "601472e": 18, "758374e": 18, "294698e": 18, "458518e": 18, "757601e": 18, "396351e": 18, "727032e": 18, "756624e": 18, "562652e": 18, "771489e": 18, "754377e": 18, "281229e": 18, "247758e": 18, "753747e": 18, "587988e": 18, "292424e": 18, "753162e": 18, "336538e": 18, "849492e": 18, "param_img": [18, 22], "coupling_": [18, 20, 21, 22, 26, 72], "nemdtransport": [18, 20, 22, 26], "nsinkhorntransport": [18, 20, 22, 26], "nsinkhornlpl1transport": [18, 20], "nsinkhornl1l2transport": 18, "transp": [18, 20, 22, 26, 64], "031": [18, 27], "plot_otda_class": [18, 27], "present": [19, 24, 26, 63, 67, 77, 91], "transfer": [19, 90], "ferradan": [19, 25, 55, 72, 79, 89, 90], "papadaki": [19, 25, 55, 72, 79, 89, 90], "peyr": [19, 25], "aujol": [19, 25, 55, 72, 79, 89, 90], "2014": [19, 25, 55, 70, 72, 78, 79, 89, 90], "1853": [19, 25, 55, 72, 79, 89, 90], "1882": [19, 25, 55, 72, 79, 89, 90], "im2mat": [19, 23, 25, 33], "pixel": [19, 23, 33], "per": [19, 23, 25, 33, 50, 78, 84], "mat2im": [19, 23, 25], "back": [19, 23, 25, 67], "minmax": [19, 23, 25], "clip": [19, 23, 25, 69], "ocean_dai": [19, 23, 25], "jpg": [19, 23, 25], "256": [19, 23, 25], "ocean_sunset": [19, 23, 25], "idx1": [19, 25], "idx2": [19, 25], "ylabel": [19, 25, 30, 34, 39, 48, 57, 58, 64], "predict": [19, 77], "out": [19, 24, 72, 83], "transp_xt_emd": 19, "inverse_transform": [19, 23, 72, 90], "transp_xt_sinkhorn": 19, "i1t": [19, 23], "i2t": [19, 23], "963": [19, 27], "plot_otda_color_imag": [19, 27], "explicit": [20, 26, 66, 72, 87], "some": [20, 26, 62, 67, 68, 72, 78, 80, 87, 89, 90, 91], "quantiti": [20, 26, 34], "greater": [20, 26, 91], "coeffici": [20, 26, 34, 70, 71, 77, 78, 79, 82], "give": [20, 26, 48, 64, 67, 69, 77, 82, 91], "understand": [20, 26], "what": [20, 26, 66, 67, 90], "n_samples_sourc": [20, 26], "n_samples_target": [20, 26], "main": [20, 67, 78, 90, 91], "971": [20, 27], "plot_otda_d2": [20, 27], "ievgen": [21, 22, 68, 70, 72, 89], "redko": [21, 22, 38, 43, 68, 70, 71, 72, 89], "st": [21, 22, 74], "etienn": [21, 22], "1985": 21, "dec1": 21, "dec2": 21, "pt": 21, "dect": 21, "ys1": 21, "2gauss_prop": 21, "bia": [21, 24, 25, 72, 76], "ys2": 21, "all_xr": 21, "all_yr": 21, "plot_ax": 21, "dec": 21, "set1": 21, "2f": [21, 48], "equal": [21, 44, 52, 69, 82], "85": [21, 55, 91], "046431138906241": 21, "129455496299416": 21, "print_g": 21, "independ": [21, 90], "jcpottransport": 21, "ws1": 21, "proportions_": [21, 72], "log_": [21, 72], "d2": [21, 38, 43], "ws2": 21, "prop": [21, 80], "err": [21, 31, 32, 49, 62], "069551e": 21, "h_re": 21, "1f": 21, "789": [21, 27], "plot_otda_jcpot": [21, 27], "ot_emd_laplac": 22, "emdlaplacetransport": 22, "reg_lap": [22, 72], "reg_src": [22, 72], "transp_xs_emd_laplac": 22, "503": 22, "runtimewarn": [22, 31, 32, 54, 61], "divid": [22, 31, 32, 48, 54, 61], "encount": [22, 31, 32, 54, 61], "ktransposeu": 22, "511": 22, "nemdlaplacetransport": 22, "377": [22, 27, 91], "plot_otda_laplacian": [22, 27], "anglet": 23, "line2d": 23, "0x7fca81ec9c30": 23, "ae": 23, "empirical_bures_wasserstein_map": 23, "xst": 23, "lineartransport": [23, 90], "invers": [23, 29, 31, 35, 63, 69, 72, 78, 82], "956": [23, 27], "plot_otda_linear_map": [23, 27], "mappingtransport": [24, 25, 90], "perrot": [24, 25, 68, 72, 89, 90], "habrard": [24, 25, 72, 89, 90], "xs_new": 24, "ot_mapping_linear": [24, 25], "transp_xs_linear": 24, "transp_xs_linear_new": 24, "ot_mapping_gaussian": [24, 25], "transp_xs_gaussian": 24, "transp_xs_gaussian_new": 24, "delta": [24, 25, 43, 82], "190105e": 24, "170411e": 24, "700201e": 24, "169845e": 24, "356805e": 24, "169664e": 24, "344581e": 24, "169558e": 24, "549048e": 24, "169490e": 24, "619901e": 24, "169453e": 24, "982881e": 24, "208325e": 24, "153391e": 24, "305359e": 24, "150638e": 24, "627997e": 24, "149220e": 24, "416816e": 24, "148278e": 24, "270431e": 24, "147579e": 24, "685273e": 24, "147070e": 24, "226112e": 24, "146654e": 24, "002934e": 24, "146340e": 24, "574136e": 24, "146055e": 24, "890732e": 24, "145822e": 24, "605142e": 24, "bari": [24, 28], "189": [24, 27, 55, 91], "plot_otda_map": [24, 27], "image_emd": 25, "image_sinkhorn": 25, "x1tl": 25, "image_mapping_linear": 25, "x1tn": 25, "image_mapping_gaussian": 25, "797245e": 25, "758014e": 25, "182822e": 25, "757026e": 25, "620752e": 25, "756521e": 25, "875691e": 25, "756218e": 25, "725224e": 25, "756015e": 25, "153553e": 25, "755868e": 25, "348118e": 25, "755759e": 25, "234582e": 25, "755673e": 25, "893582e": 25, "755604e": 25, "942771e": 25, "755547e": 25, "206000e": 25, "755500e": 25, "695056e": 25, "755460e": 25, "307154e": 25, "755426e": 25, "944208e": 25, "755395e": 25, "715960e": 25, "755369e": 25, "515613e": 25, "755345e": 25, "367864e": 25, "755324e": 25, "197885e": 25, "755305e": 25, "071067e": 25, "755303e": 25, "898122e": 25, "842001e": 25, "780145e": 25, "358084e": 25, "778490e": 25, "296544e": 25, "777841e": 25, "648247e": 25, "777495e": 25, "948923e": 25, "777284e": 25, "184075e": 25, "777135e": 25, "396988e": 25, "777027e": 25, "059322e": 25, "776945e": 25, "619816e": 25, "776880e": 25, "672789e": 25, "776827e": 25, "971430e": 25, "325": [25, 27], "plot_otda_mapping_colors_imag": [25, 27], "ot_sinkhorn_un": 26, "transp_xs_sinkhorn_un": 26, "ot_sinkhorn_semi": 26, "transp_xs_sinkhorn_semi": 26, "modifi": 26, "involv": [26, 67], "infinit": [26, 72], "daili": 26, "element": [26, 28, 48, 69, 70, 72, 77, 78, 82, 87], "fill": [26, 60, 69, 72], "recal": [26, 82], "cost_": [26, 72], "exhibit": [26, 72], "nunsupervis": 26, "nsemi": 26, "750": [26, 27, 31], "plot_otda_semi_supervis": [26, 27], "352": [27, 91], "auto_examples_domain": 27, "multi": [27, 37, 69, 70, 72, 73, 87, 89, 90, 91], "shift": [27, 37, 70, 72, 73, 87, 89, 90, 91], "laplacian": [27, 37, 68, 72, 73, 87, 89, 90], "unsupervis": [27, 37, 72, 73, 87, 90], "semi": [27, 36, 37, 68, 72, 73, 77, 79, 82, 84, 85, 87, 89, 90, 91], "supervis": [27, 37, 70, 72, 73, 87, 89, 90, 91], "networkx": [28, 29, 31, 34, 35], "nx": [28, 69, 77, 79, 87, 91], "csgraph": 28, "shortest_path": 28, "mcol": 28, "fgw_barycent": [28, 77, 90], "find_thresh": 28, "inf": [28, 72], "sup": 28, "trick": [28, 80, 90], "adequ": 28, "sai": 28, "connect": [28, 29, 31, 34, 35], "linesearch": [28, 77, 79, 91], "reconstruct": [28, 34, 77, 84, 91], "come": [28, 67, 90, 91], "n_node": [28, 34], "begin": [28, 82], "thresh": 28, "cprime": 28, "sp_to_adjac": 28, "sc": 28, "argmin": [28, 29, 31, 35, 69], "threshinf": 28, "threshsup": 28, "minimum": [28, 69, 72, 77, 79, 90, 91], "new": [28, 69, 87, 90], "zeros_lik": 28, "fill_diagon": [28, 34], "build_noisy_circular_graph": 28, "with_nois": 28, "structure_nois": 28, "noisi": [28, 43], "add_nodes_from": 28, "add_nod": [28, 29, 31, 35], "attr_nam": 28, "add_edg": [28, 29, 31, 35], "randomint": 28, "graph_color": 28, "nx_graph": 28, "cnorm": 28, "cpick": 28, "scalarmapp": 28, "set_arrai": 28, "val_map": 28, "get_node_attribut": 28, "to_rgba": 28, "ad": [28, 29, 31, 43, 67, 69, 72, 76, 78, 80, 82, 87, 90, 91], "po": [28, 29, 31, 33, 35, 72], "kamada_kawai_layout": 28, "draw": 28, "node_color": [28, 29, 31, 35], "with_label": 28, "node_s": [28, 29, 31, 35], "indic": [28, 39, 67, 69, 82], "adjacency_matrix": 28, "sizebari": 28, "95": [28, 29, 31, 33, 35, 55, 57, 58], "from_numpy_arrai": 28, "000": [28, 36], "plot_barycenter_fgw": [28, 36], "sr": [29, 35, 79], "g1": [29, 31, 35, 52], "g2": [29, 31, 35, 52], "reweigh": [29, 35], "srgw": [29, 35, 77], "These": [29, 35, 67], "endow": [29, 31, 35], "srfgw": [29, 35, 77], "48": [29, 35, 48, 55, 65, 77, 79, 89, 91], "c\u00e9dric": [29, 31, 32, 34, 35, 68, 77, 79, 89], "iclr": [29, 35, 77, 79, 84, 89], "cedvincentcuaz": [29, 31, 32, 35], "entropic_semirelaxed_gromov_wasserstein": [29, 77], "entropic_semirelaxed_fused_gromov_wasserstein": [29, 77], "commun": [29, 31, 34, 35, 66, 90], "stochastic_block_model": [29, 31, 34, 35], "n3": [29, 31, 35], "g3": [29, 31, 35], "to_numpy_arrai": [29, 31, 34, 35], "h3": [29, 31, 35], "edg": [29, 31, 35], "weight_intra_g2": [29, 31, 35], "weight_inter_g2": [29, 31, 35], "weight_intra_g3": [29, 31, 35], "weight_inter_g3": [29, 31, 35], "weightedg2": [29, 31, 35], "part_g2": [29, 31, 35], "weightedg3": [29, 31, 35], "part_g3": [29, 31, 35], "srgw_e": 29, "ot_23": [29, 35], "log_23": [29, 35], "srgw_23": [29, 35], "srgw_dist": [29, 35], "ot_32": [29, 35], "log_32": [29, 35], "srgw_32": [29, 35], "255": [29, 35], "06000000014822844": 29, "1577777782120945": 29, "adjust": [29, 31], "intens": [29, 31, 34], "proportionali": [29, 31], "sent": [29, 31, 90], "draw_graph": [29, 31, 35], "nodes_color_part": [29, 31, 35], "gweight": [29, 31, 35], "edge_color": [29, 31, 35], "shiftx": [29, 31, 35], "spring_layout": [29, 31, 35], "alpha_edg": [29, 31, 35], "width_edg": [29, 31, 35], "draw_networkx_edg": [29, 31, 35], "width": [29, 31, 35, 39, 70], "visibl": [29, 31, 35, 91], "activ": [29, 31, 35, 69, 70, 82], "edgelist_activ": [29, 31, 35], "edgelist_deactiv": [29, 31, 35], "edgelist": [29, 31, 35], "draw_networkx_nod": [29, 31, 35], "nodelist": [29, 31, 35], "scaled_gweight": [29, 31, 35], "nodes_s": [29, 31, 35], "draw_transp_colored_srgw": [29, 35], "part_g1": [29, 31, 35], "pos1": [29, 31, 35], "pos2": [29, 31, 35], "switchx": [29, 31, 35], "seed_g1": [29, 31, 35], "seed_g2": [29, 31, 35], "starting_color": [29, 31, 35], "partit": [29, 31, 35], "part1": [29, 31, 35], "unique_color": [29, 31, 35], "uniqu": [29, 31, 35, 39, 69, 78, 90], "nodes_color_part1": [29, 31, 35], "nodes_color_part2": [29, 31, 35], "assign": [29, 31, 34, 35, 70, 71, 77], "k1": [29, 31, 35], "max_tk1": [29, 31], "k2": [29, 31, 35], "seed_g3": [29, 31, 35], "121": [29, 32, 35, 48, 55, 62, 91], "h_2": [29, 35, 77], "c_3": [29, 35], "hbar2": [29, 35], "122": [29, 32, 35, 48, 55, 62, 91], "hbar3": [29, 35], "h_3": [29, 35], "intra": [29, 31, 34, 35, 80], "pairwis": [29, 31, 35, 72, 77], "fgw_alpha": [29, 35], "fgw_dist": [29, 31, 35, 77], "srfgw_e": 29, "srfgw_23": [29, 35], "srfgw_dist": [29, 35], "srfgw_32": [29, 35], "3787614673384413": 29, "03505939173475108": 29, "2391152216506156": 29, "f_2": [29, 35, 77], "f_3": [29, 35], "153": [29, 36, 50, 55, 56], "plot_entropic_semirelaxed_fgw": [29, 36], "sig": 30, "sig2": 30, "phi": [30, 82], "phi2": 30, "a_i": [30, 70, 78, 90], "y_j": [30, 90], "b_j": [30, 70, 78, 90], "w1": [30, 74], "w2": [30, 54, 74], "got": 30, "l_x": 30, "l_y": 30, "gridspec": 30, "set_aspect": 30, "ax3": [30, 33, 62], "sharex": 30, "gwg": 30, "logw": 30, "reload_ext": 30, "wgw": 30, "734412e": 30, "508254e": 30, "875326e": 30, "226158e": 30, "189327e": 30, "456740e": 30, "189279e": 30, "622743e": 30, "552714e": 30, "0019407272338867188": 30, "683978e": 30, "860061e": 30, "134468e": 30, "239175e": 30, "182948e": 30, "682787e": 30, "677113e": 30, "visu": 30, "737": [30, 36], "plot_fgw": [30, 36], "attribut": [31, 69, 72, 77, 91], "further": [31, 48, 66, 67], "xu": [31, 32, 77, 89], "luo": [31, 32, 77, 89], "zha": [31, 32, 77, 89], "duke": [31, 32, 77, 89], "entropic_fused_gromov_wasserstein": [31, 77, 91], "add": [31, 34, 62, 67, 78, 80, 87, 91], "fgw0": 31, "log0": [31, 32, 62], "proxim": [31, 32, 77, 91], "oper": [31, 32, 67, 72, 74, 76, 90], "ppa": [31, 32, 77, 91], "fgwe": 31, "loge": [31, 32], "pgd": [31, 32, 77], "sparsiti": [31, 32, 34, 50, 77, 84, 89, 90, 91], "level": [31, 32, 66, 70, 72, 73, 87, 90], "fgw0_sparsiti": 31, "fgw_sparsiti": 31, "fgwe_spars": 31, "tend": [31, 32, 48], "produc": [31, 32], "err0": [31, 32], "271184e": 31, "211305e": 31, "640431e": 31, "059879e": 31, "024660e": 31, "637523e": 31, "866445e": 31, "936346e": 31, "243555e": 31, "831410e": 31, "891614e": 31, "149450e": 31, "473216e": 31, "854134e": 31, "724554e": 31, "747973e": 31, "850574e": 31, "244899e": 31, "559817e": 31, "841819e": 31, "279017e": 31, "755571e": 31, "819396e": 31, "870728e": 31, "242264e": 31, "784264e": 31, "283767e": 31, "513222e": 31, "772225e": 31, "191339e": 31, "203845e": 31, "764565e": [31, 55], "034974e": 31, "660790e": 31, "761179e": 31, "000610e": 31, "385291e": 31, "536990e": 31, "472502e": 31, "129779e": 31, "936118e": 31, "334121e": 31, "852583e": 31, "134797e": 31, "177453e": 31, "236970e": 31, "465712e": 31, "858590e": 31, "312306e": 31, "789776e": 31, "493878e": 31, "029873e": 31, "095678e": 31, "177744e": 31, "257392e": 31, "242762e": 31, "125684e": 31, "770321e": 31, "368455e": 31, "094853e": 31, "159374e": 31, "564338e": 31, "974174e": 31, "297098e": 31, "639787e": 31, "106686e": 31, "716049e": 31, "433353e": 31, "227167e": 31, "080617e": 31, "980812e": 31, "912468e": 31, "858901e": 31, "805235e": 31, "740559e": 31, "658655e": 31, "557834e": 31, "440242e": 31, "310793e": 31, "175881e": 31, "1066": [31, 32], "042086e": 31, "151311e": 31, "992882e": 31, "972309e": 31, "101506e": 31, "379844e": 31, "797194e": 31, "337741e": 31, "510": 31, "984020e": 31, "520": 31, "720212e": 31, "530": 31, "534028e": 31, "540": 31, "417109e": 31, "550": 31, "364311e": 31, "560": 31, "372351e": 31, "570": 31, "438312e": 31, "580": 31, "558368e": 31, "590": 31, "726958e": 31, "600": 31, "936418e": 31, "610": 31, "176966e": 31, "620": 31, "436877e": 31, "630": 31, "702796e": 31, "640": 31, "960175e": 31, "650": 31, "193888e": 31, "660": 31, "389046e": 31, "670": 31, "531979e": 31, "680": 31, "611295e": 31, "690": 31, "618871e": 31, "700": 31, "550627e": 31, "710": 31, "406954e": 31, "720": 31, "192695e": 31, "730": [31, 80, 89, 90], "916691e": 31, "740": 31, "590932e": 31, "229430e": 31, "760": 31, "846976e": 31, "770": 31, "457933e": 31, "780": 31, "075230e": 31, "790": 31, "709643e": 31, "369414e": 31, "810": 31, "060184e": 31, "820": 31, "785186e": 31, "545590e": 31, "840": 31, "340916e": 31, "850": 31, "169442e": 31, "860": 31, "028566e": 31, "870": 31, "150926e": 31, "880": 31, "254840e": 31, "890": 31, "560795e": 31, "900": 31, "033105e": 31, "910": [31, 61], "638947e": 31, "920": 31, "349865e": 31, "930": 31, "142583e": 31, "940": 31, "999120e": 31, "950": 31, "906371e": 31, "960": 31, "855388e": 31, "970": 31, "840590e": 31, "980": 31, "859006e": 31, "990": 31, "909627e": 31, "981055e": 31, "110756e": 31, "139916e": 31, "158952e": 31, "159648e": 31, "159715e": 31, "159728e": 31, "159732e": 31, "159733e": 31, "37611793139330985": 31, "3671471715862439": 31, "21736592892258028": 31, "proportionn": 31, "draw_transp_colored_gw": 31, "131": [31, 32, 55, 62], "algo": [31, 32, 48, 70], "p0": [31, 40, 74], "q0": 31, "132": [31, 32, 55, 62, 91], "133": [31, 32, 55, 62], "pe": [31, 91], "qe": 31, "416": [31, 36], "plot_fgw_solv": [31, 36], "compar": [32, 48, 67, 90], "Then": [32, 34, 54, 90], "kerdoncuff": [32, 68, 77, 89, 90], "emonet": [32, 77, 89, 90], "marc": [32, 77, 89, 90], "mjl": [32, 89, 90], "erwan": [32, 33, 68], "vautier": [32, 33, 68], "lapost": 32, "net": 32, "sp": [32, 33, 62, 80], "demonstr": [32, 62, 67, 91], "purpos": [32, 62, 90], "mu_": [32, 41, 51, 54, 57, 62, 63, 64, 72, 76, 90], "cov_": [32, 41, 51, 57, 62, 63, 64], "mu_t": [32, 41, 51, 57, 62, 63, 64, 72, 76, 90], "cov_t": [32, 41, 51, 57, 62, 63, 64], "make_2d_samples_gauss": [32, 41, 51, 57, 62, 63, 64], "sqrtm": [32, 62, 69], "gw0": 32, "entropic_gromov_wasserstein": [32, 77, 90, 91], "gwe": 32, "gw0_sparsiti": 32, "gw_sparsiti": 32, "gwe_spars": 32, "nfeasibl": 32, "606056e": 32, "330020e": 32, "022552e": 32, "276036e": 32, "023674e": 32, "098033e": 32, "063453e": 32, "820952e": 32, "205038e": 32, "027228e": 32, "501837e": 32, "088545e": 32, "191147e": 32, "684324e": 32, "209223e": 32, "076331e": 32, "140465e": 32, "876462e": 32, "040056e": 32, "334508e": 32, "018997e": 32, "123553e": 32, "184445e": 32, "04501836901925051": 32, "037612941478320075": 32, "03823623173438275": 32, "pgw": 32, "plog": 32, "pointwise_gromov_wasserstein": [32, 77], "sgw": 32, "slog": [32, 70], "sampled_gromov_wasserstein": [32, 77], "pointwis": [32, 91], "gw_dist_estim": 32, "gw_dist_std": 32, "toarrai": [32, 69, 82], "18551015414186553": 32, "14981263716330115": 32, "0013724960658236956": 32, "658": [32, 36], "plot_gromov": [32, 36], "decomposit": 33, "pca": 33, "smacof_md": 33, "3000": 33, "singl": 33, "stress": 33, "declar": 33, "npo": 33, "isometri": 33, "n_init": 33, "embedding_": 33, "nmd": 33, "init": [33, 77, 91], "cross": 33, "triangl": 33, "star": 33, "lambdast": 33, "ct01": 33, "ct02": 33, "ct13": 33, "ct23": 33, "help": [33, 67, 78, 90, 91], "consist": [33, 67, 69, 70, 72, 78, 90], "rotat": [33, 48], "n_compon": 33, "npost01": 33, "npost02": 33, "npost13": 33, "npost23": 33, "ax4": 33, "ax5": 33, "ax6": 33, "ax7": 33, "ax8": 33, "ax9": 33, "ax10": 33, "ax11": 33, "ax12": 33, "0x7fca5abc6950": 33, "973": [33, 36], "plot_gromov_barycent": [33, 36], "denot": [34, 48, 70, 72, 78], "c_": [34, 48, 77], "p_": [34, 77], "combin": [34, 90], "sigma_d": 34, "sum_d": [34, 77], "vari": 34, "extens": 34, "aforement": 34, "unattribut": 34, "uniformli": 34, "cedric": 34, "inria": [34, 39, 60, 61], "gromov_wasserstein_linear_unmix": [34, 77], "gromov_wasserstein_dictionary_learn": [34, 77], "fused_gromov_wasserstein_linear_unmix": [34, 77], "fused_gromov_wasserstein_dictionary_learn": [34, 77], "inter": 34, "nlabel": 34, "p_inter": 34, "p_intra": 34, "n_cluster": 34, "low": [34, 42, 48, 75], "high": [34, 67], "int32": 34, "idx_c": 34, "plot_gromov_wasserstein_dictionary_learn": [34, 36], "93": [34, 55, 91], "promot": [34, 77, 90], "cdict_gw": 34, "epoch": [34, 77], "batch_siz": [34, 46, 72, 77, 85], "learning_r": [34, 77], "nonnegative_symmetr": [34, 77], "tol_out": [34, 77], "tol_inn": [34, 77], "max_iter_out": [34, 77], "max_iter_inn": [34, 77], "use_log": [34, 77], "use_adam_optim": [34, 77], "loss_epoch": 34, "cumul": [34, 69], "928070954885737": 34, "528435380634622": 34, "481496257647932": 34, "7251645422089865": 34, "5896787585765": 34, "904249565820505": 34, "894474501829586": 34, "839762947251266": 34, "8357620167079265": 34, "57323879230497": 34, "shade": 34, "dark": [34, 91], "white": 34, "idx_atom": 34, "scaled_atom": 34, "reconstruction_error": 34, "cembed": [34, 77], "unmixings2d": 34, "extrem": 34, "linewidth": [34, 39, 44, 58], "876122061653427": 34, "hot": 34, "encod": [34, 87], "dataset_featur": 34, "001": [34, 52, 70, 72, 74, 84], "cdict_fgw": 34, "ydict_fgw": 34, "learning_rate_c": [34, 77], "learning_rate_i": [34, 77], "488307468700953": 34, "409377567767253": 34, "7999724972950055": 34, "590157056733561": 34, "8883324021076806": 34, "6222694197786383": 34, "638584123604814": 34, "537256942676492": 34, "4127469295470614": 34, "315769238894676": 34, "max_featur": 34, "min_featur": 34, "catom": 34, "fatom": 34, "scaled_f": 34, "yembed": [34, 77], "1390622525410854": 34, "697": [34, 36], "semirelaxed_gromov_wasserstein": [35, 77], "semirelaxed_fused_gromov_wasserstein": [35, 77], "105007529006411": 35, "1622222222222223": 35, "3831574076330344": 35, "04003492125155468": 35, "24488498486312954": 35, "291": [35, 36, 91], "plot_semirelaxed_fgw": [35, 36], "52": [36, 39, 55, 74, 89, 91], "924": [36, 78, 89, 90], "auto_examples_gromov": 36, "comparison": [36, 37, 48, 55, 90], "introduct": [37, 56, 90, 91], "row": [37, 47, 69, 70, 71, 77, 78, 82, 87], "align": [37, 47, 66, 71, 72, 76, 90], "discrimin": [37, 47, 74, 89, 91], "logo": [37, 47, 90, 91], "toolbox": [37, 47, 68, 90, 91], "compon": [37, 47, 74, 87, 89, 90, 91], "auto_examples_python": 37, "auto_examples_jupyt": 37, "arbitrari": 38, "n_1": [38, 43], "d_1": [38, 43], "n_2": [38, 43], "d_2": [38, 43], "49": [38, 43, 55, 71, 89, 91], "quang": [38, 43], "hui": [38, 43], "tran": [38, 43], "patch": [38, 39, 43], "connectionpatch": [38, 43], "coot": 38, "co_optimal_transport": [38, 43], "co_optimal_transport2": [38, 43], "coot2": [38, 43], "d1": [38, 43], "pi_sampl": [38, 43, 71], "pi_featur": [38, 43, 71], "coot_dist": 38, "5f": 38, "yaxi": [38, 39, 43], "tick_right": [38, 43], "xaxi": [38, 43], "tick_top": [38, 43], "xya": [38, 43], "xyb": [38, 43], "con": [38, 43], "coordsa": [38, 43], "transdata": [38, 43], "coordsb": [38, 43], "add_artist": [38, 43], "10903416567681642": 38, "09875680836922485": 38, "09685398028260431": 38, "09685": 38, "533": [38, 47], "plot_coot": [38, 47], "colla": [39, 74, 89], "breloi": [39, 74, 89], "antoin": [39, 68, 84, 89], "make_blob": 39, "ticker": 39, "mticker": 39, "esp": 39, "cluster_std": 39, "shuffl": 39, "x_y_lim": 39, "linestyl": [39, 54], "pi_": [39, 74], "powernorm": 39, "aspect": [39, 90, 91], "cb": 39, "orient": [39, 66], "vertic": [39, 44], "shrink": [39, 48], "ticks_loc": 39, "get_ytick": 39, "tolist": 39, "set_major_loc": 39, "fixedloc": 39, "set_yticklabel": 39, "get_tick": 39, "tick_param": 39, "labels": 39, "class_": 39, "idx_min": 39, "idx_max": 39, "rect": 39, "rectangl": 39, "gca": 39, "add_patch": 39, "_n": [39, 70], "x_label": 39, "652": [39, 47], "plot_ewca": [39, 47], "wda": [40, 68, 91], "fda": [40, 90], "floor": [40, 69], "nbnois": 40, "hstack": 40, "pfda": 40, "projfda": 40, "maxit": [40, 70, 74], "pwda": 40, "projwda": 40, "3042776946697494e": 40, "65147154e": 40, "4401037686381040e": 40, "16760501e": 40, "2234351238819928e": 40, "30555049e": 40, "2169879996364462e": 40, "39115407e": 40, "1924746118060602e": 40, "25387848e": 40, "1177409528990749e": 40, "70993539e": 40, "0862213476139048e": 40, "52716830e": 40, "0747229322240269e": 40, "34923131e": 40, "0678766065261684e": 40, "74029183e": 40, "0621337155459647e": 40, "03651803e": 40, "0577080390746939e": 40, "59605592e": 40, "0543140912472148e": 40, "28883715e": 40, "0470236926310577e": 40, "47528039e": 40, "0445628467498224e": 40, "03183254e": 40, "0364189455866245e": 40, "31006504e": 40, "0303977563823823e": 40, "39885352e": 40, "0301476238242911e": 40, "17467624e": 40, "0292344306414324e": 40, "79959907e": 40, "0271888325518124e": 40, "94408237e": 40, "0183214741002155e": 40, "98322994e": 40, "9762636217090053e": 40, "03196875e": 40, "8225627240876070e": 40, "36012863e": 40, "0855506616050116e": 40, "92702943e": 40, "8001027160864295e": 40, "01920255e": 40, "3687486090807947e": 40, "01780640e": 40, "3431203993360381e": 40, "23716793e": 40, "3118645266923005e": 40, "90753137e": 40, "28": [40, 55, 80, 82, 89, 90, 91], "3067593392325469e": 40, "02767925e": 40, "3064856262240019e": 40, "07925279e": 40, "3060699763593800e": 40, "95215754e": 40, "3060442760754873e": 40, "77368118e": 40, "3060442709529139e": 40, "34108449e": 40, "3060442708435561e": 40, "52599061e": 40, "3060442707674844e": 40, "07742368e": 40, "3060442707600512e": 40, "36125504e": 40, "reach": [40, 91], "after": [40, 89], "76": [40, 55, 91], "xsp": 40, "xtp": 40, "xspw": 40, "xtpw": 40, "192": [40, 55], "complexwarn": 40, "complex": [40, 77, 90], "discard": [40, 78], "imaginari": 40, "offset": 40, "asanyarrai": 40, "686": [40, 47], "plot_wda": [40, 47], "xr": [41, 42, 51, 52, 57], "gweak": 41, "741": [41, 47], "plot_weakot_vs_ot": [41, 47], "sign": 42, "og": 42, "templat": [42, 91], "465": [42, 47], "plot_factored_coupl": [42, 47], "mu_x": 43, "mu_i": [43, 90], "clean": [43, 91], "y_": [43, 72, 77], "contamin": 43, "outlier": 43, "intuit": [43, 67], "182": [43, 55], "y_noisi": 43, "nrow": 43, "ncol": 43, "wy_samp": [43, 71], "0751486": 43, "08008339": 43, "09476863": 43, "1003163": 43, "10005085": 43, "09995814": 43, "09993793": 43, "09973254": 43, "11460073": 43, "13540289": 43, "clearli": [43, 90], "complet": [43, 67, 90, 91], "010430685366656256": 43, "plot_learning_weights_with_coot": [43, 47], "letter": 44, "o1": 44, "o2": 44, "translat": 44, "t1": 44, "t2": [44, 63, 82], "horizont": 44, "sx": 44, "sy": [44, 67], "markerfacecolor": 44, "markeredgecolor": 44, "save": [44, 70, 77], "savefig": 44, "svg": 44, "dpi": 44, "transpar": 44, "bbox_inch": 44, "tight": 44, "43": [44, 55, 70, 72, 76, 78, 89, 90, 91], "375": [44, 91], "darkgrai": 44, "logo_dark": 44, "066": [44, 47], "plot_logo": [44, 47], "alaya": [45, 68, 70, 80, 89, 90], "b\u00e9rar": [45, 70, 89, 90], "gasso": [45, 63, 70, 80, 82, 86, 89, 90], "neurip": [45, 80, 82, 86, 89, 90], "mokhtar": [45, 68, 89], "mokhtarzahdi": 45, "plot1d_mat": [45, 46, 49, 50, 55, 60], "lambd": [45, 49, 50, 51], "ns_budget": [45, 70], "budget": [45, 70], "kept": [45, 70, 91], "nt_budget": [45, 70], "g_screen": 45, "restrict": [45, 70], "3524": 45, "bottleneck": [45, 70], "instal": [45, 67, 70, 78, 90, 91], "pypi": [45, 70, 89, 91], "020986042861303855": 45, "kappa": [45, 70], "7476531411890917": 45, "cardin": [45, 70, 87], "isel": 45, "jsel": 45, "481": [45, 47], "plot_screenkhorn_1d": [45, 47], "librari": [46, 68, 89, 90, 91], "bach": [46, 85, 89, 90], "bhushan": [46, 85, 89, 90], "damodaran": [46, 85, 89, 90], "kilian": [46, 51, 68, 89], "n_sourc": [46, 85], "n_target": [46, 53, 85], "x_sourc": 46, "y_target": 46, "sag": [46, 85], "sag_pi": 46, "solve_semi_dual_entrop": 46, "55553509e": 46, "96395660e": 46, "76579142e": 46, "31178196e": 46, "21640234e": 46, "25357448e": 46, "30225078e": 46, "37891338e": 46, "56123975e": 46, "61451746e": 46, "31505947e": 46, "33831456e": 46, "61515202e": 46, "34246014e": 46, "28734709e": 46, "07550428e": 46, "85500870e": 46, "52288517e": 46, "08262628e": 46, "21423583e": 46, "16904253e": 46, "03825797e": 46, "87178503e": 46, "18391107e": 46, "15462212e": 46, "65987989e": 46, "23177216e": 46, "39440107e": 46, "semicontinu": 46, "asgd": [46, 85], "asgd_pi": 46, "log_asgd": 46, "beta": [46, 70, 78, 84, 85, 91], "87919564": 46, "64972912": 46, "90370867": 46, "65425719": 46, "46885467": 46, "30171991": 46, "77560865": 46, "50927934": 46, "40235686": 46, "91006054": 46, "82169674": 46, "44871332e": 46, "00795848e": 46, "75697554e": 46, "40659699e": 46, "20593540e": 46, "31205385e": 46, "34063837e": 46, "80242597e": 46, "40238837e": 46, "68032820e": 46, "26513361e": 46, "36373920e": 46, "52546195e": 46, "40772739e": 46, "31054753e": 46, "19774150e": 46, "29902872e": 46, "49410422e": 46, "06078986e": 46, "22200805e": 46, "05396464e": 46, "03575289e": 46, "84056467e": 46, "19573357e": 46, "02994053e": 46, "72385417e": 46, "28420336e": 46, "47716225e": 46, "sinkhorn_pi": 46, "55553508e": 46, "96395661e": 46, "31178193e": 46, "30225079e": 46, "37891333e": 46, "56123974e": 46, "33831455e": 46, "61515201e": 46, "07550425e": 46, "85500876e": 46, "52288523e": 46, "08262629e": 46, "16904255e": 46, "03825804e": 46, "87178504e": 46, "23177217e": 46, "39440105e": 46, "sgd": [46, 77, 85], "sgd_dual_pi": 46, "log_sgd": 46, "solve_dual_entrop": 46, "92075753": 46, "80864372": 46, "07370578": 46, "0179414": 46, "60239916": 46, "8141425": 46, "11122763": 46, "346688": 46, "47228889": 46, "57636303": 46, "9534778": 46, "21021974e": 46, "26940978e": 46, "09590373e": 46, "59858662e": 46, "65652588e": 46, "83627521e": 46, "27260904e": 46, "58648690e": 46, "49188637e": 46, "03096858e": 46, "44340331e": 46, "37764488e": 46, "14582303e": 46, "32484188e": 46, "15372556e": 46, "26187284e": 46, "79941580e": 46, "58297483e": 46, "36009581e": 46, "15632652e": 46, "07006729e": 46, "61709962e": 46, "99740394e": 46, "13377026e": 46, "88094057e": 46, "36124884e": 46, "09671824e": 46, "24045368e": 46, "795": [46, 47], "plot_stochast": [46, 47], "803": 47, "auto_examples_oth": 47, "aureli": 48, "boisbunon": [48, 89], "pip": [48, 67, 90, 91], "conda": [48, 90], "forg": [48, 90], "alwai": [48, 67, 72, 90, 91], "document": [48, 68, 89, 90, 91], "pythonot": [48, 69, 89, 91], "github": [48, 67, 69, 84, 87, 89, 90, 91], "io": [48, 89, 91], "Or": 48, "inlin": 48, "caf\u00e9": 48, "croissant": 48, "manhattan": 48, "quick": [48, 89, 91], "googl": 48, "extract": [48, 69], "fiction": 48, "product": [48, 69, 82, 87, 90], "sale": 48, "bakery_po": 48, "bakery_prod": 48, "describ": [48, 67, 70, 77], "sold": 48, "cafe_po": 48, "cafe_prod": 48, "fun": 48, "imap": 48, "shop": 48, "npz": 48, "cafe": 48, "89": [48, 55, 72, 91], "73": [48, 55], "88": [48, 55, 91], "92": [48, 55, 91], "91": [48, 55, 91], "441": [48, 70, 78, 89], "next": [48, 77, 78, 82, 90, 91], "ec": 48, "thing": 48, "fontweight": 48, "bold": 48, "va": 48, "coolwarm": 48, "cbar": 48, "use_gridspec": 48, "cell": 48, "awai": 48, "thu": [48, 87], "costli": 48, "while": [48, 78, 90, 91], "time_emd": 48, "section": [48, 90, 91], "good": [48, 66, 67, 90], "plane": 48, "easili": [48, 90], "interpret": 48, "10838179": 48, "pseudo": 48, "oslash": 48, "wise": [48, 69, 90], "divis": 48, "altern": [48, 67, 72, 90], "Be": 48, "care": 48, "pre": [48, 70, 90], "nit": 48, "ot_sink_algo": 48, "atleast_2d": 48, "equival": [48, 49, 72, 76, 80], "diag": [48, 69, 70, 90], "2g": 48, "0008": 48, "notic": 48, "deliv": 48, "fraction": 48, "sens": [48, 70, 78, 89, 90], "reg_paramet": 48, "logspac": [48, 54, 57, 58, 63], "w_sinkhorn_reg": 48, "time_sinkhorn_reg": 48, "max_ot": 48, "few": [48, 91], "seri": 48, "someth": [48, 67], "although": 48, "972222222222223": 48, "impact": [48, 90], "higher": [48, 77, 84], "much": [48, 67, 70], "littl": [48, 78], "quickli": [48, 67], "863": [48, 56], "plot_intro_ot": [48, 56], "0x7fca82339180": 49, "861463e": 49, "860154e": 49, "144529e": 49, "130143e": 49, "178815e": 49, "426078e": 49, "661047e": 49, "233110e": 49, "338932e": 49, "776627e": 49, "293340e": 49, "235791e": 49, "637176e": 49, "740051e": 49, "529356e": 49, "450071e": 49, "193632e": 49, "449812e": 49, "294505e": 49, "857493e": 49, "822723e": 49, "698": [49, 56], "plot_ot_1d": [49, 56], "constrain": [50, 84, 89, 90, 91], "togeth": 50, "0x7fca8215da50": 50, "gsm": 50, "smooth_ot_du": [50, 90], "max_nz": [50, 84, 87], "entri": [50, 69], "permit": 50, "gsc": 50, "sparsity_constrain": [50, 84], "plot_ot_1d_smooth": [50, 56], "empirical_sinkhorn": [51, 90], "287": [51, 56, 91], "plot_ot_2d_sampl": [51, 56], "stole": 52, "idea": [52, 78, 90, 91], "pdf": [52, 54, 67, 90], "1706": 52, "07650": 52, "strictli": [52, 78, 90], "m1": 52, "mp": 52, "l1": [52, 71], "gp": 52, "xtot": 52, "367": [52, 56], "plot_ot_l1_vs_l2": [52, 56], "lst_m": 53, "d_emd": 53, "d_emd2": 53, "d_tv": 53, "0x7fca81879e10": 53, "d_sinkhorn": 53, "d_sinkhorn2": 53, "641": [53, 56], "plot_compute_emd": [53, 56], "special": [54, 69], "pdf_von_mis": 54, "endpoint": 54, "mu1": 54, "kappa1": 54, "mu_target": 54, "pdf1": 54, "pdf_t": 54, "mu2": 54, "kappa2": 54, "vonmis": 54, "0x7fca8180de10": 54, "period": 54, "attain": [54, 80], "antipod": 54, "contrari": 54, "n_try": 54, "deal": [54, 80], "put": 54, "xts2": 54, "l_w2_circl": 54, "l_w2": 54, "w2_circl": 54, "m_w2_circl": 54, "std_w2_circl": 54, "m_w2": 54, "std_w2": 54, "fill_between": [54, 57, 58], "vline": 54, "ymin": 54, "ymax": 54, "728": 54, "tc": 54, "mask_end": 54, "ctp": 54, "ctm": 54, "dcptm": 54, "dcmtp": 54, "invalid": [54, 61], "vm": 54, "589": [54, 56], "plot_compute_wasserstein_circl": [54, 56], "df": [55, 79, 90], "gl2": 55, "frob": 55, "760578e": 55, "669467e": 55, "457501e": 55, "111116e": 55, "665639e": 55, "298130e": 55, "827855e": 55, "664378e": 55, "572776e": 55, "260396e": 55, "664077e": 55, "811855e": 55, "015066e": 55, "663912e": 55, "936787e": 55, "653393e": 55, "663852e": 55, "555826e": 55, "916369e": 55, "663814e": 55, "305693e": 55, "836245e": 55, "663785e": 55, "760450e": 55, "929009e": 55, "663767e": 55, "078011e": 55, "793559e": 55, "663751e": 55, "525192e": 55, "584755e": 55, "663737e": 55, "396466e": 55, "396951e": 55, "663727e": 55, "086938e": 55, "012700e": 55, "663720e": 55, "042609e": 55, "725769e": 55, "663713e": 55, "160914e": 55, "922568e": 55, "663707e": 55, "823502e": 55, "361187e": 55, "663702e": 55, "022440e": 55, "028438e": 55, "663697e": 55, "181249e": 55, "292634e": 55, "663692e": 55, "698532e": 55, "489527e": 55, "663687e": 55, "258253e": 55, "420712e": 55, "663682e": 55, "741118e": 55, "560349e": 55, "663678e": 55, "624135e": 55, "365715e": 55, "663673e": 55, "645179e": 55, "400714e": 55, "663670e": 55, "957237e": 55, "256196e": 55, "663666e": 55, "261541e": 55, "762450e": 55, "663663e": 55, "851305e": 55, "079948e": 55, "663660e": 55, "942296e": 55, "231320e": 55, "663657e": 55, "092896e": 55, "481860e": 55, "663653e": 55, "924361e": 55, "201470e": 55, "663651e": 55, "625455e": 55, "704189e": 55, "663648e": 55, "641123e": 55, "730250e": 55, "663645e": 55, "566666e": 55, "606377e": 55, "663643e": 55, "338514e": 55, "226810e": 55, "663641e": 55, "222711e": 55, "034152e": 55, "663639e": 55, "221805e": 55, "032642e": 55, "663637e": 55, "440781e": 55, "396935e": 55, "663634e": 55, "520091e": 55, "528875e": 55, "663632e": 55, "288193e": 55, "143080e": 55, "663630e": 55, "123055e": 55, "868347e": 55, "663628e": 55, "024487e": 55, "704365e": 55, "663627e": 55, "079606e": 55, "796061e": 55, "663625e": 55, "172093e": 55, "949922e": 55, "663623e": 55, "047880e": 55, "743277e": 55, "663621e": 55, "010577e": 55, "681217e": 55, "663619e": 55, "064438e": 55, "770820e": 55, "663618e": 55, "882375e": 55, "644049e": 55, "663616e": 55, "532647e": 55, "419505e": 55, "663615e": 55, "930189e": 55, "652001e": 55, "663613e": 55, "728955e": 55, "452161e": 55, "663612e": 55, "524214e": 55, "584459e": 55, "663610e": 55, "088418e": 55, "511958e": 55, "663609e": 55, "639430e": 55, "270902e": 55, "663608e": 55, "662611e": 55, "108397e": 55, "53": 55, "663607e": 55, "133700e": 55, "186767e": 55, "54": 55, "663605e": 55, "648141e": 55, "272349e": 55, "55": [55, 91], "663604e": 55, "557516e": 55, "090911e": 55, "56": [55, 91], "663603e": 55, "304213e": 55, "215131e": 55, "663602e": 55, "353809e": 55, "057021e": 55, "58": [55, 91], "663601e": 55, "968279e": 55, "325603e": 55, "59": [55, 90, 91], "663600e": 55, "367159e": 55, "059240e": 55, "663599e": 55, "610790e": 55, "334102e": 55, "61": 55, "663598e": 55, "787466e": 55, "628015e": 55, "62": [55, 91], "663596e": 55, "937777e": 55, "154166e": 55, "63": 55, "599432e": 55, "315190e": 55, "64": [55, 91], "663595e": 55, "813048e": 55, "670555e": 55, "65": [55, 62], "663594e": 55, "724600e": 55, "523409e": 55, "66": [55, 62, 70, 89, 90, 91], "663593e": 55, "081892e": 55, "011779e": 55, "67": [55, 91], "663592e": 55, "948732e": 55, "896260e": 55, "68": 55, "663591e": 55, "941833e": 55, "221188e": 55, "69": [55, 80], "663590e": 55, "213739e": 55, "673523e": 55, "663589e": 55, "127355e": 55, "529811e": 55, "71": 55, "663588e": 55, "349251e": 55, "235363e": 55, "72": [55, 91], "007084e": 55, "329722e": 55, "663587e": 55, "880265e": 55, "118744e": 55, "74": 55, "663586e": 55, "931950e": 55, "204723e": 55, "663585e": 55, "981309e": 55, "286832e": 55, "663584e": 55, "952959e": 55, "576082e": 55, "77": 55, "544857e": 55, "560750e": 55, "78": [55, 89], "663583e": 55, "237579e": 55, "049564e": 55, "79": [55, 91], "663582e": 55, "382386e": 55, "290460e": 55, "646051e": 55, "065503e": 55, "663581e": 55, "197994e": 55, "983702e": 55, "663580e": 55, "072764e": 55, "775370e": 55, "83": 55, "994645e": 55, "645410e": 55, "84": [55, 91], "663579e": 55, "842721e": 55, "056248e": 55, "663578e": 55, "276486e": 55, "450691e": 55, "86": [55, 91], "737346e": 55, "217366e": 55, "87": [55, 80, 91], "663577e": 55, "282043e": 55, "123508e": 55, "663576e": 55, "020937e": 55, "689135e": 55, "431951e": 55, "709310e": 55, "663575e": 55, "052335e": 55, "077789e": 55, "500538e": 55, "823407e": 55, "663574e": 55, "063176e": 55, "095821e": 55, "663573e": 55, "576367e": 55, "949549e": 55, "94": 55, "224681e": 55, "364492e": 55, "663572e": 55, "673221e": 55, "110670e": 55, "96": 55, "635561e": 55, "048017e": 55, "97": 55, "663571e": 55, "527236e": 55, "867807e": 55, "98": [55, 80], "788548e": 55, "638946e": 55, "663570e": 55, "727141e": 55, "536791e": 55, "127278e": 55, "202445e": 55, "101": 55, "663569e": 55, "637504e": 55, "387670e": 55, "102": 55, "922750e": 55, "862195e": 55, "663568e": 55, "076454e": 55, "117891e": 55, "104": 55, "911509e": 55, "843492e": 55, "105": 55, "663567e": 55, "403398e": 55, "998215e": 55, "106": [55, 91], "439790e": 55, "058755e": 55, "107": [55, 91], "634542e": 55, "382735e": 55, "663566e": 55, "452203e": 55, "079401e": 55, "109": 55, "852991e": 55, "746137e": 55, "663565e": 55, "165490e": 55, "602434e": 55, "111": 55, "450250e": 55, "076149e": 55, "112": 55, "663564e": 55, "685294e": 55, "467159e": 55, "113": [55, 91], "821800e": 55, "694245e": 55, "114": [55, 91], "237390e": 55, "722040e": 55, "115": 55, "663563e": 55, "992842e": 55, "315219e": 55, "166739e": 55, "604506e": 55, "117": 55, "086064e": 55, "470297e": 55, "118": [55, 91], "663562e": 55, "435945e": 55, "052346e": 55, "292497e": 55, "813711e": 55, "663561e": 55, "366209e": 55, "936334e": 55, "138746e": 55, "557935e": 55, "009637e": 55, "343153e": 55, "123": [55, 61], "663560e": 55, "386258e": 55, "969683e": 55, "124": [55, 91], "927442e": 55, "206415e": 55, "081681e": 55, "463000e": 55, "126": [55, 91], "663559e": 55, "759123e": 55, "926406e": 55, "127": [55, 91], "890771e": 55, "145409e": 55, "128": [55, 72], "971315e": 55, "279398e": 55, "129": 55, "663558e": 55, "101983e": 55, "496771e": 55, "035645e": 55, "386414e": 55, "984492e": 55, "301317e": 55, "663557e": 55, "849064e": 55, "076024e": 55, "795703e": 55, "987255e": 55, "134": [55, 91], "624087e": 55, "701762e": 55, "135": 55, "689557e": 55, "810673e": 55, "663556e": 55, "644308e": 55, "735399e": 55, "137": [55, 91], "618007e": 55, "691644e": 55, "138": [55, 62, 91], "483013e": 55, "467075e": 55, "139": [55, 91], "663555e": 55, "708771e": 55, "842636e": 55, "013847e": 55, "350146e": 55, "141": [55, 91], "721217e": 55, "863339e": 55, "142": [55, 91], "663554e": 55, "027911e": 55, "373540e": 55, "143": [55, 91], "935449e": 55, "144": [55, 91], "677151e": 55, "790030e": 55, "145": [55, 61, 91], "351982e": 55, "249094e": 55, "146": [55, 91], "663553e": 55, "423360e": 55, "367836e": 55, "147": 55, "541112e": 55, "563722e": 55, "148": [55, 91], "491601e": 55, "481358e": 55, "149": 55, "466407e": 55, "439446e": 55, "663552e": 55, "801524e": 55, "996929e": 55, "151": 55, "714107e": 55, "851507e": 55, "152": 55, "491257e": 55, "480784e": 55, "513799e": 55, "518282e": 55, "154": 55, "663551e": 55, "354539e": 55, "253345e": 55, "155": [55, 91], "233818e": 55, "052519e": 55, "156": [55, 91], "576219e": 55, "622121e": 55, "157": [55, 91], "452791e": 55, "416792e": 55, "663550e": 55, "262867e": 55, "100843e": 55, "316379e": 55, "189863e": 55, "295447e": 55, "155041e": 55, "161": 55, "283286e": 55, "134810e": 55, "162": 55, "569222e": 55, "610479e": 55, "163": 55, "663549e": 55, "172942e": 55, "951247e": 55, "164": 55, "399809e": 55, "328651e": 55, "165": 55, "229432e": 55, "045221e": 55, "326191e": 55, "206184e": 55, "167": 55, "663548e": 55, "209694e": 55, "012384e": 55, "168": 55, "372136e": 55, "282614e": 55, "169": [55, 91], "338395e": 55, "226484e": 55, "416497e": 55, "356410e": 55, "171": 55, "298576e": 55, "160242e": 55, "172": [55, 91], "663547e": 55, "190590e": 55, "980603e": 55, "167083e": 55, "941497e": 55, "174": [55, 91], "069425e": 55, "779038e": 55, "217780e": 55, "025834e": 55, "176": [55, 91], "140754e": 55, "897697e": 55, "177": 55, "663546e": 55, "160707e": 55, "930890e": 55, "101798e": 55, "832892e": 55, "179": 55, "114904e": 55, "854694e": 55, "064022e": 55, "770049e": 55, "181": [55, 91], "258231e": 55, "540149e": 55, "213120e": 55, "018080e": 55, "183": 55, "663545e": 55, "164296e": 55, "936859e": 55, "184": [55, 91], "188762e": 55, "977559e": 55, "185": 55, "394153e": 55, "562760e": 55, "186": 55, "028656e": 55, "711216e": 55, "115348e": 55, "855431e": 55, "188": 55, "663544e": 55, "768310e": 55, "625002e": 55, "021806e": 55, "699820e": 55, "086303e": 55, "807113e": 55, "191": [55, 91], "879008e": 55, "643416e": 55, "050210e": 55, "747071e": 55, "193": 55, "002463e": 55, "667641e": 55, "194": 55, "663543e": 55, "062747e": 55, "767925e": 55, "195": [55, 91], "348538e": 55, "555170e": 55, "196": 55, "992512e": 55, "329589e": 55, "197": 55, "558020e": 55, "590018e": 55, "198": [55, 91], "993772e": 55, "662507e": 55, "588499e": 55, "428734e": 55, "737134e": 55, "453459e": 55, "692289e": 55, "617643e": 55, "614437e": 55, "464513e": 55, "612639e": 55, "102965e": 55, "003963e": 55, "611291e": 55, "371098e": 55, "348827e": 55, "610468e": 55, "110558e": 55, "230389e": 55, "610198e": 55, "672927e": 55, "693743e": 55, "610130e": 55, "232417e": 55, "814742e": 55, "610090e": 55, "513455e": 55, "046887e": 55, "610002e": 55, "443507e": 55, "764057e": 55, "609996e": 55, "657071e": 55, "887869e": 55, "609948e": 55, "998735e": 55, "827807e": 55, "609695e": 55, "569217e": 55, "525962e": 55, "609533e": 55, "010779e": 55, "626881e": 55, "609520e": 55, "043897e": 55, "294681e": 55, "609465e": 55, "415246e": 55, "496718e": 55, "609386e": 55, "898605e": 55, "883745e": 55, "609324e": 55, "837052e": 55, "175060e": 55, "609298e": 55, "617826e": 55, "603564e": 55, "609184e": 55, "080015e": 55, "139305e": 55, "609083e": 55, "273206e": 55, "009411e": 55, "608988e": 55, "940805e": 55, "558681e": 55, "608853e": 55, "380030e": 55, "348223e": 55, "608844e": 55, "185045e": 55, "341930e": 55, "608824e": 55, "279113e": 55, "057868e": 55, "608819e": 55, "156821e": 55, "078753e": 55, "608783e": 55, "205746e": 55, "548567e": 55, "608764e": 55, "189894e": 55, "914259e": 55, "608755e": 55, "474607e": 55, "807303e": 55, "608737e": 55, "144227e": 55, "840760e": 55, "608676e": 55, "775335e": 55, "073291e": 55, "608638e": 55, "348020e": 55, "777116e": 55, "608627e": 55, "863136e": 55, "104023e": 55, "608529e": 55, "110230e": 55, "828482e": 55, "608487e": 55, "641106e": 55, "248184e": 55, "608409e": 55, "823638e": 55, "758383e": 55, "608373e": 55, "256641e": 55, "629519e": 55, "608338e": 55, "132444e": 55, "429691e": 55, "608310e": 55, "786649e": 55, "873484e": 55, "608260e": 55, "103848e": 55, "991794e": 55, "608206e": 55, "321265e": 55, "341279e": 55, "608201e": 55, "054747e": 55, "912648e": 55, "608195e": 55, "198335e": 55, "751739e": 55, "608193e": 55, "458736e": 55, "360328e": 55, "608159e": 55, "153759e": 55, "463587e": 55, "608115e": 55, "738314e": 55, "403523e": 55, "608108e": 55, "960032e": 55, "368161e": 55, "608081e": 55, "675447e": 55, "694254e": 55, "608072e": 55, "976340e": 55, "610383e": 55, "608046e": 55, "604130e": 55, "579515e": 55, "608020e": 55, "617036e": 55, "600226e": 55, "608014e": 55, "957795e": 55, "364188e": 55, "608011e": 55, "292411e": 55, "078211e": 55, "607998e": 55, "431795e": 55, "355831e": 55, "607964e": 55, "127054e": 55, "420225e": 55, "607947e": 55, "021878e": 55, "643126e": 55, "560621e": 55, "725288e": 55, "607900e": 55, "929781e": 55, "710793e": 55, "607890e": 55, "740229e": 55, "229659e": 55, "607858e": 55, "039550e": 55, "279306e": 55, "607836e": 55, "319545e": 55, "121612e": 55, "607826e": 55, "378947e": 55, "025624e": 55, "607808e": 55, "145102e": 55, "841105e": 55, "607776e": 55, "941743e": 55, "121889e": 55, "607743e": 55, "087422e": 55, "356037e": 55, "607741e": 55, "310249e": 55, "106541e": 55, "607738e": 55, "682752e": 55, "705425e": 55, "607691e": 55, "913936e": 55, "684709e": 55, "607671e": 55, "288855e": 55, "072055e": 55, "607654e": 55, "002448e": 55, "611590e": 55, "607641e": 55, "209492e": 55, "319792e": 55, "607632e": 55, "588467e": 55, "984199e": 55, "607619e": 55, "050388e": 55, "294196e": 55, "607618e": 55, "417493e": 55, "513973e": 55, "607598e": 55, "210509e": 55, "946012e": 55, "607591e": 55, "392914e": 55, "062009e": 55, "607579e": 55, "759587e": 55, "247415e": 55, "607574e": 55, "760280e": 55, "437356e": 55, "607556e": 55, "146469e": 55, "843012e": 55, "607550e": 55, "689456e": 55, "930984e": 55, "065631e": 55, "535705e": 55, "607539e": 55, "555681e": 55, "053852e": 55, "607528e": 55, "177470e": 55, "153798e": 55, "607527e": 55, "306068e": 55, "529648e": 55, "607514e": 55, "816045e": 55, "256440e": 55, "607511e": 55, "301970e": 55, "700442e": 55, "607504e": 55, "281072e": 55, "881840e": 55, "607503e": 55, "821886e": 55, "257370e": 55, "607480e": 55, "403013e": 55, "255315e": 55, "169298e": 55, "879624e": 55, "607473e": 55, "235982e": 55, "809227e": 55, "607470e": 55, "717105e": 55, "760195e": 55, "148402e": 55, "883374e": 55, "reg1": [55, 79], "reg2": [55, 79], "gel2": 55, "gcg": [55, 72, 90], "693084e": 55, "610202e": 55, "147342e": 55, "288260e": 55, "610179e": 55, "406304e": 55, "264402e": 55, "610174e": 55, "352083e": 55, "397436e": 55, "715023e": 55, "371659e": 55, "154387e": 55, "474015e": 55, "539": [55, 56], "plot_optim_otreg": [55, 56], "auto_exampl": 56, "adrien": [57, 68, 89], "corenflo": [57, 68, 89], "aalto": 57, "fi": [57, 61], "n_seed": [57, 58], "n_projections_arr": [57, 58], "res_mean": [57, 58], "res_std": [57, 58], "xscale": [57, 58], "confid": [57, 58], "948": [57, 59], "plot_vari": [57, 59], "mgrid": 58, "30j": 58, "plot_surfac": 58, "set_zlim": 58, "tick": 58, "ssw_1": 58, "049": [58, 59], "plot_variance_ssw": [58, 59], "997": 59, "auto_examples_sl": 59, "uot": [60, 82, 89, 90], "553": [60, 65], "plot_uot_1d": [60, 65], "n_weight": 61, "weight_list": 61, "overflow": [61, 91], "kv": 61, "915": 61, "ktu": 61, "922": 61, "595": 61, "974": 61, "615": 61, "455": [61, 91], "361": [61, 91], "plot_uot_barycenter_1d": [61, 65], "471": [61, 65, 91], "n_nois": [62, 64], "cov": 62, "w0": 62, "partial_wasserstein": [62, 64, 90], "entropic_partial_wasserstein": [62, 90], "partial_w_dist": 62, "jet": [62, 64], "47910182636916243": 62, "5034205945081646": 62, "res0": 62, "partial_gromov_wasserstein": [62, 90], "entropic_partial_gromov_wasserstein": [62, 90], "partial_gw_dist": [62, 80], "611280e": 62, "345385e": 62, "584346e": 62, "659015e": 62, "38071035222889": 62, "59015303098326": 62, "plot_partial_wass_and_gromov": [62, 65], "overlap": [62, 90], "sinc": [62, 78, 90, 91], "explicitli": [62, 74, 81, 91], "478237e": 62, "894947e": 62, "251769e": 62, "596705e": 62, "808371e": 62, "136110e": 62, "859072e": 62, "136043e": 62, "11743971783944865": 62, "9136043100219415": 62, "811": [62, 65], "wu": [63, 82, 86, 89], "f\u00e9vott": [63, 82, 86, 89], "through": [63, 82, 86, 89, 90], "regress": [63, 67, 82, 86, 89], "haoran": 63, "final_gamma": 63, "t_list": [63, 82], "g_list": [63, 82], "regularization_path": 63, "semi_relax": [63, 82], "t_list2": 63, "g_list2": 63, "selected_gamma": 63, "compute_transport_plan": 63, "ell_2": [63, 64, 86], "g_list_v": 63, "l_2": 63, "201": [63, 65, 91], "plot_regpath": [63, 65], "_f": [64, 90], "div": [64, 86], "ell_1": 64, "reg_m_kl": 64, "reg_m_l2": 64, "entropic_kl_uot": 64, "kl_uot": 64, "mm_unbalanc": 64, "l2_uot": 64, "partial_ot": 64, "612": [64, 65], "plot_unbalanced_ot": [64, 65], "647": 65, "auto_examples_unbalanc": 65, "interest": [66, 90], "foster": [66, 90], "open": [66, 67, 68, 89, 90, 91], "welcom": [66, 89], "environ": 66, "contributor": [66, 89, 91], "maintain": [66, 69, 89, 91], "particip": 66, "harass": 66, "experi": 66, "everyon": 66, "regardless": [66, 91], "ag": 66, "bodi": 66, "disabl": 66, "ethnic": 66, "gender": 66, "ident": [66, 69, 72], "nation": 66, "person": [66, 68], "appear": [66, 70], "race": 66, "religion": 66, "sexual": 66, "behavior": [66, 67, 91], "includ": [66, 67, 71, 74, 87, 90, 91], "inclus": [66, 67], "languag": [66, 68, 90], "Being": 66, "viewpoint": 66, "gracefulli": 66, "critic": 66, "focus": 66, "best": [66, 67, 77, 90, 91], "empathi": 66, "toward": [66, 91], "member": [66, 89], "unaccept": 66, "imageri": 66, "unwelcom": 66, "attent": 66, "troll": 66, "insult": 66, "derogatori": 66, "comment": 66, "polit": 66, "attack": 66, "public": [66, 67, 91], "privat": 66, "publish": 66, "physic": 66, "electron": 66, "address": [66, 67, 90], "permiss": 66, "could": [66, 91], "inappropri": 66, "profession": 66, "clarifi": 66, "appropri": [66, 67, 87], "fair": [66, 78], "correct": [66, 67, 78, 89, 91], "action": [66, 91], "edit": [66, 67], "reject": 66, "commit": [66, 67, 69, 91], "wiki": 66, "ban": 66, "temporarili": 66, "perman": 66, "deem": 66, "threaten": 66, "offens": 66, "harm": 66, "offici": [66, 91], "mail": [66, 67, 89], "post": 66, "social": 66, "media": 66, "act": 66, "appoint": 66, "offlin": 66, "event": 66, "abus": 66, "report": [66, 67, 89, 91], "contact": 66, "team": [66, 67, 91], "complaint": 66, "review": [66, 67], "investig": [66, 90], "circumst": 66, "oblig": 66, "confidenti": 66, "regard": 66, "incid": 66, "polici": 66, "separ": [66, 90, 91], "who": [66, 91], "faith": 66, "face": [66, 80], "temporari": 66, "repercuss": 66, "determin": [66, 70], "leadership": 66, "coven": 66, "thank": [67, 68, 82, 91], "workflow": 67, "fork": 67, "repositori": [67, 91], "develop": [67, 89, 90, 91], "branch": [67, 91], "click": 67, "button": 67, "page": [67, 89, 91], "under": [67, 70, 71, 72, 89], "your": [67, 89, 90], "guid": [67, 89, 91], "repo": [67, 91], "disk": 67, "git": 67, "yourlogin": 67, "cd": 67, "hold": 67, "checkout": 67, "my": 67, "never": [67, 91], "master": [67, 87, 89, 91], "modified_fil": 67, "push": [67, 90, 91], "instruct": 67, "email": 67, "committ": 67, "abov": [67, 77, 81, 82, 90, 91], "seem": 67, "magic": 67, "look": [67, 82], "web": 67, "ask": [67, 89, 91], "friend": 67, "anoth": [67, 72, 78, 90, 91], "compli": 67, "rule": [67, 79], "submit": 67, "pep8": [67, 91], "guidelin": [67, 89], "mention": 67, "descript": 67, "docstr": [67, 87, 91], "usag": 67, "doctest": [67, 91], "prefix": 67, "mrg": 67, "readi": 67, "merg": [67, 91], "core": [67, 91], "approv": [67, 91], "elig": 67, "incomplet": [67, 91], "wip": 67, "progress": 67, "matur": 67, "duplic": 67, "broad": 67, "api": [67, 69, 89, 91], "seek": [67, 90], "collabor": 67, "often": [67, 90], "benefit": [67, 68, 89], "task": 67, "pr": [67, 69, 91], "folder": [67, 89, 91], "coverag": [67, 91], "enhanc": 67, "verifi": 67, "manner": 67, "modif": 67, "grant": 67, "desir": [67, 70, 77, 78, 87], "fail": [67, 78, 90, 91], "At": [67, 90], "paragraph": 67, "narr": 67, "literatur": [67, 70, 90], "common": [67, 90], "program": [67, 70, 78, 79, 89, 90, 91], "tool": [67, 90], "pyflak": 67, "autopep8": 67, "easi": [67, 89, 90], "redund": [67, 91], "bonu": 67, "benchmark": [67, 69, 91], "profil": 67, "track": [67, 77, 91], "feel": 67, "wish": 67, "snippet": 67, "highlight": [67, 91], "well": [67, 69, 78, 87, 90], "platform": [67, 91], "__version__": 67, "about": [67, 70, 90, 91], "gist": 67, "except": 67, "traceback": 67, "great": 67, "pick": [67, 85], "tracker": 67, "resolv": 67, "knowledg": [67, 90], "assist": 67, "area": [67, 90], "greatli": [67, 90, 91], "appreci": 67, "experienc": 67, "concentr": 67, "glad": 67, "restructuredtext": 67, "etc": [67, 71], "directori": 67, "editor": 67, "noplot": 67, "place": [67, 91], "viewabl": 67, "browser": 67, "pillow": 67, "write": [67, 69], "keep": [67, 90, 91], "compromis": 67, "reader": [67, 90], "hand": 67, "wave": 67, "explan": 67, "inspir": 67, "scikit": [67, 87, 90, 91], "wrapper": [68, 90], "alexandr": [68, 89], "ci": [68, 91], "michael": 68, "l\u00e9o": [68, 89], "gautheron": [68, 89], "nathali": [68, 89], "gayraud": [68, 89], "debug": [68, 91], "alain": [68, 89], "jcpot": [68, 89, 91], "minhui": 68, "huang": [68, 74, 89, 90], "robust": [68, 74, 89, 90, 91], "nathan": [68, 91], "cassereau": [68, 91], "camil": 68, "le": [68, 87], "coz": 68, "theo": 68, "gnassoun": 68, "wassertstein": 68, "lot": [68, 91], "would": [68, 69, 91], "variou": [68, 87, 91], "mathieu": [68, 84, 91], "financ": [68, 89], "manpow": [68, 89], "partner": [68, 89], "goal": [69, 85], "agnost": 69, "whether": [69, 77, 78, 87], "cupi": [69, 89, 90, 91], "nonetheless": 69, "achiev": 69, "imit": 69, "As": [69, 78, 90, 91], "convent": [69, 72], "list_to_arrai": [69, 87], "get_backend": 69, "know": 69, "argument": [69, 72, 79, 87, 91], "op": 69, "numpy_op": 69, "np_config": 69, "enable_numpy_behavior": 69, "intel": 69, "xeon": 69, "6248": 69, "50ghz": 69, "tesla": 69, "v100": 69, "sxm2": 69, "32gb": 69, "date": [69, 91], "8th": 69, "316": [69, 91], "pull": [69, 91], "bitsize32": 69, "bit": 69, "devicecpugpu": 69, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 69, "00080": 69, "00220": 69, "01510": 69, "00950": 69, "01930": 69, "00510": 69, "0293": 69, "00050": 69, "00130": 69, "00970": 69, "00570": 69, "01150": 69, "00290": 69, "0173": 69, "5000": 69, "00090": 69, "00160": 69, "01100": 69, "00580": 69, "0166": 69, "00210": 69, "01450": 69, "00560": 69, "01180": 69, "0168": 69, "20000": 69, "00690": 69, "00430": 69, "02780": 69, "00590": 69, "00300": 69, "0165": 69, "50000": [69, 82], "07070": 69, "03140": 69, "13950": 69, "00740": 69, "01250": 69, "00350": 69, "0198": 69, "nbsp": 69, "bitsize64": 69, "00200": 69, "01540": 69, "00930": 69, "01910": 69, "0328": 69, "00940": 69, "01140": 69, "0169": 69, "00170": 69, "01200": 69, "01160": 69, "00340": 69, "00270": 69, "01770": 69, "0167": 69, "01460": 69, "00750": 69, "04360": 69, "14670": 69, "05680": 69, "24680": 69, "00770": 69, "00450": 69, "0204": 69, "proper": [69, 91], "typeerror": 69, "get_backend_list": 69, "to_numpi": 69, "abstract": 69, "jaxbackend": 69, "numpybackend": 69, "torchbackend": [69, 91], "cupybackend": 69, "tensorflowbackend": 69, "__name__": 69, "__type__": 69, "rtol": 69, "equal_nan": 69, "evalu": [69, 70, 71], "evenli": 69, "argsort": 69, "array_equ": 69, "assert_same_dtype_devic": 69, "arctang": 69, "arctan2": 69, "bitsiz": 69, "a_min": 69, "a_max": 69, "sequenc": 69, "exist": [69, 70, 90, 91], "col": 69, "cumsum": 69, "device_typ": 69, "dtype_devic": 69, "einsum": 69, "subscript": 69, "operand": 69, "einstein": 69, "summat": 69, "eliminate_zero": 69, "smaller": [69, 91], "csr_matrix": 69, "exponenti": [69, 70], "flip": 69, "from_numpi": 69, "fill_valu": 69, "inv": 69, "is_floating_point": 69, "isfinit": 69, "infin": 69, "Not": 69, "isinf": 69, "isnan": 69, "nan": 69, "isspars": 69, "kl_div": 69, "stat": 69, "specifi": [69, 72, 84, 87, 91], "logsumexp": [69, 74, 90], "matmul": 69, "amax": 69, "arithmet": 69, "median": [69, 87, 91], "amin": 69, "frobeniu": 69, "outer": 69, "expon": 69, "prod": 69, "qr": 69, "repeat": 69, "searchsort": 69, "side": [69, 82], "insert": 69, "set_gradi": [69, 91], "val": 69, "equat": [69, 70, 77, 85, 90], "scalar": [69, 70, 71], "sort2": 69, "ngeativ": 69, "root": [69, 89, 90], "definit": [69, 90], "squeez": 69, "deviat": [69, 73, 77], "take_along_axi": 69, "arr": 69, "gather": 69, "tile": 69, "rep": 69, "tocsr": 69, "compress": 69, "todens": 69, "trace": 69, "dim0": 69, "dim1": 69, "swap": 69, "chosen": [69, 87, 90], "zero_pad": 69, "pad_width": 69, "pad": 69, "cp": 69, "s_": 70, "empirical_sinkhorn_diverg": [70, 90, 91], "barycenter_sinkhorn": 70, "barycenter_stabil": [70, 91], "tau": [70, 74, 86], "10000000000": 70, "mast": 70, "strength": 70, "height": 70, "stabthr": 70, "goe": [70, 89, 90], "butscher": [70, 89, 90], "nguyen": [70, 89, 90], "guiba": [70, 89, 90], "effici": [70, 78, 89, 90, 91], "geometr": [70, 89, 90], "islazi": 70, "batchsiz": 70, "99977301e": 70, "26989344e": 70, "empirical_sinkhorn2": [70, 90], "53978687e": 70, "w_a": 70, "gamma_a": 70, "m_a": 70, "w_b": 70, "gamma_b": 70, "m_b": 70, "_a": [70, 82], "_b": 70, "499887176049052": 70, "frechet": [70, 78], "w_i": [70, 78], "measure_weight": [70, 78], "k_i": [70, 78], "There": [70, 78, 90], "arnaud": [70, 78], "doucet": [70, 78, 89, 90], "\u00e1lvarez": [70, 78, 89], "esteban": [70, 78, 89], "pedro": [70, 78, 89], "744": [70, 78, 89], "762": [70, 78, 89], "geometricbar": 70, "alldistribt": 70, "geometricmean": 70, "jcpot_barycent": 70, "lambda_k": 70, "gamma_k": 70, "th": [70, 71, 82, 84], "relat": [70, 77, 89, 90, 91], "n_k": 70, "unknown": 70, "nsk": 70, "control": [70, 72, 77], "devi": [70, 72], "projc": 70, "constrint": 70, "projr": 70, "maxfun": 70, "pgtol": 70, "written": [70, 78], "u_i": 70, "ldot": 70, "v_j": 70, "regularis": 70, "bfg": [70, 84, 86, 90], "lbfg": 70, "final": [70, 78, 90, 91], "accuraci": 70, "gain": [70, 91], "isn": 70, "epsilon0": 70, "print_period": 70, "decreas": [70, 72], "tabl": 70, "m0": 70, "h0": 70, "reg0": 70, "dh": 70, "m_0": 70, "_0": [70, 87], "n_atom": 70, "dim_prior": 70, "trust": [70, 74], "nakhostin": [70, 89], "corpetti": [70, 89], "planetari": [70, 89], "workshop": [70, 72, 89, 90], "hyperspectr": [70, 89], "signal": [70, 89, 90], "remot": [70, 89], "whisper": [70, 89], "wx_samp": 71, "wx_feat": 71, "wy_feat": 71, "m_samp": 71, "m_feat": 71, "nits_bcd": 71, "tol_bcd": 71, "eval_bcd": 71, "nits_ot": 71, "tol_sinkhorn": 71, "method_sinkhorn": 71, "early_stopping_tol": 71, "xf": 71, "yf": 71, "alpha_": 71, "alpha_f": 71, "varepsilon_": 71, "varepsilon_f": 71, "n_sample_x": 71, "n_feature_x": 71, "n_sample_i": 71, "n_feature_i": 71, "kei": [71, 77], "duals_sampl": 71, "duals_featur": 71, "whose": [71, 77, 78, 82], "bcd": [71, 72, 74, 77], "scheme": 71, "previou": [71, 82], "multipli": [71, 87], "earli": [71, 91], "pi_samp": 71, "pi_feat": 71, "pair": [71, 87], "ny_sampstem": 71, "alpha_1": 71, "alpha_2": 71, "varepsilon_1": 71, "varepsilon_2": 71, "distribution_estimation_uniform": 72, "emd_laplac": 72, "knn": 72, "sim_param": 72, "n_": 72, "s_i": 72, "s_j": 72, "n_t": 72, "t_i": 72, "t_j": 72, "neighbor": 72, "bandwidth": 72, "otml": [72, 89, 90], "joint_ot_mapping_kernel": [72, 90], "kerneltyp": 72, "verbose2": 72, "nonlinear": [72, 90], "2_f": 72, "2_": 72, "jointli": 72, "constant": [72, 77, 78], "supplementari": 72, "materi": 72, "joint_ot_mapping_linear": [72, 90], "neutral": 72, "sinkhorn_l1l2_gl": [72, 90], "keyword": [72, 87], "store": 72, "transform_label": 72, "inverse_transform_label": 72, "y_t": 72, "unlabel": [72, 80, 89, 90], "transp_x": 72, "transp_xt": 72, "propag": 72, "transp_i": 72, "soft": 72, "nb_class": 72, "similarity_param": 72, "max_inner_it": 72, "inner_tol": 72, "distribution_estim": 72, "out_of_sample_map": 72, "disp": 72, "occur": [72, 90], "kind": [72, 78, 90], "emploi": 72, "limit_max": 72, "10e": 72, "n_class": 72, "849": 72, "858": 72, "nk_source_sampl": 72, "sigma_": [72, 76], "sigma_t": [72, 76], "remark": [72, 76, 90], "daigon": 72, "covari": [72, 73, 76, 90], "knott": [72, 76, 89, 90], "smith": [72, 76, 89, 90], "theori": [72, 76, 89, 90], "1984": [72, 76, 89, 90], "mapping_": 72, "lpl1": 72, "infti": 72, "unbalancedsinkhorntransport": 72, "classif": 73, "reduct": [74, 89, 91], "u0": 74, "sinkhorn_method": 74, "maxiter_sink": 74, "maxiter_mm": 74, "stiefel": [74, 90], "eather": 74, "mm": 74, "major": [74, 90, 91], "fisher": [74, 80, 90], "ridg": 74, "proj": [74, 83], "projection_robust_wasserstein": 74, "max_": [74, 82, 84, 85], "stepsiz": 74, "riemannian": [74, 89, 90], "ma": [74, 89, 90], "lai": [74, 89, 90], "split_class": 74, "split": 74, "limits_i": 74, "limits_": 74, "neq": [74, 90], "steepest": 74, "trustregion": 74, "region": 74, "wasserstaiun": 74, "1608": [74, 89, 90], "08063": [74, 89, 90], "bures_wasserstein_dist": 76, "ct": 76, "bure": [76, 91], "lvert": 76, "_t": 76, "rvert": 76, "tr": 76, "bures_wasserstein_map": [76, 90], "empirical_bures_wasserstein_dist": 76, "gw_distance_estim": 77, "nb_samples_p": 77, "nb_samples_q": 77, "unbias": 77, "csr": 77, "replac": [77, 90, 91], "sebban": 77, "mlj": 77, "entropic_fused_gromov_barycent": 77, "init_i": 77, "y_1": 77, "y_2": 77, "necessarili": 77, "asymetr": 77, "recommand": 77, "correcli": 77, "Such": 77, "suggest": 77, "entropic_fused_gromov_wasserstein2": 77, "entropic_gromov_barycent": [77, 90], "entropic_gromov_wasserstein2": 77, "howev": [77, 90], "yet": [77, 90, 91], "entropic_semirelaxed_fused_gromov_wasserstein2": 77, "mirror": 77, "geometri": 77, "entropic_semirelaxed_gromov_wasserstein2": 77, "fixed_structur": 77, "fixed_featur": 77, "init_x": 77, "eq": [77, 84], "cdict_init": 77, "ydict_init": 77, "fgw_": 77, "_d": 77, "distibut": 77, "cdict": 77, "ydict": 77, "randomli": 77, "nonneg": 77, "strategi": 77, "consecut": 77, "cdict_best_st": 77, "compos": 77, "ydict_best_st": 77, "w_d": 77, "emb": 77, "depict": 77, "span": [77, 78], "current_loss": 77, "gw_2": 77, "gwggrad": 77, "constc": 77, "hc1": 77, "hc2": 77, "proposit": [77, 84, 85], "h1": 77, "gwloss": 77, "init_matrix": 77, "otim": 77, "read": [77, 89], "f_1": 77, "h_1": 77, "2b": 77, "init_matrix_semirelax": 77, "anymor": 77, "fc2t": 77, "threshold_plan": 77, "frank": 77, "wolf": 77, "_iter": 77, "pn": 77, "delet": [77, 82], "violat": [77, 78, 90], "nb_samples_grad": 77, "semirelaxed_fused_gromov_wasserstein2": 77, "semirelaxed_gromov_wasserstein2": 77, "solve_gromov_linesearch": [77, 79], "deltag": 77, "cost_g": 77, "alpha_min": [77, 79], "alpha_max": [77, 79], "fw": 77, "fc": [77, 79], "useless": [77, 91], "solve_semirelaxed_gromov_linesearch": [77, 79], "ones_p": 77, "tensor_product": 77, "ten": 77, "update_feature_matrix": 77, "update_kl_loss": 77, "update_square_loss": 77, "alpha0": [78, 79], "beta0": 78, "below": [78, 89, 91], "basic": 78, "alpha_0": 78, "beta_0": 78, "check_number_thread": 78, "request": [78, 83, 89], "valid": 78, "estimate_dual_null_weight": 78, "rather": 78, "coars": 78, "emd_c": 78, "amount": [78, 80, 90, 91], "max_j": 78, "max_i": 78, "beta_j": [78, 84], "y_init": 78, "nu_i": 78, "b_l": 78, "y_l": 78, "a_": 78, "d_i": 78, "p_i": 78, "p_ix_": 78, "rightarrow": 78, "don": 78, "ill": 78, "anywai": 78, "cvxopt": [78, 90, 91], "glpk": 78, "mosek": 78, "agueh": [78, 89, 90], "904": [78, 89, 90], "line_search": 79, "line_search_armijo": [79, 91], "reg_1": 79, "reg_2": 79, "generic_conditional_gradi": 79, "lp_solver": 79, "lp_semi_relaxed_ot": 79, "gcg_linesearch": 79, "xk": 79, "pk": 79, "gfk": 79, "old_fval": 79, "x_k": 79, "p_k": 79, "fa": 79, "const": 79, "semirelaxed_cg": 79, "solve_1d_linesearch_quad": 79, "bx": 79, "entropic_partial_gromov_wasserstein2": 80, "gwgrad_parti": 80, "n_p": 80, "n_u": 80, "nb_dummi": 80, "gwloss_parti": 80, "thre": 80, "costfr": 80, "dummi": [80, 91], "instabl": 80, "popul": 80, "partial_gromov_wasserstein2": 80, "especi": [80, 90], "smoother": 80, "repartit": 80, "reservoir": [80, 90], "caffarelli": [80, 89, 90], "mccann": [80, 89, 90], "boundari": [80, 89, 90], "amper": [80, 89, 90], "obstacl": [80, 89, 90], "annal": [80, 89, 90], "673": [80, 89, 90], "partial_wasserstein_lagrang": 80, "partial_wasserstein2": [80, 90], "rao": 80, "tune": 80, "shown": [81, 90], "na": 81, "thr": 81, "noth": 81, "complement_schur": 82, "m_current": 82, "id_pop": 82, "schur": 82, "complement": 82, "aris": 82, "bmatrix": 82, "m_k": 82, "h_a": 82, "th_a": 82, "backslash": 82, "r_": 82, "depriv": 82, "compute_next_remov": 82, "current_gamma": 82, "largest": 82, "vanish": [82, 90], "phi_j": 82, "delta_j": 82, "intercept": 82, "slope": 82, "next_removal_gamma": 82, "next_removal_index": 82, "gamma_list": 82, "pi_list": 82, "piecewis": 82, "flatten": 82, "19722222": 82, "05555556": 82, "24722222": 82, "construct_augmented_h": 82, "active_index": 82, "hc": 82, "hrhr": 82, "augment": 82, "_h": 82, "h_": 82, "h_r": 82, "h_c": 82, "h_augment": 82, "fully_relaxed_path": 82, "itmax": 82, "reformul": 82, "min_t": 82, "99958333e": 82, "00000000e": 82, "88888889e": 82, "99938889e": 82, "ot_next_gamma": 82, "hth": 82, "hty": 82, "inact": 82, "next_gamma": 82, "next_active_index": 82, "recast_ot_as_lasso": 82, "recast": 82, "1_m": 82, "1_n": 82, "particularli": [82, 90], "uot2": 82, "recast_semi_relaxed_as_lasso": 82, "hr": 82, "auxiliari": 82, "constitut": 82, "semi_relaxed_next_gamma": 82, "phi_u": 82, "delta_u": 82, "hra": 82, "ri": 82, "ra": 82, "ith": 82, "lagrang": [82, 87], "semi_relaxed_path": 82, "99980556e": 82, "94444444e": 82, "get_random_project": 83, "unit": [83, 90], "ue": 83, "proc": 84, "1710": 84, "06276": 84, "mblondel": 84, "liu": [84, 89], "puigcerv": [84, 89], "eleventh": [84, 89], "2209": 84, "15466": 84, "dual_obj_grad": 84, "regul": 84, "delta_omega": 84, "grad_alpha": 84, "grad_beta": 84, "get_plan_from_du": 84, "retriev": 84, "get_plan_from_semi_du": 84, "projection_simplex": 84, "substack": [84, 87], "z_i": [84, 87], "z_j": [84, 87], "semi_dual_obj_grad": 84, "max_omega": 84, "decent": 84, "nbb": 84, "nonzero": 84, "sinhorn": 84, "smooth_ot_semi_du": [84, 90], "solve_du": 84, "solve_semi_du": 84, "negentropi": 84, "sup_": 84, "nabla": 84, "intend": 84, "appar": 84, "sparsityconstrain": 84, "squaredl2": 84, "averaged_sgd_entropic_transport": 85, "300000": 85, "contin": 85, "alg": 85, "ave_v": 85, "_refer": 85, "batch_grad_du": 85, "batch_alpha": 85, "batch_beta": 85, "partial_": 85, "b_": 85, "l_v": 85, "b_v": 85, "l_u": 85, "b_u": 85, "c_transform_entrop": 85, "coordinate_grad_semi_du": 85, "bewar": 85, "dual_loss": 85, "sag_entropic_transport": 85, "sgd_entropic_regular": 85, "barycenter_unbalanced_sinkhorn": 86, "barycenter_unbalanced_stabil": [86, 90], "absorpt": 86, "lbfgsb_unbalanc": 86, "reg_div": 86, "regm_div": 86, "div_m": 86, "quantifi": 86, "mm_unbalanced2": 86, "b_i": 86, "check_param": 87, "miss": 87, "check_random_st": 87, "turn": 87, "singleton": 87, "alreadi": [87, 90, 91], "valueerror": 87, "clean_zero": [87, 91], "cost_norm": [87, 91], "loglog": 87, "lin_squar": 87, "euclidean_dist": 87, "n_samples_1": 87, "n_samples_2": 87, "ambient": 87, "y1": 87, "label_norm": 87, "smallest": 87, "lst": 87, "parmap": 87, "nproc": 87, "multiprocess": 87, "closest": 87, "orthogon": 87, "projection_sparse_simplex": [87, 91], "anastasio": 87, "kyrillidi": 87, "stephen": 87, "becker": 87, "volkan": 87, "cevher": 87, "christoph": 87, "koch": 87, "1206": 87, "1529": 87, "get_param": 87, "deep": 87, "subobject": 87, "param": 87, "set_param": 87, "nest": 87, "pipelin": 87, "latter": 87, "__": 87, "sparse_plan": 87, "lazy_plan": 87, "a_to_b": 87, "b_to_a": 87, "citat": 87, "plain": 87, "bibtex": [87, 89], "symbol": 87, "keop": 87, "lazytensor": 87, "marginal_a": 87, "marginal_b": 87, "potential_a": 87, "potential_b": 87, "extra": 87, "decor": 87, "mark": 87, "blob": 87, "instanti": [87, 91], "parenthes": 87, "some_funct": 87, "undefinedparamet": 87, "undefin": 87, "ransport": 88, "sever": [89, 90, 91], "websit": 89, "jmlr": [89, 91], "aur\u00e9li": 89, "nemo": 89, "fournier": 89, "antoni": 89, "schutz": 89, "danica": 89, "sutherland": 89, "alexand": 89, "tong": 89, "articl": 89, "flamary2021pot": 89, "mi": 89, "aur": 89, "lie": [89, 90], "year": [89, 90, 91], "volum": 89, "url": 89, "v22": 89, "451": 89, "linux": [89, 91], "macosx": [89, 91], "window": [89, 91], "cython": [89, 90, 91], "latest": 89, "archiv": 89, "abl": 89, "easier": [89, 90], "wd": 89, "wd_reg": 89, "t_reg": [89, 90], "ba": 89, "question": 89, "slack": 89, "channel": 89, "gitter": 89, "bug": [89, 91], "2292": [89, 90], "2300": [89, 90], "36th": [89, 90], "38th": [89, 90], "pointer": [90, 91], "concret": 90, "book": 90, "ml": 90, "gaspard": 90, "1781": 90, "move": [90, 91], "overal": 90, "difficult": 90, "kantorovitch": 90, "share": 90, "disjoint": 90, "favor": 90, "popular": 90, "jensen": 90, "shannon": 90, "meaning": 90, "becam": 90, "overcom": 90, "spectra": 90, "itself": 90, "criterion": [90, 91], "context": 90, "recent": [90, 91], "rapidli": 90, "grow": 90, "novel": [90, 91], "abil": 90, "extend": 90, "proven": 90, "nearli": 90, "still": [90, 91], "geomloss": 90, "lipschitz": 90, "exactli": 90, "filter": 90, "quit": [90, 91], "known": 90, "affin": 90, "hi": 90, "semin": 90, "strong": 90, "procedur": 90, "slower": 90, "variant": [90, 91], "tu": 90, "kullbach": 90, "similarli": 90, "pure": 90, "speed": [90, 91], "effect": 90, "densifi": 90, "lost": 90, "soon": 90, "_q": 90, "forc": 90, "choic": [90, 91], "long": [90, 91], "w_kw": 90, "mu_k": 90, "b_k": 90, "linprog": 90, "brought": 90, "brenier": 90, "eponym": 90, "theorem": 90, "interfac": 90, "basetransport": [90, 91], "classifi": [90, 91], "xs_map": 90, "inherit": [90, 91], "w_u": 90, "interestingli": 90, "fr\u00e9chet": 90, "w_kw_u": 90, "barycenter_unbalanced_sinkhorn_unbalanc": 90, "surplu": 90, "resolut": 90, "c1_": 90, "c2_": 90, "realign": 90, "ck": 90, "fusion": 90, "coin": 90, "partli": 90, "linearli": 90, "projector": 90, "min_p": 90, "mu_j": 90, "hard": [90, 91], "seamlessli": [90, 91], "en": 90, "incur": 90, "far": 90, "longer": 90, "hopefulli": [90, 91], "disappear": 90, "becom": 90, "fulli": [90, 91], "importerror": 90, "shortli": 90, "readm": [90, 91], "tri": [90, 91], "quicker": [90, 91], "configur": 90, "nterpol": 90, "cc": 90, "9386": 90, "www": 90, "toronto": 90, "annals2010": 90, "2002": 90, "08276": 90, "483": 91, "463": 91, "459": 91, "473": 91, "472": 91, "maco": 91, "484": 91, "_gw": 91, "_bregman": 91, "_semirelax": 91, "ecwa": 91, "486": 91, "redirector": 91, "codecov": 91, "457": 91, "cleanup": 91, "462": 91, "467": 91, "475": 91, "wasserstein2": 91, "466": 91, "468": 91, "rp": 91, "474": 91, "decid": 91, "bring": 91, "431": 91, "happi": 91, "began": 91, "unifi": 91, "behind": 91, "facilit": 91, "explor": 91, "just": 91, "old": 91, "sol": 91, "ot_loss": 91, "ot_loss_linear": 91, "sol2": 91, "sol_rkl": 91, "sol_rl2": 91, "sol_ul2": 91, "sol_rkl_ukl": 91, "kickstart": 91, "encourag": 91, "plai": 91, "made": 91, "big": 91, "434": 91, "428": 91, "372": 91, "376": 91, "387": 91, "388": 91, "449": 91, "437": 91, "443": 91, "447": 91, "448": 91, "395": 91, "393": 91, "394": 91, "371": 91, "373": 91, "374": 91, "hit": 91, "stderr": 91, "cerr": 91, "stream": 91, "378": 91, "379": 91, "beyond": 91, "certain": 91, "slightli": 91, "46k": 91, "roughli": 91, "381": 91, "mismatch": 91, "386": 91, "389": 91, "391": 91, "around": 91, "built": 91, "403": 91, "setuptool": 91, "408": 91, "409": 91, "404": 91, "412": 91, "413": 91, "render": 91, "subcal": 91, "421": 91, "422": 91, "break": 91, "try": 91, "424": 91, "425": 91, "444": 91, "445": 91, "446": 91, "notabl": 91, "less": 91, "background": 91, "autodiff": 91, "front": 91, "submodul": 91, "359": 91, "358": 91, "brand": 91, "357": 91, "minigalleri": 91, "334": 91, "336": 91, "341": 91, "319": 91, "362": 91, "364": 91, "363": 91, "valfunct": 91, "337": 91, "338": 91, "abi": 91, "346": 91, "349": 91, "feed": 91, "345": 91, "backpropag": 91, "351": 91, "tag": 91, "332": 91, "global": 91, "namespac": 91, "331": 91, "333": 91, "enabl": 91, "wheel": 91, "older": 91, "realli": 91, "315": 91, "code_of_conduct": 91, "322": 91, "308": 91, "326": 91, "305": 91, "306": 91, "309": 91, "sinkhornl1l2": 91, "311": 91, "313": 91, "317": 91, "3018": 91, "novemb": 91, "nice": 91, "mechan": 91, "moment": 91, "ott": 91, "simplifi": 91, "pyproject": 91, "toml": 91, "aarch64": 91, "raspberri": 91, "android": 91, "phone": 91, "arm": 91, "processor": 91, "softwar": 91, "cite": 91, "improv": 91, "particular": 91, "usual": 91, "peopl": 91, "kamel": 91, "guerda": 91, "ai": 91, "idri": 91, "249": 91, "282": 91, "294": 91, "302": 91, "304": 91, "303": 91, "274": 91, "267": 91, "275": 91, "293": 91, "lazi": 91, "259": 91, "smartphon": 91, "238": 91, "236": 91, "253": 91, "202": 91, "203": 91, "262": 91, "introductori": 91, "leak": 91, "254": 91, "284": 91, "288": 91, "278": 91, "258": 91, "234": 91, "241": 91, "242": 91, "215": 91, "281": 91, "286": 91, "infeas": 91, "217": 91, "207": 91, "208": 91, "296": 91, "flake8": 91, "setup": 91, "flag": 91, "organ": 91, "own": 91, "host": 91, "offer": 91, "readthedoc": 91, "beauti": 91, "huge": 91, "correctli": 91, "travi": 91, "simpler": 91, "laplac": 91, "acknowledg": 91, "231": 91, "232": 91, "bad": 91, "jump": 91, "wild": 91, "state": 91, "fundament": 91, "month": 91, "until": 91, "python3stat": 91, "relev": 91, "64bit": 91, "past": 91, "manylinux": 91, "sep": 91, "among": 91, "rewrit": 91, "unmaintain": 91, "cudamat": 91, "were": 91, "stai": 91, "qualiti": 91, "stuff": 91, "markdown": 91, "pipi": 91, "renam": 91, "compliant": 91, "un": 91, "plug": 91, "unus": 91, "unicodedecodeerror": 91, "ascii": 91, "pytest": 91, "pep": 91, "du": 91, "jul": 91, "reloc": 91, "apr": 91, "jan": 91, "tweak": 91, "nov": 91, "oct": 91}, "objects": {"": [[0, 0, 0, "-", "ot"]], "ot": [[69, 0, 0, "-", "backend"], [0, 3, 1, "", "barycenter"], [0, 3, 1, "", "barycenter_unbalanced"], [0, 3, 1, "", "binary_search_circle"], [70, 0, 0, "-", "bregman"], [71, 0, 0, "-", "coot"], [72, 0, 0, "-", "da"], [73, 0, 0, "-", "datasets"], [0, 3, 1, "", "dist"], [74, 0, 0, "-", "dr"], [0, 3, 1, "", "emd"], [0, 3, 1, "", "emd2"], [0, 3, 1, "", "emd2_1d"], [0, 3, 1, "", "emd_1d"], [75, 0, 0, "-", "factored"], [0, 3, 1, "", "factored_optimal_transport"], [0, 3, 1, "", "fused_gromov_wasserstein"], [0, 3, 1, "", "fused_gromov_wasserstein2"], [76, 0, 0, "-", "gaussian"], [77, 0, 0, "-", "gromov"], [0, 3, 1, "", "gromov_barycenters"], [0, 3, 1, "", "gromov_wasserstein"], [0, 3, 1, "", "gromov_wasserstein2"], [78, 0, 0, "-", "lp"], [0, 3, 1, "", "max_sliced_wasserstein_distance"], [79, 0, 0, "-", "optim"], [80, 0, 0, "-", "partial"], [81, 0, 0, "-", "plot"], [82, 0, 0, "-", "regpath"], [0, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [0, 3, 1, "", "sinkhorn"], [0, 3, 1, "", "sinkhorn2"], [0, 3, 1, "", "sinkhorn_lpl1_mm"], [0, 3, 1, "", "sinkhorn_unbalanced"], [0, 3, 1, "", "sinkhorn_unbalanced2"], [83, 0, 0, "-", "sliced"], [0, 3, 1, "", "sliced_wasserstein_distance"], [0, 3, 1, "", "sliced_wasserstein_sphere"], [0, 3, 1, "", "sliced_wasserstein_sphere_unif"], [84, 0, 0, "-", "smooth"], [0, 3, 1, "", "solve"], [85, 0, 0, "-", "stochastic"], [0, 3, 1, "", "tic"], [0, 3, 1, "", "toc"], [0, 3, 1, "", "toq"], [86, 0, 0, "-", "unbalanced"], [0, 3, 1, "", "unif"], [87, 0, 0, "-", "utils"], [0, 3, 1, "", "wasserstein_1d"], [0, 3, 1, "", "wasserstein_circle"], [88, 0, 0, "-", "weak"], [0, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[69, 1, 1, "id0", "Backend"], [69, 1, 1, "id81", "CupyBackend"], [69, 1, 1, "id160", "JaxBackend"], [69, 1, 1, "id239", "NumpyBackend"], [69, 1, 1, "id318", "TensorflowBackend"], [69, 1, 1, "id397", "TorchBackend"], [69, 3, 1, "id476", "get_backend"], [69, 3, 1, "id477", "get_backend_list"], [69, 3, 1, "id478", "to_numpy"]], "ot.backend.Backend": [[69, 2, 1, "id1", "abs"], [69, 2, 1, "id2", "allclose"], [69, 2, 1, "id3", "any"], [69, 2, 1, "id4", "arange"], [69, 2, 1, "id5", "argmax"], [69, 2, 1, "id6", "argmin"], [69, 2, 1, "id7", "argsort"], [69, 2, 1, "id8", "array_equal"], [69, 2, 1, "id9", "assert_same_dtype_device"], [69, 2, 1, "id10", "atan2"], [69, 2, 1, "id11", "bitsize"], [69, 2, 1, "id12", "clip"], [69, 2, 1, "id13", "concatenate"], [69, 2, 1, "id14", "coo_matrix"], [69, 2, 1, "id15", "copy"], [69, 2, 1, "id16", "cumsum"], [69, 2, 1, "id17", "detach"], [69, 2, 1, "id18", "device_type"], [69, 2, 1, "id19", "diag"], [69, 2, 1, "id20", "dot"], [69, 2, 1, "id21", "dtype_device"], [69, 2, 1, "id22", "einsum"], [69, 2, 1, "id23", "eliminate_zeros"], [69, 2, 1, "id24", "exp"], [69, 2, 1, "id25", "eye"], [69, 2, 1, "id26", "flip"], [69, 2, 1, "id27", "floor"], [69, 2, 1, "id28", "from_numpy"], [69, 2, 1, "id29", "full"], [69, 2, 1, "id30", "inv"], [69, 2, 1, "id31", "is_floating_point"], [69, 2, 1, "id32", "isfinite"], [69, 2, 1, "id33", "isinf"], [69, 2, 1, "id34", "isnan"], [69, 2, 1, "id35", "issparse"], [69, 2, 1, "id36", "kl_div"], [69, 2, 1, "id37", "linspace"], [69, 2, 1, "id38", "log"], [69, 2, 1, "id39", "logsumexp"], [69, 2, 1, "id40", "matmul"], [69, 2, 1, "id41", "max"], [69, 2, 1, "id42", "maximum"], [69, 2, 1, "id43", "mean"], [69, 2, 1, "id44", "median"], [69, 2, 1, "id45", "meshgrid"], [69, 2, 1, "id46", "min"], [69, 2, 1, "id47", "minimum"], [69, 2, 1, "id48", "norm"], [69, 2, 1, "id49", "ones"], [69, 2, 1, "id50", "outer"], [69, 2, 1, "id51", "power"], [69, 2, 1, "id52", "prod"], [69, 2, 1, "id53", "qr"], [69, 2, 1, "id54", "rand"], [69, 2, 1, "id55", "randn"], [69, 2, 1, "id56", "repeat"], [69, 2, 1, "id57", "reshape"], [69, 2, 1, "id58", "searchsorted"], [69, 2, 1, "id59", "seed"], [69, 2, 1, "id60", "set_gradients"], [69, 2, 1, "id61", "solve"], [69, 2, 1, "id62", "sort"], [69, 2, 1, "id63", "sort2"], [69, 2, 1, "id64", "sqrt"], [69, 2, 1, "id65", "sqrtm"], [69, 2, 1, "id66", "squeeze"], [69, 2, 1, "id67", "stack"], [69, 2, 1, "id68", "std"], [69, 2, 1, "id69", "sum"], [69, 2, 1, "id70", "take_along_axis"], [69, 2, 1, "id71", "tile"], [69, 2, 1, "id72", "to_numpy"], [69, 2, 1, "id73", "tocsr"], [69, 2, 1, "id74", "todense"], [69, 2, 1, "id75", "trace"], [69, 2, 1, "id76", "transpose"], [69, 2, 1, "id77", "unique"], [69, 2, 1, "id78", "where"], [69, 2, 1, "id79", "zero_pad"], [69, 2, 1, "id80", "zeros"]], "ot.backend.CupyBackend": [[69, 2, 1, "id82", "abs"], [69, 2, 1, "id83", "allclose"], [69, 2, 1, "id84", "any"], [69, 2, 1, "id85", "arange"], [69, 2, 1, "id86", "argmax"], [69, 2, 1, "id87", "argmin"], [69, 2, 1, "id88", "argsort"], [69, 2, 1, "id89", "array_equal"], [69, 2, 1, "id90", "assert_same_dtype_device"], [69, 2, 1, "id91", "atan2"], [69, 2, 1, "id92", "bitsize"], [69, 2, 1, "id93", "clip"], [69, 2, 1, "id94", "concatenate"], [69, 2, 1, "id95", "coo_matrix"], [69, 2, 1, "id96", "copy"], [69, 2, 1, "id97", "cumsum"], [69, 2, 1, "id98", "detach"], [69, 2, 1, "id99", "device_type"], [69, 2, 1, "id100", "diag"], [69, 2, 1, "id101", "dot"], [69, 2, 1, "id102", "dtype_device"], [69, 2, 1, "id103", "einsum"], [69, 2, 1, "id104", "eliminate_zeros"], [69, 2, 1, "id105", "exp"], [69, 2, 1, "id106", "eye"], [69, 2, 1, "id107", "flip"], [69, 2, 1, "id108", "floor"], [69, 2, 1, "id109", "full"], [69, 2, 1, "id110", "inv"], [69, 2, 1, "id111", "is_floating_point"], [69, 2, 1, "id112", "isfinite"], [69, 2, 1, "id113", "isinf"], [69, 2, 1, "id114", "isnan"], [69, 2, 1, "id115", "issparse"], [69, 2, 1, "id116", "kl_div"], [69, 2, 1, "id117", "linspace"], [69, 2, 1, "id118", "log"], [69, 2, 1, "id119", "logsumexp"], [69, 2, 1, "id120", "matmul"], [69, 2, 1, "id121", "max"], [69, 2, 1, "id122", "maximum"], [69, 2, 1, "id123", "mean"], [69, 2, 1, "id124", "median"], [69, 2, 1, "id125", "meshgrid"], [69, 2, 1, "id126", "min"], [69, 2, 1, "id127", "minimum"], [69, 2, 1, "id128", "norm"], [69, 2, 1, "id129", "ones"], [69, 2, 1, "id130", "outer"], [69, 2, 1, "id131", "power"], [69, 2, 1, "id132", "prod"], [69, 2, 1, "id133", "qr"], [69, 2, 1, "id134", "rand"], [69, 2, 1, "id135", "randn"], [69, 2, 1, "id136", "repeat"], [69, 2, 1, "id137", "reshape"], [69, 2, 1, "id138", "searchsorted"], [69, 2, 1, "id139", "seed"], [69, 2, 1, "id140", "set_gradients"], [69, 2, 1, "id141", "solve"], [69, 2, 1, "id142", "sort"], [69, 2, 1, "id143", "sort2"], [69, 2, 1, "id144", "sqrt"], [69, 2, 1, "id145", "sqrtm"], [69, 2, 1, "id146", "squeeze"], [69, 2, 1, "id147", "stack"], [69, 2, 1, "id148", "std"], [69, 2, 1, "id149", "sum"], [69, 2, 1, "id150", "take_along_axis"], [69, 2, 1, "id151", "tile"], [69, 2, 1, "id152", "tocsr"], [69, 2, 1, "id153", "todense"], [69, 2, 1, "id154", "trace"], [69, 2, 1, "id155", "transpose"], [69, 2, 1, "id156", "unique"], [69, 2, 1, "id157", "where"], [69, 2, 1, "id158", "zero_pad"], [69, 2, 1, "id159", "zeros"]], "ot.backend.JaxBackend": [[69, 2, 1, "id161", "abs"], [69, 2, 1, "id162", "allclose"], [69, 2, 1, "id163", "any"], [69, 2, 1, "id164", "arange"], [69, 2, 1, "id165", "argmax"], [69, 2, 1, "id166", "argmin"], [69, 2, 1, "id167", "argsort"], [69, 2, 1, "id168", "array_equal"], [69, 2, 1, "id169", "assert_same_dtype_device"], [69, 2, 1, "id170", "atan2"], [69, 2, 1, "id171", "bitsize"], [69, 2, 1, "id172", "clip"], [69, 2, 1, "id173", "concatenate"], [69, 2, 1, "id174", "coo_matrix"], [69, 2, 1, "id175", "copy"], [69, 2, 1, "id176", "cumsum"], [69, 2, 1, "id177", "detach"], [69, 2, 1, "id178", "device_type"], [69, 2, 1, "id179", "diag"], [69, 2, 1, "id180", "dot"], [69, 2, 1, "id181", "dtype_device"], [69, 2, 1, "id182", "einsum"], [69, 2, 1, "id183", "eliminate_zeros"], [69, 2, 1, "id184", "exp"], [69, 2, 1, "id185", "eye"], [69, 2, 1, "id186", "flip"], [69, 2, 1, "id187", "floor"], [69, 2, 1, "id188", "full"], [69, 2, 1, "id189", "inv"], [69, 2, 1, "id190", "is_floating_point"], [69, 2, 1, "id191", "isfinite"], [69, 2, 1, "id192", "isinf"], [69, 2, 1, "id193", "isnan"], [69, 2, 1, "id194", "issparse"], [69, 2, 1, "id195", "kl_div"], [69, 2, 1, "id196", "linspace"], [69, 2, 1, "id197", "log"], [69, 2, 1, "id198", "logsumexp"], [69, 2, 1, "id199", "matmul"], [69, 2, 1, "id200", "max"], [69, 2, 1, "id201", "maximum"], [69, 2, 1, "id202", "mean"], [69, 2, 1, "id203", "median"], [69, 2, 1, "id204", "meshgrid"], [69, 2, 1, "id205", "min"], [69, 2, 1, "id206", "minimum"], [69, 2, 1, "id207", "norm"], [69, 2, 1, "id208", "ones"], [69, 2, 1, "id209", "outer"], [69, 2, 1, "id210", "power"], [69, 2, 1, "id211", "prod"], [69, 2, 1, "id212", "qr"], [69, 2, 1, "id213", "rand"], [69, 2, 1, "id214", "randn"], [69, 2, 1, "id215", "repeat"], [69, 2, 1, "id216", "reshape"], [69, 2, 1, "id217", "searchsorted"], [69, 2, 1, "id218", "seed"], [69, 2, 1, "id219", "set_gradients"], [69, 2, 1, "id220", "solve"], [69, 2, 1, "id221", "sort"], [69, 2, 1, "id222", "sort2"], [69, 2, 1, "id223", "sqrt"], [69, 2, 1, "id224", "sqrtm"], [69, 2, 1, "id225", "squeeze"], [69, 2, 1, "id226", "stack"], [69, 2, 1, "id227", "std"], [69, 2, 1, "id228", "sum"], [69, 2, 1, "id229", "take_along_axis"], [69, 2, 1, "id230", "tile"], [69, 2, 1, "id231", "tocsr"], [69, 2, 1, "id232", "todense"], [69, 2, 1, "id233", "trace"], [69, 2, 1, "id234", "transpose"], [69, 2, 1, "id235", "unique"], [69, 2, 1, "id236", "where"], [69, 2, 1, "id237", "zero_pad"], [69, 2, 1, "id238", "zeros"]], "ot.backend.NumpyBackend": [[69, 2, 1, "id240", "abs"], [69, 2, 1, "id241", "allclose"], [69, 2, 1, "id242", "any"], [69, 2, 1, "id243", "arange"], [69, 2, 1, "id244", "argmax"], [69, 2, 1, "id245", "argmin"], [69, 2, 1, "id246", "argsort"], [69, 2, 1, "id247", "array_equal"], [69, 2, 1, "id248", "assert_same_dtype_device"], [69, 2, 1, "id249", "atan2"], [69, 2, 1, "id250", "bitsize"], [69, 2, 1, "id251", "clip"], [69, 2, 1, "id252", "concatenate"], [69, 2, 1, "id253", "coo_matrix"], [69, 2, 1, "id254", "copy"], [69, 2, 1, "id255", "cumsum"], [69, 2, 1, "id256", "detach"], [69, 2, 1, "id257", "device_type"], [69, 2, 1, "id258", "diag"], [69, 2, 1, "id259", "dot"], [69, 2, 1, "id260", "dtype_device"], [69, 2, 1, "id261", "einsum"], [69, 2, 1, "id262", "eliminate_zeros"], [69, 2, 1, "id263", "exp"], [69, 2, 1, "id264", "eye"], [69, 2, 1, "id265", "flip"], [69, 2, 1, "id266", "floor"], [69, 2, 1, "id267", "full"], [69, 2, 1, "id268", "inv"], [69, 2, 1, "id269", "is_floating_point"], [69, 2, 1, "id270", "isfinite"], [69, 2, 1, "id271", "isinf"], [69, 2, 1, "id272", "isnan"], [69, 2, 1, "id273", "issparse"], [69, 2, 1, "id274", "kl_div"], [69, 2, 1, "id275", "linspace"], [69, 2, 1, "id276", "log"], [69, 2, 1, "id277", "logsumexp"], [69, 2, 1, "id278", "matmul"], [69, 2, 1, "id279", "max"], [69, 2, 1, "id280", "maximum"], [69, 2, 1, "id281", "mean"], [69, 2, 1, "id282", "median"], [69, 2, 1, "id283", "meshgrid"], [69, 2, 1, "id284", "min"], [69, 2, 1, "id285", "minimum"], [69, 2, 1, "id286", "norm"], [69, 2, 1, "id287", "ones"], [69, 2, 1, "id288", "outer"], [69, 2, 1, "id289", "power"], [69, 2, 1, "id290", "prod"], [69, 2, 1, "id291", "qr"], [69, 2, 1, "id292", "rand"], [69, 2, 1, "id293", "randn"], [69, 2, 1, "id294", "repeat"], [69, 2, 1, "id295", "reshape"], [69, 2, 1, "id296", "searchsorted"], [69, 2, 1, "id297", "seed"], [69, 2, 1, "id298", "set_gradients"], [69, 2, 1, "id299", "solve"], [69, 2, 1, "id300", "sort"], [69, 2, 1, "id301", "sort2"], [69, 2, 1, "id302", "sqrt"], [69, 2, 1, "id303", "sqrtm"], [69, 2, 1, "id304", "squeeze"], [69, 2, 1, "id305", "stack"], [69, 2, 1, "id306", "std"], [69, 2, 1, "id307", "sum"], [69, 2, 1, "id308", "take_along_axis"], [69, 2, 1, "id309", "tile"], [69, 2, 1, "id310", "tocsr"], [69, 2, 1, "id311", "todense"], [69, 2, 1, "id312", "trace"], [69, 2, 1, "id313", "transpose"], [69, 2, 1, "id314", "unique"], [69, 2, 1, "id315", "where"], [69, 2, 1, "id316", "zero_pad"], [69, 2, 1, "id317", "zeros"]], "ot.backend.TensorflowBackend": [[69, 2, 1, "id319", "abs"], [69, 2, 1, "id320", "allclose"], [69, 2, 1, "id321", "any"], [69, 2, 1, "id322", "arange"], [69, 2, 1, "id323", "argmax"], [69, 2, 1, "id324", "argmin"], [69, 2, 1, "id325", "argsort"], [69, 2, 1, "id326", "array_equal"], [69, 2, 1, "id327", "assert_same_dtype_device"], [69, 2, 1, "id328", "atan2"], [69, 2, 1, "id329", "bitsize"], [69, 2, 1, "id330", "clip"], [69, 2, 1, "id331", "concatenate"], [69, 2, 1, "id332", "coo_matrix"], [69, 2, 1, "id333", "copy"], [69, 2, 1, "id334", "cumsum"], [69, 2, 1, "id335", "detach"], [69, 2, 1, "id336", "device_type"], [69, 2, 1, "id337", "diag"], [69, 2, 1, "id338", "dot"], [69, 2, 1, "id339", "dtype_device"], [69, 2, 1, "id340", "einsum"], [69, 2, 1, "id341", "eliminate_zeros"], [69, 2, 1, "id342", "exp"], [69, 2, 1, "id343", "eye"], [69, 2, 1, "id344", "flip"], [69, 2, 1, "id345", "floor"], [69, 2, 1, "id346", "full"], [69, 2, 1, "id347", "inv"], [69, 2, 1, "id348", "is_floating_point"], [69, 2, 1, "id349", "isfinite"], [69, 2, 1, "id350", "isinf"], [69, 2, 1, "id351", "isnan"], [69, 2, 1, "id352", "issparse"], [69, 2, 1, "id353", "kl_div"], [69, 2, 1, "id354", "linspace"], [69, 2, 1, "id355", "log"], [69, 2, 1, "id356", "logsumexp"], [69, 2, 1, "id357", "matmul"], [69, 2, 1, "id358", "max"], [69, 2, 1, "id359", "maximum"], [69, 2, 1, "id360", "mean"], [69, 2, 1, "id361", "median"], [69, 2, 1, "id362", "meshgrid"], [69, 2, 1, "id363", "min"], [69, 2, 1, "id364", "minimum"], [69, 2, 1, "id365", "norm"], [69, 2, 1, "id366", "ones"], [69, 2, 1, "id367", "outer"], [69, 2, 1, "id368", "power"], [69, 2, 1, "id369", "prod"], [69, 2, 1, "id370", "qr"], [69, 2, 1, "id371", "rand"], [69, 2, 1, "id372", "randn"], [69, 2, 1, "id373", "repeat"], [69, 2, 1, "id374", "reshape"], [69, 2, 1, "id375", "searchsorted"], [69, 2, 1, "id376", "seed"], [69, 2, 1, "id377", "set_gradients"], [69, 2, 1, "id378", "solve"], [69, 2, 1, "id379", "sort"], [69, 2, 1, "id380", "sort2"], [69, 2, 1, "id381", "sqrt"], [69, 2, 1, "id382", "sqrtm"], [69, 2, 1, "id383", "squeeze"], [69, 2, 1, "id384", "stack"], [69, 2, 1, "id385", "std"], [69, 2, 1, "id386", "sum"], [69, 2, 1, "id387", "take_along_axis"], [69, 2, 1, "id388", "tile"], [69, 2, 1, "id389", "tocsr"], [69, 2, 1, "id390", "todense"], [69, 2, 1, "id391", "trace"], [69, 2, 1, "id392", "transpose"], [69, 2, 1, "id393", "unique"], [69, 2, 1, "id394", "where"], [69, 2, 1, "id395", "zero_pad"], [69, 2, 1, "id396", "zeros"]], "ot.backend.TorchBackend": [[69, 2, 1, "id398", "abs"], [69, 2, 1, "id399", "allclose"], [69, 2, 1, "id400", "any"], [69, 2, 1, "id401", "arange"], [69, 2, 1, "id402", "argmax"], [69, 2, 1, "id403", "argmin"], [69, 2, 1, "id404", "argsort"], [69, 2, 1, "id405", "array_equal"], [69, 2, 1, "id406", "assert_same_dtype_device"], [69, 2, 1, "id407", "atan2"], [69, 2, 1, "id408", "bitsize"], [69, 2, 1, "id409", "clip"], [69, 2, 1, "id410", "concatenate"], [69, 2, 1, "id411", "coo_matrix"], [69, 2, 1, "id412", "copy"], [69, 2, 1, "id413", "cumsum"], [69, 2, 1, "id414", "detach"], [69, 2, 1, "id415", "device_type"], [69, 2, 1, "id416", "diag"], [69, 2, 1, "id417", "dot"], [69, 2, 1, "id418", "dtype_device"], [69, 2, 1, "id419", "einsum"], [69, 2, 1, "id420", "eliminate_zeros"], [69, 2, 1, "id421", "exp"], [69, 2, 1, "id422", "eye"], [69, 2, 1, "id423", "flip"], [69, 2, 1, "id424", "floor"], [69, 2, 1, "id425", "full"], [69, 2, 1, "id426", "inv"], [69, 2, 1, "id427", "is_floating_point"], [69, 2, 1, "id428", "isfinite"], [69, 2, 1, "id429", "isinf"], [69, 2, 1, "id430", "isnan"], [69, 2, 1, "id431", "issparse"], [69, 2, 1, "id432", "kl_div"], [69, 2, 1, "id433", "linspace"], [69, 2, 1, "id434", "log"], [69, 2, 1, "id435", "logsumexp"], [69, 2, 1, "id436", "matmul"], [69, 2, 1, "id437", "max"], [69, 2, 1, "id438", "maximum"], [69, 2, 1, "id439", "mean"], [69, 2, 1, "id440", "median"], [69, 2, 1, "id441", "meshgrid"], [69, 2, 1, "id442", "min"], [69, 2, 1, "id443", "minimum"], [69, 2, 1, "id444", "norm"], [69, 2, 1, "id445", "ones"], [69, 2, 1, "id446", "outer"], [69, 2, 1, "id447", "power"], [69, 2, 1, "id448", "prod"], [69, 2, 1, "id449", "qr"], [69, 2, 1, "id450", "rand"], [69, 2, 1, "id451", "randn"], [69, 2, 1, "id452", "repeat"], [69, 2, 1, "id453", "reshape"], [69, 2, 1, "id454", "searchsorted"], [69, 2, 1, "id455", "seed"], [69, 2, 1, "id456", "set_gradients"], [69, 2, 1, "id457", "solve"], [69, 2, 1, "id458", "sort"], [69, 2, 1, "id459", "sort2"], [69, 2, 1, "id460", "sqrt"], [69, 2, 1, "id461", "sqrtm"], [69, 2, 1, "id462", "squeeze"], [69, 2, 1, "id463", "stack"], [69, 2, 1, "id464", "std"], [69, 2, 1, "id465", "sum"], [69, 2, 1, "id466", "take_along_axis"], [69, 2, 1, "id467", "tile"], [69, 2, 1, "id468", "tocsr"], [69, 2, 1, "id469", "todense"], [69, 2, 1, "id470", "trace"], [69, 2, 1, "id471", "transpose"], [69, 2, 1, "id472", "unique"], [69, 2, 1, "id473", "where"], [69, 2, 1, "id474", "zero_pad"], [69, 2, 1, "id475", "zeros"]], "ot.bregman": [[70, 3, 1, "id0", "barycenter"], [70, 3, 1, "id43", "barycenter_debiased"], [70, 3, 1, "id46", "barycenter_sinkhorn"], [70, 3, 1, "id49", "barycenter_stabilized"], [70, 3, 1, "id52", "convolutional_barycenter2d"], [70, 3, 1, "id56", "convolutional_barycenter2d_debiased"], [70, 3, 1, "id59", "empirical_sinkhorn"], [70, 3, 1, "id63", "empirical_sinkhorn2"], [70, 3, 1, "id67", "empirical_sinkhorn_divergence"], [70, 3, 1, "id69", "free_support_sinkhorn_barycenter"], [70, 3, 1, "id72", "geometricBar"], [70, 3, 1, "id73", "geometricMean"], [70, 3, 1, "id74", "greenkhorn"], [70, 3, 1, "id78", "jcpot_barycenter"], [70, 3, 1, "id81", "projC"], [70, 3, 1, "id82", "projR"], [70, 3, 1, "id83", "screenkhorn"], [70, 3, 1, "id87", "sinkhorn"], [70, 3, 1, "id93", "sinkhorn2"], [70, 3, 1, "id100", "sinkhorn_epsilon_scaling"], [70, 3, 1, "id105", "sinkhorn_knopp"], [70, 3, 1, "id108", "sinkhorn_log"], [70, 3, 1, "id112", "sinkhorn_stabilized"], [70, 3, 1, "id117", "unmix"]], "ot.coot": [[71, 3, 1, "id0", "co_optimal_transport"], [71, 3, 1, "id4", "co_optimal_transport2"]], "ot.da": [[72, 1, 1, "id0", "BaseTransport"], [72, 1, 1, "id40", "EMDLaplaceTransport"], [72, 1, 1, "id47", "EMDTransport"], [72, 1, 1, "id53", "JCPOTTransport"], [72, 1, 1, "id66", "LinearTransport"], [72, 1, 1, "id73", "MappingTransport"], [72, 1, 1, "id80", "SinkhornL1l2Transport"], [72, 1, 1, "id88", "SinkhornLpl1Transport"], [72, 1, 1, "id95", "SinkhornTransport"], [72, 1, 1, "id103", "UnbalancedSinkhornTransport"], [72, 3, 1, "id110", "distribution_estimation_uniform"], [72, 3, 1, "id111", "emd_laplace"], [72, 3, 1, "id115", "joint_OT_mapping_kernel"], [72, 3, 1, "id118", "joint_OT_mapping_linear"], [72, 3, 1, "id121", "sinkhorn_l1l2_gl"], [72, 3, 1, "id125", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[72, 2, 1, "id32", "fit"], [72, 2, 1, "id33", "fit_transform"], [72, 2, 1, "id34", "inverse_transform"], [72, 2, 1, "id35", "inverse_transform_labels"], [72, 2, 1, "id36", "transform"], [72, 2, 1, "id37", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[72, 4, 1, "id41", "coupling_"], [72, 2, 1, "id46", "fit"]], "ot.da.EMDTransport": [[72, 4, 1, "id48", "coupling_"], [72, 2, 1, "id52", "fit"]], "ot.da.JCPOTTransport": [[72, 4, 1, "id54", "coupling_"], [72, 2, 1, "id60", "fit"], [72, 2, 1, "id61", "inverse_transform_labels"], [72, 4, 1, "id56", "log_"], [72, 4, 1, "id55", "proportions_"], [72, 2, 1, "id62", "transform"], [72, 2, 1, "id63", "transform_labels"]], "ot.da.LinearTransport": [[72, 2, 1, "id70", "fit"], [72, 2, 1, "id71", "inverse_transform"], [72, 2, 1, "id72", "transform"]], "ot.da.MappingTransport": [[72, 4, 1, "id74", "coupling_"], [72, 2, 1, "id78", "fit"], [72, 4, 1, "id76", "log_"], [72, 4, 1, "id75", "mapping_"], [72, 2, 1, "id79", "transform"]], "ot.da.SinkhornL1l2Transport": [[72, 4, 1, "id81", "coupling_"], [72, 2, 1, "id87", "fit"], [72, 4, 1, "id82", "log_"]], "ot.da.SinkhornLpl1Transport": [[72, 4, 1, "id89", "coupling_"], [72, 2, 1, "id94", "fit"]], "ot.da.SinkhornTransport": [[72, 4, 1, "id96", "coupling_"], [72, 2, 1, "id102", "fit"], [72, 4, 1, "id97", "log_"]], "ot.da.UnbalancedSinkhornTransport": [[72, 4, 1, "id104", "coupling_"], [72, 2, 1, "id109", "fit"], [72, 4, 1, "id105", "log_"]], "ot.datasets": [[73, 3, 1, "id0", "make_1D_gauss"], [73, 3, 1, "id1", "make_2D_samples_gauss"], [73, 3, 1, "id2", "make_data_classif"]], "ot.dr": [[74, 3, 1, "id0", "dist"], [74, 3, 1, "id4", "ewca"], [74, 3, 1, "id7", "fda"], [74, 3, 1, "id8", "logsumexp"], [74, 3, 1, "id9", "projection_robust_wasserstein"], [74, 3, 1, "id12", "sinkhorn"], [74, 3, 1, "id13", "sinkhorn_log"], [74, 3, 1, "id14", "split_classes"], [74, 3, 1, "id15", "wda"]], "ot.factored": [[75, 3, 1, "id0", "factored_optimal_transport"]], "ot.gaussian": [[76, 3, 1, "id0", "bures_wasserstein_distance"], [76, 3, 1, "id11", "bures_wasserstein_mapping"], [76, 3, 1, "id15", "empirical_bures_wasserstein_distance"], [76, 3, 1, "id18", "empirical_bures_wasserstein_mapping"]], "ot.gromov": [[77, 3, 1, "", "GW_distance_estimation"], [77, 3, 1, "", "entropic_fused_gromov_barycenters"], [77, 3, 1, "", "entropic_fused_gromov_wasserstein"], [77, 3, 1, "", "entropic_fused_gromov_wasserstein2"], [77, 3, 1, "", "entropic_gromov_barycenters"], [77, 3, 1, "", "entropic_gromov_wasserstein"], [77, 3, 1, "", "entropic_gromov_wasserstein2"], [77, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein"], [77, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein2"], [77, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein"], [77, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein2"], [77, 3, 1, "", "fgw_barycenters"], [77, 3, 1, "", "fused_gromov_wasserstein"], [77, 3, 1, "", "fused_gromov_wasserstein2"], [77, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [77, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [77, 3, 1, "", "gromov_barycenters"], [77, 3, 1, "", "gromov_wasserstein"], [77, 3, 1, "", "gromov_wasserstein2"], [77, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [77, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [77, 3, 1, "", "gwggrad"], [77, 3, 1, "", "gwloss"], [77, 3, 1, "", "init_matrix"], [77, 3, 1, "", "init_matrix_semirelaxed"], [77, 3, 1, "", "pointwise_gromov_wasserstein"], [77, 3, 1, "", "sampled_gromov_wasserstein"], [77, 3, 1, "", "semirelaxed_fused_gromov_wasserstein"], [77, 3, 1, "", "semirelaxed_fused_gromov_wasserstein2"], [77, 3, 1, "", "semirelaxed_gromov_wasserstein"], [77, 3, 1, "", "semirelaxed_gromov_wasserstein2"], [77, 3, 1, "", "solve_gromov_linesearch"], [77, 3, 1, "", "solve_semirelaxed_gromov_linesearch"], [77, 3, 1, "", "tensor_product"], [77, 3, 1, "", "update_feature_matrix"], [77, 3, 1, "", "update_kl_loss"], [77, 3, 1, "", "update_square_loss"]], "ot.lp": [[78, 3, 1, "", "barycenter"], [78, 3, 1, "", "binary_search_circle"], [78, 3, 1, "", "center_ot_dual"], [78, 3, 1, "", "check_number_threads"], [78, 3, 1, "id0", "emd"], [78, 3, 1, "id11", "emd2"], [78, 3, 1, "", "emd2_1d"], [78, 3, 1, "", "emd_1d"], [78, 3, 1, "", "estimate_dual_null_weights"], [78, 3, 1, "id18", "free_support_barycenter"], [78, 3, 1, "id22", "generalized_free_support_barycenter"], [78, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [78, 3, 1, "", "wasserstein_1d"], [78, 3, 1, "", "wasserstein_circle"]], "ot.optim": [[79, 3, 1, "id0", "cg"], [79, 3, 1, "id13", "gcg"], [79, 3, 1, "id17", "generic_conditional_gradient"], [79, 3, 1, "id23", "line_search_armijo"], [79, 3, 1, "id24", "semirelaxed_cg"], [79, 3, 1, "id27", "solve_1d_linesearch_quad"]], "ot.partial": [[80, 3, 1, "id0", "entropic_partial_gromov_wasserstein"], [80, 3, 1, "id17", "entropic_partial_gromov_wasserstein2"], [80, 3, 1, "id21", "entropic_partial_wasserstein"], [80, 3, 1, "id24", "gwgrad_partial"], [80, 3, 1, "id27", "gwloss_partial"], [80, 3, 1, "id28", "partial_gromov_wasserstein"], [80, 3, 1, "id31", "partial_gromov_wasserstein2"], [80, 3, 1, "id34", "partial_wasserstein"], [80, 3, 1, "id37", "partial_wasserstein2"], [80, 3, 1, "id40", "partial_wasserstein_lagrange"]], "ot.plot": [[81, 3, 1, "id0", "plot1D_mat"], [81, 3, 1, "id1", "plot2D_samples_mat"]], "ot.regpath": [[82, 3, 1, "id0", "complement_schur"], [82, 3, 1, "id12", "compute_next_removal"], [82, 3, 1, "id15", "compute_transport_plan"], [82, 3, 1, "id18", "construct_augmented_H"], [82, 3, 1, "id19", "fully_relaxed_path"], [82, 3, 1, "id21", "ot_next_gamma"], [82, 3, 1, "id23", "recast_ot_as_lasso"], [82, 3, 1, "id25", "recast_semi_relaxed_as_lasso"], [82, 3, 1, "id26", "regularization_path"], [82, 3, 1, "id28", "semi_relaxed_next_gamma"], [82, 3, 1, "id30", "semi_relaxed_path"]], "ot.sliced": [[83, 3, 1, "id0", "get_random_projections"], [83, 3, 1, "id5", "max_sliced_wasserstein_distance"], [83, 3, 1, "id7", "sliced_wasserstein_distance"], [83, 3, 1, "id9", "sliced_wasserstein_sphere"], [83, 3, 1, "id11", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[84, 1, 1, "id0", "NegEntropy"], [84, 1, 1, "id10", "Regularization"], [84, 1, 1, "id14", "SparsityConstrained"], [84, 1, 1, "id18", "SquaredL2"], [84, 3, 1, "id22", "dual_obj_grad"], [84, 3, 1, "id23", "get_plan_from_dual"], [84, 3, 1, "id24", "get_plan_from_semi_dual"], [84, 3, 1, "id25", "projection_simplex"], [84, 3, 1, "id26", "semi_dual_obj_grad"], [84, 3, 1, "id27", "smooth_ot_dual"], [84, 3, 1, "id32", "smooth_ot_semi_dual"], [84, 3, 1, "id37", "solve_dual"], [84, 3, 1, "id38", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[84, 2, 1, "id7", "Omega"], [84, 2, 1, "id8", "delta_Omega"], [84, 2, 1, "id9", "max_Omega"]], "ot.smooth.Regularization": [[84, 2, 1, "id11", "Omega"], [84, 2, 1, "id12", "delta_Omega"], [84, 2, 1, "id13", "max_Omega"]], "ot.smooth.SparsityConstrained": [[84, 2, 1, "id15", "Omega"], [84, 2, 1, "id16", "delta_Omega"], [84, 2, 1, "id17", "max_Omega"]], "ot.smooth.SquaredL2": [[84, 2, 1, "id19", "Omega"], [84, 2, 1, "id20", "delta_Omega"], [84, 2, 1, "id21", "max_Omega"]], "ot.stochastic": [[85, 3, 1, "id0", "averaged_sgd_entropic_transport"], [85, 3, 1, "id14", "batch_grad_dual"], [85, 3, 1, "id16", "c_transform_entropic"], [85, 3, 1, "id18", "coordinate_grad_semi_dual"], [85, 3, 1, "id20", "loss_dual_entropic"], [85, 3, 1, "id22", "loss_dual_quadratic"], [85, 3, 1, "id24", "plan_dual_entropic"], [85, 3, 1, "id26", "plan_dual_quadratic"], [85, 3, 1, "id28", "sag_entropic_transport"], [85, 3, 1, "id30", "sgd_entropic_regularization"], [85, 3, 1, "id32", "solve_dual_entropic"], [85, 3, 1, "id34", "solve_semi_dual_entropic"]], "ot.unbalanced": [[86, 3, 1, "id0", "barycenter_unbalanced"], [86, 3, 1, "id25", "barycenter_unbalanced_sinkhorn"], [86, 3, 1, "id29", "barycenter_unbalanced_stabilized"], [86, 3, 1, "id33", "lbfgsb_unbalanced"], [86, 3, 1, "id35", "mm_unbalanced"], [86, 3, 1, "id38", "mm_unbalanced2"], [86, 3, 1, "id40", "sinkhorn_knopp_unbalanced"], [86, 3, 1, "id44", "sinkhorn_stabilized_unbalanced"], [86, 3, 1, "id48", "sinkhorn_unbalanced"], [86, 3, 1, "id54", "sinkhorn_unbalanced2"]], "ot.utils": [[87, 1, 1, "id0", "BaseEstimator"], [87, 1, 1, "", "OTResult"], [87, 6, 1, "", "UndefinedParameter"], [87, 3, 1, "id3", "check_params"], [87, 3, 1, "id4", "check_random_state"], [87, 3, 1, "id5", "clean_zeros"], [87, 3, 1, "id6", "cost_normalization"], [87, 1, 1, "id7", "deprecated"], [87, 3, 1, "id8", "dist"], [87, 3, 1, "id9", "dist0"], [87, 3, 1, "id10", "dots"], [87, 3, 1, "id11", "euclidean_distances"], [87, 3, 1, "id12", "get_coordinate_circle"], [87, 3, 1, "id13", "kernel"], [87, 3, 1, "id14", "label_normalization"], [87, 3, 1, "id15", "laplacian"], [87, 3, 1, "id16", "list_to_array"], [87, 3, 1, "id17", "parmap"], [87, 3, 1, "id18", "proj_simplex"], [87, 3, 1, "id19", "projection_sparse_simplex"], [87, 3, 1, "id20", "tic"], [87, 3, 1, "id21", "toc"], [87, 3, 1, "id22", "toq"], [87, 3, 1, "id23", "unif"]], "ot.utils.BaseEstimator": [[87, 2, 1, "id1", "get_params"], [87, 2, 1, "id2", "set_params"]], "ot.utils.OTResult": [[87, 5, 1, "", "a_to_b"], [87, 5, 1, "", "b_to_a"], [87, 5, 1, "", "citation"], [87, 5, 1, "", "lazy_plan"], [87, 5, 1, "", "marginal_a"], [87, 5, 1, "", "marginal_b"], [87, 5, 1, "", "marginals"], [87, 5, 1, "", "plan"], [87, 5, 1, "", "potential_a"], [87, 5, 1, "", "potential_b"], [87, 5, 1, "", "potentials"], [87, 5, 1, "", "sparse_plan"], [87, 5, 1, "", "status"], [87, 5, 1, "", "value"], [87, 5, 1, "", "value_linear"]], "ot.weak": [[88, 3, 1, "id0", "weak_optimal_transport"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "modul": [0, 90], "main": 0, "ot": [0, 1, 5, 18, 19, 20, 21, 22, 23, 24, 25, 37, 41, 42, 48, 50, 52, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90], "function": [0, 32, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "refer": [0, 83, 89, 90], "dual": [1, 5, 46, 48], "solver": [1, 31, 55, 90], "entrop": [1, 5, 11, 29, 39, 55, 64, 90], "quadrat": [1, 90], "regular": [1, 11, 22, 29, 37, 48, 55, 63, 64, 90], "pytorch": [1, 2, 3, 5, 6, 7, 8], "data": [1, 4, 5, 6, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 33, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 53, 54, 55, 57, 58, 60, 61, 63, 64], "gener": [1, 2, 4, 5, 6, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 34, 35, 39, 40, 41, 42, 43, 45, 49, 50, 51, 53, 55, 57, 58, 60, 61, 63, 64, 90], "plot": [1, 4, 5, 6, 8, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 81], "convert": [1, 5], "torch": [1, 5], "tensor": [1, 5], "estim": [1, 2, 5, 6, 23, 24, 25, 34, 43, 90], "variabl": [1, 5, 48], "plan": [1, 5, 32, 39, 48, 62], "optim": [2, 6, 18, 20, 21, 22, 26, 38, 41, 42, 43, 45, 48, 49, 51, 52, 60, 63, 64, 79, 89, 90], "gromov": [2, 29, 30, 31, 32, 33, 34, 35, 37, 62, 77, 90], "wasserstein": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 29, 30, 31, 32, 33, 34, 35, 37, 39, 40, 48, 54, 57, 58, 61, 62, 90], "distanc": [2, 6, 20, 26, 30, 31, 32, 37, 43, 53, 54, 57, 62, 90], "graph": [2, 28, 29, 31, 34, 35], "gw": [2, 30, 32, 90], "w": 2, "r": 2, "t": 2, "weight": [2, 6], "templat": 2, "structur": [2, 30], "commun": 2, "cluster": [2, 29, 31, 34, 35], "uniform": [2, 52, 54], "compress": 2, "slice": [3, 4, 37, 57, 58, 83], "barycent": [3, 7, 10, 11, 12, 13, 14, 15, 16, 28, 33, 37, 61, 90], "gradient": [3, 4], "flow": [3, 7], "anim": [3, 4, 8, 16, 63], "trajectori": [3, 4, 8], "along": [3, 4, 8], "iter": [3, 4, 8], "comput": [3, 9, 10, 12, 13, 14, 16, 17, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 46, 47, 48, 51, 53, 56, 59, 61, 62, 63, 64, 65, 90], "descent": [3, 4], "spheric": [4, 58], "embed": [4, 34], "sphere": 4, "sampl": [4, 5, 8, 18, 20, 21, 22, 23, 24, 26, 32, 43, 52, 62], "continu": [5, 46], "deep": 5, "densiti": 5, "target": [5, 18, 20, 21, 22, 26], "given": 5, "sourc": [5, 6, 18, 20, 21, 22, 26], "unmix": 6, "model": [6, 8, 29, 31, 34, 35], "wrt": 6, "converg": 6, "object": 6, "reweight": 6, "distribut": [6, 14, 15, 20, 25, 32, 43, 45, 49, 50, 51, 57, 58, 60, 61, 62, 90], "1d": [7, 10, 11, 13, 49, 53, 60, 61], "2": [8, 18, 20, 21, 22, 26, 29, 31, 34, 35, 52, 58, 91], "minibatch": 8, "gan": 8, "train": 8, "visual": [8, 12, 13, 29, 30, 31, 33, 34, 35, 43, 48], "time": [9, 17, 27, 36, 47, 48, 56, 59, 65], "demo": [10, 13, 16, 61], "barycentr": [10, 61], "interpol": [10, 15, 61], "exact": [11, 41, 42, 64], "lp": [11, 78], "v": [11, 26, 41], "gaussian": [11, 13, 32, 62, 76], "stair": 11, "dirac": 11, "final": 11, "figur": 11, "convolut": [12, 90], "exampl": [12, 29, 32, 33, 35, 37, 46, 50, 62, 64, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90], "prepar": [12, 33], "debias": 13, "sinkhorn": [13, 15, 21, 46, 48, 49, 51, 53, 60, 90], "2d": [13, 14, 15, 32, 40, 51, 57, 62, 64], "imag": [13, 19, 23, 25], "free": [14, 15, 90], "support": [14, 15, 89, 90], "paramet": [15, 48], "inspect": 15, "empir": [15, 20, 51], "project": [16, 39, 40, 57, 58], "match": [16, 29, 31, 35], "rotat": 16, "domain": [18, 20, 21, 22, 24, 25, 37, 90], "adapt": [18, 19, 20, 21, 22, 23, 24, 25, 37, 90], "instanti": [18, 19, 20, 21, 22, 24], "differ": [18, 19, 20, 22, 24, 26, 52, 53, 54, 57, 58], "transport": [18, 19, 20, 21, 22, 23, 24, 26, 30, 38, 39, 41, 42, 43, 45, 46, 48, 49, 51, 52, 60, 63, 64, 89, 90], "algorithm": [18, 19, 20, 21, 22, 24, 46, 48], "fit": [18, 19, 20, 21, 22, 24], "them": [18, 19, 20, 21, 22, 24, 32, 62], "fig": [18, 20, 21, 22, 26], "1": [18, 20, 21, 22, 26, 34, 52, 91], "coupl": [18, 20, 21, 22, 26, 42], "color": [19, 25], "origin": [19, 25], "scatter": 19, "new": [19, 67, 91], "matrix": [20, 26, 30, 45, 46, 48, 49, 50, 60], "pairwis": [20, 26], "method": [20, 26, 32], "3": [20, 26, 29, 31, 34, 35, 91], "multi": 21, "shift": 21, "all": 21, "jcpot": 21, "run": 21, "oracl": 21, "known": 21, "proport": 21, "laplacian": 22, "linear": [23, 34], "map": [23, 24, 25, 48, 90], "load": 23, "transform": [23, 25], "pixel": 25, "transfer": 25, "valu": 25, "otda": [26, 90], "unsupervis": 26, "semi": [26, 29, 35, 46, 63], "supervis": 26, "set": 26, "onto": 26, "us": [28, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 90], "fgw": [28, 30, 90], "relax": [29, 35, 63], "fuse": [29, 30, 31, 34, 35, 37], "two": [29, 31, 32, 35, 62], "follow": [29, 31, 34, 35], "stochast": [29, 31, 32, 34, 35, 46, 85], "block": [29, 31, 34, 35], "diverg": [29, 35], "add": [29, 35], "node": [29, 34, 35], "featur": [29, 30, 34, 35, 91], "creat": 30, "matric": [30, 46, 52], "across": 30, "comparison": 31, "3d": [32, 62], "kernel": 32, "normal": 32, "displai": 32, "scalabl": 32, "ani": 32, "loss": [32, 45, 48, 49, 50, 53, 60], "smacof": 33, "md": 33, "dictionari": 34, "learn": [34, 43], "dataset": [34, 52, 73], "compos": 34, "from": 34, "atom": 34, "space": 34, "endow": 34, "attribut": [34, 66], "galleri": 37, "pot": [37, 44, 48, 67, 89, 90], "backend": [37, 69, 90], "other": [37, 90], "problem": [37, 46, 48], "unbalanc": [37, 60, 61, 63, 64, 86, 90], "partial": [37, 52, 62, 80, 90], "row": [38, 43], "column": [38, 43], "align": [38, 43], "co": [38, 43], "compon": 39, "analysi": [39, 40, 90], "ewca": [39, 74], "first": [39, 48, 91], "discrimin": [40, 90], "fisher": 40, "weak": [41, 88], "an": [41, 42, 90], "solut": [41, 42], "factor": [42, 75], "margin": 43, "coot": [43, 71], "respect": 43, "logo": 44, "toolbox": [44, 48, 89], "clear": 44, "background": 44, "dark": 44, "screen": 45, "screenkhorn": [45, 70], "solv": [45, 48, 49, 50, 55, 60, 90], "discret": 46, "case": [46, 90], "compar": [46, 54], "result": [46, 64], "introduct": 48, "python": [48, 89], "instal": [48, 89], "import": 48, "get": 48, "help": 48, "bakeri": 48, "citi": 48, "cost": 48, "emd": [48, 49, 51, 53, 55, 90], "vari": 48, "smooth": [50, 84], "spars": 50, "between": [51, 54, 90], "ground": 52, "metric": 52, "circl": [52, 54], "euclidean": 54, "von": 54, "mise": 54, "kappa": 54, "frobeniu": 55, "norm": 55, "seed": [57, 58], "number": [57, 58], "": 58, "mass": 60, "one": 62, "path": 63, "l2": [63, 64], "penal": 63, "fulli": 63, "regpath": [63, 82], "uot": [63, 64], "kl": 64, "code": [66, 89], "conduct": [66, 89], "our": 66, "pledg": 66, "standard": 66, "respons": 66, "scope": 66, "enforc": 66, "contribut": [67, 89], "how": [67, 90], "pull": 67, "request": 67, "checklist": 67, "file": 67, "bug": 67, "contributor": [67, 68], "tip": 67, "document": 67, "creator": 68, "maintain": 68, "acknowledg": [68, 89], "perform": 69, "class": [69, 72, 84, 87, 90], "bregman": [70, 90], "barycenter_debias": 70, "convolutional_barycenter2d": [70, 90], "convolutional_barycenter2d_debias": 70, "empirical_sinkhorn": 70, "free_support_sinkhorn_barycent": 70, "depend": [70, 89], "co_optimal_transport": 71, "co_optimal_transport2": 71, "da": 72, "basetransport": 72, "emdlaplacetransport": 72, "emdtransport": 72, "jcpottransport": 72, "lineartransport": 72, "mappingtransport": 72, "sinkhornl1l2transport": 72, "sinkhornlpl1transport": 72, "sinkhorntransport": 72, "make_1d_gauss": 73, "make_2d_samples_gauss": 73, "make_data_classif": 73, "dr": 74, "fda": 74, "wda": [74, 90], "empirical_bures_wasserstein_map": 76, "free_support_barycent": 78, "generalized_free_support_barycent": 78, "cg": 79, "gcg": 79, "entropic_partial_gromov_wasserstein": 80, "entropic_partial_wasserstein": 80, "partial_gromov_wasserstein": 80, "partial_wasserstein": 80, "plot1d_mat": 81, "plot2d_samples_mat": 81, "compute_transport_plan": 82, "regularization_path": 82, "smooth_ot_du": 84, "loss_dual_entrop": 85, "loss_dual_quadrat": 85, "plan_dual_entrop": 85, "plan_dual_quadrat": 85, "solve_dual_entrop": 85, "solve_semi_dual_entrop": 85, "mm_unbalanc": 86, "util": 87, "dist0": 87, "proj_simplex": 87, "baseestim": 87, "except": 87, "content": 89, "cite": 89, "pip": 89, "anaconda": 89, "conda": 89, "forg": 89, "post": 89, "check": 89, "short": 89, "notebook": 89, "indic": 89, "tabl": 89, "quick": 90, "start": 90, "guid": 90, "why": 90, "when": 90, "emd2": 90, "special": 90, "sinkhorn2": 90, "group": 90, "lasso": 90, "fix": 90, "mong": 90, "extens": 90, "g": 90, "applic": 90, "multipl": 90, "cpu": 90, "gpu": 90, "work": 90, "acceler": 90, "list": 90, "compat": 90, "faq": 90, "releas": 91, "0": 91, "9": 91, "1dev": 91, "close": 91, "issu": 91, "8": 91, "7": 91, "6": 91, "5": 91, "deprec": 91, "4": 91, "v0": 91, "11": 91, "10": 91, "pre": 91}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API and modules": [[0, "api-and-modules"]], "Main ot functions": [[0, "module-ot"]], "References:": [[0, "references"], [83, "references"], [83, "id12"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[1, "dual-ot-solvers-for-entropic-and-quadratic-regularized-ot-with-pytorch"]], "Data generation": [[1, "data-generation"], [4, "data-generation"], [5, "data-generation"], [8, "data-generation"]], "Plot data": [[1, "plot-data"], [4, "plot-data"], [5, "plot-data"], [6, "plot-data"], [8, "plot-data"], [23, "plot-data"], [24, "plot-data"], [28, "plot-data"], [30, "plot-data"], [39, "plot-data"], [40, "plot-data"], [51, "plot-data"], [53, "plot-data"], [54, "plot-data"], [57, "plot-data"], [58, "plot-data"], [61, "plot-data"], [63, "plot-data"]], "Convert data to torch tensors": [[1, "convert-data-to-torch-tensors"], [5, "convert-data-to-torch-tensors"]], "Estimating dual variables for entropic OT": [[1, "estimating-dual-variables-for-entropic-ot"]], "Plot the estimated entropic OT plan": [[1, "plot-the-estimated-entropic-ot-plan"]], "Estimating dual variables for quadratic OT": [[1, "estimating-dual-variables-for-quadratic-ot"]], "Plot the estimated quadratic OT plan": [[1, "plot-the-estimated-quadratic-ot-plan"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[2, "optimizing-the-gromov-wasserstein-distance-with-pytorch"]], "Graph generation": [[2, "graph-generation"]], "Optimizing GW w.r.t. the weights on a template structure": [[2, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Community clustering with uniform and estimated weights": [[2, "community-clustering-with-uniform-and-estimated-weights"]], "Graph compression with GW": [[2, "graph-compression-with-gw"]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[3, "sliced-wasserstein-barycenter-and-gradient-flow-with-pytorch"]], "Sliced Wasserstein gradient flow with Pytorch": [[3, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Animate trajectories of the gradient flow along iteration": [[3, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Compute the Sliced Wasserstein Barycenter": [[3, "compute-the-sliced-wasserstein-barycenter"]], "Animate trajectories of the barycenter along gradient descent": [[3, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[4, "spherical-sliced-wasserstein-embedding-on-sphere"]], "Gradient descent": [[4, "gradient-descent"]], "Plot trajectories of generated samples along iterations": [[4, "plot-trajectories-of-generated-samples-along-iterations"], [8, "plot-trajectories-of-generated-samples-along-iterations"]], "Animate trajectories of generated samples along iteration": [[4, "animate-trajectories-of-generated-samples-along-iteration"], [8, "animate-trajectories-of-generated-samples-along-iteration"]], "Continuous OT plan estimation with Pytorch": [[5, "continuous-ot-plan-estimation-with-pytorch"]], "Estimating deep dual variables for entropic OT": [[5, "estimating-deep-dual-variables-for-entropic-ot"]], "Plot the density on target for a given source sample": [[5, "plot-the-density-on-target-for-a-given-source-sample"]], "Wasserstein unmixing with PyTorch": [[6, "wasserstein-unmixing-with-pytorch"]], "Generate data": [[6, "generate-data"], [10, "generate-data"], [14, "generate-data"], [18, "generate-data"], [19, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [28, "generate-data"], [30, "generate-data"], [39, "generate-data"], [40, "generate-data"], [43, "generate-data"], [45, "generate-data"], [49, "generate-data"], [50, "generate-data"], [51, "generate-data"], [53, "generate-data"], [55, "generate-data"], [57, "generate-data"], [58, "generate-data"], [60, "generate-data"], [61, "generate-data"], [63, "generate-data"], [64, "generate-data"]], "Optimization of the model wrt the Wasserstein distance": [[6, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Estimated weights and convergence of the objective": [[6, "estimated-weights-and-convergence-of-the-objective"]], "Plotting the reweighted source distribution": [[6, "plotting-the-reweighted-source-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[7, "wasserstein-1d-flow-and-barycenter-with-pytorch"]], "Wasserstein barycenter": [[7, "wasserstein-barycenter"]], "Wasserstein 2 Minibatch GAN with PyTorch": [[8, "wasserstein-2-minibatch-gan-with-pytorch"]], "Generator Model": [[8, "generator-model"]], "Training the model": [[8, "training-the-model"]], "Generate and visualize data": [[8, "generate-and-visualize-data"]], "Computation times": [[9, "computation-times"], [17, "computation-times"], [27, "computation-times"], [36, "computation-times"], [47, "computation-times"], [56, "computation-times"], [59, "computation-times"], [65, "computation-times"]], "1D Wasserstein barycenter demo": [[10, "d-wasserstein-barycenter-demo"]], "Barycenter computation": [[10, "barycenter-computation"], [28, "barycenter-computation"], [33, "barycenter-computation"], [61, "barycenter-computation"]], "Barycentric interpolation": [[10, "barycentric-interpolation"], [61, "barycentric-interpolation"]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[11, "d-wasserstein-barycenter-exact-lp-vs-entropic-regularization"]], "Gaussian Data": [[11, "gaussian-data"]], "Stair Data": [[11, "stair-data"]], "Dirac Data": [[11, "dirac-data"]], "Final figure": [[11, "final-figure"]], "Convolutional Wasserstein Barycenter example": [[12, "convolutional-wasserstein-barycenter-example"]], "Data preparation": [[12, "data-preparation"], [33, "data-preparation"]], "Barycenter computation and visualization": [[12, "barycenter-computation-and-visualization"], [13, "barycenter-computation-and-visualization"]], "Debiased Sinkhorn barycenter demo": [[13, "debiased-sinkhorn-barycenter-demo"]], "Debiased barycenter of 1D Gaussians": [[13, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[13, "debiased-barycenter-of-2d-images"]], "2D free support Wasserstein barycenters of distributions": [[14, "d-free-support-wasserstein-barycenters-of-distributions"]], "Compute free support Wasserstein barycenter": [[14, "compute-free-support-wasserstein-barycenter"]], "Plot the Wasserstein barycenter": [[14, "plot-the-wasserstein-barycenter"], [14, "id1"]], "2D free support Sinkhorn barycenters of distributions": [[15, "d-free-support-sinkhorn-barycenters-of-distributions"]], "General Parameters": [[15, "general-parameters"]], "Generate Data": [[15, "generate-data"]], "Inspect generated distributions": [[15, "inspect-generated-distributions"]], "Interpolating Empirical Distributions": [[15, "interpolating-empirical-distributions"]], "Generalized Wasserstein Barycenter Demo": [[16, "generalized-wasserstein-barycenter-demo"]], "Generate and plot data": [[16, "generate-and-plot-data"]], "Barycenter computation and plot": [[16, "barycenter-computation-and-plot"]], "Plotting projection matches": [[16, "plotting-projection-matches"]], "Rotation animation": [[16, "rotation-animation"]], "OT for domain adaptation": [[18, "ot-for-domain-adaptation"]], "Instantiate the different transport algorithms and fit them": [[18, "instantiate-the-different-transport-algorithms-and-fit-them"], [19, "instantiate-the-different-transport-algorithms-and-fit-them"], [20, "instantiate-the-different-transport-algorithms-and-fit-them"], [22, "instantiate-the-different-transport-algorithms-and-fit-them"], [24, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Fig 1 : plots source and target samples": [[18, "fig-1-plots-source-and-target-samples"], [21, "fig-1-plots-source-and-target-samples"], [22, "fig-1-plots-source-and-target-samples"]], "Fig 2 : plot optimal couplings and transported samples": [[18, "fig-2-plot-optimal-couplings-and-transported-samples"], [21, "fig-2-plot-optimal-couplings-and-transported-samples"], [22, "fig-2-plot-optimal-couplings-and-transported-samples"]], "OT for image color adaptation": [[19, "ot-for-image-color-adaptation"]], "Plot original image": [[19, "plot-original-image"]], "Scatter plot of colors": [[19, "scatter-plot-of-colors"]], "Plot new images": [[19, "plot-new-images"]], "OT for domain adaptation on empirical distributions": [[20, "ot-for-domain-adaptation-on-empirical-distributions"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[20, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [26, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plots optimal couplings for the different methods": [[20, "fig-2-plots-optimal-couplings-for-the-different-methods"], [26, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[20, "fig-3-plot-transported-samples"], [26, "fig-3-plot-transported-samples"]], "OT for multi-source target shift": [[21, "ot-for-multi-source-target-shift"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[21, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate JCPOT adaptation algorithm and fit it": [[21, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Run oracle transport algorithm with known proportions": [[21, "run-oracle-transport-algorithm-with-known-proportions"]], "OT with Laplacian regularization for domain adaptation": [[22, "ot-with-laplacian-regularization-for-domain-adaptation"]], "Linear OT mapping estimation": [[23, "linear-ot-mapping-estimation"]], "Estimate linear mapping and transport": [[23, "estimate-linear-mapping-and-transport"]], "Plot transported samples": [[23, "plot-transported-samples"], [24, "plot-transported-samples"]], "Load image data": [[23, "load-image-data"]], "Estimate mapping and adapt": [[23, "estimate-mapping-and-adapt"]], "Plot transformed images": [[23, "plot-transformed-images"], [25, "plot-transformed-images"]], "OT mapping estimation for domain adaptation": [[24, "ot-mapping-estimation-for-domain-adaptation"]], "OT for image color adaptation with mapping estimation": [[25, "ot-for-image-color-adaptation-with-mapping-estimation"]], "Domain adaptation for pixel distribution transfer": [[25, "domain-adaptation-for-pixel-distribution-transfer"]], "Plot original images": [[25, "plot-original-images"]], "Plot pixel values distribution": [[25, "plot-pixel-values-distribution"]], "OTDA unsupervised vs semi-supervised setting": [[26, "otda-unsupervised-vs-semi-supervised-setting"]], "Transport source samples onto target samples": [[26, "transport-source-samples-onto-target-samples"]], "Plot graphs barycenter using FGW": [[28, "plot-graphs-barycenter-using-fgw"]], "Plot Barycenter": [[28, "plot-barycenter"]], "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example": [[29, "entropic-regularized-semi-relaxed-fused-gromov-wasserstein-example"]], "Generate two graphs following Stochastic Block models of 2 and 3 clusters.": [[29, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [31, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [35, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"]], "Compute their entropic-regularized semi-relaxed Gromov-Wasserstein divergences": [[29, "compute-their-entropic-regularized-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the entropic-regularized semi-relaxed Gromov-Wasserstein matchings": [[29, "visualization-of-the-entropic-regularized-semi-relaxed-gromov-wasserstein-matchings"]], "Add node features": [[29, "add-node-features"], [35, "add-node-features"]], "Compute their semi-relaxed Fused Gromov-Wasserstein divergences": [[29, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"], [35, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"]], "Visualization of the entropic semi-relaxed Fused Gromov-Wasserstein matchings": [[29, "visualization-of-the-entropic-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Plot Fused-Gromov-Wasserstein": [[30, "plot-fused-gromov-wasserstein"]], "Create structure matrices and across-feature distance matrix": [[30, "create-structure-matrices-and-across-feature-distance-matrix"]], "Plot matrices": [[30, "plot-matrices"]], "Compute FGW/GW": [[30, "compute-fgw-gw"]], "Visualize transport matrices": [[30, "visualize-transport-matrices"]], "Comparison of Fused Gromov-Wasserstein solvers": [[31, "comparison-of-fused-gromov-wasserstein-solvers"]], "Compute their Fused Gromov-Wasserstein distances": [[31, "compute-their-fused-gromov-wasserstein-distances"]], "Visualization of the Fused Gromov-Wasserstein matchings": [[31, "visualization-of-the-fused-gromov-wasserstein-matchings"]], "Gromov-Wasserstein example": [[32, "gromov-wasserstein-example"]], "Sample two Gaussian distributions (2D and 3D)": [[32, "sample-two-gaussian-distributions-2d-and-3d"]], "Plotting the distributions": [[32, "plotting-the-distributions"]], "Compute distance kernels, normalize them and then display": [[32, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute Gromov-Wasserstein plans and distance": [[32, "compute-gromov-wasserstein-plans-and-distance"]], "Compute GW with scalable stochastic methods with any loss function": [[32, "compute-gw-with-scalable-stochastic-methods-with-any-loss-function"]], "Gromov-Wasserstein Barycenter example": [[33, "gromov-wasserstein-barycenter-example"]], "Smacof MDS": [[33, "smacof-mds"]], "Visualization": [[33, "visualization"]], "(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[34, "fused-gromov-wasserstein-linear-dictionary-learning"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[34, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Estimate the Gromov-Wasserstein dictionary from the dataset": [[34, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Visualization of the estimated dictionary atoms": [[34, "visualization-of-the-estimated-dictionary-atoms"], [34, "id1"]], "Visualization of the embedding space": [[34, "visualization-of-the-embedding-space"], [34, "id2"]], "Endow the dataset with node features": [[34, "endow-the-dataset-with-node-features"]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[34, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Semi-relaxed (Fused) Gromov-Wasserstein example": [[35, "semi-relaxed-fused-gromov-wasserstein-example"]], "Compute their semi-relaxed Gromov-Wasserstein divergences": [[35, "compute-their-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the semi-relaxed Gromov-Wasserstein matchings": [[35, "visualization-of-the-semi-relaxed-gromov-wasserstein-matchings"]], "Visualization of the semi-relaxed Fused Gromov-Wasserstein matchings": [[35, "visualization-of-the-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Examples gallery": [[37, "examples-gallery"]], "OT and regularized OT": [[37, "ot-and-regularized-ot"]], "POT backend examples": [[37, "pot-backend-examples"]], "Wasserstein barycenters": [[37, "wasserstein-barycenters"]], "Domain adaptation examples": [[37, "domain-adaptation-examples"]], "Gromov and Fused-Gromov-Wasserstein": [[37, "gromov-and-fused-gromov-wasserstein"]], "Other OT problems": [[37, "other-ot-problems"]], "Sliced Wasserstein Distance": [[37, "sliced-wasserstein-distance"]], "Unbalanced and Partial OT": [[37, "unbalanced-and-partial-ot"]], "Row and column alignments with CO-Optimal Transport": [[38, "row-and-column-alignments-with-co-optimal-transport"]], "Entropic Wasserstein Component Analysis": [[39, "entropic-wasserstein-component-analysis"]], "Compute EWCA": [[39, "compute-ewca"]], "Plot data, first component, and projected data": [[39, "plot-data-first-component-and-projected-data"]], "Plot transport plan": [[39, "plot-transport-plan"]], "Wasserstein Discriminant Analysis": [[40, "wasserstein-discriminant-analysis"], [90, "wasserstein-discriminant-analysis"]], "Compute Fisher Discriminant Analysis": [[40, "compute-fisher-discriminant-analysis"]], "Compute Wasserstein Discriminant Analysis": [[40, "compute-wasserstein-discriminant-analysis"]], "Plot 2D projections": [[40, "plot-2d-projections"]], "Weak Optimal Transport VS exact Optimal Transport": [[41, "weak-optimal-transport-vs-exact-optimal-transport"]], "Generate data an plot it": [[41, "generate-data-an-plot-it"], [42, "generate-data-an-plot-it"]], "Compute Weak OT and exact OT solutions": [[41, "compute-weak-ot-and-exact-ot-solutions"]], "Plot weak OT and exact OT solutions": [[41, "plot-weak-ot-and-exact-ot-solutions"]], "Optimal transport with factored couplings": [[42, "optimal-transport-with-factored-couplings"]], "Compute Factored OT and exact OT solutions": [[42, "compute-factored-ot-and-exact-ot-solutions"]], "Plot factored OT and exact OT solutions": [[42, "plot-factored-ot-and-exact-ot-solutions"]], "Learning sample marginal distribution with CO-Optimal Transport": [[43, "learning-sample-marginal-distribution-with-co-optimal-transport"]], "Optimize the COOT distance with respect to the sample marginal distribution": [[43, "optimize-the-coot-distance-with-respect-to-the-sample-marginal-distribution"]], "Visualizing the row and column alignments with the estimated sample marginal distribution": [[43, "visualizing-the-row-and-column-alignments-with-the-estimated-sample-marginal-distribution"]], "Logo of the POT toolbox": [[44, "logo-of-the-pot-toolbox"]], "Data for logo": [[44, "data-for-logo"]], "Plot the logo (clear background)": [[44, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[44, "plot-the-logo-dark-background"]], "Screened optimal transport (Screenkhorn)": [[45, "screened-optimal-transport-screenkhorn"]], "Plot distributions and loss matrix": [[45, "plot-distributions-and-loss-matrix"], [49, "plot-distributions-and-loss-matrix"], [50, "plot-distributions-and-loss-matrix"], [60, "plot-distributions-and-loss-matrix"]], "Solve Screenkhorn": [[45, "solve-screenkhorn"]], "Stochastic examples": [[46, "stochastic-examples"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[46, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Discrete case": [[46, "discrete-case"]], "Semi-Continuous Case": [[46, "semi-continuous-case"]], "Plot Transportation Matrices": [[46, "plot-transportation-matrices"], [46, "id2"]], "Compute the Transportation Matrix for the Dual Problem": [[46, "compute-the-transportation-matrix-for-the-dual-problem"]], "Semi-continuous case": [[46, "id1"]], "Compare the results with the Sinkhorn algorithm": [[46, "compare-the-results-with-the-sinkhorn-algorithm"]], "Introduction to Optimal Transport with Python": [[48, "introduction-to-optimal-transport-with-python"]], "POT Python Optimal Transport Toolbox": [[48, "pot-python-optimal-transport-toolbox"]], "POT installation": [[48, "pot-installation"]], "Import the toolbox": [[48, "import-the-toolbox"]], "Getting help": [[48, "getting-help"]], "First OT Problem": [[48, "first-ot-problem"]], "Plotting bakeries in the city": [[48, "plotting-bakeries-in-the-city"]], "Cost matrix": [[48, "cost-matrix"]], "Solving the OT problem with ot.emd": [[48, "solving-the-ot-problem-with-ot-emd"]], "Transportation plan visualization": [[48, "transportation-plan-visualization"]], "OT loss and dual variables": [[48, "ot-loss-and-dual-variables"]], "Regularized OT with Sinkhorn": [[48, "regularized-ot-with-sinkhorn"]], "Algorithm": [[48, "algorithm"]], "Plot the matrix and the map": [[48, "plot-the-matrix-and-the-map"]], "Varying the regularization parameter in Sinkhorn": [[48, "varying-the-regularization-parameter-in-sinkhorn"]], "Wasserstein loss and computational time": [[48, "wasserstein-loss-and-computational-time"]], "Optimal Transport for 1D distributions": [[49, "optimal-transport-for-1d-distributions"]], "Solve EMD": [[49, "solve-emd"], [55, "solve-emd"]], "Solve Sinkhorn": [[49, "solve-sinkhorn"]], "Smooth and sparse OT example": [[50, "smooth-and-sparse-ot-example"]], "Solve Smooth OT": [[50, "solve-smooth-ot"]], "Optimal Transport between 2D empirical distributions": [[51, "optimal-transport-between-2d-empirical-distributions"]], "Compute EMD": [[51, "compute-emd"]], "Compute Sinkhorn": [[51, "compute-sinkhorn"]], "Empirical Sinkhorn": [[51, "empirical-sinkhorn"]], "Optimal Transport with different ground metrics": [[52, "optimal-transport-with-different-ground-metrics"]], "Dataset 1 : uniform sampling": [[52, "dataset-1-uniform-sampling"]], "Dataset 1 : Plot OT Matrices": [[52, "dataset-1-plot-ot-matrices"]], "Dataset 2 : Partial circle": [[52, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[52, "dataset-2-plot-ot-matrices"]], "OT distances in 1D": [[53, "ot-distances-in-1d"]], "Compute EMD for the different losses": [[53, "compute-emd-for-the-different-losses"]], "Compute Sinkhorn for the different losses": [[53, "compute-sinkhorn-for-the-different-losses"]], "OT distance on the Circle": [[54, "ot-distance-on-the-circle"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[54, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Wasserstein distance between von Mises and uniform for different kappa": [[54, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Regularized OT with generic solver": [[55, "regularized-ot-with-generic-solver"]], "Solve EMD with Frobenius norm regularization": [[55, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[55, "solve-emd-with-entropic-regularization"]], "Solve EMD with Frobenius norm + entropic regularization": [[55, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Sliced Wasserstein Distance on 2D distributions": [[57, "sliced-wasserstein-distance-on-2d-distributions"]], "Sliced Wasserstein distance for different seeds and number of projections": [[57, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Plot Sliced Wasserstein Distance": [[57, "plot-sliced-wasserstein-distance"]], "Spherical Sliced Wasserstein on distributions in S^2": [[58, "spherical-sliced-wasserstein-on-distributions-in-s-2"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[58, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Plot Spherical Sliced Wasserstein": [[58, "plot-spherical-sliced-wasserstein"]], "1D Unbalanced optimal transport": [[60, "d-unbalanced-optimal-transport"]], "Solve Unbalanced Sinkhorn": [[60, "solve-unbalanced-sinkhorn"]], "plot the transported mass": [[60, "plot-the-transported-mass"]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[61, "d-wasserstein-barycenter-demo-for-unbalanced-distributions"]], "Partial Wasserstein and Gromov-Wasserstein example": [[62, "partial-wasserstein-and-gromov-wasserstein-example"]], "Sample two 2D Gaussian distributions and plot them": [[62, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Compute partial Wasserstein plans and distance": [[62, "compute-partial-wasserstein-plans-and-distance"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[62, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Compute partial Gromov-Wasserstein plans and distance": [[62, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Regularization path of l2-penalized unbalanced optimal transport": [[63, "regularization-path-of-l2-penalized-unbalanced-optimal-transport"]], "Compute semi-relaxed and fully relaxed regularization paths": [[63, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Plot the regularization path": [[63, "plot-the-regularization-path"]], "Animation of the regpath for UOT l2": [[63, "animation-of-the-regpath-for-uot-l2"]], "Plot the semi-relaxed regularization path": [[63, "plot-the-semi-relaxed-regularization-path"]], "Animation of the regpath for semi-relaxed UOT l2": [[63, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "2D examples of exact and entropic unbalanced optimal transport": [[64, "d-examples-of-exact-and-entropic-unbalanced-optimal-transport"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[64, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Plot the results": [[64, "plot-the-results"]], "Code of conduct": [[66, "code-of-conduct"]], "Our Pledge": [[66, "our-pledge"]], "Our Standards": [[66, "our-standards"]], "Our Responsibilities": [[66, "our-responsibilities"]], "Scope": [[66, "scope"]], "Enforcement": [[66, "enforcement"]], "Attribution": [[66, "attribution"]], "Contributing to POT": [[67, "contributing-to-pot"]], "How to contribute": [[67, "how-to-contribute"]], "Pull Request Checklist": [[67, "pull-request-checklist"]], "Filing bugs": [[67, "filing-bugs"]], "New contributor tips": [[67, "new-contributor-tips"]], "Documentation": [[67, "documentation"]], "Contributors": [[68, "contributors"], [68, "contributors"]], "Creators and Maintainers": [[68, "creators-and-maintainers"]], "Acknowledgments": [[68, "acknowledgments"]], "ot.backend": [[69, "module-ot.backend"]], "Performance": [[69, "performance"]], "Functions": [[69, "functions"], [70, "functions"], [71, "functions"], [72, "functions"], [73, "functions"], [74, "functions"], [75, "functions"], [76, "functions"], [78, "functions"], [79, "functions"], [80, "functions"], [81, "functions"], [82, "functions"], [83, "functions"], [84, "functions"], [85, "functions"], [86, "functions"], [87, "functions"], [88, "functions"]], "Classes": [[69, "classes"], [72, "classes"], [84, "classes"], [87, "classes"]], "ot.bregman": [[70, "module-ot.bregman"]], "Examples using ot.bregman.barycenter_debiased": [[70, "examples-using-ot-bregman-barycenter-debiased"]], "Examples using ot.bregman.convolutional_barycenter2d": [[70, "examples-using-ot-bregman-convolutional-barycenter2d"]], "Examples using ot.bregman.convolutional_barycenter2d_debiased": [[70, "examples-using-ot-bregman-convolutional-barycenter2d-debiased"]], "Examples using ot.bregman.empirical_sinkhorn": [[70, "examples-using-ot-bregman-empirical-sinkhorn"]], "Examples using ot.bregman.free_support_sinkhorn_barycenter": [[70, "examples-using-ot-bregman-free-support-sinkhorn-barycenter"]], "Dependency": [[70, null], [70, null]], "Examples using ot.bregman.screenkhorn": [[70, "examples-using-ot-bregman-screenkhorn"]], "ot.coot": [[71, "module-ot.coot"]], "Examples using ot.coot.co_optimal_transport": [[71, "examples-using-ot-coot-co-optimal-transport"]], "Examples using ot.coot.co_optimal_transport2": [[71, "examples-using-ot-coot-co-optimal-transport2"]], "ot.da": [[72, "module-ot.da"]], "Examples using ot.da.BaseTransport": [[72, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[72, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[72, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[72, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearTransport": [[72, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[72, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[72, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[72, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[72, "examples-using-ot-da-sinkhorntransport"]], "ot.datasets": [[73, "module-ot.datasets"]], "Examples using ot.datasets.make_1D_gauss": [[73, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[73, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[73, "examples-using-ot-datasets-make-data-classif"]], "ot.dr": [[74, "module-ot.dr"]], "Examples using ot.dr.ewca": [[74, "examples-using-ot-dr-ewca"]], "Examples using ot.dr.fda": [[74, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[74, "examples-using-ot-dr-wda"]], "ot.factored": [[75, "module-ot.factored"]], "ot.gaussian": [[76, "module-ot.gaussian"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[76, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "ot.gromov": [[77, "module-ot.gromov"]], "ot.lp": [[78, "module-ot.lp"]], "Examples using ot.lp.free_support_barycenter": [[78, "examples-using-ot-lp-free-support-barycenter"]], "Examples using ot.lp.generalized_free_support_barycenter": [[78, "examples-using-ot-lp-generalized-free-support-barycenter"]], "ot.optim": [[79, "module-ot.optim"]], "Examples using ot.optim.cg": [[79, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[79, "examples-using-ot-optim-gcg"]], "ot.partial": [[80, "module-ot.partial"]], "Examples using ot.partial.entropic_partial_gromov_wasserstein": [[80, "examples-using-ot-partial-entropic-partial-gromov-wasserstein"]], "Examples using ot.partial.entropic_partial_wasserstein": [[80, "examples-using-ot-partial-entropic-partial-wasserstein"]], "Examples using ot.partial.partial_gromov_wasserstein": [[80, "examples-using-ot-partial-partial-gromov-wasserstein"]], "Examples using ot.partial.partial_wasserstein": [[80, "examples-using-ot-partial-partial-wasserstein"]], "ot.plot": [[81, "module-ot.plot"]], "Examples using ot.plot.plot1D_mat": [[81, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[81, "examples-using-ot-plot-plot2d-samples-mat"]], "ot.regpath": [[82, "module-ot.regpath"]], "Examples using ot.regpath.compute_transport_plan": [[82, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[82, "examples-using-ot-regpath-regularization-path"]], "ot.sliced": [[83, "module-ot.sliced"]], "ot.smooth": [[84, "module-ot.smooth"]], "Examples using ot.smooth.smooth_ot_dual": [[84, "examples-using-ot-smooth-smooth-ot-dual"]], "ot.stochastic": [[85, "module-ot.stochastic"]], "Examples using ot.stochastic.loss_dual_entropic": [[85, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[85, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[85, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[85, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[85, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[85, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "ot.unbalanced": [[86, "module-ot.unbalanced"]], "Examples using ot.unbalanced.mm_unbalanced": [[86, "examples-using-ot-unbalanced-mm-unbalanced"]], "ot.utils": [[87, "module-ot.utils"]], "Examples using ot.utils.dist0": [[87, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_simplex": [[87, "examples-using-ot-utils-proj-simplex"]], "Examples using ot.utils.BaseEstimator": [[87, "examples-using-ot-utils-baseestimator"]], "Exceptions": [[87, "exceptions"]], "ot.weak": [[88, "module-ot.weak"]], "POT: Python Optimal Transport": [[89, "pot-python-optimal-transport"], [89, "pot-python-optimal-transport"]], "Contents": [[89, "contents"]], "Using and citing the toolbox": [[89, "using-and-citing-the-toolbox"]], "Installation": [[89, "installation"]], "Pip installation": [[89, "pip-installation"]], "Anaconda installation with conda-forge": [[89, "anaconda-installation-with-conda-forge"]], "Post installation check": [[89, "post-installation-check"]], "Dependencies": [[89, "dependencies"]], "Examples": [[89, "examples"]], "Short examples": [[89, "short-examples"]], "Examples and Notebooks": [[89, "examples-and-notebooks"]], "Acknowledgements": [[89, "acknowledgements"]], "Contributions and code of conduct": [[89, "contributions-and-code-of-conduct"]], "Support": [[89, "support"]], "References": [[89, "references"], [90, "references"]], "Indices and tables": [[89, "indices-and-tables"]], "Quick start guide": [[90, "quick-start-guide"]], "Why Optimal Transport ?": [[90, "why-optimal-transport"]], "When to use OT": [[90, "when-to-use-ot"]], "Wasserstein distance between distributions": [[90, "wasserstein-distance-between-distributions"]], "OT for mapping estimation": [[90, "ot-for-mapping-estimation"]], "When to use POT": [[90, "when-to-use-pot"]], "When not to use POT": [[90, "when-not-to-use-pot"]], "Optimal transport and Wasserstein distance": [[90, "optimal-transport-and-wasserstein-distance"]], "Solving optimal transport": [[90, "solving-optimal-transport"]], "Examples of use for ot.emd": [[90, "examples-of-use-for-ot-emd"]], "Computing Wasserstein distance": [[90, "computing-wasserstein-distance"]], "Examples of use for ot.emd2": [[90, "examples-of-use-for-ot-emd2"]], "Special cases": [[90, "special-cases"]], "Regularized Optimal Transport": [[90, "regularized-optimal-transport"]], "Entropic regularized OT": [[90, "entropic-regularized-ot"]], "Examples of use for ot.sinkhorn": [[90, "examples-of-use-for-ot-sinkhorn"]], "Examples of use for ot.sinkhorn2": [[90, "examples-of-use-for-ot-sinkhorn2"]], "Other regularizations": [[90, "other-regularizations"]], "Quadratic regularization": [[90, "quadratic-regularization"]], "Examples of use of quadratic regularization": [[90, "examples-of-use-of-quadratic-regularization"]], "Group Lasso regularization": [[90, "group-lasso-regularization"]], "Examples of group Lasso regularization": [[90, "examples-of-group-lasso-regularization"]], "Generic solvers": [[90, "generic-solvers"]], "Examples of the generic solvers": [[90, "examples-of-the-generic-solvers"]], "Wasserstein Barycenters": [[90, "wasserstein-barycenters"]], "Barycenters with fixed support": [[90, "barycenters-with-fixed-support"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[90, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[90, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Barycenters with free support": [[90, "barycenters-with-free-support"]], "Examples of free support barycenter estimation": [[90, "examples-of-free-support-barycenter-estimation"]], "Monge mapping and Domain adaptation": [[90, "monge-mapping-and-domain-adaptation"]], "Monge Mapping estimation": [[90, "monge-mapping-estimation"]], "Domain adaptation classes": [[90, "domain-adaptation-classes"]], "Examples of the use of OTDA classes": [[90, "examples-of-the-use-of-otda-classes"]], "Unbalanced and partial OT": [[90, "unbalanced-and-partial-ot"]], "Unbalanced optimal transport": [[90, "unbalanced-optimal-transport"]], "Examples of Unbalanced OT": [[90, "examples-of-unbalanced-ot"]], "Unbalanced Barycenters": [[90, "unbalanced-barycenters"]], "Examples of Unbalanced OT barycenters": [[90, "examples-of-unbalanced-ot-barycenters"]], "Partial optimal transport": [[90, "partial-optimal-transport"]], "Examples of Partial OT": [[90, "examples-of-partial-ot"]], "Gromov Wasserstein and extensions": [[90, "gromov-wasserstein-and-extensions"]], "Gromov Wasserstein(GW)": [[90, "gromov-wasserstein-gw"]], "Examples of computation of GW, regularized G and FGW": [[90, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Gromov Wasserstein barycenters": [[90, "gromov-wasserstein-barycenters"]], "Examples of GW, regularized G and FGW barycenters": [[90, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Other applications": [[90, "other-applications"]], "Examples of the use of WDA": [[90, "examples-of-the-use-of-wda"]], "Solving OT with Multiple backends on CPU/GPU": [[90, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "How it works": [[90, "how-it-works"]], "GPU acceleration": [[90, "gpu-acceleration"]], "List of compatible Backends": [[90, "list-of-compatible-backends"]], "List of compatible modules": [[90, "list-of-compatible-modules"]], "FAQ": [[90, "faq"]], "Releases": [[91, "releases"]], "0.9.1dev": [[91, "dev"]], "New features": [[91, "new-features"], [91, "id2"], [91, "id5"], [91, "id10"], [91, "id13"]], "Closed issues": [[91, "closed-issues"], [91, "id3"], [91, "id6"], [91, "id8"], [91, "id11"], [91, "id14"], [91, "id16"], [91, "id19"], [91, "id22"], [91, "id25"]], "0.9.0": [[91, "id1"]], "0.8.2": [[91, "id4"]], "0.8.1.0": [[91, "id7"]], "0.8.1": [[91, "id9"]], "0.8.0": [[91, "id12"]], "0.7.0": [[91, "id15"]], "Features": [[91, "features"], [91, "id18"], [91, "id21"], [91, "id24"]], "0.6.0": [[91, "id17"]], "0.5.0": [[91, "id20"]], "Deprecation": [[91, "deprecation"]], "0.4": [[91, "id23"]], "0.3.1": [[91, "id26"]], "0.3": [[91, "id27"]], "V0.2": [[91, "v0-2"]], "0.1.11": [[91, "id28"]], "0.1.10": [[91, "id29"]], "0.1.9": [[91, "id30"]], "0.1.7": [[91, "id31"]], "0.1.3": [[91, "id32"]], "First pre-release": [[91, "first-pre-release"]]}, "indexentries": {"barycenter() (in module ot)": [[0, "ot.barycenter"]], "barycenter_unbalanced() (in module ot)": [[0, "ot.barycenter_unbalanced"]], "binary_search_circle() (in module ot)": [[0, "ot.binary_search_circle"]], "dist() (in module ot)": [[0, "ot.dist"]], "emd() (in module ot)": [[0, "ot.emd"]], "emd2() (in module ot)": [[0, "ot.emd2"]], "emd2_1d() (in module ot)": [[0, "ot.emd2_1d"]], "emd_1d() (in module ot)": [[0, "ot.emd_1d"]], "factored_optimal_transport() (in module ot)": [[0, "ot.factored_optimal_transport"]], "fused_gromov_wasserstein() (in module ot)": [[0, "ot.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot)": [[0, "ot.fused_gromov_wasserstein2"]], "gromov_barycenters() (in module ot)": [[0, "ot.gromov_barycenters"]], "gromov_wasserstein() (in module ot)": [[0, "ot.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot)": [[0, "ot.gromov_wasserstein2"]], "max_sliced_wasserstein_distance() (in module ot)": [[0, "ot.max_sliced_wasserstein_distance"]], "module": [[0, "module-ot"], [69, "module-ot.backend"], [70, "module-ot.bregman"], [71, "module-ot.coot"], [72, "module-ot.da"], [73, "module-ot.datasets"], [74, "module-ot.dr"], [75, "module-ot.factored"], [76, "module-ot.gaussian"], [77, "module-ot.gromov"], [78, "module-ot.lp"], [79, "module-ot.optim"], [80, "module-ot.partial"], [81, "module-ot.plot"], [82, "module-ot.regpath"], [83, "module-ot.sliced"], [84, "module-ot.smooth"], [85, "module-ot.stochastic"], [86, "module-ot.unbalanced"], [87, "module-ot.utils"], [88, "module-ot.weak"]], "ot": [[0, "module-ot"]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[0, "ot.semidiscrete_wasserstein2_unif_circle"]], "sinkhorn() (in module ot)": [[0, "ot.sinkhorn"]], "sinkhorn2() (in module ot)": [[0, "ot.sinkhorn2"]], "sinkhorn_lpl1_mm() (in module ot)": [[0, "ot.sinkhorn_lpl1_mm"]], "sinkhorn_unbalanced() (in module ot)": [[0, "ot.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot)": [[0, "ot.sinkhorn_unbalanced2"]], "sliced_wasserstein_distance() (in module ot)": [[0, "ot.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot)": [[0, "ot.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot)": [[0, "ot.sliced_wasserstein_sphere_unif"]], "solve() (in module ot)": [[0, "ot.solve"]], "tic() (in module ot)": [[0, "ot.tic"]], "toc() (in module ot)": [[0, "ot.toc"]], "toq() (in module ot)": [[0, "ot.toq"]], "unif() (in module ot)": [[0, "ot.unif"]], "wasserstein_1d() (in module ot)": [[0, "ot.wasserstein_1d"]], "wasserstein_circle() (in module ot)": [[0, "ot.wasserstein_circle"]], "weak_optimal_transport() (in module ot)": [[0, "ot.weak_optimal_transport"]], "backend (class in ot.backend)": [[69, "id0"], [69, "ot.backend.Backend"]], "cupybackend (class in ot.backend)": [[69, "id81"], [69, "ot.backend.CupyBackend"]], "jaxbackend (class in ot.backend)": [[69, "id160"], [69, "ot.backend.JaxBackend"]], "numpybackend (class in ot.backend)": [[69, "id239"], [69, "ot.backend.NumpyBackend"]], "tensorflowbackend (class in ot.backend)": [[69, "id318"], [69, "ot.backend.TensorflowBackend"]], "torchbackend (class in ot.backend)": [[69, "id397"], [69, "ot.backend.TorchBackend"]], "abs() (ot.backend.backend method)": [[69, "id1"], [69, "ot.backend.Backend.abs"]], "abs() (ot.backend.cupybackend method)": [[69, "id82"], [69, "ot.backend.CupyBackend.abs"]], "abs() (ot.backend.jaxbackend method)": [[69, "id161"], [69, "ot.backend.JaxBackend.abs"]], "abs() (ot.backend.numpybackend method)": [[69, "id240"], [69, "ot.backend.NumpyBackend.abs"]], "abs() (ot.backend.tensorflowbackend method)": [[69, "id319"], [69, "ot.backend.TensorflowBackend.abs"]], "abs() (ot.backend.torchbackend method)": [[69, "id398"], [69, "ot.backend.TorchBackend.abs"]], "allclose() (ot.backend.backend method)": [[69, "id2"], [69, "ot.backend.Backend.allclose"]], "allclose() (ot.backend.cupybackend method)": [[69, "id83"], [69, "ot.backend.CupyBackend.allclose"]], "allclose() (ot.backend.jaxbackend method)": [[69, "id162"], [69, "ot.backend.JaxBackend.allclose"]], "allclose() (ot.backend.numpybackend method)": [[69, "id241"], [69, "ot.backend.NumpyBackend.allclose"]], "allclose() (ot.backend.tensorflowbackend method)": [[69, "id320"], [69, "ot.backend.TensorflowBackend.allclose"]], "allclose() (ot.backend.torchbackend method)": [[69, "id399"], [69, "ot.backend.TorchBackend.allclose"]], "any() (ot.backend.backend method)": [[69, "id3"], [69, "ot.backend.Backend.any"]], "any() (ot.backend.cupybackend method)": [[69, "id84"], [69, "ot.backend.CupyBackend.any"]], "any() (ot.backend.jaxbackend method)": [[69, "id163"], [69, "ot.backend.JaxBackend.any"]], "any() (ot.backend.numpybackend method)": [[69, "id242"], [69, "ot.backend.NumpyBackend.any"]], "any() (ot.backend.tensorflowbackend method)": [[69, "id321"], [69, "ot.backend.TensorflowBackend.any"]], "any() (ot.backend.torchbackend method)": [[69, "id400"], [69, "ot.backend.TorchBackend.any"]], "arange() (ot.backend.backend method)": [[69, "id4"], [69, "ot.backend.Backend.arange"]], "arange() (ot.backend.cupybackend method)": [[69, "id85"], [69, "ot.backend.CupyBackend.arange"]], "arange() (ot.backend.jaxbackend method)": [[69, "id164"], [69, "ot.backend.JaxBackend.arange"]], "arange() (ot.backend.numpybackend method)": [[69, "id243"], [69, "ot.backend.NumpyBackend.arange"]], "arange() (ot.backend.tensorflowbackend method)": [[69, "id322"], [69, "ot.backend.TensorflowBackend.arange"]], "arange() (ot.backend.torchbackend method)": [[69, "id401"], [69, "ot.backend.TorchBackend.arange"]], "argmax() (ot.backend.backend method)": [[69, "id5"], [69, "ot.backend.Backend.argmax"]], "argmax() (ot.backend.cupybackend method)": [[69, "id86"], [69, "ot.backend.CupyBackend.argmax"]], "argmax() (ot.backend.jaxbackend method)": [[69, "id165"], [69, "ot.backend.JaxBackend.argmax"]], "argmax() (ot.backend.numpybackend method)": [[69, "id244"], [69, "ot.backend.NumpyBackend.argmax"]], "argmax() (ot.backend.tensorflowbackend method)": [[69, "id323"], [69, "ot.backend.TensorflowBackend.argmax"]], "argmax() (ot.backend.torchbackend method)": [[69, "id402"], [69, "ot.backend.TorchBackend.argmax"]], "argmin() (ot.backend.backend method)": [[69, "id6"], [69, "ot.backend.Backend.argmin"]], "argmin() (ot.backend.cupybackend method)": [[69, "id87"], [69, "ot.backend.CupyBackend.argmin"]], "argmin() (ot.backend.jaxbackend method)": [[69, "id166"], [69, "ot.backend.JaxBackend.argmin"]], "argmin() (ot.backend.numpybackend method)": [[69, "id245"], [69, "ot.backend.NumpyBackend.argmin"]], "argmin() (ot.backend.tensorflowbackend method)": [[69, "id324"], [69, "ot.backend.TensorflowBackend.argmin"]], "argmin() (ot.backend.torchbackend method)": [[69, "id403"], [69, "ot.backend.TorchBackend.argmin"]], "argsort() (ot.backend.backend method)": [[69, "id7"], [69, "ot.backend.Backend.argsort"]], "argsort() (ot.backend.cupybackend method)": [[69, "id88"], [69, "ot.backend.CupyBackend.argsort"]], "argsort() (ot.backend.jaxbackend method)": [[69, "id167"], [69, "ot.backend.JaxBackend.argsort"]], "argsort() (ot.backend.numpybackend method)": [[69, "id246"], [69, "ot.backend.NumpyBackend.argsort"]], "argsort() (ot.backend.tensorflowbackend method)": [[69, "id325"], [69, "ot.backend.TensorflowBackend.argsort"]], "argsort() (ot.backend.torchbackend method)": [[69, "id404"], [69, "ot.backend.TorchBackend.argsort"]], "array_equal() (ot.backend.backend method)": [[69, "id8"], [69, "ot.backend.Backend.array_equal"]], "array_equal() (ot.backend.cupybackend method)": [[69, "id89"], [69, "ot.backend.CupyBackend.array_equal"]], "array_equal() (ot.backend.jaxbackend method)": [[69, "id168"], [69, "ot.backend.JaxBackend.array_equal"]], "array_equal() (ot.backend.numpybackend method)": [[69, "id247"], [69, "ot.backend.NumpyBackend.array_equal"]], "array_equal() (ot.backend.tensorflowbackend method)": [[69, "id326"], [69, "ot.backend.TensorflowBackend.array_equal"]], "array_equal() (ot.backend.torchbackend method)": [[69, "id405"], [69, "ot.backend.TorchBackend.array_equal"]], "assert_same_dtype_device() (ot.backend.backend method)": [[69, "id9"], [69, "ot.backend.Backend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[69, "id90"], [69, "ot.backend.CupyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[69, "id169"], [69, "ot.backend.JaxBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[69, "id248"], [69, "ot.backend.NumpyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[69, "id327"], [69, "ot.backend.TensorflowBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[69, "id406"], [69, "ot.backend.TorchBackend.assert_same_dtype_device"]], "atan2() (ot.backend.backend method)": [[69, "id10"], [69, "ot.backend.Backend.atan2"]], "atan2() (ot.backend.cupybackend method)": [[69, "id91"], [69, "ot.backend.CupyBackend.atan2"]], "atan2() (ot.backend.jaxbackend method)": [[69, "id170"], [69, "ot.backend.JaxBackend.atan2"]], "atan2() (ot.backend.numpybackend method)": [[69, "id249"], [69, "ot.backend.NumpyBackend.atan2"]], "atan2() (ot.backend.tensorflowbackend method)": [[69, "id328"], [69, "ot.backend.TensorflowBackend.atan2"]], "atan2() (ot.backend.torchbackend method)": [[69, "id407"], [69, "ot.backend.TorchBackend.atan2"]], "bitsize() (ot.backend.backend method)": [[69, "id11"], [69, "ot.backend.Backend.bitsize"]], "bitsize() (ot.backend.cupybackend method)": [[69, "id92"], [69, "ot.backend.CupyBackend.bitsize"]], "bitsize() (ot.backend.jaxbackend method)": [[69, "id171"], [69, "ot.backend.JaxBackend.bitsize"]], "bitsize() (ot.backend.numpybackend method)": [[69, "id250"], [69, "ot.backend.NumpyBackend.bitsize"]], "bitsize() (ot.backend.tensorflowbackend method)": [[69, "id329"], [69, "ot.backend.TensorflowBackend.bitsize"]], "bitsize() (ot.backend.torchbackend method)": [[69, "id408"], [69, "ot.backend.TorchBackend.bitsize"]], "clip() (ot.backend.backend method)": [[69, "id12"], [69, "ot.backend.Backend.clip"]], "clip() (ot.backend.cupybackend method)": [[69, "id93"], [69, "ot.backend.CupyBackend.clip"]], "clip() (ot.backend.jaxbackend method)": [[69, "id172"], [69, "ot.backend.JaxBackend.clip"]], "clip() (ot.backend.numpybackend method)": [[69, "id251"], [69, "ot.backend.NumpyBackend.clip"]], "clip() (ot.backend.tensorflowbackend method)": [[69, "id330"], [69, "ot.backend.TensorflowBackend.clip"]], "clip() (ot.backend.torchbackend method)": [[69, "id409"], [69, "ot.backend.TorchBackend.clip"]], "concatenate() (ot.backend.backend method)": [[69, "id13"], [69, "ot.backend.Backend.concatenate"]], "concatenate() (ot.backend.cupybackend method)": [[69, "id94"], [69, "ot.backend.CupyBackend.concatenate"]], "concatenate() (ot.backend.jaxbackend method)": [[69, "id173"], [69, "ot.backend.JaxBackend.concatenate"]], "concatenate() (ot.backend.numpybackend method)": [[69, "id252"], [69, "ot.backend.NumpyBackend.concatenate"]], "concatenate() (ot.backend.tensorflowbackend method)": [[69, "id331"], [69, "ot.backend.TensorflowBackend.concatenate"]], "concatenate() (ot.backend.torchbackend method)": [[69, "id410"], [69, "ot.backend.TorchBackend.concatenate"]], "coo_matrix() (ot.backend.backend method)": [[69, "id14"], [69, "ot.backend.Backend.coo_matrix"]], "coo_matrix() (ot.backend.cupybackend method)": [[69, "id95"], [69, "ot.backend.CupyBackend.coo_matrix"]], "coo_matrix() (ot.backend.jaxbackend method)": [[69, "id174"], [69, "ot.backend.JaxBackend.coo_matrix"]], "coo_matrix() (ot.backend.numpybackend method)": [[69, "id253"], [69, "ot.backend.NumpyBackend.coo_matrix"]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[69, "id332"], [69, "ot.backend.TensorflowBackend.coo_matrix"]], "coo_matrix() (ot.backend.torchbackend method)": [[69, "id411"], [69, "ot.backend.TorchBackend.coo_matrix"]], "copy() (ot.backend.backend method)": [[69, "id15"], [69, "ot.backend.Backend.copy"]], "copy() (ot.backend.cupybackend method)": [[69, "id96"], [69, "ot.backend.CupyBackend.copy"]], "copy() (ot.backend.jaxbackend method)": [[69, "id175"], [69, "ot.backend.JaxBackend.copy"]], "copy() (ot.backend.numpybackend method)": [[69, "id254"], [69, "ot.backend.NumpyBackend.copy"]], "copy() (ot.backend.tensorflowbackend method)": [[69, "id333"], [69, "ot.backend.TensorflowBackend.copy"]], "copy() (ot.backend.torchbackend method)": [[69, "id412"], [69, "ot.backend.TorchBackend.copy"]], "cumsum() (ot.backend.backend method)": [[69, "id16"], [69, "ot.backend.Backend.cumsum"]], "cumsum() (ot.backend.cupybackend method)": [[69, "id97"], [69, "ot.backend.CupyBackend.cumsum"]], "cumsum() (ot.backend.jaxbackend method)": [[69, "id176"], [69, "ot.backend.JaxBackend.cumsum"]], "cumsum() (ot.backend.numpybackend method)": [[69, "id255"], [69, "ot.backend.NumpyBackend.cumsum"]], "cumsum() (ot.backend.tensorflowbackend method)": [[69, "id334"], [69, "ot.backend.TensorflowBackend.cumsum"]], "cumsum() (ot.backend.torchbackend method)": [[69, "id413"], [69, "ot.backend.TorchBackend.cumsum"]], "detach() (ot.backend.backend method)": [[69, "id17"], [69, "ot.backend.Backend.detach"]], "detach() (ot.backend.cupybackend method)": [[69, "id98"], [69, "ot.backend.CupyBackend.detach"]], "detach() (ot.backend.jaxbackend method)": [[69, "id177"], [69, "ot.backend.JaxBackend.detach"]], "detach() (ot.backend.numpybackend method)": [[69, "id256"], [69, "ot.backend.NumpyBackend.detach"]], "detach() (ot.backend.tensorflowbackend method)": [[69, "id335"], [69, "ot.backend.TensorflowBackend.detach"]], "detach() (ot.backend.torchbackend method)": [[69, "id414"], [69, "ot.backend.TorchBackend.detach"]], "device_type() (ot.backend.backend method)": [[69, "id18"], [69, "ot.backend.Backend.device_type"]], "device_type() (ot.backend.cupybackend method)": [[69, "id99"], [69, "ot.backend.CupyBackend.device_type"]], "device_type() (ot.backend.jaxbackend method)": [[69, "id178"], [69, "ot.backend.JaxBackend.device_type"]], "device_type() (ot.backend.numpybackend method)": [[69, "id257"], [69, "ot.backend.NumpyBackend.device_type"]], "device_type() (ot.backend.tensorflowbackend method)": [[69, "id336"], [69, "ot.backend.TensorflowBackend.device_type"]], "device_type() (ot.backend.torchbackend method)": [[69, "id415"], [69, "ot.backend.TorchBackend.device_type"]], "diag() (ot.backend.backend method)": [[69, "id19"], [69, "ot.backend.Backend.diag"]], "diag() (ot.backend.cupybackend method)": [[69, "id100"], [69, "ot.backend.CupyBackend.diag"]], "diag() (ot.backend.jaxbackend method)": [[69, "id179"], [69, "ot.backend.JaxBackend.diag"]], "diag() (ot.backend.numpybackend method)": [[69, "id258"], [69, "ot.backend.NumpyBackend.diag"]], "diag() (ot.backend.tensorflowbackend method)": [[69, "id337"], [69, "ot.backend.TensorflowBackend.diag"]], "diag() (ot.backend.torchbackend method)": [[69, "id416"], [69, "ot.backend.TorchBackend.diag"]], "dot() (ot.backend.backend method)": [[69, "id20"], [69, "ot.backend.Backend.dot"]], "dot() (ot.backend.cupybackend method)": [[69, "id101"], [69, "ot.backend.CupyBackend.dot"]], "dot() (ot.backend.jaxbackend method)": [[69, "id180"], [69, "ot.backend.JaxBackend.dot"]], "dot() (ot.backend.numpybackend method)": [[69, "id259"], [69, "ot.backend.NumpyBackend.dot"]], "dot() (ot.backend.tensorflowbackend method)": [[69, "id338"], [69, "ot.backend.TensorflowBackend.dot"]], "dot() (ot.backend.torchbackend method)": [[69, "id417"], [69, "ot.backend.TorchBackend.dot"]], "dtype_device() (ot.backend.backend method)": [[69, "id21"], [69, "ot.backend.Backend.dtype_device"]], "dtype_device() (ot.backend.cupybackend method)": [[69, "id102"], [69, "ot.backend.CupyBackend.dtype_device"]], "dtype_device() (ot.backend.jaxbackend method)": [[69, "id181"], [69, "ot.backend.JaxBackend.dtype_device"]], "dtype_device() (ot.backend.numpybackend method)": [[69, "id260"], [69, "ot.backend.NumpyBackend.dtype_device"]], "dtype_device() (ot.backend.tensorflowbackend method)": [[69, "id339"], [69, "ot.backend.TensorflowBackend.dtype_device"]], "dtype_device() (ot.backend.torchbackend method)": [[69, "id418"], [69, "ot.backend.TorchBackend.dtype_device"]], "einsum() (ot.backend.backend method)": [[69, "id22"], [69, "ot.backend.Backend.einsum"]], "einsum() (ot.backend.cupybackend method)": [[69, "id103"], [69, "ot.backend.CupyBackend.einsum"]], "einsum() (ot.backend.jaxbackend method)": [[69, "id182"], [69, "ot.backend.JaxBackend.einsum"]], "einsum() (ot.backend.numpybackend method)": [[69, "id261"], [69, "ot.backend.NumpyBackend.einsum"]], "einsum() (ot.backend.tensorflowbackend method)": [[69, "id340"], [69, "ot.backend.TensorflowBackend.einsum"]], "einsum() (ot.backend.torchbackend method)": [[69, "id419"], [69, "ot.backend.TorchBackend.einsum"]], "eliminate_zeros() (ot.backend.backend method)": [[69, "id23"], [69, "ot.backend.Backend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.cupybackend method)": [[69, "id104"], [69, "ot.backend.CupyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[69, "id183"], [69, "ot.backend.JaxBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.numpybackend method)": [[69, "id262"], [69, "ot.backend.NumpyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[69, "id341"], [69, "ot.backend.TensorflowBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.torchbackend method)": [[69, "id420"], [69, "ot.backend.TorchBackend.eliminate_zeros"]], "exp() (ot.backend.backend method)": [[69, "id24"], [69, "ot.backend.Backend.exp"]], "exp() (ot.backend.cupybackend method)": [[69, "id105"], [69, "ot.backend.CupyBackend.exp"]], "exp() (ot.backend.jaxbackend method)": [[69, "id184"], [69, "ot.backend.JaxBackend.exp"]], "exp() (ot.backend.numpybackend method)": [[69, "id263"], [69, "ot.backend.NumpyBackend.exp"]], "exp() (ot.backend.tensorflowbackend method)": [[69, "id342"], [69, "ot.backend.TensorflowBackend.exp"]], "exp() (ot.backend.torchbackend method)": [[69, "id421"], [69, "ot.backend.TorchBackend.exp"]], "eye() (ot.backend.backend method)": [[69, "id25"], [69, "ot.backend.Backend.eye"]], "eye() (ot.backend.cupybackend method)": [[69, "id106"], [69, "ot.backend.CupyBackend.eye"]], "eye() (ot.backend.jaxbackend method)": [[69, "id185"], [69, "ot.backend.JaxBackend.eye"]], "eye() (ot.backend.numpybackend method)": [[69, "id264"], [69, "ot.backend.NumpyBackend.eye"]], "eye() (ot.backend.tensorflowbackend method)": [[69, "id343"], [69, "ot.backend.TensorflowBackend.eye"]], "eye() (ot.backend.torchbackend method)": [[69, "id422"], [69, "ot.backend.TorchBackend.eye"]], "flip() (ot.backend.backend method)": [[69, "id26"], [69, "ot.backend.Backend.flip"]], "flip() (ot.backend.cupybackend method)": [[69, "id107"], [69, "ot.backend.CupyBackend.flip"]], "flip() (ot.backend.jaxbackend method)": [[69, "id186"], [69, "ot.backend.JaxBackend.flip"]], "flip() (ot.backend.numpybackend method)": [[69, "id265"], [69, "ot.backend.NumpyBackend.flip"]], "flip() (ot.backend.tensorflowbackend method)": [[69, "id344"], [69, "ot.backend.TensorflowBackend.flip"]], "flip() (ot.backend.torchbackend method)": [[69, "id423"], [69, "ot.backend.TorchBackend.flip"]], "floor() (ot.backend.backend method)": [[69, "id27"], [69, "ot.backend.Backend.floor"]], "floor() (ot.backend.cupybackend method)": [[69, "id108"], [69, "ot.backend.CupyBackend.floor"]], "floor() (ot.backend.jaxbackend method)": [[69, "id187"], [69, "ot.backend.JaxBackend.floor"]], "floor() (ot.backend.numpybackend method)": [[69, "id266"], [69, "ot.backend.NumpyBackend.floor"]], "floor() (ot.backend.tensorflowbackend method)": [[69, "id345"], [69, "ot.backend.TensorflowBackend.floor"]], "floor() (ot.backend.torchbackend method)": [[69, "id424"], [69, "ot.backend.TorchBackend.floor"]], "from_numpy() (ot.backend.backend method)": [[69, "id28"], [69, "ot.backend.Backend.from_numpy"]], "full() (ot.backend.backend method)": [[69, "id29"], [69, "ot.backend.Backend.full"]], "full() (ot.backend.cupybackend method)": [[69, "id109"], [69, "ot.backend.CupyBackend.full"]], "full() (ot.backend.jaxbackend method)": [[69, "id188"], [69, "ot.backend.JaxBackend.full"]], "full() (ot.backend.numpybackend method)": [[69, "id267"], [69, "ot.backend.NumpyBackend.full"]], "full() (ot.backend.tensorflowbackend method)": [[69, "id346"], [69, "ot.backend.TensorflowBackend.full"]], "full() (ot.backend.torchbackend method)": [[69, "id425"], [69, "ot.backend.TorchBackend.full"]], "get_backend() (in module ot.backend)": [[69, "id476"], [69, "ot.backend.get_backend"]], "get_backend_list() (in module ot.backend)": [[69, "id477"], [69, "ot.backend.get_backend_list"]], "inv() (ot.backend.backend method)": [[69, "id30"], [69, "ot.backend.Backend.inv"]], "inv() (ot.backend.cupybackend method)": [[69, "id110"], [69, "ot.backend.CupyBackend.inv"]], "inv() (ot.backend.jaxbackend method)": [[69, "id189"], [69, "ot.backend.JaxBackend.inv"]], "inv() (ot.backend.numpybackend method)": [[69, "id268"], [69, "ot.backend.NumpyBackend.inv"]], "inv() (ot.backend.tensorflowbackend method)": [[69, "id347"], [69, "ot.backend.TensorflowBackend.inv"]], "inv() (ot.backend.torchbackend method)": [[69, "id426"], [69, "ot.backend.TorchBackend.inv"]], "is_floating_point() (ot.backend.backend method)": [[69, "id31"], [69, "ot.backend.Backend.is_floating_point"]], "is_floating_point() (ot.backend.cupybackend method)": [[69, "id111"], [69, "ot.backend.CupyBackend.is_floating_point"]], "is_floating_point() (ot.backend.jaxbackend method)": [[69, "id190"], [69, "ot.backend.JaxBackend.is_floating_point"]], "is_floating_point() (ot.backend.numpybackend method)": [[69, "id269"], [69, "ot.backend.NumpyBackend.is_floating_point"]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[69, "id348"], [69, "ot.backend.TensorflowBackend.is_floating_point"]], "is_floating_point() (ot.backend.torchbackend method)": [[69, "id427"], [69, "ot.backend.TorchBackend.is_floating_point"]], "isfinite() (ot.backend.backend method)": [[69, "id32"], [69, "ot.backend.Backend.isfinite"]], "isfinite() (ot.backend.cupybackend method)": [[69, "id112"], [69, "ot.backend.CupyBackend.isfinite"]], "isfinite() (ot.backend.jaxbackend method)": [[69, "id191"], [69, "ot.backend.JaxBackend.isfinite"]], "isfinite() (ot.backend.numpybackend method)": [[69, "id270"], [69, "ot.backend.NumpyBackend.isfinite"]], "isfinite() (ot.backend.tensorflowbackend method)": [[69, "id349"], [69, "ot.backend.TensorflowBackend.isfinite"]], "isfinite() (ot.backend.torchbackend method)": [[69, "id428"], [69, "ot.backend.TorchBackend.isfinite"]], "isinf() (ot.backend.backend method)": [[69, "id33"], [69, "ot.backend.Backend.isinf"]], "isinf() (ot.backend.cupybackend method)": [[69, "id113"], [69, "ot.backend.CupyBackend.isinf"]], "isinf() (ot.backend.jaxbackend method)": [[69, "id192"], [69, "ot.backend.JaxBackend.isinf"]], "isinf() (ot.backend.numpybackend method)": [[69, "id271"], [69, "ot.backend.NumpyBackend.isinf"]], "isinf() (ot.backend.tensorflowbackend method)": [[69, "id350"], [69, "ot.backend.TensorflowBackend.isinf"]], "isinf() (ot.backend.torchbackend method)": [[69, "id429"], [69, "ot.backend.TorchBackend.isinf"]], "isnan() (ot.backend.backend method)": [[69, "id34"], [69, "ot.backend.Backend.isnan"]], "isnan() (ot.backend.cupybackend method)": [[69, "id114"], [69, "ot.backend.CupyBackend.isnan"]], "isnan() (ot.backend.jaxbackend method)": [[69, "id193"], [69, "ot.backend.JaxBackend.isnan"]], "isnan() (ot.backend.numpybackend method)": [[69, "id272"], [69, "ot.backend.NumpyBackend.isnan"]], "isnan() (ot.backend.tensorflowbackend method)": [[69, "id351"], [69, "ot.backend.TensorflowBackend.isnan"]], "isnan() (ot.backend.torchbackend method)": [[69, "id430"], [69, "ot.backend.TorchBackend.isnan"]], "issparse() (ot.backend.backend method)": [[69, "id35"], [69, "ot.backend.Backend.issparse"]], "issparse() (ot.backend.cupybackend method)": [[69, "id115"], [69, "ot.backend.CupyBackend.issparse"]], "issparse() (ot.backend.jaxbackend method)": [[69, "id194"], [69, "ot.backend.JaxBackend.issparse"]], "issparse() (ot.backend.numpybackend method)": [[69, "id273"], [69, "ot.backend.NumpyBackend.issparse"]], "issparse() (ot.backend.tensorflowbackend method)": [[69, "id352"], [69, "ot.backend.TensorflowBackend.issparse"]], "issparse() (ot.backend.torchbackend method)": [[69, "id431"], [69, "ot.backend.TorchBackend.issparse"]], "kl_div() (ot.backend.backend method)": [[69, "id36"], [69, "ot.backend.Backend.kl_div"]], "kl_div() (ot.backend.cupybackend method)": [[69, "id116"], [69, "ot.backend.CupyBackend.kl_div"]], "kl_div() (ot.backend.jaxbackend method)": [[69, "id195"], [69, "ot.backend.JaxBackend.kl_div"]], "kl_div() (ot.backend.numpybackend method)": [[69, "id274"], [69, "ot.backend.NumpyBackend.kl_div"]], "kl_div() (ot.backend.tensorflowbackend method)": [[69, "id353"], [69, "ot.backend.TensorflowBackend.kl_div"]], "kl_div() (ot.backend.torchbackend method)": [[69, "id432"], [69, "ot.backend.TorchBackend.kl_div"]], "linspace() (ot.backend.backend method)": [[69, "id37"], [69, "ot.backend.Backend.linspace"]], "linspace() (ot.backend.cupybackend method)": [[69, "id117"], [69, "ot.backend.CupyBackend.linspace"]], "linspace() (ot.backend.jaxbackend method)": [[69, "id196"], [69, "ot.backend.JaxBackend.linspace"]], "linspace() (ot.backend.numpybackend method)": [[69, "id275"], [69, "ot.backend.NumpyBackend.linspace"]], "linspace() (ot.backend.tensorflowbackend method)": [[69, "id354"], [69, "ot.backend.TensorflowBackend.linspace"]], "linspace() (ot.backend.torchbackend method)": [[69, "id433"], [69, "ot.backend.TorchBackend.linspace"]], "log() (ot.backend.backend method)": [[69, "id38"], [69, "ot.backend.Backend.log"]], "log() (ot.backend.cupybackend method)": [[69, "id118"], [69, "ot.backend.CupyBackend.log"]], "log() (ot.backend.jaxbackend method)": [[69, "id197"], [69, "ot.backend.JaxBackend.log"]], "log() (ot.backend.numpybackend method)": [[69, "id276"], [69, "ot.backend.NumpyBackend.log"]], "log() (ot.backend.tensorflowbackend method)": [[69, "id355"], [69, "ot.backend.TensorflowBackend.log"]], "log() (ot.backend.torchbackend method)": [[69, "id434"], [69, "ot.backend.TorchBackend.log"]], "logsumexp() (ot.backend.backend method)": [[69, "id39"], [69, "ot.backend.Backend.logsumexp"]], "logsumexp() (ot.backend.cupybackend method)": [[69, "id119"], [69, "ot.backend.CupyBackend.logsumexp"]], "logsumexp() (ot.backend.jaxbackend method)": [[69, "id198"], [69, "ot.backend.JaxBackend.logsumexp"]], "logsumexp() (ot.backend.numpybackend method)": [[69, "id277"], [69, "ot.backend.NumpyBackend.logsumexp"]], "logsumexp() (ot.backend.tensorflowbackend method)": [[69, "id356"], [69, "ot.backend.TensorflowBackend.logsumexp"]], "logsumexp() (ot.backend.torchbackend method)": [[69, "id435"], [69, "ot.backend.TorchBackend.logsumexp"]], "matmul() (ot.backend.backend method)": [[69, "id40"], [69, "ot.backend.Backend.matmul"]], "matmul() (ot.backend.cupybackend method)": [[69, "id120"], [69, "ot.backend.CupyBackend.matmul"]], "matmul() (ot.backend.jaxbackend method)": [[69, "id199"], [69, "ot.backend.JaxBackend.matmul"]], "matmul() (ot.backend.numpybackend method)": [[69, "id278"], [69, "ot.backend.NumpyBackend.matmul"]], "matmul() (ot.backend.tensorflowbackend method)": [[69, "id357"], [69, "ot.backend.TensorflowBackend.matmul"]], "matmul() (ot.backend.torchbackend method)": [[69, "id436"], [69, "ot.backend.TorchBackend.matmul"]], "max() (ot.backend.backend method)": [[69, "id41"], [69, "ot.backend.Backend.max"]], "max() (ot.backend.cupybackend method)": [[69, "id121"], [69, "ot.backend.CupyBackend.max"]], "max() (ot.backend.jaxbackend method)": [[69, "id200"], [69, "ot.backend.JaxBackend.max"]], "max() (ot.backend.numpybackend method)": [[69, "id279"], [69, "ot.backend.NumpyBackend.max"]], "max() (ot.backend.tensorflowbackend method)": [[69, "id358"], [69, "ot.backend.TensorflowBackend.max"]], "max() (ot.backend.torchbackend method)": [[69, "id437"], [69, "ot.backend.TorchBackend.max"]], "maximum() (ot.backend.backend method)": [[69, "id42"], [69, "ot.backend.Backend.maximum"]], "maximum() (ot.backend.cupybackend method)": [[69, "id122"], [69, "ot.backend.CupyBackend.maximum"]], "maximum() (ot.backend.jaxbackend method)": [[69, "id201"], [69, "ot.backend.JaxBackend.maximum"]], "maximum() (ot.backend.numpybackend method)": [[69, "id280"], [69, "ot.backend.NumpyBackend.maximum"]], "maximum() (ot.backend.tensorflowbackend method)": [[69, "id359"], [69, "ot.backend.TensorflowBackend.maximum"]], "maximum() (ot.backend.torchbackend method)": [[69, "id438"], [69, "ot.backend.TorchBackend.maximum"]], "mean() (ot.backend.backend method)": [[69, "id43"], [69, "ot.backend.Backend.mean"]], "mean() (ot.backend.cupybackend method)": [[69, "id123"], [69, "ot.backend.CupyBackend.mean"]], "mean() (ot.backend.jaxbackend method)": [[69, "id202"], [69, "ot.backend.JaxBackend.mean"]], "mean() (ot.backend.numpybackend method)": [[69, "id281"], [69, "ot.backend.NumpyBackend.mean"]], "mean() (ot.backend.tensorflowbackend method)": [[69, "id360"], [69, "ot.backend.TensorflowBackend.mean"]], "mean() (ot.backend.torchbackend method)": [[69, "id439"], [69, "ot.backend.TorchBackend.mean"]], "median() (ot.backend.backend method)": [[69, "id44"], [69, "ot.backend.Backend.median"]], "median() (ot.backend.cupybackend method)": [[69, "id124"], [69, "ot.backend.CupyBackend.median"]], "median() (ot.backend.jaxbackend method)": [[69, "id203"], [69, "ot.backend.JaxBackend.median"]], "median() (ot.backend.numpybackend method)": [[69, "id282"], [69, "ot.backend.NumpyBackend.median"]], "median() (ot.backend.tensorflowbackend method)": [[69, "id361"], [69, "ot.backend.TensorflowBackend.median"]], "median() (ot.backend.torchbackend method)": [[69, "id440"], [69, "ot.backend.TorchBackend.median"]], "meshgrid() (ot.backend.backend method)": [[69, "id45"], [69, "ot.backend.Backend.meshgrid"]], "meshgrid() (ot.backend.cupybackend method)": [[69, "id125"], [69, "ot.backend.CupyBackend.meshgrid"]], "meshgrid() (ot.backend.jaxbackend method)": [[69, "id204"], [69, "ot.backend.JaxBackend.meshgrid"]], "meshgrid() (ot.backend.numpybackend method)": [[69, "id283"], [69, "ot.backend.NumpyBackend.meshgrid"]], "meshgrid() (ot.backend.tensorflowbackend method)": [[69, "id362"], [69, "ot.backend.TensorflowBackend.meshgrid"]], "meshgrid() (ot.backend.torchbackend method)": [[69, "id441"], [69, "ot.backend.TorchBackend.meshgrid"]], "min() (ot.backend.backend method)": [[69, "id46"], [69, "ot.backend.Backend.min"]], "min() (ot.backend.cupybackend method)": [[69, "id126"], [69, "ot.backend.CupyBackend.min"]], "min() (ot.backend.jaxbackend method)": [[69, "id205"], [69, "ot.backend.JaxBackend.min"]], "min() (ot.backend.numpybackend method)": [[69, "id284"], [69, "ot.backend.NumpyBackend.min"]], "min() (ot.backend.tensorflowbackend method)": [[69, "id363"], [69, "ot.backend.TensorflowBackend.min"]], "min() (ot.backend.torchbackend method)": [[69, "id442"], [69, "ot.backend.TorchBackend.min"]], "minimum() (ot.backend.backend method)": [[69, "id47"], [69, "ot.backend.Backend.minimum"]], "minimum() (ot.backend.cupybackend method)": [[69, "id127"], [69, "ot.backend.CupyBackend.minimum"]], "minimum() (ot.backend.jaxbackend method)": [[69, "id206"], [69, "ot.backend.JaxBackend.minimum"]], "minimum() (ot.backend.numpybackend method)": [[69, "id285"], [69, "ot.backend.NumpyBackend.minimum"]], "minimum() (ot.backend.tensorflowbackend method)": [[69, "id364"], [69, "ot.backend.TensorflowBackend.minimum"]], "minimum() (ot.backend.torchbackend method)": [[69, "id443"], [69, "ot.backend.TorchBackend.minimum"]], "norm() (ot.backend.backend method)": [[69, "id48"], [69, "ot.backend.Backend.norm"]], "norm() (ot.backend.cupybackend method)": [[69, "id128"], [69, "ot.backend.CupyBackend.norm"]], "norm() (ot.backend.jaxbackend method)": [[69, "id207"], [69, "ot.backend.JaxBackend.norm"]], "norm() (ot.backend.numpybackend method)": [[69, "id286"], [69, "ot.backend.NumpyBackend.norm"]], "norm() (ot.backend.tensorflowbackend method)": [[69, "id365"], [69, "ot.backend.TensorflowBackend.norm"]], "norm() (ot.backend.torchbackend method)": [[69, "id444"], [69, "ot.backend.TorchBackend.norm"]], "ones() (ot.backend.backend method)": [[69, "id49"], [69, "ot.backend.Backend.ones"]], "ones() (ot.backend.cupybackend method)": [[69, "id129"], [69, "ot.backend.CupyBackend.ones"]], "ones() (ot.backend.jaxbackend method)": [[69, "id208"], [69, "ot.backend.JaxBackend.ones"]], "ones() (ot.backend.numpybackend method)": [[69, "id287"], [69, "ot.backend.NumpyBackend.ones"]], "ones() (ot.backend.tensorflowbackend method)": [[69, "id366"], [69, "ot.backend.TensorflowBackend.ones"]], "ones() (ot.backend.torchbackend method)": [[69, "id445"], [69, "ot.backend.TorchBackend.ones"]], "ot.backend": [[69, "module-ot.backend"]], "outer() (ot.backend.backend method)": [[69, "id50"], [69, "ot.backend.Backend.outer"]], "outer() (ot.backend.cupybackend method)": [[69, "id130"], [69, "ot.backend.CupyBackend.outer"]], "outer() (ot.backend.jaxbackend method)": [[69, "id209"], [69, "ot.backend.JaxBackend.outer"]], "outer() (ot.backend.numpybackend method)": [[69, "id288"], [69, "ot.backend.NumpyBackend.outer"]], "outer() (ot.backend.tensorflowbackend method)": [[69, "id367"], [69, "ot.backend.TensorflowBackend.outer"]], "outer() (ot.backend.torchbackend method)": [[69, "id446"], [69, "ot.backend.TorchBackend.outer"]], "power() (ot.backend.backend method)": [[69, "id51"], [69, "ot.backend.Backend.power"]], "power() (ot.backend.cupybackend method)": [[69, "id131"], [69, "ot.backend.CupyBackend.power"]], "power() (ot.backend.jaxbackend method)": [[69, "id210"], [69, "ot.backend.JaxBackend.power"]], "power() (ot.backend.numpybackend method)": [[69, "id289"], [69, "ot.backend.NumpyBackend.power"]], "power() (ot.backend.tensorflowbackend method)": [[69, "id368"], [69, "ot.backend.TensorflowBackend.power"]], "power() (ot.backend.torchbackend method)": [[69, "id447"], [69, "ot.backend.TorchBackend.power"]], "prod() (ot.backend.backend method)": [[69, "id52"], [69, "ot.backend.Backend.prod"]], "prod() (ot.backend.cupybackend method)": [[69, "id132"], [69, "ot.backend.CupyBackend.prod"]], "prod() (ot.backend.jaxbackend method)": [[69, "id211"], [69, "ot.backend.JaxBackend.prod"]], "prod() (ot.backend.numpybackend method)": [[69, "id290"], [69, "ot.backend.NumpyBackend.prod"]], "prod() (ot.backend.tensorflowbackend method)": [[69, "id369"], [69, "ot.backend.TensorflowBackend.prod"]], "prod() (ot.backend.torchbackend method)": [[69, "id448"], [69, "ot.backend.TorchBackend.prod"]], "qr() (ot.backend.backend method)": [[69, "id53"], [69, "ot.backend.Backend.qr"]], "qr() (ot.backend.cupybackend method)": [[69, "id133"], [69, "ot.backend.CupyBackend.qr"]], "qr() (ot.backend.jaxbackend method)": [[69, "id212"], [69, "ot.backend.JaxBackend.qr"]], "qr() (ot.backend.numpybackend method)": [[69, "id291"], [69, "ot.backend.NumpyBackend.qr"]], "qr() (ot.backend.tensorflowbackend method)": [[69, "id370"], [69, "ot.backend.TensorflowBackend.qr"]], "qr() (ot.backend.torchbackend method)": [[69, "id449"], [69, "ot.backend.TorchBackend.qr"]], "rand() (ot.backend.backend method)": [[69, "id54"], [69, "ot.backend.Backend.rand"]], "rand() (ot.backend.cupybackend method)": [[69, "id134"], [69, "ot.backend.CupyBackend.rand"]], "rand() (ot.backend.jaxbackend method)": [[69, "id213"], [69, "ot.backend.JaxBackend.rand"]], "rand() (ot.backend.numpybackend method)": [[69, "id292"], [69, "ot.backend.NumpyBackend.rand"]], "rand() (ot.backend.tensorflowbackend method)": [[69, "id371"], [69, "ot.backend.TensorflowBackend.rand"]], "rand() (ot.backend.torchbackend method)": [[69, "id450"], [69, "ot.backend.TorchBackend.rand"]], "randn() (ot.backend.backend method)": [[69, "id55"], [69, "ot.backend.Backend.randn"]], "randn() (ot.backend.cupybackend method)": [[69, "id135"], [69, "ot.backend.CupyBackend.randn"]], "randn() (ot.backend.jaxbackend method)": [[69, "id214"], [69, "ot.backend.JaxBackend.randn"]], "randn() (ot.backend.numpybackend method)": [[69, "id293"], [69, "ot.backend.NumpyBackend.randn"]], "randn() (ot.backend.tensorflowbackend method)": [[69, "id372"], [69, "ot.backend.TensorflowBackend.randn"]], "randn() (ot.backend.torchbackend method)": [[69, "id451"], [69, "ot.backend.TorchBackend.randn"]], "repeat() (ot.backend.backend method)": [[69, "id56"], [69, "ot.backend.Backend.repeat"]], "repeat() (ot.backend.cupybackend method)": [[69, "id136"], [69, "ot.backend.CupyBackend.repeat"]], "repeat() (ot.backend.jaxbackend method)": [[69, "id215"], [69, "ot.backend.JaxBackend.repeat"]], "repeat() (ot.backend.numpybackend method)": [[69, "id294"], [69, "ot.backend.NumpyBackend.repeat"]], "repeat() (ot.backend.tensorflowbackend method)": [[69, "id373"], [69, "ot.backend.TensorflowBackend.repeat"]], "repeat() (ot.backend.torchbackend method)": [[69, "id452"], [69, "ot.backend.TorchBackend.repeat"]], "reshape() (ot.backend.backend method)": [[69, "id57"], [69, "ot.backend.Backend.reshape"]], "reshape() (ot.backend.cupybackend method)": [[69, "id137"], [69, "ot.backend.CupyBackend.reshape"]], "reshape() (ot.backend.jaxbackend method)": [[69, "id216"], [69, "ot.backend.JaxBackend.reshape"]], "reshape() (ot.backend.numpybackend method)": [[69, "id295"], [69, "ot.backend.NumpyBackend.reshape"]], "reshape() (ot.backend.tensorflowbackend method)": [[69, "id374"], [69, "ot.backend.TensorflowBackend.reshape"]], "reshape() (ot.backend.torchbackend method)": [[69, "id453"], [69, "ot.backend.TorchBackend.reshape"]], "searchsorted() (ot.backend.backend method)": [[69, "id58"], [69, "ot.backend.Backend.searchsorted"]], "searchsorted() (ot.backend.cupybackend method)": [[69, "id138"], [69, "ot.backend.CupyBackend.searchsorted"]], "searchsorted() (ot.backend.jaxbackend method)": [[69, "id217"], [69, "ot.backend.JaxBackend.searchsorted"]], "searchsorted() (ot.backend.numpybackend method)": [[69, "id296"], [69, "ot.backend.NumpyBackend.searchsorted"]], "searchsorted() (ot.backend.tensorflowbackend method)": [[69, "id375"], [69, "ot.backend.TensorflowBackend.searchsorted"]], "searchsorted() (ot.backend.torchbackend method)": [[69, "id454"], [69, "ot.backend.TorchBackend.searchsorted"]], "seed() (ot.backend.backend method)": [[69, "id59"], [69, "ot.backend.Backend.seed"]], "seed() (ot.backend.cupybackend method)": [[69, "id139"], [69, "ot.backend.CupyBackend.seed"]], "seed() (ot.backend.jaxbackend method)": [[69, "id218"], [69, "ot.backend.JaxBackend.seed"]], "seed() (ot.backend.numpybackend method)": [[69, "id297"], [69, "ot.backend.NumpyBackend.seed"]], "seed() (ot.backend.tensorflowbackend method)": [[69, "id376"], [69, "ot.backend.TensorflowBackend.seed"]], "seed() (ot.backend.torchbackend method)": [[69, "id455"], [69, "ot.backend.TorchBackend.seed"]], "set_gradients() (ot.backend.backend method)": [[69, "id60"], [69, "ot.backend.Backend.set_gradients"]], "set_gradients() (ot.backend.cupybackend method)": [[69, "id140"], [69, "ot.backend.CupyBackend.set_gradients"]], "set_gradients() (ot.backend.jaxbackend method)": [[69, "id219"], [69, "ot.backend.JaxBackend.set_gradients"]], "set_gradients() (ot.backend.numpybackend method)": [[69, "id298"], [69, "ot.backend.NumpyBackend.set_gradients"]], "set_gradients() (ot.backend.tensorflowbackend method)": [[69, "id377"], [69, "ot.backend.TensorflowBackend.set_gradients"]], "set_gradients() (ot.backend.torchbackend method)": [[69, "id456"], [69, "ot.backend.TorchBackend.set_gradients"]], "solve() (ot.backend.backend method)": [[69, "id61"], [69, "ot.backend.Backend.solve"]], "solve() (ot.backend.cupybackend method)": [[69, "id141"], [69, "ot.backend.CupyBackend.solve"]], "solve() (ot.backend.jaxbackend method)": [[69, "id220"], [69, "ot.backend.JaxBackend.solve"]], "solve() (ot.backend.numpybackend method)": [[69, "id299"], [69, "ot.backend.NumpyBackend.solve"]], "solve() (ot.backend.tensorflowbackend method)": [[69, "id378"], [69, "ot.backend.TensorflowBackend.solve"]], "solve() (ot.backend.torchbackend method)": [[69, "id457"], [69, "ot.backend.TorchBackend.solve"]], "sort() (ot.backend.backend method)": [[69, "id62"], [69, "ot.backend.Backend.sort"]], "sort() (ot.backend.cupybackend method)": [[69, "id142"], [69, "ot.backend.CupyBackend.sort"]], "sort() (ot.backend.jaxbackend method)": [[69, "id221"], [69, "ot.backend.JaxBackend.sort"]], "sort() (ot.backend.numpybackend method)": [[69, "id300"], [69, "ot.backend.NumpyBackend.sort"]], "sort() (ot.backend.tensorflowbackend method)": [[69, "id379"], [69, "ot.backend.TensorflowBackend.sort"]], "sort() (ot.backend.torchbackend method)": [[69, "id458"], [69, "ot.backend.TorchBackend.sort"]], "sort2() (ot.backend.backend method)": [[69, "id63"], [69, "ot.backend.Backend.sort2"]], "sort2() (ot.backend.cupybackend method)": [[69, "id143"], [69, "ot.backend.CupyBackend.sort2"]], "sort2() (ot.backend.jaxbackend method)": [[69, "id222"], [69, "ot.backend.JaxBackend.sort2"]], "sort2() (ot.backend.numpybackend method)": [[69, "id301"], [69, "ot.backend.NumpyBackend.sort2"]], "sort2() (ot.backend.tensorflowbackend method)": [[69, "id380"], [69, "ot.backend.TensorflowBackend.sort2"]], "sort2() (ot.backend.torchbackend method)": [[69, "id459"], [69, "ot.backend.TorchBackend.sort2"]], "sqrt() (ot.backend.backend method)": [[69, "id64"], [69, "ot.backend.Backend.sqrt"]], "sqrt() (ot.backend.cupybackend method)": [[69, "id144"], [69, "ot.backend.CupyBackend.sqrt"]], "sqrt() (ot.backend.jaxbackend method)": [[69, "id223"], [69, "ot.backend.JaxBackend.sqrt"]], "sqrt() (ot.backend.numpybackend method)": [[69, "id302"], [69, "ot.backend.NumpyBackend.sqrt"]], "sqrt() (ot.backend.tensorflowbackend method)": [[69, "id381"], [69, "ot.backend.TensorflowBackend.sqrt"]], "sqrt() (ot.backend.torchbackend method)": [[69, "id460"], [69, "ot.backend.TorchBackend.sqrt"]], "sqrtm() (ot.backend.backend method)": [[69, "id65"], [69, "ot.backend.Backend.sqrtm"]], "sqrtm() (ot.backend.cupybackend method)": [[69, "id145"], [69, "ot.backend.CupyBackend.sqrtm"]], "sqrtm() (ot.backend.jaxbackend method)": [[69, "id224"], [69, "ot.backend.JaxBackend.sqrtm"]], "sqrtm() (ot.backend.numpybackend method)": [[69, "id303"], [69, "ot.backend.NumpyBackend.sqrtm"]], "sqrtm() (ot.backend.tensorflowbackend method)": [[69, "id382"], [69, "ot.backend.TensorflowBackend.sqrtm"]], "sqrtm() (ot.backend.torchbackend method)": [[69, "id461"], [69, "ot.backend.TorchBackend.sqrtm"]], "squeeze() (ot.backend.backend method)": [[69, "id66"], [69, "ot.backend.Backend.squeeze"]], "squeeze() (ot.backend.cupybackend method)": [[69, "id146"], [69, "ot.backend.CupyBackend.squeeze"]], "squeeze() (ot.backend.jaxbackend method)": [[69, "id225"], [69, "ot.backend.JaxBackend.squeeze"]], "squeeze() (ot.backend.numpybackend method)": [[69, "id304"], [69, "ot.backend.NumpyBackend.squeeze"]], "squeeze() (ot.backend.tensorflowbackend method)": [[69, "id383"], [69, "ot.backend.TensorflowBackend.squeeze"]], "squeeze() (ot.backend.torchbackend method)": [[69, "id462"], [69, "ot.backend.TorchBackend.squeeze"]], "stack() (ot.backend.backend method)": [[69, "id67"], [69, "ot.backend.Backend.stack"]], "stack() (ot.backend.cupybackend method)": [[69, "id147"], [69, "ot.backend.CupyBackend.stack"]], "stack() (ot.backend.jaxbackend method)": [[69, "id226"], [69, "ot.backend.JaxBackend.stack"]], "stack() (ot.backend.numpybackend method)": [[69, "id305"], [69, "ot.backend.NumpyBackend.stack"]], "stack() (ot.backend.tensorflowbackend method)": [[69, "id384"], [69, "ot.backend.TensorflowBackend.stack"]], "stack() (ot.backend.torchbackend method)": [[69, "id463"], [69, "ot.backend.TorchBackend.stack"]], "std() (ot.backend.backend method)": [[69, "id68"], [69, "ot.backend.Backend.std"]], "std() (ot.backend.cupybackend method)": [[69, "id148"], [69, "ot.backend.CupyBackend.std"]], "std() (ot.backend.jaxbackend method)": [[69, "id227"], [69, "ot.backend.JaxBackend.std"]], "std() (ot.backend.numpybackend method)": [[69, "id306"], [69, "ot.backend.NumpyBackend.std"]], "std() (ot.backend.tensorflowbackend method)": [[69, "id385"], [69, "ot.backend.TensorflowBackend.std"]], "std() (ot.backend.torchbackend method)": [[69, "id464"], [69, "ot.backend.TorchBackend.std"]], "sum() (ot.backend.backend method)": [[69, "id69"], [69, "ot.backend.Backend.sum"]], "sum() (ot.backend.cupybackend method)": [[69, "id149"], [69, "ot.backend.CupyBackend.sum"]], "sum() (ot.backend.jaxbackend method)": [[69, "id228"], [69, "ot.backend.JaxBackend.sum"]], "sum() (ot.backend.numpybackend method)": [[69, "id307"], [69, "ot.backend.NumpyBackend.sum"]], "sum() (ot.backend.tensorflowbackend method)": [[69, "id386"], [69, "ot.backend.TensorflowBackend.sum"]], "sum() (ot.backend.torchbackend method)": [[69, "id465"], [69, "ot.backend.TorchBackend.sum"]], "take_along_axis() (ot.backend.backend method)": [[69, "id70"], [69, "ot.backend.Backend.take_along_axis"]], "take_along_axis() (ot.backend.cupybackend method)": [[69, "id150"], [69, "ot.backend.CupyBackend.take_along_axis"]], "take_along_axis() (ot.backend.jaxbackend method)": [[69, "id229"], [69, "ot.backend.JaxBackend.take_along_axis"]], "take_along_axis() (ot.backend.numpybackend method)": [[69, "id308"], [69, "ot.backend.NumpyBackend.take_along_axis"]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[69, "id387"], [69, "ot.backend.TensorflowBackend.take_along_axis"]], "take_along_axis() (ot.backend.torchbackend method)": [[69, "id466"], [69, "ot.backend.TorchBackend.take_along_axis"]], "tile() (ot.backend.backend method)": [[69, "id71"], [69, "ot.backend.Backend.tile"]], "tile() (ot.backend.cupybackend method)": [[69, "id151"], [69, "ot.backend.CupyBackend.tile"]], "tile() (ot.backend.jaxbackend method)": [[69, "id230"], [69, "ot.backend.JaxBackend.tile"]], "tile() (ot.backend.numpybackend method)": [[69, "id309"], [69, "ot.backend.NumpyBackend.tile"]], "tile() (ot.backend.tensorflowbackend method)": [[69, "id388"], [69, "ot.backend.TensorflowBackend.tile"]], "tile() (ot.backend.torchbackend method)": [[69, "id467"], [69, "ot.backend.TorchBackend.tile"]], "to_numpy() (in module ot.backend)": [[69, "id478"], [69, "ot.backend.to_numpy"]], "to_numpy() (ot.backend.backend method)": [[69, "id72"], [69, "ot.backend.Backend.to_numpy"]], "tocsr() (ot.backend.backend method)": [[69, "id73"], [69, "ot.backend.Backend.tocsr"]], "tocsr() (ot.backend.cupybackend method)": [[69, "id152"], [69, "ot.backend.CupyBackend.tocsr"]], "tocsr() (ot.backend.jaxbackend method)": [[69, "id231"], [69, "ot.backend.JaxBackend.tocsr"]], "tocsr() (ot.backend.numpybackend method)": [[69, "id310"], [69, "ot.backend.NumpyBackend.tocsr"]], "tocsr() (ot.backend.tensorflowbackend method)": [[69, "id389"], [69, "ot.backend.TensorflowBackend.tocsr"]], "tocsr() (ot.backend.torchbackend method)": [[69, "id468"], [69, "ot.backend.TorchBackend.tocsr"]], "todense() (ot.backend.backend method)": [[69, "id74"], [69, "ot.backend.Backend.todense"]], "todense() (ot.backend.cupybackend method)": [[69, "id153"], [69, "ot.backend.CupyBackend.todense"]], "todense() (ot.backend.jaxbackend method)": [[69, "id232"], [69, "ot.backend.JaxBackend.todense"]], "todense() (ot.backend.numpybackend method)": [[69, "id311"], [69, "ot.backend.NumpyBackend.todense"]], "todense() (ot.backend.tensorflowbackend method)": [[69, "id390"], [69, "ot.backend.TensorflowBackend.todense"]], "todense() (ot.backend.torchbackend method)": [[69, "id469"], [69, "ot.backend.TorchBackend.todense"]], "trace() (ot.backend.backend method)": [[69, "id75"], [69, "ot.backend.Backend.trace"]], "trace() (ot.backend.cupybackend method)": [[69, "id154"], [69, "ot.backend.CupyBackend.trace"]], "trace() (ot.backend.jaxbackend method)": [[69, "id233"], [69, "ot.backend.JaxBackend.trace"]], "trace() (ot.backend.numpybackend method)": [[69, "id312"], [69, "ot.backend.NumpyBackend.trace"]], "trace() (ot.backend.tensorflowbackend method)": [[69, "id391"], [69, "ot.backend.TensorflowBackend.trace"]], "trace() (ot.backend.torchbackend method)": [[69, "id470"], [69, "ot.backend.TorchBackend.trace"]], "transpose() (ot.backend.backend method)": [[69, "id76"], [69, "ot.backend.Backend.transpose"]], "transpose() (ot.backend.cupybackend method)": [[69, "id155"], [69, "ot.backend.CupyBackend.transpose"]], "transpose() (ot.backend.jaxbackend method)": [[69, "id234"], [69, "ot.backend.JaxBackend.transpose"]], "transpose() (ot.backend.numpybackend method)": [[69, "id313"], [69, "ot.backend.NumpyBackend.transpose"]], "transpose() (ot.backend.tensorflowbackend method)": [[69, "id392"], [69, "ot.backend.TensorflowBackend.transpose"]], "transpose() (ot.backend.torchbackend method)": [[69, "id471"], [69, "ot.backend.TorchBackend.transpose"]], "unique() (ot.backend.backend method)": [[69, "id77"], [69, "ot.backend.Backend.unique"]], "unique() (ot.backend.cupybackend method)": [[69, "id156"], [69, "ot.backend.CupyBackend.unique"]], "unique() (ot.backend.jaxbackend method)": [[69, "id235"], [69, "ot.backend.JaxBackend.unique"]], "unique() (ot.backend.numpybackend method)": [[69, "id314"], [69, "ot.backend.NumpyBackend.unique"]], "unique() (ot.backend.tensorflowbackend method)": [[69, "id393"], [69, "ot.backend.TensorflowBackend.unique"]], "unique() (ot.backend.torchbackend method)": [[69, "id472"], [69, "ot.backend.TorchBackend.unique"]], "where() (ot.backend.backend method)": [[69, "id78"], [69, "ot.backend.Backend.where"]], "where() (ot.backend.cupybackend method)": [[69, "id157"], [69, "ot.backend.CupyBackend.where"]], "where() (ot.backend.jaxbackend method)": [[69, "id236"], [69, "ot.backend.JaxBackend.where"]], "where() (ot.backend.numpybackend method)": [[69, "id315"], [69, "ot.backend.NumpyBackend.where"]], "where() (ot.backend.tensorflowbackend method)": [[69, "id394"], [69, "ot.backend.TensorflowBackend.where"]], "where() (ot.backend.torchbackend method)": [[69, "id473"], [69, "ot.backend.TorchBackend.where"]], "zero_pad() (ot.backend.backend method)": [[69, "id79"], [69, "ot.backend.Backend.zero_pad"]], "zero_pad() (ot.backend.cupybackend method)": [[69, "id158"], [69, "ot.backend.CupyBackend.zero_pad"]], "zero_pad() (ot.backend.jaxbackend method)": [[69, "id237"], [69, "ot.backend.JaxBackend.zero_pad"]], "zero_pad() (ot.backend.numpybackend method)": [[69, "id316"], [69, "ot.backend.NumpyBackend.zero_pad"]], "zero_pad() (ot.backend.tensorflowbackend method)": [[69, "id395"], [69, "ot.backend.TensorflowBackend.zero_pad"]], "zero_pad() (ot.backend.torchbackend method)": [[69, "id474"], [69, "ot.backend.TorchBackend.zero_pad"]], "zeros() (ot.backend.backend method)": [[69, "id80"], [69, "ot.backend.Backend.zeros"]], "zeros() (ot.backend.cupybackend method)": [[69, "id159"], [69, "ot.backend.CupyBackend.zeros"]], "zeros() (ot.backend.jaxbackend method)": [[69, "id238"], [69, "ot.backend.JaxBackend.zeros"]], "zeros() (ot.backend.numpybackend method)": [[69, "id317"], [69, "ot.backend.NumpyBackend.zeros"]], "zeros() (ot.backend.tensorflowbackend method)": [[69, "id396"], [69, "ot.backend.TensorflowBackend.zeros"]], "zeros() (ot.backend.torchbackend method)": [[69, "id475"], [69, "ot.backend.TorchBackend.zeros"]], "barycenter() (in module ot.bregman)": [[70, "id0"], [70, "ot.bregman.barycenter"]], "barycenter_debiased() (in module ot.bregman)": [[70, "id43"], [70, "ot.bregman.barycenter_debiased"]], "barycenter_sinkhorn() (in module ot.bregman)": [[70, "id46"], [70, "ot.bregman.barycenter_sinkhorn"]], "barycenter_stabilized() (in module ot.bregman)": [[70, "id49"], [70, "ot.bregman.barycenter_stabilized"]], "convolutional_barycenter2d() (in module ot.bregman)": [[70, "id52"], [70, "ot.bregman.convolutional_barycenter2d"]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[70, "id56"], [70, "ot.bregman.convolutional_barycenter2d_debiased"]], "empirical_sinkhorn() (in module ot.bregman)": [[70, "id59"], [70, "ot.bregman.empirical_sinkhorn"]], "empirical_sinkhorn2() (in module ot.bregman)": [[70, "id63"], [70, "ot.bregman.empirical_sinkhorn2"]], "empirical_sinkhorn_divergence() (in module ot.bregman)": [[70, "id67"], [70, "ot.bregman.empirical_sinkhorn_divergence"]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[70, "id69"], [70, "ot.bregman.free_support_sinkhorn_barycenter"]], "geometricbar() (in module ot.bregman)": [[70, "id72"], [70, "ot.bregman.geometricBar"]], "geometricmean() (in module ot.bregman)": [[70, "id73"], [70, "ot.bregman.geometricMean"]], "greenkhorn() (in module ot.bregman)": [[70, "id74"], [70, "ot.bregman.greenkhorn"]], "jcpot_barycenter() (in module ot.bregman)": [[70, "id78"], [70, "ot.bregman.jcpot_barycenter"]], "ot.bregman": [[70, "module-ot.bregman"]], "projc() (in module ot.bregman)": [[70, "id81"], [70, "ot.bregman.projC"]], "projr() (in module ot.bregman)": [[70, "id82"], [70, "ot.bregman.projR"]], "screenkhorn() (in module ot.bregman)": [[70, "id83"], [70, "ot.bregman.screenkhorn"]], "sinkhorn() (in module ot.bregman)": [[70, "id87"], [70, "ot.bregman.sinkhorn"]], "sinkhorn2() (in module ot.bregman)": [[70, "id93"], [70, "ot.bregman.sinkhorn2"]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[70, "id100"], [70, "ot.bregman.sinkhorn_epsilon_scaling"]], "sinkhorn_knopp() (in module ot.bregman)": [[70, "id105"], [70, "ot.bregman.sinkhorn_knopp"]], "sinkhorn_log() (in module ot.bregman)": [[70, "id108"], [70, "ot.bregman.sinkhorn_log"]], "sinkhorn_stabilized() (in module ot.bregman)": [[70, "id112"], [70, "ot.bregman.sinkhorn_stabilized"]], "unmix() (in module ot.bregman)": [[70, "id117"], [70, "ot.bregman.unmix"]], "co_optimal_transport() (in module ot.coot)": [[71, "id0"], [71, "ot.coot.co_optimal_transport"]], "co_optimal_transport2() (in module ot.coot)": [[71, "id4"], [71, "ot.coot.co_optimal_transport2"]], "ot.coot": [[71, "module-ot.coot"]], "basetransport (class in ot.da)": [[72, "id0"], [72, "ot.da.BaseTransport"]], "emdlaplacetransport (class in ot.da)": [[72, "id40"], [72, "ot.da.EMDLaplaceTransport"]], "emdtransport (class in ot.da)": [[72, "id47"], [72, "ot.da.EMDTransport"]], "jcpottransport (class in ot.da)": [[72, "id53"], [72, "ot.da.JCPOTTransport"]], "lineartransport (class in ot.da)": [[72, "id66"], [72, "ot.da.LinearTransport"]], "mappingtransport (class in ot.da)": [[72, "id73"], [72, "ot.da.MappingTransport"]], "sinkhornl1l2transport (class in ot.da)": [[72, "id80"], [72, "ot.da.SinkhornL1l2Transport"]], "sinkhornlpl1transport (class in ot.da)": [[72, "id88"], [72, "ot.da.SinkhornLpl1Transport"]], "sinkhorntransport (class in ot.da)": [[72, "id95"], [72, "ot.da.SinkhornTransport"]], "unbalancedsinkhorntransport (class in ot.da)": [[72, "id103"], [72, "ot.da.UnbalancedSinkhornTransport"]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[72, "id41"], [72, "ot.da.EMDLaplaceTransport.coupling_"]], "coupling_ (ot.da.emdtransport attribute)": [[72, "id48"], [72, "ot.da.EMDTransport.coupling_"]], "coupling_ (ot.da.jcpottransport attribute)": [[72, "id54"], [72, "ot.da.JCPOTTransport.coupling_"]], "coupling_ (ot.da.mappingtransport attribute)": [[72, "id74"], [72, "ot.da.MappingTransport.coupling_"]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[72, "id81"], [72, "ot.da.SinkhornL1l2Transport.coupling_"]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[72, "id89"], [72, "ot.da.SinkhornLpl1Transport.coupling_"]], "coupling_ (ot.da.sinkhorntransport attribute)": [[72, "id96"], [72, "ot.da.SinkhornTransport.coupling_"]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[72, "id104"], [72, "ot.da.UnbalancedSinkhornTransport.coupling_"]], "distribution_estimation_uniform() (in module ot.da)": [[72, "id110"], [72, "ot.da.distribution_estimation_uniform"]], "emd_laplace() (in module ot.da)": [[72, "id111"], [72, "ot.da.emd_laplace"]], "fit() (ot.da.basetransport method)": [[72, "id32"], [72, "ot.da.BaseTransport.fit"]], "fit() (ot.da.emdlaplacetransport method)": [[72, "id46"], [72, "ot.da.EMDLaplaceTransport.fit"]], "fit() (ot.da.emdtransport method)": [[72, "id52"], [72, "ot.da.EMDTransport.fit"]], "fit() (ot.da.jcpottransport method)": [[72, "id60"], [72, "ot.da.JCPOTTransport.fit"]], "fit() (ot.da.lineartransport method)": [[72, "id70"], [72, "ot.da.LinearTransport.fit"]], "fit() (ot.da.mappingtransport method)": [[72, "id78"], [72, "ot.da.MappingTransport.fit"]], "fit() (ot.da.sinkhornl1l2transport method)": [[72, "id87"], [72, "ot.da.SinkhornL1l2Transport.fit"]], "fit() (ot.da.sinkhornlpl1transport method)": [[72, "id94"], [72, "ot.da.SinkhornLpl1Transport.fit"]], "fit() (ot.da.sinkhorntransport method)": [[72, "id102"], [72, "ot.da.SinkhornTransport.fit"]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[72, "id109"], [72, "ot.da.UnbalancedSinkhornTransport.fit"]], "fit_transform() (ot.da.basetransport method)": [[72, "id33"], [72, "ot.da.BaseTransport.fit_transform"]], "inverse_transform() (ot.da.basetransport method)": [[72, "id34"], [72, "ot.da.BaseTransport.inverse_transform"]], "inverse_transform() (ot.da.lineartransport method)": [[72, "id71"], [72, "ot.da.LinearTransport.inverse_transform"]], "inverse_transform_labels() (ot.da.basetransport method)": [[72, "id35"], [72, "ot.da.BaseTransport.inverse_transform_labels"]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[72, "id61"], [72, "ot.da.JCPOTTransport.inverse_transform_labels"]], "joint_ot_mapping_kernel() (in module ot.da)": [[72, "id115"], [72, "ot.da.joint_OT_mapping_kernel"]], "joint_ot_mapping_linear() (in module ot.da)": [[72, "id118"], [72, "ot.da.joint_OT_mapping_linear"]], "log_ (ot.da.jcpottransport attribute)": [[72, "id56"], [72, "ot.da.JCPOTTransport.log_"]], "log_ (ot.da.mappingtransport attribute)": [[72, "id76"], [72, "ot.da.MappingTransport.log_"]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[72, "id82"], [72, "ot.da.SinkhornL1l2Transport.log_"]], "log_ (ot.da.sinkhorntransport attribute)": [[72, "id97"], [72, "ot.da.SinkhornTransport.log_"]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[72, "id105"], [72, "ot.da.UnbalancedSinkhornTransport.log_"]], "mapping_ (ot.da.mappingtransport attribute)": [[72, "id75"], [72, "ot.da.MappingTransport.mapping_"]], "ot.da": [[72, "module-ot.da"]], "proportions_ (ot.da.jcpottransport attribute)": [[72, "id55"], [72, "ot.da.JCPOTTransport.proportions_"]], "sinkhorn_l1l2_gl() (in module ot.da)": [[72, "id121"], [72, "ot.da.sinkhorn_l1l2_gl"]], "sinkhorn_lpl1_mm() (in module ot.da)": [[72, "id125"], [72, "ot.da.sinkhorn_lpl1_mm"]], "transform() (ot.da.basetransport method)": [[72, "id36"], [72, "ot.da.BaseTransport.transform"]], "transform() (ot.da.jcpottransport method)": [[72, "id62"], [72, "ot.da.JCPOTTransport.transform"]], "transform() (ot.da.lineartransport method)": [[72, "id72"], [72, "ot.da.LinearTransport.transform"]], "transform() (ot.da.mappingtransport method)": [[72, "id79"], [72, "ot.da.MappingTransport.transform"]], "transform_labels() (ot.da.basetransport method)": [[72, "id37"], [72, "ot.da.BaseTransport.transform_labels"]], "transform_labels() (ot.da.jcpottransport method)": [[72, "id63"], [72, "ot.da.JCPOTTransport.transform_labels"]], "make_1d_gauss() (in module ot.datasets)": [[73, "id0"], [73, "ot.datasets.make_1D_gauss"]], "make_2d_samples_gauss() (in module ot.datasets)": [[73, "id1"], [73, "ot.datasets.make_2D_samples_gauss"]], "make_data_classif() (in module ot.datasets)": [[73, "id2"], [73, "ot.datasets.make_data_classif"]], "ot.datasets": [[73, "module-ot.datasets"]], "dist() (in module ot.dr)": [[74, "id0"], [74, "ot.dr.dist"]], "ewca() (in module ot.dr)": [[74, "id4"], [74, "ot.dr.ewca"]], "fda() (in module ot.dr)": [[74, "id7"], [74, "ot.dr.fda"]], "logsumexp() (in module ot.dr)": [[74, "id8"], [74, "ot.dr.logsumexp"]], "ot.dr": [[74, "module-ot.dr"]], "projection_robust_wasserstein() (in module ot.dr)": [[74, "id9"], [74, "ot.dr.projection_robust_wasserstein"]], "sinkhorn() (in module ot.dr)": [[74, "id12"], [74, "ot.dr.sinkhorn"]], "sinkhorn_log() (in module ot.dr)": [[74, "id13"], [74, "ot.dr.sinkhorn_log"]], "split_classes() (in module ot.dr)": [[74, "id14"], [74, "ot.dr.split_classes"]], "wda() (in module ot.dr)": [[74, "id15"], [74, "ot.dr.wda"]], "factored_optimal_transport() (in module ot.factored)": [[75, "id0"], [75, "ot.factored.factored_optimal_transport"]], "ot.factored": [[75, "module-ot.factored"]], "bures_wasserstein_distance() (in module ot.gaussian)": [[76, "id0"], [76, "ot.gaussian.bures_wasserstein_distance"]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[76, "id11"], [76, "ot.gaussian.bures_wasserstein_mapping"]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[76, "id15"], [76, "ot.gaussian.empirical_bures_wasserstein_distance"]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[76, "id18"], [76, "ot.gaussian.empirical_bures_wasserstein_mapping"]], "ot.gaussian": [[76, "module-ot.gaussian"]], "gw_distance_estimation() (in module ot.gromov)": [[77, "ot.gromov.GW_distance_estimation"]], "entropic_fused_gromov_barycenters() (in module ot.gromov)": [[77, "ot.gromov.entropic_fused_gromov_barycenters"]], "entropic_fused_gromov_wasserstein() (in module ot.gromov)": [[77, "ot.gromov.entropic_fused_gromov_wasserstein"]], "entropic_fused_gromov_wasserstein2() (in module ot.gromov)": [[77, "ot.gromov.entropic_fused_gromov_wasserstein2"]], "entropic_gromov_barycenters() (in module ot.gromov)": [[77, "ot.gromov.entropic_gromov_barycenters"]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[77, "ot.gromov.entropic_gromov_wasserstein"]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[77, "ot.gromov.entropic_gromov_wasserstein2"]], "entropic_semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[77, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein"]], "entropic_semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[77, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein2"]], "entropic_semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[77, "ot.gromov.entropic_semirelaxed_gromov_wasserstein"]], "entropic_semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[77, "ot.gromov.entropic_semirelaxed_gromov_wasserstein2"]], "fgw_barycenters() (in module ot.gromov)": [[77, "ot.gromov.fgw_barycenters"]], "fused_gromov_wasserstein() (in module ot.gromov)": [[77, "ot.gromov.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[77, "ot.gromov.fused_gromov_wasserstein2"]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[77, "ot.gromov.fused_gromov_wasserstein_dictionary_learning"]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[77, "ot.gromov.fused_gromov_wasserstein_linear_unmixing"]], "gromov_barycenters() (in module ot.gromov)": [[77, "ot.gromov.gromov_barycenters"]], "gromov_wasserstein() (in module ot.gromov)": [[77, "ot.gromov.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot.gromov)": [[77, "ot.gromov.gromov_wasserstein2"]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[77, "ot.gromov.gromov_wasserstein_dictionary_learning"]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[77, "ot.gromov.gromov_wasserstein_linear_unmixing"]], "gwggrad() (in module ot.gromov)": [[77, "ot.gromov.gwggrad"]], "gwloss() (in module ot.gromov)": [[77, "ot.gromov.gwloss"]], "init_matrix() (in module ot.gromov)": [[77, "ot.gromov.init_matrix"]], "init_matrix_semirelaxed() (in module ot.gromov)": [[77, "ot.gromov.init_matrix_semirelaxed"]], "ot.gromov": [[77, "module-ot.gromov"]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[77, "ot.gromov.pointwise_gromov_wasserstein"]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[77, "ot.gromov.sampled_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[77, "ot.gromov.semirelaxed_fused_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[77, "ot.gromov.semirelaxed_fused_gromov_wasserstein2"]], "semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[77, "ot.gromov.semirelaxed_gromov_wasserstein"]], "semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[77, "ot.gromov.semirelaxed_gromov_wasserstein2"]], "solve_gromov_linesearch() (in module ot.gromov)": [[77, "ot.gromov.solve_gromov_linesearch"]], "solve_semirelaxed_gromov_linesearch() (in module ot.gromov)": [[77, "ot.gromov.solve_semirelaxed_gromov_linesearch"]], "tensor_product() (in module ot.gromov)": [[77, "ot.gromov.tensor_product"]], "update_feature_matrix() (in module ot.gromov)": [[77, "ot.gromov.update_feature_matrix"]], "update_kl_loss() (in module ot.gromov)": [[77, "ot.gromov.update_kl_loss"]], "update_square_loss() (in module ot.gromov)": [[77, "ot.gromov.update_square_loss"]], "barycenter() (in module ot.lp)": [[78, "ot.lp.barycenter"]], "binary_search_circle() (in module ot.lp)": [[78, "ot.lp.binary_search_circle"]], "center_ot_dual() (in module ot.lp)": [[78, "ot.lp.center_ot_dual"]], "check_number_threads() (in module ot.lp)": [[78, "ot.lp.check_number_threads"]], "emd() (in module ot.lp)": [[78, "id0"], [78, "ot.lp.emd"]], "emd2() (in module ot.lp)": [[78, "id11"], [78, "ot.lp.emd2"]], "emd2_1d() (in module ot.lp)": [[78, "ot.lp.emd2_1d"]], "emd_1d() (in module ot.lp)": [[78, "ot.lp.emd_1d"]], "estimate_dual_null_weights() (in module ot.lp)": [[78, "ot.lp.estimate_dual_null_weights"]], "free_support_barycenter() (in module ot.lp)": [[78, "id18"], [78, "ot.lp.free_support_barycenter"]], "generalized_free_support_barycenter() (in module ot.lp)": [[78, "id22"], [78, "ot.lp.generalized_free_support_barycenter"]], "ot.lp": [[78, "module-ot.lp"]], "semidiscrete_wasserstein2_unif_circle() (in module ot.lp)": [[78, "ot.lp.semidiscrete_wasserstein2_unif_circle"]], "wasserstein_1d() (in module ot.lp)": [[78, "ot.lp.wasserstein_1d"]], "wasserstein_circle() (in module ot.lp)": [[78, "ot.lp.wasserstein_circle"]], "cg() (in module ot.optim)": [[79, "id0"], [79, "ot.optim.cg"]], "gcg() (in module ot.optim)": [[79, "id13"], [79, "ot.optim.gcg"]], "generic_conditional_gradient() (in module ot.optim)": [[79, "id17"], [79, "ot.optim.generic_conditional_gradient"]], "line_search_armijo() (in module ot.optim)": [[79, "id23"], [79, "ot.optim.line_search_armijo"]], "ot.optim": [[79, "module-ot.optim"]], "semirelaxed_cg() (in module ot.optim)": [[79, "id24"], [79, "ot.optim.semirelaxed_cg"]], "solve_1d_linesearch_quad() (in module ot.optim)": [[79, "id27"], [79, "ot.optim.solve_1d_linesearch_quad"]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[80, "id0"], [80, "ot.partial.entropic_partial_gromov_wasserstein"]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[80, "id17"], [80, "ot.partial.entropic_partial_gromov_wasserstein2"]], "entropic_partial_wasserstein() (in module ot.partial)": [[80, "id21"], [80, "ot.partial.entropic_partial_wasserstein"]], "gwgrad_partial() (in module ot.partial)": [[80, "id24"], [80, "ot.partial.gwgrad_partial"]], "gwloss_partial() (in module ot.partial)": [[80, "id27"], [80, "ot.partial.gwloss_partial"]], "ot.partial": [[80, "module-ot.partial"]], "partial_gromov_wasserstein() (in module ot.partial)": [[80, "id28"], [80, "ot.partial.partial_gromov_wasserstein"]], "partial_gromov_wasserstein2() (in module ot.partial)": [[80, "id31"], [80, "ot.partial.partial_gromov_wasserstein2"]], "partial_wasserstein() (in module ot.partial)": [[80, "id34"], [80, "ot.partial.partial_wasserstein"]], "partial_wasserstein2() (in module ot.partial)": [[80, "id37"], [80, "ot.partial.partial_wasserstein2"]], "partial_wasserstein_lagrange() (in module ot.partial)": [[80, "id40"], [80, "ot.partial.partial_wasserstein_lagrange"]], "ot.plot": [[81, "module-ot.plot"]], "plot1d_mat() (in module ot.plot)": [[81, "id0"], [81, "ot.plot.plot1D_mat"]], "plot2d_samples_mat() (in module ot.plot)": [[81, "id1"], [81, "ot.plot.plot2D_samples_mat"]], "complement_schur() (in module ot.regpath)": [[82, "id0"], [82, "ot.regpath.complement_schur"]], "compute_next_removal() (in module ot.regpath)": [[82, "id12"], [82, "ot.regpath.compute_next_removal"]], "compute_transport_plan() (in module ot.regpath)": [[82, "id15"], [82, "ot.regpath.compute_transport_plan"]], "construct_augmented_h() (in module ot.regpath)": [[82, "id18"], [82, "ot.regpath.construct_augmented_H"]], "fully_relaxed_path() (in module ot.regpath)": [[82, "id19"], [82, "ot.regpath.fully_relaxed_path"]], "ot.regpath": [[82, "module-ot.regpath"]], "ot_next_gamma() (in module ot.regpath)": [[82, "id21"], [82, "ot.regpath.ot_next_gamma"]], "recast_ot_as_lasso() (in module ot.regpath)": [[82, "id23"], [82, "ot.regpath.recast_ot_as_lasso"]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[82, "id25"], [82, "ot.regpath.recast_semi_relaxed_as_lasso"]], "regularization_path() (in module ot.regpath)": [[82, "id26"], [82, "ot.regpath.regularization_path"]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[82, "id28"], [82, "ot.regpath.semi_relaxed_next_gamma"]], "semi_relaxed_path() (in module ot.regpath)": [[82, "id30"], [82, "ot.regpath.semi_relaxed_path"]], "get_random_projections() (in module ot.sliced)": [[83, "id0"], [83, "ot.sliced.get_random_projections"]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[83, "id5"], [83, "ot.sliced.max_sliced_wasserstein_distance"]], "ot.sliced": [[83, "module-ot.sliced"]], "sliced_wasserstein_distance() (in module ot.sliced)": [[83, "id7"], [83, "ot.sliced.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[83, "id9"], [83, "ot.sliced.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[83, "id11"], [83, "ot.sliced.sliced_wasserstein_sphere_unif"]], "negentropy (class in ot.smooth)": [[84, "id0"], [84, "ot.smooth.NegEntropy"]], "omega() (ot.smooth.negentropy method)": [[84, "id7"], [84, "ot.smooth.NegEntropy.Omega"]], "omega() (ot.smooth.regularization method)": [[84, "id11"], [84, "ot.smooth.Regularization.Omega"]], "omega() (ot.smooth.sparsityconstrained method)": [[84, "id15"], [84, "ot.smooth.SparsityConstrained.Omega"]], "omega() (ot.smooth.squaredl2 method)": [[84, "id19"], [84, "ot.smooth.SquaredL2.Omega"]], "regularization (class in ot.smooth)": [[84, "id10"], [84, "ot.smooth.Regularization"]], "sparsityconstrained (class in ot.smooth)": [[84, "id14"], [84, "ot.smooth.SparsityConstrained"]], "squaredl2 (class in ot.smooth)": [[84, "id18"], [84, "ot.smooth.SquaredL2"]], "delta_omega() (ot.smooth.negentropy method)": [[84, "id8"], [84, "ot.smooth.NegEntropy.delta_Omega"]], "delta_omega() (ot.smooth.regularization method)": [[84, "id12"], [84, "ot.smooth.Regularization.delta_Omega"]], "delta_omega() (ot.smooth.sparsityconstrained method)": [[84, "id16"], [84, "ot.smooth.SparsityConstrained.delta_Omega"]], "delta_omega() (ot.smooth.squaredl2 method)": [[84, "id20"], [84, "ot.smooth.SquaredL2.delta_Omega"]], "dual_obj_grad() (in module ot.smooth)": [[84, "id22"], [84, "ot.smooth.dual_obj_grad"]], "get_plan_from_dual() (in module ot.smooth)": [[84, "id23"], [84, "ot.smooth.get_plan_from_dual"]], "get_plan_from_semi_dual() (in module ot.smooth)": [[84, "id24"], [84, "ot.smooth.get_plan_from_semi_dual"]], "max_omega() (ot.smooth.negentropy method)": [[84, "id9"], [84, "ot.smooth.NegEntropy.max_Omega"]], "max_omega() (ot.smooth.regularization method)": [[84, "id13"], [84, "ot.smooth.Regularization.max_Omega"]], "max_omega() (ot.smooth.sparsityconstrained method)": [[84, "id17"], [84, "ot.smooth.SparsityConstrained.max_Omega"]], "max_omega() (ot.smooth.squaredl2 method)": [[84, "id21"], [84, "ot.smooth.SquaredL2.max_Omega"]], "ot.smooth": [[84, "module-ot.smooth"]], "projection_simplex() (in module ot.smooth)": [[84, "id25"], [84, "ot.smooth.projection_simplex"]], "semi_dual_obj_grad() (in module ot.smooth)": [[84, "id26"], [84, "ot.smooth.semi_dual_obj_grad"]], "smooth_ot_dual() (in module ot.smooth)": [[84, "id27"], [84, "ot.smooth.smooth_ot_dual"]], "smooth_ot_semi_dual() (in module ot.smooth)": [[84, "id32"], [84, "ot.smooth.smooth_ot_semi_dual"]], "solve_dual() (in module ot.smooth)": [[84, "id37"], [84, "ot.smooth.solve_dual"]], "solve_semi_dual() (in module ot.smooth)": [[84, "id38"], [84, "ot.smooth.solve_semi_dual"]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[85, "id0"], [85, "ot.stochastic.averaged_sgd_entropic_transport"]], "batch_grad_dual() (in module ot.stochastic)": [[85, "id14"], [85, "ot.stochastic.batch_grad_dual"]], "c_transform_entropic() (in module ot.stochastic)": [[85, "id16"], [85, "ot.stochastic.c_transform_entropic"]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[85, "id18"], [85, "ot.stochastic.coordinate_grad_semi_dual"]], "loss_dual_entropic() (in module ot.stochastic)": [[85, "id20"], [85, "ot.stochastic.loss_dual_entropic"]], "loss_dual_quadratic() (in module ot.stochastic)": [[85, "id22"], [85, "ot.stochastic.loss_dual_quadratic"]], "ot.stochastic": [[85, "module-ot.stochastic"]], "plan_dual_entropic() (in module ot.stochastic)": [[85, "id24"], [85, "ot.stochastic.plan_dual_entropic"]], "plan_dual_quadratic() (in module ot.stochastic)": [[85, "id26"], [85, "ot.stochastic.plan_dual_quadratic"]], "sag_entropic_transport() (in module ot.stochastic)": [[85, "id28"], [85, "ot.stochastic.sag_entropic_transport"]], "sgd_entropic_regularization() (in module ot.stochastic)": [[85, "id30"], [85, "ot.stochastic.sgd_entropic_regularization"]], "solve_dual_entropic() (in module ot.stochastic)": [[85, "id32"], [85, "ot.stochastic.solve_dual_entropic"]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[85, "id34"], [85, "ot.stochastic.solve_semi_dual_entropic"]], "barycenter_unbalanced() (in module ot.unbalanced)": [[86, "id0"], [86, "ot.unbalanced.barycenter_unbalanced"]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[86, "id25"], [86, "ot.unbalanced.barycenter_unbalanced_sinkhorn"]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[86, "id29"], [86, "ot.unbalanced.barycenter_unbalanced_stabilized"]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[86, "id33"], [86, "ot.unbalanced.lbfgsb_unbalanced"]], "mm_unbalanced() (in module ot.unbalanced)": [[86, "id35"], [86, "ot.unbalanced.mm_unbalanced"]], "mm_unbalanced2() (in module ot.unbalanced)": [[86, "id38"], [86, "ot.unbalanced.mm_unbalanced2"]], "ot.unbalanced": [[86, "module-ot.unbalanced"]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[86, "id40"], [86, "ot.unbalanced.sinkhorn_knopp_unbalanced"]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[86, "id44"], [86, "ot.unbalanced.sinkhorn_stabilized_unbalanced"]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[86, "id48"], [86, "ot.unbalanced.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[86, "id54"], [86, "ot.unbalanced.sinkhorn_unbalanced2"]], "baseestimator (class in ot.utils)": [[87, "id0"], [87, "ot.utils.BaseEstimator"]], "otresult (class in ot.utils)": [[87, "ot.utils.OTResult"]], "undefinedparameter": [[87, "ot.utils.UndefinedParameter"]], "a_to_b (ot.utils.otresult property)": [[87, "ot.utils.OTResult.a_to_b"]], "b_to_a (ot.utils.otresult property)": [[87, "ot.utils.OTResult.b_to_a"]], "check_params() (in module ot.utils)": [[87, "id3"], [87, "ot.utils.check_params"]], "check_random_state() (in module ot.utils)": [[87, "id4"], [87, "ot.utils.check_random_state"]], "citation (ot.utils.otresult property)": [[87, "ot.utils.OTResult.citation"]], "clean_zeros() (in module ot.utils)": [[87, "id5"], [87, "ot.utils.clean_zeros"]], "cost_normalization() (in module ot.utils)": [[87, "id6"], [87, "ot.utils.cost_normalization"]], "deprecated (class in ot.utils)": [[87, "id7"], [87, "ot.utils.deprecated"]], "dist() (in module ot.utils)": [[87, "id8"], [87, "ot.utils.dist"]], "dist0() (in module ot.utils)": [[87, "id9"], [87, "ot.utils.dist0"]], "dots() (in module ot.utils)": [[87, "id10"], [87, "ot.utils.dots"]], "euclidean_distances() (in module ot.utils)": [[87, "id11"], [87, "ot.utils.euclidean_distances"]], "get_coordinate_circle() (in module ot.utils)": [[87, "id12"], [87, "ot.utils.get_coordinate_circle"]], "get_params() (ot.utils.baseestimator method)": [[87, "id1"], [87, "ot.utils.BaseEstimator.get_params"]], "kernel() (in module ot.utils)": [[87, "id13"], [87, "ot.utils.kernel"]], "label_normalization() (in module ot.utils)": [[87, "id14"], [87, "ot.utils.label_normalization"]], "laplacian() (in module ot.utils)": [[87, "id15"], [87, "ot.utils.laplacian"]], "lazy_plan (ot.utils.otresult property)": [[87, "ot.utils.OTResult.lazy_plan"]], "list_to_array() (in module ot.utils)": [[87, "id16"], [87, "ot.utils.list_to_array"]], "marginal_a (ot.utils.otresult property)": [[87, "ot.utils.OTResult.marginal_a"]], "marginal_b (ot.utils.otresult property)": [[87, "ot.utils.OTResult.marginal_b"]], "marginals (ot.utils.otresult property)": [[87, "ot.utils.OTResult.marginals"]], "ot.utils": [[87, "module-ot.utils"]], "parmap() (in module ot.utils)": [[87, "id17"], [87, "ot.utils.parmap"]], "plan (ot.utils.otresult property)": [[87, "ot.utils.OTResult.plan"]], "potential_a (ot.utils.otresult property)": [[87, "ot.utils.OTResult.potential_a"]], "potential_b (ot.utils.otresult property)": [[87, "ot.utils.OTResult.potential_b"]], "potentials (ot.utils.otresult property)": [[87, "ot.utils.OTResult.potentials"]], "proj_simplex() (in module ot.utils)": [[87, "id18"], [87, "ot.utils.proj_simplex"]], "projection_sparse_simplex() (in module ot.utils)": [[87, "id19"], [87, "ot.utils.projection_sparse_simplex"]], "set_params() (ot.utils.baseestimator method)": [[87, "id2"], [87, "ot.utils.BaseEstimator.set_params"]], "sparse_plan (ot.utils.otresult property)": [[87, "ot.utils.OTResult.sparse_plan"]], "status (ot.utils.otresult property)": [[87, "ot.utils.OTResult.status"]], "tic() (in module ot.utils)": [[87, "id20"], [87, "ot.utils.tic"]], "toc() (in module ot.utils)": [[87, "id21"], [87, "ot.utils.toc"]], "toq() (in module ot.utils)": [[87, "id22"], [87, "ot.utils.toq"]], "unif() (in module ot.utils)": [[87, "id23"], [87, "ot.utils.unif"]], "value (ot.utils.otresult property)": [[87, "ot.utils.OTResult.value"]], "value_linear (ot.utils.otresult property)": [[87, "ot.utils.OTResult.value_linear"]], "ot.weak": [[88, "module-ot.weak"]], "weak_optimal_transport() (in module ot.weak)": [[88, "id0"], [88, "ot.weak.weak_optimal_transport"]]}})