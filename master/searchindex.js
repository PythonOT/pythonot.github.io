Search.setIndex({"docnames": [".github/CODE_OF_CONDUCT", ".github/CONTRIBUTING", "all", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/plot_semirelaxed_fgw", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_COOT", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_learning_weights_with_COOT", "auto_examples/others/plot_logo", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_compute_wasserstein_circle", "auto_examples/plot_optim_OTreg", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.coot", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gromov", "gen_modules/ot.lp", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "quickstart", "releases"], "filenames": [".github/CODE_OF_CONDUCT.rst", ".github/CONTRIBUTING.rst", "all.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/plot_semirelaxed_fgw.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_COOT.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_learning_weights_with_COOT.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_compute_wasserstein_circle.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.coot.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "quickstart.rst", "releases.rst"], "titles": ["Code of Conduct", "Contributing to POT", "API and modules", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Plot Fused-gromov-Wasserstein", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Semi-relaxed (Fused) Gromov-Wasserstein example", "Computation times", "Examples gallery", "Row and column alignments with CO-Optimal Transport", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Optimal transport with factored couplings", "Learning sample marginal distribution with CO-Optimal Transport", "Logo of the POT toolbox", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth optimal transport example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different gournd metrics", "OT distances in 1D", "OT distance on the Circle", "Regularized OT with generic solver", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Contributors", "ot.backend", "ot.bregman", "ot.coot", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gromov", "ot.lp", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Quick start guide", "Releases"], "terms": {"In": [0, 1, 2, 4, 5, 8, 9, 10, 34, 38, 42, 43, 47, 67, 68, 71, 72, 75, 78, 80, 81, 86, 87, 88], "interest": [0, 87], "foster": [0, 87], "an": [0, 1, 2, 4, 9, 10, 21, 25, 27, 30, 33, 47, 66, 67, 69, 72, 74, 75, 76, 77, 79, 81, 82, 84, 88], "open": [0, 1, 65, 86, 87, 88], "welcom": [0, 86], "environ": 0, "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 28, 30, 31, 32, 34, 35, 38, 42, 43, 47, 53, 61, 62, 65, 66, 67, 75, 77, 79, 87, 88], "contributor": [0, 86, 88], "maintain": [0, 66, 86, 88], "make": [0, 1, 2, 35, 47, 51, 59, 60, 66, 70, 75, 86, 87, 88], "particip": 0, "project": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12, 13, 17, 20, 22, 23, 24, 28, 32, 34, 35, 42, 44, 47, 50, 53, 54, 60, 61, 65, 67, 71, 74, 75, 77, 80, 81, 83, 84, 86, 87, 88], "commun": [0, 34, 35, 87], "harass": 0, "free": [0, 1, 19, 37, 65, 67, 75, 77, 86, 88], "experi": 0, "everyon": 0, "regardless": [0, 88], "ag": 0, "bodi": 0, "size": [0, 2, 6, 8, 10, 17, 21, 27, 34, 35, 38, 47, 53, 66, 67, 68, 69, 70, 71, 74, 75, 79, 82, 84, 88], "disabl": 0, "ethnic": 0, "gender": 0, "ident": [0, 66, 69], "express": [0, 4, 8, 87], "level": [0, 67, 69, 70, 84, 87], "nation": 0, "person": [0, 65], "appear": [0, 67], "race": 0, "religion": 0, "sexual": 0, "orient": 0, "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 36, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 64, 66, 80, 88], "behavior": [0, 1, 88], "contribut": [0, 2, 67, 87, 88], "creat": [0, 1, 12, 13, 15, 30, 60, 65, 66, 78, 86, 88], "posit": [0, 2, 4, 9, 12, 13, 15, 34, 44, 47, 48, 49, 52, 54, 59, 60, 66, 75, 76, 77, 78, 86, 87], "includ": [0, 1, 68, 71, 84, 87, 88], "us": [0, 1, 2, 4, 5, 8, 9, 10, 12, 13, 21, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 45, 47, 48, 54, 59, 60, 61, 63, 66, 72, 74, 80, 85, 88], "inclus": [0, 1], "languag": [0, 65, 87], "Being": 0, "respect": [0, 2, 8, 18, 34, 47, 66, 67, 68, 69, 71, 74, 75, 83, 86, 87, 88], "differ": [0, 2, 4, 18, 37, 47, 55, 67, 68, 69, 74, 75, 78, 83, 86, 87, 88], "viewpoint": 0, "gracefulli": 0, "accept": [0, 1, 2, 47, 75, 84, 88], "construct": [0, 14, 33, 66, 69, 79], "critic": 0, "focus": 0, "what": [0, 1, 22, 28, 87], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 16, 18, 23, 28, 30, 31, 32, 33, 34, 35, 37, 38, 40, 42, 43, 44, 45, 47, 50, 52, 53, 56, 57, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "best": [0, 1, 74, 87], "show": [0, 4, 9, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 75], "empathi": 0, "toward": 0, "other": [0, 1, 4, 8, 9, 39, 47, 74, 82, 84, 86, 88], "member": [0, 86], "unaccept": 0, "The": [0, 1, 2, 4, 9, 12, 14, 28, 30, 32, 33, 34, 40, 42, 47, 50, 53, 60, 61, 62, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88], "imageri": 0, "unwelcom": 0, "attent": 0, "advanc": [0, 2, 38, 42, 44, 45, 67, 68, 69, 81, 82, 83, 86, 87], "troll": 0, "insult": 0, "derogatori": 0, "comment": 0, "polit": 0, "attack": 0, "public": [0, 1, 88], "privat": 0, "publish": 0, "inform": [0, 1, 2, 26, 27, 34, 38, 42, 44, 45, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 85, 86, 87], "physic": 0, "electron": 0, "address": [0, 1, 87], "without": [0, 1, 2, 66, 67, 74, 79, 86, 88], "explicit": [0, 22, 28, 69, 71, 78, 84], "permiss": 0, "which": [0, 2, 4, 30, 42, 47, 66, 67, 68, 69, 72, 74, 75, 76, 78, 79, 85, 86, 87, 88], "could": [0, 88], "reason": [0, 2, 67, 87, 88], "consid": [0, 1, 2, 9, 28, 30, 34, 38, 67, 75, 77, 84, 87], "inappropri": 0, "profession": 0, "set": [0, 2, 4, 10, 20, 22, 24, 29, 30, 33, 34, 37, 47, 66, 67, 69, 70, 74, 75, 76, 79, 84, 86, 87], "ar": [0, 1, 2, 9, 14, 16, 22, 28, 30, 33, 34, 35, 40, 42, 45, 47, 50, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "clarifi": 0, "expect": [0, 1, 2, 10, 42, 67, 84, 86, 87], "take": [0, 2, 53, 75, 76, 79, 82, 83, 87], "appropri": [0, 1, 84], "fair": [0, 75], "correct": [0, 1, 75, 86, 88], "action": [0, 88], "ani": [0, 1, 5, 6, 10, 18, 62, 66, 68, 76, 79, 84, 86, 87], "instanc": [0, 2, 7, 70, 74, 76, 84, 87, 88], "have": [0, 1, 2, 10, 28, 34, 47, 66, 74, 75, 84, 87, 88], "right": [0, 1, 2, 8, 15, 16, 35, 42, 47, 59, 67, 69, 73, 74, 75, 80, 81, 82, 85, 88], "remov": [0, 12, 60, 61, 66, 75, 79, 84, 88], "edit": [0, 1], "reject": 0, "commit": [0, 1, 66, 88], "wiki": 0, "issu": [0, 1, 2, 67, 74, 84, 86, 87], "align": [0, 37, 46, 68, 69, 73, 87], "thi": [0, 1, 2, 4, 5, 8, 9, 10, 12, 13, 14, 15, 18, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 42, 43, 44, 45, 47, 48, 49, 53, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 72, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88], "ban": 0, "temporarili": 0, "perman": 0, "thei": [0, 2, 75, 87, 88], "deem": 0, "threaten": 0, "offens": 0, "harm": 0, "appli": [0, 2, 26, 68, 69, 75, 84, 86], "both": [0, 2, 4, 9, 26, 47, 62, 67, 68, 75, 79, 87, 88], "within": [0, 9, 66, 74], "space": [0, 2, 18, 32, 33, 61, 66, 67, 68, 74, 75, 77, 80, 86, 87, 88], "when": [0, 1, 2, 4, 53, 63, 67, 68, 71, 74, 75, 77, 79, 84, 86, 88], "individu": [0, 2, 75], "repres": [0, 2, 22, 28, 30, 67, 74, 75, 87], "its": [0, 2, 3, 4, 7, 26, 34, 35, 47, 53, 66, 67, 74, 76, 77, 80, 86, 87, 88], "offici": [0, 88], "e": [0, 2, 42, 67, 74, 75, 80, 84, 86], "mail": [0, 1, 86], "post": 0, "via": [0, 2, 4, 5, 34, 67, 72, 74, 86, 87], "social": 0, "media": 0, "account": [0, 1, 2, 53, 67, 74], "act": 0, "appoint": 0, "onlin": [0, 2, 4, 34, 47, 74, 86, 87], "offlin": 0, "event": 0, "represent": [0, 2, 34, 35, 45, 57, 74, 75, 76, 80, 82, 86, 87], "mai": [0, 1, 5, 74, 75, 77, 79, 86, 87, 88], "further": [0, 1, 47], "defin": [0, 7, 10, 33, 38, 45, 47, 66, 67, 69, 75, 79, 81, 87, 88], "abus": 0, "otherwis": [0, 2, 66, 74, 75, 84], "report": [0, 1, 86, 88], "contact": 0, "team": [0, 1, 88], "all": [0, 1, 2, 12, 13, 15, 28, 30, 33, 34, 37, 43, 47, 60, 66, 67, 69, 72, 74, 75, 79, 83, 84, 85, 86, 87, 88], "complaint": 0, "review": [0, 1], "investig": [0, 87], "result": [0, 1, 2, 4, 47, 66, 74, 75, 84, 87, 88], "necessari": [0, 1, 12, 13, 60, 61, 75, 86, 88], "circumst": 0, "oblig": 0, "confidenti": 0, "regard": 0, "incid": 0, "detail": [0, 1, 2, 75, 87, 88], "specif": [0, 1, 2, 33, 67, 69, 74, 83, 87, 88], "polici": 0, "separ": [0, 87, 88], "who": [0, 88], "do": [0, 1, 2, 10, 22, 28, 32, 47, 61, 66, 67, 75, 84, 87, 88], "follow": [0, 1, 2, 8, 9, 10, 13, 33, 42, 47, 63, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 86, 87, 88], "good": [0, 1, 47, 87], "faith": 0, "face": [0, 77], "temporari": 0, "repercuss": 0, "determin": [0, 67], "": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 20, 21, 22, 23, 24, 27, 28, 31, 33, 34, 35, 37, 42, 44, 47, 48, 49, 52, 53, 54, 58, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88], "leadership": 0, "adapt": [0, 2, 28, 29, 54, 67, 69, 70, 74, 76, 78, 84, 86, 88], "from": [0, 1, 2, 4, 6, 7, 8, 9, 10, 12, 13, 14, 15, 21, 23, 25, 27, 30, 31, 32, 33, 35, 38, 39, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "coven": 0, "version": [0, 1, 2, 4, 33, 34, 53, 66, 67, 76, 79, 86, 87, 88], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 25, 26, 27, 30, 31, 32, 33, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87], "4": [0, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 56, 59, 60, 61, 62, 63, 67, 68, 74, 75, 77, 79, 82, 83, 86, 87], "avail": [0, 1, 2, 28, 66, 86, 87, 88], "http": [0, 7, 44, 47, 51, 66, 67, 81, 84, 86, 87, 88], "org": [0, 7, 44, 51, 66, 67, 81, 86, 87, 88], "first": [1, 2, 4, 5, 31, 34, 35, 66, 67, 68, 74, 75, 79, 81, 84, 86, 87], "off": [1, 2, 4, 6, 14, 15, 21, 23, 25, 27, 34, 35, 43, 54, 74], "thank": [1, 65, 79, 88], "you": [1, 2, 17, 20, 22, 23, 24, 28, 32, 47, 50, 54, 66, 67, 71, 78, 86, 87, 88], "prefer": [1, 2, 75], "workflow": 1, "fork": 1, "main": [1, 22, 75, 87, 88], "repositori": [1, 88], "github": [1, 47, 66, 81, 84, 86, 87, 88], "clone": [1, 4, 5, 6, 9, 66], "develop": [1, 86, 87, 88], "branch": [1, 88], "step": [1, 2, 3, 4, 5, 7, 8, 9, 10, 13, 30, 42, 66, 67, 74, 76], "click": 1, "button": 1, "top": [1, 15, 74, 78], "page": [1, 86, 88], "copi": [1, 2, 9, 12, 35, 60, 66, 72, 74, 75, 85, 87], "code": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 70, 75, 81, 84, 87, 88], "under": [1, 67, 68, 69, 86], "your": [1, 86, 87], "user": [1, 2, 54, 74, 86, 87, 88], "For": [1, 2, 28, 32, 34, 45, 47, 61, 67, 68, 75, 76, 79, 82, 84, 87, 88], "more": [1, 2, 35, 42, 47, 67, 75, 87, 88], "see": [1, 2, 4, 7, 10, 47, 66, 67, 69, 70, 74, 75, 77, 79, 81, 82, 83, 87, 88], "guid": [1, 86, 88], "repo": [1, 88], "local": [1, 4, 33, 34, 87], "disk": 1, "git": 1, "com": [1, 15, 20, 21, 22, 26, 27, 28, 32, 33, 35, 44, 45, 66, 81, 84, 86, 88], "yourlogin": 1, "cd": 1, "featur": [1, 2, 30, 42, 67, 68, 74, 86], "hold": 1, "chang": [1, 3, 4, 7, 26, 33, 34, 66, 67, 75, 87, 88], "checkout": 1, "b": [1, 2, 8, 9, 13, 16, 17, 23, 25, 28, 31, 32, 33, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "my": 1, "alwai": [1, 47, 69, 87, 88], "It": [1, 2, 4, 13, 20, 22, 23, 26, 27, 28, 31, 32, 48, 49, 54, 61, 74, 75, 82, 86, 87, 88], "practic": [1, 2, 10, 67, 71, 87], "never": [1, 88], "work": [1, 2, 14, 47, 66, 67, 72, 74, 75, 76, 84, 85, 88], "master": [1, 84, 86, 88], "add": [1, 34, 61, 75, 77, 84, 88], "modified_fil": 1, "record": [1, 2, 9, 67, 68, 69, 72, 73, 74, 75, 76, 77, 81, 82, 83, 85], "push": [1, 87, 88], "u": [1, 2, 3, 4, 5, 7, 8, 16, 17, 42, 47, 57, 60, 67, 71, 75, 77, 80, 82, 83, 84, 86, 87, 88], "origin": [1, 2, 4, 26, 30, 65, 75, 81, 87, 88], "instruct": 1, "send": [1, 18], "email": 1, "committ": 1, "If": [1, 2, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 83, 84, 85, 86, 87, 88], "abov": [1, 74, 78, 79, 87, 88], "seem": 1, "like": [1, 2, 4, 47, 65, 67, 68, 69, 72, 73, 74, 75, 76, 82, 83, 84, 85, 88], "magic": 1, "pleas": [1, 2, 66, 75, 86], "look": [1, 79], "up": [1, 4, 88], "web": 1, "ask": [1, 86, 88], "friend": 1, "anoth": [1, 69, 75, 87], "help": [1, 33, 75, 87, 88], "recommend": [1, 2, 67, 87, 88], "compli": 1, "rule": [1, 76], "befor": [1, 2, 69, 75, 88], "submit": 1, "pep8": [1, 88], "guidelin": [1, 86], "titl": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 34, 35, 38, 39, 40, 41, 42, 47, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 78, 86], "describ": [1, 47, 67, 74], "mention": 1, "number": [1, 2, 3, 7, 8, 10, 16, 17, 18, 20, 22, 23, 24, 28, 30, 31, 32, 33, 34, 44, 47, 50, 54, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "descript": 1, "sure": [1, 2, 75, 86], "link": [1, 4, 86, 88], "back": [1, 21, 25, 27], "method": [1, 2, 9, 15, 30, 45, 67, 68, 69, 71, 74, 75, 81, 82, 83, 84, 86, 87, 88], "should": [1, 2, 28, 42, 63, 66, 67, 69, 71, 74, 75, 79, 81, 84, 86, 87, 88], "docstr": [1, 84, 88], "sampl": [1, 2, 3, 8, 21, 27, 34, 37, 39, 40, 41, 43, 45, 46, 47, 50, 53, 56, 57, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88], "usag": 1, "present": [1, 21, 26, 28, 62, 74], "doctest": [1, 88], "prefix": 1, "mrg": 1, "readi": 1, "merg": [1, 88], "complet": [1, 42, 87, 88], "two": [1, 2, 4, 5, 12, 21, 23, 31, 38, 42, 45, 47, 52, 60, 66, 67, 68, 69, 72, 73, 74, 75, 79, 83, 85, 86, 87, 88], "core": [1, 88], "2": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 25, 26, 27, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 56, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "approv": 1, "elig": 1, "incomplet": [1, 88], "where": [1, 2, 6, 8, 9, 30, 34, 42, 45, 47, 63, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 87, 88], "receiv": [1, 4], "full": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 82, 84, 86, 88], "wip": 1, "indic": [1, 30, 66, 79], "progress": 1, "matur": 1, "someth": [1, 47], "avoid": [1, 2, 66, 67, 69, 71, 77, 87], "duplic": 1, "broad": 1, "function": [1, 6, 9, 12, 13, 14, 33, 47, 60, 62, 74, 86, 87, 88], "api": [1, 66, 86, 87, 88], "seek": [1, 87], "collabor": 1, "often": [1, 87], "benefit": [1, 65, 86], "task": 1, "list": [1, 2, 7, 12, 30, 60, 66, 67, 68, 69, 72, 74, 75, 79, 82, 84, 85, 86, 88], "pr": [1, 66, 88], "ad": [1, 30, 42, 66, 69, 73, 75, 77, 79, 84, 87, 88], "addit": [1, 2, 68, 75, 79, 86, 87], "provid": [1, 2, 4, 34, 47, 65, 66, 67, 69, 74, 75, 76, 79, 86, 87, 88], "least": [1, 2, 69, 75], "one": [1, 3, 5, 7, 9, 21, 25, 26, 27, 30, 33, 34, 45, 47, 66, 67, 69, 70, 75, 79, 87, 88], "script": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 88], "folder": [1, 86, 88], "refer": [1, 9, 35, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 85], "demonstr": [1, 32, 61, 88], "why": [1, 2, 67, 88], "possibl": [1, 2, 67, 69, 75, 84, 87, 88], "compar": [1, 47, 87], "high": [1, 34], "coverag": [1, 88], "test": [1, 2, 30, 39, 66, 74, 76, 86, 88], "enhanc": 1, "fix": [1, 2, 34, 42, 67, 71, 74, 75, 77, 81, 86, 88], "non": [1, 60, 62, 65, 66, 67, 75, 76, 79, 81, 83, 86, 87, 88], "regress": [1, 62, 79, 83, 86], "These": [1, 35], "verifi": 1, "manner": 1, "modif": 1, "base": [1, 2, 35, 67, 69, 74, 81, 84, 87, 88], "grant": 1, "consist": [1, 33, 66, 67, 69, 75, 87], "desir": [1, 67, 74, 75, 84], "case": [1, 2, 28, 47, 62, 66, 68, 75, 79, 80, 86], "time": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 69, 74, 75, 82, 84, 86, 87, 88], "fail": [1, 75, 87, 88], "pass": [1, 2, 74, 75, 77, 81, 84], "At": [1, 87], "paragraph": 1, "narr": 1, "literatur": [1, 67, 87], "pdf": [1, 51, 53, 87], "can": [1, 2, 4, 8, 47, 63, 67, 69, 71, 72, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88], "also": [1, 2, 4, 47, 66, 67, 69, 74, 75, 84, 86, 87, 88], "check": [1, 2, 66, 67, 75, 84, 87, 88], "common": [1, 87], "program": [1, 67, 75, 76, 86, 87, 88], "error": [1, 2, 9, 17, 30, 34, 60, 66, 67, 69, 71, 74, 75, 77, 81, 83, 86, 87, 88], "tool": [1, 87], "No": [1, 2, 4, 34, 75, 86, 87], "pyflak": 1, "warn": [1, 2, 4, 17, 20, 22, 23, 24, 28, 32, 33, 34, 44, 47, 50, 54, 60, 67, 69, 84, 88], "pip": [1, 47, 87, 88], "instal": [1, 44, 67, 75, 87, 88], "path": [1, 13, 14, 15, 21, 25, 27, 33, 37, 64, 70, 79, 86, 88], "modul": [1, 7, 10, 44, 47, 67, 71, 78, 86, 88], "py": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 84, 88], "autopep8": 1, "some": [1, 22, 28, 61, 65, 69, 75, 77, 84, 86, 87, 88], "easi": [1, 86, 87], "redund": [1, 88], "bonu": 1, "point": [1, 2, 13, 17, 18, 31, 33, 43, 44, 45, 53, 67, 71, 75, 77, 84, 86, 87, 88], "perform": [1, 2, 4, 5, 9, 44, 74, 75, 84, 87, 88], "analysi": [1, 2, 37, 46, 54, 67, 69, 71, 75, 76, 85, 86, 88], "benchmark": [1, 66, 88], "profil": 1, "output": [1, 2, 7, 10, 33, 67, 84, 86, 87, 88], "track": [1, 74, 88], "feel": 1, "found": [1, 2, 30, 74, 87], "wish": 1, "implement": [1, 2, 7, 47, 65, 66, 67, 71, 74, 75, 81, 84, 87, 88], "being": [1, 2, 47, 69, 75, 87, 88], "current": [1, 13, 20, 68, 69, 74, 76, 79, 81, 87, 88], "ensur": [1, 9, 75, 87], "snippet": 1, "messag": [1, 2, 67, 84, 88], "format": [1, 2, 3, 4, 5, 6, 7, 10, 23, 38, 47, 62, 66, 75, 84, 86, 88], "block": [1, 2, 4, 28, 67, 68, 69, 71, 74, 86, 87], "highlight": [1, 88], "oper": [1, 69, 71, 73, 87], "system": [1, 2, 26, 27, 38, 42, 44, 45, 66, 67, 69, 81, 82, 83, 86, 87], "type": [1, 2, 66, 67, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 84, 87, 88], "well": [1, 66, 75, 84, 87], "python": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 84, 87, 88], "numpi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 71, 74, 75, 77, 79, 80, 83, 84, 86, 87, 88], "scipi": [1, 2, 30, 32, 33, 47, 53, 61, 66, 75, 77, 81, 83, 84, 86, 87, 88], "run": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 75, 80, 86, 88], "import": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 69, 71, 75, 77, 78, 79, 82, 83, 84, 86, 87, 88], "platform": [1, 88], "print": [1, 2, 3, 4, 6, 7, 8, 10, 32, 34, 35, 38, 42, 45, 47, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 83, 85, 88], "sy": [1, 43], "__version__": 1, "ot": [1, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 43, 44, 45, 48, 50, 55, 56, 57, 59, 60, 61, 62, 63, 65, 86, 88], "about": [1, 67, 87, 88], "estim": [1, 11, 23, 29, 32, 37, 45, 65, 67, 69, 70, 73, 74, 75, 76, 82, 84, 86, 88], "involv": [1, 28], "shape": [1, 2, 4, 5, 6, 9, 12, 13, 15, 16, 18, 21, 23, 25, 27, 28, 30, 31, 33, 34, 35, 39, 43, 47, 60, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88], "data": [1, 2, 4, 5, 9, 15, 34, 47, 51, 66, 67, 68, 69, 74, 75, 86, 87, 88], "reproduc": [1, 2, 13, 74, 87], "gist": 1, "except": 1, "rais": [1, 2, 66, 67, 74, 75, 77, 84, 88], "traceback": 1, "A": [1, 2, 5, 12, 13, 14, 15, 18, 25, 26, 27, 28, 30, 39, 44, 45, 47, 54, 60, 67, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 86, 87, 88], "great": 1, "wai": [1, 2, 21, 75, 87], "start": [1, 2, 34, 47, 66, 67, 71, 79, 84, 86, 88], "pick": [1, 82], "item": [1, 6, 30, 35], "tracker": 1, "resolv": 1, "allow": [1, 4, 8, 32, 33, 38, 42, 61, 68, 77, 87, 88], "much": [1, 47, 67], "prior": [1, 2, 67, 75, 87], "knowledg": [1, 87], "assist": 1, "area": [1, 87], "greatli": [1, 87, 88], "appreci": 1, "experienc": 1, "concentr": 1, "glad": 1, "sort": [1, 2, 66, 75, 87], "restructuredtext": 1, "tutori": [1, 7, 87], "etc": [1, 68], "live": [1, 18, 34, 75, 86], "sourc": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "doc": [1, 10, 66, 88], "directori": 1, "text": [1, 3, 6, 7, 8, 10, 16, 21, 23, 25, 26, 40, 41, 42, 47, 50, 54, 56, 57, 59, 67, 73, 75, 79, 84, 87], "editor": 1, "gener": [1, 2, 5, 9, 13, 14, 15, 19, 32, 33, 37, 38, 43, 45, 47, 51, 53, 55, 61, 65, 66, 67, 69, 70, 72, 75, 76, 78, 80, 81, 83, 84, 85, 86, 88], "html": [1, 7, 47, 66, 86], "altern": [1, 47, 69, 87], "quickli": [1, 47], "galleri": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 86, 88], "noplot": 1, "place": [1, 88], "build": [1, 2, 10, 30, 69, 75, 86, 87, 88], "viewabl": 1, "browser": 1, "need": [1, 2, 47, 61, 67, 71, 75, 78, 87, 88], "sphinx": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 88], "matplotlib": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 88], "pillow": 1, "write": [1, 66], "keep": [1, 44, 87, 88], "compromis": 1, "between": [1, 2, 4, 5, 8, 17, 18, 21, 30, 33, 34, 35, 37, 38, 40, 41, 42, 43, 47, 55, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 83, 84, 85, 86, 88], "mathemat": [1, 2, 5, 56, 67, 74, 75, 77, 80, 86, 87, 88], "algorithm": [1, 2, 17, 33, 44, 60, 67, 68, 69, 71, 72, 74, 75, 76, 81, 82, 83, 85, 86, 87, 88], "give": [1, 22, 28, 47, 63, 66, 74, 79, 88], "intuit": [1, 42], "reader": [1, 87], "doe": [1, 7, 47, 66, 74, 87, 88], "small": [1, 2, 4, 9, 47, 67, 71, 74, 75, 86, 87, 88], "hand": 1, "wave": 1, "explan": 1, "figur": [1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "come": [1, 30, 87, 88], "illustr": [1, 9, 12, 13, 14, 15, 16, 17, 18, 30, 31, 34, 35, 39, 40, 41, 42, 44, 47, 48, 49, 50, 53, 54, 56, 57, 59, 60, 62, 88], "strongli": [1, 2, 67, 87, 88], "inpir": 1, "scikit": [1, 84, 87, 88], "learn": [1, 2, 4, 5, 8, 10, 15, 26, 30, 31, 35, 36, 37, 45, 46, 57, 65, 67, 68, 69, 74, 75, 76, 77, 80, 82, 83, 84, 86, 87, 88], "automat": [2, 8, 9, 42, 75, 87, 88], "sub": [2, 79, 86, 87], "lp": [2, 9, 16, 18, 19, 37, 53, 67, 68, 69, 70, 76, 81, 83, 84, 86, 87, 88], "bregman": [2, 12, 13, 14, 15, 16, 17, 20, 22, 23, 24, 28, 32, 44, 47, 50, 54, 69, 72, 75, 76, 77, 83, 85, 86, 88], "optim": [2, 3, 5, 7, 10, 11, 13, 16, 21, 26, 27, 30, 31, 35, 37, 39, 45, 46, 54, 55, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 88], "util": [2, 4, 8, 9, 12, 13, 15, 42, 45, 47, 60, 66, 69, 75, 82, 87], "dataset": [2, 3, 9, 10, 12, 13, 15, 20, 22, 23, 24, 26, 28, 30, 32, 39, 40, 44, 48, 49, 50, 52, 54, 56, 59, 60, 61, 62, 63, 71, 74, 82, 87, 88], "gromov": [2, 11, 30, 36, 64, 65, 70, 76, 77, 84, 86, 88], "smooth": [2, 13, 37, 55, 65, 70, 78, 86, 87, 88], "stochast": [2, 3, 4, 7, 37, 46, 65, 67, 74, 78, 86, 87, 88], "partial": [2, 60, 63, 64, 65, 70, 82, 86, 88], "regpath": 2, "unbalanc": [2, 61, 64, 65, 67, 69, 70, 77, 78, 79, 84, 86, 88], "due": [2, 69, 75, 87, 88], "depend": [2, 34, 66, 74, 76, 87, 88], "dr": [2, 39, 86, 87, 88], "pymanopt": [2, 71, 86, 87, 88], "autograd": [2, 6, 71, 86, 87, 88], "plot": [2, 4, 9, 12, 13, 15, 34, 35, 36, 37, 42, 54, 87, 88], "barycent": [2, 11, 19, 36, 56, 64, 65, 67, 69, 70, 74, 75, 80, 83, 84, 86, 88], "m": [2, 4, 8, 9, 10, 12, 13, 15, 22, 23, 26, 27, 31, 34, 35, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 52, 54, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "reg": [2, 3, 7, 12, 13, 14, 15, 17, 20, 21, 22, 23, 24, 28, 32, 34, 39, 45, 47, 49, 50, 52, 54, 60, 61, 62, 63, 67, 69, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 86, 87], "weight": [2, 12, 13, 14, 15, 16, 17, 18, 34, 35, 40, 42, 47, 50, 60, 62, 67, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88], "none": [2, 4, 7, 15, 17, 30, 31, 34, 35, 38, 42, 47, 53, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88], "sinkhorn": [2, 10, 16, 19, 20, 22, 24, 28, 32, 37, 44, 54, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 83, 84, 85, 86, 88], "numitermax": [2, 16, 17, 20, 22, 23, 24, 28, 32, 45, 47, 50, 54, 67, 69, 72, 75, 76, 77, 81, 82, 83, 85], "10000": [2, 7, 66, 67, 74, 82], "stopthr": [2, 67, 69, 71, 72, 75, 76, 77, 81, 83, 85, 88], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87], "0001": [2, 67, 76, 79], "verbos": [2, 13, 20, 23, 26, 27, 31, 32, 34, 38, 42, 44, 48, 49, 54, 59, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 83, 85], "fals": [2, 15, 27, 30, 34, 35, 42, 44, 53, 57, 62, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85], "log": [2, 15, 23, 30, 31, 32, 34, 35, 38, 42, 45, 54, 56, 57, 61, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88], "true": [2, 3, 4, 5, 6, 8, 9, 10, 12, 13, 15, 18, 20, 23, 26, 27, 30, 31, 32, 34, 35, 38, 39, 42, 43, 44, 45, 47, 48, 49, 54, 57, 59, 61, 62, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88], "kwarg": [2, 67, 69, 70, 72, 74, 76, 77, 78, 83, 84, 85], "comput": [2, 4, 8, 9, 10, 13, 34, 42, 44, 48, 49, 53, 56, 57, 59, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 86, 88], "entrop": [2, 11, 17, 19, 32, 37, 61, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88], "regular": [2, 11, 12, 14, 17, 19, 20, 21, 22, 23, 27, 28, 29, 32, 34, 44, 50, 55, 60, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88], "wasserstein": [2, 11, 19, 36, 46, 58, 64, 65, 67, 69, 70, 71, 73, 74, 75, 76, 77, 80, 83, 84, 86, 88], "distribut": [2, 3, 4, 5, 6, 7, 9, 10, 12, 13, 14, 15, 19, 26, 29, 31, 33, 37, 40, 41, 46, 47, 51, 52, 53, 54, 55, 58, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88], "mathbf": [2, 8, 34, 35, 47, 63, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85], "solv": [2, 4, 22, 28, 42, 43, 63, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 88], "problem": [2, 8, 9, 10, 12, 13, 22, 23, 28, 42, 43, 60, 63, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88], "mathop": [2, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85], "arg": [2, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 87], "min": [2, 34, 39, 47, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 87], "_": [2, 26, 34, 38, 42, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87], "quad": [2, 8, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 85, 87], "sum_i": [2, 31, 66, 67, 75, 81, 82, 83, 85, 87], "w_": [2, 34, 67, 74, 75, 83], "_i": [2, 67, 71, 75, 79, 81, 82, 83, 84, 85], "cdot": [2, 63, 67, 69, 71, 75, 76, 77, 82, 83, 87], "distanc": [2, 5, 10, 11, 30, 33, 34, 35, 38, 47, 55, 57, 58, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 80, 81, 83, 84, 86, 88], "sinkhorn_stabil": [2, 67, 69, 83, 87], "sinkhorn_log": [2, 67, 68, 71, 87, 88], "train": [2, 21, 27, 39, 42, 67, 69, 70, 71, 75, 83, 87, 88], "column": [2, 8, 35, 37, 46, 67, 68, 75, 79, 81, 83], "matrix": [2, 4, 8, 10, 12, 13, 15, 21, 25, 27, 30, 33, 34, 40, 42, 50, 51, 52, 54, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "term": [2, 10, 50, 54, 67, 68, 69, 71, 74, 75, 76, 77, 81, 82, 83, 84, 87, 88], "cost": [2, 22, 28, 38, 39, 40, 42, 44, 45, 48, 49, 50, 51, 59, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "knopp": [2, 65, 66, 67, 83, 86, 87, 88], "scale": [2, 33, 35, 43, 45, 60, 67, 69, 75, 81, 82, 83, 86, 87, 88], "propos": [2, 8, 10, 12, 13, 15, 18, 39, 54, 56, 57, 60, 67, 69, 72, 73, 74, 75, 77, 82, 83, 85, 87, 88], "3": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 67, 69, 75, 76, 77, 79, 80, 82, 83, 86, 87], "paramet": [2, 4, 7, 8, 9, 10, 13, 14, 20, 22, 23, 24, 28, 30, 32, 33, 34, 41, 44, 50, 53, 54, 59, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "arrai": [2, 4, 8, 9, 12, 13, 14, 15, 17, 18, 23, 25, 30, 32, 33, 34, 40, 43, 47, 50, 56, 60, 61, 62, 63, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88], "dim": [2, 6, 33, 67, 80, 83], "n_hist": [2, 67, 83], "loss": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 20, 26, 27, 31, 34, 40, 42, 50, 51, 54, 60, 61, 62, 63, 67, 69, 74, 75, 76, 77, 81, 82, 83, 84, 86, 87, 88], "float": [2, 3, 7, 8, 9, 10, 14, 30, 33, 42, 47, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "str": [2, 32, 34, 47, 61, 63, 67, 69, 70, 71, 74, 75, 81, 82, 83, 84], "option": [2, 47, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88], "solver": [2, 11, 13, 37, 43, 48, 55, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88], "either": [2, 26, 63, 67, 69, 71, 74, 75, 83], "each": [2, 8, 10, 30, 34, 47, 67, 68, 69, 74, 75, 81, 82, 83, 84, 86, 87, 88], "histogram": [2, 42, 67, 68, 70, 72, 75, 77, 79, 81, 83, 84, 85, 86, 87, 88], "simplex": [2, 4, 8, 9, 34, 42, 67, 75, 81, 84, 86, 87], "barycentr": [2, 12, 26, 67, 69, 75, 83, 87], "coodin": [2, 67, 75, 83], "int": [2, 4, 33, 34, 56, 57, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87], "max": [2, 12, 13, 15, 32, 33, 34, 35, 40, 44, 47, 48, 49, 51, 52, 53, 54, 59, 60, 62, 63, 66, 67, 69, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "iter": [2, 3, 4, 7, 8, 9, 12, 13, 17, 20, 22, 23, 24, 28, 32, 33, 38, 39, 42, 47, 50, 54, 60, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 85, 86, 87, 88], "stop": [2, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 83, 85, 88], "threshold": [2, 30, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 81, 83, 85, 87], "bool": [2, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85], "along": [2, 4, 8, 9, 66, 67, 69, 71, 72, 74, 75, 76, 77, 79, 81, 83, 85], "doesn": [2, 67], "t": [2, 8, 9, 12, 13, 15, 33, 34, 35, 38, 39, 42, 43, 47, 53, 57, 60, 62, 63, 67, 68, 69, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "converg": [2, 4, 17, 20, 22, 23, 24, 28, 32, 33, 47, 50, 54, 67, 69, 74, 75, 76, 86, 87, 88], "return": [2, 4, 5, 6, 7, 8, 10, 18, 21, 25, 27, 30, 32, 33, 35, 47, 53, 54, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "dict": [2, 34, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85], "dictionari": [2, 4, 36, 37, 65, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88], "onli": [2, 8, 16, 31, 47, 66, 67, 68, 69, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88], "benam": [2, 12, 13, 67, 77, 83, 86, 87], "j": [2, 4, 12, 13, 14, 18, 21, 23, 27, 31, 33, 34, 35, 38, 42, 43, 47, 54, 62, 63, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 86, 87], "d": [2, 12, 13, 16, 17, 25, 30, 34, 47, 54, 61, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87], "carlier": [2, 12, 13, 67, 75, 77, 83, 86, 87], "g": [2, 6, 10, 12, 13, 21, 23, 27, 30, 31, 34, 35, 44, 45, 47, 48, 49, 50, 54, 59, 60, 62, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86], "cuturi": [2, 10, 12, 13, 15, 39, 45, 65, 67, 69, 71, 73, 74, 75, 77, 81, 82, 83, 86, 87], "nenna": [2, 12, 13, 67, 77, 83, 86, 87], "l": [2, 10, 12, 13, 15, 31, 57, 60, 62, 67, 68, 69, 71, 74, 75, 77, 79, 80, 81, 83, 86, 87], "peyr\u00e9": [2, 10, 12, 13, 45, 54, 60, 65, 67, 69, 73, 74, 75, 76, 77, 82, 83, 86, 87], "2015": [2, 5, 12, 13, 54, 56, 67, 69, 76, 77, 80, 83, 86, 87], "transport": [2, 5, 7, 12, 13, 27, 30, 35, 37, 46, 54, 55, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88], "siam": [2, 12, 13, 21, 27, 54, 67, 69, 75, 76, 77, 83, 86, 87], "journal": [2, 5, 12, 13, 21, 27, 54, 56, 67, 69, 73, 74, 75, 76, 77, 80, 83, 85, 86, 87, 88], "scientif": [2, 12, 13, 67, 77, 83, 86, 87, 88], "37": [2, 7, 12, 13, 14, 15, 19, 46, 54, 67, 77, 83, 86, 87, 88], "a1111": [2, 12, 13, 67, 77, 83, 86, 87], "a1138": [2, 12, 13, 67, 77, 83, 86, 87], "barycenter_unbalanc": [2, 60, 83, 87], "reg_m": [2, 63, 69, 77, 83, 87], "1000": [2, 6, 7, 10, 16, 23, 25, 39, 42, 45, 53, 66, 67, 69, 74, 77, 83], "1e": [2, 4, 9, 10, 12, 13, 15, 17, 20, 21, 22, 23, 26, 27, 28, 31, 33, 42, 43, 47, 48, 49, 50, 52, 54, 60, 62, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 88], "06": [2, 11, 13, 26, 39, 45, 48, 49, 54, 67, 68, 69, 73, 75, 77, 82, 83], "u_": [2, 80, 83], "sinkhorn_unbalanc": [2, 59, 63, 83, 87], "reg_mi": [2, 83], "margin": [2, 37, 46, 62, 67, 68, 74, 75, 77, 79, 83, 84, 87], "relax": [2, 36, 37, 59, 65, 74, 76, 79, 81, 83, 86, 87, 88], "hyperparamet": [2, 83], "10": [2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 17, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 42, 44, 48, 49, 53, 54, 57, 59, 60, 61, 62, 63, 67, 69, 71, 74, 75, 76, 81, 82, 83, 86, 87], "dimens": [2, 9, 33, 39, 66, 67, 71, 74, 77, 79, 80, 83, 88], "ground": [2, 51, 52, 67, 69, 75, 81, 82, 83, 86, 87], "metric": [2, 22, 23, 32, 37, 43, 47, 52, 55, 61, 67, 69, 74, 75, 76, 77, 78, 79, 82, 83, 84, 86, 87, 88], "entropi": [2, 44, 59, 66, 67, 71, 74, 81, 83, 86, 87], "uniform": [2, 6, 8, 34, 40, 41, 44, 47, 50, 56, 57, 62, 63, 66, 67, 68, 69, 72, 74, 75, 80, 83, 84, 85, 87, 88], "chizat": [2, 60, 67, 69, 77, 83, 86, 87], "schmitzer": [2, 60, 67, 69, 77, 83, 86, 87], "vialard": [2, 60, 67, 69, 77, 83, 86, 87], "f": [2, 5, 6, 12, 15, 21, 27, 31, 34, 35, 42, 45, 47, 54, 57, 60, 66, 67, 68, 69, 74, 75, 76, 77, 80, 82, 83, 84, 86, 87, 88], "x": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 39, 40, 41, 42, 44, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "2016": [2, 13, 26, 27, 39, 45, 60, 67, 69, 71, 74, 75, 77, 82, 83, 86, 87, 88], "arxiv": [2, 18, 51, 54, 60, 67, 69, 71, 75, 76, 81, 83, 86, 87], "preprin": [2, 83], "1607": [2, 60, 67, 69, 83, 86, 87], "05816": [2, 60, 67, 69, 83, 86, 87], "binary_search_circl": [2, 75, 88], "u_valu": [2, 75], "v_valu": [2, 75], "u_weight": [2, 75], "v_weight": [2, 75], "p": [2, 4, 6, 9, 23, 30, 31, 32, 33, 34, 35, 39, 43, 47, 53, 57, 61, 62, 63, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 80, 81, 84, 85, 86, 87, 88], "lm": [2, 75], "tm": [2, 53, 75], "tp": [2, 53, 62, 75], "ep": [2, 10, 15, 33, 66, 75], "require_sort": [2, 75], "circl": [2, 37, 39, 47, 55, 65, 75, 84, 86, 88], "binari": [2, 34, 70, 75], "search": [2, 30, 35, 47, 67, 74, 75, 76, 86, 87], "44": [2, 54, 75, 77, 86, 88], "cong": [2, 75], "mathbb": [2, 67, 74, 75, 80, 82, 84, 87], "r": [2, 5, 6, 9, 10, 12, 13, 15, 23, 26, 27, 32, 33, 34, 35, 38, 39, 41, 42, 44, 45, 47, 48, 49, 52, 53, 54, 57, 59, 60, 61, 62, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88], "valu": [2, 4, 6, 9, 13, 28, 30, 31, 33, 34, 47, 52, 53, 60, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 81, 83, 84, 87, 88], "modulo": [2, 75], "subset": [2, 75, 84], "requir": [2, 30, 66, 69, 75, 86, 87, 88], "find": [2, 30, 33, 45, 66, 75, 76, 86, 87], "coordin": [2, 14, 31, 33, 66, 68, 69, 71, 74, 75, 82, 84, 86, 87], "atan2": [2, 66, 75, 84], "w_p": [2, 75, 80, 87], "v": [2, 3, 7, 17, 19, 29, 30, 35, 37, 45, 46, 47, 57, 60, 66, 67, 69, 70, 75, 78, 80, 81, 82, 83, 84, 86, 87, 88], "inf_": [2, 75], "theta": [2, 3, 7, 10, 26, 53, 67, 70, 75, 80], "int_0": [2, 75], "f_u": [2, 75], "q": [2, 31, 32, 34, 60, 61, 66, 67, 68, 74, 75, 77, 79, 87], "f_v": [2, 75], "mathrm": [2, 6, 53, 63, 67, 69, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84], "cdf": [2, 75], "x_1": [2, 38, 47, 75, 84], "x_2": [2, 38, 47, 75, 84], "get": [2, 4, 33, 34, 35, 67, 69, 71, 74, 75, 84, 86, 87, 88], "frac": [2, 6, 38, 42, 66, 67, 69, 71, 74, 75, 77, 79, 80, 81, 82, 84, 85, 87], "pi": [2, 3, 7, 10, 18, 25, 26, 30, 38, 39, 42, 51, 53, 57, 71, 75, 82, 84, 88], "get_coordinate_circl": [2, 75, 84], "backend": [2, 4, 5, 6, 7, 8, 9, 42, 47, 65, 67, 72, 74, 75, 76, 80, 82, 84, 85, 86, 88], "tensorflow": [2, 66, 75, 80, 86, 87, 88], "support": [2, 5, 7, 9, 19, 20, 37, 65, 67, 68, 72, 75, 80, 88], "ndarrai": [2, 30, 33, 66, 67, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 84], "n": [2, 4, 6, 8, 9, 10, 12, 13, 15, 16, 18, 21, 23, 25, 26, 27, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87], "domain": [2, 28, 29, 54, 67, 69, 70, 71, 73, 74, 75, 76, 78, 80, 81, 83, 84, 86, 88], "target": [2, 3, 7, 8, 9, 10, 25, 26, 29, 33, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 62, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "default": [2, 4, 33, 34, 47, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88], "power": [2, 47, 66, 75, 80], "lower": [2, 16, 20, 24, 47, 75], "bound": [2, 75, 88], "dc": [2, 75], "upper": [2, 59, 75], "condit": [2, 54, 65, 66, 69, 72, 74, 75, 76, 85, 86, 87, 88], "associ": [2, 42, 69, 74, 75, 77, 80, 84], "np": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 67, 69, 70, 75, 77, 79, 80, 81, 82, 83, 84, 87], "5": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 67, 69, 70, 74, 75, 76, 77, 79, 80, 82, 83, 84, 86, 87], "8": [2, 5, 6, 9, 10, 12, 13, 15, 16, 18, 20, 21, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 42, 43, 45, 48, 49, 50, 51, 54, 56, 60, 61, 62, 63, 68, 69, 74, 75, 82, 84, 86, 87], "7": [2, 12, 13, 14, 15, 18, 20, 21, 25, 26, 27, 30, 31, 32, 34, 35, 38, 39, 42, 43, 45, 47, 49, 50, 51, 52, 54, 57, 60, 63, 68, 69, 75, 76, 79, 81, 82, 86, 87], "delon": [2, 18, 75, 86], "juli": [2, 10, 75, 86, 88], "julien": [2, 75, 86], "salomon": [2, 75, 86], "andrei": [2, 75, 86], "sobolevski": [2, 75, 86], "fast": [2, 48, 67, 74, 75, 86, 87], "mong": [2, 75, 77, 86], "70": [2, 3, 7, 10, 31, 35, 48, 49, 54, 75, 86], "2010": [2, 75, 77, 86], "2239": [2, 75, 86], "2258": [2, 75, 86], "dist": [2, 8, 10, 22, 30, 31, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 59, 60, 62, 63, 71, 74, 75, 79, 82, 84, 87, 88], "x1": [2, 4, 5, 16, 17, 21, 25, 27, 38, 43, 47, 53, 71, 84], "x2": [2, 5, 16, 17, 21, 25, 27, 38, 43, 47, 53, 71, 84], "sqeuclidean": [2, 22, 23, 47, 51, 52, 67, 69, 75, 82, 84], "w": [2, 8, 9, 10, 33, 34, 43, 47, 61, 63, 67, 68, 71, 73, 74, 75, 80, 81, 82, 83, 84, 86, 87, 88], "compat": [2, 47, 66, 67, 71, 72, 74, 75, 81, 82, 84, 85, 88], "n1": [2, 38, 42, 47, 84], "n2": [2, 31, 35, 38, 42, 47, 84], "callabl": [2, 47, 69, 71, 74, 76, 82, 84, 88], "euclidean": [2, 13, 30, 35, 43, 47, 51, 52, 69, 71, 75, 81, 84, 87, 88], "On": [2, 47, 69, 73, 84, 86, 87, 88], "spatial": [2, 32, 33, 47, 61, 77, 84], "cdist": [2, 32, 33, 47, 61, 77, 84], "braycurti": [2, 47, 84], "canberra": [2, 47, 84], "chebyshev": [2, 47, 84], "cityblock": [2, 47, 51, 75, 84], "correl": [2, 47, 84], "cosin": [2, 47, 84], "dice": [2, 47, 84], "ham": [2, 47, 84, 88], "jaccard": [2, 47, 84], "kulsinski": [2, 47, 84], "mahalanobi": [2, 47, 84], "match": [2, 47, 69, 74, 84, 86, 87], "minkowski": [2, 47, 75, 84], "rogerstanimoto": [2, 47, 84], "russellrao": [2, 47, 84], "seuclidean": [2, 47, 84], "sokalmichen": [2, 47, 84], "sokalsneath": [2, 47, 84], "wminkowski": [2, 47, 84], "yule": [2, 47, 84], "norm": [2, 17, 30, 39, 47, 63, 66, 68, 69, 75, 84], "rank": [2, 41, 47, 72, 81, 84], "given": [2, 4, 33, 34, 35, 42, 47, 66, 67, 69, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88], "emd": [2, 20, 22, 24, 31, 40, 41, 43, 51, 65, 67, 68, 69, 75, 76, 77, 80, 81, 83, 85, 86, 88], "100000": [2, 45, 69, 75, 76, 83], "center_du": [2, 75], "numthread": [2, 75, 88], "earth": [2, 69, 75, 86, 88], "mover": [2, 69, 75, 86, 88], "gamma": [2, 47, 62, 63, 67, 69, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 87], "langl": [2, 67, 69, 74, 75, 76, 77, 80, 82, 83], "rangle_f": [2, 67, 69, 74, 75, 76, 77, 82, 83], "geq": [2, 63, 67, 69, 74, 75, 76, 77, 79, 82, 83, 84, 85, 87], "note": [2, 28, 47, 67, 69, 71, 74, 75, 77, 78, 81, 84, 86, 87, 88], "c": [2, 4, 9, 10, 17, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 33, 34, 35, 39, 40, 41, 45, 47, 50, 51, 53, 57, 62, 63, 65, 66, 67, 69, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "order": [2, 8, 22, 28, 30, 47, 66, 71, 75, 78, 87], "float64": [2, 5, 9, 12, 13, 15, 16, 18, 21, 25, 27, 33, 44, 48, 49, 52, 54, 59, 60, 67, 75], "convert": [2, 8, 21, 25, 27, 33, 66, 75, 84], "But": [2, 72, 74, 75, 85, 87, 88], "cpu": [2, 4, 5, 9, 66, 72, 74, 75, 85, 88], "lead": [2, 8, 47, 67, 72, 74, 75, 76, 85, 87, 88], "overhead": [2, 67, 72, 74, 75, 85, 87], "gpu": [2, 65, 66, 67, 72, 74, 75, 85, 88], "cast": [2, 75, 87], "plan": [2, 4, 11, 35, 37, 41, 43, 48, 49, 62, 63, 67, 68, 72, 74, 75, 77, 79, 81, 82, 83, 84, 87, 88], "input": [2, 15, 18, 60, 66, 67, 68, 69, 72, 74, 75, 81, 84, 85, 87], "prioriti": [2, 75], "integ": [2, 30, 75, 88], "tensor": [2, 4, 5, 8, 9, 42, 66, 74, 75, 76, 87, 88], "might": [2, 17, 20, 22, 23, 24, 28, 32, 47, 50, 54, 67, 75, 87], "precis": [2, 42, 66, 67, 69, 74, 75], "behaviour": [2, 75], "unwant": [2, 75], "vector": [2, 8, 66, 67, 68, 75, 79, 80, 84, 86, 87], "sum": [2, 4, 7, 8, 9, 13, 14, 15, 16, 34, 35, 39, 40, 47, 50, 52, 54, 57, 59, 62, 63, 66, 67, 69, 71, 74, 75, 76, 77, 79, 80, 81, 82, 84, 86, 87], "same": [2, 26, 32, 35, 47, 61, 66, 68, 75, 84, 87], "empti": [2, 56, 57, 69, 72, 75, 84, 85], "nt": [2, 8, 34, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85], "maximum": [2, 17, 30, 33, 47, 53, 66, 67, 69, 74, 75, 76, 79, 81], "ha": [2, 4, 8, 10, 47, 65, 67, 69, 74, 75, 77, 84, 86, 87, 88], "contain": [2, 12, 13, 15, 60, 68, 72, 74, 75, 79, 84, 85, 86, 87, 88], "dual": [2, 10, 11, 13, 37, 67, 68, 70, 72, 75, 78, 81, 82, 84, 85, 86, 87, 88], "variabl": [2, 34, 67, 69, 72, 74, 75, 79, 81, 82, 85, 87, 88], "boolean": [2, 66, 67, 69, 73, 75, 84], "center": [2, 47, 71, 75, 88], "potenti": [2, 7, 10, 67, 75, 81, 82, 84, 88], "center_ot_du": [2, 75], "openmp": [2, 75, 88], "compil": [2, 75, 86, 87, 88], "choos": [2, 30, 53, 67, 71, 75, 87], "thread": [2, 75], "parallel": [2, 75, 84, 87, 88], "select": [2, 44, 74, 75, 87], "highest": [2, 75], "exit": [2, 72, 75, 85, 88], "statu": [2, 72, 75, 84, 85, 88], "simpl": [2, 4, 8, 14, 33, 42, 47, 70, 75, 84, 87, 88], "obviou": [2, 75], "solut": [2, 43, 47, 67, 75, 79, 87, 88], "convers": [2, 75], "bonneel": [2, 5, 56, 65, 75, 80, 86, 87], "van": [2, 75, 86, 87], "de": [2, 67, 75, 86, 87], "pann": [2, 75, 86, 87], "pari": [2, 16, 17, 75, 86, 87], "heidrich": [2, 75, 86, 87], "2011": [2, 74, 75, 86, 87], "decemb": [2, 66, 75, 86, 87, 88], "displac": [2, 52, 75, 84, 86, 87], "interpol": [2, 4, 9, 12, 14, 20, 22, 24, 28, 31, 33, 34, 40, 47, 50, 51, 67, 75, 77, 86, 87], "lagrangian": [2, 75, 77, 79, 86, 87], "mass": [2, 4, 23, 47, 61, 63, 69, 74, 75, 77, 86, 87, 88], "acm": [2, 67, 75, 86, 87], "transact": [2, 54, 67, 69, 75, 76, 86, 87], "graphic": [2, 67, 75, 86, 87, 88], "tog": [2, 67, 75, 86, 87], "vol": [2, 10, 54, 69, 73, 75, 76, 86, 87], "30": [2, 3, 5, 7, 10, 13, 20, 22, 24, 28, 30, 31, 32, 33, 34, 35, 39, 44, 47, 48, 49, 54, 69, 75, 86, 87], "6": [2, 4, 7, 9, 13, 15, 18, 20, 21, 22, 24, 26, 27, 34, 39, 41, 43, 44, 45, 47, 48, 49, 50, 51, 54, 59, 60, 61, 63, 68, 69, 74, 75, 79, 82, 86, 87], "158": [2, 54, 61, 64, 75, 86, 87], "cg": [2, 54, 67, 69, 72, 74, 75, 81, 83, 85, 87], "emd2": [2, 8, 10, 52, 65, 75, 83, 86, 88], "process": [2, 26, 27, 35, 38, 42, 44, 45, 47, 67, 68, 69, 75, 81, 82, 83, 86, 87, 88], "return_matrix": [2, 75], "min_": [2, 6, 8, 9, 10, 42, 63, 67, 69, 71, 74, 75, 77, 79, 83, 87], "nb": [2, 9, 12, 13, 15, 21, 27, 32, 33, 35, 39, 40, 41, 44, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 74, 75, 76, 78], "multipl": [2, 52, 67, 74, 75, 81, 83, 84, 88], "deprec": [2, 9, 12, 60, 61, 75, 84], "emd2_1d": [2, 75, 87], "x_a": [2, 75], "x_b": [2, 75], "dens": [2, 66, 74, 75, 84], "1d": [2, 11, 19, 31, 37, 55, 64, 65, 70, 74, 75, 76, 78, 84, 86, 87, 88], "measur": [2, 5, 9, 16, 18, 31, 45, 56, 67, 68, 71, 74, 75, 80, 82, 84, 86, 87], "sum_j": [2, 31, 75, 81, 82, 85], "gamma_": [2, 47, 67, 69, 75, 76, 77, 82, 83, 85, 87], "ij": [2, 75, 85], "y": [2, 3, 6, 10, 12, 17, 18, 20, 22, 23, 24, 26, 28, 30, 31, 32, 34, 39, 42, 57, 60, 66, 67, 68, 69, 70, 71, 74, 75, 77, 79, 80, 81, 84, 86, 87], "dirac": [2, 16, 40, 50, 75], "locat": [2, 16, 18, 66, 67, 75], "real": [2, 75], "line": [2, 21, 25, 27, 33, 47, 67, 74, 75, 76, 78, 87], "string": [2, 67, 68, 69, 74, 75, 82, 83, 84], "faster": [2, 75, 88], "math": [2, 30, 47, 75, 77, 81, 87], "spars": [2, 30, 47, 66, 67, 71, 74, 75, 81, 83, 84, 86, 87, 88], "coo_matrix": [2, 66, 75], "2017": [2, 10, 67, 69, 73, 75, 85, 86, 87, 88], "2018": [2, 10, 45, 67, 69, 73, 75, 77, 81, 82, 86, 87, 88], "multidimension": [2, 33, 75], "emd_1d": [2, 48, 75, 87, 88], "instead": [2, 7, 10, 12, 34, 60, 66, 67, 68, 75, 86, 87, 88], "factored_optimal_transport": [2, 41, 72], "xa": [2, 72, 85], "xb": [2, 5, 17, 41, 72, 85], "100": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 24, 26, 30, 32, 33, 34, 39, 41, 43, 44, 47, 48, 49, 52, 53, 54, 59, 60, 61, 62, 66, 67, 68, 69, 71, 72, 74, 75, 77, 80], "x0": [2, 6, 30, 72, 75, 80], "07": [2, 13, 27, 36, 39, 45, 48, 49, 54, 58, 61, 67, 68, 72, 75, 77, 82, 83], "factor": [2, 37, 46, 66, 78, 86, 87, 88], "intermedi": [2, 7, 72], "40": [2, 3, 7, 10, 11, 34, 35, 47, 48, 49, 54, 63, 72, 79, 86, 87], "mu": [2, 5, 8, 9, 26, 27, 30, 31, 53, 61, 69, 71, 72, 80, 87], "w_2": [2, 53, 72, 75, 87], "mu_a": [2, 72], "mu_b": [2, 72], "empir": [2, 4, 5, 29, 37, 41, 51, 55, 65, 67, 69, 70, 72, 73, 75, 78, 84, 85, 86, 87, 88], "And": [2, 72], "gradient": [2, 4, 8, 9, 10, 11, 37, 39, 42, 54, 65, 66, 67, 69, 71, 72, 74, 75, 76, 77, 79, 81, 82, 85, 86, 87, 88], "39": [2, 3, 7, 27, 29, 54, 72, 85, 86, 87], "rel": [2, 20, 31, 32, 33, 54, 67, 69, 72, 74, 76, 85, 88], "variat": [2, 13, 52, 72, 76, 85, 87, 88], "ga": [2, 41, 72], "gb": [2, 41, 72], "forrow": [2, 72, 86, 87], "h\u00fctter": [2, 72, 86, 87], "nitzan": [2, 72, 86, 87], "rigollet": [2, 67, 72, 86, 87], "schiebing": [2, 72, 86, 87], "weed": [2, 67, 72, 86, 87], "2019": [2, 5, 30, 31, 44, 67, 69, 72, 74, 80, 86, 87, 88], "april": [2, 67, 72, 86, 87], "statist": [2, 10, 67, 69, 72, 75, 81, 86, 87], "coupl": [2, 26, 37, 46, 67, 68, 69, 72, 74, 78, 86, 87, 88], "22nd": [2, 67, 72, 86, 87], "intern": [2, 4, 5, 9, 10, 15, 30, 31, 34, 35, 45, 57, 67, 69, 72, 74, 75, 76, 77, 80, 81, 82, 86, 87], "confer": [2, 4, 5, 10, 15, 30, 31, 34, 35, 45, 57, 67, 69, 72, 74, 75, 76, 77, 80, 81, 82, 86, 87], "artifici": [2, 10, 67, 69, 72, 81, 86, 87], "intellig": [2, 10, 54, 67, 69, 72, 76, 81, 86, 87], "pp": [2, 5, 10, 54, 67, 69, 72, 76, 80, 86, 87], "2454": [2, 72, 86, 87], "2465": [2, 72, 86, 87], "pmlr": [2, 5, 10, 15, 67, 72, 86, 87], "fused_gromov_wasserstein": [2, 31, 35, 74, 87], "c1": [2, 4, 31, 32, 35, 61, 62, 63, 74, 76, 77, 87], "c2": [2, 4, 31, 32, 35, 61, 62, 63, 74, 77, 87], "loss_fun": [2, 31, 74], "square_loss": [2, 31, 32, 33, 74], "symmetr": [2, 35, 67, 74, 87, 88], "alpha": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 18, 20, 22, 23, 24, 26, 28, 30, 31, 34, 35, 41, 43, 45, 47, 52, 53, 56, 57, 59, 60, 62, 63, 67, 68, 69, 74, 75, 76, 78, 81, 82], "armijo": [2, 74, 76, 88], "g0": [2, 35, 40, 41, 48, 49, 50, 54, 74, 76, 77, 83, 85], "max_it": [2, 20, 23, 26, 27, 32, 33, 69, 74, 81, 88], "tol_rel": [2, 74], "09": [2, 11, 13, 19, 45, 46, 48, 49, 54, 67, 69, 74, 76, 81, 82], "tol_ab": [2, 74], "fgw": [2, 35, 36, 37, 65, 74, 86, 88], "graph": [2, 31, 36, 37, 47, 65, 74, 76, 86, 87, 88], "24": [2, 39, 54, 68, 74, 86, 87, 88], "sum_": [2, 6, 8, 47, 67, 68, 69, 71, 74, 75, 76, 77, 80, 82, 83, 87], "k": [2, 4, 8, 10, 15, 16, 17, 23, 30, 31, 34, 35, 39, 43, 47, 53, 66, 67, 68, 69, 71, 74, 75, 77, 79, 87], "c_1": [2, 31, 74, 76, 77], "c_2": [2, 31, 35, 74, 77], "misfit": [2, 74], "similar": [2, 10, 28, 47, 69, 74, 79, 87], "matric": [2, 9, 33, 38, 42, 47, 54, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88], "conjug": [2, 74, 81], "done": [2, 8, 42, 43, 47, 74, 87, 88], "limit": [2, 66, 74, 88], "memori": [2, 67, 74, 75, 82, 87, 88], "discuss": [2, 69, 73, 74, 76, 86, 87, 88], "across": [2, 74], "structur": [2, 30, 34, 66, 74, 86, 87, 88], "assum": [2, 74, 88], "let": [2, 74, 76], "symmetri": [2, 74], "conduct": [2, 74, 76], "els": [2, 4, 5, 9, 14, 18, 23, 30, 34, 35, 53, 69, 71, 73, 74, 83], "resp": [2, 67, 74, 76], "asymetr": [2, 74], "trade": [2, 34, 74], "research": [2, 65, 74, 86, 87, 88], "close": [2, 30, 31, 47, 69, 73, 74, 75, 84, 87], "form": [2, 8, 10, 47, 69, 73, 74, 75, 79, 84, 87, 88], "initi": [2, 16, 65, 67, 68, 71, 74, 75, 76, 83, 85, 87], "pq": [2, 74], "must": [2, 74, 81], "satisfi": [2, 74, 76], "constraint": [2, 67, 74, 75, 76, 84, 87], "absolut": [2, 20, 31, 32, 54, 66, 68, 74, 76, 85, 88], "directli": [2, 47, 74, 77, 87], "vayer": [2, 4, 30, 31, 34, 35, 38, 42, 65, 68, 74, 76, 86, 87], "titouan": [2, 30, 31, 35, 65, 74, 76, 86], "chapel": [2, 30, 31, 61, 62, 63, 65, 74, 77, 79, 83, 86, 87], "laetitia": [2, 30, 31, 61, 63, 65, 74, 86], "flamari": [2, 3, 4, 5, 7, 8, 9, 10, 12, 13, 16, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 34, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 54, 62, 65, 67, 68, 69, 71, 74, 76, 79, 82, 83, 86, 87], "r\u00e9mi": [2, 4, 5, 9, 16, 30, 31, 35, 65, 67, 69, 74, 76, 86, 87], "tavenard": [2, 30, 31, 65, 74, 86, 87], "romain": [2, 30, 31, 65, 74, 86], "courti": [2, 4, 9, 10, 14, 26, 27, 30, 31, 32, 33, 34, 35, 38, 39, 42, 45, 47, 54, 57, 65, 67, 68, 69, 71, 74, 75, 76, 80, 82, 86, 87], "nicola": [2, 5, 9, 14, 30, 31, 32, 33, 35, 47, 56, 65, 67, 69, 74, 76, 80, 86, 87], "applic": [2, 28, 30, 31, 35, 54, 67, 69, 73, 74, 75, 76, 77, 85, 86], "machin": [2, 4, 5, 10, 15, 30, 31, 34, 54, 67, 69, 74, 75, 76, 77, 86, 87, 88], "icml": [2, 4, 30, 31, 34, 71, 74, 77, 86, 87], "47": [2, 6, 11, 38, 42, 54, 68, 74, 86, 88], "chowdhuri": [2, 74, 86], "m\u00e9moli": [2, 74, 86, 87], "network": [2, 10, 74, 86, 87, 88], "stabl": [2, 7, 66, 74, 86, 87, 88], "invari": [2, 74, 86], "infer": [2, 66, 74, 86], "ima": [2, 74, 86], "757": [2, 74, 86], "787": [2, 74, 86], "fused_gromov_wasserstein2": [2, 74], "differenti": [2, 8, 9, 42, 74, 86, 87, 88], "wrt": [2, 4, 66, 74, 84], "quadrat": [2, 11, 37, 63, 70, 74, 76, 77, 78, 82, 83, 84, 86, 88], "38": [2, 4, 7, 34, 54, 74, 86, 87], "asymmetr": [2, 74, 88], "fuse": [2, 36, 65, 74, 86, 87, 88], "vincent": [2, 4, 34, 35, 65, 74, 76, 86, 87], "cuaz": [2, 4, 34, 35, 65, 74, 76, 86, 87], "corn": [2, 4, 34, 35, 74, 76, 86, 87], "2021": [2, 4, 18, 34, 35, 62, 66, 71, 74, 75, 76, 79, 83, 86, 87, 88], "gromov_barycent": [2, 33, 74, 87, 88], "lambda": [2, 30, 74, 77, 79, 87], "tol": [2, 23, 33, 69, 74, 77, 81], "init_c": [2, 74], "random_st": [2, 4, 33, 34, 70, 74], "leq": [2, 74, 76, 77, 87], "descent": [2, 4, 8, 9, 42, 68, 69, 71, 74, 76, 86, 87], "lambda_": [2, 74, 87], "gw": [2, 35, 74, 76, 77, 86, 88], "updat": [2, 67, 69, 74, 75, 79, 82, 84, 88], "accord": [2, 74, 84], "kernel": [2, 26, 69, 74, 77, 84, 86, 87], "calcul": [2, 17, 38, 66, 67, 68, 74], "random": [2, 4, 5, 7, 8, 10, 16, 17, 21, 23, 25, 27, 30, 31, 32, 33, 34, 35, 38, 39, 41, 42, 45, 53, 57, 61, 62, 63, 66, 70, 74, 80, 82, 84, 88], "randomst": [2, 4, 8, 21, 25, 27, 33, 45, 70, 74, 80, 82, 84], "seed": [2, 5, 7, 23, 30, 31, 33, 34, 35, 39, 41, 42, 62, 63, 66, 70, 74, 80, 82, 84], "permut": [2, 4, 5, 9, 74], "arbitrarili": [2, 74], "dure": [2, 74], "12": [2, 3, 7, 11, 13, 15, 16, 20, 27, 32, 34, 39, 42, 54, 74, 75, 77, 86, 87], "gabriel": [2, 10, 65, 67, 74, 77, 86, 87], "marco": [2, 10, 35, 65, 67, 74, 75, 76, 77, 86, 87], "justin": [2, 74, 77, 86, 87], "solomon": [2, 67, 74, 77, 86, 87], "averag": [2, 66, 69, 71, 74, 77, 86, 87], "gromov_wasserstein": [2, 4, 31, 32, 35, 74, 87], "kl_loss": [2, 74], "minim": [2, 4, 5, 6, 8, 9, 30, 34, 35, 42, 74, 76, 81, 83, 84, 87, 88], "13": [2, 13, 15, 19, 20, 27, 31, 39, 47, 52, 54, 74, 77, 86, 87, 88], "facundo": [2, 74, 86, 87], "approach": [2, 13, 20, 22, 24, 28, 67, 74, 75, 86, 87], "object": [2, 3, 4, 5, 6, 7, 10, 13, 25, 33, 48, 49, 52, 53, 67, 68, 69, 74, 75, 81, 84, 86, 87], "foundat": [2, 74, 77, 86, 87, 88], "11": [2, 12, 13, 20, 27, 34, 39, 54, 60, 62, 71, 74, 85, 86, 87], "417": [2, 74, 86, 87, 88], "487": [2, 4, 11, 74, 86, 87], "gromov_wasserstein2": [2, 4, 74, 87, 88], "discrep": [2, 57, 74, 77, 80, 88], "gw_dist": [2, 32, 35, 74], "marix": [2, 74], "max_sliced_wasserstein_dist": [2, 80], "x_": [2, 42, 67, 69, 75, 80], "x_t": [2, 67, 69, 80, 84], "n_project": [2, 5, 6, 56, 57, 80], "50": [2, 3, 5, 6, 7, 8, 10, 11, 13, 17, 18, 23, 34, 40, 48, 49, 50, 54, 56, 57, 62, 67, 77, 80, 88], "mont": [2, 80], "carlo": [2, 80], "approxim": [2, 10, 13, 26, 67, 68, 69, 74, 76, 80, 86, 87], "slice": [2, 11, 58, 65, 70, 75, 86, 87, 88], "mathcal": [2, 38, 69, 70, 73, 74, 80, 84, 87], "swd": [2, 56, 80], "_p": [2, 80, 87], "nu": [2, 5, 6, 9, 31, 71, 75, 80], "underset": [2, 80], "_in": [2, 80], "theta_": [2, 80], "stand": [2, 80], "pushforwar": [2, 80], "ni": [2, 80], "mapsto": [2, 74, 80], "rangl": [2, 67, 80], "n_samples_a": [2, 67, 80], "n_samples_b": [2, 67, 80], "sliced_wasserstein_dist": [2, 5, 56, 80, 88], "20": [2, 3, 5, 7, 8, 9, 10, 12, 13, 15, 16, 17, 20, 26, 27, 30, 31, 32, 35, 38, 39, 42, 44, 47, 48, 49, 51, 52, 53, 54, 57, 59, 60, 61, 67, 74, 75, 80, 86, 87, 88], "normal": [2, 6, 12, 13, 15, 16, 30, 35, 52, 60, 66, 69, 71, 80, 84, 88], "35": [2, 7, 23, 39, 54, 80, 86, 87, 88], "deshpand": [2, 80, 86, 87], "hu": [2, 80, 86, 87], "sun": [2, 80, 86, 87], "pyrro": [2, 80, 86, 87], "siddiqui": [2, 80, 86, 87], "koyejo": [2, 80, 86, 87], "schwing": [2, 80, 86, 87], "gan": [2, 11, 37, 80, 86, 87, 88], "proceed": [2, 15, 67, 80, 81, 86, 87], "ieee": [2, 54, 69, 76, 80, 86, 87], "cvf": [2, 80, 86, 87], "vision": [2, 5, 56, 80, 86, 87], "pattern": [2, 54, 69, 76, 80, 86, 87], "recognit": [2, 80, 86, 87], "10648": [2, 80, 86, 87], "10656": [2, 80, 86, 87], "semidiscrete_wasserstein2_unif_circl": [2, 53, 75, 88], "mu_n": [2, 6, 10, 75, 80], "alpha_i": [2, 75, 80], "x_i": [2, 6, 31, 75, 80, 87], "left": [2, 8, 15, 20, 24, 42, 66, 67, 69, 73, 74, 75, 78, 80, 81, 82, 85], "alpha_k": [2, 75], "unif": [2, 4, 6, 8, 16, 17, 18, 31, 32, 33, 34, 40, 41, 42, 45, 51, 53, 61, 75, 80, 82, 84], "delta_": [2, 6, 31, 75, 80, 81, 87], "02111111": [2, 75], "46": [2, 54, 57, 75, 80, 86, 88], "bonet": [2, 6, 53, 57, 65, 75, 80, 86], "berg": [2, 57, 75, 80, 86], "septier": [2, 57, 75, 80, 86], "drumetz": [2, 57, 75, 80, 86], "pham": [2, 57, 75, 80, 86], "2023": [2, 57, 75, 80, 86], "spheric": [2, 11, 37, 58, 65, 75, 80, 86, 88], "warmstart": [2, 67, 68, 88], "omega": [2, 63, 67, 76, 77, 81, 82, 83, 87], "dim_a": [2, 67, 77, 79, 83], "dim_b": [2, 67, 77, 79, 83], "By": [2, 67, 71, 79, 87], "too": [2, 67, 71, 87], "enough": [2, 30, 67, 71, 87], "sharper": [2, 67, 87], "numer": [2, 17, 47, 60, 66, 67, 69, 71, 77, 84, 86, 87, 88], "last": [2, 47, 67, 68, 79, 87, 88], "veri": [2, 28, 47, 67, 74, 84, 86, 87], "slow": [2, 67, 71, 87, 88], "even": [2, 12, 13, 60, 61, 67, 87, 88], "finit": [2, 66, 67, 87], "sinkhorn_epsilon_sc": [2, 67, 69, 87], "reli": [2, 67, 74, 86, 87], "warm": [2, 67, 87], "sometim": [2, 67, 87], "better": [2, 10, 44, 67, 81, 87, 88], "greedi": [2, 67, 86, 87, 88], "greenkhorn": [2, 65, 67, 87, 88], "speedup": [2, 67, 87, 88], "screen": [2, 37, 46, 67, 70, 78, 86, 87], "screenkhorn": [2, 37, 46, 65, 70, 78, 87, 88], "aim": [2, 6, 10, 63, 67, 69, 84, 87], "those": [2, 14, 47, 67, 69, 74, 75, 83, 87], "tupl": [2, 67, 68, 76], "logarithm": [2, 66, 67], "36552929": [2, 67, 87], "13447071": [2, 67, 87], "lightspe": [2, 67, 69, 81, 83, 86, 87], "neural": [2, 10, 26, 27, 38, 42, 44, 45, 67, 68, 69, 81, 82, 83, 86, 87, 88], "nip": [2, 26, 27, 67, 69, 81, 83, 86, 87], "26": [2, 21, 29, 39, 44, 54, 67, 69, 81, 83, 86, 87, 88], "2013": [2, 67, 69, 81, 83, 86, 87], "9": [2, 4, 6, 10, 13, 17, 18, 20, 23, 26, 27, 30, 32, 33, 34, 35, 38, 39, 41, 42, 43, 45, 48, 54, 61, 67, 69, 79, 81, 82, 83, 86, 87], "stabil": [2, 67, 75, 83, 86, 87, 88], "preprint": [2, 18, 54, 60, 67, 69, 71, 75, 76, 83, 86, 87], "1610": [2, 67, 83, 86, 87], "06519": [2, 67, 83, 86, 87], "34": [2, 7, 17, 39, 54, 67, 86, 87], "feydi": [2, 67, 86, 87], "s\u00e9journ\u00e9": [2, 67, 86, 87], "amari": [2, 67, 86, 87], "trouv\u00e9": [2, 67, 86, 87], "mmd": [2, 67, 86, 87], "diverg": [2, 10, 52, 63, 66, 67, 74, 76, 83, 86, 87, 88], "2681": [2, 67, 86, 87], "2690": [2, 67, 86, 87], "unregular": [2, 67, 69, 76, 79, 81, 83], "sinkhorn_knopp": [2, 67, 83, 87], "classic": [2, 67, 69, 83, 87, 88], "epslilon": [2, 67, 83], "sinkhorn2": [2, 52, 67, 86, 88], "26894142136999516": [2, 67], "21": [2, 5, 7, 11, 39, 54, 67, 86, 87], "altschul": [2, 67, 86, 87], "Near": [2, 67, 86, 87], "linear": [2, 3, 7, 10, 26, 27, 29, 36, 37, 62, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 79, 83, 84, 86, 87, 88], "31": [2, 3, 5, 7, 17, 39, 47, 54, 56, 67, 73, 80, 86, 87, 88], "sinkhorn_lpl1_mm": [2, 69, 87], "labels_a": [2, 69], "eta": [2, 9, 26, 27, 69], "numinneritermax": [2, 17, 67, 69, 76], "200": [2, 3, 6, 7, 10, 16, 17, 48, 53, 54, 69, 74, 76, 77, 88], "stopinnerthr": [2, 69], "nonconvex": [2, 69], "group": [2, 20, 22, 69, 86, 88], "lasso": [2, 20, 22, 69, 79, 86, 88], "omega_": [2, 69, 87], "omega_g": [2, 69], "_c": [2, 69], "_1": [2, 67, 69, 77, 87], "index": [2, 4, 68, 69, 79, 82, 86], "class": [2, 4, 7, 10, 23, 28, 65, 67, 70, 71, 88], "label": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 20, 22, 23, 24, 26, 28, 30, 32, 34, 39, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 67, 69, 70, 71, 84, 87, 88], "inner": [2, 67, 69, 74], "tuia": [2, 54, 67, 69, 76, 86, 87], "rakotomamonji": [2, 39, 44, 54, 65, 67, 69, 71, 76, 86, 87], "99": [2, 4, 54, 69, 76, 86, 87, 88], "1510": [2, 54, 69, 76, 86, 87], "06567": [2, 54, 69, 76, 86, 87], "kl": [2, 49, 59, 66, 67, 68, 74, 81, 83, 86, 87], "kullback": [2, 59, 63, 66, 74, 81, 83, 87], "leibler": [2, 59, 63, 66, 74, 81, 83, 87], "25": [2, 6, 7, 10, 13, 30, 31, 39, 53, 54, 56, 57, 77, 79, 83, 86, 87, 88], "unnorm": [2, 77, 83], "One": [2, 69, 83, 86, 87, 88], "mani": [2, 83], "sinkhorn_reg_sc": [2, 83], "ot_dist": [2, 83], "51122823": [2, 83], "18807035": [2, 83], "frogner": [2, 83, 86, 87], "zhang": [2, 83, 86, 87], "mobahi": [2, 83, 86, 87], "h": [2, 8, 15, 30, 62, 67, 69, 70, 71, 74, 79, 83, 84, 86, 87], "araya": [2, 83, 86, 87], "polo": [2, 83, 86, 87], "poggio": [2, 83, 86, 87], "sinkhorn_knopp_unbalanc": [2, 83, 87], "sinkhorn_stabilized_unbalanc": [2, 83, 87], "sinkhorn_reg_scaling_unbalanc": [2, 83], "sinkhorn_unbalanced2": [2, 83, 87], "31912866": [2, 83], "sim": [2, 69, 80], "pushforward": [2, 80], "et": [2, 5, 56, 62, 67, 75, 80, 86, 87], "al": [2, 5, 56, 62, 67, 75, 80, 86, 87], "radon": [2, 5, 56, 80, 86, 87], "imag": [2, 5, 13, 14, 29, 33, 37, 47, 54, 56, 67, 69, 76, 80, 84, 86, 87, 88], "51": [2, 5, 18, 19, 36, 54, 56, 80, 86, 87], "22": [2, 5, 13, 39, 54, 56, 67, 80, 86, 87, 88], "45": [2, 5, 18, 54, 56, 58, 75, 80, 86, 87, 88], "sliced_wasserstein_spher": [2, 57, 80, 88], "ssw_p": [2, 80], "int_": [2, 80], "sigma": [2, 10, 23, 25, 26, 27, 30, 38, 69, 70, 80, 84], "foral": [2, 67, 74, 80, 84], "tx": [2, 14, 80], "_2": [2, 67, 73, 74, 79, 80, 84], "sqrt": [2, 6, 34, 39, 57, 66, 73, 77, 80], "keepdim": [2, 39, 57, 66, 80], "sliced_wasserstein_sphere_unif": [2, 6, 80, 88], "ssw_2": [2, 6, 80], "42": [2, 3, 4, 5, 7, 18, 21, 25, 27, 34, 41, 54, 75, 80, 86, 88], "randn": [2, 3, 5, 7, 8, 10, 17, 25, 31, 32, 38, 39, 42, 45, 57, 61, 66, 80, 82], "500": [2, 5, 6, 7, 8, 10, 21, 27, 53, 56, 57, 66, 68, 74, 80, 81], "ssw": [2, 6, 80], "allclos": [2, 66, 80], "01734": [2, 80], "atol": [2, 66, 80], "reg_typ": [2, 49, 69, 81, 87], "unbalanced_typ": 2, "n_thread": 2, "plan_init": 2, "potentials_init": 2, "discret": [2, 21, 26, 27, 34, 54, 67, 69, 75, 76, 82, 86, 87, 88], "otresult": [2, 84], "t_": 2, "m_": [2, 31, 79, 87], "lambda_r": 2, "lambda_u": 2, "penal": [2, 37, 64, 70, 79, 83, 86], "exact": [2, 19, 37, 46, 54, 64, 67, 70, 75, 77, 78, 83, 84, 86, 87, 88], "array_lik": [2, 84], "l2": [2, 12, 13, 37, 49, 60, 64, 70, 74, 79, 81, 83, 86, 87, 88], "balanc": [2, 84, 87], "unction": 2, "tv": [2, 52], "omp": 2, "_type_": 2, "toler": [2, 33, 66, 68, 77, 81], "re": [2, 56, 57, 61, 62, 66, 75], "obtain": [2, 53, 69, 79, 87], "value_linear": [2, 84], "paper": [2, 13, 67, 86, 87, 88], "formul": [2, 77, 81, 86, 87], "17": [2, 20, 27, 39, 54, 81, 86, 87], "blondel": [2, 45, 65, 81, 82, 86, 87, 88], "segui": [2, 16, 45, 81, 82, 86, 87], "rolet": [2, 45, 65, 81, 82, 86, 87], "twenti": [2, 67, 81, 86, 87], "aistat": [2, 67, 69, 81, 86, 87], "tic": [2, 13, 31, 84, 88], "matlab": [2, 65, 84], "toc": [2, 13, 31, 84, 88], "elaps": [2, 13, 31, 84], "toq": [2, 84], "julia": [2, 84], "type_a": [2, 66, 80, 84], "length": [2, 66, 68, 79, 82, 84], "bin": [2, 9, 12, 13, 15, 44, 48, 49, 52, 54, 59, 60, 70, 84, 87], "pytorch": [2, 11, 37, 42, 65, 66, 70, 78, 82, 84, 86, 87, 88], "jax": [2, 66, 84, 86, 87, 88], "wasserstein_1d": [2, 9, 53, 75, 87, 88], "dimension": [2, 32, 61, 67, 75, 86, 88], "15": [2, 10, 15, 16, 20, 24, 27, 30, 31, 39, 42, 54, 61, 69, 75, 83, 86, 87, 88], "batch": [2, 9, 10, 67, 69, 74, 75, 82], "formal": [2, 67, 75], "so": [2, 4, 10, 63, 74, 75, 84, 87, 88], "quantil": [2, 75, 77], "integr": [2, 75], "them": [2, 35, 69, 75, 77, 88], "whenev": [2, 75], "over": [2, 10, 34, 66, 67, 74, 75, 77], "second": [2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 66, 68, 74, 75, 76, 81, 84, 86, 87, 88], "chap": [2, 75], "atom": [2, 67, 74, 75], "been": [2, 10, 65, 75, 77, 84, 86, 87, 88], "wasserstein_circl": [2, 53, 75, 88], "ot_": [2, 75, 87], "cdf_u": [2, 75], "cdf_v": [2, 75], "w_1": [2, 75, 87], "levm": [2, 75], "hundries": [2, 75, 86], "shayan": [2, 75, 86], "marcel": [2, 75, 86], "klatt": [2, 75, 86], "axel": [2, 75, 86], "munk": [2, 75, 86], "circular": [2, 30, 75, 86], "direct": [2, 34, 52, 75, 76, 81, 86, 88], "innov": [2, 75, 86], "bicentenni": [2, 75, 86], "tribut": [2, 75, 86], "florenc": [2, 75, 86], "nightingal": [2, 75, 86], "singapor": [2, 75, 86], "springer": [2, 75, 86], "natur": [2, 66, 75, 86], "2022": [2, 74, 75, 86], "57": [2, 54, 75, 83, 86, 88], "82": [2, 47, 54, 75, 86, 88], "weak_optimal_transport": [2, 40, 85], "weak": [2, 37, 46, 65, 70, 78, 86, 87, 88], "_j": [2, 71, 75, 81, 82, 85], "guess": [2, 76, 85], "indep": [2, 76, 85], "joint": [2, 34, 67, 69, 76, 85, 86, 87, 88], "densiti": [2, 76, 85], "numitermaxemd": [2, 76, 85], "stopthr2": [2, 76, 85], "gozlan": [2, 18, 75, 85, 86, 87], "roberto": [2, 85, 86, 87], "samson": [2, 85, 86, 87], "tetali": [2, 85, 86, 87], "kantorovich": [2, 85, 86, 87], "dualiti": [2, 13, 85, 86, 87], "273": [2, 85, 86, 87], "3327": [2, 85, 86, 87], "3405": [2, 85, 86, 87], "go": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 88], "end": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 75, 79, 87, 88], "download": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "author": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 86], "remi": [3, 4, 5, 7, 8, 9, 10, 12, 13, 16, 20, 21, 22, 23, 25, 26, 27, 28, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52], "polytechniqu": [3, 4, 5, 7, 8, 9, 10, 16, 18, 40, 41, 43], "edu": [3, 4, 5, 7, 8, 9, 10, 16, 18, 40, 41, 43, 87], "licens": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63], "mit": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 86], "sphinx_gallery_thumbnail_numb": [3, 4, 5, 6, 7, 8, 10, 12, 13, 15, 16, 18, 21, 22, 25, 26, 27, 28, 31, 34, 35, 39, 40, 41, 43, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62], "pyplot": [3, 6, 7, 10, 12, 14, 15, 17, 18, 21, 25, 27, 30, 31, 33, 42, 43], "pl": [3, 4, 5, 6, 7, 8, 9, 10, 13, 16, 18, 20, 22, 23, 24, 26, 28, 31, 32, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "manual_se": [3, 5, 6, 7, 10], "n_source_sampl": [3, 7, 20, 24, 26, 69], "n_target_sampl": [3, 7, 20, 24, 26, 69], "noise_level": [3, 7, 26], "make_data_classif": [3, 20, 22, 23, 24, 26, 28], "gaussrot": [3, 26], "nz": [3, 23, 26, 39, 70], "xt": [3, 7, 8, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 39, 40, 41, 50, 51, 53, 56, 57, 61, 62, 63, 67, 69, 73, 78, 79, 82, 87], "yt": [3, 20, 22, 23, 24, 26, 28, 31, 39, 69], "mode": [3, 7, 26, 69], "varianc": [3, 7, 26, 32], "map": [3, 7, 29, 37, 45, 63, 65, 69, 70, 73, 74, 75, 82, 84, 86, 88], "clf": [3, 4, 5, 6, 7, 10, 13, 23, 25, 26, 31, 33, 34, 35, 38, 42, 43, 47, 51, 52, 60, 62], "scatter": [3, 4, 5, 6, 7, 8, 10, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 31, 32, 33, 34, 39, 47, 53, 57, 61, 62, 63], "marker": [3, 7, 16, 18, 20, 22, 23, 24, 26, 28, 34, 39], "o": [3, 7, 14, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 43, 47, 74, 86, 87, 88], "legend": [3, 5, 6, 7, 8, 9, 10, 12, 13, 15, 16, 20, 22, 23, 24, 26, 28, 34, 39, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 62], "loc": [3, 7, 16, 20, 22, 24, 26, 28, 35, 39, 40, 41, 50, 51, 56, 57, 59, 62], "requires_grad": [3, 8, 42], "adam": [3, 7, 74], "lr": [3, 4, 5, 6, 7, 8, 9, 10, 42, 45, 82], "n_iter": [3, 6, 7, 10], "rang": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 17, 23, 30, 33, 34, 35, 38, 42, 43, 47, 52, 53, 56, 57, 60, 62, 63], "nois": [3, 7, 10, 30, 61, 70], "minu": [3, 7], "becaus": [3, 7, 75, 87, 88], "maxim": [3, 7, 82, 83, 88], "te": [3, 7], "loss_dual_entrop": [3, 7], "append": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 15, 30, 33, 34, 35, 42, 60, 61, 84], "detach": [3, 4, 5, 6, 7, 8, 9, 10, 42], "3d": [3, 6, 7, 10, 12, 13, 18, 57, 60], "backward": [3, 4, 5, 7, 8, 9, 10, 42], "zero_grad": [3, 7], "grid": [3, 6, 7, 8, 10, 57], "neg": [3, 7, 62, 66, 67, 74, 75, 79, 81, 83, 86], "xlabel": [3, 6, 7, 8, 10, 21, 27, 31, 34, 38, 42, 47, 52, 53, 56, 57], "ge": [3, 50, 54], "plan_dual_entrop": [3, 7], "202049490022473": 3, "19": [3, 7, 20, 27, 39, 45, 54, 82, 86, 87, 88], "45429619694556": 3, "32": [3, 5, 7, 16, 39, 54, 71, 74, 86, 87], "008976288321335": 3, "36": [3, 5, 7, 54, 79, 83, 86, 87], "71750447841262": 3, "721924134774035": 3, "41": [3, 9, 47, 54, 79, 83, 86, 88], "337741739644436": 3, "60": [3, 5, 7, 9, 10, 12, 13, 15, 34, 44, 48, 49, 54, 59, 60], "07220392602178": 3, "37329404204123": 3, "80": [3, 7, 10, 13, 16, 34, 48, 49, 54, 88], "46538709539036": 3, "90": [3, 7, 10, 18, 47, 48, 49, 52, 54, 88], "51114777483666": 3, "53240280319021": 3, "110": [3, 7, 10, 47, 48, 50, 54, 55], "541360670640984": 3, "120": [3, 7, 10, 48, 54, 57], "546352049235054": 3, "130": [3, 7, 10, 48, 54, 88], "549608888750264": 3, "140": [3, 7, 10, 48, 54, 88], "55151801852806": 3, "150": [3, 6, 7, 10, 18, 20, 22, 24, 28, 43, 48, 53, 54, 88], "552861096096855": 3, "160": [3, 7, 10, 48, 54, 88], "55383687315384": 3, "170": [3, 7, 10, 48, 54, 88], "55455063202052": 3, "180": [3, 7, 10, 48, 54], "5550874367793": 3, "190": [3, 7, 10, 48, 54], "555498801265216": 3, "plot2d_samples_mat": [3, 22, 40, 41, 50, 51], "zorder": [3, 4, 7, 34, 43], "01": [3, 11, 12, 19, 20, 24, 29, 31, 32, 35, 39, 45, 48, 49, 52, 54, 55, 58, 60, 61, 64, 67, 77, 79, 82], "loss_dual_quadrat": 3, "gq": 3, "plan_dual_quadrat": 3, "0018442196020623663": 3, "715631991892923": 3, "73959663496856": 3, "318051116039946": 3, "31948493018004": 3, "95113598012611": 3, "75915912809214": 3, "15595573388191": 3, "2988798271156": 3, "3658815110914": 3, "395564988661924": 3, "40992737442109": 3, "41717959596811": 3, "42139174315716": 3, "42388700687459": 3, "42549647744375": 3, "42664327891892": 3, "42746748271951": 3, "42804200545007": 3, "4284521765619": 3, "total": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 87], "minut": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "076": [3, 11], "plot_dual_ot_pytorch": [3, 11], "jupyt": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 88], "notebook": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 87, 88], "ipynb": [3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "part": [4, 88], "node": [4, 30], "model": [4, 5, 7, 67, 86, 87], "actual": [4, 87], "recov": [4, 10, 82, 87], "proport": [4, 34, 35, 47, 67, 69, 70, 78], "sbm": [4, 34, 35], "accur": 4, "simultan": 4, "sructur": 4, "properti": [4, 10, 74, 84, 87], "sklearn": [4, 33, 34, 84, 88], "manifold": [4, 33, 34, 71, 87], "md": [4, 34, 88], "pylab": [4, 5, 8, 9, 13, 16, 18, 20, 22, 23, 24, 26, 28, 32, 34, 35, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63], "torch": [4, 5, 6, 8, 9, 10, 42, 66, 87, 88], "rng": [4, 8, 21, 25, 27, 33, 45, 82], "def": [4, 5, 6, 7, 8, 10, 18, 21, 23, 25, 27, 30, 32, 33, 34, 35, 53, 54, 62, 66, 84], "get_sbm": 4, "nc": [4, 34], "ratio": 4, "nbpc": 4, "round": [4, 34, 35, 47, 77, 83], "astyp": [4, 5, 16, 17, 18, 21, 25, 27, 33, 34], "zero": [4, 5, 6, 8, 10, 12, 13, 17, 34, 35, 42, 47, 51, 52, 53, 60, 66, 68, 74, 75, 84, 88], "rand": [4, 6, 10, 25, 39, 41, 61, 63, 66], "ey": [4, 34, 66], "05": [4, 7, 11, 13, 20, 26, 27, 39, 45, 48, 49, 54, 63, 66, 67, 69, 74, 79, 82], "ones": [4, 10, 16, 17, 30, 31, 34, 35, 47, 50, 56, 57, 62, 63, 66, 69, 74], "2d": [4, 18, 19, 20, 22, 23, 24, 28, 34, 37, 40, 41, 47, 51, 55, 58, 62, 64, 67, 70, 75, 77, 78, 83, 84, 87, 88], "dissimilar": [4, 33, 34], "precomput": [4, 33, 34, 87], "fit_transform": [4, 33, 34, 69], "plot_graph": [4, 34], "color": [4, 6, 7, 8, 9, 12, 15, 17, 29, 30, 32, 33, 34, 35, 37, 38, 42, 43, 47, 50, 53, 57, 61, 62, 63, 69, 78, 84, 87, 88], "c0": [4, 7, 34, 62, 63], "edgecolor": [4, 17, 34], "cmap": [4, 7, 12, 14, 15, 23, 30, 31, 32, 34, 47, 60, 61, 63], "tab10": [4, 34], "vmax": [4, 23, 30, 34, 42, 47], "subplot": [4, 6, 7, 10, 12, 13, 14, 15, 17, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 34, 35, 38, 39, 40, 41, 42, 47, 51, 52, 54, 60, 61, 62, 63, 78], "axi": [4, 5, 6, 7, 14, 15, 17, 18, 21, 23, 25, 27, 34, 35, 43, 51, 53, 54, 56, 57, 61, 63, 66, 71, 81, 84], "imshow": [4, 14, 15, 20, 21, 22, 24, 25, 27, 28, 31, 32, 34, 38, 40, 42, 47, 50, 51, 54, 61, 63], "nearest": [4, 20, 22, 24, 28, 31, 34, 40, 50, 51, 69], "adjac": 4, "home": [4, 6, 7, 9, 12, 17, 20, 22, 23, 24, 28, 32, 33, 34, 44, 47, 50, 53, 54, 60, 61], "circleci": [4, 6, 7, 9, 12, 17, 20, 22, 23, 24, 28, 32, 33, 34, 44, 47, 50, 53, 54, 60, 61, 88], "lib": [4, 33, 34, 66], "python3": [4, 33, 34], "site": [4, 33, 34], "packag": [4, 33, 34, 67, 84, 87], "_md": [4, 33, 34], "299": [4, 33, 34], "futurewarn": [4, 33, 34], "normalized_stress": [4, 33, 34], "auto": [4, 31, 33, 34, 61], "To": [4, 10, 33, 34, 66, 67, 77, 84, 86, 87], "suppress": [4, 33, 34], "manual": [4, 33, 34], "plot_optim_gromov_pytorch": [4, 11], "81": [4, 54], "userwarn": [4, 7, 9, 17, 20, 22, 23, 24, 28, 32, 34, 44, 47, 50, 54, 60], "colormap": [4, 12, 34, 60], "ignor": [4, 34, 42, 76], "adajac": 4, "diagon": [4, 28, 30, 66, 73], "want": [4, 10, 17, 20, 22, 23, 24, 28, 32, 42, 47, 50, 54, 87, 88], "min_weight_gw": 4, "a2": [4, 12, 13, 15, 17, 60], "nb_iter_max": [4, 5, 9], "min_a": [4, 87], "our": [4, 5, 9, 86, 87, 88], "c1_torch": 4, "c2_torch": 4, "a0": 4, "random_init": 4, "a1_torch": 4, "requires_grad_": [4, 5, 6, 9], "a2_torch": 4, "loss_it": [4, 5, 9], "03d": 4, "no_grad": [4, 5, 8, 9, 42], "grad": [4, 5, 6, 8, 9, 39, 42, 66, 74, 81, 82], "zero_": [4, 5, 8, 9, 42], "proj_simplex": [4, 8, 9, 42], "a1": [4, 12, 13, 15, 17, 60], "a0_est": 4, "loss_iter0": 4, "29850312": 4, "20157616": 4, "49992072": 4, "clear": 4, "noe": 4, "most": [4, 67, 84, 87, 88], "here": [4, 6, 62, 74, 86, 87, 88], "previous": 4, "t_unif": 4, "label_unif": 4, "argmax": [4, 34, 35, 38, 42, 66], "t_est": 4, "label_est": 4, "est": 4, "7760154087783518": 4, "5785554952306606": 4, "7708789474385981": 4, "6510858680020267": 4, "now": [4, 6, 47, 66, 87, 88], "seen": [4, 67, 75, 87], "probabl": [4, 9, 18, 34, 42, 74, 75, 86], "graph_compession_gw": 4, "nb_node": 4, "clamp": 4, "a0_est2": 4, "c0_est2": 4, "loss_iter2": 4, "5e": [4, 15, 23, 32, 33, 62], "vmin": [4, 30, 42, 47], "colorbar": [4, 34, 47], "29985821": 4, "18926744": 4, "51087435": 4, "0x7f1d18083fd0": 4, "exempl": [5, 34, 88], "wassersein": [5, 52, 88], "popos": 5, "liutku": [5, 86, 87], "simsekli": [5, 86, 87], "majewski": [5, 86, 87], "durmu": [5, 86, 87], "st\u00f6ter": [5, 86, 87], "nonparametr": [5, 86, 87], "diffus": [5, 86, 87], "4104": [5, 86, 87], "4113": [5, 86, 87], "load": [5, 21, 27, 47], "i1": [5, 16, 18, 21, 25, 27], "imread": [5, 14, 15, 16, 18, 21, 25, 27, 33], "redcross": [5, 14, 16, 18], "png": [5, 14, 15, 16, 18, 33, 43], "i2": [5, 16, 18, 21, 25, 27], "tooth": [5, 14, 18], "sz": [5, 16, 18], "xx": [5, 7, 16], "yy": [5, 7, 16], "meshgrid": [5, 6, 7, 16, 18, 66], "arang": [5, 9, 12, 13, 15, 16, 18, 31, 38, 39, 42, 44, 48, 49, 51, 52, 54, 59, 60, 66, 67], "stack": [5, 16, 18, 34, 66], "x3": [5, 16, 17], "collect": [5, 12, 13, 33, 53, 60, 67], "pathcollect": [5, 33, 53], "0x7f1e183e4880": 5, "devic": [5, 9, 66, 87, 88], "cuda": [5, 9, 65, 88], "is_avail": [5, 9], "x1_torch": 5, "x2_torch": 5, "1e3": 5, "x_all": 5, "gen": 5, "5e1": 5, "ax": [5, 6, 12, 14, 15, 17, 18, 42, 47, 57, 60, 61, 66, 76, 87], "_update_plot": [5, 6, 10, 18, 62], "funcanim": [5, 6, 10, 18, 62], "gcf": [5, 6, 10, 12, 60, 62], "interv": [5, 6, 10, 18, 62, 66], "repeat_delai": [5, 6, 10, 18, 62], "2000": [5, 6, 9, 10, 18, 62], "onc": [5, 6, 10, 18, 62], "loop": [5, 6, 10, 18, 47, 62, 69], "reflect": [5, 6, 10, 18, 62], "x3_torch": 5, "xbinit": 5, "16": [5, 7, 9, 17, 20, 27, 31, 34, 38, 39, 42, 46, 54, 66, 68, 71, 75, 79, 86, 87], "xbary_torch": 5, "249": [5, 11, 88], "plot_sliced_wass_grad_flow_pytorch": [5, 11], "transform": [6, 20, 21, 22, 24, 26, 28, 69, 82, 84, 87], "cl\u00e9ment": [6, 53, 57, 65], "clement": [6, 53, 57], "univ": [6, 23, 24, 38, 42, 53, 57, 62, 63], "ub": [6, 38, 42, 53, 57, 62, 63], "fr": [6, 9, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 39, 42, 48, 49, 50, 51, 52, 53, 57, 59, 60, 61, 62, 63], "nn": [6, 7, 10, 88], "plot_spher": 6, "xlist": 6, "linspac": [6, 7, 12, 17, 30, 52, 53, 60, 66], "ylist": 6, "z": [6, 12, 34, 44, 57, 60, 65, 67, 81, 84, 86, 87], "plot_wirefram": [6, 57], "grai": [6, 57], "bottom": [6, 15, 47], "half": 6, "set_titl": [6, 12, 15, 17, 42], "plot_ssw_unif_torch": [6, 11], "53": [6, 54], "runtimewarn": [6, 17, 53, 60], "invalid": [6, 53, 60], "encount": [6, 17, 53, 60], "0x7f1e182054f0": 6, "xvisu": [6, 10], "sw": 6, "grad_x": 6, "semilogi": [6, 8, 10], "15038453042507172": 6, "009664206765592098": 6, "0027673423755913973": 6, "300": [6, 7, 34], "0024807017762213945": 6, "400": [6, 7, 88], "0023792877327650785": 6, "23": [6, 7, 8, 10, 39, 52, 54, 67, 86, 87, 88], "52222222222222": [6, 7, 8, 10], "ivisu": [6, 10], "75": [6, 10, 54, 88], "350": [6, 7, 88], "499": 6, "fig": [6, 14, 15, 17, 18, 32, 33, 38, 42, 51, 57, 61], "add_subplot": [6, 12, 18, 32, 60, 61], "set_xlim": [6, 17, 57], "set_ylim": [6, 17, 57], "173": [6, 7, 11, 54], "nvisu": [7, 54], "ax_bound": 7, "mlp": [7, 10], "__init__": [7, 10, 69, 84], "self": [7, 10, 69, 84], "super": [7, 10], "fc1": [7, 10], "fc2": [7, 10], "relu": [7, 10], "heavisid": [7, 10], "fn": [7, 10], "forward": [7, 10, 87], "ravel": [7, 30, 62, 63, 81], "doubl": [7, 42, 47], "005": [7, 63], "n_batch": 7, "iperm": 7, "randint": [7, 21, 27, 30], "ipermt": 7, "xsi": 7, "xti": 7, "2393484646308117": 7, "642282658482282": 7, "17414737436737": 7, "163954594319065": 7, "568419626220432": 7, "30142104232135": 7, "27": [7, 34, 39, 54, 67, 69, 86, 88], "83083778430649": 7, "876519593594548": 7, "21879930758375": 7, "33": [7, 34, 36, 38, 39, 42, 44, 54, 67, 68, 86, 87], "4451848716634": 7, "85373096612886": 7, "34720398072969": 7, "710736296778066": 7, "41460794588291": 7, "42733527689799": 7, "956475233802664": 7, "633523577460544": 7, "147411707619916": 7, "380450160762436": 7, "20851722920263": 7, "04832525738659": 7, "210": [7, 88], "92018401264584": 7, "220": [7, 88], "28786346616246": 7, "230": 7, "59548196836587": 7, "240": [7, 88], "74007551169938": 7, "250": 7, "87532094924726": 7, "260": [7, 88], "16038650643604": 7, "270": 7, "51952191315499": 7, "280": [7, 88], "21124977745395": 7, "290": [7, 88], "77647345402473": 7, "23611304685019": 7, "310": [7, 88], "17877897507476": 7, "320": [7, 13], "675230089410675": 7, "330": 7, "47856020676343": 7, "340": [7, 88], "20515530483855": 7, "31842178792489": 7, "360": [7, 88], "41746085650229": 7, "370": 7, "49945342906268": 7, "380": [7, 88], "10140960022083": 7, "390": 7, "95709453591491": 7, "35196434989731": 7, "410": [7, 88], "09752366661001": 7, "420": 7, "76370892349192": 7, "430": 7, "03460532012972": 7, "440": [7, 88], "11701064614925": 7, "450": 7, "6314392473137": 7, "460": 7, "3493275492541": 7, "470": 7, "85056949023975": 7, "480": 7, "67325977340096": 7, "490": [7, 33, 36], "501296932771325": 7, "69137367120989": 7, "510": [7, 17], "25065772288269": 7, "520": 7, "48779395563361": 7, "530": 7, "79890479507191": 7, "540": 7, "57060888796475": 7, "550": 7, "5638137066962": 7, "560": 7, "46562709782847": 7, "570": 7, "40687844211681": 7, "580": 7, "20922619478149": 7, "590": 7, "24178255185049": 7, "600": [7, 38, 46], "83767190886772": 7, "610": [7, 16, 19], "091495197788845": 7, "620": 7, "226919963425395": 7, "630": 7, "799585822959976": 7, "640": 7, "257120957823304": 7, "650": 7, "69321505002742": 7, "660": 7, "68384667580914": 7, "670": 7, "19213769075986": 7, "680": 7, "91790237056651": 7, "690": 7, "3058789007125": 7, "700": 7, "76524124674425": 7, "710": 7, "09665287526145": 7, "720": 7, "64052506463496": 7, "730": [7, 77, 86, 87], "63630669836856": 7, "740": 7, "223618598061506": 7, "750": 7, "92249432681105": 7, "760": 7, "97476232035201": 7, "770": 7, "23452025643506": 7, "780": [7, 64], "16928305689463": 7, "790": 7, "2578859647569": 7, "800": [7, 9, 41, 46], "23397446378046": 7, "810": 7, "1721306311481": 7, "820": 7, "247867302837534": 7, "830": 7, "96014658076261": 7, "840": 7, "03767527010372": 7, "850": 7, "030040026953046": 7, "860": 7, "14482662014769": 7, "870": 7, "93227580081683": 7, "880": 7, "14373204690508": 7, "890": [7, 27, 29], "26008919084345": 7, "900": 7, "517689779489814": 7, "910": 7, "39905188612141": 7, "920": 7, "46077222226741": 7, "930": 7, "018913815021016": 7, "940": 7, "49951821381371": 7, "950": 7, "969868723277074": 7, "960": 7, "024141665861244": 7, "970": 7, "88576653718013": 7, "980": 7, "428442172282146": 7, "990": 7, "10248001587743": 7, "nv": [7, 62], "xl": 7, "yl": 7, "xg": [7, 10], "concaten": [7, 8, 17, 25, 39, 43, 53, 61, 63, 66, 79, 84], "wxg": 7, "exp": [7, 47, 53, 66, 71, 82, 87], "iv": [7, 53, 62], "gg": [7, 31], "wt": [7, 73, 82], "reshap": [7, 21, 25, 27, 30, 33, 39, 44, 48, 49, 52, 54, 59, 61, 62, 66, 67, 77, 79], "pcolormesh": 7, "green": [7, 9], "sourec": 7, "plot_stoch_continuous_ot_pytorch": [7, 11], "159": [7, 54], "handl": [7, 9, 87, 88], "quadmesh": 7, "legend_guid": 7, "custom": 7, "handler": 7, "187": [7, 54], "067": [7, 11], "mix": [8, 9, 42], "word": [8, 87], "suppos": [8, 67, 87], "s_k": 8, "w_k": [8, 87], "belong": [8, 32, 61, 79], "delta_k": 8, "observ": [8, 67, 70], "pot": [8, 9, 14, 20, 32, 33, 38, 42, 45, 46, 61, 63, 65, 66, 68, 84, 88], "nt1": 8, "ns1": 8, "xs1": [8, 23], "xs2": [8, 23, 53], "correspond": [8, 9, 28, 47, 71, 74, 79, 87, 88], "s_1": 8, "s_2": 8, "0x7f1e045101f0": 8, "h2": [8, 35, 74], "m2": [8, 51, 52], "2e": [8, 44, 49, 62], "rate": [8, 74, 82], "niter": [8, 42], "get_loss": 8, "mv": 8, "squar": [8, 33, 47, 51, 52, 66, 69, 71, 74, 80, 81, 84, 86, 87, 88], "mixtur": 8, "09980706": 8, "90019294": 8, "dot": [8, 12, 13, 17, 23, 25, 32, 35, 41, 47, 60, 61, 66, 84], "c3": [8, 35, 43], "0x7f1d1a3466a0": 8, "496": [8, 11, 59, 64], "plot_unmix_optim_torch": [8, 11], "remain": 9, "framework": [9, 34, 88], "ncourti": [9, 14, 32, 33], "irisa": [9, 14, 30, 31, 32, 33, 50, 61], "mpl": 9, "make_1d_gauss": [9, 12, 13, 15, 44, 48, 49, 52, 54, 59, 60], "gauss": [9, 44, 48, 49, 52, 59, 69], "red": [9, 21, 27, 31, 47], "to_rgb": 9, "blue": [9, 14, 21, 27, 31, 38, 42, 47], "dtype": [9, 12, 13, 15, 44, 48, 49, 52, 54, 56, 57, 59, 60, 66, 67], "gaussian": [9, 10, 12, 25, 26, 27, 30, 44, 48, 49, 52, 54, 59, 60, 65, 66, 69, 70, 84, 87, 88], "mean": [9, 12, 13, 15, 35, 44, 48, 49, 52, 53, 54, 56, 57, 59, 60, 66, 67, 70, 71, 73, 75, 87, 88], "std": [9, 12, 13, 15, 31, 44, 48, 49, 52, 53, 54, 56, 57, 59, 60, 66, 70, 74, 88], "enforc": [9, 87], "x_torch": 9, "a_torch": 9, "b_torch": 9, "figsiz": [9, 13, 14, 15, 17, 18, 20, 21, 22, 24, 25, 27, 28, 30, 33, 35, 39, 42, 44, 45, 48, 49, 51, 54, 57, 59, 60], "onto": [9, 20, 22, 24, 69, 74, 81, 87], "curv": [9, 42], "everi": [9, 34, 68, 74, 86], "lw": [9, 15, 35, 47], "evolut": [9, 34, 53, 67, 74, 86], "fontsiz": [9, 15, 30, 31, 34, 35, 47, 57, 62], "solver_1d": [9, 53, 88], "than": [9, 47, 66, 74, 87, 88], "revers": [9, 66], "throw": [9, 88], "futur": [9, 67, 88], "releas": [9, 12, 60, 61, 67, 86, 87], "mt": [9, 73], "transpos": [9, 38, 42, 66, 88], "ndim": 9, "trigger": [9, 68], "aten": 9, "src": 9, "nativ": 9, "tensorshap": 9, "cpp": 9, "3571": 9, "cw": 9, "contigu": 9, "tw": 9, "bary_torch": 9, "instant": 9, "507": [9, 11], "plot_wass1d_torch": [9, 11], "fit": [10, 25, 27, 28, 33, 67, 69, 75, 87], "g_": 10, "realist": 10, "drawn": [10, 70, 78], "indistinguish": 10, "mu_d": 10, "arjovsky2017": 10, "access": [10, 86], "cannot": [10, 28, 69, 87, 88], "lare": 10, "genevay2018": 10, "studi": 10, "fatras2019": 10, "arjovski": 10, "chintala": 10, "bottou": 10, "adversari": [10, 87], "214": 10, "223": 10, "genevai": [10, 45, 67, 82, 86, 87], "aud": [10, 67, 86], "fatra": [10, 45, 50, 65, 86], "zine": 10, "gribonv": 10, "2020": [10, 15, 38, 42, 67, 68, 77, 86, 87, 88], "june": 10, "asymptot": 10, "23nd": 10, "108": [10, 54, 88], "n_dim": 10, "n_featur": [10, 69, 84], "get_data": 10, "n_sampl": [10, 17, 32, 33, 61, 69], "angl": [10, 25, 53], "cat": 10, "co": [10, 25, 37, 39, 46, 51, 53, 57, 68, 84, 86, 88], "sin": [10, 25, 30, 39, 51, 53, 57, 84], "0x7f1e1844e610": 10, "fc3": 10, "rmsprop": 10, "00019": 10, "size_batch": 10, "stati": 10, "n_visu": 10, "xnvisu": 10, "ab": [10, 31, 32, 52, 66, 81, 87, 88], "xn": 10, "xd": 10, "smapl": 10, "compt": 10, "del": 10, "9009847640991211": 10, "09425365179777145": 10, "0440279059112072": 10, "033836282789707184": 10, "0556793175637722": 10, "04680415615439415": 10, "0441826693713665": 10, "03215612843632698": 10, "04039888083934784": 10, "021087544038891792": 10, "050437960773706436": 10, "03543882817029953": 10, "06760019809007645": 10, "048370376229286194": 10, "04501226916909218": 10, "07568738609552383": 10, "023603428155183792": 10, "023437529802322388": 10, "02721334807574749": 10, "1053805723786354": 10, "125": [10, 13, 43, 54], "175": [10, 54, 88], "199": [10, 54, 77, 88], "xtick": [10, 13, 20, 22, 24, 28, 31, 52, 62, 63], "ytick": [10, 13, 20, 22, 24, 28, 31, 63], "xlim": [10, 33, 47, 52, 53], "ylim": [10, 33, 52, 53], "0x7f1cf9949b80": 10, "456": [10, 11], "plot_wass2_gan_torch": [10, 11], "512": 11, "execut": [11, 19, 29, 36, 46, 55, 58, 64, 87, 88], "auto_examples_backend": 11, "file": [11, 19, 29, 36, 37, 43, 46, 55, 58, 64, 87, 88], "embed": [11, 33, 37, 74, 87], "sphere": [11, 37, 80], "mb": [11, 19, 29, 36, 46, 55, 58, 64], "flow": [11, 37, 70, 84, 86, 87, 88], "minibatch": [11, 37, 82, 87], "00": [11, 19, 20, 23, 26, 27, 29, 31, 32, 36, 46, 54, 55, 58, 61, 64, 79], "continu": [11, 34, 37, 67, 75, 82, 87], "04": [11, 20, 26, 27, 31, 32, 36, 45, 46, 48, 49, 54, 55, 64, 82], "unmix": [11, 34, 37, 67, 74, 84, 86, 87, 88], "wassersyein": [12, 60], "unic": [12, 13, 20, 21, 22, 23, 25, 26, 27, 28, 38, 39, 42, 48, 49, 50, 51, 52, 75], "plt": [12, 14, 15, 17, 18, 21, 25, 27, 30, 33], "mpl_toolkit": [12, 13, 32, 60, 61], "mplot3d": [12, 13, 32, 60, 61], "axes3d": [12, 13, 32, 60, 61], "noqa": [12, 13, 32, 60, 61], "polycollect": [12, 13, 60], "vstack": [12, 13, 15, 31, 60], "n_distribut": [12, 13, 15, 60], "dist0": [12, 13, 15, 60], "l2bari": [12, 13, 60], "bary_l2": [12, 13, 60], "bary_wass": [12, 13, 60], "ax1": [12, 31, 32, 33, 38, 42, 61], "ax2": [12, 31, 32, 33, 38, 42, 61], "tight_layout": [12, 13, 14, 15, 17, 18, 20, 21, 22, 24, 26, 27, 28, 31, 34, 35, 38, 39, 42, 47, 51, 52, 60], "num": [12, 15, 66], "black": [12, 34, 35, 38, 42, 78], "n_alpha": 12, "alpha_list": 12, "b_l2": [12, 60], "b_wass": [12, 60], "cm": [12, 14, 30, 60], "get_cmap": [12, 60], "viridi": [12, 30, 60], "vert": [12, 60], "enumer": [12, 15, 30, 34, 35, 52, 53, 56, 57, 60], "zip": [12, 15, 18, 34, 37, 60, 86], "poli": [12, 60], "facecolor": [12, 43, 60], "set_alpha": [12, 60], "add_collection3d": [12, 60], "zdir": [12, 60], "set_xlabel": [12, 57, 60], "set_xlim3d": [12, 60], "set_ylabel": [12, 15, 47, 57, 60], "set_ylim3d": [12, 60], "set_zlabel": [12, 57, 60], "set_zlim3d": [12, 60], "plot_barycenter_1d": [12, 19], "102": [12, 39, 46, 54], "matplotlibdeprecationwarn": [12, 60, 61], "wa": [12, 47, 60, 87, 88], "minor": [12, 60, 61], "later": [12, 35, 60, 61, 69], "name": [12, 23, 60, 66, 74, 84, 86, 87], "obj": [12, 60, 81], "124": [12, 20, 29, 54, 88], "528": [12, 19], "standard": [13, 66, 70, 74, 84, 88], "scienc": [13, 21, 27, 54, 69, 76, 86, 87], "343": [13, 88], "cvx": 13, "bary_wass2": 13, "interior": [13, 75, 87], "0033774375915527344": 13, "primal": [13, 75, 82], "feasibl": [13, 75], "gap": 13, "1700": 13, "336700337": 13, "006776453137633": 13, "006776453137634": 13, "9932238647293": 13, "6700527543": 13, "004018712867874": 13, "4301142633": 13, "26594150092": 13, "001172775061627": 13, "7599932455028": 13, "3378536968897": 13, "0004375137005385": 13, "6422331807989": 13, "1468420566358": 13, "000232669046734": 13, "0002326690467341": 13, "5016999460893": 13, "09381703231432": 13, "430121674303e": 13, "7035962305812": 13, "0577787025717": 13, "321227838882e": 13, "321227838879e": 13, "3087841864401": 13, "05266249477204": 13, "990900379202e": 13, "990900379201e": 13, "6520472013245": 13, "0452605440552": 13, "305442046817e": 13, "30544204679e": 13, "305442046812e": 13, "7073953304073": 13, "305442046809e": 13, "04237597591383": 13, "290148391578e": 13, "290148391587e": 13, "290148391592e": 13, "6941812711476": 13, "290148391602e": 13, "041522849321": 13, "182864875418e": 13, "182864875486e": 13, "182864875459e": 13, "508455204664": 13, "182864875475e": 13, "04129461872827": 13, "626786380237e": 13, "626786380498e": 13, "626786380591e": 13, "7101651574148": 13, "626786380499e": 13, "04113032448919": 13, "53975423377e": 13, "539754239097e": 13, "539754238957e": 13, "627932209399": 13, "539754244458e": 13, "04108867636364": 13, "193221588102e": 13, "08": [13, 32, 45, 48, 49, 54, 64, 66, 69, 78], "193221525716e": 13, "193221527893e": 13, "6843453372866": 13, "193221744194e": 13, "04106859618425": 13, "888204557375e": 13, "888204466916e": 13, "888204464386e": 13, "6673444754752": 13, "888205403e": 13, "04106214175154": 13, "676851456731e": 13, "676853754852e": 13, "676853775137e": 13, "7281705629265": 13, "676886118764e": 13, "04105958648699": 13, "50115020171e": 13, "501137125386e": 13, "501137136515e": 13, "4140221641718": 13, "501151490466e": 13, "04105916265115": 13, "110591805675e": 13, "110570750049e": 13, "110570733855e": 13, "699900032435": 13, "110619438659e": 13, "04105870073191": 13, "770990264961e": 13, "776274527894e": 13, "776273877079e": 13, "4996170321381": 13, "772744208187e": 13, "04105859774172": 13, "536197932746e": 13, "538885612866e": 13, "538885001653e": 13, "7515062666584": 13, "537834631178e": 13, "04105851682752": 13, "743041081423e": 13, "740002462354e": 13, "740001907827e": 13, "5949277749653": 13, "73465642858e": 13, "04105850033226": 13, "794231989236e": 13, "747423074042e": 13, "747429829833e": 13, "7557701998162": 13, "741755335329e": 13, "04105849090303": 13, "termin": [13, 39], "successfulli": [13, 42], "041058": 13, "3516316413879395": 13, "0069844722747802734": 13, "006776466288967": 13, "9932238515788": 13, "006776466288968": 13, "6649255808": 13, "004036918865497": 13, "4272973099314": 13, "34716170111": 13, "001219232687069": 13, "7496986855994": 13, "3243835647407": 13, "0003837422984427": 13, "6926882608286": 13, "1361719397492": 13, "0001070128410182": 13, "7643889137854": 13, "07581952832515": 13, "0001001275033711": 13, "000100127503371": 13, "07058704837782": 13, "07347394936348": 13, "550897507833e": 13, "550897507832e": 13, "5761172484836": 13, "05555077655044": 13, "557124125502e": 13, "557124125495e": 13, "8535925441154": 13, "557124125503e": 13, "0443981466022": 13, "611995628362e": 13, "611995628359e": 13, "611995628375e": 13, "6002277331592": 13, "611995628377e": 13, "04283007762151": 13, "590393750322e": 13, "59039375014e": 13, "590393750355e": 13, "822148653339": 13, "590393750361e": 13, "04192322976247": 13, "299929287269e": 13, "299929283142e": 13, "299929287457e": 13, "9017467938803": 13, "299929287509e": 13, "04170825633295": 13, "117560215317e": 13, "117560474123e": 13, "117560204434e": 13, "9970399692198": 13, "117560202277e": 13, "04168179329766": 13, "559775055372e": 13, "14": [13, 20, 27, 34, 39, 41, 47, 54, 55, 61, 66, 69, 74, 86, 87], "561428379782e": 13, "559760203488e": 13, "9999499685222": 13, "559752674386e": 13, "04168169240444": 13, "041682": 13, "907135248184204": 13, "0009610652923583984": 13, "006774675520687": 13, "9932256422636": 13, "6956034733": 13, "002048208707529": 13, "7343095368176": 13, "213991622021": 13, "0002697365474824": 13, "8839403501148": 13, "5059383903968": 13, "832109993819e": 13, "832109993818e": 13, "7601171076044": 13, "2339657807265": 13, "437682932226e": 13, "6663448297416": 13, "1471256246326": 13, "134983216297e": 13, "134983216299e": 13, "5553643816468": 13, "1181584941169": 13, "342312725774e": 13, "342312725781e": 13, "723813357168": 13, "1006387519744": 13, "078561231268e": 13, "078561231235e": 13, "078561231266e": 13, "8033142552548": 13, "09474734646262": 13, "966870958108e": 13, "966870953918e": 13, "966870953989e": 13, "7525479178458": 13, "966870954248e": 13, "09354342735761": 13, "199895240123e": 13, "199895384126e": 13, "199895235332e": 13, "9984019849396": 13, "199895236104e": 13, "0931036778586": 13, "1017793609e": 13, "101768735229e": 13, "101780822184e": 13, "9999499563876": 13, "101780420221e": 13, "0931027446646": 13, "093103": 13, "7538161277770996": 13, "nbm": 13, "len": [13, 15, 17, 30, 33, 34, 35, 47, 81], "nbm2": 13, "481": [13, 19], "plot_barycenter_lp_vs_entrop": [13, 19], "design": [14, 32, 33, 35, 38, 45, 54, 61, 63, 79, 87, 88], "how": [14, 26, 32, 33, 34, 35, 38, 42, 45, 47, 52, 53, 61, 63, 67, 88], "pathlib": [14, 15, 21, 25, 27, 33], "four": [14, 33], "this_fil": [14, 15, 21, 25, 27, 33], "realpath": [14, 15, 21, 25, 27, 33], "__file__": [14, 15, 21, 25, 27, 33], "data_path": [14, 15, 21, 25, 27, 33], "join": [14, 15, 21, 25, 27, 33, 66, 86], "parent": [14, 15, 21, 25, 27, 33], "f1": [14, 15], "f2": [14, 15, 35, 74], "f3": [14, 35], "heart": [14, 15, 18], "f4": 14, "duck": [14, 15, 16], "nb_imag": 14, "corner": [14, 87], "bilinear": [14, 47], "v1": [14, 35], "v2": [14, 35], "v3": 14, "v4": 14, "suptitl": [14, 30], "004": [14, 40, 46], "ty": 14, "tmp1": 14, "tmp2": 14, "elif": [14, 34, 35], "call": [14, 45, 61, 63, 67, 69, 74, 75, 76, 84, 87, 88], "convolutional_barycenter2d": [14, 15], "716": [14, 19], "plot_convolutional_barycent": [14, 19], "janati": [15, 59, 60, 65, 67, 86, 87], "gramfort": [15, 65, 67, 86, 87], "37th": [15, 67, 86, 87], "119": [15, 54, 67, 86, 87], "4692": [15, 67, 86, 87], "4701": [15, 67, 86, 87], "hicham": [15, 59, 60, 65, 86], "janati100": 15, "gmail": [15, 20, 21, 22, 26, 27, 28, 32, 33, 35, 44, 45], "barycenter_debias": 15, "convolutional_barycenter2d_debias": 15, "epsilon": [15, 32, 44, 59, 66, 67, 68, 74, 87, 88], "bar": [15, 79], "bars_debias": 15, "indianr": 15, "gold": [15, 66], "sharei": [15, 31], "bar_debias": 15, "varepsilon": [15, 68], "3f": [15, 23, 62], "asarrai": 15, "displai": [15, 22, 28, 47, 67], "img": [15, 21, 25, 27, 33], "grei": [15, 34], "bars_sinkhorn": 15, "7e": 15, "all_bar": 15, "jj": 15, "ax_row": 15, "ii": [15, 17], "set_xtick": [15, 18, 57], "set_ytick": [15, 18, 57], "spine": 15, "set_vis": 15, "009": [15, 19], "plot_debiased_barycent": [15, 19], "vivien": [16, 81, 86], "iip": 16, "ist": 16, "kyoto": 16, "ac": 16, "jp": 16, "eduardo": [16, 17, 65], "fernand": [16, 17, 65], "montesuma": [16, 17, 65], "universit": [16, 17], "saclai": [16, 17], "measures_loc": [16, 17, 67, 75], "measures_weight": [16, 17, 67, 75], "x_init": [16, 17, 67, 75], "free_support_barycent": [16, 67, 87, 88], "free_support_sinkhorn_barycent": [16, 17], "plot_free_support_barycent": [16, 19], "understood": 17, "cloud": [17, 33], "linalg": [17, 30, 32, 61, 66], "x4": 17, "multivariate_norm": 17, "a3": 17, "a4": 17, "steelblu": 17, "float32": 17, "xb_init": 17, "subplot2grid": [17, 33], "535": [17, 20, 22, 23, 24, 28, 32, 47, 50, 54], "did": [17, 20, 22, 23, 24, 28, 32, 47, 50, 54, 74, 88], "increas": [17, 20, 22, 23, 24, 28, 32, 47, 50, 54, 77], "503": 17, "overflow": [17, 60, 88], "divid": [17, 47, 53, 60], "nx": [17, 30, 66, 74, 76, 88], "kp": 17, "502": 17, "ktransposeu": 17, "213": [17, 19], "plot_free_support_sinkhorn_barycent": [17, 19], "saint": [18, 75, 86], "dizier": [18, 75, 86], "subspac": [18, 71, 75, 86, 87], "2105": [18, 75, 86], "09755": [18, 75, 86], "eloi": [18, 65], "tangui": [18, 65, 74], "sub_sample_factor": 18, "i3": 18, "uu": 18, "vv": 18, "x_list": [18, 75], "im": [18, 25, 27, 47], "a_list": [18, 75], "p1": [18, 23, 35, 43], "p2": [18, 23, 35, 43], "p3": [18, 35], "p_list": [18, 75], "n_samples_bari": [18, 75], "visualis": 18, "x_visu": 18, "xi": 18, "view_init": [18, 57], "azim": 18, "set_ztick": [18, 57], "generalized_free_support_barycent": 18, "elev": 18, "_init": 18, "init_func": 18, "frame": 18, "136": [18, 54], "blit": 18, "332": [18, 19, 88], "plot_generalized_free_support_barycent": [18, 19], "03": [19, 20, 26, 29, 31, 32, 36, 39, 43, 44, 45, 46, 48, 49, 54, 55, 57, 64, 77, 82], "888": 19, "auto_examples_barycent": 19, "convolut": [19, 37, 65, 67, 86, 88], "demo": [19, 37, 64, 67, 70, 75, 84, 87], "debias": [19, 37, 65, 67, 70, 84, 86, 87, 88], "introduc": [20, 21, 22, 23, 24, 26, 28, 67, 87, 88], "otda": [20, 23, 24, 29, 37, 69, 70, 84, 88], "stanisla": [20, 21, 22, 26, 27, 28, 65, 86], "chambon": [20, 21, 22, 26, 27, 28, 65, 86], "stan": [20, 21, 22, 26, 27, 28], "3gauss": [20, 22, 24, 28], "3gauss2": [20, 22, 24, 28], "ot_emd": [20, 21, 22, 24, 27, 47, 87], "da": [20, 21, 22, 23, 24, 25, 26, 27, 28, 65, 87, 88], "emdtransport": [20, 21, 22, 24, 27, 87, 88], "ot_sinkhorn": [20, 21, 22, 23, 24, 27, 47], "sinkhorntransport": [20, 21, 22, 23, 24, 27, 28, 87, 88], "reg_": [20, 21, 22, 23, 24, 27, 28, 69], "ot_lpl1": [20, 22], "sinkhornlpl1transport": [20, 22, 87, 88], "reg_cl": [20, 22, 69], "1e0": [20, 22, 26, 27, 39], "l1l2": [20, 69], "ot_l1l2": 20, "sinkhornl1l2transport": [20, 87], "2e0": 20, "transp_xs_emd": [20, 21, 22, 24, 27], "transp_xs_sinkhorn": [20, 21, 22, 24, 27], "transp_xs_lpl1": [20, 22], "transp_xs_l1l2": 20, "810186e": 20, "000000e": [20, 26, 27, 31, 32, 54], "256314e": 20, "347882e": 20, "553872e": 20, "024772e": 20, "143541e": 20, "315410e": 20, "983120e": 20, "100377e": 20, "02": [20, 26, 27, 32, 36, 39, 45, 46, 48, 49, 54, 55, 61, 64, 77, 82], "165298e": 20, "952423e": 20, "572201e": 20, "069602e": 20, "940671e": 20, "056036e": 20, "175277e": 20, "935891e": 20, "468876e": 20, "779475e": 20, "935712e": 20, "282198e": 20, "796766e": 20, "929184e": 20, "383684e": 20, "527748e": 20, "922702e": 20, "371329e": 20, "482060e": 20, "921877e": 20, "288872e": 20, "242687e": 20, "921176e": 20, "650182e": 20, "012642e": 20, "917865e": 20, "726393e": 20, "310990e": 20, "916184e": 20, "774185e": 20, "681295e": 20, "913438e": 20, "435240e": 20, "746242e": 20, "912211e": 20, "414793e": 20, "226644e": 20, "910786e": 20, "455476e": 20, "424582e": 20, "909969e": 20, "279559e": 20, "173825e": 20, "18": [20, 27, 30, 31, 39, 45, 54, 77, 82, 86, 87], "909593e": 20, "968598e": 20, "759221e": 20, "908595e": 20, "229761e": 20, "981496e": 20, "907940e": 20, "432707e": 20, "549400e": 20, "param_img": [20, 24], "coupling_": [20, 22, 23, 24, 28, 69], "nemdtransport": [20, 22, 24, 28], "nsinkhorntransport": [20, 22, 24, 28], "nsinkhornlpl1transport": [20, 22], "nsinkhornl1l2transport": 20, "transp": [20, 22, 24, 28, 63], "plot_otda_class": [20, 29], "transfer": [21, 87], "ferradan": [21, 27, 54, 69, 76, 86, 87], "papadaki": [21, 27, 54, 69, 76, 86, 87], "peyr": [21, 27], "aujol": [21, 27, 54, 69, 76, 86, 87], "2014": [21, 27, 54, 67, 69, 75, 76, 86, 87], "1853": [21, 27, 54, 69, 76, 86, 87], "1882": [21, 27, 54, 69, 76, 86, 87], "im2mat": [21, 25, 27, 33], "pixel": [21, 25, 33], "per": [21, 25, 27, 33, 75], "mat2im": [21, 25, 27], "minmax": [21, 25, 27], "clip": [21, 25, 27, 66], "ocean_dai": [21, 25, 27], "jpg": [21, 25, 27], "256": [21, 25, 27, 53, 55], "ocean_sunset": [21, 25, 27], "idx1": [21, 27], "idx2": [21, 27], "ylabel": [21, 27, 31, 34, 47, 56, 57, 63], "predict": [21, 74], "out": [21, 26, 69, 80], "transp_xt_emd": 21, "inverse_transform": [21, 25, 69, 87], "transp_xt_sinkhorn": 21, "i1t": [21, 25], "i2t": [21, 25], "856": [21, 29], "plot_otda_color_imag": [21, 29], "quantiti": [22, 28, 34], "greater": [22, 28, 88], "coeffici": [22, 28, 34, 67, 74, 75, 76, 79], "visual": [22, 28, 38, 47, 48, 49], "understand": [22, 28], "n_samples_sourc": [22, 28], "n_samples_target": [22, 28], "868": [22, 29], "plot_otda_d2": [22, 29], "ievgen": [23, 24, 65, 67, 69, 86], "redko": [23, 24, 38, 42, 65, 67, 68, 69, 86], "st": [23, 24, 71], "etienn": [23, 24], "1985": 23, "dec1": 23, "dec2": 23, "pt": 23, "dect": 23, "ys1": 23, "2gauss_prop": 23, "bia": [23, 26, 27, 69, 73], "ys2": 23, "all_xr": 23, "all_yr": 23, "plot_ax": 23, "dec": 23, "set1": 23, "2f": [23, 47], "equal": [23, 43, 51, 66, 79], "85": [23, 54, 88], "046431138906241": 23, "129455496299416": 23, "print_g": 23, "independ": [23, 87], "jcpottransport": 23, "ws1": 23, "proportions_": [23, 69], "log_": [23, 69], "d2": [23, 38, 42], "ws2": 23, "prop": [23, 77], "err": [23, 32, 48, 49, 61], "069551e": 23, "h_re": 23, "1f": 23, "775": [23, 29], "plot_otda_jcpot": [23, 29], "ot_emd_laplac": 24, "emdlaplacetransport": 24, "reg_lap": [24, 69], "reg_src": [24, 69], "transp_xs_emd_laplac": 24, "nemdlaplacetransport": 24, "864": [24, 29], "plot_otda_laplacian": [24, 29], "anglet": 25, "line2d": 25, "0x7f1cfac2ee20": 25, "ae": 25, "empirical_bures_wasserstein_map": 25, "xst": 25, "lineartransport": [25, 87], "invers": [25, 35, 62, 66, 69, 75, 79], "152": [25, 29, 54], "plot_otda_linear_map": [25, 29], "mappingtransport": [26, 27, 87], "perrot": [26, 27, 65, 69, 86, 87], "habrard": [26, 27, 69, 86, 87], "xs_new": 26, "ot_mapping_linear": [26, 27], "transp_xs_linear": 26, "transp_xs_linear_new": 26, "ot_mapping_gaussian": [26, 27], "transp_xs_gaussian": 26, "transp_xs_gaussian_new": 26, "delta": [26, 27, 42, 79], "986844e": 26, "972764e": 26, "531477e": 26, "972389e": 26, "461658e": 26, "972245e": 26, "624025e": 26, "972160e": 26, "117504e": 26, "972106e": 26, "373173e": 26, "972080e": 26, "562692e": 26, "003915e": 26, "958105e": 26, "144133e": 26, "955316e": 26, "047144e": 26, "953978e": 26, "381681e": 26, "953022e": 26, "418670e": 26, "952384e": 26, "614419e": 26, "951879e": 26, "276833e": 26, "951512e": 26, "276752e": 26, "951208e": 26, "695074e": 26, "950961e": 26, "249266e": 26, "950768e": 26, "896755e": 26, "bari": [26, 30], "153": [26, 29, 54], "plot_otda_map": [26, 29], "image_emd": 27, "image_sinkhorn": 27, "x1tl": 27, "image_mapping_linear": 27, "x1tn": 27, "image_mapping_gaussian": 27, "797245e": 27, "758014e": 27, "182822e": 27, "757026e": 27, "620752e": 27, "756521e": 27, "875691e": 27, "756218e": 27, "725224e": 27, "756015e": 27, "153553e": 27, "755868e": 27, "348118e": 27, "755759e": 27, "234582e": 27, "755673e": 27, "893582e": 27, "755604e": 27, "942771e": 27, "755547e": 27, "206000e": 27, "755500e": 27, "695056e": 27, "755460e": 27, "307154e": 27, "755426e": 27, "944208e": 27, "755395e": 27, "715960e": 27, "755369e": 27, "515613e": 27, "755345e": 27, "367864e": 27, "755324e": 27, "197885e": 27, "755305e": 27, "071067e": 27, "755303e": 27, "898122e": 27, "842001e": 27, "780145e": 27, "358084e": 27, "778490e": 27, "296544e": 27, "777841e": 27, "648247e": 27, "777495e": 27, "948923e": 27, "777284e": 27, "184075e": 27, "777135e": 27, "396988e": 27, "777027e": 27, "059322e": 27, "776945e": 27, "619816e": 27, "776880e": 27, "672789e": 27, "776827e": 27, "971430e": 27, "plot_otda_mapping_colors_imag": [27, 29], "ot_sinkhorn_un": 28, "transp_xs_sinkhorn_un": 28, "ot_sinkhorn_semi": 28, "transp_xs_sinkhorn_semi": 28, "labal": 28, "modifi": 28, "infinit": [28, 69], "larg": [28, 45, 69, 77, 82, 86, 87, 88], "daili": 28, "element": [28, 30, 47, 66, 67, 69, 74, 75, 79], "fill": [28, 59, 66, 69], "recal": [28, 79], "cost_": [28, 69], "semisupervis": 28, "exhibit": [28, 69], "nunsupervis": 28, "nsemi": 28, "944": [28, 29], "plot_otda_semi_supervis": [28, 29], "29": [29, 39, 54, 69, 73, 77, 86, 87, 88], "628": 29, "auto_examples_domain": 29, "multi": [29, 37, 66, 67, 69, 70, 84, 86, 87, 88], "shift": [29, 37, 67, 69, 70, 84, 86, 87, 88], "laplacian": [29, 37, 65, 69, 70, 84, 86, 87], "unsupervis": [29, 37, 69, 70, 84, 87], "semi": [29, 36, 37, 65, 69, 70, 74, 76, 79, 81, 82, 84, 86, 87, 88], "supervis": [29, 37, 67, 69, 70, 84, 86, 87, 88], "networkx": [30, 34, 35], "csgraph": 30, "shortest_path": 30, "mcol": 30, "fgw_barycent": [30, 74, 87], "find_thresh": 30, "inf": [30, 69], "sup": 30, "trick": [30, 77, 87], "adequ": 30, "sai": 30, "connect": [30, 34, 35], "tthe": 30, "linesearch": [30, 74, 76, 88], "reconstruct": [30, 34, 74, 81, 88], "adjenc": 30, "n_node": [30, 34], "begin": [30, 79], "thresh": 30, "cprime": 30, "sp_to_adj": 30, "sc": 30, "argmin": [30, 35, 66], "threshinf": 30, "threshsup": 30, "minimum": [30, 66, 69, 74, 76, 87, 88], "new": [30, 66, 84, 87], "zeros_lik": 30, "fill_diagon": [30, 34], "build_noisy_circular_graph": 30, "with_nois": 30, "structure_nois": 30, "noisi": [30, 42], "add_nodes_from": 30, "add_nod": [30, 35], "attr_nam": 30, "add_edg": [30, 35], "randomint": 30, "graph_color": 30, "nx_graph": 30, "cnorm": 30, "cpick": 30, "scalarmapp": 30, "set_arrai": 30, "val_map": 30, "get_node_attribut": 30, "to_rgba": 30, "po": [30, 33, 35, 69], "kamada_kawai_layout": 30, "draw": 30, "node_color": [30, 35], "with_label": 30, "node_s": [30, 35], "adjacency_matrix": 30, "sizebari": 30, "95": [30, 33, 35, 54, 56, 57], "from_numpy_arrai": 30, "309": [30, 36, 88], "plot_barycenter_fgw": [30, 36], "sig": 31, "sig2": 31, "phi": [31, 79], "phi2": 31, "a_i": [31, 67, 75, 87], "y_j": [31, 87], "b_j": [31, 67, 75, 87], "w1": [31, 71], "w2": [31, 53, 71], "got": 31, "l_x": 31, "l_y": 31, "gridspec": 31, "set_aspect": 31, "ax3": [31, 33, 61], "sharex": 31, "gwg": 31, "logw": 31, "reload_ext": 31, "wgw": 31, "734412e": 31, "508254e": 31, "875326e": 31, "226158e": 31, "189327e": 31, "456740e": 31, "189279e": 31, "622743e": 31, "552714e": 31, "0019080638885498047": 31, "683978e": 31, "860061e": 31, "134468e": 31, "239175e": 31, "182948e": 31, "682787e": 31, "677113e": 31, "739": [31, 36], "plot_fgw": [31, 36], "wassertsein": [32, 87], "erwan": [32, 33, 65], "vautier": [32, 33, 65], "sp": [32, 33, 61, 77], "purpos": [32, 61, 87], "mu_": [32, 40, 50, 53, 56, 61, 62, 63, 69, 73, 87], "cov_": [32, 40, 50, 56, 61, 62, 63], "mu_t": [32, 40, 50, 56, 61, 62, 63, 69, 73, 87], "cov_t": [32, 40, 50, 56, 61, 62, 63], "make_2d_samples_gauss": [32, 40, 50, 56, 61, 62, 63], "sqrtm": [32, 61, 66], "121": [32, 35, 47, 54, 61, 88], "122": [32, 35, 47, 54, 61, 88], "gw0": 32, "log0": [32, 61], "entropic_gromov_wasserstein": [32, 74, 87, 88], "jet": [32, 61, 63], "040183e": 32, "680045e": 32, "312927e": 32, "721780e": 32, "810735e": 32, "807022e": 32, "693103e": 32, "071265e": 32, "833502e": 32, "306601e": 32, "414525e": 32, "04810734779562988": 32, "04097168403053387": 32, "pgw": 32, "plog": 32, "pointwise_gromov_wasserstein": [32, 74], "sgw": 32, "slog": [32, 67], "sampled_gromov_wasserstein": [32, 74], "pointwis": [32, 88], "gw_dist_estim": 32, "gw_dist_std": 32, "toarrai": [32, 66, 79], "18827653307627662": 32, "1534777663986762": 32, "001626689010280435": 32, "069": [32, 36], "plot_gromov": [32, 36], "decomposit": 33, "pca": 33, "smacof_md": 33, "3000": 33, "singl": 33, "stress": 33, "declar": 33, "npo": 33, "isometri": 33, "n_init": 33, "embedding_": 33, "nmd": 33, "init": [33, 74, 88], "cross": 33, "triangl": 33, "star": 33, "lambdast": 33, "ct01": 33, "ct02": 33, "ct13": 33, "ct23": 33, "rotat": [33, 47], "n_compon": 33, "npost01": 33, "npost02": 33, "npost13": 33, "npost23": 33, "ax4": 33, "ax5": 33, "ax6": 33, "ax7": 33, "ax8": 33, "ax9": 33, "ax10": 33, "ax11": 33, "ax12": 33, "0x7f1cfae2a520": 33, "plot_gromov_barycent": [33, 36], "denot": [34, 47, 67, 69, 75], "c_": [34, 47, 74], "p_": [34, 74], "convex": [34, 51, 76, 81, 87], "combin": [34, 87], "sigma_d": 34, "sum_d": [34, 74], "taken": [34, 87], "vari": 34, "extens": [34, 87], "aforement": 34, "unattribut": 34, "uniformli": 34, "Then": [34, 53, 87], "c\u00e9dric": [34, 35, 65, 74, 76, 86], "cedric": 34, "inria": [34, 59, 60], "gromov_wasserstein_linear_unmix": [34, 74], "gromov_wasserstein_dictionary_learn": [34, 74], "fused_gromov_wasserstein_linear_unmix": [34, 74], "fused_gromov_wasserstein_dictionary_learn": [34, 74], "stochastic_block_model": [34, 35], "inter": 34, "intra": [34, 35, 77], "nlabel": 34, "p_inter": 34, "p_intra": 34, "n_cluster": 34, "low": [34, 41, 47, 72], "int32": 34, "to_numpy_arrai": [34, 35], "intens": 34, "idx_c": 34, "plot_gromov_wasserstein_dictionary_learn": [34, 36], "93": [34, 54, 88], "promot": [34, 74, 87], "sparsiti": [34, 74, 87], "cdict_gw": 34, "epoch": [34, 74], "batch_siz": [34, 45, 69, 74, 82], "learning_r": [34, 74], "nonnegative_symmetr": [34, 74], "tol_out": [34, 74], "tol_inn": [34, 74], "max_iter_out": [34, 74], "max_iter_inn": [34, 74], "use_log": [34, 74], "use_adam_optim": [34, 74], "loss_epoch": 34, "cumul": [34, 66], "928070954885737": 34, "528435380634622": 34, "481496257647932": 34, "7251645422089865": 34, "5896787585765": 34, "904249565820505": 34, "894474501829586": 34, "839762947251266": 34, "8357620167079265": 34, "57323879230497": 34, "shade": 34, "dark": [34, 88], "white": 34, "idx_atom": 34, "scaled_atom": 34, "reconstruction_error": 34, "cembed": [34, 74], "unmixings2d": 34, "extrem": 34, "linewidth": [34, 43, 57], "876122061653427": 34, "assign": [34, 35, 67, 68, 74], "hot": 34, "encod": [34, 84], "dataset_featur": 34, "001": [34, 51, 67, 69, 71, 81], "cdict_fgw": 34, "ydict_fgw": 34, "learning_rate_c": [34, 74], "learning_rate_i": [34, 74], "488307468700953": 34, "409377567767253": 34, "7999724972950055": 34, "590157056733561": 34, "8883324021076806": 34, "6222694197786383": 34, "638584123604814": 34, "537256942676492": 34, "4127469295470614": 34, "315769238894676": 34, "max_featur": 34, "min_featur": 34, "catom": 34, "fatom": 34, "scaled_f": 34, "yembed": [34, 74], "1390622525410854": 34, "603": [34, 36], "sr": [35, 76], "g1": [35, 51], "g2": [35, 51], "reweigh": 35, "srgw": [35, 74], "endow": 35, "srfgw": [35, 74], "48": [35, 47, 54, 74, 76, 86, 88], "iclr": [35, 74, 76, 86], "cedvincentcuaz": 35, "semirelaxed_gromov_wasserstein": [35, 74], "semirelaxed_fused_gromov_wasserstein": [35, 74], "n3": 35, "g3": 35, "h3": 35, "edg": 35, "weight_intra_g2": 35, "weight_inter_g2": 35, "weight_intra_g3": 35, "weight_inter_g3": 35, "weightedg2": 35, "part_g2": 35, "weightedg3": 35, "part_g3": 35, "ot_23": 35, "log_23": 35, "srgw_23": 35, "srgw_dist": 35, "ot_32": 35, "log_32": 35, "srgw_32": 35, "255": 35, "105007529006411": 35, "1622222222222223": 35, "draw_graph": 35, "nodes_color_part": 35, "gweight": 35, "edge_color": 35, "shiftx": 35, "spring_layout": 35, "alpha_edg": 35, "width_edg": 35, "draw_networkx_edg": 35, "width": [35, 67], "visibl": [35, 88], "activ": [35, 66, 67, 79], "edgelist_activ": 35, "edgelist_deactiv": 35, "edgelist": 35, "draw_networkx_nod": 35, "nodelist": 35, "scaled_gweight": 35, "nodes_s": 35, "draw_transp_colored_srgw": 35, "part_g1": 35, "pos1": 35, "pos2": 35, "switchx": 35, "seed_g1": 35, "seed_g2": 35, "starting_color": 35, "partit": 35, "part1": 35, "unique_color": 35, "uniqu": [35, 66, 75, 87], "nodes_color_part1": 35, "nodes_color_part2": 35, "k1": 35, "k2": 35, "seed_g3": 35, "h_2": [35, 74], "c_3": 35, "hbar2": 35, "hbar3": 35, "h_3": 35, "pairwis": [35, 69, 74], "fgw_alpha": 35, "fgw_dist": 35, "srfgw_23": 35, "srfgw_dist": 35, "srfgw_32": 35, "38017836704293934": 35, "04004733478713954": 35, "24196480586404343": 35, "f_2": [35, 74], "f_3": 35, "354": [35, 36], "plot_semirelaxed_fgw": [35, 36], "563": 36, "auto_examples_gromov": 36, "gournd": [37, 55, 78, 87], "introduct": [37, 55, 87], "row": [37, 46, 66, 67, 68, 75, 79, 84], "discrimin": [37, 46, 71, 86, 88], "logo": [37, 46, 87, 88], "toolbox": [37, 46, 65, 87, 88], "auto_examples_python": 37, "auto_examples_jupyt": 37, "arbitrari": 38, "n_1": [38, 42], "d_1": [38, 42], "n_2": [38, 42], "d_2": [38, 42], "49": [38, 42, 54, 68, 86, 88], "quang": [38, 42], "hui": [38, 42], "tran": [38, 42], "patch": [38, 42], "connectionpatch": [38, 42], "coot": 38, "co_optimal_transport": [38, 42], "co_optimal_transport2": [38, 42], "coot2": [38, 42], "d1": [38, 42], "pi_sampl": [38, 42, 68], "pi_featur": [38, 42, 68], "coot_dist": 38, "5f": 38, "yaxi": [38, 42], "tick_right": [38, 42], "xaxi": [38, 42], "tick_top": [38, 42], "xya": [38, 42], "xyb": [38, 42], "con": [38, 42], "coordsa": [38, 42], "transdata": [38, 42], "coordsb": [38, 42], "add_artist": [38, 42], "10903416567681642": 38, "09875680836922485": 38, "09685398028260431": 38, "09685": 38, "plot_coot": [38, 46], "wda": [39, 65, 88], "fda": [39, 87], "floor": [39, 66], "nbnois": 39, "hstack": 39, "pfda": 39, "projfda": 39, "maxit": [39, 67, 71], "p0": [39, 71], "pwda": 39, "projwda": 39, "3042776946697494e": 39, "65147154e": 39, "4401037686381040e": 39, "16760501e": 39, "2234351238819928e": 39, "30555049e": 39, "2169879996364462e": 39, "39115407e": 39, "1924746118060602e": 39, "25387848e": 39, "1177409528990749e": 39, "70993539e": 39, "0862213476139048e": 39, "52716830e": 39, "0747229322240269e": 39, "34923131e": 39, "0678766065261684e": 39, "74029183e": 39, "0621337155459647e": 39, "03651803e": 39, "0577080390746939e": 39, "59605592e": 39, "0543140912472148e": 39, "28883715e": 39, "0470236926310577e": 39, "47528039e": 39, "0445628467498224e": 39, "03183254e": 39, "0364189455866245e": 39, "31006504e": 39, "0303977563823823e": 39, "39885352e": 39, "0301476238242911e": 39, "17467624e": 39, "0292344306414324e": 39, "79959907e": 39, "0271888325518124e": 39, "94408237e": 39, "0183214741002155e": 39, "98322994e": 39, "9762636217090053e": 39, "03196875e": 39, "8225627240876070e": 39, "36012863e": 39, "0855506616050116e": 39, "92702943e": 39, "8001027160864295e": 39, "01920255e": 39, "3687486090807947e": 39, "01780640e": 39, "3431203993360381e": 39, "23716793e": 39, "3118645266923005e": 39, "90753137e": 39, "28": [39, 54, 77, 79, 86, 87, 88], "3067593392325469e": 39, "02767925e": 39, "3064856262240019e": 39, "07925279e": 39, "3060699763593800e": 39, "95215754e": 39, "3060442760754873e": 39, "77368118e": 39, "3060442709529139e": 39, "34108449e": 39, "3060442708435561e": 39, "52599061e": 39, "3060442707674844e": 39, "07742368e": 39, "3060442707600512e": 39, "36125504e": 39, "reach": [39, 88], "after": [39, 86], "xsp": 39, "xtp": 39, "xspw": 39, "xtpw": 39, "plot_wda": [39, 46], "xr": [40, 41, 50, 51, 56], "gweak": 40, "plot_weakot_vs_ot": [40, 46], "sign": 41, "og": 41, "templat": [41, 88], "plot_factored_coupl": [41, 46], "mu_x": 42, "mu_i": [42, 87], "clean": [42, 88], "y_": [42, 69, 74], "contamin": 42, "outlier": 42, "182": [42, 54], "y_noisi": 42, "nrow": 42, "ncol": 42, "wy_samp": [42, 68], "07503408": 42, "07999275": 42, "09471755": 42, "10023423": 42, "09997926": 42, "09998085": 42, "10000592": 42, "09981116": 42, "11468648": 42, "13555772": 42, "clearli": [42, 87], "010396790451735978": 42, "591": [42, 46], "plot_learning_weights_with_coot": [42, 46], "plote": [43, 62], "teh": 43, "letter": 43, "o1": 43, "o2": 43, "translat": 43, "t1": 43, "t2": [43, 62, 79], "horizont": 43, "vertic": 43, "sx": 43, "markerfacecolor": 43, "markeredgecolor": 43, "save": [43, 67, 74], "savefig": 43, "svg": 43, "dpi": 43, "transpar": 43, "bbox_inch": 43, "tight": 43, "43": [43, 54, 67, 69, 73, 75, 86, 87, 88], "375": [43, 88], "darkgrai": 43, "logo_dark": 43, "086": [43, 46], "plot_logo": [43, 46], "alaya": [44, 65, 67, 77, 86, 87], "b\u00e9rar": [44, 67, 86, 87], "gasso": [44, 62, 67, 77, 79, 83, 86, 87], "neurip": [44, 77, 79, 83, 86, 87], "mokhtar": [44, 65, 86], "mokhtarzahdi": 44, "plot1d_mat": [44, 45, 48, 49, 54, 59], "lambd": [44, 48, 49, 50], "ns_budget": [44, 67], "budget": [44, 67], "nt_budget": [44, 67], "g_screen": 44, "restrict": [44, 67], "3518": 44, "bottleneck": [44, 67], "pypi": [44, 67, 86, 88], "020986042861303855": 44, "kappa": [44, 67], "7476531411890917": 44, "cardin": [44, 67], "isel": 44, "jsel": 44, "362": [44, 46, 88], "plot_screenkhorn_1d": [44, 46], "stochat": 45, "librari": [45, 65, 86, 87, 88], "bach": [45, 82, 86, 87], "bhushan": [45, 82, 86, 87], "damodaran": [45, 82, 86, 87], "kilian": [45, 50, 65, 86], "n_sourc": [45, 82], "n_target": [45, 52, 82], "x_sourc": [45, 82], "y_target": [45, 82], "sag": [45, 82], "sag_pi": 45, "solve_semi_dual_entrop": 45, "55553509e": 45, "96395660e": 45, "76579142e": 45, "31178196e": 45, "21640234e": 45, "25357448e": 45, "30225078e": 45, "37891338e": 45, "56123975e": 45, "61451746e": 45, "31505947e": 45, "33831456e": 45, "61515202e": 45, "34246014e": 45, "28734709e": 45, "07550428e": 45, "85500870e": 45, "52288517e": 45, "08262628e": 45, "21423583e": 45, "16904253e": 45, "03825797e": 45, "87178503e": 45, "18391107e": 45, "15462212e": 45, "65987989e": 45, "23177216e": 45, "39440107e": 45, "semicontin": 45, "asgd": [45, 82], "asgd_pi": 45, "log_asgd": 45, "beta": [45, 67, 75, 81, 82, 88], "87919564": 45, "64972912": 45, "90370867": 45, "65425719": 45, "46885467": 45, "30171991": 45, "77560865": 45, "50927934": 45, "40235686": 45, "91006054": 45, "82169674": 45, "44871332e": 45, "00795848e": 45, "75697554e": 45, "40659699e": 45, "20593540e": 45, "31205385e": 45, "34063837e": 45, "80242597e": 45, "40238837e": 45, "68032820e": 45, "26513361e": 45, "36373920e": 45, "52546195e": 45, "40772739e": 45, "31054753e": 45, "19774150e": 45, "29902872e": 45, "49410422e": 45, "06078986e": 45, "22200805e": 45, "05396464e": 45, "03575289e": 45, "84056467e": 45, "19573357e": 45, "02994053e": 45, "72385417e": 45, "28420336e": 45, "47716225e": 45, "sinkhorn_pi": 45, "55553508e": 45, "96395661e": 45, "31178193e": 45, "30225079e": 45, "37891333e": 45, "56123974e": 45, "33831455e": 45, "61515201e": 45, "07550425e": 45, "85500876e": 45, "52288523e": 45, "08262629e": 45, "16904255e": 45, "03825804e": 45, "87178504e": 45, "23177217e": 45, "39440105e": 45, "sgd": [45, 74, 82], "sgd_dual_pi": [45, 82], "log_sgd": 45, "solve_dual_entrop": 45, "92075753": 45, "80864372": 45, "07370578": 45, "0179414": 45, "60239916": 45, "8141425": 45, "11122763": 45, "346688": 45, "47228889": 45, "57636303": 45, "9534778": 45, "21021974e": 45, "26940978e": 45, "09590373e": 45, "59858662e": 45, "65652588e": 45, "83627521e": 45, "27260904e": 45, "58648690e": 45, "49188637e": 45, "03096858e": 45, "44340331e": 45, "37764488e": 45, "14582303e": 45, "32484188e": 45, "15372556e": 45, "26187284e": 45, "79941580e": 45, "58297483e": 45, "36009581e": 45, "15632652e": 45, "07006729e": 45, "61709962e": 45, "99740394e": 45, "13377026e": 45, "88094057e": 45, "36124884e": 45, "09671824e": 45, "24045368e": 45, "731": [45, 46], "plot_stochast": [45, 46], "277": 46, "auto_examples_oth": 46, "aureli": 47, "boisbunon": [47, 86], "conda": [47, 87], "forg": [47, 87], "document": [47, 65, 86, 87, 88], "pythonot": [47, 66, 86, 88], "io": [47, 86, 88], "Or": 47, "inlin": 47, "caf\u00e9": 47, "croissant": 47, "manhattan": 47, "quick": [47, 86, 88], "googl": 47, "extract": [47, 66], "fiction": 47, "product": [47, 66, 79, 84, 87], "sale": 47, "acess": 47, "bakery_po": 47, "bakery_prod": 47, "sold": 47, "cafe_po": 47, "cafe_prod": 47, "fun": 47, "imap": 47, "shop": 47, "npz": 47, "cafe": 47, "89": [47, 54, 69, 88], "73": [47, 54], "88": [47, 54, 88], "92": [47, 54, 88], "91": [47, 54, 88], "441": [47, 67, 75, 86], "next": [47, 74, 75, 79, 87, 88], "ec": 47, "thing": 47, "fontweight": 47, "bold": 47, "va": 47, "coolwarm": 47, "cbar": 47, "shrink": 47, "use_gridspec": 47, "cell": 47, "awai": 47, "thu": [47, 84], "costli": 47, "while": [47, 75, 87, 88], "time_emd": 47, "section": [47, 87, 88], "plane": 47, "easili": [47, 87], "interpret": 47, "10838179": 47, "pseudo": 47, "oslash": 47, "wise": [47, 66, 87], "divis": 47, "Be": 47, "care": 47, "pre": [47, 67, 87], "nit": 47, "ot_sink_algo": 47, "atleast_2d": 47, "equival": [47, 48, 69, 73, 77], "diag": [47, 66, 67, 87], "algo": [47, 67], "2g": 47, "0008": 47, "notic": 47, "deliv": 47, "fraction": 47, "sens": [47, 67, 75, 86, 87], "reg_paramet": 47, "logspac": [47, 53, 56, 57, 62], "w_sinkhorn_reg": 47, "time_sinkhorn_reg": 47, "max_ot": 47, "few": [47, 88], "seri": 47, "although": 47, "tend": 47, "comparison": [47, 54, 87], "972222222222223": 47, "impact": [47, 87], "higher": [47, 74, 81], "littl": [47, 75], "plot_intro_ot": [47, 55], "0x7f1e18542190": 48, "861463e": 48, "860154e": 48, "144529e": 48, "130143e": 48, "178815e": 48, "426078e": 48, "661047e": 48, "233110e": 48, "338932e": 48, "776627e": 48, "293340e": 48, "235791e": 48, "637176e": 48, "740051e": 48, "529356e": 48, "450071e": 48, "193632e": 48, "449812e": 48, "294505e": 48, "857493e": 48, "822723e": 48, "595": [48, 55, 60], "plot_ot_1d": [48, 55], "0x7f1e182876a0": 49, "821142e": 49, "695268e": 49, "112774e": 49, "571553e": 49, "218100e": 49, "130527e": 49, "418267e": 49, "235716e": 49, "800770e": 49, "242095e": 49, "753030e": 49, "gsm": 49, "smooth_ot_du": [49, 87], "993": [49, 55], "plot_ot_1d_smooth": [49, 55], "discribut": 50, "empirical_sinkhorn": [50, 87], "plot_ot_2d_sampl": [50, 55], "distributio": 51, "stole": 51, "idea": [51, 75, 87], "1706": 51, "07650": 51, "strictli": [51, 75, 87], "m1": 51, "mp": 51, "l1": [51, 68], "gp": 51, "xtot": 51, "080": [51, 55], "plot_ot_l1_vs_l2": [51, 55], "lst_m": 52, "d_emd": 52, "d_emd2": 52, "metrixc": 52, "d_tv": 52, "0x7f1e182d7af0": 52, "d_sinkhorn": 52, "d_sinkhorn2": 52, "577": [52, 55], "plot_compute_emd": [52, 55], "special": [53, 66], "pdf_von_mis": 53, "endpoint": 53, "mu1": 53, "kappa1": 53, "mu_target": 53, "pdf1": 53, "pdf_t": 53, "mu2": 53, "kappa2": 53, "vonmis": 53, "0x7f1e17f0f790": 53, "period": 53, "attain": [53, 77], "antipod": 53, "contrari": 53, "n_try": 53, "deal": [53, 77], "put": 53, "xts2": 53, "l_w2_circl": 53, "l_w2": 53, "w2_circl": 53, "m_w2_circl": 53, "std_w2_circl": 53, "m_w2": 53, "std_w2": 53, "fill_between": [53, 56, 57], "vline": 53, "ymin": 53, "ymax": 53, "linestyl": 53, "726": 53, "tc": 53, "mask_end": 53, "ctp": 53, "ctm": 53, "dcptm": 53, "dcmtp": 53, "vm": 53, "plot_compute_wasserstein_circl": [53, 55], "df": [54, 76, 87], "gl2": 54, "frob": 54, "760578e": 54, "669467e": 54, "457501e": 54, "111116e": 54, "665639e": 54, "298130e": 54, "827855e": 54, "664378e": 54, "572776e": 54, "260396e": 54, "664077e": 54, "811855e": 54, "015066e": 54, "663912e": 54, "936787e": 54, "653393e": 54, "663852e": 54, "555826e": 54, "916369e": 54, "663814e": 54, "305693e": 54, "836245e": 54, "663785e": 54, "760450e": 54, "929009e": 54, "663767e": 54, "078011e": 54, "793559e": 54, "663751e": 54, "525192e": 54, "584755e": 54, "663737e": 54, "396466e": 54, "396951e": 54, "663727e": 54, "086938e": 54, "012700e": 54, "663720e": 54, "042609e": 54, "725769e": 54, "663713e": 54, "160914e": 54, "922568e": 54, "663707e": 54, "823502e": 54, "361187e": 54, "663702e": 54, "022440e": 54, "028438e": 54, "663697e": 54, "181249e": 54, "292634e": 54, "663692e": 54, "698532e": 54, "489527e": 54, "663687e": 54, "258253e": 54, "420712e": 54, "663682e": 54, "741118e": 54, "560349e": 54, "663678e": 54, "624135e": 54, "365715e": 54, "663673e": 54, "645179e": 54, "400714e": 54, "663670e": 54, "957237e": 54, "256196e": 54, "663666e": 54, "261541e": 54, "762450e": 54, "663663e": 54, "851305e": 54, "079948e": 54, "663660e": 54, "942296e": 54, "231320e": 54, "663657e": 54, "092896e": 54, "481860e": 54, "663653e": 54, "924361e": 54, "201470e": 54, "663651e": 54, "625455e": 54, "704189e": 54, "663648e": 54, "641123e": 54, "730250e": 54, "663645e": 54, "566666e": 54, "606377e": 54, "663643e": 54, "338514e": 54, "226810e": 54, "663641e": 54, "222711e": 54, "034152e": 54, "663639e": 54, "221805e": 54, "032642e": 54, "663637e": 54, "440781e": 54, "396935e": 54, "663634e": 54, "520091e": 54, "528875e": 54, "663632e": 54, "288193e": 54, "143080e": 54, "663630e": 54, "123055e": 54, "868347e": 54, "663628e": 54, "024487e": 54, "704365e": 54, "663627e": 54, "079606e": 54, "796061e": 54, "663625e": 54, "172093e": 54, "949922e": 54, "663623e": 54, "047880e": 54, "743277e": 54, "663621e": 54, "010577e": 54, "681217e": 54, "663619e": 54, "064438e": 54, "770820e": 54, "663618e": 54, "882375e": 54, "644049e": 54, "663616e": 54, "532647e": 54, "419505e": 54, "663615e": 54, "930189e": 54, "652001e": 54, "663613e": 54, "728955e": 54, "452161e": 54, "663612e": 54, "524214e": 54, "584459e": 54, "663610e": 54, "088418e": 54, "511958e": 54, "663609e": 54, "639430e": 54, "270902e": 54, "52": [54, 58, 88], "663608e": 54, "662611e": 54, "108397e": 54, "663607e": 54, "133700e": 54, "186767e": 54, "54": 54, "663605e": 54, "648141e": 54, "272349e": 54, "55": [54, 88], "663604e": 54, "557516e": 54, "090911e": 54, "56": [54, 88], "663603e": 54, "304213e": 54, "215131e": 54, "663602e": 54, "353809e": 54, "057021e": 54, "58": [54, 88], "663601e": 54, "968279e": 54, "325603e": 54, "59": [54, 62, 64, 87, 88], "663600e": 54, "367159e": 54, "059240e": 54, "663599e": 54, "610790e": 54, "334102e": 54, "61": 54, "663598e": 54, "787466e": 54, "628015e": 54, "62": [54, 88], "663596e": 54, "937777e": 54, "154166e": 54, "63": 54, "599432e": 54, "315190e": 54, "64": [54, 88], "663595e": 54, "813048e": 54, "670555e": 54, "65": [54, 61], "663594e": 54, "724600e": 54, "523409e": 54, "66": [54, 61, 67, 86, 87, 88], "663593e": 54, "081892e": 54, "011779e": 54, "67": [54, 88], "663592e": 54, "948732e": 54, "896260e": 54, "68": 54, "663591e": 54, "941833e": 54, "221188e": 54, "69": [54, 77], "663590e": 54, "213739e": 54, "673523e": 54, "663589e": 54, "127355e": 54, "529811e": 54, "71": 54, "663588e": 54, "349251e": 54, "235363e": 54, "72": [54, 88], "007084e": 54, "329722e": 54, "663587e": 54, "880265e": 54, "118744e": 54, "74": 54, "663586e": 54, "931950e": 54, "204723e": 54, "663585e": 54, "981309e": 54, "286832e": 54, "76": [54, 88], "663584e": 54, "952959e": 54, "576082e": 54, "77": 54, "544857e": 54, "560750e": 54, "78": [54, 86], "663583e": 54, "237579e": 54, "049564e": 54, "79": [54, 88], "663582e": 54, "382386e": 54, "290460e": 54, "646051e": 54, "065503e": 54, "663581e": 54, "197994e": 54, "983702e": 54, "663580e": 54, "072764e": 54, "775370e": 54, "83": 54, "994645e": 54, "645410e": 54, "84": [54, 88], "663579e": 54, "842721e": 54, "056248e": 54, "663578e": 54, "276486e": 54, "450691e": 54, "86": [54, 88], "737346e": 54, "217366e": 54, "87": [54, 77, 88], "663577e": 54, "282043e": 54, "123508e": 54, "663576e": 54, "020937e": 54, "689135e": 54, "431951e": 54, "709310e": 54, "663575e": 54, "052335e": 54, "077789e": 54, "500538e": 54, "823407e": 54, "663574e": 54, "063176e": 54, "095821e": 54, "663573e": 54, "576367e": 54, "949549e": 54, "94": 54, "224681e": 54, "364492e": 54, "663572e": 54, "673221e": 54, "110670e": 54, "96": 54, "635561e": 54, "048017e": 54, "97": 54, "663571e": 54, "527236e": 54, "867807e": 54, "98": [54, 77], "788548e": 54, "638946e": 54, "663570e": 54, "727141e": 54, "536791e": 54, "127278e": 54, "202445e": 54, "101": 54, "663569e": 54, "637504e": 54, "387670e": 54, "922750e": 54, "862195e": 54, "103": 54, "663568e": 54, "076454e": 54, "117891e": 54, "104": 54, "911509e": 54, "843492e": 54, "105": 54, "663567e": 54, "403398e": 54, "998215e": 54, "106": [54, 88], "439790e": 54, "058755e": 54, "107": [54, 88], "634542e": 54, "382735e": 54, "663566e": 54, "452203e": 54, "079401e": 54, "109": 54, "852991e": 54, "746137e": 54, "663565e": 54, "165490e": 54, "602434e": 54, "111": 54, "450250e": 54, "076149e": 54, "112": 54, "663564e": 54, "685294e": 54, "467159e": 54, "113": [54, 88], "821800e": 54, "694245e": 54, "114": [54, 88], "237390e": 54, "722040e": 54, "115": 54, "663563e": 54, "992842e": 54, "315219e": 54, "116": [54, 88], "166739e": 54, "604506e": 54, "117": 54, "086064e": 54, "470297e": 54, "118": [54, 88], "663562e": 54, "435945e": 54, "052346e": 54, "292497e": 54, "813711e": 54, "663561e": 54, "366209e": 54, "936334e": 54, "138746e": 54, "557935e": 54, "009637e": 54, "343153e": 54, "123": [54, 60], "663560e": 54, "386258e": 54, "969683e": 54, "927442e": 54, "206415e": 54, "081681e": 54, "463000e": 54, "126": [54, 88], "663559e": 54, "759123e": 54, "926406e": 54, "127": [54, 88], "890771e": 54, "145409e": 54, "128": [54, 69], "971315e": 54, "279398e": 54, "129": 54, "663558e": 54, "101983e": 54, "496771e": 54, "035645e": 54, "386414e": 54, "131": [54, 61], "984492e": 54, "301317e": 54, "132": [54, 61, 88], "663557e": 54, "849064e": 54, "076024e": 54, "133": [54, 61], "795703e": 54, "987255e": 54, "134": [54, 88], "624087e": 54, "701762e": 54, "135": 54, "689557e": 54, "810673e": 54, "663556e": 54, "644308e": 54, "735399e": 54, "137": [54, 88], "618007e": 54, "691644e": 54, "138": [54, 61, 88], "483013e": 54, "467075e": 54, "139": [54, 88], "663555e": 54, "708771e": 54, "842636e": 54, "013847e": 54, "350146e": 54, "141": [54, 88], "721217e": 54, "863339e": 54, "142": [54, 88], "663554e": 54, "027911e": 54, "373540e": 54, "143": [54, 88], "764565e": 54, "935449e": 54, "144": [54, 88], "677151e": 54, "790030e": 54, "145": [54, 60, 88], "351982e": 54, "249094e": 54, "146": [54, 88], "663553e": 54, "423360e": 54, "367836e": 54, "147": 54, "541112e": 54, "563722e": 54, "148": [54, 88], "491601e": 54, "481358e": 54, "149": 54, "466407e": 54, "439446e": 54, "663552e": 54, "801524e": 54, "996929e": 54, "151": 54, "714107e": 54, "851507e": 54, "491257e": 54, "480784e": 54, "513799e": 54, "518282e": 54, "154": 54, "663551e": 54, "354539e": 54, "253345e": 54, "155": [54, 88], "233818e": 54, "052519e": 54, "156": [54, 88], "576219e": 54, "622121e": 54, "157": [54, 88], "452791e": 54, "416792e": 54, "663550e": 54, "262867e": 54, "100843e": 54, "316379e": 54, "189863e": 54, "295447e": 54, "155041e": 54, "161": 54, "283286e": 54, "134810e": 54, "162": 54, "569222e": 54, "610479e": 54, "163": [54, 56, 58], "663549e": 54, "172942e": 54, "951247e": 54, "164": 54, "399809e": 54, "328651e": 54, "165": 54, "229432e": 54, "045221e": 54, "166": 54, "326191e": 54, "206184e": 54, "167": 54, "663548e": 54, "209694e": 54, "012384e": 54, "168": 54, "372136e": 54, "282614e": 54, "169": [54, 88], "338395e": 54, "226484e": 54, "416497e": 54, "356410e": 54, "171": 54, "298576e": 54, "160242e": 54, "172": [54, 88], "663547e": 54, "190590e": 54, "980603e": 54, "167083e": 54, "941497e": 54, "174": [54, 88], "069425e": 54, "779038e": 54, "217780e": 54, "025834e": 54, "176": [54, 88], "140754e": 54, "897697e": 54, "177": 54, "663546e": 54, "160707e": 54, "930890e": 54, "178": [54, 88], "101798e": 54, "832892e": 54, "179": 54, "114904e": 54, "854694e": 54, "064022e": 54, "770049e": 54, "181": [54, 88], "258231e": 54, "540149e": 54, "213120e": 54, "018080e": 54, "183": 54, "663545e": 54, "164296e": 54, "936859e": 54, "184": [54, 88], "188762e": 54, "977559e": 54, "185": 54, "394153e": 54, "562760e": 54, "186": 54, "028656e": 54, "711216e": 54, "115348e": 54, "855431e": 54, "188": 54, "663544e": 54, "768310e": 54, "625002e": 54, "189": [54, 88], "021806e": 54, "699820e": 54, "086303e": 54, "807113e": 54, "191": [54, 88], "879008e": 54, "643416e": 54, "192": 54, "050210e": 54, "747071e": 54, "193": 54, "002463e": 54, "667641e": 54, "194": 54, "663543e": 54, "062747e": 54, "767925e": 54, "195": [54, 88], "348538e": 54, "555170e": 54, "196": 54, "992512e": 54, "329589e": 54, "197": 54, "558020e": 54, "590018e": 54, "198": [54, 88], "993772e": 54, "662507e": 54, "588499e": 54, "428734e": 54, "737134e": 54, "453459e": 54, "692289e": 54, "617643e": 54, "614437e": 54, "464513e": 54, "612639e": 54, "102965e": 54, "003963e": 54, "611291e": 54, "371098e": 54, "348827e": 54, "610468e": 54, "110558e": 54, "230389e": 54, "610198e": 54, "672927e": 54, "693743e": 54, "610130e": 54, "232417e": 54, "814742e": 54, "610090e": 54, "513455e": 54, "046887e": 54, "610002e": 54, "443507e": 54, "764057e": 54, "609996e": 54, "657071e": 54, "887869e": 54, "609948e": 54, "998735e": 54, "827807e": 54, "609695e": 54, "569217e": 54, "525962e": 54, "609533e": 54, "010779e": 54, "626881e": 54, "609520e": 54, "043897e": 54, "294681e": 54, "609465e": 54, "415246e": 54, "496718e": 54, "609386e": 54, "898605e": 54, "883745e": 54, "609324e": 54, "837052e": 54, "175060e": 54, "609298e": 54, "617826e": 54, "603564e": 54, "609184e": 54, "080015e": 54, "139305e": 54, "609083e": 54, "273206e": 54, "009411e": 54, "608988e": 54, "940805e": 54, "558681e": 54, "608853e": 54, "380030e": 54, "348223e": 54, "608844e": 54, "185045e": 54, "341930e": 54, "608824e": 54, "279113e": 54, "057868e": 54, "608819e": 54, "156821e": 54, "078753e": 54, "608783e": 54, "205746e": 54, "548567e": 54, "608764e": 54, "189894e": 54, "914259e": 54, "608755e": 54, "474607e": 54, "807303e": 54, "608737e": 54, "144227e": 54, "840760e": 54, "608676e": 54, "775335e": 54, "073291e": 54, "608638e": 54, "348020e": 54, "777116e": 54, "608627e": 54, "863136e": 54, "104023e": 54, "608529e": 54, "110230e": 54, "828482e": 54, "608487e": 54, "641106e": 54, "248184e": 54, "608409e": 54, "823638e": 54, "758383e": 54, "608373e": 54, "256641e": 54, "629519e": 54, "608338e": 54, "132444e": 54, "429691e": 54, "608310e": 54, "786649e": 54, "873484e": 54, "608260e": 54, "103848e": 54, "991794e": 54, "608206e": 54, "321265e": 54, "341279e": 54, "608201e": 54, "054747e": 54, "912648e": 54, "608195e": 54, "198335e": 54, "751739e": 54, "608193e": 54, "458736e": 54, "360328e": 54, "608159e": 54, "153759e": 54, "463587e": 54, "608115e": 54, "738314e": 54, "403523e": 54, "608108e": 54, "960032e": 54, "368161e": 54, "608081e": 54, "675447e": 54, "694254e": 54, "608072e": 54, "976340e": 54, "610383e": 54, "608046e": 54, "604130e": 54, "579515e": 54, "608020e": 54, "617036e": 54, "600226e": 54, "608014e": 54, "957795e": 54, "364188e": 54, "608011e": 54, "292411e": 54, "078211e": 54, "607998e": 54, "431795e": 54, "355831e": 54, "607964e": 54, "127054e": 54, "420225e": 54, "607947e": 54, "021878e": 54, "643126e": 54, "560621e": 54, "725288e": 54, "607900e": 54, "929781e": 54, "710793e": 54, "607890e": 54, "740229e": 54, "229659e": 54, "607858e": 54, "039550e": 54, "279306e": 54, "607836e": 54, "319545e": 54, "121612e": 54, "607826e": 54, "378947e": 54, "025624e": 54, "607808e": 54, "145102e": 54, "841105e": 54, "607776e": 54, "941743e": 54, "121889e": 54, "607743e": 54, "087422e": 54, "356037e": 54, "607741e": 54, "310249e": 54, "106541e": 54, "607738e": 54, "682752e": 54, "705425e": 54, "607691e": 54, "913936e": 54, "684709e": 54, "607671e": 54, "288855e": 54, "072055e": 54, "607654e": 54, "002448e": 54, "611590e": 54, "607641e": 54, "209492e": 54, "319792e": 54, "607632e": 54, "588467e": 54, "984199e": 54, "607619e": 54, "050388e": 54, "294196e": 54, "607618e": 54, "417493e": 54, "513973e": 54, "607598e": 54, "210509e": 54, "946012e": 54, "607591e": 54, "392914e": 54, "062009e": 54, "607579e": 54, "759587e": 54, "247415e": 54, "607574e": 54, "760280e": 54, "437356e": 54, "607556e": 54, "146469e": 54, "843012e": 54, "607550e": 54, "689456e": 54, "930984e": 54, "065631e": 54, "535705e": 54, "607539e": 54, "555681e": 54, "053852e": 54, "607528e": 54, "177470e": 54, "153798e": 54, "607527e": 54, "306068e": 54, "529648e": 54, "607514e": 54, "816045e": 54, "256440e": 54, "607511e": 54, "301970e": 54, "700442e": 54, "607504e": 54, "281072e": 54, "881840e": 54, "607503e": 54, "821886e": 54, "257370e": 54, "607480e": 54, "403013e": 54, "255315e": 54, "169298e": 54, "879624e": 54, "607473e": 54, "235982e": 54, "809227e": 54, "607470e": 54, "717105e": 54, "760195e": 54, "148402e": 54, "883374e": 54, "reg1": [54, 76], "reg2": [54, 76], "gel2": 54, "gcg": [54, 69, 87], "693084e": 54, "610202e": 54, "147342e": 54, "288260e": 54, "610179e": 54, "406304e": 54, "264402e": 54, "610174e": 54, "352083e": 54, "397436e": 54, "715023e": 54, "371659e": 54, "154387e": 54, "474015e": 54, "336": [54, 55, 88], "plot_optim_otreg": [54, 55], "057": 55, "auto_exampl": 55, "adrien": [56, 65, 86], "corenflo": [56, 65, 86], "aalto": 56, "fi": [56, 60], "n_seed": [56, 57], "n_projections_arr": [56, 57], "res_mean": [56, 57], "res_std": [56, 57], "xscale": [56, 57], "confid": [56, 57], "inverv": [56, 57], "plot_vari": [56, 58], "mgrid": 57, "30j": 57, "plot_surfac": 57, "set_zlim": 57, "tick": 57, "ssw_1": 57, "773": [57, 58], "plot_variance_ssw": [57, 58], "936": 58, "auto_examples_sl": 58, "uot": [59, 79, 86, 87], "plot_uot_1d": [59, 64], "n_weight": 60, "weight_list": 60, "909": 60, "kv": 60, "914": 60, "ktu": 60, "921": 60, "974": 60, "615": 60, "455": 60, "361": [60, 88], "plot_uot_barycenter_1d": [60, 64], "419": [60, 64], "n_nois": [61, 63], "cov": 61, "w0": 61, "partial_wasserstein": [61, 63, 87], "entropic_partial_wasserstein": [61, 87], "partial_w_dist": 61, "47910182636916243": 61, "5034205945081646": 61, "res0": 61, "partial_gromov_wasserstein": [61, 87], "entropic_partial_gromov_wasserstein": [61, 87], "partial_gw_dist": [61, 77], "611280e": 61, "345385e": 61, "584346e": 61, "659015e": 61, "38071035222889": 61, "59015303098326": 61, "plot_partial_wass_and_gromov": [61, 64], "overlap": [61, 87], "sinc": [61, 75, 87, 88], "explicitli": [61, 88], "478237e": 61, "894947e": 61, "251769e": 61, "596705e": 61, "808371e": 61, "136110e": 61, "859072e": 61, "136043e": 61, "11743971783944865": 61, "9136043100219415": 61, "wu": [62, 79, 83, 86], "f\u00e9vott": [62, 79, 83, 86], "through": [62, 79, 83, 86, 87], "haoran": 62, "final_gamma": 62, "t_list": [62, 79], "g_list": [62, 79], "regularization_path": 62, "semi_relax": [62, 79], "t_list2": 62, "g_list2": 62, "selected_gamma": 62, "compute_transport_plan": 62, "ell_2": [62, 63, 83], "g_list_v": 62, "l_2": 62, "221": [62, 64], "plot_regpath": [62, 64], "_f": [63, 87], "div": [63, 83], "ell_1": 63, "reg_m_kl": 63, "reg_m_l2": 63, "entropic_kl_uot": 63, "kl_uot": 63, "mm_unbalanc": 63, "l2_uot": 63, "partial_ot": 63, "486": [63, 64], "plot_unbalanced_ot": [63, 64], "auto_examples_unbalanc": 64, "wrapper": [65, 87], "alexandr": [65, 86], "ci": [65, 88], "michael": 65, "l\u00e9o": [65, 86], "gautheron": [65, 86], "nathali": [65, 86], "gayraud": [65, 86], "antoin": [65, 81, 86], "debug": [65, 88], "alain": [65, 86], "jcpot": [65, 86, 88], "kerdoncuff": [65, 74, 86, 87], "minhui": 65, "huang": [65, 71, 86, 87], "robust": [65, 71, 86, 87, 88], "nathan": [65, 88], "cassereau": [65, 88], "camil": 65, "le": 65, "coz": 65, "theo": 65, "gnassoun": 65, "wassertstein": 65, "lot": [65, 88], "would": [65, 66, 88], "variou": [65, 84, 88], "mathieu": [65, 81, 88], "financ": [65, 86], "manpow": [65, 86], "partner": [65, 86], "goal": [66, 82], "agnost": 66, "whether": [66, 74, 75, 84], "cupi": [66, 86, 87, 88], "nonetheless": 66, "achiev": 66, "imit": 66, "As": [66, 75, 87, 88], "convent": [66, 69], "list_to_arrai": [66, 84], "get_backend": 66, "know": 66, "argument": [66, 69, 76, 84, 88], "op": 66, "numpy_op": 66, "np_config": 66, "enable_numpy_behavior": 66, "intel": 66, "xeon": 66, "6248": 66, "50ghz": 66, "tesla": 66, "v100": 66, "sxm2": 66, "32gb": 66, "date": [66, 88], "8th": 66, "316": [66, 88], "pull": [66, 88], "bitsize32": 66, "bit": 66, "devicecpugpu": 66, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 66, "00080": 66, "00220": 66, "01510": 66, "00950": 66, "01930": 66, "00510": 66, "0293": 66, "00050": 66, "00130": 66, "00970": 66, "00570": 66, "01150": 66, "00290": 66, "0173": 66, "5000": 66, "00090": 66, "00160": 66, "01100": 66, "00580": 66, "0166": 66, "00210": 66, "01450": 66, "00560": 66, "01180": 66, "0168": 66, "20000": [66, 82], "00690": 66, "00430": 66, "02780": 66, "00590": 66, "00300": 66, "0165": 66, "50000": [66, 79], "07070": 66, "03140": 66, "13950": 66, "00740": 66, "01250": 66, "00350": 66, "0198": 66, "nbsp": 66, "bitsize64": 66, "00200": 66, "01540": 66, "00930": 66, "01910": 66, "0328": 66, "00940": 66, "01140": 66, "0169": 66, "00170": 66, "01200": 66, "01160": 66, "00340": 66, "00270": 66, "01770": 66, "0167": 66, "01460": 66, "00750": 66, "04360": 66, "14670": 66, "05680": 66, "24680": 66, "00770": 66, "00450": 66, "0204": 66, "proper": [66, 88], "typeerror": 66, "get_backend_list": 66, "to_numpi": 66, "abstract": 66, "jaxbackend": 66, "numpybackend": 66, "torchbackend": [66, 88], "cupybackend": 66, "tensorflowbackend": 66, "__name__": 66, "attribut": [66, 69, 74, 88], "__type__": 66, "rtol": 66, "equal_nan": 66, "evalu": [66, 67, 68], "evenli": 66, "argsort": 66, "array_equ": 66, "assert_same_dtype_devic": 66, "arctang": 66, "arctan2": 66, "bitsiz": 66, "a_min": 66, "a_max": 66, "sequenc": 66, "exist": [66, 67, 87, 88], "col": 66, "cumsum": 66, "device_typ": 66, "dtype_devic": 66, "einsum": 66, "subscript": 66, "operand": 66, "einstein": 66, "summat": 66, "eliminate_zero": 66, "entri": 66, "smaller": [66, 88], "csr_matrix": 66, "exponenti": [66, 67], "flip": 66, "from_numpi": 66, "fill_valu": 66, "inv": 66, "is_floating_point": 66, "isfinit": 66, "infin": 66, "Not": 66, "isinf": 66, "isnan": 66, "nan": 66, "isspars": 66, "kl_div": 66, "stat": 66, "specifi": [66, 69, 84, 88], "logsumexp": [66, 71, 87], "amax": 66, "arithmet": 66, "amin": 66, "frobeniu": 66, "outer": 66, "expon": 66, "prod": 66, "qr": 66, "repeat": 66, "searchsort": 66, "side": [66, 79], "insert": 66, "set_gradi": [66, 88], "val": 66, "equat": [66, 67, 74, 82, 87], "scalar": [66, 67, 68], "sort2": 66, "ngeativ": 66, "root": [66, 86, 87], "definit": [66, 87], "squeez": 66, "deviat": [66, 74], "take_along_axi": 66, "arr": 66, "gather": 66, "tile": 66, "rep": 66, "tocsr": 66, "compress": 66, "todens": 66, "trace": 66, "dim0": 66, "dim1": 66, "swap": 66, "chosen": [66, 84, 87], "zero_pad": 66, "pad_width": 66, "pad": 66, "cp": 66, "s_": 67, "empirical_sinkhorn_diverg": [67, 87, 88], "barycenter_sinkhorn": 67, "barycenter_stabil": 67, "tau": [67, 71, 83], "10000000000": 67, "mast": 67, "strength": 67, "height": 67, "stabthr": 67, "goe": [67, 86, 87], "butscher": [67, 86, 87], "nguyen": [67, 86, 87], "guiba": [67, 86, 87], "effici": [67, 75, 86, 87, 88], "geometr": [67, 86, 87], "islazi": 67, "batchsiz": 67, "99977301e": 67, "26989344e": 67, "empirical_sinkhorn2": [67, 87], "53978687e": 67, "w_a": 67, "gamma_a": 67, "m_a": 67, "w_b": 67, "gamma_b": 67, "m_b": 67, "_a": [67, 79], "_b": 67, "499887176049052": 67, "artfici": [67, 86, 87], "frechet": [67, 75], "w_i": [67, 75], "measure_weight": [67, 75], "k_i": [67, 75], "There": [67, 75, 87], "arnaud": [67, 75], "doucet": [67, 75, 86, 87], "\u00e1lvarez": [67, 75, 86], "esteban": [67, 75, 86], "pedro": [67, 75, 86], "744": [67, 75, 86], "762": [67, 75, 86], "geometricbar": 67, "alldistribt": 67, "geometricmean": 67, "jcpot_barycent": 67, "lambda_k": 67, "gamma_k": 67, "_n": 67, "th": [67, 68, 79, 81], "relat": [67, 74, 86, 87, 88], "n_k": 67, "unknown": 67, "nsk": 67, "control": [67, 69], "devi": [67, 69], "projc": 67, "constrint": 67, "projr": 67, "maxfun": 67, "pgtol": 67, "written": [67, 75], "u_i": 67, "ldot": 67, "v_j": 67, "regularis": 67, "kept": [67, 88], "bfg": [67, 81, 83, 87], "lbfg": 67, "final": [67, 75, 87, 88], "accuraci": 67, "gain": 67, "isn": 67, "epsilon0": 67, "print_period": 67, "decreas": [67, 69], "tabl": 67, "m0": 67, "h0": 67, "reg0": 67, "dh": 67, "m_0": 67, "_0": 67, "n_atom": 67, "dim_prior": 67, "trust": [67, 71], "nakhostin": [67, 86], "corpetti": [67, 86], "planetari": [67, 86], "whorkshop": [67, 86], "hyperspectr": [67, 86], "signal": [67, 86, 87], "remot": [67, 86], "whisper": [67, 86], "wx_samp": 68, "wx_feat": 68, "wy_feat": 68, "m_samp": 68, "m_feat": 68, "nits_bcd": 68, "tol_bcd": 68, "eval_bcd": 68, "nits_ot": 68, "tol_sinkhorn": 68, "method_sinkhorn": 68, "early_stopping_tol": 68, "xf": 68, "yf": 68, "alpha_": 68, "alpha_f": 68, "varepsilon_": 68, "varepsilon_f": 68, "n_sample_x": 68, "n_feature_x": 68, "n_sample_i": 68, "n_feature_i": 68, "coefffici": 68, "kei": [68, 74], "duals_sampl": 68, "duals_featur": 68, "whose": [68, 74, 75, 79], "bcd": [68, 69, 74], "scheme": 68, "previou": [68, 79], "multipli": [68, 84], "earli": [68, 88], "pi_samp": 68, "pi_feat": 68, "pair": [68, 84], "ny_sampstem": 68, "alpha_1": 68, "alpha_2": 68, "varepsilon_1": 68, "varepsilon_2": 68, "distribution_estimation_uniform": 69, "emd_laplac": 69, "knn": 69, "sim_param": 69, "n_": 69, "s_i": 69, "s_j": 69, "n_t": 69, "t_i": 69, "t_j": 69, "neighbor": 69, "bandwidth": 69, "workshop": [69, 86, 87], "otml": [69, 86, 87], "joint_ot_mapping_kernel": [69, 87], "kerneltyp": 69, "verbose2": 69, "nonlinear": [69, 87], "2_f": 69, "2_": 69, "jointli": 69, "constant": [69, 74, 75], "supplementari": 69, "materi": 69, "conditionn": 69, "joint_ot_mapping_linear": [69, 87], "neutral": 69, "sinkhorn_l1l2_gl": [69, 87], "regula": 69, "generalis": [69, 75], "keyword": [69, 84], "store": 69, "transform_label": 69, "inverse_transform_label": 69, "y_t": 69, "unlabel": [69, 77, 86, 87], "transp_x": 69, "transp_xt": 69, "propag": 69, "transp_i": 69, "soft": 69, "nb_class": 69, "similarity_param": 69, "max_inner_it": 69, "inner_tol": 69, "distribution_estim": 69, "out_of_sample_map": 69, "disp": 69, "occur": [69, 87], "kind": [69, 75, 87], "emploi": 69, "limit_max": 69, "10e": 69, "n_class": 69, "849": 69, "858": 69, "nk_source_sampl": 69, "sigma_": [69, 73], "sigma_t": [69, 73], "remark": [69, 73, 87], "daigon": 69, "covari": [69, 70, 73, 87], "knott": [69, 73, 86, 87], "smith": [69, 73, 86, 87], "theori": [69, 73, 86, 87], "1984": [69, 73, 86, 87], "mapping_": 69, "lpl1": 69, "infti": 69, "unbalancedsinkhorntransport": 69, "deviaton": 70, "classif": 70, "reduct": [71, 86, 88], "fisher": [71, 77, 87], "dimensionn": 71, "ridg": 71, "proj": [71, 80], "projection_robust_wasserstein": 71, "u0": 71, "max_": [71, 79, 81, 82], "pi_": 71, "stiefel": [71, 87], "stepsiz": 71, "riemannian": [71, 86, 87], "ma": [71, 86, 87], "lai": [71, 86, 87], "split_class": 71, "split": 71, "sinkhorn_method": 71, "limits_i": 71, "limits_": 71, "neq": [71, 87], "steepest": 71, "trustregion": 71, "region": 71, "normalis": 71, "wasserstaiun": 71, "1608": [71, 86, 87], "08063": [71, 86, 87], "bures_wasserstein_dist": 73, "ct": 73, "bure": [73, 88], "lvert": 73, "_t": 73, "rvert": 73, "tr": 73, "bures_wasserstein_map": [73, 87], "empirical_bures_wasserstein_dist": 73, "gw_distance_estim": 74, "nb_samples_p": 74, "nb_samples_q": 74, "unbias": 74, "csr": 74, "replac": [74, 87, 88], "emonet": [74, 86, 87], "sebban": 74, "marc": [74, 86, 87], "mlj": 74, "entropic_gromov_barycent": [74, 87], "necessarili": 74, "entropic_gromov_wasserstein2": 74, "fixed_structur": 74, "fixed_featur": 74, "init_x": 74, "eq": [74, 81], "cdict_init": 74, "ydict_init": 74, "fgw_": 74, "Such": 74, "_d": 74, "distibut": 74, "cdict": 74, "ydict": 74, "randomli": 74, "nonneg": 74, "strategi": 74, "consecut": 74, "cdict_best_st": 74, "compos": 74, "ydict_best_st": 74, "w_d": 74, "emb": 74, "depict": 74, "span": [74, 75], "current_loss": 74, "gw_2": 74, "gwggrad": 74, "constc": 74, "hc1": 74, "hc2": 74, "proposit": [74, 81, 82], "h1": 74, "gwloss": 74, "init_matrix": 74, "otim": 74, "gromow": [74, 87], "read": [74, 86], "f_1": 74, "h_1": 74, "2b": 74, "init_matrix_semirelax": 74, "anymor": 74, "fc2t": 74, "threshold_plan": 74, "frank": 74, "wolf": 74, "_iter": 74, "pn": 74, "complex": [74, 87], "delet": [74, 79], "violat": [74, 75, 87], "nb_samples_grad": 74, "howev": [74, 87], "yet": [74, 87, 88], "semirelaxed_fused_gromov_wasserstein2": 74, "semirelaxed_gromov_wasserstein2": 74, "solve_gromov_linesearch": [74, 76], "deltag": 74, "cost_g": 74, "alpha_min": [74, 76], "alpha_max": [74, 76], "fw": 74, "fc": [74, 76], "useless": [74, 88], "solve_semirelaxed_gromov_linesearch": [74, 76], "ones_p": 74, "tensor_product": 74, "ten": 74, "update_feature_matrix": 74, "update_kl_loss": 74, "update_square_loss": 74, "update_structure_matrix": 74, "alpha0": [75, 76], "beta0": 75, "below": [75, 86, 88], "basic": 75, "alpha_0": 75, "beta_0": 75, "check_number_thread": 75, "request": [75, 80, 86], "valid": 75, "estimate_dual_null_weight": 75, "rather": 75, "coars": 75, "emd_c": 75, "discard": 75, "amount": [75, 77, 87, 88], "max_j": 75, "max_i": 75, "beta_j": [75, 81], "y_init": 75, "nu_i": 75, "b_l": 75, "y_l": 75, "a_": 75, "d_i": 75, "p_i": 75, "p_ix_": 75, "rightarrow": 75, "don": 75, "ill": 75, "anywai": 75, "cvxopt": [75, 87, 88], "glpk": 75, "mosek": 75, "agueh": [75, 86, 87], "904": [75, 86, 87], "924": [75, 86, 87], "line_search": 76, "line_search_armijo": [76, 88], "ransport": [76, 85], "reg_1": 76, "reg_2": 76, "generic_conditional_gradi": 76, "lp_solver": 76, "lp_semi_relaxed_ot": 76, "gcg_linesearch": 76, "xk": 76, "pk": 76, "gfk": 76, "old_fval": 76, "x_k": 76, "p_k": 76, "fa": 76, "const": 76, "semirelaxed_cg": 76, "solve_1d_linesearch_quad": 76, "bx": 76, "costfr": 77, "initialis": 77, "entropic_partial_gromov_wasserstein2": 77, "gwgrad_parti": 77, "n_p": 77, "n_u": 77, "nb_dummi": 77, "gwloss_parti": 77, "thre": 77, "dummi": [77, 88], "instabl": 77, "popul": 77, "partial_gromov_wasserstein2": 77, "especi": [77, 87], "smoother": 77, "repartit": 77, "reservoir": [77, 87], "caffarelli": [77, 86, 87], "mccann": [77, 86, 87], "boundari": [77, 86, 87], "amper": [77, 86, 87], "obstacl": [77, 86, 87], "annal": [77, 86, 87], "673": [77, 86, 87], "partial_wasserstein_lagrang": 77, "partial_wasserstein2": [77, 87], "rao": 77, "tune": 77, "shown": [78, 87], "na": 78, "thr": 78, "noth": 78, "complement_schur": 79, "m_current": 79, "id_pop": 79, "schur": 79, "complement": 79, "aris": 79, "bmatrix": 79, "m_k": 79, "h_a": 79, "th_a": 79, "backslash": 79, "r_": 79, "depriv": 79, "compute_next_remov": 79, "current_gamma": 79, "largest": 79, "vanish": [79, 87], "phi_j": 79, "delta_j": 79, "intercept": 79, "slope": 79, "next_removal_gamma": 79, "next_removal_index": 79, "gamma_list": 79, "pi_list": 79, "piecewis": 79, "flatten": 79, "19722222": 79, "05555556": 79, "24722222": 79, "construct_augmented_h": 79, "active_index": 79, "hc": 79, "hrhr": 79, "augment": 79, "_h": 79, "h_": 79, "h_r": 79, "h_c": 79, "h_augment": 79, "fully_relaxed_path": 79, "itmax": 79, "reformul": 79, "min_t": 79, "99958333e": 79, "00000000e": 79, "88888889e": 79, "99938889e": 79, "ot_next_gamma": 79, "hth": 79, "hty": 79, "inact": 79, "next_gamma": 79, "next_active_index": 79, "recast_ot_as_lasso": 79, "recast": 79, "1_m": 79, "1_n": 79, "particularli": [79, 87], "uot2": 79, "recast_semi_relaxed_as_lasso": 79, "hr": 79, "auxiliari": 79, "constitut": 79, "semi_relaxed_next_gamma": 79, "phi_u": 79, "delta_u": 79, "hra": 79, "ri": 79, "ra": 79, "ith": 79, "lagrang": [79, 84], "semi_relaxed_path": 79, "99980556e": 79, "94444444e": 79, "get_random_project": 80, "unit": [80, 87], "ue": 80, "proc": 81, "1710": 81, "06276": 81, "mblondel": 81, "dual_obj_grad": 81, "regul": 81, "delta_omega": 81, "grad_alpha": 81, "grad_beta": 81, "get_plan_from_du": 81, "retriev": 81, "get_plan_from_semi_du": 81, "projection_simplex": 81, "substack": 81, "z_i": 81, "z_j": 81, "semi_dual_obj_grad": 81, "max_omega": 81, "decent": 81, "nbb": 81, "sinhorn": 81, "smooth_ot_semi_du": [81, 87], "solve_du": 81, "solve_semi_du": 81, "negentropi": 81, "sup_": 81, "nabla": 81, "intend": 81, "appar": 81, "squaredl2": 81, "averaged_sgd_entropic_transport": 82, "300000": 82, "contin": 82, "alg": 82, "ave_v": 82, "53942342e": 82, "98640673e": 82, "75945647e": 82, "27664307e": 82, "21556999e": 82, "26350515e": 82, "30491795e": 82, "36017394e": 82, "54070702e": 82, "63581358e": 82, "29581672e": 82, "32812798e": 82, "60578198e": 82, "35916645e": 82, "28023223e": 82, "05336238e": 82, "86808864e": 82, "59774324e": 82, "08702729e": 82, "21359007e": 82, "17218856e": 82, "12931802e": 82, "87962526e": 82, "18342700e": 82, "14237512e": 82, "67487857e": 82, "23016955e": 82, "38291052e": 82, "batch_grad_du": 82, "batch_alpha": 82, "batch_beta": 82, "partial_": 82, "b_": 82, "l_v": 82, "b_v": 82, "l_u": 82, "b_u": 82, "30000": 82, "71759102": 82, "57057384": 82, "85576566": 82, "1208211": 82, "59190466": 82, "197148": 82, "17805133": 82, "49741367": 82, "57478564": 82, "40075528": 82, "75890102": 82, "09730063e": 82, "38169324e": 82, "50365455e": 82, "72731415e": 82, "58432437e": 82, "89881299e": 82, "09558411e": 82, "35469849e": 82, "26489515e": 82, "15536035e": 82, "99778211e": 82, "02601593e": 82, "05390622e": 82, "31085068e": 82, "65191787e": 82, "55812785e": 82, "82299812e": 82, "12099102e": 82, "44989098e": 82, "37719187e": 82, "06266486e": 82, "16230494e": 82, "26215141e": 82, "81514609e": 82, "06713990e": 82, "98139808e": 82, "46829338e": 82, "62371424e": 82, "c_transform_entrop": 82, "coordinate_grad_semi_du": 82, "bewar": 82, "dual_loss": 82, "sag_entropic_transport": 82, "sgd_entropic_regular": 82, "64171798": 82, "27932201": 82, "78132257": 82, "15638935": 82, "54888354": 82, "03663469": 82, "20595781": 82, "51207194": 82, "58033189": 82, "28922676": 82, "26859736": 82, "97276541e": 82, "81248547e": 82, "22136048e": 82, "95442423e": 82, "23494310e": 82, "43286263e": 82, "06927079e": 82, "82389139e": 82, "07542414e": 82, "67897769e": 82, "48904999e": 82, "72030247e": 82, "26271990e": 82, "53375455e": 82, "16535024e": 82, "88812650e": 82, "60423265e": 82, "89585256e": 82, "81267087e": 82, "39458256e": 82, "37557504e": 82, "85189176e": 82, "72335760e": 82, "55491279e": 82, "33096109e": 82, "11683954e": 82, "02962051e": 82, "43097516e": 82, "64057733": 82, "2683513": 82, "75610161": 82, "16024284": 82, "54926534": 82, "0514201": 82, "19958936": 82, "51372571": 82, "58843489": 82, "27993921": 82, "24344807": 82, "97377795e": 82, "86706853e": 82, "15682001e": 82, "82586997e": 82, "19566963e": 82, "42016865e": 82, "02777272e": 82, "68823708e": 82, "00379244e": 82, "56562018e": 82, "40462171e": 82, "63579656e": 82, "28626062e": 82, "60031599e": 82, "13193826e": 82, "67977735e": 82, "61972739e": 82, "94609051e": 82, "77886693e": 82, "36046648e": 82, "44810042e": 82, "89476742e": 82, "73285847e": 82, "51826036e": 82, "30118293e": 82, "12398660e": 82, "95148998e": 82, "26247246e": 82, "barycenter_unbalanced_sinkhorn": 83, "barycenter_unbalanced_stabil": [83, 87], "absorpt": 83, "lbfgsb_unbalanc": 83, "reg_div": 83, "regm_div": 83, "div_m": 83, "quantifi": 83, "mm_unbalanced2": 83, "b_i": 83, "thershold": 83, "check_param": 84, "miss": 84, "check_random_st": 84, "turn": 84, "singleton": 84, "alreadi": [84, 87, 88], "valueerror": 84, "clean_zero": [84, 88], "compon": [84, 87], "cost_norm": 84, "median": 84, "loglog": 84, "lin_squar": 84, "euclidean_dist": 84, "n_samples_1": 84, "n_samples_2": 84, "ambient": 84, "y1": 84, "label_norm": 84, "smallest": 84, "lst": 84, "parmap": 84, "nproc": 84, "multiprocess": 84, "closest": 84, "orthogon": 84, "get_param": 84, "deep": [84, 87], "subobject": 84, "param": 84, "set_param": 84, "nest": 84, "pipelin": 84, "latter": 84, "__": 84, "sparse_plan": 84, "lazy_plan": 84, "a_to_b": 84, "b_to_a": 84, "citat": 84, "plain": 84, "bibtex": [84, 86], "symbol": 84, "keop": 84, "lazytensor": 84, "marginal_a": 84, "marginal_b": 84, "potential_a": 84, "potential_b": 84, "extra": 84, "decor": 84, "mark": 84, "blob": 84, "instanti": [84, 88], "parenthes": 84, "some_funct": 84, "undefinedparamet": 84, "undefin": 84, "sever": [86, 87, 88], "websit": 86, "jmlr": [86, 88], "aur\u00e9li": 86, "nemo": 86, "fournier": 86, "antoni": 86, "schutz": 86, "danica": 86, "sutherland": 86, "alexand": 86, "tong": 86, "articl": 86, "flamary2021pot": 86, "mi": 86, "aur": 86, "lie": [86, 87], "year": [86, 87, 88], "volum": 86, "url": 86, "v22": 86, "451": 86, "linux": [86, 88], "macosx": [86, 88], "window": [86, 88], "cython": [86, 87, 88], "latest": 86, "archiv": 86, "abl": 86, "easier": [86, 87], "wd": 86, "wd_reg": 86, "t_reg": [86, 87], "ba": 86, "question": 86, "slack": 86, "channel": 86, "gitter": 86, "bug": [86, 88], "2292": [86, 87], "2300": [86, 87], "36th": [86, 87], "38th": [86, 87], "mjl": [86, 87], "pointer": [87, 88], "concret": 87, "book": 87, "ml": 87, "gaspard": 87, "1781": 87, "move": [87, 88], "overal": 87, "difficult": 87, "kantorovitch": 87, "aspect": 87, "share": 87, "disjoint": 87, "favor": 87, "popular": 87, "jensen": 87, "shannon": 87, "meaning": 87, "becam": 87, "overcom": 87, "spectra": 87, "itself": 87, "criterion": [87, 88], "context": 87, "recent": [87, 88], "rapidli": 87, "grow": 87, "novel": [87, 88], "abil": 87, "extend": 87, "interfac": 87, "submodul": [87, 88], "configur": 87, "proven": 87, "nearli": 87, "still": [87, 88], "geomloss": 87, "lipschitz": 87, "exactli": 87, "filter": 87, "minibtach": 87, "wasserstsein": 87, "quit": [87, 88], "known": 87, "affin": 87, "hi": 87, "semin": 87, "strong": 87, "procedur": 87, "slower": 87, "implmement": 87, "variant": [87, 88], "tu": 87, "kullbach": 87, "similarli": 87, "pure": 87, "speed": [87, 88], "effect": 87, "densifi": 87, "lost": 87, "soon": 87, "_q": 87, "forc": 87, "choic": [87, 88], "major": [87, 88], "long": 87, "w_kw": 87, "mu_k": 87, "b_k": 87, "linprog": 87, "brought": 87, "brenier": 87, "eponym": 87, "theorem": 87, "basetransport": [87, 88], "classifi": [87, 88], "xs_map": 87, "inherit": 87, "linearli": 87, "projector": 87, "min_p": 87, "mu_j": 87, "constrain": 87, "hard": [87, 88], "w_u": 87, "interestingli": 87, "fr\u00e9chet": 87, "w_kw_u": 87, "barycenter_unbalanced_sinkhorn_unbalanc": 87, "surplu": 87, "sent": 87, "resolut": 87, "c1_": 87, "c2_": 87, "realign": 87, "ck": 87, "fusion": 87, "coin": 87, "partli": 87, "seamlessli": [87, 88], "en": 87, "incur": 87, "far": 87, "longer": 87, "hopefulli": [87, 88], "disappear": 87, "becom": 87, "fulli": 87, "importerror": 87, "shortli": 87, "readm": [87, 88], "tri": [87, 88], "quicker": [87, 88], "nterpol": 87, "cc": 87, "9386": 87, "www": 87, "toronto": 87, "annals2010": 87, "2002": 87, "08276": 87, "mlr": 87, "press": 87, "v97": 87, "liutkus19a": 87, "herit": 88, "431": 88, "434": 88, "428": 88, "372": 88, "376": 88, "387": 88, "388": 88, "449": 88, "437": 88, "443": 88, "447": 88, "448": 88, "395": 88, "393": 88, "394": 88, "371": 88, "373": 88, "374": 88, "hit": 88, "stderr": 88, "cerr": 88, "stream": 88, "377": 88, "378": 88, "379": 88, "beyond": 88, "certain": 88, "slightli": 88, "46k": 88, "roughli": 88, "381": 88, "mismatch": 88, "386": 88, "389": 88, "391": 88, "around": 88, "402": 88, "built": 88, "403": 88, "setuptool": 88, "408": 88, "409": 88, "404": 88, "412": 88, "413": 88, "render": 88, "subcal": 88, "421": 88, "422": 88, "break": 88, "try": 88, "424": 88, "425": 88, "444": 88, "445": 88, "446": 88, "notabl": 88, "less": 88, "background": 88, "autodiff": 88, "front": 88, "359": 88, "358": 88, "brand": 88, "357": 88, "minigalleri": 88, "334": 88, "341": 88, "319": 88, "364": 88, "363": 88, "valfunct": 88, "337": 88, "338": 88, "abi": 88, "old": 88, "346": 88, "349": 88, "feed": 88, "345": 88, "backpropag": 88, "351": 88, "352": 88, "tag": 88, "global": 88, "namespac": 88, "331": 88, "333": 88, "enabl": 88, "bring": 88, "wheel": 88, "older": 88, "realli": 88, "315": 88, "code_of_conduct": 88, "322": 88, "308": 88, "326": 88, "305": 88, "306": 88, "sinkhornl1l2": 88, "311": 88, "313": 88, "317": 88, "3018": 88, "novemb": 88, "nice": 88, "mechan": 88, "moment": 88, "ott": 88, "devias": 88, "sinkorn": 88, "simplifi": 88, "pyproject": 88, "toml": 88, "pe": 88, "aarch64": 88, "raspberri": 88, "android": 88, "phone": 88, "maco": 88, "arm": 88, "processor": 88, "softwar": 88, "cite": 88, "improv": 88, "particular": 88, "usual": 88, "peopl": 88, "kamel": 88, "guerda": 88, "ai": 88, "idri": 88, "282": 88, "294": 88, "302": 88, "304": 88, "303": 88, "274": 88, "267": 88, "291": 88, "275": 88, "293": 88, "lazi": 88, "259": 88, "cleanup": 88, "298": 88, "smartphon": 88, "238": 88, "236": 88, "253": 88, "202": 88, "203": 88, "262": 88, "introductori": 88, "leak": 88, "254": 88, "284": 88, "287": 88, "288": 88, "278": 88, "258": 88, "234": 88, "241": 88, "242": 88, "215": 88, "281": 88, "286": 88, "infeas": 88, "217": 88, "201": 88, "207": 88, "208": 88, "codecov": 88, "296": 88, "flake8": 88, "setup": 88, "flag": 88, "made": 88, "organ": 88, "own": 88, "host": 88, "offer": 88, "readthedoc": 88, "beauti": 88, "huge": 88, "correctli": 88, "travi": 88, "simpler": 88, "laplac": 88, "acknoledg": 88, "231": 88, "232": 88, "bad": 88, "wassertein": 88, "jump": 88, "wild": 88, "state": 88, "fundament": 88, "month": 88, "until": 88, "python3stat": 88, "labeld": 88, "relev": 88, "64bit": 88, "acknowledg": 88, "past": 88, "manylinux": 88, "sep": 88, "among": 88, "rewrit": 88, "unmaintain": 88, "cudamat": 88, "keed": 88, "were": 88, "happi": 88, "stai": 88, "qualiti": 88, "stuff": 88, "markdown": 88, "pipi": 88, "renam": 88, "compliant": 88, "big": 88, "un": 88, "plug": 88, "unus": 88, "unicodedecodeerror": 88, "ascii": 88, "pytest": 88, "pep": 88, "du": 88, "jul": 88, "reloc": 88, "removimg": 88, "apr": 88, "tarnsport": 88, "paralel": 88, "jan": 88, "tweak": 88, "nov": 88, "oct": 88}, "objects": {"": [[2, 0, 0, "-", "ot"]], "ot": [[66, 0, 0, "-", "backend"], [2, 3, 1, "", "barycenter"], [2, 3, 1, "", "barycenter_unbalanced"], [2, 3, 1, "", "binary_search_circle"], [67, 0, 0, "-", "bregman"], [68, 0, 0, "-", "coot"], [69, 0, 0, "-", "da"], [70, 0, 0, "-", "datasets"], [2, 3, 1, "", "dist"], [71, 0, 0, "-", "dr"], [2, 3, 1, "", "emd"], [2, 3, 1, "", "emd2"], [2, 3, 1, "", "emd2_1d"], [2, 3, 1, "", "emd_1d"], [72, 0, 0, "-", "factored"], [2, 3, 1, "", "factored_optimal_transport"], [2, 3, 1, "", "fused_gromov_wasserstein"], [2, 3, 1, "", "fused_gromov_wasserstein2"], [73, 0, 0, "-", "gaussian"], [74, 0, 0, "-", "gromov"], [2, 3, 1, "", "gromov_barycenters"], [2, 3, 1, "", "gromov_wasserstein"], [2, 3, 1, "", "gromov_wasserstein2"], [75, 0, 0, "-", "lp"], [2, 3, 1, "", "max_sliced_wasserstein_distance"], [76, 0, 0, "-", "optim"], [77, 0, 0, "-", "partial"], [78, 0, 0, "-", "plot"], [79, 0, 0, "-", "regpath"], [2, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [2, 3, 1, "", "sinkhorn"], [2, 3, 1, "", "sinkhorn2"], [2, 3, 1, "", "sinkhorn_lpl1_mm"], [2, 3, 1, "", "sinkhorn_unbalanced"], [2, 3, 1, "", "sinkhorn_unbalanced2"], [80, 0, 0, "-", "sliced"], [2, 3, 1, "", "sliced_wasserstein_distance"], [2, 3, 1, "", "sliced_wasserstein_sphere"], [2, 3, 1, "", "sliced_wasserstein_sphere_unif"], [81, 0, 0, "-", "smooth"], [2, 3, 1, "", "solve"], [82, 0, 0, "-", "stochastic"], [2, 3, 1, "", "tic"], [2, 3, 1, "", "toc"], [2, 3, 1, "", "toq"], [83, 0, 0, "-", "unbalanced"], [2, 3, 1, "", "unif"], [84, 0, 0, "-", "utils"], [2, 3, 1, "", "wasserstein_1d"], [2, 3, 1, "", "wasserstein_circle"], [85, 0, 0, "-", "weak"], [2, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[66, 1, 1, "id0", "Backend"], [66, 1, 1, "id78", "CupyBackend"], [66, 1, 1, "id154", "JaxBackend"], [66, 1, 1, "id230", "NumpyBackend"], [66, 1, 1, "id306", "TensorflowBackend"], [66, 1, 1, "id382", "TorchBackend"], [66, 3, 1, "id458", "get_backend"], [66, 3, 1, "id459", "get_backend_list"], [66, 3, 1, "id460", "to_numpy"]], "ot.backend.Backend": [[66, 2, 1, "id1", "abs"], [66, 2, 1, "id2", "allclose"], [66, 2, 1, "id3", "any"], [66, 2, 1, "id4", "arange"], [66, 2, 1, "id5", "argmax"], [66, 2, 1, "id6", "argmin"], [66, 2, 1, "id7", "argsort"], [66, 2, 1, "id8", "array_equal"], [66, 2, 1, "id9", "assert_same_dtype_device"], [66, 2, 1, "id10", "atan2"], [66, 2, 1, "id11", "bitsize"], [66, 2, 1, "id12", "clip"], [66, 2, 1, "id13", "concatenate"], [66, 2, 1, "id14", "coo_matrix"], [66, 2, 1, "id15", "copy"], [66, 2, 1, "id16", "cumsum"], [66, 2, 1, "id17", "device_type"], [66, 2, 1, "id18", "diag"], [66, 2, 1, "id19", "dot"], [66, 2, 1, "id20", "dtype_device"], [66, 2, 1, "id21", "einsum"], [66, 2, 1, "id22", "eliminate_zeros"], [66, 2, 1, "id23", "exp"], [66, 2, 1, "id24", "eye"], [66, 2, 1, "id25", "flip"], [66, 2, 1, "id26", "floor"], [66, 2, 1, "id27", "from_numpy"], [66, 2, 1, "id28", "full"], [66, 2, 1, "id29", "inv"], [66, 2, 1, "id30", "is_floating_point"], [66, 2, 1, "id31", "isfinite"], [66, 2, 1, "id32", "isinf"], [66, 2, 1, "id33", "isnan"], [66, 2, 1, "id34", "issparse"], [66, 2, 1, "id35", "kl_div"], [66, 2, 1, "id36", "linspace"], [66, 2, 1, "id37", "log"], [66, 2, 1, "id38", "logsumexp"], [66, 2, 1, "id39", "max"], [66, 2, 1, "id40", "maximum"], [66, 2, 1, "id41", "mean"], [66, 2, 1, "id42", "meshgrid"], [66, 2, 1, "id43", "min"], [66, 2, 1, "id44", "minimum"], [66, 2, 1, "id45", "norm"], [66, 2, 1, "id46", "ones"], [66, 2, 1, "id47", "outer"], [66, 2, 1, "id48", "power"], [66, 2, 1, "id49", "prod"], [66, 2, 1, "id50", "qr"], [66, 2, 1, "id51", "rand"], [66, 2, 1, "id52", "randn"], [66, 2, 1, "id53", "repeat"], [66, 2, 1, "id54", "reshape"], [66, 2, 1, "id55", "searchsorted"], [66, 2, 1, "id56", "seed"], [66, 2, 1, "id57", "set_gradients"], [66, 2, 1, "id58", "solve"], [66, 2, 1, "id59", "sort"], [66, 2, 1, "id60", "sort2"], [66, 2, 1, "id61", "sqrt"], [66, 2, 1, "id62", "sqrtm"], [66, 2, 1, "id63", "squeeze"], [66, 2, 1, "id64", "stack"], [66, 2, 1, "id65", "std"], [66, 2, 1, "id66", "sum"], [66, 2, 1, "id67", "take_along_axis"], [66, 2, 1, "id68", "tile"], [66, 2, 1, "id69", "to_numpy"], [66, 2, 1, "id70", "tocsr"], [66, 2, 1, "id71", "todense"], [66, 2, 1, "id72", "trace"], [66, 2, 1, "id73", "transpose"], [66, 2, 1, "id74", "unique"], [66, 2, 1, "id75", "where"], [66, 2, 1, "id76", "zero_pad"], [66, 2, 1, "id77", "zeros"]], "ot.backend.CupyBackend": [[66, 2, 1, "id79", "abs"], [66, 2, 1, "id80", "allclose"], [66, 2, 1, "id81", "any"], [66, 2, 1, "id82", "arange"], [66, 2, 1, "id83", "argmax"], [66, 2, 1, "id84", "argmin"], [66, 2, 1, "id85", "argsort"], [66, 2, 1, "id86", "array_equal"], [66, 2, 1, "id87", "assert_same_dtype_device"], [66, 2, 1, "id88", "atan2"], [66, 2, 1, "id89", "bitsize"], [66, 2, 1, "id90", "clip"], [66, 2, 1, "id91", "concatenate"], [66, 2, 1, "id92", "coo_matrix"], [66, 2, 1, "id93", "copy"], [66, 2, 1, "id94", "cumsum"], [66, 2, 1, "id95", "device_type"], [66, 2, 1, "id96", "diag"], [66, 2, 1, "id97", "dot"], [66, 2, 1, "id98", "dtype_device"], [66, 2, 1, "id99", "einsum"], [66, 2, 1, "id100", "eliminate_zeros"], [66, 2, 1, "id101", "exp"], [66, 2, 1, "id102", "eye"], [66, 2, 1, "id103", "flip"], [66, 2, 1, "id104", "floor"], [66, 2, 1, "id105", "full"], [66, 2, 1, "id106", "inv"], [66, 2, 1, "id107", "is_floating_point"], [66, 2, 1, "id108", "isfinite"], [66, 2, 1, "id109", "isinf"], [66, 2, 1, "id110", "isnan"], [66, 2, 1, "id111", "issparse"], [66, 2, 1, "id112", "kl_div"], [66, 2, 1, "id113", "linspace"], [66, 2, 1, "id114", "log"], [66, 2, 1, "id115", "logsumexp"], [66, 2, 1, "id116", "max"], [66, 2, 1, "id117", "maximum"], [66, 2, 1, "id118", "mean"], [66, 2, 1, "id119", "meshgrid"], [66, 2, 1, "id120", "min"], [66, 2, 1, "id121", "minimum"], [66, 2, 1, "id122", "norm"], [66, 2, 1, "id123", "ones"], [66, 2, 1, "id124", "outer"], [66, 2, 1, "id125", "power"], [66, 2, 1, "id126", "prod"], [66, 2, 1, "id127", "qr"], [66, 2, 1, "id128", "rand"], [66, 2, 1, "id129", "randn"], [66, 2, 1, "id130", "repeat"], [66, 2, 1, "id131", "reshape"], [66, 2, 1, "id132", "searchsorted"], [66, 2, 1, "id133", "seed"], [66, 2, 1, "id134", "set_gradients"], [66, 2, 1, "id135", "solve"], [66, 2, 1, "id136", "sort"], [66, 2, 1, "id137", "sort2"], [66, 2, 1, "id138", "sqrt"], [66, 2, 1, "id139", "sqrtm"], [66, 2, 1, "id140", "squeeze"], [66, 2, 1, "id141", "stack"], [66, 2, 1, "id142", "std"], [66, 2, 1, "id143", "sum"], [66, 2, 1, "id144", "take_along_axis"], [66, 2, 1, "id145", "tile"], [66, 2, 1, "id146", "tocsr"], [66, 2, 1, "id147", "todense"], [66, 2, 1, "id148", "trace"], [66, 2, 1, "id149", "transpose"], [66, 2, 1, "id150", "unique"], [66, 2, 1, "id151", "where"], [66, 2, 1, "id152", "zero_pad"], [66, 2, 1, "id153", "zeros"]], "ot.backend.JaxBackend": [[66, 2, 1, "id155", "abs"], [66, 2, 1, "id156", "allclose"], [66, 2, 1, "id157", "any"], [66, 2, 1, "id158", "arange"], [66, 2, 1, "id159", "argmax"], [66, 2, 1, "id160", "argmin"], [66, 2, 1, "id161", "argsort"], [66, 2, 1, "id162", "array_equal"], [66, 2, 1, "id163", "assert_same_dtype_device"], [66, 2, 1, "id164", "atan2"], [66, 2, 1, "id165", "bitsize"], [66, 2, 1, "id166", "clip"], [66, 2, 1, "id167", "concatenate"], [66, 2, 1, "id168", "coo_matrix"], [66, 2, 1, "id169", "copy"], [66, 2, 1, "id170", "cumsum"], [66, 2, 1, "id171", "device_type"], [66, 2, 1, "id172", "diag"], [66, 2, 1, "id173", "dot"], [66, 2, 1, "id174", "dtype_device"], [66, 2, 1, "id175", "einsum"], [66, 2, 1, "id176", "eliminate_zeros"], [66, 2, 1, "id177", "exp"], [66, 2, 1, "id178", "eye"], [66, 2, 1, "id179", "flip"], [66, 2, 1, "id180", "floor"], [66, 2, 1, "id181", "full"], [66, 2, 1, "id182", "inv"], [66, 2, 1, "id183", "is_floating_point"], [66, 2, 1, "id184", "isfinite"], [66, 2, 1, "id185", "isinf"], [66, 2, 1, "id186", "isnan"], [66, 2, 1, "id187", "issparse"], [66, 2, 1, "id188", "kl_div"], [66, 2, 1, "id189", "linspace"], [66, 2, 1, "id190", "log"], [66, 2, 1, "id191", "logsumexp"], [66, 2, 1, "id192", "max"], [66, 2, 1, "id193", "maximum"], [66, 2, 1, "id194", "mean"], [66, 2, 1, "id195", "meshgrid"], [66, 2, 1, "id196", "min"], [66, 2, 1, "id197", "minimum"], [66, 2, 1, "id198", "norm"], [66, 2, 1, "id199", "ones"], [66, 2, 1, "id200", "outer"], [66, 2, 1, "id201", "power"], [66, 2, 1, "id202", "prod"], [66, 2, 1, "id203", "qr"], [66, 2, 1, "id204", "rand"], [66, 2, 1, "id205", "randn"], [66, 2, 1, "id206", "repeat"], [66, 2, 1, "id207", "reshape"], [66, 2, 1, "id208", "searchsorted"], [66, 2, 1, "id209", "seed"], [66, 2, 1, "id210", "set_gradients"], [66, 2, 1, "id211", "solve"], [66, 2, 1, "id212", "sort"], [66, 2, 1, "id213", "sort2"], [66, 2, 1, "id214", "sqrt"], [66, 2, 1, "id215", "sqrtm"], [66, 2, 1, "id216", "squeeze"], [66, 2, 1, "id217", "stack"], [66, 2, 1, "id218", "std"], [66, 2, 1, "id219", "sum"], [66, 2, 1, "id220", "take_along_axis"], [66, 2, 1, "id221", "tile"], [66, 2, 1, "id222", "tocsr"], [66, 2, 1, "id223", "todense"], [66, 2, 1, "id224", "trace"], [66, 2, 1, "id225", "transpose"], [66, 2, 1, "id226", "unique"], [66, 2, 1, "id227", "where"], [66, 2, 1, "id228", "zero_pad"], [66, 2, 1, "id229", "zeros"]], "ot.backend.NumpyBackend": [[66, 2, 1, "id231", "abs"], [66, 2, 1, "id232", "allclose"], [66, 2, 1, "id233", "any"], [66, 2, 1, "id234", "arange"], [66, 2, 1, "id235", "argmax"], [66, 2, 1, "id236", "argmin"], [66, 2, 1, "id237", "argsort"], [66, 2, 1, "id238", "array_equal"], [66, 2, 1, "id239", "assert_same_dtype_device"], [66, 2, 1, "id240", "atan2"], [66, 2, 1, "id241", "bitsize"], [66, 2, 1, "id242", "clip"], [66, 2, 1, "id243", "concatenate"], [66, 2, 1, "id244", "coo_matrix"], [66, 2, 1, "id245", "copy"], [66, 2, 1, "id246", "cumsum"], [66, 2, 1, "id247", "device_type"], [66, 2, 1, "id248", "diag"], [66, 2, 1, "id249", "dot"], [66, 2, 1, "id250", "dtype_device"], [66, 2, 1, "id251", "einsum"], [66, 2, 1, "id252", "eliminate_zeros"], [66, 2, 1, "id253", "exp"], [66, 2, 1, "id254", "eye"], [66, 2, 1, "id255", "flip"], [66, 2, 1, "id256", "floor"], [66, 2, 1, "id257", "full"], [66, 2, 1, "id258", "inv"], [66, 2, 1, "id259", "is_floating_point"], [66, 2, 1, "id260", "isfinite"], [66, 2, 1, "id261", "isinf"], [66, 2, 1, "id262", "isnan"], [66, 2, 1, "id263", "issparse"], [66, 2, 1, "id264", "kl_div"], [66, 2, 1, "id265", "linspace"], [66, 2, 1, "id266", "log"], [66, 2, 1, "id267", "logsumexp"], [66, 2, 1, "id268", "max"], [66, 2, 1, "id269", "maximum"], [66, 2, 1, "id270", "mean"], [66, 2, 1, "id271", "meshgrid"], [66, 2, 1, "id272", "min"], [66, 2, 1, "id273", "minimum"], [66, 2, 1, "id274", "norm"], [66, 2, 1, "id275", "ones"], [66, 2, 1, "id276", "outer"], [66, 2, 1, "id277", "power"], [66, 2, 1, "id278", "prod"], [66, 2, 1, "id279", "qr"], [66, 2, 1, "id280", "rand"], [66, 2, 1, "id281", "randn"], [66, 2, 1, "id282", "repeat"], [66, 2, 1, "id283", "reshape"], [66, 2, 1, "id284", "searchsorted"], [66, 2, 1, "id285", "seed"], [66, 2, 1, "id286", "set_gradients"], [66, 2, 1, "id287", "solve"], [66, 2, 1, "id288", "sort"], [66, 2, 1, "id289", "sort2"], [66, 2, 1, "id290", "sqrt"], [66, 2, 1, "id291", "sqrtm"], [66, 2, 1, "id292", "squeeze"], [66, 2, 1, "id293", "stack"], [66, 2, 1, "id294", "std"], [66, 2, 1, "id295", "sum"], [66, 2, 1, "id296", "take_along_axis"], [66, 2, 1, "id297", "tile"], [66, 2, 1, "id298", "tocsr"], [66, 2, 1, "id299", "todense"], [66, 2, 1, "id300", "trace"], [66, 2, 1, "id301", "transpose"], [66, 2, 1, "id302", "unique"], [66, 2, 1, "id303", "where"], [66, 2, 1, "id304", "zero_pad"], [66, 2, 1, "id305", "zeros"]], "ot.backend.TensorflowBackend": [[66, 2, 1, "id307", "abs"], [66, 2, 1, "id308", "allclose"], [66, 2, 1, "id309", "any"], [66, 2, 1, "id310", "arange"], [66, 2, 1, "id311", "argmax"], [66, 2, 1, "id312", "argmin"], [66, 2, 1, "id313", "argsort"], [66, 2, 1, "id314", "array_equal"], [66, 2, 1, "id315", "assert_same_dtype_device"], [66, 2, 1, "id316", "atan2"], [66, 2, 1, "id317", "bitsize"], [66, 2, 1, "id318", "clip"], [66, 2, 1, "id319", "concatenate"], [66, 2, 1, "id320", "coo_matrix"], [66, 2, 1, "id321", "copy"], [66, 2, 1, "id322", "cumsum"], [66, 2, 1, "id323", "device_type"], [66, 2, 1, "id324", "diag"], [66, 2, 1, "id325", "dot"], [66, 2, 1, "id326", "dtype_device"], [66, 2, 1, "id327", "einsum"], [66, 2, 1, "id328", "eliminate_zeros"], [66, 2, 1, "id329", "exp"], [66, 2, 1, "id330", "eye"], [66, 2, 1, "id331", "flip"], [66, 2, 1, "id332", "floor"], [66, 2, 1, "id333", "full"], [66, 2, 1, "id334", "inv"], [66, 2, 1, "id335", "is_floating_point"], [66, 2, 1, "id336", "isfinite"], [66, 2, 1, "id337", "isinf"], [66, 2, 1, "id338", "isnan"], [66, 2, 1, "id339", "issparse"], [66, 2, 1, "id340", "kl_div"], [66, 2, 1, "id341", "linspace"], [66, 2, 1, "id342", "log"], [66, 2, 1, "id343", "logsumexp"], [66, 2, 1, "id344", "max"], [66, 2, 1, "id345", "maximum"], [66, 2, 1, "id346", "mean"], [66, 2, 1, "id347", "meshgrid"], [66, 2, 1, "id348", "min"], [66, 2, 1, "id349", "minimum"], [66, 2, 1, "id350", "norm"], [66, 2, 1, "id351", "ones"], [66, 2, 1, "id352", "outer"], [66, 2, 1, "id353", "power"], [66, 2, 1, "id354", "prod"], [66, 2, 1, "id355", "qr"], [66, 2, 1, "id356", "rand"], [66, 2, 1, "id357", "randn"], [66, 2, 1, "id358", "repeat"], [66, 2, 1, "id359", "reshape"], [66, 2, 1, "id360", "searchsorted"], [66, 2, 1, "id361", "seed"], [66, 2, 1, "id362", "set_gradients"], [66, 2, 1, "id363", "solve"], [66, 2, 1, "id364", "sort"], [66, 2, 1, "id365", "sort2"], [66, 2, 1, "id366", "sqrt"], [66, 2, 1, "id367", "sqrtm"], [66, 2, 1, "id368", "squeeze"], [66, 2, 1, "id369", "stack"], [66, 2, 1, "id370", "std"], [66, 2, 1, "id371", "sum"], [66, 2, 1, "id372", "take_along_axis"], [66, 2, 1, "id373", "tile"], [66, 2, 1, "id374", "tocsr"], [66, 2, 1, "id375", "todense"], [66, 2, 1, "id376", "trace"], [66, 2, 1, "id377", "transpose"], [66, 2, 1, "id378", "unique"], [66, 2, 1, "id379", "where"], [66, 2, 1, "id380", "zero_pad"], [66, 2, 1, "id381", "zeros"]], "ot.backend.TorchBackend": [[66, 2, 1, "id383", "abs"], [66, 2, 1, "id384", "allclose"], [66, 2, 1, "id385", "any"], [66, 2, 1, "id386", "arange"], [66, 2, 1, "id387", "argmax"], [66, 2, 1, "id388", "argmin"], [66, 2, 1, "id389", "argsort"], [66, 2, 1, "id390", "array_equal"], [66, 2, 1, "id391", "assert_same_dtype_device"], [66, 2, 1, "id392", "atan2"], [66, 2, 1, "id393", "bitsize"], [66, 2, 1, "id394", "clip"], [66, 2, 1, "id395", "concatenate"], [66, 2, 1, "id396", "coo_matrix"], [66, 2, 1, "id397", "copy"], [66, 2, 1, "id398", "cumsum"], [66, 2, 1, "id399", "device_type"], [66, 2, 1, "id400", "diag"], [66, 2, 1, "id401", "dot"], [66, 2, 1, "id402", "dtype_device"], [66, 2, 1, "id403", "einsum"], [66, 2, 1, "id404", "eliminate_zeros"], [66, 2, 1, "id405", "exp"], [66, 2, 1, "id406", "eye"], [66, 2, 1, "id407", "flip"], [66, 2, 1, "id408", "floor"], [66, 2, 1, "id409", "full"], [66, 2, 1, "id410", "inv"], [66, 2, 1, "id411", "is_floating_point"], [66, 2, 1, "id412", "isfinite"], [66, 2, 1, "id413", "isinf"], [66, 2, 1, "id414", "isnan"], [66, 2, 1, "id415", "issparse"], [66, 2, 1, "id416", "kl_div"], [66, 2, 1, "id417", "linspace"], [66, 2, 1, "id418", "log"], [66, 2, 1, "id419", "logsumexp"], [66, 2, 1, "id420", "max"], [66, 2, 1, "id421", "maximum"], [66, 2, 1, "id422", "mean"], [66, 2, 1, "id423", "meshgrid"], [66, 2, 1, "id424", "min"], [66, 2, 1, "id425", "minimum"], [66, 2, 1, "id426", "norm"], [66, 2, 1, "id427", "ones"], [66, 2, 1, "id428", "outer"], [66, 2, 1, "id429", "power"], [66, 2, 1, "id430", "prod"], [66, 2, 1, "id431", "qr"], [66, 2, 1, "id432", "rand"], [66, 2, 1, "id433", "randn"], [66, 2, 1, "id434", "repeat"], [66, 2, 1, "id435", "reshape"], [66, 2, 1, "id436", "searchsorted"], [66, 2, 1, "id437", "seed"], [66, 2, 1, "id438", "set_gradients"], [66, 2, 1, "id439", "solve"], [66, 2, 1, "id440", "sort"], [66, 2, 1, "id441", "sort2"], [66, 2, 1, "id442", "sqrt"], [66, 2, 1, "id443", "sqrtm"], [66, 2, 1, "id444", "squeeze"], [66, 2, 1, "id445", "stack"], [66, 2, 1, "id446", "std"], [66, 2, 1, "id447", "sum"], [66, 2, 1, "id448", "take_along_axis"], [66, 2, 1, "id449", "tile"], [66, 2, 1, "id450", "tocsr"], [66, 2, 1, "id451", "todense"], [66, 2, 1, "id452", "trace"], [66, 2, 1, "id453", "transpose"], [66, 2, 1, "id454", "unique"], [66, 2, 1, "id455", "where"], [66, 2, 1, "id456", "zero_pad"], [66, 2, 1, "id457", "zeros"]], "ot.bregman": [[67, 3, 1, "id0", "barycenter"], [67, 3, 1, "id43", "barycenter_debiased"], [67, 3, 1, "id46", "barycenter_sinkhorn"], [67, 3, 1, "id49", "barycenter_stabilized"], [67, 3, 1, "id52", "convolutional_barycenter2d"], [67, 3, 1, "id56", "convolutional_barycenter2d_debiased"], [67, 3, 1, "id59", "empirical_sinkhorn"], [67, 3, 1, "id63", "empirical_sinkhorn2"], [67, 3, 1, "id67", "empirical_sinkhorn_divergence"], [67, 3, 1, "id69", "free_support_sinkhorn_barycenter"], [67, 3, 1, "id72", "geometricBar"], [67, 3, 1, "id73", "geometricMean"], [67, 3, 1, "id74", "greenkhorn"], [67, 3, 1, "id78", "jcpot_barycenter"], [67, 3, 1, "id81", "projC"], [67, 3, 1, "id82", "projR"], [67, 3, 1, "id83", "screenkhorn"], [67, 3, 1, "id87", "sinkhorn"], [67, 3, 1, "id93", "sinkhorn2"], [67, 3, 1, "id100", "sinkhorn_epsilon_scaling"], [67, 3, 1, "id105", "sinkhorn_knopp"], [67, 3, 1, "id108", "sinkhorn_log"], [67, 3, 1, "id112", "sinkhorn_stabilized"], [67, 3, 1, "id117", "unmix"]], "ot.coot": [[68, 3, 1, "id0", "co_optimal_transport"], [68, 3, 1, "id4", "co_optimal_transport2"]], "ot.da": [[69, 1, 1, "id0", "BaseTransport"], [69, 1, 1, "id40", "EMDLaplaceTransport"], [69, 1, 1, "id47", "EMDTransport"], [69, 1, 1, "id53", "JCPOTTransport"], [69, 1, 1, "id66", "LinearTransport"], [69, 1, 1, "id73", "MappingTransport"], [69, 1, 1, "id80", "SinkhornL1l2Transport"], [69, 1, 1, "id88", "SinkhornLpl1Transport"], [69, 1, 1, "id95", "SinkhornTransport"], [69, 1, 1, "id103", "UnbalancedSinkhornTransport"], [69, 3, 1, "id110", "distribution_estimation_uniform"], [69, 3, 1, "id111", "emd_laplace"], [69, 3, 1, "id115", "joint_OT_mapping_kernel"], [69, 3, 1, "id118", "joint_OT_mapping_linear"], [69, 3, 1, "id121", "sinkhorn_l1l2_gl"], [69, 3, 1, "id125", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[69, 2, 1, "id32", "fit"], [69, 2, 1, "id33", "fit_transform"], [69, 2, 1, "id34", "inverse_transform"], [69, 2, 1, "id35", "inverse_transform_labels"], [69, 2, 1, "id36", "transform"], [69, 2, 1, "id37", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[69, 4, 1, "id41", "coupling_"], [69, 2, 1, "id46", "fit"]], "ot.da.EMDTransport": [[69, 4, 1, "id48", "coupling_"], [69, 2, 1, "id52", "fit"]], "ot.da.JCPOTTransport": [[69, 4, 1, "id54", "coupling_"], [69, 2, 1, "id60", "fit"], [69, 2, 1, "id61", "inverse_transform_labels"], [69, 4, 1, "id56", "log_"], [69, 4, 1, "id55", "proportions_"], [69, 2, 1, "id62", "transform"], [69, 2, 1, "id63", "transform_labels"]], "ot.da.LinearTransport": [[69, 2, 1, "id70", "fit"], [69, 2, 1, "id71", "inverse_transform"], [69, 2, 1, "id72", "transform"]], "ot.da.MappingTransport": [[69, 4, 1, "id74", "coupling_"], [69, 2, 1, "id78", "fit"], [69, 4, 1, "id76", "log_"], [69, 4, 1, "id75", "mapping_"], [69, 2, 1, "id79", "transform"]], "ot.da.SinkhornL1l2Transport": [[69, 4, 1, "id81", "coupling_"], [69, 2, 1, "id87", "fit"], [69, 4, 1, "id82", "log_"]], "ot.da.SinkhornLpl1Transport": [[69, 4, 1, "id89", "coupling_"], [69, 2, 1, "id94", "fit"]], "ot.da.SinkhornTransport": [[69, 4, 1, "id96", "coupling_"], [69, 2, 1, "id102", "fit"], [69, 4, 1, "id97", "log_"]], "ot.da.UnbalancedSinkhornTransport": [[69, 4, 1, "id104", "coupling_"], [69, 2, 1, "id109", "fit"], [69, 4, 1, "id105", "log_"]], "ot.datasets": [[70, 3, 1, "id0", "make_1D_gauss"], [70, 3, 1, "id1", "make_2D_samples_gauss"], [70, 3, 1, "id2", "make_data_classif"]], "ot.dr": [[71, 3, 1, "id0", "dist"], [71, 3, 1, "id3", "fda"], [71, 3, 1, "id4", "logsumexp"], [71, 3, 1, "id5", "projection_robust_wasserstein"], [71, 3, 1, "id8", "sinkhorn"], [71, 3, 1, "id9", "sinkhorn_log"], [71, 3, 1, "id10", "split_classes"], [71, 3, 1, "id11", "wda"]], "ot.factored": [[72, 3, 1, "id0", "factored_optimal_transport"]], "ot.gaussian": [[73, 3, 1, "id0", "bures_wasserstein_distance"], [73, 3, 1, "id11", "bures_wasserstein_mapping"], [73, 3, 1, "id15", "empirical_bures_wasserstein_distance"], [73, 3, 1, "id18", "empirical_bures_wasserstein_mapping"]], "ot.gromov": [[74, 3, 1, "", "GW_distance_estimation"], [74, 3, 1, "", "entropic_gromov_barycenters"], [74, 3, 1, "", "entropic_gromov_wasserstein"], [74, 3, 1, "", "entropic_gromov_wasserstein2"], [74, 3, 1, "", "fgw_barycenters"], [74, 3, 1, "", "fused_gromov_wasserstein"], [74, 3, 1, "", "fused_gromov_wasserstein2"], [74, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [74, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [74, 3, 1, "", "gromov_barycenters"], [74, 3, 1, "", "gromov_wasserstein"], [74, 3, 1, "", "gromov_wasserstein2"], [74, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [74, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [74, 3, 1, "", "gwggrad"], [74, 3, 1, "", "gwloss"], [74, 3, 1, "", "init_matrix"], [74, 3, 1, "", "init_matrix_semirelaxed"], [74, 3, 1, "", "pointwise_gromov_wasserstein"], [74, 3, 1, "", "sampled_gromov_wasserstein"], [74, 3, 1, "", "semirelaxed_fused_gromov_wasserstein"], [74, 3, 1, "", "semirelaxed_fused_gromov_wasserstein2"], [74, 3, 1, "", "semirelaxed_gromov_wasserstein"], [74, 3, 1, "", "semirelaxed_gromov_wasserstein2"], [74, 3, 1, "", "solve_gromov_linesearch"], [74, 3, 1, "", "solve_semirelaxed_gromov_linesearch"], [74, 3, 1, "", "tensor_product"], [74, 3, 1, "", "update_feature_matrix"], [74, 3, 1, "", "update_kl_loss"], [74, 3, 1, "", "update_square_loss"], [74, 3, 1, "", "update_structure_matrix"]], "ot.lp": [[75, 3, 1, "", "barycenter"], [75, 3, 1, "", "binary_search_circle"], [75, 3, 1, "", "center_ot_dual"], [75, 3, 1, "", "check_number_threads"], [75, 3, 1, "id0", "emd"], [75, 3, 1, "id11", "emd2"], [75, 3, 1, "", "emd2_1d"], [75, 3, 1, "", "emd_1d"], [75, 3, 1, "", "estimate_dual_null_weights"], [75, 3, 1, "id18", "free_support_barycenter"], [75, 3, 1, "id22", "generalized_free_support_barycenter"], [75, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [75, 3, 1, "", "wasserstein_1d"], [75, 3, 1, "", "wasserstein_circle"]], "ot.optim": [[76, 3, 1, "id0", "cg"], [76, 3, 1, "id13", "gcg"], [76, 3, 1, "id17", "generic_conditional_gradient"], [76, 3, 1, "id23", "line_search_armijo"], [76, 3, 1, "id24", "semirelaxed_cg"], [76, 3, 1, "id27", "solve_1d_linesearch_quad"]], "ot.partial": [[77, 3, 1, "id0", "entropic_partial_gromov_wasserstein"], [77, 3, 1, "id17", "entropic_partial_gromov_wasserstein2"], [77, 3, 1, "id21", "entropic_partial_wasserstein"], [77, 3, 1, "id24", "gwgrad_partial"], [77, 3, 1, "id27", "gwloss_partial"], [77, 3, 1, "id28", "partial_gromov_wasserstein"], [77, 3, 1, "id31", "partial_gromov_wasserstein2"], [77, 3, 1, "id34", "partial_wasserstein"], [77, 3, 1, "id37", "partial_wasserstein2"], [77, 3, 1, "id40", "partial_wasserstein_lagrange"]], "ot.plot": [[78, 3, 1, "id0", "plot1D_mat"], [78, 3, 1, "id1", "plot2D_samples_mat"]], "ot.regpath": [[79, 3, 1, "id0", "complement_schur"], [79, 3, 1, "id12", "compute_next_removal"], [79, 3, 1, "id15", "compute_transport_plan"], [79, 3, 1, "id18", "construct_augmented_H"], [79, 3, 1, "id19", "fully_relaxed_path"], [79, 3, 1, "id21", "ot_next_gamma"], [79, 3, 1, "id23", "recast_ot_as_lasso"], [79, 3, 1, "id25", "recast_semi_relaxed_as_lasso"], [79, 3, 1, "id26", "regularization_path"], [79, 3, 1, "id28", "semi_relaxed_next_gamma"], [79, 3, 1, "id30", "semi_relaxed_path"]], "ot.sliced": [[80, 3, 1, "id0", "get_random_projections"], [80, 3, 1, "id5", "max_sliced_wasserstein_distance"], [80, 3, 1, "id7", "sliced_wasserstein_distance"], [80, 3, 1, "id9", "sliced_wasserstein_sphere"], [80, 3, 1, "id11", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[81, 1, 1, "id0", "NegEntropy"], [81, 1, 1, "id8", "Regularization"], [81, 1, 1, "id12", "SquaredL2"], [81, 3, 1, "id16", "dual_obj_grad"], [81, 3, 1, "id17", "get_plan_from_dual"], [81, 3, 1, "id18", "get_plan_from_semi_dual"], [81, 3, 1, "id19", "projection_simplex"], [81, 3, 1, "id20", "semi_dual_obj_grad"], [81, 3, 1, "id21", "smooth_ot_dual"], [81, 3, 1, "id25", "smooth_ot_semi_dual"], [81, 3, 1, "id29", "solve_dual"], [81, 3, 1, "id30", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[81, 2, 1, "id5", "Omega"], [81, 2, 1, "id6", "delta_Omega"], [81, 2, 1, "id7", "max_Omega"]], "ot.smooth.Regularization": [[81, 2, 1, "id9", "Omega"], [81, 2, 1, "id10", "delta_Omega"], [81, 2, 1, "id11", "max_Omega"]], "ot.smooth.SquaredL2": [[81, 2, 1, "id13", "Omega"], [81, 2, 1, "id14", "delta_Omega"], [81, 2, 1, "id15", "max_Omega"]], "ot.stochastic": [[82, 3, 1, "id0", "averaged_sgd_entropic_transport"], [82, 3, 1, "id15", "batch_grad_dual"], [82, 3, 1, "id18", "c_transform_entropic"], [82, 3, 1, "id21", "coordinate_grad_semi_dual"], [82, 3, 1, "id24", "loss_dual_entropic"], [82, 3, 1, "id26", "loss_dual_quadratic"], [82, 3, 1, "id28", "plan_dual_entropic"], [82, 3, 1, "id30", "plan_dual_quadratic"], [82, 3, 1, "id32", "sag_entropic_transport"], [82, 3, 1, "id35", "sgd_entropic_regularization"], [82, 3, 1, "id37", "solve_dual_entropic"], [82, 3, 1, "id39", "solve_semi_dual_entropic"]], "ot.unbalanced": [[83, 3, 1, "id0", "barycenter_unbalanced"], [83, 3, 1, "id25", "barycenter_unbalanced_sinkhorn"], [83, 3, 1, "id29", "barycenter_unbalanced_stabilized"], [83, 3, 1, "id33", "lbfgsb_unbalanced"], [83, 3, 1, "id35", "mm_unbalanced"], [83, 3, 1, "id38", "mm_unbalanced2"], [83, 3, 1, "id40", "sinkhorn_knopp_unbalanced"], [83, 3, 1, "id44", "sinkhorn_stabilized_unbalanced"], [83, 3, 1, "id48", "sinkhorn_unbalanced"], [83, 3, 1, "id54", "sinkhorn_unbalanced2"]], "ot.utils": [[84, 1, 1, "id0", "BaseEstimator"], [84, 1, 1, "", "OTResult"], [84, 6, 1, "", "UndefinedParameter"], [84, 3, 1, "id3", "check_params"], [84, 3, 1, "id4", "check_random_state"], [84, 3, 1, "id5", "clean_zeros"], [84, 3, 1, "id6", "cost_normalization"], [84, 1, 1, "id7", "deprecated"], [84, 3, 1, "id8", "dist"], [84, 3, 1, "id9", "dist0"], [84, 3, 1, "id10", "dots"], [84, 3, 1, "id11", "euclidean_distances"], [84, 3, 1, "id12", "get_coordinate_circle"], [84, 3, 1, "id13", "kernel"], [84, 3, 1, "id14", "label_normalization"], [84, 3, 1, "id15", "laplacian"], [84, 3, 1, "id16", "list_to_array"], [84, 3, 1, "id17", "parmap"], [84, 3, 1, "id18", "proj_simplex"], [84, 3, 1, "id19", "tic"], [84, 3, 1, "id20", "toc"], [84, 3, 1, "id21", "toq"], [84, 3, 1, "id22", "unif"]], "ot.utils.BaseEstimator": [[84, 2, 1, "id1", "get_params"], [84, 2, 1, "id2", "set_params"]], "ot.utils.OTResult": [[84, 5, 1, "", "a_to_b"], [84, 5, 1, "", "b_to_a"], [84, 5, 1, "", "citation"], [84, 5, 1, "", "lazy_plan"], [84, 5, 1, "", "marginal_a"], [84, 5, 1, "", "marginal_b"], [84, 5, 1, "", "marginals"], [84, 5, 1, "", "plan"], [84, 5, 1, "", "potential_a"], [84, 5, 1, "", "potential_b"], [84, 5, 1, "", "potentials"], [84, 5, 1, "", "sparse_plan"], [84, 5, 1, "", "status"], [84, 5, 1, "", "value"], [84, 5, 1, "", "value_linear"]], "ot.weak": [[85, 3, 1, "id0", "weak_optimal_transport"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"code": [0, 86], "conduct": [0, 86], "our": 0, "pledg": 0, "standard": 0, "respons": 0, "scope": 0, "enforc": 0, "attribut": [0, 34], "contribut": [1, 86], "pot": [1, 37, 43, 47, 86, 87], "how": [1, 87], "pull": 1, "request": 1, "checklist": 1, "file": 1, "bug": 1, "new": [1, 21, 88], "contributor": [1, 65], "tip": 1, "document": 1, "api": 2, "modul": [2, 87], "main": 2, "ot": [2, 3, 7, 20, 21, 22, 23, 24, 25, 26, 27, 37, 40, 41, 47, 49, 51, 52, 53, 54, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "function": [2, 32, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "refer": [2, 80, 86, 87], "dual": [3, 7, 45, 47], "solver": [3, 54, 87], "entrop": [3, 7, 13, 54, 63, 87], "quadrat": [3, 87], "regular": [3, 13, 24, 37, 47, 54, 62, 63, 87], "pytorch": [3, 4, 5, 7, 8, 9, 10], "data": [3, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 33, 39, 40, 41, 42, 43, 44, 48, 49, 50, 52, 53, 54, 56, 57, 59, 60, 62, 63], "gener": [3, 4, 6, 7, 8, 10, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 34, 35, 39, 40, 41, 42, 44, 48, 49, 50, 52, 54, 56, 57, 59, 60, 62, 63, 87], "plot": [3, 6, 7, 8, 10, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 39, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 78], "convert": [3, 7], "torch": [3, 7], "tensor": [3, 7], "estim": [3, 4, 7, 8, 25, 26, 27, 34, 42, 87], "variabl": [3, 7, 47], "teh": 3, "plan": [3, 7, 32, 47, 61], "optim": [4, 8, 20, 22, 23, 24, 28, 38, 40, 41, 42, 44, 47, 48, 49, 50, 51, 59, 62, 63, 76, 86, 87], "gromov": [4, 31, 32, 33, 34, 35, 37, 61, 74, 87], "wasserstein": [4, 5, 6, 8, 9, 10, 12, 13, 14, 16, 18, 31, 32, 33, 34, 35, 37, 39, 47, 53, 56, 57, 60, 61, 87], "distanc": [4, 8, 22, 28, 31, 32, 37, 42, 52, 53, 56, 61, 87], "graph": [4, 30, 34, 35], "gw": [4, 31, 32, 87], "w": 4, "r": 4, "t": 4, "weight": [4, 8], "templat": 4, "structur": [4, 31], "commun": 4, "cluster": [4, 34, 35], "uniform": [4, 51, 53], "compress": 4, "slice": [5, 6, 37, 56, 57, 80], "barycent": [5, 9, 12, 13, 14, 15, 16, 17, 18, 30, 33, 37, 60, 87], "gradient": [5, 6], "flow": [5, 9], "anim": [5, 6, 10, 18, 62], "trajectori": [5, 6, 10], "along": [5, 6, 10], "iter": [5, 6, 10], "comput": [5, 11, 12, 14, 15, 16, 18, 19, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 45, 46, 47, 50, 52, 55, 58, 60, 61, 62, 63, 64, 87], "descent": [5, 6], "spheric": [6, 57], "embed": [6, 34], "sphere": 6, "sampl": [6, 7, 10, 20, 22, 23, 24, 25, 26, 28, 32, 42, 51, 61], "continu": [7, 45], "deep": 7, "densiti": 7, "arget": 7, "given": 7, "sourc": [7, 8, 20, 22, 23, 24, 28], "unmix": 8, "model": [8, 10, 34, 35], "wrt": 8, "converg": 8, "object": 8, "plote": 8, "reweight": 8, "distribut": [8, 16, 17, 22, 27, 32, 42, 44, 48, 49, 50, 56, 57, 59, 60, 61, 87], "1d": [9, 12, 13, 15, 48, 52, 59, 60], "2": [10, 20, 22, 23, 24, 28, 34, 35, 51, 57, 88], "minibatch": 10, "gan": 10, "train": 10, "visual": [10, 14, 15, 31, 33, 34, 35, 42], "time": [11, 19, 29, 36, 46, 47, 55, 58, 64], "demo": [12, 15, 18, 60], "exact": [13, 40, 41, 63], "lp": [13, 75], "v": [13, 28, 40], "gaussian": [13, 15, 32, 61, 73], "stair": 13, "dirac": 13, "final": 13, "figur": 13, "convolut": [14, 87], "exampl": [14, 32, 33, 35, 37, 45, 49, 61, 63, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87], "prepar": [14, 33], "debias": 15, "sinkhorn": [15, 17, 23, 45, 47, 48, 49, 50, 52, 59, 87], "2d": [15, 16, 17, 32, 39, 50, 56, 61, 63], "imag": [15, 21, 25, 27], "free": [16, 17, 87], "support": [16, 17, 86, 87], "paramet": [17, 47], "inspect": 17, "interpol": [17, 60], "empir": [17, 22, 50], "project": [18, 39, 56, 57], "match": [18, 35], "rotat": 18, "domain": [20, 22, 23, 24, 26, 27, 37, 87], "adapt": [20, 21, 22, 23, 24, 25, 26, 27, 37, 87], "instanti": [20, 21, 22, 23, 24, 26], "differ": [20, 21, 22, 24, 26, 28, 51, 52, 53, 56, 57], "transport": [20, 21, 22, 23, 24, 25, 26, 28, 31, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 59, 62, 63, 86, 87], "algorithm": [20, 21, 22, 23, 24, 26, 45, 47], "fit": [20, 21, 22, 23, 24, 26], "them": [20, 21, 22, 23, 24, 26, 32, 61], "fig": [20, 22, 23, 24, 28], "1": [20, 22, 23, 24, 28, 34, 51, 88], "target": [20, 22, 23, 24, 28], "coupl": [20, 22, 23, 24, 28, 41], "color": [21, 27], "origin": [21, 27], "scatter": 21, "matrix": [22, 28, 31, 44, 45, 47, 48, 49, 59], "pairwis": [22, 28], "method": [22, 28, 32], "3": [22, 28, 34, 35, 88], "multi": 23, "shift": 23, "all": 23, "jcpot": 23, "run": 23, "oracl": 23, "known": 23, "proport": 23, "laplacian": 24, "linear": [25, 34], "map": [25, 26, 27, 47, 87], "load": 25, "transform": [25, 27], "pixel": 27, "transfer": 27, "valu": 27, "otda": [28, 87], "unsupervis": 28, "semi": [28, 35, 45, 62], "supervis": 28, "set": 28, "onto": 28, "us": [30, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87], "fgw": [30, 31, 87], "fuse": [31, 34, 35, 37], "creat": 31, "matric": [31, 45, 51], "across": 31, "featur": [31, 34, 35, 88], "two": [32, 35, 61], "3d": [32, 61], "kernel": 32, "normal": 32, "displai": 32, "scalabl": 32, "stochast": [32, 34, 35, 45, 82], "ani": 32, "loss": [32, 44, 47, 48, 49, 52, 59], "smacof": 33, "md": 33, "dictionari": 34, "learn": [34, 42], "dataset": [34, 51, 70], "compos": 34, "follow": [34, 35], "block": [34, 35], "from": 34, "atom": 34, "space": 34, "endow": 34, "node": [34, 35], "relax": [35, 62], "diverg": 35, "add": 35, "galleri": 37, "backend": [37, 66, 87], "other": [37, 87], "problem": [37, 45, 47], "unbalanc": [37, 59, 60, 62, 63, 83, 87], "partial": [37, 51, 61, 77, 87], "row": [38, 42], "column": [38, 42], "align": [38, 42], "co": [38, 42], "discrimin": [39, 87], "analysi": [39, 87], "fisher": 39, "weak": [40, 85], "an": [40, 41, 87], "solut": [40, 41], "factor": [41, 72], "margin": 42, "coot": [42, 68], "respect": 42, "logo": 43, "toolbox": [43, 47, 86], "clear": 43, "background": 43, "dark": 43, "screen": 44, "screenkhorn": [44, 67], "solv": [44, 47, 48, 49, 54, 59, 87], "discret": 45, "case": [45, 87], "compar": [45, 53], "result": [45, 63], "introduct": 47, "python": [47, 86], "instal": [47, 86], "import": 47, "get": 47, "help": 47, "first": [47, 88], "bakeri": 47, "citi": 47, "cost": 47, "emd": [47, 48, 49, 50, 52, 54, 87], "vizual": 47, "vari": 47, "smooth": [49, 81], "between": [50, 53, 87], "emprir": 50, "gournd": 51, "metric": 51, "circl": [51, 53], "euclidean": 53, "von": 53, "mise": 53, "kappa": 53, "frobeniu": 54, "norm": 54, "seed": [56, 57], "number": [56, 57], "": 57, "mass": 59, "barycentr": 60, "one": 61, "path": 62, "l2": [62, 63], "penal": 62, "fulli": 62, "regpath": [62, 79], "uot": [62, 63], "kl": 63, "creator": 65, "maintain": 65, "acknowledg": [65, 86], "perform": 66, "class": [66, 69, 81, 84, 87], "bregman": [67, 87], "barycenter_debias": 67, "convolutional_barycenter2d": [67, 87], "convolutional_barycenter2d_debias": 67, "empirical_sinkhorn": 67, "free_support_sinkhorn_barycent": 67, "depend": [67, 86], "co_optimal_transport": 68, "co_optimal_transport2": 68, "da": 69, "basetransport": 69, "emdlaplacetransport": 69, "emdtransport": 69, "jcpottransport": 69, "lineartransport": 69, "mappingtransport": 69, "sinkhornl1l2transport": 69, "sinkhornlpl1transport": 69, "sinkhorntransport": 69, "make_1d_gauss": 70, "make_2d_samples_gauss": 70, "make_data_classif": 70, "dr": 71, "fda": 71, "wda": [71, 87], "empirical_bures_wasserstein_map": 73, "free_support_barycent": 75, "generalized_free_support_barycent": 75, "cg": 76, "gcg": 76, "entropic_partial_gromov_wasserstein": 77, "entropic_partial_wasserstein": 77, "partial_gromov_wasserstein": 77, "partial_wasserstein": 77, "plot1d_mat": 78, "plot2d_samples_mat": 78, "compute_transport_plan": 79, "regularization_path": 79, "smooth_ot_du": 81, "loss_dual_entrop": 82, "loss_dual_quadrat": 82, "plan_dual_entrop": 82, "plan_dual_quadrat": 82, "solve_dual_entrop": 82, "solve_semi_dual_entrop": 82, "mm_unbalanc": 83, "util": 84, "dist0": 84, "proj_simplex": 84, "baseestim": 84, "except": 84, "content": 86, "cite": 86, "pip": 86, "anaconda": 86, "conda": 86, "forg": 86, "post": 86, "check": 86, "short": 86, "notebook": 86, "indic": 86, "tabl": 86, "quick": 87, "start": 87, "guid": 87, "why": 87, "when": 87, "emd2": 87, "special": 87, "sinkhorn2": 87, "group": 87, "lasso": 87, "fix": 87, "mong": 87, "applic": 87, "g": 87, "multipl": 87, "cpu": 87, "gpu": 87, "work": 87, "acceler": 87, "list": 87, "compat": 87, "faq": 87, "releas": 88, "0": 88, "8": 88, "3dev": 88, "close": 88, "issu": 88, "7": 88, "6": 88, "5": 88, "deprec": 88, "4": 88, "v0": 88, "11": 88, "10": 88, "9": 88, "pre": 88}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Code of Conduct": [[0, "code-of-conduct"]], "Our Pledge": [[0, "our-pledge"]], "Our Standards": [[0, "our-standards"]], "Our Responsibilities": [[0, "our-responsibilities"]], "Scope": [[0, "scope"]], "Enforcement": [[0, "enforcement"]], "Attribution": [[0, "attribution"]], "Contributing to POT": [[1, "contributing-to-pot"]], "How to contribute": [[1, "how-to-contribute"]], "Pull Request Checklist": [[1, "pull-request-checklist"]], "Filing bugs": [[1, "filing-bugs"]], "New contributor tips": [[1, "new-contributor-tips"]], "Documentation": [[1, "documentation"]], "API and modules": [[2, "api-and-modules"]], "Main ot functions": [[2, "main-ot-functions"]], "References:": [[2, "references"], [80, "references"], [80, "id12"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[3, "dual-ot-solvers-for-entropic-and-quadratic-regularized-ot-with-pytorch"]], "Data generation": [[3, "data-generation"], [6, "data-generation"], [7, "data-generation"], [10, "data-generation"]], "Plot data": [[3, "plot-data"], [6, "plot-data"], [7, "plot-data"], [8, "plot-data"], [10, "plot-data"], [25, "plot-data"], [26, "plot-data"], [30, "plot-data"], [31, "plot-data"], [39, "plot-data"], [50, "plot-data"], [52, "plot-data"], [53, "plot-data"], [56, "plot-data"], [57, "plot-data"], [60, "plot-data"], [62, "plot-data"]], "Convert data to torch tensors": [[3, "convert-data-to-torch-tensors"], [7, "convert-data-to-torch-tensors"]], "Estimating dual variables for entropic OT": [[3, "estimating-dual-variables-for-entropic-ot"]], "Plot teh estimated entropic OT plan": [[3, "plot-teh-estimated-entropic-ot-plan"]], "Estimating dual variables for quadratic OT": [[3, "estimating-dual-variables-for-quadratic-ot"]], "Plot the estimated quadratic OT plan": [[3, "plot-the-estimated-quadratic-ot-plan"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[4, "optimizing-the-gromov-wasserstein-distance-with-pytorch"]], "Graph generation": [[4, "graph-generation"]], "Optimizing GW w.r.t. the weights on a template structure": [[4, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Community clustering with uniform and estimated weights": [[4, "community-clustering-with-uniform-and-estimated-weights"]], "Graph compression with GW": [[4, "graph-compression-with-gw"]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[5, "sliced-wasserstein-barycenter-and-gradient-flow-with-pytorch"]], "Sliced Wasserstein gradient flow with Pytorch": [[5, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Animate trajectories of the gradient flow along iteration": [[5, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Compute the Sliced Wasserstein Barycenter": [[5, "compute-the-sliced-wasserstein-barycenter"]], "Animate trajectories of the barycenter along gradient descent": [[5, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[6, "spherical-sliced-wasserstein-embedding-on-sphere"]], "Gradient descent": [[6, "gradient-descent"]], "Plot trajectories of generated samples along iterations": [[6, "plot-trajectories-of-generated-samples-along-iterations"], [10, "plot-trajectories-of-generated-samples-along-iterations"]], "Animate trajectories of generated samples along iteration": [[6, "animate-trajectories-of-generated-samples-along-iteration"], [10, "animate-trajectories-of-generated-samples-along-iteration"]], "Continuous OT plan estimation with Pytorch": [[7, "continuous-ot-plan-estimation-with-pytorch"]], "Estimating deep dual variables for entropic OT": [[7, "estimating-deep-dual-variables-for-entropic-ot"]], "Plot the density on arget for a given source sample": [[7, "plot-the-density-on-arget-for-a-given-source-sample"]], "Wasserstein unmixing with PyTorch": [[8, "wasserstein-unmixing-with-pytorch"]], "Generate data": [[8, "generate-data"], [12, "generate-data"], [16, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [27, "generate-data"], [28, "generate-data"], [30, "generate-data"], [31, "generate-data"], [39, "generate-data"], [42, "generate-data"], [44, "generate-data"], [48, "generate-data"], [49, "generate-data"], [50, "generate-data"], [52, "generate-data"], [54, "generate-data"], [56, "generate-data"], [57, "generate-data"], [59, "generate-data"], [60, "generate-data"], [62, "generate-data"], [63, "generate-data"]], "Optimization of the model wrt the Wasserstein distance": [[8, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Estimated weights and convergence of the objective": [[8, "estimated-weights-and-convergence-of-the-objective"]], "Ploting the reweighted source distribution": [[8, "ploting-the-reweighted-source-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[9, "wasserstein-1d-flow-and-barycenter-with-pytorch"]], "Wasserstein barycenter": [[9, "wasserstein-barycenter"]], "Wasserstein 2 Minibatch GAN with PyTorch": [[10, "wasserstein-2-minibatch-gan-with-pytorch"]], "Generator Model": [[10, "generator-model"]], "Training the model": [[10, "training-the-model"]], "Generate and visualize data": [[10, "generate-and-visualize-data"]], "Computation times": [[11, "computation-times"], [19, "computation-times"], [29, "computation-times"], [36, "computation-times"], [46, "computation-times"], [55, "computation-times"], [58, "computation-times"], [64, "computation-times"]], "1D Wasserstein barycenter demo": [[12, "d-wasserstein-barycenter-demo"]], "Barycenter computation": [[12, "barycenter-computation"], [30, "barycenter-computation"], [33, "barycenter-computation"], [60, "barycenter-computation"]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[13, "d-wasserstein-barycenter-exact-lp-vs-entropic-regularization"]], "Gaussian Data": [[13, "gaussian-data"]], "Stair Data": [[13, "stair-data"]], "Dirac Data": [[13, "dirac-data"]], "Final figure": [[13, "final-figure"]], "Convolutional Wasserstein Barycenter example": [[14, "convolutional-wasserstein-barycenter-example"]], "Data preparation": [[14, "data-preparation"], [33, "data-preparation"]], "Barycenter computation and visualization": [[14, "barycenter-computation-and-visualization"], [15, "barycenter-computation-and-visualization"]], "Debiased Sinkhorn barycenter demo": [[15, "debiased-sinkhorn-barycenter-demo"]], "Debiased barycenter of 1D Gaussians": [[15, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[15, "debiased-barycenter-of-2d-images"]], "2D free support Wasserstein barycenters of distributions": [[16, "d-free-support-wasserstein-barycenters-of-distributions"]], "Compute free support Wasserstein barycenter": [[16, "compute-free-support-wasserstein-barycenter"]], "Plot the Wasserstein barycenter": [[16, "plot-the-wasserstein-barycenter"], [16, "id1"]], "2D free support Sinkhorn barycenters of distributions": [[17, "d-free-support-sinkhorn-barycenters-of-distributions"]], "General Parameters": [[17, "general-parameters"]], "Generate Data": [[17, "generate-data"]], "Inspect generated distributions": [[17, "inspect-generated-distributions"]], "Interpolating Empirical Distributions": [[17, "interpolating-empirical-distributions"]], "Generalized Wasserstein Barycenter Demo": [[18, "generalized-wasserstein-barycenter-demo"]], "Generate and plot data": [[18, "generate-and-plot-data"]], "Barycenter computation and plot": [[18, "barycenter-computation-and-plot"]], "Plotting projection matches": [[18, "plotting-projection-matches"]], "Rotation animation": [[18, "rotation-animation"]], "OT for domain adaptation": [[20, "ot-for-domain-adaptation"]], "Instantiate the different transport algorithms and fit them": [[20, "instantiate-the-different-transport-algorithms-and-fit-them"], [21, "instantiate-the-different-transport-algorithms-and-fit-them"], [22, "instantiate-the-different-transport-algorithms-and-fit-them"], [24, "instantiate-the-different-transport-algorithms-and-fit-them"], [26, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Fig 1 : plots source and target samples": [[20, "fig-1-plots-source-and-target-samples"], [23, "fig-1-plots-source-and-target-samples"], [24, "fig-1-plots-source-and-target-samples"]], "Fig 2 : plot optimal couplings and transported samples": [[20, "fig-2-plot-optimal-couplings-and-transported-samples"], [23, "fig-2-plot-optimal-couplings-and-transported-samples"], [24, "fig-2-plot-optimal-couplings-and-transported-samples"]], "OT for image color adaptation": [[21, "ot-for-image-color-adaptation"]], "Plot original image": [[21, "plot-original-image"]], "Scatter plot of colors": [[21, "scatter-plot-of-colors"]], "Plot new images": [[21, "plot-new-images"]], "OT for domain adaptation on empirical distributions": [[22, "ot-for-domain-adaptation-on-empirical-distributions"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[22, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [28, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plots optimal couplings for the different methods": [[22, "fig-2-plots-optimal-couplings-for-the-different-methods"], [28, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[22, "fig-3-plot-transported-samples"], [28, "fig-3-plot-transported-samples"]], "OT for multi-source target shift": [[23, "ot-for-multi-source-target-shift"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[23, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate JCPOT adaptation algorithm and fit it": [[23, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Run oracle transport algorithm with known proportions": [[23, "run-oracle-transport-algorithm-with-known-proportions"]], "OT with Laplacian regularization for domain adaptation": [[24, "ot-with-laplacian-regularization-for-domain-adaptation"]], "Linear OT mapping estimation": [[25, "linear-ot-mapping-estimation"]], "Estimate linear mapping and transport": [[25, "estimate-linear-mapping-and-transport"]], "Plot transported samples": [[25, "plot-transported-samples"], [26, "plot-transported-samples"]], "Load image data": [[25, "load-image-data"]], "Estimate mapping and adapt": [[25, "estimate-mapping-and-adapt"]], "Plot transformed images": [[25, "plot-transformed-images"], [27, "plot-transformed-images"]], "OT mapping estimation for domain adaptation": [[26, "ot-mapping-estimation-for-domain-adaptation"]], "OT for image color adaptation with mapping estimation": [[27, "ot-for-image-color-adaptation-with-mapping-estimation"]], "Domain adaptation for pixel distribution transfer": [[27, "domain-adaptation-for-pixel-distribution-transfer"]], "Plot original images": [[27, "plot-original-images"]], "Plot pixel values distribution": [[27, "plot-pixel-values-distribution"]], "OTDA unsupervised vs semi-supervised setting": [[28, "otda-unsupervised-vs-semi-supervised-setting"]], "Transport source samples onto target samples": [[28, "transport-source-samples-onto-target-samples"]], "Plot graphs barycenter using FGW": [[30, "plot-graphs-barycenter-using-fgw"]], "Plot Barycenter": [[30, "plot-barycenter"]], "Plot Fused-gromov-Wasserstein": [[31, "plot-fused-gromov-wasserstein"]], "Create structure matrices and across-feature distance matrix": [[31, "create-structure-matrices-and-across-feature-distance-matrix"]], "Plot matrices": [[31, "plot-matrices"]], "Compute FGW/GW": [[31, "compute-fgw-gw"]], "Visualize transport matrices": [[31, "visualize-transport-matrices"]], "Gromov-Wasserstein example": [[32, "gromov-wasserstein-example"]], "Sample two Gaussian distributions (2D and 3D)": [[32, "sample-two-gaussian-distributions-2d-and-3d"]], "Plotting the distributions": [[32, "plotting-the-distributions"]], "Compute distance kernels, normalize them and then display": [[32, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute Gromov-Wasserstein plans and distance": [[32, "compute-gromov-wasserstein-plans-and-distance"]], "Compute GW with a scalable stochastic method with any loss function": [[32, "compute-gw-with-a-scalable-stochastic-method-with-any-loss-function"]], "Gromov-Wasserstein Barycenter example": [[33, "gromov-wasserstein-barycenter-example"]], "Smacof MDS": [[33, "smacof-mds"]], "Visualization": [[33, "visualization"]], "(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[34, "fused-gromov-wasserstein-linear-dictionary-learning"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[34, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Estimate the gromov-wasserstein dictionary from the dataset": [[34, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Visualization of the estimated dictionary atoms": [[34, "visualization-of-the-estimated-dictionary-atoms"], [34, "id1"]], "Visualization of the embedding space": [[34, "visualization-of-the-embedding-space"], [34, "id2"]], "Endow the dataset with node features": [[34, "endow-the-dataset-with-node-features"]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[34, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Semi-relaxed (Fused) Gromov-Wasserstein example": [[35, "semi-relaxed-fused-gromov-wasserstein-example"]], "Generate two graphs following Stochastic Block models of 2 and 3 clusters.": [[35, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"]], "Compute their semi-relaxed Gromov-Wasserstein divergences": [[35, "compute-their-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the semi-relaxed Gromov-Wasserstein matchings": [[35, "visualization-of-the-semi-relaxed-gromov-wasserstein-matchings"]], "Add node features": [[35, "add-node-features"]], "Compute their semi-relaxed Fused Gromov-Wasserstein divergences": [[35, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"]], "Visualization of the semi-relaxed Fused Gromov-Wasserstein matchings": [[35, "visualization-of-the-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Examples gallery": [[37, "examples-gallery"]], "OT and regularized OT": [[37, "ot-and-regularized-ot"]], "POT backend examples": [[37, "pot-backend-examples"]], "Wasserstein barycenters": [[37, "wasserstein-barycenters"]], "Domain adaptation examples": [[37, "domain-adaptation-examples"]], "Gromov and Fused-Gromov-Wasserstein": [[37, "gromov-and-fused-gromov-wasserstein"]], "Other OT problems": [[37, "other-ot-problems"]], "Sliced Wasserstein Distance": [[37, "sliced-wasserstein-distance"]], "Unbalanced and Partial OT": [[37, "unbalanced-and-partial-ot"]], "Row and column alignments with CO-Optimal Transport": [[38, "row-and-column-alignments-with-co-optimal-transport"]], "Wasserstein Discriminant Analysis": [[39, "wasserstein-discriminant-analysis"], [87, "wasserstein-discriminant-analysis"]], "Compute Fisher Discriminant Analysis": [[39, "compute-fisher-discriminant-analysis"]], "Compute Wasserstein Discriminant Analysis": [[39, "compute-wasserstein-discriminant-analysis"]], "Plot 2D projections": [[39, "plot-2d-projections"]], "Weak Optimal Transport VS exact Optimal Transport": [[40, "weak-optimal-transport-vs-exact-optimal-transport"]], "Generate data an plot it": [[40, "generate-data-an-plot-it"], [41, "generate-data-an-plot-it"]], "Compute Weak OT and exact OT solutions": [[40, "compute-weak-ot-and-exact-ot-solutions"]], "Plot weak OT and exact OT solutions": [[40, "plot-weak-ot-and-exact-ot-solutions"]], "Optimal transport with factored couplings": [[41, "optimal-transport-with-factored-couplings"]], "Compute Factore OT and exact OT solutions": [[41, "compute-factore-ot-and-exact-ot-solutions"]], "Plot factored OT and exact OT solutions": [[41, "plot-factored-ot-and-exact-ot-solutions"]], "Learning sample marginal distribution with CO-Optimal Transport": [[42, "learning-sample-marginal-distribution-with-co-optimal-transport"]], "Optimize the COOT distance with respect to the sample marginal distribution": [[42, "optimize-the-coot-distance-with-respect-to-the-sample-marginal-distribution"]], "Visualizing the row and column alignments with the estimated sample marginal distribution": [[42, "visualizing-the-row-and-column-alignments-with-the-estimated-sample-marginal-distribution"]], "Logo of the POT toolbox": [[43, "logo-of-the-pot-toolbox"]], "Data for logo": [[43, "data-for-logo"]], "Plot the logo (clear background)": [[43, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[43, "plot-the-logo-dark-background"]], "Screened optimal transport (Screenkhorn)": [[44, "screened-optimal-transport-screenkhorn"]], "Plot distributions and loss matrix": [[44, "plot-distributions-and-loss-matrix"], [48, "plot-distributions-and-loss-matrix"], [49, "plot-distributions-and-loss-matrix"], [59, "plot-distributions-and-loss-matrix"]], "Solve Screenkhorn": [[44, "solve-screenkhorn"]], "Stochastic examples": [[45, "stochastic-examples"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[45, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Discrete case": [[45, "discrete-case"]], "Semi-Continuous Case": [[45, "semi-continuous-case"]], "Plot Transportation Matrices": [[45, "plot-transportation-matrices"], [45, "id2"]], "Compute the Transportation Matrix for the Dual Problem": [[45, "compute-the-transportation-matrix-for-the-dual-problem"]], "Semi-continuous case": [[45, "id1"]], "Compare the results with the Sinkhorn algorithm": [[45, "compare-the-results-with-the-sinkhorn-algorithm"]], "Introduction to Optimal Transport with Python": [[47, "introduction-to-optimal-transport-with-python"]], "POT Python Optimal Transport Toolbox": [[47, "pot-python-optimal-transport-toolbox"]], "POT installation": [[47, "pot-installation"]], "Import the toolbox": [[47, "import-the-toolbox"]], "Getting help": [[47, "getting-help"]], "First OT Problem": [[47, "first-ot-problem"]], "Plotting bakeries in the city": [[47, "plotting-bakeries-in-the-city"]], "Cost matrix": [[47, "cost-matrix"]], "Solving the OT problem with ot.emd": [[47, "solving-the-ot-problem-with-ot-emd"]], "Transportation plan vizualization": [[47, "transportation-plan-vizualization"]], "OT loss and dual variables": [[47, "ot-loss-and-dual-variables"]], "Regularized OT with Sinkhorn": [[47, "regularized-ot-with-sinkhorn"]], "Algorithm": [[47, "algorithm"]], "Plot the matrix and the map": [[47, "plot-the-matrix-and-the-map"]], "Varying the regularization parameter in Sinkhorn": [[47, "varying-the-regularization-parameter-in-sinkhorn"]], "Wasserstein loss and computational time": [[47, "wasserstein-loss-and-computational-time"]], "Optimal Transport for 1D distributions": [[48, "optimal-transport-for-1d-distributions"]], "Solve EMD": [[48, "solve-emd"], [49, "solve-emd"], [54, "solve-emd"]], "Solve Sinkhorn": [[48, "solve-sinkhorn"], [49, "solve-sinkhorn"]], "Smooth optimal transport example": [[49, "smooth-optimal-transport-example"]], "Solve Smooth OT": [[49, "solve-smooth-ot"]], "Optimal Transport between 2D empirical distributions": [[50, "optimal-transport-between-2d-empirical-distributions"]], "Compute EMD": [[50, "compute-emd"]], "Compute Sinkhorn": [[50, "compute-sinkhorn"]], "Emprirical Sinkhorn": [[50, "emprirical-sinkhorn"]], "Optimal Transport with different gournd metrics": [[51, "optimal-transport-with-different-gournd-metrics"]], "Dataset 1 : uniform sampling": [[51, "dataset-1-uniform-sampling"]], "Dataset 1 : Plot OT Matrices": [[51, "dataset-1-plot-ot-matrices"]], "Dataset 2 : Partial circle": [[51, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[51, "dataset-2-plot-ot-matrices"]], "OT distances in 1D": [[52, "ot-distances-in-1d"]], "Compute EMD for the different losses": [[52, "compute-emd-for-the-different-losses"]], "Compute Sinkhorn for the different losses": [[52, "compute-sinkhorn-for-the-different-losses"]], "OT distance on the Circle": [[53, "ot-distance-on-the-circle"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[53, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Wasserstein distance between von Mises and uniform for different kappa": [[53, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Regularized OT with generic solver": [[54, "regularized-ot-with-generic-solver"]], "Solve EMD with Frobenius norm regularization": [[54, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[54, "solve-emd-with-entropic-regularization"]], "Solve EMD with Frobenius norm + entropic regularization": [[54, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Sliced Wasserstein Distance on 2D distributions": [[56, "sliced-wasserstein-distance-on-2d-distributions"]], "Sliced Wasserstein distance for different seeds and number of projections": [[56, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Plot Sliced Wasserstein Distance": [[56, "plot-sliced-wasserstein-distance"]], "Spherical Sliced Wasserstein on distributions in S^2": [[57, "spherical-sliced-wasserstein-on-distributions-in-s-2"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[57, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Plot Spherical Sliced Wasserstein": [[57, "plot-spherical-sliced-wasserstein"]], "1D Unbalanced optimal transport": [[59, "d-unbalanced-optimal-transport"]], "Solve Unbalanced Sinkhorn": [[59, "solve-unbalanced-sinkhorn"]], "plot the transported mass": [[59, "plot-the-transported-mass"]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[60, "d-wasserstein-barycenter-demo-for-unbalanced-distributions"]], "Barycentric interpolation": [[60, "barycentric-interpolation"]], "Partial Wasserstein and Gromov-Wasserstein example": [[61, "partial-wasserstein-and-gromov-wasserstein-example"]], "Sample two 2D Gaussian distributions and plot them": [[61, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Compute partial Wasserstein plans and distance": [[61, "compute-partial-wasserstein-plans-and-distance"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[61, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Compute partial Gromov-Wasserstein plans and distance": [[61, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Regularization path of l2-penalized unbalanced optimal transport": [[62, "regularization-path-of-l2-penalized-unbalanced-optimal-transport"]], "Compute semi-relaxed and fully relaxed regularization paths": [[62, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Plot the regularization path": [[62, "plot-the-regularization-path"]], "Animation of the regpath for UOT l2": [[62, "animation-of-the-regpath-for-uot-l2"]], "Plot the semi-relaxed regularization path": [[62, "plot-the-semi-relaxed-regularization-path"]], "Animation of the regpath for semi-relaxed UOT l2": [[62, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "2D examples of exact and entropic unbalanced optimal transport": [[63, "d-examples-of-exact-and-entropic-unbalanced-optimal-transport"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[63, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Plot the results": [[63, "plot-the-results"]], "Contributors": [[65, "contributors"], [65, "contributors"]], "Creators and Maintainers": [[65, "creators-and-maintainers"]], "Acknowledgments": [[65, "acknowledgments"]], "ot.backend": [[66, "module-ot.backend"]], "Performance": [[66, "performance"]], "Functions": [[66, "functions"], [67, "functions"], [68, "functions"], [69, "functions"], [70, "functions"], [71, "functions"], [72, "functions"], [73, "functions"], [75, "functions"], [76, "functions"], [77, "functions"], [78, "functions"], [79, "functions"], [80, "functions"], [81, "functions"], [82, "functions"], [83, "functions"], [84, "functions"], [85, "functions"]], "Classes": [[66, "classes"], [69, "classes"], [81, "classes"], [84, "classes"]], "ot.bregman": [[67, "module-ot.bregman"]], "Examples using ot.bregman.barycenter_debiased": [[67, "examples-using-ot-bregman-barycenter-debiased"]], "Examples using ot.bregman.convolutional_barycenter2d": [[67, "examples-using-ot-bregman-convolutional-barycenter2d"]], "Examples using ot.bregman.convolutional_barycenter2d_debiased": [[67, "examples-using-ot-bregman-convolutional-barycenter2d-debiased"]], "Examples using ot.bregman.empirical_sinkhorn": [[67, "examples-using-ot-bregman-empirical-sinkhorn"]], "Examples using ot.bregman.free_support_sinkhorn_barycenter": [[67, "examples-using-ot-bregman-free-support-sinkhorn-barycenter"]], "Dependency": [[67, null], [67, null]], "Examples using ot.bregman.screenkhorn": [[67, "examples-using-ot-bregman-screenkhorn"]], "ot.coot": [[68, "module-ot.coot"]], "Examples using ot.coot.co_optimal_transport": [[68, "examples-using-ot-coot-co-optimal-transport"]], "Examples using ot.coot.co_optimal_transport2": [[68, "examples-using-ot-coot-co-optimal-transport2"]], "ot.da": [[69, "module-ot.da"]], "Examples using ot.da.BaseTransport": [[69, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[69, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[69, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[69, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearTransport": [[69, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[69, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[69, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[69, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[69, "examples-using-ot-da-sinkhorntransport"]], "ot.datasets": [[70, "module-ot.datasets"]], "Examples using ot.datasets.make_1D_gauss": [[70, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[70, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[70, "examples-using-ot-datasets-make-data-classif"]], "ot.dr": [[71, "module-ot.dr"]], "Examples using ot.dr.fda": [[71, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[71, "examples-using-ot-dr-wda"]], "ot.factored": [[72, "module-ot.factored"]], "ot.gaussian": [[73, "module-ot.gaussian"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[73, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "ot.gromov": [[74, "module-ot.gromov"]], "ot.lp": [[75, "module-ot.lp"]], "Examples using ot.lp.free_support_barycenter": [[75, "examples-using-ot-lp-free-support-barycenter"]], "Examples using ot.lp.generalized_free_support_barycenter": [[75, "examples-using-ot-lp-generalized-free-support-barycenter"]], "ot.optim": [[76, "module-ot.optim"]], "Examples using ot.optim.cg": [[76, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[76, "examples-using-ot-optim-gcg"]], "ot.partial": [[77, "module-ot.partial"]], "Examples using ot.partial.entropic_partial_gromov_wasserstein": [[77, "examples-using-ot-partial-entropic-partial-gromov-wasserstein"]], "Examples using ot.partial.entropic_partial_wasserstein": [[77, "examples-using-ot-partial-entropic-partial-wasserstein"]], "Examples using ot.partial.partial_gromov_wasserstein": [[77, "examples-using-ot-partial-partial-gromov-wasserstein"]], "Examples using ot.partial.partial_wasserstein": [[77, "examples-using-ot-partial-partial-wasserstein"]], "ot.plot": [[78, "module-ot.plot"]], "Examples using ot.plot.plot1D_mat": [[78, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[78, "examples-using-ot-plot-plot2d-samples-mat"]], "ot.regpath": [[79, "module-ot.regpath"]], "Examples using ot.regpath.compute_transport_plan": [[79, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[79, "examples-using-ot-regpath-regularization-path"]], "ot.sliced": [[80, "module-ot.sliced"]], "ot.smooth": [[81, "module-ot.smooth"]], "Examples using ot.smooth.smooth_ot_dual": [[81, "examples-using-ot-smooth-smooth-ot-dual"]], "ot.stochastic": [[82, "module-ot.stochastic"]], "Examples using ot.stochastic.loss_dual_entropic": [[82, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[82, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[82, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[82, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[82, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[82, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "ot.unbalanced": [[83, "module-ot.unbalanced"]], "Examples using ot.unbalanced.mm_unbalanced": [[83, "examples-using-ot-unbalanced-mm-unbalanced"]], "ot.utils": [[84, "module-ot.utils"]], "Examples using ot.utils.dist0": [[84, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_simplex": [[84, "examples-using-ot-utils-proj-simplex"]], "Examples using ot.utils.BaseEstimator": [[84, "examples-using-ot-utils-baseestimator"]], "Exceptions": [[84, "exceptions"]], "ot.weak": [[85, "module-ot.weak"]], "POT: Python Optimal Transport": [[86, "pot-python-optimal-transport"], [86, "pot-python-optimal-transport"]], "Contents": [[86, "contents"]], "Using and citing the toolbox": [[86, "using-and-citing-the-toolbox"]], "Installation": [[86, "installation"]], "Pip installation": [[86, "pip-installation"]], "Anaconda installation with conda-forge": [[86, "anaconda-installation-with-conda-forge"]], "Post installation check": [[86, "post-installation-check"]], "Dependencies": [[86, "dependencies"]], "Examples": [[86, "examples"]], "Short examples": [[86, "short-examples"]], "Examples and Notebooks": [[86, "examples-and-notebooks"]], "Acknowledgements": [[86, "acknowledgements"]], "Contributions and code of conduct": [[86, "contributions-and-code-of-conduct"]], "Support": [[86, "support"]], "References": [[86, "references"], [87, "references"]], "Indices and tables": [[86, "indices-and-tables"]], "Quick start guide": [[87, "quick-start-guide"]], "Why Optimal Transport ?": [[87, "why-optimal-transport"]], "When to use OT": [[87, "when-to-use-ot"]], "Wasserstein distance between distributions": [[87, "wasserstein-distance-between-distributions"]], "OT for mapping estimation": [[87, "ot-for-mapping-estimation"]], "When to use POT": [[87, "when-to-use-pot"]], "When not to use POT": [[87, "when-not-to-use-pot"]], "Optimal transport and Wasserstein distance": [[87, "optimal-transport-and-wasserstein-distance"]], "Solving optimal transport": [[87, "solving-optimal-transport"]], "Examples of use for ot.emd": [[87, "examples-of-use-for-ot-emd"]], "Computing Wasserstein distance": [[87, "computing-wasserstein-distance"]], "Examples of use for ot.emd2": [[87, "examples-of-use-for-ot-emd2"]], "Special cases": [[87, "special-cases"]], "Regularized Optimal Transport": [[87, "regularized-optimal-transport"]], "Entropic regularized OT": [[87, "entropic-regularized-ot"]], "Examples of use for ot.sinkhorn": [[87, "examples-of-use-for-ot-sinkhorn"]], "Examples of use for ot.sinkhorn2": [[87, "examples-of-use-for-ot-sinkhorn2"]], "Other regularizations": [[87, "other-regularizations"]], "Quadratic regularization": [[87, "quadratic-regularization"]], "Examples of use of quadratic regularization": [[87, "examples-of-use-of-quadratic-regularization"]], "Group Lasso regularization": [[87, "group-lasso-regularization"]], "Examples of group Lasso regularization": [[87, "examples-of-group-lasso-regularization"]], "Generic solvers": [[87, "generic-solvers"]], "Examples of the generic solvers": [[87, "examples-of-the-generic-solvers"]], "Wasserstein Barycenters": [[87, "wasserstein-barycenters"]], "Barycenters with fixed support": [[87, "barycenters-with-fixed-support"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[87, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[87, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Barycenters with free support": [[87, "barycenters-with-free-support"]], "Examples of free support barycenter estimation": [[87, "examples-of-free-support-barycenter-estimation"]], "Monge mapping and Domain adaptation": [[87, "monge-mapping-and-domain-adaptation"]], "Monge Mapping estimation": [[87, "monge-mapping-estimation"]], "Domain adaptation classes": [[87, "domain-adaptation-classes"]], "Examples of the use of OTDA classes": [[87, "examples-of-the-use-of-otda-classes"]], "Other applications": [[87, "other-applications"]], "Examples of the use of WDA": [[87, "examples-of-the-use-of-wda"]], "Unbalanced optimal transport": [[87, "unbalanced-optimal-transport"]], "Examples of Unbalanced OT": [[87, "examples-of-unbalanced-ot"]], "Unbalanced Barycenters": [[87, "unbalanced-barycenters"]], "Examples of Unbalanced OT barycenters": [[87, "examples-of-unbalanced-ot-barycenters"]], "Partial optimal transport": [[87, "partial-optimal-transport"]], "Examples of Partial OT": [[87, "examples-of-partial-ot"]], "Gromov-Wasserstein": [[87, "gromov-wasserstein"]], "Examples of computation of GW, regularized G and FGW": [[87, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Examples of GW, regularized G and FGW barycenters": [[87, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Solving OT with Multiple backends on CPU/GPU": [[87, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "How it works": [[87, "how-it-works"]], "GPU acceleration": [[87, "gpu-acceleration"]], "List of compatible Backends": [[87, "list-of-compatible-backends"]], "List of compatible modules": [[87, "list-of-compatible-modules"]], "FAQ": [[87, "faq"]], "Releases": [[88, "releases"]], "0.8.3dev": [[88, "dev"]], "New features": [[88, "new-features"], [88, "id2"], [88, "id7"], [88, "id10"]], "Closed issues": [[88, "closed-issues"], [88, "id3"], [88, "id5"], [88, "id8"], [88, "id11"], [88, "id13"], [88, "id16"], [88, "id19"], [88, "id22"]], "0.8.2": [[88, "id1"]], "0.8.1.0": [[88, "id4"]], "0.8.1": [[88, "id6"]], "0.8.0": [[88, "id9"]], "0.7.0": [[88, "id12"]], "Features": [[88, "features"], [88, "id15"], [88, "id18"], [88, "id21"]], "0.6.0": [[88, "id14"]], "0.5.0": [[88, "id17"]], "Deprecation": [[88, "deprecation"]], "0.4": [[88, "id20"]], "0.3.1": [[88, "id23"]], "0.3": [[88, "id24"]], "V0.2": [[88, "v0-2"]], "0.1.11": [[88, "id25"]], "0.1.10": [[88, "id26"]], "0.1.9": [[88, "id27"]], "0.1.7": [[88, "id28"]], "0.1.3": [[88, "id29"]], "First pre-release": [[88, "first-pre-release"]]}, "indexentries": {"barycenter() (in module ot)": [[2, "ot.barycenter"]], "barycenter_unbalanced() (in module ot)": [[2, "ot.barycenter_unbalanced"]], "binary_search_circle() (in module ot)": [[2, "ot.binary_search_circle"]], "dist() (in module ot)": [[2, "ot.dist"]], "emd() (in module ot)": [[2, "ot.emd"]], "emd2() (in module ot)": [[2, "ot.emd2"]], "emd2_1d() (in module ot)": [[2, "ot.emd2_1d"]], "emd_1d() (in module ot)": [[2, "ot.emd_1d"]], "factored_optimal_transport() (in module ot)": [[2, "ot.factored_optimal_transport"]], "fused_gromov_wasserstein() (in module ot)": [[2, "ot.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot)": [[2, "ot.fused_gromov_wasserstein2"]], "gromov_barycenters() (in module ot)": [[2, "ot.gromov_barycenters"]], "gromov_wasserstein() (in module ot)": [[2, "ot.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot)": [[2, "ot.gromov_wasserstein2"]], "max_sliced_wasserstein_distance() (in module ot)": [[2, "ot.max_sliced_wasserstein_distance"]], "module": [[2, "module-ot"], [66, "module-ot.backend"], [67, "module-ot.bregman"], [68, "module-ot.coot"], [69, "module-ot.da"], [70, "module-ot.datasets"], [71, "module-ot.dr"], [72, "module-ot.factored"], [73, "module-ot.gaussian"], [74, "module-ot.gromov"], [75, "module-ot.lp"], [76, "module-ot.optim"], [77, "module-ot.partial"], [78, "module-ot.plot"], [79, "module-ot.regpath"], [80, "module-ot.sliced"], [81, "module-ot.smooth"], [82, "module-ot.stochastic"], [83, "module-ot.unbalanced"], [84, "module-ot.utils"], [85, "module-ot.weak"]], "ot": [[2, "module-ot"]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[2, "ot.semidiscrete_wasserstein2_unif_circle"]], "sinkhorn() (in module ot)": [[2, "ot.sinkhorn"]], "sinkhorn2() (in module ot)": [[2, "ot.sinkhorn2"]], "sinkhorn_lpl1_mm() (in module ot)": [[2, "ot.sinkhorn_lpl1_mm"]], "sinkhorn_unbalanced() (in module ot)": [[2, "ot.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot)": [[2, "ot.sinkhorn_unbalanced2"]], "sliced_wasserstein_distance() (in module ot)": [[2, "ot.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot)": [[2, "ot.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot)": [[2, "ot.sliced_wasserstein_sphere_unif"]], "solve() (in module ot)": [[2, "ot.solve"]], "tic() (in module ot)": [[2, "ot.tic"]], "toc() (in module ot)": [[2, "ot.toc"]], "toq() (in module ot)": [[2, "ot.toq"]], "unif() (in module ot)": [[2, "ot.unif"]], "wasserstein_1d() (in module ot)": [[2, "ot.wasserstein_1d"]], "wasserstein_circle() (in module ot)": [[2, "ot.wasserstein_circle"]], "weak_optimal_transport() (in module ot)": [[2, "ot.weak_optimal_transport"]], "backend (class in ot.backend)": [[66, "id0"], [66, "ot.backend.Backend"]], "cupybackend (class in ot.backend)": [[66, "id78"], [66, "ot.backend.CupyBackend"]], "jaxbackend (class in ot.backend)": [[66, "id154"], [66, "ot.backend.JaxBackend"]], "numpybackend (class in ot.backend)": [[66, "id230"], [66, "ot.backend.NumpyBackend"]], "tensorflowbackend (class in ot.backend)": [[66, "id306"], [66, "ot.backend.TensorflowBackend"]], "torchbackend (class in ot.backend)": [[66, "id382"], [66, "ot.backend.TorchBackend"]], "abs() (ot.backend.backend method)": [[66, "id1"], [66, "ot.backend.Backend.abs"]], "abs() (ot.backend.cupybackend method)": [[66, "id79"], [66, "ot.backend.CupyBackend.abs"]], "abs() (ot.backend.jaxbackend method)": [[66, "id155"], [66, "ot.backend.JaxBackend.abs"]], "abs() (ot.backend.numpybackend method)": [[66, "id231"], [66, "ot.backend.NumpyBackend.abs"]], "abs() (ot.backend.tensorflowbackend method)": [[66, "id307"], [66, "ot.backend.TensorflowBackend.abs"]], "abs() (ot.backend.torchbackend method)": [[66, "id383"], [66, "ot.backend.TorchBackend.abs"]], "allclose() (ot.backend.backend method)": [[66, "id2"], [66, "ot.backend.Backend.allclose"]], "allclose() (ot.backend.cupybackend method)": [[66, "id80"], [66, "ot.backend.CupyBackend.allclose"]], "allclose() (ot.backend.jaxbackend method)": [[66, "id156"], [66, "ot.backend.JaxBackend.allclose"]], "allclose() (ot.backend.numpybackend method)": [[66, "id232"], [66, "ot.backend.NumpyBackend.allclose"]], "allclose() (ot.backend.tensorflowbackend method)": [[66, "id308"], [66, "ot.backend.TensorflowBackend.allclose"]], "allclose() (ot.backend.torchbackend method)": [[66, "id384"], [66, "ot.backend.TorchBackend.allclose"]], "any() (ot.backend.backend method)": [[66, "id3"], [66, "ot.backend.Backend.any"]], "any() (ot.backend.cupybackend method)": [[66, "id81"], [66, "ot.backend.CupyBackend.any"]], "any() (ot.backend.jaxbackend method)": [[66, "id157"], [66, "ot.backend.JaxBackend.any"]], "any() (ot.backend.numpybackend method)": [[66, "id233"], [66, "ot.backend.NumpyBackend.any"]], "any() (ot.backend.tensorflowbackend method)": [[66, "id309"], [66, "ot.backend.TensorflowBackend.any"]], "any() (ot.backend.torchbackend method)": [[66, "id385"], [66, "ot.backend.TorchBackend.any"]], "arange() (ot.backend.backend method)": [[66, "id4"], [66, "ot.backend.Backend.arange"]], "arange() (ot.backend.cupybackend method)": [[66, "id82"], [66, "ot.backend.CupyBackend.arange"]], "arange() (ot.backend.jaxbackend method)": [[66, "id158"], [66, "ot.backend.JaxBackend.arange"]], "arange() (ot.backend.numpybackend method)": [[66, "id234"], [66, "ot.backend.NumpyBackend.arange"]], "arange() (ot.backend.tensorflowbackend method)": [[66, "id310"], [66, "ot.backend.TensorflowBackend.arange"]], "arange() (ot.backend.torchbackend method)": [[66, "id386"], [66, "ot.backend.TorchBackend.arange"]], "argmax() (ot.backend.backend method)": [[66, "id5"], [66, "ot.backend.Backend.argmax"]], "argmax() (ot.backend.cupybackend method)": [[66, "id83"], [66, "ot.backend.CupyBackend.argmax"]], "argmax() (ot.backend.jaxbackend method)": [[66, "id159"], [66, "ot.backend.JaxBackend.argmax"]], "argmax() (ot.backend.numpybackend method)": [[66, "id235"], [66, "ot.backend.NumpyBackend.argmax"]], "argmax() (ot.backend.tensorflowbackend method)": [[66, "id311"], [66, "ot.backend.TensorflowBackend.argmax"]], "argmax() (ot.backend.torchbackend method)": [[66, "id387"], [66, "ot.backend.TorchBackend.argmax"]], "argmin() (ot.backend.backend method)": [[66, "id6"], [66, "ot.backend.Backend.argmin"]], "argmin() (ot.backend.cupybackend method)": [[66, "id84"], [66, "ot.backend.CupyBackend.argmin"]], "argmin() (ot.backend.jaxbackend method)": [[66, "id160"], [66, "ot.backend.JaxBackend.argmin"]], "argmin() (ot.backend.numpybackend method)": [[66, "id236"], [66, "ot.backend.NumpyBackend.argmin"]], "argmin() (ot.backend.tensorflowbackend method)": [[66, "id312"], [66, "ot.backend.TensorflowBackend.argmin"]], "argmin() (ot.backend.torchbackend method)": [[66, "id388"], [66, "ot.backend.TorchBackend.argmin"]], "argsort() (ot.backend.backend method)": [[66, "id7"], [66, "ot.backend.Backend.argsort"]], "argsort() (ot.backend.cupybackend method)": [[66, "id85"], [66, "ot.backend.CupyBackend.argsort"]], "argsort() (ot.backend.jaxbackend method)": [[66, "id161"], [66, "ot.backend.JaxBackend.argsort"]], "argsort() (ot.backend.numpybackend method)": [[66, "id237"], [66, "ot.backend.NumpyBackend.argsort"]], "argsort() (ot.backend.tensorflowbackend method)": [[66, "id313"], [66, "ot.backend.TensorflowBackend.argsort"]], "argsort() (ot.backend.torchbackend method)": [[66, "id389"], [66, "ot.backend.TorchBackend.argsort"]], "array_equal() (ot.backend.backend method)": [[66, "id8"], [66, "ot.backend.Backend.array_equal"]], "array_equal() (ot.backend.cupybackend method)": [[66, "id86"], [66, "ot.backend.CupyBackend.array_equal"]], "array_equal() (ot.backend.jaxbackend method)": [[66, "id162"], [66, "ot.backend.JaxBackend.array_equal"]], "array_equal() (ot.backend.numpybackend method)": [[66, "id238"], [66, "ot.backend.NumpyBackend.array_equal"]], "array_equal() (ot.backend.tensorflowbackend method)": [[66, "id314"], [66, "ot.backend.TensorflowBackend.array_equal"]], "array_equal() (ot.backend.torchbackend method)": [[66, "id390"], [66, "ot.backend.TorchBackend.array_equal"]], "assert_same_dtype_device() (ot.backend.backend method)": [[66, "id9"], [66, "ot.backend.Backend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[66, "id87"], [66, "ot.backend.CupyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[66, "id163"], [66, "ot.backend.JaxBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[66, "id239"], [66, "ot.backend.NumpyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[66, "id315"], [66, "ot.backend.TensorflowBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[66, "id391"], [66, "ot.backend.TorchBackend.assert_same_dtype_device"]], "atan2() (ot.backend.backend method)": [[66, "id10"], [66, "ot.backend.Backend.atan2"]], "atan2() (ot.backend.cupybackend method)": [[66, "id88"], [66, "ot.backend.CupyBackend.atan2"]], "atan2() (ot.backend.jaxbackend method)": [[66, "id164"], [66, "ot.backend.JaxBackend.atan2"]], "atan2() (ot.backend.numpybackend method)": [[66, "id240"], [66, "ot.backend.NumpyBackend.atan2"]], "atan2() (ot.backend.tensorflowbackend method)": [[66, "id316"], [66, "ot.backend.TensorflowBackend.atan2"]], "atan2() (ot.backend.torchbackend method)": [[66, "id392"], [66, "ot.backend.TorchBackend.atan2"]], "bitsize() (ot.backend.backend method)": [[66, "id11"], [66, "ot.backend.Backend.bitsize"]], "bitsize() (ot.backend.cupybackend method)": [[66, "id89"], [66, "ot.backend.CupyBackend.bitsize"]], "bitsize() (ot.backend.jaxbackend method)": [[66, "id165"], [66, "ot.backend.JaxBackend.bitsize"]], "bitsize() (ot.backend.numpybackend method)": [[66, "id241"], [66, "ot.backend.NumpyBackend.bitsize"]], "bitsize() (ot.backend.tensorflowbackend method)": [[66, "id317"], [66, "ot.backend.TensorflowBackend.bitsize"]], "bitsize() (ot.backend.torchbackend method)": [[66, "id393"], [66, "ot.backend.TorchBackend.bitsize"]], "clip() (ot.backend.backend method)": [[66, "id12"], [66, "ot.backend.Backend.clip"]], "clip() (ot.backend.cupybackend method)": [[66, "id90"], [66, "ot.backend.CupyBackend.clip"]], "clip() (ot.backend.jaxbackend method)": [[66, "id166"], [66, "ot.backend.JaxBackend.clip"]], "clip() (ot.backend.numpybackend method)": [[66, "id242"], [66, "ot.backend.NumpyBackend.clip"]], "clip() (ot.backend.tensorflowbackend method)": [[66, "id318"], [66, "ot.backend.TensorflowBackend.clip"]], "clip() (ot.backend.torchbackend method)": [[66, "id394"], [66, "ot.backend.TorchBackend.clip"]], "concatenate() (ot.backend.backend method)": [[66, "id13"], [66, "ot.backend.Backend.concatenate"]], "concatenate() (ot.backend.cupybackend method)": [[66, "id91"], [66, "ot.backend.CupyBackend.concatenate"]], "concatenate() (ot.backend.jaxbackend method)": [[66, "id167"], [66, "ot.backend.JaxBackend.concatenate"]], "concatenate() (ot.backend.numpybackend method)": [[66, "id243"], [66, "ot.backend.NumpyBackend.concatenate"]], "concatenate() (ot.backend.tensorflowbackend method)": [[66, "id319"], [66, "ot.backend.TensorflowBackend.concatenate"]], "concatenate() (ot.backend.torchbackend method)": [[66, "id395"], [66, "ot.backend.TorchBackend.concatenate"]], "coo_matrix() (ot.backend.backend method)": [[66, "id14"], [66, "ot.backend.Backend.coo_matrix"]], "coo_matrix() (ot.backend.cupybackend method)": [[66, "id92"], [66, "ot.backend.CupyBackend.coo_matrix"]], "coo_matrix() (ot.backend.jaxbackend method)": [[66, "id168"], [66, "ot.backend.JaxBackend.coo_matrix"]], "coo_matrix() (ot.backend.numpybackend method)": [[66, "id244"], [66, "ot.backend.NumpyBackend.coo_matrix"]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[66, "id320"], [66, "ot.backend.TensorflowBackend.coo_matrix"]], "coo_matrix() (ot.backend.torchbackend method)": [[66, "id396"], [66, "ot.backend.TorchBackend.coo_matrix"]], "copy() (ot.backend.backend method)": [[66, "id15"], [66, "ot.backend.Backend.copy"]], "copy() (ot.backend.cupybackend method)": [[66, "id93"], [66, "ot.backend.CupyBackend.copy"]], "copy() (ot.backend.jaxbackend method)": [[66, "id169"], [66, "ot.backend.JaxBackend.copy"]], "copy() (ot.backend.numpybackend method)": [[66, "id245"], [66, "ot.backend.NumpyBackend.copy"]], "copy() (ot.backend.tensorflowbackend method)": [[66, "id321"], [66, "ot.backend.TensorflowBackend.copy"]], "copy() (ot.backend.torchbackend method)": [[66, "id397"], [66, "ot.backend.TorchBackend.copy"]], "cumsum() (ot.backend.backend method)": [[66, "id16"], [66, "ot.backend.Backend.cumsum"]], "cumsum() (ot.backend.cupybackend method)": [[66, "id94"], [66, "ot.backend.CupyBackend.cumsum"]], "cumsum() (ot.backend.jaxbackend method)": [[66, "id170"], [66, "ot.backend.JaxBackend.cumsum"]], "cumsum() (ot.backend.numpybackend method)": [[66, "id246"], [66, "ot.backend.NumpyBackend.cumsum"]], "cumsum() (ot.backend.tensorflowbackend method)": [[66, "id322"], [66, "ot.backend.TensorflowBackend.cumsum"]], "cumsum() (ot.backend.torchbackend method)": [[66, "id398"], [66, "ot.backend.TorchBackend.cumsum"]], "device_type() (ot.backend.backend method)": [[66, "id17"], [66, "ot.backend.Backend.device_type"]], "device_type() (ot.backend.cupybackend method)": [[66, "id95"], [66, "ot.backend.CupyBackend.device_type"]], "device_type() (ot.backend.jaxbackend method)": [[66, "id171"], [66, "ot.backend.JaxBackend.device_type"]], "device_type() (ot.backend.numpybackend method)": [[66, "id247"], [66, "ot.backend.NumpyBackend.device_type"]], "device_type() (ot.backend.tensorflowbackend method)": [[66, "id323"], [66, "ot.backend.TensorflowBackend.device_type"]], "device_type() (ot.backend.torchbackend method)": [[66, "id399"], [66, "ot.backend.TorchBackend.device_type"]], "diag() (ot.backend.backend method)": [[66, "id18"], [66, "ot.backend.Backend.diag"]], "diag() (ot.backend.cupybackend method)": [[66, "id96"], [66, "ot.backend.CupyBackend.diag"]], "diag() (ot.backend.jaxbackend method)": [[66, "id172"], [66, "ot.backend.JaxBackend.diag"]], "diag() (ot.backend.numpybackend method)": [[66, "id248"], [66, "ot.backend.NumpyBackend.diag"]], "diag() (ot.backend.tensorflowbackend method)": [[66, "id324"], [66, "ot.backend.TensorflowBackend.diag"]], "diag() (ot.backend.torchbackend method)": [[66, "id400"], [66, "ot.backend.TorchBackend.diag"]], "dot() (ot.backend.backend method)": [[66, "id19"], [66, "ot.backend.Backend.dot"]], "dot() (ot.backend.cupybackend method)": [[66, "id97"], [66, "ot.backend.CupyBackend.dot"]], "dot() (ot.backend.jaxbackend method)": [[66, "id173"], [66, "ot.backend.JaxBackend.dot"]], "dot() (ot.backend.numpybackend method)": [[66, "id249"], [66, "ot.backend.NumpyBackend.dot"]], "dot() (ot.backend.tensorflowbackend method)": [[66, "id325"], [66, "ot.backend.TensorflowBackend.dot"]], "dot() (ot.backend.torchbackend method)": [[66, "id401"], [66, "ot.backend.TorchBackend.dot"]], "dtype_device() (ot.backend.backend method)": [[66, "id20"], [66, "ot.backend.Backend.dtype_device"]], "dtype_device() (ot.backend.cupybackend method)": [[66, "id98"], [66, "ot.backend.CupyBackend.dtype_device"]], "dtype_device() (ot.backend.jaxbackend method)": [[66, "id174"], [66, "ot.backend.JaxBackend.dtype_device"]], "dtype_device() (ot.backend.numpybackend method)": [[66, "id250"], [66, "ot.backend.NumpyBackend.dtype_device"]], "dtype_device() (ot.backend.tensorflowbackend method)": [[66, "id326"], [66, "ot.backend.TensorflowBackend.dtype_device"]], "dtype_device() (ot.backend.torchbackend method)": [[66, "id402"], [66, "ot.backend.TorchBackend.dtype_device"]], "einsum() (ot.backend.backend method)": [[66, "id21"], [66, "ot.backend.Backend.einsum"]], "einsum() (ot.backend.cupybackend method)": [[66, "id99"], [66, "ot.backend.CupyBackend.einsum"]], "einsum() (ot.backend.jaxbackend method)": [[66, "id175"], [66, "ot.backend.JaxBackend.einsum"]], "einsum() (ot.backend.numpybackend method)": [[66, "id251"], [66, "ot.backend.NumpyBackend.einsum"]], "einsum() (ot.backend.tensorflowbackend method)": [[66, "id327"], [66, "ot.backend.TensorflowBackend.einsum"]], "einsum() (ot.backend.torchbackend method)": [[66, "id403"], [66, "ot.backend.TorchBackend.einsum"]], "eliminate_zeros() (ot.backend.backend method)": [[66, "id22"], [66, "ot.backend.Backend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.cupybackend method)": [[66, "id100"], [66, "ot.backend.CupyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[66, "id176"], [66, "ot.backend.JaxBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.numpybackend method)": [[66, "id252"], [66, "ot.backend.NumpyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[66, "id328"], [66, "ot.backend.TensorflowBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.torchbackend method)": [[66, "id404"], [66, "ot.backend.TorchBackend.eliminate_zeros"]], "exp() (ot.backend.backend method)": [[66, "id23"], [66, "ot.backend.Backend.exp"]], "exp() (ot.backend.cupybackend method)": [[66, "id101"], [66, "ot.backend.CupyBackend.exp"]], "exp() (ot.backend.jaxbackend method)": [[66, "id177"], [66, "ot.backend.JaxBackend.exp"]], "exp() (ot.backend.numpybackend method)": [[66, "id253"], [66, "ot.backend.NumpyBackend.exp"]], "exp() (ot.backend.tensorflowbackend method)": [[66, "id329"], [66, "ot.backend.TensorflowBackend.exp"]], "exp() (ot.backend.torchbackend method)": [[66, "id405"], [66, "ot.backend.TorchBackend.exp"]], "eye() (ot.backend.backend method)": [[66, "id24"], [66, "ot.backend.Backend.eye"]], "eye() (ot.backend.cupybackend method)": [[66, "id102"], [66, "ot.backend.CupyBackend.eye"]], "eye() (ot.backend.jaxbackend method)": [[66, "id178"], [66, "ot.backend.JaxBackend.eye"]], "eye() (ot.backend.numpybackend method)": [[66, "id254"], [66, "ot.backend.NumpyBackend.eye"]], "eye() (ot.backend.tensorflowbackend method)": [[66, "id330"], [66, "ot.backend.TensorflowBackend.eye"]], "eye() (ot.backend.torchbackend method)": [[66, "id406"], [66, "ot.backend.TorchBackend.eye"]], "flip() (ot.backend.backend method)": [[66, "id25"], [66, "ot.backend.Backend.flip"]], "flip() (ot.backend.cupybackend method)": [[66, "id103"], [66, "ot.backend.CupyBackend.flip"]], "flip() (ot.backend.jaxbackend method)": [[66, "id179"], [66, "ot.backend.JaxBackend.flip"]], "flip() (ot.backend.numpybackend method)": [[66, "id255"], [66, "ot.backend.NumpyBackend.flip"]], "flip() (ot.backend.tensorflowbackend method)": [[66, "id331"], [66, "ot.backend.TensorflowBackend.flip"]], "flip() (ot.backend.torchbackend method)": [[66, "id407"], [66, "ot.backend.TorchBackend.flip"]], "floor() (ot.backend.backend method)": [[66, "id26"], [66, "ot.backend.Backend.floor"]], "floor() (ot.backend.cupybackend method)": [[66, "id104"], [66, "ot.backend.CupyBackend.floor"]], "floor() (ot.backend.jaxbackend method)": [[66, "id180"], [66, "ot.backend.JaxBackend.floor"]], "floor() (ot.backend.numpybackend method)": [[66, "id256"], [66, "ot.backend.NumpyBackend.floor"]], "floor() (ot.backend.tensorflowbackend method)": [[66, "id332"], [66, "ot.backend.TensorflowBackend.floor"]], "floor() (ot.backend.torchbackend method)": [[66, "id408"], [66, "ot.backend.TorchBackend.floor"]], "from_numpy() (ot.backend.backend method)": [[66, "id27"], [66, "ot.backend.Backend.from_numpy"]], "full() (ot.backend.backend method)": [[66, "id28"], [66, "ot.backend.Backend.full"]], "full() (ot.backend.cupybackend method)": [[66, "id105"], [66, "ot.backend.CupyBackend.full"]], "full() (ot.backend.jaxbackend method)": [[66, "id181"], [66, "ot.backend.JaxBackend.full"]], "full() (ot.backend.numpybackend method)": [[66, "id257"], [66, "ot.backend.NumpyBackend.full"]], "full() (ot.backend.tensorflowbackend method)": [[66, "id333"], [66, "ot.backend.TensorflowBackend.full"]], "full() (ot.backend.torchbackend method)": [[66, "id409"], [66, "ot.backend.TorchBackend.full"]], "get_backend() (in module ot.backend)": [[66, "id458"], [66, "ot.backend.get_backend"]], "get_backend_list() (in module ot.backend)": [[66, "id459"], [66, "ot.backend.get_backend_list"]], "inv() (ot.backend.backend method)": [[66, "id29"], [66, "ot.backend.Backend.inv"]], "inv() (ot.backend.cupybackend method)": [[66, "id106"], [66, "ot.backend.CupyBackend.inv"]], "inv() (ot.backend.jaxbackend method)": [[66, "id182"], [66, "ot.backend.JaxBackend.inv"]], "inv() (ot.backend.numpybackend method)": [[66, "id258"], [66, "ot.backend.NumpyBackend.inv"]], "inv() (ot.backend.tensorflowbackend method)": [[66, "id334"], [66, "ot.backend.TensorflowBackend.inv"]], "inv() (ot.backend.torchbackend method)": [[66, "id410"], [66, "ot.backend.TorchBackend.inv"]], "is_floating_point() (ot.backend.backend method)": [[66, "id30"], [66, "ot.backend.Backend.is_floating_point"]], "is_floating_point() (ot.backend.cupybackend method)": [[66, "id107"], [66, "ot.backend.CupyBackend.is_floating_point"]], "is_floating_point() (ot.backend.jaxbackend method)": [[66, "id183"], [66, "ot.backend.JaxBackend.is_floating_point"]], "is_floating_point() (ot.backend.numpybackend method)": [[66, "id259"], [66, "ot.backend.NumpyBackend.is_floating_point"]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[66, "id335"], [66, "ot.backend.TensorflowBackend.is_floating_point"]], "is_floating_point() (ot.backend.torchbackend method)": [[66, "id411"], [66, "ot.backend.TorchBackend.is_floating_point"]], "isfinite() (ot.backend.backend method)": [[66, "id31"], [66, "ot.backend.Backend.isfinite"]], "isfinite() (ot.backend.cupybackend method)": [[66, "id108"], [66, "ot.backend.CupyBackend.isfinite"]], "isfinite() (ot.backend.jaxbackend method)": [[66, "id184"], [66, "ot.backend.JaxBackend.isfinite"]], "isfinite() (ot.backend.numpybackend method)": [[66, "id260"], [66, "ot.backend.NumpyBackend.isfinite"]], "isfinite() (ot.backend.tensorflowbackend method)": [[66, "id336"], [66, "ot.backend.TensorflowBackend.isfinite"]], "isfinite() (ot.backend.torchbackend method)": [[66, "id412"], [66, "ot.backend.TorchBackend.isfinite"]], "isinf() (ot.backend.backend method)": [[66, "id32"], [66, "ot.backend.Backend.isinf"]], "isinf() (ot.backend.cupybackend method)": [[66, "id109"], [66, "ot.backend.CupyBackend.isinf"]], "isinf() (ot.backend.jaxbackend method)": [[66, "id185"], [66, "ot.backend.JaxBackend.isinf"]], "isinf() (ot.backend.numpybackend method)": [[66, "id261"], [66, "ot.backend.NumpyBackend.isinf"]], "isinf() (ot.backend.tensorflowbackend method)": [[66, "id337"], [66, "ot.backend.TensorflowBackend.isinf"]], "isinf() (ot.backend.torchbackend method)": [[66, "id413"], [66, "ot.backend.TorchBackend.isinf"]], "isnan() (ot.backend.backend method)": [[66, "id33"], [66, "ot.backend.Backend.isnan"]], "isnan() (ot.backend.cupybackend method)": [[66, "id110"], [66, "ot.backend.CupyBackend.isnan"]], "isnan() (ot.backend.jaxbackend method)": [[66, "id186"], [66, "ot.backend.JaxBackend.isnan"]], "isnan() (ot.backend.numpybackend method)": [[66, "id262"], [66, "ot.backend.NumpyBackend.isnan"]], "isnan() (ot.backend.tensorflowbackend method)": [[66, "id338"], [66, "ot.backend.TensorflowBackend.isnan"]], "isnan() (ot.backend.torchbackend method)": [[66, "id414"], [66, "ot.backend.TorchBackend.isnan"]], "issparse() (ot.backend.backend method)": [[66, "id34"], [66, "ot.backend.Backend.issparse"]], "issparse() (ot.backend.cupybackend method)": [[66, "id111"], [66, "ot.backend.CupyBackend.issparse"]], "issparse() (ot.backend.jaxbackend method)": [[66, "id187"], [66, "ot.backend.JaxBackend.issparse"]], "issparse() (ot.backend.numpybackend method)": [[66, "id263"], [66, "ot.backend.NumpyBackend.issparse"]], "issparse() (ot.backend.tensorflowbackend method)": [[66, "id339"], [66, "ot.backend.TensorflowBackend.issparse"]], "issparse() (ot.backend.torchbackend method)": [[66, "id415"], [66, "ot.backend.TorchBackend.issparse"]], "kl_div() (ot.backend.backend method)": [[66, "id35"], [66, "ot.backend.Backend.kl_div"]], "kl_div() (ot.backend.cupybackend method)": [[66, "id112"], [66, "ot.backend.CupyBackend.kl_div"]], "kl_div() (ot.backend.jaxbackend method)": [[66, "id188"], [66, "ot.backend.JaxBackend.kl_div"]], "kl_div() (ot.backend.numpybackend method)": [[66, "id264"], [66, "ot.backend.NumpyBackend.kl_div"]], "kl_div() (ot.backend.tensorflowbackend method)": [[66, "id340"], [66, "ot.backend.TensorflowBackend.kl_div"]], "kl_div() (ot.backend.torchbackend method)": [[66, "id416"], [66, "ot.backend.TorchBackend.kl_div"]], "linspace() (ot.backend.backend method)": [[66, "id36"], [66, "ot.backend.Backend.linspace"]], "linspace() (ot.backend.cupybackend method)": [[66, "id113"], [66, "ot.backend.CupyBackend.linspace"]], "linspace() (ot.backend.jaxbackend method)": [[66, "id189"], [66, "ot.backend.JaxBackend.linspace"]], "linspace() (ot.backend.numpybackend method)": [[66, "id265"], [66, "ot.backend.NumpyBackend.linspace"]], "linspace() (ot.backend.tensorflowbackend method)": [[66, "id341"], [66, "ot.backend.TensorflowBackend.linspace"]], "linspace() (ot.backend.torchbackend method)": [[66, "id417"], [66, "ot.backend.TorchBackend.linspace"]], "log() (ot.backend.backend method)": [[66, "id37"], [66, "ot.backend.Backend.log"]], "log() (ot.backend.cupybackend method)": [[66, "id114"], [66, "ot.backend.CupyBackend.log"]], "log() (ot.backend.jaxbackend method)": [[66, "id190"], [66, "ot.backend.JaxBackend.log"]], "log() (ot.backend.numpybackend method)": [[66, "id266"], [66, "ot.backend.NumpyBackend.log"]], "log() (ot.backend.tensorflowbackend method)": [[66, "id342"], [66, "ot.backend.TensorflowBackend.log"]], "log() (ot.backend.torchbackend method)": [[66, "id418"], [66, "ot.backend.TorchBackend.log"]], "logsumexp() (ot.backend.backend method)": [[66, "id38"], [66, "ot.backend.Backend.logsumexp"]], "logsumexp() (ot.backend.cupybackend method)": [[66, "id115"], [66, "ot.backend.CupyBackend.logsumexp"]], "logsumexp() (ot.backend.jaxbackend method)": [[66, "id191"], [66, "ot.backend.JaxBackend.logsumexp"]], "logsumexp() (ot.backend.numpybackend method)": [[66, "id267"], [66, "ot.backend.NumpyBackend.logsumexp"]], "logsumexp() (ot.backend.tensorflowbackend method)": [[66, "id343"], [66, "ot.backend.TensorflowBackend.logsumexp"]], "logsumexp() (ot.backend.torchbackend method)": [[66, "id419"], [66, "ot.backend.TorchBackend.logsumexp"]], "max() (ot.backend.backend method)": [[66, "id39"], [66, "ot.backend.Backend.max"]], "max() (ot.backend.cupybackend method)": [[66, "id116"], [66, "ot.backend.CupyBackend.max"]], "max() (ot.backend.jaxbackend method)": [[66, "id192"], [66, "ot.backend.JaxBackend.max"]], "max() (ot.backend.numpybackend method)": [[66, "id268"], [66, "ot.backend.NumpyBackend.max"]], "max() (ot.backend.tensorflowbackend method)": [[66, "id344"], [66, "ot.backend.TensorflowBackend.max"]], "max() (ot.backend.torchbackend method)": [[66, "id420"], [66, "ot.backend.TorchBackend.max"]], "maximum() (ot.backend.backend method)": [[66, "id40"], [66, "ot.backend.Backend.maximum"]], "maximum() (ot.backend.cupybackend method)": [[66, "id117"], [66, "ot.backend.CupyBackend.maximum"]], "maximum() (ot.backend.jaxbackend method)": [[66, "id193"], [66, "ot.backend.JaxBackend.maximum"]], "maximum() (ot.backend.numpybackend method)": [[66, "id269"], [66, "ot.backend.NumpyBackend.maximum"]], "maximum() (ot.backend.tensorflowbackend method)": [[66, "id345"], [66, "ot.backend.TensorflowBackend.maximum"]], "maximum() (ot.backend.torchbackend method)": [[66, "id421"], [66, "ot.backend.TorchBackend.maximum"]], "mean() (ot.backend.backend method)": [[66, "id41"], [66, "ot.backend.Backend.mean"]], "mean() (ot.backend.cupybackend method)": [[66, "id118"], [66, "ot.backend.CupyBackend.mean"]], "mean() (ot.backend.jaxbackend method)": [[66, "id194"], [66, "ot.backend.JaxBackend.mean"]], "mean() (ot.backend.numpybackend method)": [[66, "id270"], [66, "ot.backend.NumpyBackend.mean"]], "mean() (ot.backend.tensorflowbackend method)": [[66, "id346"], [66, "ot.backend.TensorflowBackend.mean"]], "mean() (ot.backend.torchbackend method)": [[66, "id422"], [66, "ot.backend.TorchBackend.mean"]], "meshgrid() (ot.backend.backend method)": [[66, "id42"], [66, "ot.backend.Backend.meshgrid"]], "meshgrid() (ot.backend.cupybackend method)": [[66, "id119"], [66, "ot.backend.CupyBackend.meshgrid"]], "meshgrid() (ot.backend.jaxbackend method)": [[66, "id195"], [66, "ot.backend.JaxBackend.meshgrid"]], "meshgrid() (ot.backend.numpybackend method)": [[66, "id271"], [66, "ot.backend.NumpyBackend.meshgrid"]], "meshgrid() (ot.backend.tensorflowbackend method)": [[66, "id347"], [66, "ot.backend.TensorflowBackend.meshgrid"]], "meshgrid() (ot.backend.torchbackend method)": [[66, "id423"], [66, "ot.backend.TorchBackend.meshgrid"]], "min() (ot.backend.backend method)": [[66, "id43"], [66, "ot.backend.Backend.min"]], "min() (ot.backend.cupybackend method)": [[66, "id120"], [66, "ot.backend.CupyBackend.min"]], "min() (ot.backend.jaxbackend method)": [[66, "id196"], [66, "ot.backend.JaxBackend.min"]], "min() (ot.backend.numpybackend method)": [[66, "id272"], [66, "ot.backend.NumpyBackend.min"]], "min() (ot.backend.tensorflowbackend method)": [[66, "id348"], [66, "ot.backend.TensorflowBackend.min"]], "min() (ot.backend.torchbackend method)": [[66, "id424"], [66, "ot.backend.TorchBackend.min"]], "minimum() (ot.backend.backend method)": [[66, "id44"], [66, "ot.backend.Backend.minimum"]], "minimum() (ot.backend.cupybackend method)": [[66, "id121"], [66, "ot.backend.CupyBackend.minimum"]], "minimum() (ot.backend.jaxbackend method)": [[66, "id197"], [66, "ot.backend.JaxBackend.minimum"]], "minimum() (ot.backend.numpybackend method)": [[66, "id273"], [66, "ot.backend.NumpyBackend.minimum"]], "minimum() (ot.backend.tensorflowbackend method)": [[66, "id349"], [66, "ot.backend.TensorflowBackend.minimum"]], "minimum() (ot.backend.torchbackend method)": [[66, "id425"], [66, "ot.backend.TorchBackend.minimum"]], "norm() (ot.backend.backend method)": [[66, "id45"], [66, "ot.backend.Backend.norm"]], "norm() (ot.backend.cupybackend method)": [[66, "id122"], [66, "ot.backend.CupyBackend.norm"]], "norm() (ot.backend.jaxbackend method)": [[66, "id198"], [66, "ot.backend.JaxBackend.norm"]], "norm() (ot.backend.numpybackend method)": [[66, "id274"], [66, "ot.backend.NumpyBackend.norm"]], "norm() (ot.backend.tensorflowbackend method)": [[66, "id350"], [66, "ot.backend.TensorflowBackend.norm"]], "norm() (ot.backend.torchbackend method)": [[66, "id426"], [66, "ot.backend.TorchBackend.norm"]], "ones() (ot.backend.backend method)": [[66, "id46"], [66, "ot.backend.Backend.ones"]], "ones() (ot.backend.cupybackend method)": [[66, "id123"], [66, "ot.backend.CupyBackend.ones"]], "ones() (ot.backend.jaxbackend method)": [[66, "id199"], [66, "ot.backend.JaxBackend.ones"]], "ones() (ot.backend.numpybackend method)": [[66, "id275"], [66, "ot.backend.NumpyBackend.ones"]], "ones() (ot.backend.tensorflowbackend method)": [[66, "id351"], [66, "ot.backend.TensorflowBackend.ones"]], "ones() (ot.backend.torchbackend method)": [[66, "id427"], [66, "ot.backend.TorchBackend.ones"]], "ot.backend": [[66, "module-ot.backend"]], "outer() (ot.backend.backend method)": [[66, "id47"], [66, "ot.backend.Backend.outer"]], "outer() (ot.backend.cupybackend method)": [[66, "id124"], [66, "ot.backend.CupyBackend.outer"]], "outer() (ot.backend.jaxbackend method)": [[66, "id200"], [66, "ot.backend.JaxBackend.outer"]], "outer() (ot.backend.numpybackend method)": [[66, "id276"], [66, "ot.backend.NumpyBackend.outer"]], "outer() (ot.backend.tensorflowbackend method)": [[66, "id352"], [66, "ot.backend.TensorflowBackend.outer"]], "outer() (ot.backend.torchbackend method)": [[66, "id428"], [66, "ot.backend.TorchBackend.outer"]], "power() (ot.backend.backend method)": [[66, "id48"], [66, "ot.backend.Backend.power"]], "power() (ot.backend.cupybackend method)": [[66, "id125"], [66, "ot.backend.CupyBackend.power"]], "power() (ot.backend.jaxbackend method)": [[66, "id201"], [66, "ot.backend.JaxBackend.power"]], "power() (ot.backend.numpybackend method)": [[66, "id277"], [66, "ot.backend.NumpyBackend.power"]], "power() (ot.backend.tensorflowbackend method)": [[66, "id353"], [66, "ot.backend.TensorflowBackend.power"]], "power() (ot.backend.torchbackend method)": [[66, "id429"], [66, "ot.backend.TorchBackend.power"]], "prod() (ot.backend.backend method)": [[66, "id49"], [66, "ot.backend.Backend.prod"]], "prod() (ot.backend.cupybackend method)": [[66, "id126"], [66, "ot.backend.CupyBackend.prod"]], "prod() (ot.backend.jaxbackend method)": [[66, "id202"], [66, "ot.backend.JaxBackend.prod"]], "prod() (ot.backend.numpybackend method)": [[66, "id278"], [66, "ot.backend.NumpyBackend.prod"]], "prod() (ot.backend.tensorflowbackend method)": [[66, "id354"], [66, "ot.backend.TensorflowBackend.prod"]], "prod() (ot.backend.torchbackend method)": [[66, "id430"], [66, "ot.backend.TorchBackend.prod"]], "qr() (ot.backend.backend method)": [[66, "id50"], [66, "ot.backend.Backend.qr"]], "qr() (ot.backend.cupybackend method)": [[66, "id127"], [66, "ot.backend.CupyBackend.qr"]], "qr() (ot.backend.jaxbackend method)": [[66, "id203"], [66, "ot.backend.JaxBackend.qr"]], "qr() (ot.backend.numpybackend method)": [[66, "id279"], [66, "ot.backend.NumpyBackend.qr"]], "qr() (ot.backend.tensorflowbackend method)": [[66, "id355"], [66, "ot.backend.TensorflowBackend.qr"]], "qr() (ot.backend.torchbackend method)": [[66, "id431"], [66, "ot.backend.TorchBackend.qr"]], "rand() (ot.backend.backend method)": [[66, "id51"], [66, "ot.backend.Backend.rand"]], "rand() (ot.backend.cupybackend method)": [[66, "id128"], [66, "ot.backend.CupyBackend.rand"]], "rand() (ot.backend.jaxbackend method)": [[66, "id204"], [66, "ot.backend.JaxBackend.rand"]], "rand() (ot.backend.numpybackend method)": [[66, "id280"], [66, "ot.backend.NumpyBackend.rand"]], "rand() (ot.backend.tensorflowbackend method)": [[66, "id356"], [66, "ot.backend.TensorflowBackend.rand"]], "rand() (ot.backend.torchbackend method)": [[66, "id432"], [66, "ot.backend.TorchBackend.rand"]], "randn() (ot.backend.backend method)": [[66, "id52"], [66, "ot.backend.Backend.randn"]], "randn() (ot.backend.cupybackend method)": [[66, "id129"], [66, "ot.backend.CupyBackend.randn"]], "randn() (ot.backend.jaxbackend method)": [[66, "id205"], [66, "ot.backend.JaxBackend.randn"]], "randn() (ot.backend.numpybackend method)": [[66, "id281"], [66, "ot.backend.NumpyBackend.randn"]], "randn() (ot.backend.tensorflowbackend method)": [[66, "id357"], [66, "ot.backend.TensorflowBackend.randn"]], "randn() (ot.backend.torchbackend method)": [[66, "id433"], [66, "ot.backend.TorchBackend.randn"]], "repeat() (ot.backend.backend method)": [[66, "id53"], [66, "ot.backend.Backend.repeat"]], "repeat() (ot.backend.cupybackend method)": [[66, "id130"], [66, "ot.backend.CupyBackend.repeat"]], "repeat() (ot.backend.jaxbackend method)": [[66, "id206"], [66, "ot.backend.JaxBackend.repeat"]], "repeat() (ot.backend.numpybackend method)": [[66, "id282"], [66, "ot.backend.NumpyBackend.repeat"]], "repeat() (ot.backend.tensorflowbackend method)": [[66, "id358"], [66, "ot.backend.TensorflowBackend.repeat"]], "repeat() (ot.backend.torchbackend method)": [[66, "id434"], [66, "ot.backend.TorchBackend.repeat"]], "reshape() (ot.backend.backend method)": [[66, "id54"], [66, "ot.backend.Backend.reshape"]], "reshape() (ot.backend.cupybackend method)": [[66, "id131"], [66, "ot.backend.CupyBackend.reshape"]], "reshape() (ot.backend.jaxbackend method)": [[66, "id207"], [66, "ot.backend.JaxBackend.reshape"]], "reshape() (ot.backend.numpybackend method)": [[66, "id283"], [66, "ot.backend.NumpyBackend.reshape"]], "reshape() (ot.backend.tensorflowbackend method)": [[66, "id359"], [66, "ot.backend.TensorflowBackend.reshape"]], "reshape() (ot.backend.torchbackend method)": [[66, "id435"], [66, "ot.backend.TorchBackend.reshape"]], "searchsorted() (ot.backend.backend method)": [[66, "id55"], [66, "ot.backend.Backend.searchsorted"]], "searchsorted() (ot.backend.cupybackend method)": [[66, "id132"], [66, "ot.backend.CupyBackend.searchsorted"]], "searchsorted() (ot.backend.jaxbackend method)": [[66, "id208"], [66, "ot.backend.JaxBackend.searchsorted"]], "searchsorted() (ot.backend.numpybackend method)": [[66, "id284"], [66, "ot.backend.NumpyBackend.searchsorted"]], "searchsorted() (ot.backend.tensorflowbackend method)": [[66, "id360"], [66, "ot.backend.TensorflowBackend.searchsorted"]], "searchsorted() (ot.backend.torchbackend method)": [[66, "id436"], [66, "ot.backend.TorchBackend.searchsorted"]], "seed() (ot.backend.backend method)": [[66, "id56"], [66, "ot.backend.Backend.seed"]], "seed() (ot.backend.cupybackend method)": [[66, "id133"], [66, "ot.backend.CupyBackend.seed"]], "seed() (ot.backend.jaxbackend method)": [[66, "id209"], [66, "ot.backend.JaxBackend.seed"]], "seed() (ot.backend.numpybackend method)": [[66, "id285"], [66, "ot.backend.NumpyBackend.seed"]], "seed() (ot.backend.tensorflowbackend method)": [[66, "id361"], [66, "ot.backend.TensorflowBackend.seed"]], "seed() (ot.backend.torchbackend method)": [[66, "id437"], [66, "ot.backend.TorchBackend.seed"]], "set_gradients() (ot.backend.backend method)": [[66, "id57"], [66, "ot.backend.Backend.set_gradients"]], "set_gradients() (ot.backend.cupybackend method)": [[66, "id134"], [66, "ot.backend.CupyBackend.set_gradients"]], "set_gradients() (ot.backend.jaxbackend method)": [[66, "id210"], [66, "ot.backend.JaxBackend.set_gradients"]], "set_gradients() (ot.backend.numpybackend method)": [[66, "id286"], [66, "ot.backend.NumpyBackend.set_gradients"]], "set_gradients() (ot.backend.tensorflowbackend method)": [[66, "id362"], [66, "ot.backend.TensorflowBackend.set_gradients"]], "set_gradients() (ot.backend.torchbackend method)": [[66, "id438"], [66, "ot.backend.TorchBackend.set_gradients"]], "solve() (ot.backend.backend method)": [[66, "id58"], [66, "ot.backend.Backend.solve"]], "solve() (ot.backend.cupybackend method)": [[66, "id135"], [66, "ot.backend.CupyBackend.solve"]], "solve() (ot.backend.jaxbackend method)": [[66, "id211"], [66, "ot.backend.JaxBackend.solve"]], "solve() (ot.backend.numpybackend method)": [[66, "id287"], [66, "ot.backend.NumpyBackend.solve"]], "solve() (ot.backend.tensorflowbackend method)": [[66, "id363"], [66, "ot.backend.TensorflowBackend.solve"]], "solve() (ot.backend.torchbackend method)": [[66, "id439"], [66, "ot.backend.TorchBackend.solve"]], "sort() (ot.backend.backend method)": [[66, "id59"], [66, "ot.backend.Backend.sort"]], "sort() (ot.backend.cupybackend method)": [[66, "id136"], [66, "ot.backend.CupyBackend.sort"]], "sort() (ot.backend.jaxbackend method)": [[66, "id212"], [66, "ot.backend.JaxBackend.sort"]], "sort() (ot.backend.numpybackend method)": [[66, "id288"], [66, "ot.backend.NumpyBackend.sort"]], "sort() (ot.backend.tensorflowbackend method)": [[66, "id364"], [66, "ot.backend.TensorflowBackend.sort"]], "sort() (ot.backend.torchbackend method)": [[66, "id440"], [66, "ot.backend.TorchBackend.sort"]], "sort2() (ot.backend.backend method)": [[66, "id60"], [66, "ot.backend.Backend.sort2"]], "sort2() (ot.backend.cupybackend method)": [[66, "id137"], [66, "ot.backend.CupyBackend.sort2"]], "sort2() (ot.backend.jaxbackend method)": [[66, "id213"], [66, "ot.backend.JaxBackend.sort2"]], "sort2() (ot.backend.numpybackend method)": [[66, "id289"], [66, "ot.backend.NumpyBackend.sort2"]], "sort2() (ot.backend.tensorflowbackend method)": [[66, "id365"], [66, "ot.backend.TensorflowBackend.sort2"]], "sort2() (ot.backend.torchbackend method)": [[66, "id441"], [66, "ot.backend.TorchBackend.sort2"]], "sqrt() (ot.backend.backend method)": [[66, "id61"], [66, "ot.backend.Backend.sqrt"]], "sqrt() (ot.backend.cupybackend method)": [[66, "id138"], [66, "ot.backend.CupyBackend.sqrt"]], "sqrt() (ot.backend.jaxbackend method)": [[66, "id214"], [66, "ot.backend.JaxBackend.sqrt"]], "sqrt() (ot.backend.numpybackend method)": [[66, "id290"], [66, "ot.backend.NumpyBackend.sqrt"]], "sqrt() (ot.backend.tensorflowbackend method)": [[66, "id366"], [66, "ot.backend.TensorflowBackend.sqrt"]], "sqrt() (ot.backend.torchbackend method)": [[66, "id442"], [66, "ot.backend.TorchBackend.sqrt"]], "sqrtm() (ot.backend.backend method)": [[66, "id62"], [66, "ot.backend.Backend.sqrtm"]], "sqrtm() (ot.backend.cupybackend method)": [[66, "id139"], [66, "ot.backend.CupyBackend.sqrtm"]], "sqrtm() (ot.backend.jaxbackend method)": [[66, "id215"], [66, "ot.backend.JaxBackend.sqrtm"]], "sqrtm() (ot.backend.numpybackend method)": [[66, "id291"], [66, "ot.backend.NumpyBackend.sqrtm"]], "sqrtm() (ot.backend.tensorflowbackend method)": [[66, "id367"], [66, "ot.backend.TensorflowBackend.sqrtm"]], "sqrtm() (ot.backend.torchbackend method)": [[66, "id443"], [66, "ot.backend.TorchBackend.sqrtm"]], "squeeze() (ot.backend.backend method)": [[66, "id63"], [66, "ot.backend.Backend.squeeze"]], "squeeze() (ot.backend.cupybackend method)": [[66, "id140"], [66, "ot.backend.CupyBackend.squeeze"]], "squeeze() (ot.backend.jaxbackend method)": [[66, "id216"], [66, "ot.backend.JaxBackend.squeeze"]], "squeeze() (ot.backend.numpybackend method)": [[66, "id292"], [66, "ot.backend.NumpyBackend.squeeze"]], "squeeze() (ot.backend.tensorflowbackend method)": [[66, "id368"], [66, "ot.backend.TensorflowBackend.squeeze"]], "squeeze() (ot.backend.torchbackend method)": [[66, "id444"], [66, "ot.backend.TorchBackend.squeeze"]], "stack() (ot.backend.backend method)": [[66, "id64"], [66, "ot.backend.Backend.stack"]], "stack() (ot.backend.cupybackend method)": [[66, "id141"], [66, "ot.backend.CupyBackend.stack"]], "stack() (ot.backend.jaxbackend method)": [[66, "id217"], [66, "ot.backend.JaxBackend.stack"]], "stack() (ot.backend.numpybackend method)": [[66, "id293"], [66, "ot.backend.NumpyBackend.stack"]], "stack() (ot.backend.tensorflowbackend method)": [[66, "id369"], [66, "ot.backend.TensorflowBackend.stack"]], "stack() (ot.backend.torchbackend method)": [[66, "id445"], [66, "ot.backend.TorchBackend.stack"]], "std() (ot.backend.backend method)": [[66, "id65"], [66, "ot.backend.Backend.std"]], "std() (ot.backend.cupybackend method)": [[66, "id142"], [66, "ot.backend.CupyBackend.std"]], "std() (ot.backend.jaxbackend method)": [[66, "id218"], [66, "ot.backend.JaxBackend.std"]], "std() (ot.backend.numpybackend method)": [[66, "id294"], [66, "ot.backend.NumpyBackend.std"]], "std() (ot.backend.tensorflowbackend method)": [[66, "id370"], [66, "ot.backend.TensorflowBackend.std"]], "std() (ot.backend.torchbackend method)": [[66, "id446"], [66, "ot.backend.TorchBackend.std"]], "sum() (ot.backend.backend method)": [[66, "id66"], [66, "ot.backend.Backend.sum"]], "sum() (ot.backend.cupybackend method)": [[66, "id143"], [66, "ot.backend.CupyBackend.sum"]], "sum() (ot.backend.jaxbackend method)": [[66, "id219"], [66, "ot.backend.JaxBackend.sum"]], "sum() (ot.backend.numpybackend method)": [[66, "id295"], [66, "ot.backend.NumpyBackend.sum"]], "sum() (ot.backend.tensorflowbackend method)": [[66, "id371"], [66, "ot.backend.TensorflowBackend.sum"]], "sum() (ot.backend.torchbackend method)": [[66, "id447"], [66, "ot.backend.TorchBackend.sum"]], "take_along_axis() (ot.backend.backend method)": [[66, "id67"], [66, "ot.backend.Backend.take_along_axis"]], "take_along_axis() (ot.backend.cupybackend method)": [[66, "id144"], [66, "ot.backend.CupyBackend.take_along_axis"]], "take_along_axis() (ot.backend.jaxbackend method)": [[66, "id220"], [66, "ot.backend.JaxBackend.take_along_axis"]], "take_along_axis() (ot.backend.numpybackend method)": [[66, "id296"], [66, "ot.backend.NumpyBackend.take_along_axis"]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[66, "id372"], [66, "ot.backend.TensorflowBackend.take_along_axis"]], "take_along_axis() (ot.backend.torchbackend method)": [[66, "id448"], [66, "ot.backend.TorchBackend.take_along_axis"]], "tile() (ot.backend.backend method)": [[66, "id68"], [66, "ot.backend.Backend.tile"]], "tile() (ot.backend.cupybackend method)": [[66, "id145"], [66, "ot.backend.CupyBackend.tile"]], "tile() (ot.backend.jaxbackend method)": [[66, "id221"], [66, "ot.backend.JaxBackend.tile"]], "tile() (ot.backend.numpybackend method)": [[66, "id297"], [66, "ot.backend.NumpyBackend.tile"]], "tile() (ot.backend.tensorflowbackend method)": [[66, "id373"], [66, "ot.backend.TensorflowBackend.tile"]], "tile() (ot.backend.torchbackend method)": [[66, "id449"], [66, "ot.backend.TorchBackend.tile"]], "to_numpy() (in module ot.backend)": [[66, "id460"], [66, "ot.backend.to_numpy"]], "to_numpy() (ot.backend.backend method)": [[66, "id69"], [66, "ot.backend.Backend.to_numpy"]], "tocsr() (ot.backend.backend method)": [[66, "id70"], [66, "ot.backend.Backend.tocsr"]], "tocsr() (ot.backend.cupybackend method)": [[66, "id146"], [66, "ot.backend.CupyBackend.tocsr"]], "tocsr() (ot.backend.jaxbackend method)": [[66, "id222"], [66, "ot.backend.JaxBackend.tocsr"]], "tocsr() (ot.backend.numpybackend method)": [[66, "id298"], [66, "ot.backend.NumpyBackend.tocsr"]], "tocsr() (ot.backend.tensorflowbackend method)": [[66, "id374"], [66, "ot.backend.TensorflowBackend.tocsr"]], "tocsr() (ot.backend.torchbackend method)": [[66, "id450"], [66, "ot.backend.TorchBackend.tocsr"]], "todense() (ot.backend.backend method)": [[66, "id71"], [66, "ot.backend.Backend.todense"]], "todense() (ot.backend.cupybackend method)": [[66, "id147"], [66, "ot.backend.CupyBackend.todense"]], "todense() (ot.backend.jaxbackend method)": [[66, "id223"], [66, "ot.backend.JaxBackend.todense"]], "todense() (ot.backend.numpybackend method)": [[66, "id299"], [66, "ot.backend.NumpyBackend.todense"]], "todense() (ot.backend.tensorflowbackend method)": [[66, "id375"], [66, "ot.backend.TensorflowBackend.todense"]], "todense() (ot.backend.torchbackend method)": [[66, "id451"], [66, "ot.backend.TorchBackend.todense"]], "trace() (ot.backend.backend method)": [[66, "id72"], [66, "ot.backend.Backend.trace"]], "trace() (ot.backend.cupybackend method)": [[66, "id148"], [66, "ot.backend.CupyBackend.trace"]], "trace() (ot.backend.jaxbackend method)": [[66, "id224"], [66, "ot.backend.JaxBackend.trace"]], "trace() (ot.backend.numpybackend method)": [[66, "id300"], [66, "ot.backend.NumpyBackend.trace"]], "trace() (ot.backend.tensorflowbackend method)": [[66, "id376"], [66, "ot.backend.TensorflowBackend.trace"]], "trace() (ot.backend.torchbackend method)": [[66, "id452"], [66, "ot.backend.TorchBackend.trace"]], "transpose() (ot.backend.backend method)": [[66, "id73"], [66, "ot.backend.Backend.transpose"]], "transpose() (ot.backend.cupybackend method)": [[66, "id149"], [66, "ot.backend.CupyBackend.transpose"]], "transpose() (ot.backend.jaxbackend method)": [[66, "id225"], [66, "ot.backend.JaxBackend.transpose"]], "transpose() (ot.backend.numpybackend method)": [[66, "id301"], [66, "ot.backend.NumpyBackend.transpose"]], "transpose() (ot.backend.tensorflowbackend method)": [[66, "id377"], [66, "ot.backend.TensorflowBackend.transpose"]], "transpose() (ot.backend.torchbackend method)": [[66, "id453"], [66, "ot.backend.TorchBackend.transpose"]], "unique() (ot.backend.backend method)": [[66, "id74"], [66, "ot.backend.Backend.unique"]], "unique() (ot.backend.cupybackend method)": [[66, "id150"], [66, "ot.backend.CupyBackend.unique"]], "unique() (ot.backend.jaxbackend method)": [[66, "id226"], [66, "ot.backend.JaxBackend.unique"]], "unique() (ot.backend.numpybackend method)": [[66, "id302"], [66, "ot.backend.NumpyBackend.unique"]], "unique() (ot.backend.tensorflowbackend method)": [[66, "id378"], [66, "ot.backend.TensorflowBackend.unique"]], "unique() (ot.backend.torchbackend method)": [[66, "id454"], [66, "ot.backend.TorchBackend.unique"]], "where() (ot.backend.backend method)": [[66, "id75"], [66, "ot.backend.Backend.where"]], "where() (ot.backend.cupybackend method)": [[66, "id151"], [66, "ot.backend.CupyBackend.where"]], "where() (ot.backend.jaxbackend method)": [[66, "id227"], [66, "ot.backend.JaxBackend.where"]], "where() (ot.backend.numpybackend method)": [[66, "id303"], [66, "ot.backend.NumpyBackend.where"]], "where() (ot.backend.tensorflowbackend method)": [[66, "id379"], [66, "ot.backend.TensorflowBackend.where"]], "where() (ot.backend.torchbackend method)": [[66, "id455"], [66, "ot.backend.TorchBackend.where"]], "zero_pad() (ot.backend.backend method)": [[66, "id76"], [66, "ot.backend.Backend.zero_pad"]], "zero_pad() (ot.backend.cupybackend method)": [[66, "id152"], [66, "ot.backend.CupyBackend.zero_pad"]], "zero_pad() (ot.backend.jaxbackend method)": [[66, "id228"], [66, "ot.backend.JaxBackend.zero_pad"]], "zero_pad() (ot.backend.numpybackend method)": [[66, "id304"], [66, "ot.backend.NumpyBackend.zero_pad"]], "zero_pad() (ot.backend.tensorflowbackend method)": [[66, "id380"], [66, "ot.backend.TensorflowBackend.zero_pad"]], "zero_pad() (ot.backend.torchbackend method)": [[66, "id456"], [66, "ot.backend.TorchBackend.zero_pad"]], "zeros() (ot.backend.backend method)": [[66, "id77"], [66, "ot.backend.Backend.zeros"]], "zeros() (ot.backend.cupybackend method)": [[66, "id153"], [66, "ot.backend.CupyBackend.zeros"]], "zeros() (ot.backend.jaxbackend method)": [[66, "id229"], [66, "ot.backend.JaxBackend.zeros"]], "zeros() (ot.backend.numpybackend method)": [[66, "id305"], [66, "ot.backend.NumpyBackend.zeros"]], "zeros() (ot.backend.tensorflowbackend method)": [[66, "id381"], [66, "ot.backend.TensorflowBackend.zeros"]], "zeros() (ot.backend.torchbackend method)": [[66, "id457"], [66, "ot.backend.TorchBackend.zeros"]], "barycenter() (in module ot.bregman)": [[67, "id0"], [67, "ot.bregman.barycenter"]], "barycenter_debiased() (in module ot.bregman)": [[67, "id43"], [67, "ot.bregman.barycenter_debiased"]], "barycenter_sinkhorn() (in module ot.bregman)": [[67, "id46"], [67, "ot.bregman.barycenter_sinkhorn"]], "barycenter_stabilized() (in module ot.bregman)": [[67, "id49"], [67, "ot.bregman.barycenter_stabilized"]], "convolutional_barycenter2d() (in module ot.bregman)": [[67, "id52"], [67, "ot.bregman.convolutional_barycenter2d"]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[67, "id56"], [67, "ot.bregman.convolutional_barycenter2d_debiased"]], "empirical_sinkhorn() (in module ot.bregman)": [[67, "id59"], [67, "ot.bregman.empirical_sinkhorn"]], "empirical_sinkhorn2() (in module ot.bregman)": [[67, "id63"], [67, "ot.bregman.empirical_sinkhorn2"]], "empirical_sinkhorn_divergence() (in module ot.bregman)": [[67, "id67"], [67, "ot.bregman.empirical_sinkhorn_divergence"]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[67, "id69"], [67, "ot.bregman.free_support_sinkhorn_barycenter"]], "geometricbar() (in module ot.bregman)": [[67, "id72"], [67, "ot.bregman.geometricBar"]], "geometricmean() (in module ot.bregman)": [[67, "id73"], [67, "ot.bregman.geometricMean"]], "greenkhorn() (in module ot.bregman)": [[67, "id74"], [67, "ot.bregman.greenkhorn"]], "jcpot_barycenter() (in module ot.bregman)": [[67, "id78"], [67, "ot.bregman.jcpot_barycenter"]], "ot.bregman": [[67, "module-ot.bregman"]], "projc() (in module ot.bregman)": [[67, "id81"], [67, "ot.bregman.projC"]], "projr() (in module ot.bregman)": [[67, "id82"], [67, "ot.bregman.projR"]], "screenkhorn() (in module ot.bregman)": [[67, "id83"], [67, "ot.bregman.screenkhorn"]], "sinkhorn() (in module ot.bregman)": [[67, "id87"], [67, "ot.bregman.sinkhorn"]], "sinkhorn2() (in module ot.bregman)": [[67, "id93"], [67, "ot.bregman.sinkhorn2"]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[67, "id100"], [67, "ot.bregman.sinkhorn_epsilon_scaling"]], "sinkhorn_knopp() (in module ot.bregman)": [[67, "id105"], [67, "ot.bregman.sinkhorn_knopp"]], "sinkhorn_log() (in module ot.bregman)": [[67, "id108"], [67, "ot.bregman.sinkhorn_log"]], "sinkhorn_stabilized() (in module ot.bregman)": [[67, "id112"], [67, "ot.bregman.sinkhorn_stabilized"]], "unmix() (in module ot.bregman)": [[67, "id117"], [67, "ot.bregman.unmix"]], "co_optimal_transport() (in module ot.coot)": [[68, "id0"], [68, "ot.coot.co_optimal_transport"]], "co_optimal_transport2() (in module ot.coot)": [[68, "id4"], [68, "ot.coot.co_optimal_transport2"]], "ot.coot": [[68, "module-ot.coot"]], "basetransport (class in ot.da)": [[69, "id0"], [69, "ot.da.BaseTransport"]], "emdlaplacetransport (class in ot.da)": [[69, "id40"], [69, "ot.da.EMDLaplaceTransport"]], "emdtransport (class in ot.da)": [[69, "id47"], [69, "ot.da.EMDTransport"]], "jcpottransport (class in ot.da)": [[69, "id53"], [69, "ot.da.JCPOTTransport"]], "lineartransport (class in ot.da)": [[69, "id66"], [69, "ot.da.LinearTransport"]], "mappingtransport (class in ot.da)": [[69, "id73"], [69, "ot.da.MappingTransport"]], "sinkhornl1l2transport (class in ot.da)": [[69, "id80"], [69, "ot.da.SinkhornL1l2Transport"]], "sinkhornlpl1transport (class in ot.da)": [[69, "id88"], [69, "ot.da.SinkhornLpl1Transport"]], "sinkhorntransport (class in ot.da)": [[69, "id95"], [69, "ot.da.SinkhornTransport"]], "unbalancedsinkhorntransport (class in ot.da)": [[69, "id103"], [69, "ot.da.UnbalancedSinkhornTransport"]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[69, "id41"], [69, "ot.da.EMDLaplaceTransport.coupling_"]], "coupling_ (ot.da.emdtransport attribute)": [[69, "id48"], [69, "ot.da.EMDTransport.coupling_"]], "coupling_ (ot.da.jcpottransport attribute)": [[69, "id54"], [69, "ot.da.JCPOTTransport.coupling_"]], "coupling_ (ot.da.mappingtransport attribute)": [[69, "id74"], [69, "ot.da.MappingTransport.coupling_"]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[69, "id81"], [69, "ot.da.SinkhornL1l2Transport.coupling_"]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[69, "id89"], [69, "ot.da.SinkhornLpl1Transport.coupling_"]], "coupling_ (ot.da.sinkhorntransport attribute)": [[69, "id96"], [69, "ot.da.SinkhornTransport.coupling_"]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[69, "id104"], [69, "ot.da.UnbalancedSinkhornTransport.coupling_"]], "distribution_estimation_uniform() (in module ot.da)": [[69, "id110"], [69, "ot.da.distribution_estimation_uniform"]], "emd_laplace() (in module ot.da)": [[69, "id111"], [69, "ot.da.emd_laplace"]], "fit() (ot.da.basetransport method)": [[69, "id32"], [69, "ot.da.BaseTransport.fit"]], "fit() (ot.da.emdlaplacetransport method)": [[69, "id46"], [69, "ot.da.EMDLaplaceTransport.fit"]], "fit() (ot.da.emdtransport method)": [[69, "id52"], [69, "ot.da.EMDTransport.fit"]], "fit() (ot.da.jcpottransport method)": [[69, "id60"], [69, "ot.da.JCPOTTransport.fit"]], "fit() (ot.da.lineartransport method)": [[69, "id70"], [69, "ot.da.LinearTransport.fit"]], "fit() (ot.da.mappingtransport method)": [[69, "id78"], [69, "ot.da.MappingTransport.fit"]], "fit() (ot.da.sinkhornl1l2transport method)": [[69, "id87"], [69, "ot.da.SinkhornL1l2Transport.fit"]], "fit() (ot.da.sinkhornlpl1transport method)": [[69, "id94"], [69, "ot.da.SinkhornLpl1Transport.fit"]], "fit() (ot.da.sinkhorntransport method)": [[69, "id102"], [69, "ot.da.SinkhornTransport.fit"]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[69, "id109"], [69, "ot.da.UnbalancedSinkhornTransport.fit"]], "fit_transform() (ot.da.basetransport method)": [[69, "id33"], [69, "ot.da.BaseTransport.fit_transform"]], "inverse_transform() (ot.da.basetransport method)": [[69, "id34"], [69, "ot.da.BaseTransport.inverse_transform"]], "inverse_transform() (ot.da.lineartransport method)": [[69, "id71"], [69, "ot.da.LinearTransport.inverse_transform"]], "inverse_transform_labels() (ot.da.basetransport method)": [[69, "id35"], [69, "ot.da.BaseTransport.inverse_transform_labels"]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[69, "id61"], [69, "ot.da.JCPOTTransport.inverse_transform_labels"]], "joint_ot_mapping_kernel() (in module ot.da)": [[69, "id115"], [69, "ot.da.joint_OT_mapping_kernel"]], "joint_ot_mapping_linear() (in module ot.da)": [[69, "id118"], [69, "ot.da.joint_OT_mapping_linear"]], "log_ (ot.da.jcpottransport attribute)": [[69, "id56"], [69, "ot.da.JCPOTTransport.log_"]], "log_ (ot.da.mappingtransport attribute)": [[69, "id76"], [69, "ot.da.MappingTransport.log_"]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[69, "id82"], [69, "ot.da.SinkhornL1l2Transport.log_"]], "log_ (ot.da.sinkhorntransport attribute)": [[69, "id97"], [69, "ot.da.SinkhornTransport.log_"]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[69, "id105"], [69, "ot.da.UnbalancedSinkhornTransport.log_"]], "mapping_ (ot.da.mappingtransport attribute)": [[69, "id75"], [69, "ot.da.MappingTransport.mapping_"]], "ot.da": [[69, "module-ot.da"]], "proportions_ (ot.da.jcpottransport attribute)": [[69, "id55"], [69, "ot.da.JCPOTTransport.proportions_"]], "sinkhorn_l1l2_gl() (in module ot.da)": [[69, "id121"], [69, "ot.da.sinkhorn_l1l2_gl"]], "sinkhorn_lpl1_mm() (in module ot.da)": [[69, "id125"], [69, "ot.da.sinkhorn_lpl1_mm"]], "transform() (ot.da.basetransport method)": [[69, "id36"], [69, "ot.da.BaseTransport.transform"]], "transform() (ot.da.jcpottransport method)": [[69, "id62"], [69, "ot.da.JCPOTTransport.transform"]], "transform() (ot.da.lineartransport method)": [[69, "id72"], [69, "ot.da.LinearTransport.transform"]], "transform() (ot.da.mappingtransport method)": [[69, "id79"], [69, "ot.da.MappingTransport.transform"]], "transform_labels() (ot.da.basetransport method)": [[69, "id37"], [69, "ot.da.BaseTransport.transform_labels"]], "transform_labels() (ot.da.jcpottransport method)": [[69, "id63"], [69, "ot.da.JCPOTTransport.transform_labels"]], "make_1d_gauss() (in module ot.datasets)": [[70, "id0"], [70, "ot.datasets.make_1D_gauss"]], "make_2d_samples_gauss() (in module ot.datasets)": [[70, "id1"], [70, "ot.datasets.make_2D_samples_gauss"]], "make_data_classif() (in module ot.datasets)": [[70, "id2"], [70, "ot.datasets.make_data_classif"]], "ot.datasets": [[70, "module-ot.datasets"]], "dist() (in module ot.dr)": [[71, "id0"], [71, "ot.dr.dist"]], "fda() (in module ot.dr)": [[71, "id3"], [71, "ot.dr.fda"]], "logsumexp() (in module ot.dr)": [[71, "id4"], [71, "ot.dr.logsumexp"]], "ot.dr": [[71, "module-ot.dr"]], "projection_robust_wasserstein() (in module ot.dr)": [[71, "id5"], [71, "ot.dr.projection_robust_wasserstein"]], "sinkhorn() (in module ot.dr)": [[71, "id8"], [71, "ot.dr.sinkhorn"]], "sinkhorn_log() (in module ot.dr)": [[71, "id9"], [71, "ot.dr.sinkhorn_log"]], "split_classes() (in module ot.dr)": [[71, "id10"], [71, "ot.dr.split_classes"]], "wda() (in module ot.dr)": [[71, "id11"], [71, "ot.dr.wda"]], "factored_optimal_transport() (in module ot.factored)": [[72, "id0"], [72, "ot.factored.factored_optimal_transport"]], "ot.factored": [[72, "module-ot.factored"]], "bures_wasserstein_distance() (in module ot.gaussian)": [[73, "id0"], [73, "ot.gaussian.bures_wasserstein_distance"]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[73, "id11"], [73, "ot.gaussian.bures_wasserstein_mapping"]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[73, "id15"], [73, "ot.gaussian.empirical_bures_wasserstein_distance"]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[73, "id18"], [73, "ot.gaussian.empirical_bures_wasserstein_mapping"]], "ot.gaussian": [[73, "module-ot.gaussian"]], "gw_distance_estimation() (in module ot.gromov)": [[74, "ot.gromov.GW_distance_estimation"]], "entropic_gromov_barycenters() (in module ot.gromov)": [[74, "ot.gromov.entropic_gromov_barycenters"]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.entropic_gromov_wasserstein"]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[74, "ot.gromov.entropic_gromov_wasserstein2"]], "fgw_barycenters() (in module ot.gromov)": [[74, "ot.gromov.fgw_barycenters"]], "fused_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[74, "ot.gromov.fused_gromov_wasserstein2"]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[74, "ot.gromov.fused_gromov_wasserstein_dictionary_learning"]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[74, "ot.gromov.fused_gromov_wasserstein_linear_unmixing"]], "gromov_barycenters() (in module ot.gromov)": [[74, "ot.gromov.gromov_barycenters"]], "gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot.gromov)": [[74, "ot.gromov.gromov_wasserstein2"]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[74, "ot.gromov.gromov_wasserstein_dictionary_learning"]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[74, "ot.gromov.gromov_wasserstein_linear_unmixing"]], "gwggrad() (in module ot.gromov)": [[74, "ot.gromov.gwggrad"]], "gwloss() (in module ot.gromov)": [[74, "ot.gromov.gwloss"]], "init_matrix() (in module ot.gromov)": [[74, "ot.gromov.init_matrix"]], "init_matrix_semirelaxed() (in module ot.gromov)": [[74, "ot.gromov.init_matrix_semirelaxed"]], "ot.gromov": [[74, "module-ot.gromov"]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.pointwise_gromov_wasserstein"]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.sampled_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.semirelaxed_fused_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[74, "ot.gromov.semirelaxed_fused_gromov_wasserstein2"]], "semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.semirelaxed_gromov_wasserstein"]], "semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[74, "ot.gromov.semirelaxed_gromov_wasserstein2"]], "solve_gromov_linesearch() (in module ot.gromov)": [[74, "ot.gromov.solve_gromov_linesearch"]], "solve_semirelaxed_gromov_linesearch() (in module ot.gromov)": [[74, "ot.gromov.solve_semirelaxed_gromov_linesearch"]], "tensor_product() (in module ot.gromov)": [[74, "ot.gromov.tensor_product"]], "update_feature_matrix() (in module ot.gromov)": [[74, "ot.gromov.update_feature_matrix"]], "update_kl_loss() (in module ot.gromov)": [[74, "ot.gromov.update_kl_loss"]], "update_square_loss() (in module ot.gromov)": [[74, "ot.gromov.update_square_loss"]], "update_structure_matrix() (in module ot.gromov)": [[74, "ot.gromov.update_structure_matrix"]], "barycenter() (in module ot.lp)": [[75, "ot.lp.barycenter"]], "binary_search_circle() (in module ot.lp)": [[75, "ot.lp.binary_search_circle"]], "center_ot_dual() (in module ot.lp)": [[75, "ot.lp.center_ot_dual"]], "check_number_threads() (in module ot.lp)": [[75, "ot.lp.check_number_threads"]], "emd() (in module ot.lp)": [[75, "id0"], [75, "ot.lp.emd"]], "emd2() (in module ot.lp)": [[75, "id11"], [75, "ot.lp.emd2"]], "emd2_1d() (in module ot.lp)": [[75, "ot.lp.emd2_1d"]], "emd_1d() (in module ot.lp)": [[75, "ot.lp.emd_1d"]], "estimate_dual_null_weights() (in module ot.lp)": [[75, "ot.lp.estimate_dual_null_weights"]], "free_support_barycenter() (in module ot.lp)": [[75, "id18"], [75, "ot.lp.free_support_barycenter"]], "generalized_free_support_barycenter() (in module ot.lp)": [[75, "id22"], [75, "ot.lp.generalized_free_support_barycenter"]], "ot.lp": [[75, "module-ot.lp"]], "semidiscrete_wasserstein2_unif_circle() (in module ot.lp)": [[75, "ot.lp.semidiscrete_wasserstein2_unif_circle"]], "wasserstein_1d() (in module ot.lp)": [[75, "ot.lp.wasserstein_1d"]], "wasserstein_circle() (in module ot.lp)": [[75, "ot.lp.wasserstein_circle"]], "cg() (in module ot.optim)": [[76, "id0"], [76, "ot.optim.cg"]], "gcg() (in module ot.optim)": [[76, "id13"], [76, "ot.optim.gcg"]], "generic_conditional_gradient() (in module ot.optim)": [[76, "id17"], [76, "ot.optim.generic_conditional_gradient"]], "line_search_armijo() (in module ot.optim)": [[76, "id23"], [76, "ot.optim.line_search_armijo"]], "ot.optim": [[76, "module-ot.optim"]], "semirelaxed_cg() (in module ot.optim)": [[76, "id24"], [76, "ot.optim.semirelaxed_cg"]], "solve_1d_linesearch_quad() (in module ot.optim)": [[76, "id27"], [76, "ot.optim.solve_1d_linesearch_quad"]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[77, "id0"], [77, "ot.partial.entropic_partial_gromov_wasserstein"]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[77, "id17"], [77, "ot.partial.entropic_partial_gromov_wasserstein2"]], "entropic_partial_wasserstein() (in module ot.partial)": [[77, "id21"], [77, "ot.partial.entropic_partial_wasserstein"]], "gwgrad_partial() (in module ot.partial)": [[77, "id24"], [77, "ot.partial.gwgrad_partial"]], "gwloss_partial() (in module ot.partial)": [[77, "id27"], [77, "ot.partial.gwloss_partial"]], "ot.partial": [[77, "module-ot.partial"]], "partial_gromov_wasserstein() (in module ot.partial)": [[77, "id28"], [77, "ot.partial.partial_gromov_wasserstein"]], "partial_gromov_wasserstein2() (in module ot.partial)": [[77, "id31"], [77, "ot.partial.partial_gromov_wasserstein2"]], "partial_wasserstein() (in module ot.partial)": [[77, "id34"], [77, "ot.partial.partial_wasserstein"]], "partial_wasserstein2() (in module ot.partial)": [[77, "id37"], [77, "ot.partial.partial_wasserstein2"]], "partial_wasserstein_lagrange() (in module ot.partial)": [[77, "id40"], [77, "ot.partial.partial_wasserstein_lagrange"]], "ot.plot": [[78, "module-ot.plot"]], "plot1d_mat() (in module ot.plot)": [[78, "id0"], [78, "ot.plot.plot1D_mat"]], "plot2d_samples_mat() (in module ot.plot)": [[78, "id1"], [78, "ot.plot.plot2D_samples_mat"]], "complement_schur() (in module ot.regpath)": [[79, "id0"], [79, "ot.regpath.complement_schur"]], "compute_next_removal() (in module ot.regpath)": [[79, "id12"], [79, "ot.regpath.compute_next_removal"]], "compute_transport_plan() (in module ot.regpath)": [[79, "id15"], [79, "ot.regpath.compute_transport_plan"]], "construct_augmented_h() (in module ot.regpath)": [[79, "id18"], [79, "ot.regpath.construct_augmented_H"]], "fully_relaxed_path() (in module ot.regpath)": [[79, "id19"], [79, "ot.regpath.fully_relaxed_path"]], "ot.regpath": [[79, "module-ot.regpath"]], "ot_next_gamma() (in module ot.regpath)": [[79, "id21"], [79, "ot.regpath.ot_next_gamma"]], "recast_ot_as_lasso() (in module ot.regpath)": [[79, "id23"], [79, "ot.regpath.recast_ot_as_lasso"]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[79, "id25"], [79, "ot.regpath.recast_semi_relaxed_as_lasso"]], "regularization_path() (in module ot.regpath)": [[79, "id26"], [79, "ot.regpath.regularization_path"]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[79, "id28"], [79, "ot.regpath.semi_relaxed_next_gamma"]], "semi_relaxed_path() (in module ot.regpath)": [[79, "id30"], [79, "ot.regpath.semi_relaxed_path"]], "get_random_projections() (in module ot.sliced)": [[80, "id0"], [80, "ot.sliced.get_random_projections"]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[80, "id5"], [80, "ot.sliced.max_sliced_wasserstein_distance"]], "ot.sliced": [[80, "module-ot.sliced"]], "sliced_wasserstein_distance() (in module ot.sliced)": [[80, "id7"], [80, "ot.sliced.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[80, "id9"], [80, "ot.sliced.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[80, "id11"], [80, "ot.sliced.sliced_wasserstein_sphere_unif"]], "negentropy (class in ot.smooth)": [[81, "id0"], [81, "ot.smooth.NegEntropy"]], "omega() (ot.smooth.negentropy method)": [[81, "id5"], [81, "ot.smooth.NegEntropy.Omega"]], "omega() (ot.smooth.regularization method)": [[81, "id9"], [81, "ot.smooth.Regularization.Omega"]], "omega() (ot.smooth.squaredl2 method)": [[81, "id13"], [81, "ot.smooth.SquaredL2.Omega"]], "regularization (class in ot.smooth)": [[81, "id8"], [81, "ot.smooth.Regularization"]], "squaredl2 (class in ot.smooth)": [[81, "id12"], [81, "ot.smooth.SquaredL2"]], "delta_omega() (ot.smooth.negentropy method)": [[81, "id6"], [81, "ot.smooth.NegEntropy.delta_Omega"]], "delta_omega() (ot.smooth.regularization method)": [[81, "id10"], [81, "ot.smooth.Regularization.delta_Omega"]], "delta_omega() (ot.smooth.squaredl2 method)": [[81, "id14"], [81, "ot.smooth.SquaredL2.delta_Omega"]], "dual_obj_grad() (in module ot.smooth)": [[81, "id16"], [81, "ot.smooth.dual_obj_grad"]], "get_plan_from_dual() (in module ot.smooth)": [[81, "id17"], [81, "ot.smooth.get_plan_from_dual"]], "get_plan_from_semi_dual() (in module ot.smooth)": [[81, "id18"], [81, "ot.smooth.get_plan_from_semi_dual"]], "max_omega() (ot.smooth.negentropy method)": [[81, "id7"], [81, "ot.smooth.NegEntropy.max_Omega"]], "max_omega() (ot.smooth.regularization method)": [[81, "id11"], [81, "ot.smooth.Regularization.max_Omega"]], "max_omega() (ot.smooth.squaredl2 method)": [[81, "id15"], [81, "ot.smooth.SquaredL2.max_Omega"]], "ot.smooth": [[81, "module-ot.smooth"]], "projection_simplex() (in module ot.smooth)": [[81, "id19"], [81, "ot.smooth.projection_simplex"]], "semi_dual_obj_grad() (in module ot.smooth)": [[81, "id20"], [81, "ot.smooth.semi_dual_obj_grad"]], "smooth_ot_dual() (in module ot.smooth)": [[81, "id21"], [81, "ot.smooth.smooth_ot_dual"]], "smooth_ot_semi_dual() (in module ot.smooth)": [[81, "id25"], [81, "ot.smooth.smooth_ot_semi_dual"]], "solve_dual() (in module ot.smooth)": [[81, "id29"], [81, "ot.smooth.solve_dual"]], "solve_semi_dual() (in module ot.smooth)": [[81, "id30"], [81, "ot.smooth.solve_semi_dual"]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[82, "id0"], [82, "ot.stochastic.averaged_sgd_entropic_transport"]], "batch_grad_dual() (in module ot.stochastic)": [[82, "id15"], [82, "ot.stochastic.batch_grad_dual"]], "c_transform_entropic() (in module ot.stochastic)": [[82, "id18"], [82, "ot.stochastic.c_transform_entropic"]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[82, "id21"], [82, "ot.stochastic.coordinate_grad_semi_dual"]], "loss_dual_entropic() (in module ot.stochastic)": [[82, "id24"], [82, "ot.stochastic.loss_dual_entropic"]], "loss_dual_quadratic() (in module ot.stochastic)": [[82, "id26"], [82, "ot.stochastic.loss_dual_quadratic"]], "ot.stochastic": [[82, "module-ot.stochastic"]], "plan_dual_entropic() (in module ot.stochastic)": [[82, "id28"], [82, "ot.stochastic.plan_dual_entropic"]], "plan_dual_quadratic() (in module ot.stochastic)": [[82, "id30"], [82, "ot.stochastic.plan_dual_quadratic"]], "sag_entropic_transport() (in module ot.stochastic)": [[82, "id32"], [82, "ot.stochastic.sag_entropic_transport"]], "sgd_entropic_regularization() (in module ot.stochastic)": [[82, "id35"], [82, "ot.stochastic.sgd_entropic_regularization"]], "solve_dual_entropic() (in module ot.stochastic)": [[82, "id37"], [82, "ot.stochastic.solve_dual_entropic"]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[82, "id39"], [82, "ot.stochastic.solve_semi_dual_entropic"]], "barycenter_unbalanced() (in module ot.unbalanced)": [[83, "id0"], [83, "ot.unbalanced.barycenter_unbalanced"]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[83, "id25"], [83, "ot.unbalanced.barycenter_unbalanced_sinkhorn"]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[83, "id29"], [83, "ot.unbalanced.barycenter_unbalanced_stabilized"]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[83, "id33"], [83, "ot.unbalanced.lbfgsb_unbalanced"]], "mm_unbalanced() (in module ot.unbalanced)": [[83, "id35"], [83, "ot.unbalanced.mm_unbalanced"]], "mm_unbalanced2() (in module ot.unbalanced)": [[83, "id38"], [83, "ot.unbalanced.mm_unbalanced2"]], "ot.unbalanced": [[83, "module-ot.unbalanced"]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[83, "id40"], [83, "ot.unbalanced.sinkhorn_knopp_unbalanced"]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[83, "id44"], [83, "ot.unbalanced.sinkhorn_stabilized_unbalanced"]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[83, "id48"], [83, "ot.unbalanced.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[83, "id54"], [83, "ot.unbalanced.sinkhorn_unbalanced2"]], "baseestimator (class in ot.utils)": [[84, "id0"], [84, "ot.utils.BaseEstimator"]], "otresult (class in ot.utils)": [[84, "ot.utils.OTResult"]], "undefinedparameter": [[84, "ot.utils.UndefinedParameter"]], "a_to_b (ot.utils.otresult property)": [[84, "ot.utils.OTResult.a_to_b"]], "b_to_a (ot.utils.otresult property)": [[84, "ot.utils.OTResult.b_to_a"]], "check_params() (in module ot.utils)": [[84, "id3"], [84, "ot.utils.check_params"]], "check_random_state() (in module ot.utils)": [[84, "id4"], [84, "ot.utils.check_random_state"]], "citation (ot.utils.otresult property)": [[84, "ot.utils.OTResult.citation"]], "clean_zeros() (in module ot.utils)": [[84, "id5"], [84, "ot.utils.clean_zeros"]], "cost_normalization() (in module ot.utils)": [[84, "id6"], [84, "ot.utils.cost_normalization"]], "deprecated (class in ot.utils)": [[84, "id7"], [84, "ot.utils.deprecated"]], "dist() (in module ot.utils)": [[84, "id8"], [84, "ot.utils.dist"]], "dist0() (in module ot.utils)": [[84, "id9"], [84, "ot.utils.dist0"]], "dots() (in module ot.utils)": [[84, "id10"], [84, "ot.utils.dots"]], "euclidean_distances() (in module ot.utils)": [[84, "id11"], [84, "ot.utils.euclidean_distances"]], "get_coordinate_circle() (in module ot.utils)": [[84, "id12"], [84, "ot.utils.get_coordinate_circle"]], "get_params() (ot.utils.baseestimator method)": [[84, "id1"], [84, "ot.utils.BaseEstimator.get_params"]], "kernel() (in module ot.utils)": [[84, "id13"], [84, "ot.utils.kernel"]], "label_normalization() (in module ot.utils)": [[84, "id14"], [84, "ot.utils.label_normalization"]], "laplacian() (in module ot.utils)": [[84, "id15"], [84, "ot.utils.laplacian"]], "lazy_plan (ot.utils.otresult property)": [[84, "ot.utils.OTResult.lazy_plan"]], "list_to_array() (in module ot.utils)": [[84, "id16"], [84, "ot.utils.list_to_array"]], "marginal_a (ot.utils.otresult property)": [[84, "ot.utils.OTResult.marginal_a"]], "marginal_b (ot.utils.otresult property)": [[84, "ot.utils.OTResult.marginal_b"]], "marginals (ot.utils.otresult property)": [[84, "ot.utils.OTResult.marginals"]], "ot.utils": [[84, "module-ot.utils"]], "parmap() (in module ot.utils)": [[84, "id17"], [84, "ot.utils.parmap"]], "plan (ot.utils.otresult property)": [[84, "ot.utils.OTResult.plan"]], "potential_a (ot.utils.otresult property)": [[84, "ot.utils.OTResult.potential_a"]], "potential_b (ot.utils.otresult property)": [[84, "ot.utils.OTResult.potential_b"]], "potentials (ot.utils.otresult property)": [[84, "ot.utils.OTResult.potentials"]], "proj_simplex() (in module ot.utils)": [[84, "id18"], [84, "ot.utils.proj_simplex"]], "set_params() (ot.utils.baseestimator method)": [[84, "id2"], [84, "ot.utils.BaseEstimator.set_params"]], "sparse_plan (ot.utils.otresult property)": [[84, "ot.utils.OTResult.sparse_plan"]], "status (ot.utils.otresult property)": [[84, "ot.utils.OTResult.status"]], "tic() (in module ot.utils)": [[84, "id19"], [84, "ot.utils.tic"]], "toc() (in module ot.utils)": [[84, "id20"], [84, "ot.utils.toc"]], "toq() (in module ot.utils)": [[84, "id21"], [84, "ot.utils.toq"]], "unif() (in module ot.utils)": [[84, "id22"], [84, "ot.utils.unif"]], "value (ot.utils.otresult property)": [[84, "ot.utils.OTResult.value"]], "value_linear (ot.utils.otresult property)": [[84, "ot.utils.OTResult.value_linear"]], "ot.weak": [[85, "module-ot.weak"]], "weak_optimal_transport() (in module ot.weak)": [[85, "id0"], [85, "ot.weak.weak_optimal_transport"]]}})