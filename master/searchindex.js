Search.setIndex({"docnames": ["all", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_entropic_semirelaxed_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_fgw_solvers", "auto_examples/gromov/plot_gnn_TFGW", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/plot_semirelaxed_fgw", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_COOT", "auto_examples/others/plot_EWCA", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_dmmot", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_learning_weights_with_COOT", "auto_examples/others/plot_logo", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_compute_wasserstein_circle", "auto_examples/plot_optim_OTreg", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "code_of_conduct", "contributing", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.coot", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gnn", "gen_modules/ot.gromov", "gen_modules/ot.lp", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "quickstart", "releases"], "filenames": ["all.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_entropic_semirelaxed_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_fgw_solvers.rst", "auto_examples/gromov/plot_gnn_TFGW.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/plot_semirelaxed_fgw.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_COOT.rst", "auto_examples/others/plot_EWCA.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_dmmot.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_learning_weights_with_COOT.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_compute_wasserstein_circle.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "code_of_conduct.rst", "contributing.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.coot.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gnn.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "quickstart.rst", "releases.rst"], "titles": ["API and modules", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example", "Plot Fused-Gromov-Wasserstein", "Comparison of Fused Gromov-Wasserstein solvers", "Graph classification with Tempate Based Fused Gromov Wasserstein", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Semi-relaxed (Fused) Gromov-Wasserstein example", "Computation times", "Examples gallery", "Row and column alignments with CO-Optimal Transport", "Entropic Wasserstein Component Analysis", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Computing d-dimensional Barycenters via d-MMOT", "Optimal transport with factored couplings", "Learning sample marginal distribution with CO-Optimal Transport", "Logo of the POT toolbox", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth and sparse OT example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different ground metrics", "OT distances in 1D", "OT distance on the Circle", "Regularized OT with generic solver", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Code of conduct", "Contributing to POT", "Contributors", "ot.backend", "ot.bregman", "ot.coot", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gnn", "ot.gromov", "ot.lp", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Quick start guide", "Releases"], "terms": {"The": [0, 2, 7, 10, 12, 26, 28, 33, 34, 35, 42, 43, 45, 50, 53, 56, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94], "list": [0, 5, 10, 28, 63, 69, 71, 72, 73, 74, 77, 79, 80, 81, 85, 88, 90, 91, 92, 94], "automat": [0, 6, 7, 45, 81, 93, 94], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 71, 72, 74, 76, 79, 81, 83, 84, 85, 89, 90, 92, 93, 94], "sub": [0, 85, 92, 93], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 43, 45, 46, 47, 48, 50, 53, 55, 56, 59, 60, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "follow": [0, 6, 7, 8, 11, 34, 45, 50, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 92, 93, 94], "lp": [0, 7, 14, 16, 17, 38, 43, 56, 72, 73, 74, 75, 82, 87, 89, 90, 92, 93, 94], "bregman": [0, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 31, 33, 47, 50, 53, 57, 74, 76, 77, 81, 82, 83, 89, 91, 92, 94], "optim": [0, 1, 3, 5, 8, 9, 11, 14, 19, 24, 25, 28, 29, 30, 31, 32, 33, 36, 38, 41, 43, 48, 49, 57, 58, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 94], "util": [0, 2, 6, 7, 10, 11, 13, 32, 43, 45, 48, 50, 63, 71, 74, 81, 93, 94], "dataset": [0, 1, 7, 8, 10, 11, 13, 18, 20, 21, 22, 24, 26, 28, 33, 40, 41, 42, 43, 47, 51, 52, 53, 55, 57, 59, 62, 63, 64, 65, 66, 76, 80, 88, 93, 94], "gromov": [0, 9, 28, 37, 67, 70, 74, 75, 78, 79, 82, 83, 90, 92, 94], "smooth": [0, 11, 38, 58, 70, 75, 84, 92, 93, 94], "stochast": [0, 1, 2, 5, 32, 38, 49, 70, 72, 80, 84, 92, 93, 94], "partial": [0, 63, 66, 67, 70, 75, 88, 92, 94], "regpath": 0, "unbalanc": [0, 67, 70, 72, 74, 75, 83, 84, 85, 90, 92, 94], "ar": [0, 7, 12, 14, 20, 26, 28, 29, 31, 34, 35, 36, 42, 43, 45, 48, 50, 52, 53, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "due": [0, 74, 81, 93, 94], "addit": [0, 69, 73, 81, 85, 92, 93, 94], "depend": [0, 35, 71, 79, 80, 82, 93, 94], "dr": [0, 40, 41, 92, 93, 94], "pymanopt": [0, 76, 92, 93, 94], "autograd": [0, 4, 76, 92, 93, 94], "plot": [0, 2, 7, 10, 11, 13, 29, 31, 35, 36, 37, 38, 43, 45, 57, 93, 94], "matplotlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 94], "barycent": [0, 9, 17, 37, 49, 59, 67, 70, 72, 74, 75, 80, 81, 86, 89, 90, 92, 94], "A": [0, 3, 10, 11, 12, 13, 16, 23, 24, 25, 26, 28, 40, 41, 43, 47, 48, 50, 57, 63, 69, 72, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 93, 94], "m": [0, 2, 6, 7, 8, 10, 11, 13, 20, 21, 24, 25, 29, 30, 31, 32, 35, 36, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 55, 57, 60, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "reg": [0, 1, 5, 10, 11, 12, 13, 15, 18, 19, 20, 21, 31, 33, 35, 40, 41, 48, 50, 52, 53, 55, 57, 63, 64, 65, 66, 72, 74, 76, 77, 78, 80, 81, 82, 83, 85, 87, 88, 89, 92, 93, 94], "weight": [0, 10, 11, 12, 13, 14, 15, 16, 29, 31, 35, 36, 42, 43, 45, 50, 53, 63, 65, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94], "none": [0, 2, 5, 13, 15, 28, 29, 30, 31, 32, 35, 36, 39, 40, 45, 50, 56, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 94], "method": [0, 7, 13, 28, 31, 48, 69, 72, 73, 74, 76, 80, 81, 87, 88, 89, 90, 92, 93, 94], "sinkhorn": [0, 8, 14, 17, 18, 20, 22, 31, 33, 38, 47, 57, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 87, 89, 90, 91, 92, 94], "numitermax": [0, 14, 15, 18, 20, 21, 31, 33, 48, 50, 57, 72, 74, 77, 80, 81, 82, 83, 87, 88, 89, 91], "10000": [0, 71, 72, 80, 88], "stopthr": [0, 72, 74, 76, 77, 80, 81, 82, 83, 87, 89, 91, 94], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93], "0001": [0, 72, 82, 85], "verbos": [0, 11, 18, 21, 24, 25, 30, 31, 33, 35, 39, 43, 45, 47, 51, 57, 62, 64, 72, 73, 74, 76, 77, 80, 81, 82, 83, 87, 89, 91], "fals": [0, 13, 25, 28, 29, 31, 32, 35, 36, 40, 43, 45, 47, 56, 60, 65, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91], "log": [0, 13, 21, 28, 29, 30, 31, 33, 35, 36, 39, 43, 45, 48, 57, 59, 60, 64, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94], "warn": [0, 2, 15, 18, 20, 21, 22, 26, 31, 33, 34, 35, 47, 50, 57, 63, 69, 72, 74, 90, 94], "true": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 13, 16, 18, 21, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 39, 41, 43, 45, 46, 47, 48, 50, 51, 57, 60, 62, 64, 65, 71, 72, 73, 74, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94], "kwarg": [0, 72, 74, 75, 77, 80, 82, 83, 84, 89, 90, 91, 94], "sourc": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "comput": [0, 2, 6, 7, 8, 11, 35, 38, 45, 47, 51, 52, 56, 59, 60, 62, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 92, 94], "entrop": [0, 9, 15, 17, 31, 33, 37, 38, 49, 64, 67, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 94], "regular": [0, 9, 10, 12, 15, 17, 18, 19, 20, 21, 25, 27, 31, 33, 35, 37, 47, 58, 63, 67, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94], "wasserstein": [0, 9, 17, 37, 43, 49, 55, 61, 67, 70, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 86, 89, 90, 92, 94], "distribut": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 17, 23, 24, 27, 30, 34, 38, 42, 44, 49, 50, 54, 55, 56, 57, 58, 61, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 80, 81, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94], "mathbf": [0, 6, 29, 35, 36, 40, 50, 66, 72, 73, 74, 76, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91], "solv": [0, 2, 20, 26, 45, 46, 66, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 87, 88, 89, 90, 91, 94], "problem": [0, 6, 7, 8, 10, 11, 20, 21, 26, 43, 45, 46, 63, 66, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94], "mathop": [0, 72, 73, 74, 76, 77, 80, 81, 82, 83, 87, 88, 89, 90, 91], "arg": [0, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 87, 88, 89, 90, 91, 93], "min": [0, 29, 31, 35, 40, 41, 50, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 87, 88, 89, 90, 91, 93], "_": [0, 24, 35, 39, 45, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93], "quad": [0, 6, 72, 73, 74, 76, 77, 80, 81, 82, 83, 87, 88, 89, 90, 91, 93], "sum_i": [0, 30, 71, 72, 81, 87, 88, 89, 90, 91, 93], "w_": [0, 35, 72, 80, 81, 89], "_i": [0, 40, 72, 76, 81, 85, 87, 88, 89, 90, 91], "where": [0, 4, 6, 7, 28, 35, 45, 48, 50, 66, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 93, 94], "cdot": [0, 40, 66, 72, 74, 76, 81, 82, 83, 88, 89, 93], "distanc": [0, 3, 8, 9, 28, 29, 32, 34, 35, 36, 39, 50, 58, 60, 61, 70, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 86, 87, 89, 90, 92, 94], "see": [0, 2, 5, 8, 50, 69, 71, 72, 74, 75, 76, 78, 80, 81, 83, 85, 87, 88, 89, 93, 94], "sinkhorn_stabil": [0, 72, 74, 89, 93], "sinkhorn_log": [0, 72, 73, 76, 93, 94], "train": [0, 19, 25, 41, 45, 72, 74, 75, 76, 79, 81, 89, 93, 94], "column": [0, 6, 29, 31, 36, 38, 49, 52, 72, 73, 81, 85, 87, 89], "matrix": [0, 2, 6, 8, 10, 11, 13, 19, 23, 25, 28, 34, 35, 42, 45, 53, 54, 55, 57, 63, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "respect": [0, 6, 16, 32, 35, 50, 68, 71, 72, 73, 74, 76, 79, 80, 81, 89, 92, 93, 94], "term": [0, 8, 53, 57, 72, 73, 74, 76, 80, 81, 82, 83, 87, 88, 89, 90, 93, 94], "cost": [0, 20, 26, 33, 39, 41, 42, 43, 45, 47, 48, 51, 52, 53, 54, 62, 72, 73, 74, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "algorithm": [0, 15, 31, 33, 34, 43, 47, 63, 69, 72, 73, 74, 76, 77, 80, 81, 82, 87, 88, 89, 91, 92, 93, 94], "us": [0, 2, 3, 6, 7, 8, 10, 11, 19, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 50, 51, 57, 62, 63, 64, 66, 68, 69, 71, 77, 79, 80, 86, 91, 94], "knopp": [0, 70, 71, 72, 89, 92, 93, 94], "scale": [0, 29, 31, 34, 36, 40, 46, 48, 63, 72, 74, 81, 87, 88, 89, 90, 92, 93, 94], "propos": [0, 3, 6, 8, 10, 11, 13, 16, 32, 40, 41, 57, 59, 60, 63, 72, 74, 77, 78, 80, 81, 83, 88, 89, 91, 93, 94], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 28, 30, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 59, 60, 62, 63, 64, 65, 66, 72, 74, 81, 82, 83, 85, 86, 89, 92, 93], "paramet": [0, 2, 5, 6, 7, 8, 11, 12, 18, 20, 21, 28, 30, 31, 32, 33, 34, 35, 44, 47, 56, 57, 62, 63, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "arrai": [0, 2, 6, 7, 10, 11, 12, 13, 15, 16, 21, 23, 28, 33, 34, 35, 40, 42, 46, 50, 53, 59, 63, 64, 65, 66, 71, 72, 73, 74, 77, 78, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94], "like": [0, 2, 50, 69, 70, 72, 73, 74, 77, 78, 80, 81, 82, 88, 89, 90, 91, 94], "shape": [0, 2, 3, 4, 7, 10, 11, 13, 14, 16, 19, 21, 23, 25, 26, 28, 29, 30, 31, 34, 35, 36, 41, 46, 50, 63, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94], "dim": [0, 4, 32, 34, 72, 81, 86, 89, 90], "n_hist": [0, 72, 81, 89], "size": [0, 4, 6, 8, 15, 19, 25, 29, 31, 32, 35, 36, 39, 50, 56, 68, 71, 72, 73, 74, 75, 76, 79, 80, 81, 85, 88, 90, 94], "loss": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 18, 24, 25, 30, 31, 32, 35, 42, 45, 53, 54, 57, 63, 64, 65, 66, 72, 74, 80, 81, 82, 83, 87, 88, 89, 90, 92, 93, 94], "float": [0, 1, 5, 6, 7, 8, 12, 28, 34, 41, 43, 45, 50, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "str": [0, 31, 33, 35, 50, 64, 66, 72, 74, 75, 76, 80, 81, 87, 88, 89, 90], "option": [0, 50, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94], "solver": [0, 9, 11, 30, 33, 37, 38, 43, 46, 51, 58, 70, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94], "either": [0, 24, 66, 72, 74, 76, 80, 81, 89], "each": [0, 6, 8, 28, 31, 32, 35, 50, 72, 73, 74, 79, 80, 81, 87, 88, 89, 90, 92, 93, 94], "histogram": [0, 45, 72, 73, 75, 77, 81, 83, 85, 87, 89, 90, 91, 92, 93, 94], "simplex": [0, 2, 6, 7, 35, 45, 72, 81, 87, 90, 92, 93], "barycentr": [0, 24, 72, 74, 81, 89, 93], "coodin": [0, 72, 89], "int": [0, 2, 32, 34, 35, 40, 59, 60, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 93], "max": [0, 10, 11, 13, 29, 31, 33, 34, 35, 36, 40, 42, 47, 50, 51, 52, 54, 55, 56, 57, 62, 63, 65, 66, 71, 72, 74, 77, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "number": [0, 1, 5, 6, 8, 14, 15, 16, 18, 20, 21, 28, 30, 31, 33, 34, 35, 47, 50, 57, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "iter": [0, 1, 2, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 31, 33, 34, 39, 41, 43, 45, 50, 57, 63, 72, 73, 74, 76, 77, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 94], "stop": [0, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 87, 89, 91, 94], "threshold": [0, 28, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 87, 89, 91, 93], "error": [0, 7, 22, 28, 31, 33, 35, 63, 69, 71, 72, 74, 76, 80, 81, 83, 87, 89, 92, 93, 94], "bool": [0, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91], "print": [0, 1, 2, 4, 5, 6, 8, 29, 31, 32, 33, 35, 36, 39, 43, 45, 48, 50, 64, 69, 72, 73, 74, 76, 77, 80, 81, 82, 83, 87, 89, 91, 94], "inform": [0, 24, 25, 32, 35, 39, 45, 47, 48, 68, 69, 72, 73, 74, 76, 77, 80, 81, 82, 83, 87, 88, 89, 91, 92, 93], "along": [0, 2, 6, 7, 71, 72, 74, 76, 77, 80, 81, 82, 83, 85, 87, 89, 91], "record": [0, 7, 69, 72, 73, 74, 77, 78, 80, 81, 82, 83, 87, 88, 89, 91], "rais": [0, 69, 71, 72, 80, 81, 83, 90, 94], "doesn": [0, 72], "t": [0, 6, 7, 10, 11, 13, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 50, 56, 60, 63, 65, 66, 72, 73, 74, 76, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "converg": [0, 2, 15, 18, 20, 21, 31, 33, 34, 50, 57, 72, 74, 80, 81, 82, 92, 93, 94], "return": [0, 2, 3, 4, 5, 6, 8, 16, 19, 23, 25, 28, 29, 31, 32, 33, 34, 36, 41, 50, 56, 57, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "dict": [0, 35, 72, 73, 74, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91], "dictionari": [0, 2, 37, 38, 70, 72, 73, 74, 77, 78, 80, 81, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94], "onli": [0, 6, 14, 30, 50, 71, 72, 73, 74, 76, 78, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94], "benam": [0, 10, 11, 72, 83, 89, 92, 93], "j": [0, 2, 10, 11, 12, 16, 19, 21, 25, 29, 30, 31, 34, 35, 36, 39, 40, 45, 46, 50, 57, 65, 66, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 85, 87, 88, 89, 90, 92, 93], "d": [0, 10, 11, 14, 22, 23, 28, 31, 33, 35, 38, 49, 50, 57, 64, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93], "carlier": [0, 10, 11, 72, 81, 83, 89, 92, 93], "g": [0, 4, 8, 10, 11, 19, 21, 25, 28, 29, 30, 31, 32, 35, 36, 43, 47, 48, 50, 51, 53, 57, 62, 63, 65, 72, 74, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94], "cuturi": [0, 8, 10, 11, 13, 31, 33, 41, 48, 70, 72, 74, 76, 78, 80, 81, 83, 87, 88, 89, 92, 93], "nenna": [0, 10, 11, 72, 83, 89, 92, 93], "l": [0, 8, 10, 11, 13, 30, 31, 33, 60, 63, 65, 72, 73, 74, 76, 80, 81, 83, 85, 86, 87, 89, 92, 93], "peyr\u00e9": [0, 8, 10, 11, 31, 33, 48, 57, 63, 70, 72, 74, 78, 80, 81, 82, 83, 88, 89, 92, 93], "2015": [0, 3, 10, 11, 57, 59, 72, 74, 82, 83, 86, 89, 92, 93], "project": [0, 2, 3, 4, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 29, 31, 33, 35, 36, 45, 47, 50, 56, 57, 63, 64, 68, 69, 70, 72, 74, 76, 78, 80, 81, 83, 86, 87, 89, 90, 92, 93, 94], "transport": [0, 3, 5, 10, 11, 25, 28, 29, 31, 32, 33, 36, 38, 49, 57, 58, 63, 64, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 94], "siam": [0, 10, 11, 19, 25, 57, 72, 74, 81, 82, 83, 89, 92, 93], "journal": [0, 3, 10, 11, 19, 25, 33, 57, 59, 72, 74, 78, 80, 81, 82, 83, 86, 89, 91, 92, 93, 94], "scientif": [0, 10, 11, 72, 83, 89, 92, 93, 94], "37": [0, 5, 10, 11, 13, 43, 57, 72, 81, 83, 89, 92, 93, 94], "2": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 30, 32, 33, 34, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "a1111": [0, 10, 11, 72, 83, 89, 92, 93], "a1138": [0, 10, 11, 72, 83, 89, 92, 93], "barycenter_unbalanc": [0, 63, 89, 93], "reg_m": [0, 66, 74, 83, 89, 93], "1000": [0, 5, 8, 14, 21, 23, 41, 43, 45, 48, 56, 71, 72, 74, 76, 80, 83, 89], "1e": [0, 2, 7, 8, 10, 11, 13, 15, 18, 19, 20, 21, 24, 25, 26, 30, 34, 43, 45, 46, 50, 51, 52, 53, 55, 57, 63, 65, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 94], "06": [0, 11, 24, 31, 41, 48, 51, 57, 72, 73, 74, 76, 78, 81, 83, 89], "u_": [0, 86, 89], "sinkhorn_unbalanc": [0, 62, 66, 89, 93], "reg_mi": [0, 89], "margin": [0, 31, 33, 38, 49, 65, 70, 72, 73, 80, 81, 83, 85, 89, 90, 92, 93, 94], "relax": [0, 37, 38, 62, 70, 80, 82, 85, 87, 89, 92, 93, 94], "hyperparamet": [0, 89], "gener": [0, 3, 7, 11, 12, 13, 17, 33, 34, 38, 39, 46, 48, 50, 54, 56, 58, 64, 69, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 94], "10": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 18, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 45, 47, 51, 52, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 72, 74, 76, 80, 81, 82, 87, 89, 92, 93], "dimens": [0, 7, 34, 41, 71, 72, 76, 79, 80, 81, 83, 85, 86, 89, 94], "ground": [0, 38, 55, 58, 72, 74, 81, 84, 87, 88, 89, 92, 93], "metric": [0, 20, 21, 33, 38, 43, 46, 50, 55, 58, 64, 72, 74, 80, 81, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94], "entropi": [0, 47, 62, 71, 72, 76, 80, 87, 89, 92, 93], "If": [0, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 90, 91, 92, 93, 94], "uniform": [0, 4, 6, 35, 42, 44, 47, 50, 53, 59, 60, 65, 66, 71, 72, 73, 74, 77, 79, 80, 81, 86, 89, 90, 91, 93, 94], "chizat": [0, 63, 72, 74, 83, 89, 92, 93], "schmitzer": [0, 63, 72, 74, 83, 89, 92, 93], "b": [0, 6, 7, 11, 14, 21, 22, 23, 26, 30, 33, 34, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "vialard": [0, 63, 72, 74, 83, 89, 92, 93], "f": [0, 3, 4, 10, 13, 19, 25, 29, 30, 32, 35, 36, 40, 45, 48, 50, 57, 60, 63, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 86, 88, 89, 90, 92, 93, 94], "x": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "2016": [0, 11, 24, 25, 31, 33, 41, 48, 63, 72, 74, 76, 80, 81, 83, 88, 89, 92, 93, 94], "arxiv": [0, 16, 54, 57, 63, 72, 74, 76, 81, 82, 87, 89, 90, 92, 93], "preprin": [0, 89], "1607": [0, 63, 72, 74, 89, 92, 93], "05816": [0, 63, 72, 74, 89, 92, 93], "binary_search_circl": [0, 81, 94], "u_valu": [0, 81], "v_valu": [0, 81], "u_weight": [0, 81], "v_weight": [0, 81], "p": [0, 2, 4, 7, 21, 28, 29, 30, 31, 33, 34, 35, 36, 41, 46, 50, 56, 60, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 80, 81, 83, 86, 87, 90, 91, 92, 93, 94], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93], "lm": [0, 81], "tm": [0, 56, 81], "tp": [0, 56, 65, 81], "ep": [0, 8, 13, 34, 71, 81], "require_sort": [0, 81], "circl": [0, 38, 41, 50, 58, 70, 81, 90, 92, 94], "binari": [0, 35, 75, 81], "search": [0, 28, 29, 36, 50, 72, 80, 81, 82, 92, 93, 94], "44": [0, 43, 49, 57, 81, 83, 92, 94], "sampl": [0, 1, 6, 19, 25, 35, 38, 41, 42, 44, 46, 48, 49, 50, 53, 56, 59, 60, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94], "need": [0, 43, 50, 69, 72, 76, 79, 81, 84, 93, 94], "": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 25, 26, 29, 30, 31, 33, 34, 35, 36, 38, 40, 43, 45, 47, 50, 51, 52, 55, 56, 57, 61, 62, 63, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94], "cong": [0, 81], "thei": [0, 68, 79, 81, 93, 94], "mathbb": [0, 72, 80, 81, 86, 88, 90, 93], "r": [0, 3, 4, 7, 8, 10, 11, 13, 21, 24, 25, 29, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 47, 48, 50, 51, 52, 55, 56, 57, 60, 62, 63, 64, 65, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 94], "take": [0, 56, 68, 81, 82, 85, 88, 89, 93, 94], "valu": [0, 2, 7, 11, 26, 28, 30, 34, 35, 41, 43, 50, 55, 56, 63, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 93, 94], "modulo": [0, 81], "subset": [0, 32, 81, 90], "requir": [0, 28, 71, 74, 80, 81, 92, 93, 94], "first": [0, 2, 3, 29, 30, 32, 33, 35, 36, 69, 71, 72, 73, 80, 81, 85, 87, 90, 92, 93], "find": [0, 28, 34, 48, 71, 81, 82, 92, 93, 94], "coordin": [0, 12, 30, 34, 71, 73, 74, 76, 80, 81, 88, 89, 90, 92, 93], "e": [0, 45, 68, 72, 79, 80, 81, 86, 90, 92], "atan2": [0, 71, 81, 90], "w_p": [0, 81, 86, 93], "u": [0, 1, 2, 3, 5, 6, 14, 40, 45, 50, 60, 63, 69, 72, 76, 81, 83, 86, 88, 89, 90, 92, 93, 94], "v": [0, 1, 5, 17, 22, 27, 28, 29, 31, 36, 38, 40, 48, 49, 50, 60, 63, 71, 72, 74, 75, 81, 84, 86, 87, 88, 89, 90, 92, 93, 94], "inf_": [0, 81], "theta": [0, 1, 5, 8, 24, 56, 72, 75, 81, 86], "int_0": [0, 81], "f_u": [0, 81], "q": [0, 30, 31, 33, 35, 63, 64, 71, 72, 73, 80, 81, 83, 85, 93], "f_v": [0, 81], "mathrm": [0, 4, 56, 66, 72, 74, 76, 80, 81, 82, 83, 86, 87, 88, 89, 90], "cdf": [0, 81], "For": [0, 26, 31, 33, 35, 48, 50, 64, 69, 72, 73, 81, 82, 85, 88, 90, 93, 94], "x_1": [0, 39, 50, 81, 90], "x_2": [0, 39, 50, 81, 90], "get": [0, 2, 29, 31, 34, 35, 36, 72, 74, 76, 80, 81, 90, 92, 93, 94], "frac": [0, 4, 39, 45, 71, 72, 74, 76, 80, 81, 83, 85, 86, 87, 88, 90, 91, 93], "pi": [0, 1, 5, 8, 16, 23, 24, 28, 39, 40, 41, 45, 54, 56, 60, 76, 81, 88, 90, 94], "get_coordinate_circl": [0, 81, 90], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 71, 81, 86, 92, 94], "backend": [0, 2, 3, 5, 6, 7, 31, 33, 45, 50, 70, 72, 77, 80, 81, 82, 86, 88, 90, 91, 92, 94], "tensorflow": [0, 71, 81, 86, 92, 93, 94], "jax": [0, 71, 81, 86, 90, 92, 93, 94], "support": [0, 3, 5, 7, 17, 18, 38, 70, 72, 73, 77, 81, 86, 94], "ndarrai": [0, 28, 34, 71, 72, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 90], "n": [0, 2, 4, 6, 7, 8, 10, 11, 13, 14, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 57, 59, 60, 62, 63, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93], "domain": [0, 26, 27, 29, 31, 57, 72, 74, 75, 76, 78, 80, 81, 82, 84, 86, 87, 89, 90, 92, 94], "target": [0, 1, 6, 7, 8, 23, 24, 27, 34, 38, 41, 42, 43, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 65, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "default": [0, 2, 34, 35, 50, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 93, 94], "power": [0, 50, 71, 81, 86, 94], "lower": [0, 14, 18, 22, 33, 50, 81], "bound": [0, 81, 94], "dc": [0, 81], "upper": [0, 40, 62, 81], "condit": [0, 30, 31, 33, 57, 70, 71, 74, 77, 80, 81, 82, 91, 92, 93, 94], "sort": [0, 40, 69, 71, 81, 93], "also": [0, 2, 50, 69, 71, 72, 74, 78, 79, 80, 81, 90, 92, 93, 94], "associ": [0, 45, 74, 80, 81, 83, 86, 90], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 69, 71, 86, 94], "np": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 71, 72, 74, 75, 81, 83, 85, 86, 87, 89, 90, 93, 94], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 72, 74, 75, 79, 80, 81, 82, 83, 85, 86, 89, 90, 92, 93], "8": [0, 3, 4, 7, 8, 10, 11, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 45, 46, 48, 51, 53, 54, 57, 59, 63, 64, 65, 66, 73, 74, 80, 81, 88, 90, 92, 93], "4": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 56, 57, 59, 62, 63, 64, 65, 66, 68, 72, 73, 74, 78, 80, 81, 83, 85, 89, 92, 93], "7": [0, 10, 11, 12, 13, 15, 16, 18, 19, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 39, 41, 43, 45, 46, 48, 50, 53, 54, 55, 57, 60, 63, 66, 73, 74, 81, 82, 85, 87, 88, 92, 93], "delon": [0, 16, 74, 78, 81, 92], "juli": [0, 8, 81, 92, 94], "julien": [0, 81, 92], "salomon": [0, 81, 92], "andrei": [0, 81, 92], "sobolevski": [0, 81, 92], "fast": [0, 51, 72, 80, 81, 92, 93, 94], "mong": [0, 23, 43, 81, 83, 92, 94], "appli": [0, 24, 68, 73, 74, 78, 81, 90, 92], "mathemat": [0, 3, 59, 69, 72, 80, 81, 83, 86, 92, 93, 94], "70": [0, 1, 4, 5, 8, 29, 30, 31, 36, 51, 57, 81, 92], "2010": [0, 81, 83, 92], "2239": [0, 81, 92], "2258": [0, 81, 92], "dist": [0, 6, 8, 20, 28, 30, 42, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 57, 62, 63, 65, 66, 76, 80, 81, 85, 90, 93, 94], "x1": [0, 2, 3, 14, 15, 19, 23, 25, 32, 39, 40, 46, 50, 56, 76, 90], "x2": [0, 3, 14, 15, 19, 23, 25, 32, 39, 46, 50, 56, 76, 90], "sqeuclidean": [0, 20, 21, 50, 54, 55, 72, 74, 81, 88, 90], "w": [0, 6, 7, 8, 34, 35, 46, 50, 64, 66, 72, 73, 76, 78, 79, 80, 81, 86, 87, 88, 89, 90, 92, 93, 94], "between": [0, 2, 3, 6, 15, 16, 19, 28, 29, 31, 34, 35, 36, 38, 39, 42, 43, 44, 45, 46, 50, 58, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 89, 90, 91, 92, 94], "thi": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 50, 51, 52, 56, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 80, 81, 85, 86, 87, 88, 90, 91, 92, 93, 94], "compat": [0, 50, 71, 72, 76, 77, 79, 80, 81, 87, 88, 90, 91, 94], "work": [0, 12, 50, 69, 71, 72, 77, 80, 81, 82, 90, 91, 94], "from": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 19, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 43, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 62, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "all": [0, 10, 11, 13, 26, 28, 31, 34, 35, 38, 46, 50, 63, 68, 69, 71, 72, 74, 77, 78, 80, 81, 85, 89, 90, 91, 92, 93, 94], "n1": [0, 39, 45, 50, 90], "n2": [0, 29, 30, 31, 36, 39, 45, 50, 90], "callabl": [0, 50, 74, 76, 80, 82, 88, 90, 94], "euclidean": [0, 11, 28, 29, 31, 36, 46, 50, 54, 55, 74, 76, 81, 87, 90, 93, 94], "On": [0, 50, 74, 78, 81, 90, 92, 93, 94], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 71, 72, 76, 80, 81, 83, 85, 86, 89, 90, 92, 93, 94], "accept": [0, 50, 68, 69, 71, 81, 90, 94], "scipi": [0, 28, 33, 34, 50, 56, 64, 69, 71, 81, 83, 87, 89, 90, 92, 93, 94], "spatial": [0, 33, 34, 50, 64, 83, 90], "cdist": [0, 33, 34, 50, 64, 83, 90, 94], "braycurti": [0, 50, 90], "canberra": [0, 50, 90], "chebyshev": [0, 50, 90], "cityblock": [0, 50, 54, 81, 90], "correl": [0, 50, 90], "cosin": [0, 50, 90], "dice": [0, 50, 90], "ham": [0, 50, 90, 94], "jaccard": [0, 50, 90], "kulczynski1": [0, 50, 90], "mahalanobi": [0, 50, 90], "match": [0, 33, 50, 74, 80, 90, 92, 93], "minkowski": [0, 43, 50, 81, 90], "rogerstanimoto": [0, 50, 90], "russellrao": [0, 50, 90], "seuclidean": [0, 50, 90], "sokalmichen": [0, 50, 90], "sokalsneath": [0, 50, 90], "wminkowski": [0, 50, 90], "yule": [0, 50, 90], "norm": [0, 15, 28, 31, 33, 40, 41, 50, 66, 71, 73, 74, 81, 90], "rank": [0, 44, 50, 77, 87, 90], "given": [0, 2, 29, 31, 34, 35, 36, 45, 50, 71, 72, 74, 76, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94], "type": [0, 69, 71, 72, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 93, 94], "emd": [0, 18, 20, 22, 30, 42, 44, 46, 54, 70, 72, 73, 74, 81, 82, 83, 86, 87, 89, 91, 92, 94], "100000": [0, 48, 74, 81, 82, 89], "center_du": [0, 81], "numthread": [0, 81, 94], "check_margin": [0, 81], "earth": [0, 74, 81, 92, 94], "mover": [0, 74, 81, 92, 94], "gamma": [0, 50, 65, 66, 72, 74, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 93], "langl": [0, 72, 74, 80, 81, 82, 83, 86, 88, 89], "rangle_f": [0, 72, 74, 80, 81, 82, 83, 88, 89], "geq": [0, 66, 72, 74, 80, 81, 82, 83, 85, 88, 89, 90, 91, 93], "note": [0, 26, 43, 50, 72, 74, 76, 79, 80, 81, 83, 84, 87, 90, 92, 93, 94], "c": [0, 2, 7, 8, 15, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 48, 50, 53, 54, 56, 60, 65, 66, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "order": [0, 6, 20, 26, 28, 50, 71, 76, 79, 81, 84, 93], "float64": [0, 3, 7, 10, 11, 13, 14, 16, 19, 23, 25, 31, 33, 34, 43, 47, 51, 52, 55, 57, 62, 63, 72, 81], "format": [0, 1, 2, 3, 4, 5, 8, 21, 39, 50, 65, 69, 71, 79, 81, 90, 92, 94], "It": [0, 2, 11, 18, 20, 21, 24, 25, 26, 30, 31, 33, 51, 57, 64, 69, 80, 81, 88, 92, 93, 94], "convert": [0, 6, 19, 23, 25, 34, 71, 81, 90], "But": [0, 77, 80, 81, 91, 93, 94], "cpu": [0, 2, 3, 7, 71, 77, 80, 81, 91, 94], "which": [0, 2, 28, 45, 50, 68, 71, 72, 73, 74, 77, 79, 80, 81, 82, 84, 85, 91, 92, 93, 94], "can": [0, 2, 6, 43, 50, 66, 69, 72, 74, 76, 77, 80, 81, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94], "lead": [0, 6, 50, 72, 77, 80, 81, 82, 91, 93, 94], "copi": [0, 7, 10, 29, 31, 36, 63, 69, 71, 77, 80, 81, 91, 93], "overhead": [0, 72, 77, 80, 81, 91, 93], "gpu": [0, 70, 71, 72, 77, 80, 81, 91, 94], "cast": [0, 41, 81, 93], "plan": [0, 2, 9, 29, 31, 36, 38, 44, 46, 51, 52, 65, 66, 72, 73, 77, 78, 80, 81, 83, 85, 87, 88, 89, 90, 93, 94], "data": [0, 2, 3, 7, 13, 31, 33, 35, 43, 50, 54, 69, 71, 72, 73, 74, 78, 80, 81, 92, 93, 94], "provid": [0, 2, 35, 50, 69, 70, 71, 72, 74, 78, 80, 81, 82, 85, 92, 93, 94], "input": [0, 13, 16, 63, 71, 72, 73, 74, 77, 80, 81, 87, 90, 91, 93, 94], "prioriti": [0, 81], "an": [0, 2, 7, 8, 19, 23, 25, 28, 34, 43, 50, 52, 68, 69, 71, 72, 74, 77, 80, 81, 82, 83, 85, 87, 88, 90, 94], "integ": [0, 28, 81, 94], "tensor": [0, 2, 3, 6, 7, 32, 45, 71, 79, 80, 81, 82, 93, 94], "might": [0, 15, 18, 20, 21, 26, 31, 33, 50, 57, 72, 81, 93, 94], "result": [0, 2, 50, 68, 69, 71, 80, 81, 90, 93, 94], "precis": [0, 45, 71, 72, 74, 80, 81], "behaviour": [0, 81], "unwant": [0, 81], "pleas": [0, 69, 71, 81, 92], "make": [0, 29, 31, 36, 50, 54, 62, 63, 68, 69, 71, 75, 81, 92, 93, 94], "sure": [0, 69, 81, 92], "point": [0, 11, 15, 16, 30, 31, 33, 34, 43, 46, 47, 48, 56, 69, 72, 76, 80, 81, 83, 90, 92, 93, 94], "vector": [0, 6, 71, 72, 73, 74, 79, 81, 85, 86, 90, 92, 93], "do": [0, 8, 20, 26, 33, 50, 64, 68, 69, 71, 72, 81, 90, 93, 94], "sum": [0, 2, 5, 6, 7, 11, 12, 13, 14, 29, 31, 32, 33, 35, 36, 41, 42, 50, 53, 55, 57, 60, 62, 65, 66, 71, 72, 74, 76, 80, 81, 82, 83, 85, 86, 87, 88, 90, 92, 93, 94], "same": [0, 24, 29, 33, 36, 50, 64, 71, 73, 81, 90, 93], "empti": [0, 59, 60, 74, 77, 81, 90, 91], "nt": [0, 6, 35, 72, 74, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 91], "maximum": [0, 4, 15, 28, 34, 50, 56, 71, 72, 74, 76, 80, 81, 82, 85, 87, 90], "befor": [0, 69, 74, 81, 94], "ha": [0, 2, 6, 8, 50, 70, 72, 74, 80, 81, 83, 90, 92, 93, 94], "contain": [0, 10, 11, 13, 63, 73, 77, 80, 81, 85, 90, 91, 92, 93, 94], "dual": [0, 8, 9, 11, 38, 43, 72, 73, 75, 77, 80, 81, 84, 87, 88, 90, 91, 92, 93, 94], "variabl": [0, 35, 72, 74, 77, 80, 81, 85, 87, 88, 91, 93, 94], "otherwis": [0, 68, 71, 80, 81, 90], "boolean": [0, 71, 72, 74, 78, 81, 90], "center": [0, 40, 50, 76, 81, 94], "potenti": [0, 5, 8, 31, 72, 80, 81, 87, 88, 90, 94], "center_ot_du": [0, 81], "openmp": [0, 81, 94], "compil": [0, 81, 92, 93, 94], "choos": [0, 28, 56, 72, 76, 81, 93], "thread": [0, 81], "parallel": [0, 81, 90, 93, 94], "select": [0, 32, 47, 74, 78, 80, 81, 93], "highest": [0, 81], "possibl": [0, 69, 72, 74, 81, 90, 93, 94], "check": [0, 31, 69, 71, 72, 81, 90, 93, 94], "mass": [0, 2, 21, 29, 31, 50, 64, 66, 74, 80, 81, 83, 92, 93, 94], "equal": [0, 21, 46, 54, 71, 81, 85], "skip": [0, 81], "exit": [0, 77, 81, 91, 94], "statu": [0, 77, 81, 90, 91, 94], "simpl": [0, 2, 6, 12, 34, 45, 50, 75, 81, 90, 93, 94], "obviou": [0, 81], "solut": [0, 43, 46, 50, 72, 81, 85, 93, 94], "perform": [0, 2, 3, 7, 43, 47, 69, 80, 81, 90, 93, 94], "convers": [0, 81], "bonneel": [0, 3, 59, 70, 81, 86, 92, 93], "van": [0, 81, 92, 93], "de": [0, 72, 81, 92, 93], "pann": [0, 81, 92, 93], "pari": [0, 14, 15, 32, 81, 92, 93], "heidrich": [0, 81, 92, 93], "2011": [0, 80, 81, 92, 93], "decemb": [0, 71, 81, 92, 93, 94], "displac": [0, 55, 81, 90, 92, 93], "interpol": [0, 2, 7, 12, 18, 20, 22, 26, 30, 34, 35, 42, 50, 53, 54, 72, 81, 83, 92, 93, 94], "lagrangian": [0, 81, 83, 85, 92, 93], "In": [0, 2, 3, 6, 7, 8, 31, 33, 35, 39, 45, 46, 50, 68, 69, 72, 73, 76, 77, 79, 80, 81, 84, 86, 87, 92, 93, 94], "acm": [0, 72, 81, 92, 93], "transact": [0, 57, 72, 74, 81, 82, 92, 93], "graphic": [0, 72, 81, 92, 93, 94], "tog": [0, 72, 81, 92, 93], "vol": [0, 8, 57, 74, 78, 81, 82, 92, 93], "30": [0, 1, 3, 4, 5, 8, 11, 18, 20, 22, 26, 28, 29, 30, 31, 33, 34, 35, 36, 40, 41, 47, 50, 51, 57, 74, 81, 92, 93, 94], "No": [0, 2, 35, 43, 69, 81, 92, 93], "6": [0, 2, 5, 7, 11, 13, 16, 18, 19, 20, 22, 23, 24, 25, 29, 31, 32, 33, 35, 41, 43, 44, 46, 47, 48, 50, 51, 52, 53, 54, 57, 62, 63, 64, 65, 66, 73, 74, 80, 81, 85, 88, 92, 93], "158": [0, 57, 81, 92, 93], "cg": [0, 31, 33, 57, 72, 74, 77, 80, 81, 87, 89, 91, 93, 94], "emd2": [0, 6, 8, 55, 70, 81, 89, 92, 94], "process": [0, 24, 25, 29, 32, 36, 39, 45, 47, 48, 50, 72, 73, 74, 81, 87, 88, 89, 92, 93, 94], "return_matrix": [0, 81], "min_": [0, 4, 6, 7, 8, 45, 66, 72, 74, 76, 80, 81, 83, 85, 89, 93], "nb": [0, 7, 10, 11, 13, 19, 25, 29, 31, 33, 34, 36, 41, 42, 43, 44, 47, 51, 52, 53, 54, 55, 57, 59, 60, 62, 63, 64, 65, 66, 80, 81, 82, 84], "multipl": [0, 55, 72, 80, 81, 87, 88, 89, 90, 94], "deprec": [0, 7, 10, 63, 81, 90], "emd2_1d": [0, 81, 93], "x_a": [0, 81], "x_b": [0, 81], "dens": [0, 71, 80, 81, 90], "1d": [0, 9, 17, 30, 38, 43, 58, 67, 70, 75, 80, 81, 82, 84, 90, 92, 93, 94], "measur": [0, 3, 7, 14, 16, 30, 48, 59, 72, 73, 76, 80, 81, 86, 88, 90, 92, 93], "sum_j": [0, 30, 81, 87, 88, 91], "gamma_": [0, 50, 72, 74, 81, 82, 83, 88, 89, 91, 93], "ij": [0, 40, 81, 91], "when": [0, 2, 43, 56, 66, 68, 69, 72, 73, 76, 78, 80, 81, 83, 85, 90, 92, 94], "y": [0, 1, 4, 8, 10, 15, 16, 18, 20, 21, 22, 24, 26, 28, 30, 32, 33, 35, 40, 41, 45, 60, 63, 71, 72, 73, 74, 75, 76, 80, 81, 83, 85, 86, 87, 90, 92, 93], "detail": [0, 68, 69, 76, 78, 81, 93, 94], "dirac": [0, 14, 42, 53, 81], "locat": [0, 14, 16, 71, 72, 81], "real": [0, 41, 81], "line": [0, 19, 23, 25, 34, 50, 72, 80, 81, 82, 84, 93, 94], "string": [0, 72, 73, 74, 78, 80, 81, 88, 89, 90], "implement": [0, 5, 50, 69, 70, 71, 72, 76, 80, 81, 87, 90, 93, 94], "faster": [0, 81, 94], "math": [0, 28, 41, 50, 81, 83, 87, 93], "spars": [0, 28, 38, 50, 58, 71, 72, 75, 76, 80, 81, 84, 87, 89, 90, 92, 93, 94], "represent": [0, 29, 35, 36, 48, 60, 68, 80, 81, 82, 86, 87, 88, 92, 93], "coo_matrix": [0, 71, 81], "set": [0, 2, 8, 18, 20, 22, 27, 28, 32, 34, 35, 38, 50, 68, 71, 72, 74, 75, 79, 80, 81, 82, 85, 90, 92, 93], "2017": [0, 8, 72, 74, 78, 81, 91, 92, 93, 94], "2018": [0, 8, 48, 72, 74, 78, 81, 83, 87, 88, 92, 93, 94], "multidimension": [0, 34, 81], "emd_1d": [0, 51, 81, 93, 94], "instead": [0, 5, 8, 10, 35, 63, 71, 72, 73, 81, 92, 93, 94], "factored_optimal_transport": [0, 44, 77], "xa": [0, 77, 91], "xb": [0, 3, 15, 44, 77, 91], "100": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 22, 24, 28, 31, 33, 34, 35, 40, 41, 43, 44, 46, 47, 50, 51, 52, 55, 56, 57, 62, 63, 64, 65, 71, 72, 73, 74, 76, 77, 80, 81, 83, 86], "x0": [0, 4, 28, 77, 81, 86], "07": [0, 11, 17, 25, 33, 41, 48, 51, 57, 61, 64, 72, 73, 77, 81, 83, 89], "factor": [0, 38, 49, 71, 84, 92, 93, 94], "intermedi": [0, 5, 43, 77], "40": [0, 1, 4, 5, 8, 29, 31, 33, 35, 36, 50, 51, 57, 66, 77, 85, 92, 93], "mu": [0, 3, 6, 7, 24, 25, 28, 30, 56, 64, 74, 76, 77, 86, 93], "w_2": [0, 56, 77, 81, 93], "mu_a": [0, 77], "mu_b": [0, 77], "empir": [0, 2, 3, 27, 38, 44, 54, 58, 70, 72, 74, 75, 77, 78, 81, 84, 90, 91, 92, 93, 94], "And": [0, 77], "two": [0, 2, 3, 10, 19, 21, 30, 39, 45, 48, 50, 52, 55, 63, 69, 71, 72, 73, 74, 77, 78, 80, 81, 85, 89, 91, 92, 93, 94], "gradient": [0, 2, 6, 7, 8, 9, 30, 31, 33, 38, 41, 43, 45, 57, 70, 71, 72, 74, 76, 77, 80, 81, 82, 83, 85, 87, 88, 91, 92, 93, 94], "39": [0, 1, 37, 43, 57, 77, 91, 92, 93], "rel": [0, 18, 30, 31, 33, 34, 57, 72, 74, 77, 80, 82, 91, 94], "variat": [0, 11, 55, 77, 82, 91, 93, 94], "ga": [0, 44, 77], "gb": [0, 44, 77], "forrow": [0, 77, 92, 93], "h\u00fctter": [0, 77, 92, 93], "nitzan": [0, 77, 92, 93], "rigollet": [0, 72, 77, 92, 93], "schiebing": [0, 77, 92, 93], "weed": [0, 72, 77, 92, 93], "2019": [0, 3, 28, 30, 31, 33, 47, 72, 74, 77, 80, 81, 86, 92, 93, 94], "april": [0, 72, 77, 92, 93, 94], "statist": [0, 8, 72, 74, 77, 81, 87, 92, 93], "via": [0, 2, 3, 35, 38, 49, 68, 72, 75, 77, 80, 92, 93, 94], "coupl": [0, 24, 38, 49, 72, 73, 74, 77, 80, 84, 92, 93, 94], "22nd": [0, 72, 77, 92, 93], "intern": [0, 2, 3, 7, 8, 13, 28, 29, 30, 31, 33, 35, 36, 48, 60, 72, 74, 77, 80, 81, 82, 83, 86, 87, 88, 92, 93], "confer": [0, 2, 3, 8, 13, 28, 29, 30, 31, 33, 35, 36, 48, 60, 72, 74, 77, 80, 81, 82, 83, 86, 87, 88, 92, 93], "artifici": [0, 8, 72, 74, 77, 87, 92, 93], "intellig": [0, 8, 57, 72, 74, 77, 82, 87, 92, 93], "pp": [0, 3, 8, 31, 33, 57, 72, 74, 77, 82, 86, 92, 93], "2454": [0, 77, 92, 93], "2465": [0, 77, 92, 93], "pmlr": [0, 3, 8, 13, 72, 77, 92, 93], "fused_gromov_wasserstein": [0, 29, 30, 31, 36, 80, 93], "c1": [0, 2, 29, 30, 31, 33, 36, 64, 65, 66, 80, 82, 83, 93], "c2": [0, 2, 29, 30, 31, 33, 36, 64, 65, 66, 80, 83, 93], "loss_fun": [0, 30, 80], "square_loss": [0, 30, 31, 33, 34, 80], "symmetr": [0, 29, 36, 71, 72, 80, 93, 94], "alpha": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 18, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 35, 36, 40, 44, 46, 48, 50, 55, 56, 59, 60, 62, 63, 65, 66, 72, 73, 74, 79, 80, 81, 82, 84, 87, 88, 94], "armijo": [0, 80, 82, 94], "g0": [0, 29, 36, 42, 44, 51, 53, 57, 80, 82, 83, 89, 91], "max_it": [0, 18, 21, 24, 25, 33, 34, 74, 80, 87, 94], "tol_rel": [0, 80], "09": [0, 9, 11, 17, 33, 48, 49, 51, 57, 72, 74, 80, 82, 87], "tol_ab": [0, 80], "fuse": [0, 37, 70, 79, 80, 92, 93, 94], "c_1": [0, 30, 80, 82, 83], "y_1": [0, 80], "c_2": [0, 29, 30, 36, 80, 83], "y_2": [0, 80], "pairwis": [0, 29, 31, 36, 74, 80], "node": [0, 2, 28, 31, 32, 33, 79, 80, 92], "featur": [0, 28, 31, 32, 45, 69, 72, 73, 79, 80, 92], "matric": [0, 7, 31, 33, 34, 39, 45, 50, 57, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 94], "24": [0, 5, 9, 27, 30, 31, 33, 41, 57, 73, 80, 92, 93, 94], "sum_": [0, 4, 6, 50, 72, 73, 74, 76, 80, 81, 82, 83, 86, 88, 89, 93], "k": [0, 2, 6, 8, 13, 14, 15, 21, 28, 29, 30, 31, 35, 36, 40, 41, 43, 46, 50, 52, 56, 71, 72, 73, 74, 76, 79, 80, 81, 83, 85, 93], "across": [0, 29, 31, 80, 88, 94], "space": [0, 16, 32, 33, 34, 64, 68, 71, 72, 73, 80, 81, 83, 86, 92, 93, 94], "account": [0, 56, 68, 69, 72, 80, 94], "misfit": [0, 80], "similar": [0, 8, 26, 50, 74, 80, 85, 93], "trade": [0, 35, 79, 80], "off": [0, 2, 4, 12, 13, 19, 21, 23, 25, 29, 31, 32, 35, 36, 46, 57, 69, 79, 80], "conjug": [0, 80, 87], "done": [0, 6, 45, 46, 50, 80, 93, 94], "limit": [0, 71, 80, 94], "memori": [0, 72, 80, 81, 88, 93, 94], "repres": [0, 20, 26, 28, 68, 72, 80, 81, 93], "structur": [0, 28, 31, 33, 35, 71, 79, 80, 92, 93, 94], "let": [0, 80, 81, 82], "its": [0, 1, 2, 5, 24, 29, 31, 35, 36, 50, 56, 68, 71, 72, 79, 80, 82, 83, 86, 92, 93, 94], "taken": [0, 35, 80, 93], "assum": [0, 78, 80, 94], "symmetri": [0, 80], "test": [0, 28, 32, 41, 69, 71, 80, 82, 90, 92, 94], "conduct": [0, 80, 82], "els": [0, 2, 3, 7, 12, 16, 21, 28, 29, 31, 35, 36, 40, 43, 56, 74, 76, 78, 79, 80, 89], "resp": [0, 72, 80, 82], "asymmetr": [0, 80, 94], "step": [0, 1, 2, 3, 5, 6, 7, 8, 11, 28, 32, 45, 69, 71, 72, 80, 81, 82, 94], "found": [0, 28, 43, 69, 80, 93], "research": [0, 70, 80, 92, 93, 94], "close": [0, 28, 50, 74, 78, 80, 81, 90, 93], "form": [0, 6, 8, 50, 74, 78, 80, 81, 85, 90, 93, 94], "issu": [0, 68, 69, 72, 80, 90, 92, 93], "initi": [0, 14, 70, 72, 73, 76, 79, 80, 81, 82, 83, 89, 91, 93], "pq": [0, 80], "must": [0, 80, 87, 90], "satisfi": [0, 80, 82], "constraint": [0, 31, 33, 72, 80, 81, 82, 87, 90, 93, 94], "absolut": [0, 18, 30, 31, 33, 57, 71, 73, 80, 82, 91, 94], "directli": [0, 50, 80, 83, 93], "pass": [0, 69, 80, 81, 83, 87, 88, 90, 94], "vayer": [0, 2, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 45, 70, 73, 76, 79, 80, 82, 92, 93], "titouan": [0, 28, 29, 30, 31, 33, 36, 70, 79, 80, 82, 92], "chapel": [0, 28, 30, 31, 33, 64, 65, 66, 70, 80, 83, 85, 89, 92, 93], "laetitia": [0, 28, 30, 31, 33, 64, 66, 70, 80, 92], "flamari": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 50, 51, 52, 53, 54, 55, 57, 65, 70, 72, 73, 74, 76, 79, 80, 82, 85, 88, 89, 92, 93], "r\u00e9mi": [0, 2, 3, 7, 14, 28, 29, 30, 31, 32, 33, 36, 70, 72, 74, 79, 80, 82, 92, 93], "tavenard": [0, 28, 30, 31, 33, 70, 80, 92, 93], "romain": [0, 28, 30, 31, 33, 70, 80, 92], "courti": [0, 2, 7, 8, 12, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 45, 48, 50, 57, 60, 70, 72, 73, 74, 76, 79, 80, 81, 82, 86, 88, 92, 93], "nicola": [0, 3, 7, 12, 28, 29, 30, 31, 33, 34, 36, 50, 59, 70, 72, 74, 79, 80, 82, 86, 92, 93], "applic": [0, 26, 28, 29, 30, 31, 33, 36, 57, 72, 74, 78, 80, 81, 82, 83, 91, 92], "graph": [0, 30, 33, 37, 38, 50, 70, 71, 79, 80, 82, 92, 93, 94], "machin": [0, 2, 3, 8, 13, 28, 30, 31, 33, 35, 57, 72, 74, 80, 81, 82, 83, 92, 93, 94], "learn": [0, 2, 3, 6, 8, 13, 24, 28, 29, 30, 31, 33, 36, 37, 38, 48, 49, 60, 69, 70, 72, 73, 74, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 92, 93, 94], "icml": [0, 2, 28, 30, 31, 33, 35, 76, 80, 83, 90, 92, 93], "47": [0, 39, 45, 57, 73, 80, 92, 94], "chowdhuri": [0, 80, 92], "m\u00e9moli": [0, 80, 92, 93], "network": [0, 8, 32, 79, 80, 92, 93, 94], "stabl": [0, 5, 71, 80, 92, 93, 94], "invari": [0, 80, 92], "infer": [0, 71, 80, 92], "ima": [0, 80, 92], "757": [0, 80, 92], "787": [0, 80, 92], "fused_gromov_wasserstein2": [0, 80], "fgw": [0, 29, 31, 36, 37, 38, 70, 79, 80, 92, 94], "differenti": [0, 6, 7, 45, 80, 92, 93, 94], "wrt": [0, 2, 71, 74, 80, 90], "quadrat": [0, 9, 38, 66, 75, 80, 82, 83, 84, 88, 89, 90, 92, 94], "38": [0, 2, 3, 9, 25, 27, 35, 57, 65, 67, 80, 92, 93], "vincent": [0, 2, 29, 31, 32, 33, 35, 36, 70, 79, 80, 82, 92, 93], "cuaz": [0, 2, 29, 31, 32, 33, 35, 36, 70, 79, 80, 82, 92, 93], "corn": [0, 2, 29, 32, 35, 36, 79, 80, 82, 92, 93], "onlin": [0, 2, 35, 50, 68, 80, 92, 93, 94], "2021": [0, 2, 16, 29, 33, 35, 36, 65, 71, 76, 80, 81, 82, 85, 89, 92, 93, 94], "gromov_barycent": [0, 34, 80, 93, 94], "lambda": [0, 28, 80, 83, 85, 93], "tol": [0, 21, 34, 74, 80, 83, 87], "warmstartt": [0, 80, 94], "init_c": [0, 80], "random_st": [0, 2, 32, 34, 35, 40, 75, 76, 80, 88], "leq": [0, 80, 81, 82, 83, 93], "block": [0, 2, 26, 32, 69, 72, 73, 74, 76, 80, 92, 93], "descent": [0, 2, 6, 7, 43, 45, 73, 74, 76, 80, 81, 82, 92, 93], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 71, 72, 74, 80, 81, 88, 90, 92, 93, 94], "lambda_": [0, 80, 93], "gw": [0, 23, 29, 36, 80, 82, 83, 92, 94], "base": [0, 29, 31, 33, 36, 37, 38, 69, 70, 72, 74, 79, 80, 87, 90, 92, 93, 94], "specif": [0, 34, 68, 69, 72, 74, 80, 89, 93, 94], "updat": [0, 72, 74, 80, 81, 85, 88, 90, 94], "accord": [0, 80, 90], "kernel": [0, 24, 31, 74, 80, 83, 90, 92, 93], "calcul": [0, 15, 39, 71, 72, 73, 80], "warmstart": [0, 31, 72, 73, 80, 94], "success": [0, 80], "random": [0, 2, 3, 5, 6, 8, 14, 15, 19, 21, 23, 25, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 48, 56, 60, 64, 65, 66, 71, 75, 76, 79, 80, 86, 88, 90, 94], "user": [0, 57, 69, 80, 92, 93, 94], "randomst": [0, 2, 6, 19, 23, 25, 34, 40, 48, 75, 76, 80, 86, 88, 90], "instanc": [0, 5, 68, 75, 76, 80, 82, 88, 90, 93, 94], "fix": [0, 35, 45, 69, 72, 76, 79, 80, 81, 83, 87, 92, 94], "seed": [0, 3, 5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 43, 44, 45, 65, 66, 71, 75, 80, 86, 90], "reproduc": [0, 11, 69, 80, 88, 93], "permut": [0, 2, 3, 7, 80], "arbitrarili": [0, 80], "dure": [0, 80, 81], "12": [0, 1, 5, 9, 11, 13, 14, 18, 25, 31, 33, 35, 41, 45, 57, 80, 81, 83, 92, 93], "gabriel": [0, 8, 31, 33, 70, 72, 80, 83, 92, 93], "marco": [0, 8, 29, 31, 33, 36, 70, 72, 79, 80, 81, 82, 83, 92, 93], "justin": [0, 31, 33, 80, 83, 92, 93], "solomon": [0, 31, 33, 72, 80, 83, 92, 93], "averag": [0, 31, 33, 71, 74, 76, 80, 83, 88, 92, 93], "gromov_wasserstein": [0, 2, 29, 30, 33, 36, 80, 93], "kl_loss": [0, 80], "minim": [0, 2, 3, 4, 6, 7, 28, 29, 31, 35, 36, 45, 76, 80, 81, 82, 87, 89, 90, 93, 94], "13": [0, 11, 13, 17, 18, 25, 30, 31, 41, 49, 50, 55, 57, 80, 83, 92, 93, 94], "facundo": [0, 80, 92, 93], "approach": [0, 11, 18, 20, 22, 26, 43, 72, 80, 81, 92, 93], "object": [0, 1, 2, 3, 4, 5, 8, 11, 34, 43, 51, 52, 55, 56, 72, 73, 74, 80, 81, 87, 90, 92, 93, 94], "foundat": [0, 80, 83, 92, 93, 94], "11": [0, 5, 10, 11, 18, 25, 31, 33, 35, 41, 57, 63, 65, 76, 80, 91, 92, 93], "417": [0, 80, 92, 93, 94], "487": [0, 80, 92, 93, 94], "gromov_wasserstein2": [0, 2, 80, 93, 94], "To": [0, 2, 8, 34, 35, 71, 72, 80, 83, 90, 92, 93], "recov": [0, 2, 8, 80, 88, 93, 94], "defin": [0, 5, 8, 34, 39, 48, 50, 68, 71, 72, 74, 80, 81, 85, 87, 93, 94], "d_": [0, 80], "sqrt": [0, 4, 35, 41, 60, 71, 78, 80, 83, 86], "gw_dist": [0, 29, 33, 36, 80], "max_sliced_wasserstein_dist": [0, 86], "x_": [0, 45, 72, 74, 81, 86], "x_t": [0, 72, 74, 86, 90], "n_project": [0, 3, 4, 59, 60, 86], "50": [0, 1, 3, 4, 5, 6, 8, 11, 15, 16, 17, 21, 31, 32, 33, 35, 40, 42, 43, 51, 53, 57, 65, 72, 81, 83, 86, 87, 92, 94], "mont": [0, 86], "carlo": [0, 86], "approxim": [0, 8, 11, 24, 72, 73, 74, 80, 81, 82, 86, 92, 93], "slice": [0, 9, 61, 70, 75, 81, 92, 93, 94], "mathcal": [0, 39, 74, 75, 78, 79, 80, 86, 90, 93], "swd": [0, 59, 86], "_p": [0, 86, 93], "nu": [0, 3, 4, 7, 30, 76, 81, 86], "underset": [0, 81, 86], "_in": [0, 86], "theta_": [0, 86], "stand": [0, 86, 94], "pushforward": [0, 86], "ni": [0, 86], "mapsto": [0, 80, 86], "rangl": [0, 72, 86], "n_samples_a": [0, 72, 86], "n_samples_b": [0, 72, 86], "case": [0, 26, 50, 65, 69, 71, 73, 81, 85, 86, 87, 92], "sliced_wasserstein_dist": [0, 3, 59, 86, 94], "20": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 18, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 40, 41, 43, 45, 47, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 72, 80, 81, 86, 92, 93, 94], "normal": [0, 4, 10, 11, 13, 14, 28, 29, 31, 36, 55, 63, 71, 74, 76, 79, 86, 90, 94], "35": [0, 5, 21, 32, 41, 57, 86, 92, 93, 94], "deshpand": [0, 86, 92, 93], "hu": [0, 86, 92, 93], "sun": [0, 86, 92, 93], "pyrro": [0, 86, 92, 93], "siddiqui": [0, 86, 92, 93], "koyejo": [0, 86, 92, 93], "schwing": [0, 86, 92, 93], "gan": [0, 9, 38, 86, 92, 93, 94], "proceed": [0, 13, 72, 86, 87, 92, 93], "ieee": [0, 57, 74, 82, 86, 92, 93], "cvf": [0, 86, 92, 93], "vision": [0, 3, 59, 86, 92, 93], "pattern": [0, 57, 74, 82, 86, 92, 93], "recognit": [0, 86, 92, 93], "10648": [0, 86, 92, 93], "10656": [0, 86, 92, 93], "semidiscrete_wasserstein2_unif_circl": [0, 56, 81, 94], "mu_n": [0, 4, 8, 81, 86], "alpha_i": [0, 81, 86], "x_i": [0, 4, 30, 81, 86, 93], "left": [0, 6, 13, 18, 22, 40, 45, 71, 72, 74, 78, 80, 81, 84, 86, 87, 88, 90, 91], "right": [0, 6, 13, 14, 29, 31, 36, 45, 50, 62, 68, 69, 72, 74, 78, 80, 81, 86, 87, 88, 90, 91, 94], "alpha_k": [0, 81], "unif": [0, 2, 4, 6, 14, 15, 16, 30, 33, 34, 35, 42, 43, 44, 45, 48, 54, 56, 64, 81, 86, 88, 90], "delta_": [0, 4, 30, 81, 86, 87, 93], "02111111": [0, 81], "46": [0, 57, 60, 81, 86, 92, 94], "bonet": [0, 4, 56, 60, 70, 81, 86, 92], "berg": [0, 60, 81, 86, 92], "septier": [0, 60, 81, 86, 92], "drumetz": [0, 60, 81, 86, 92], "pham": [0, 60, 81, 86, 92], "2023": [0, 40, 60, 76, 81, 86, 87, 92, 94], "spheric": [0, 9, 38, 61, 70, 81, 86, 92, 94], "omega": [0, 66, 72, 82, 83, 87, 88, 89, 93], "dim_a": [0, 72, 83, 85, 89], "dim_b": [0, 72, 83, 85, 89], "both": [0, 2, 7, 24, 50, 65, 68, 72, 73, 81, 85, 93, 94], "By": [0, 72, 76, 85, 93], "too": [0, 72, 76, 93], "small": [0, 2, 7, 50, 69, 72, 76, 80, 81, 92, 93, 94], "should": [0, 26, 45, 66, 69, 71, 72, 74, 76, 80, 81, 85, 87, 90, 92, 93, 94], "enough": [0, 28, 72, 76, 93], "you": [0, 15, 18, 20, 21, 31, 33, 50, 57, 69, 71, 72, 76, 79, 84, 92, 93, 94], "sharper": [0, 72, 93], "avoid": [0, 69, 71, 72, 74, 76, 83, 93, 94], "numer": [0, 22, 33, 50, 63, 71, 72, 74, 76, 83, 90, 92, 93, 94], "last": [0, 32, 50, 72, 73, 85, 93, 94], "veri": [0, 26, 50, 72, 80, 90, 92, 93, 94], "slow": [0, 72, 76, 93, 94], "practic": [0, 8, 69, 72, 76, 93], "even": [0, 10, 11, 63, 64, 72, 93, 94], "reason": [0, 68, 72, 93, 94], "finit": [0, 71, 72, 81, 90, 93], "why": [0, 69, 72, 94], "sinkhorn_epsilon_sc": [0, 72, 74, 93], "reli": [0, 72, 80, 92, 93], "warm": [0, 72, 93, 94], "start": [0, 35, 43, 50, 69, 71, 72, 76, 85, 90, 92, 94], "sometim": [0, 72, 93], "better": [0, 8, 47, 72, 87, 93, 94], "greedi": [0, 72, 92, 93, 94], "version": [0, 2, 34, 35, 56, 68, 69, 71, 72, 82, 85, 92, 93, 94], "greenkhorn": [0, 70, 72, 93, 94], "speedup": [0, 72, 93, 94], "screen": [0, 38, 49, 72, 75, 84, 92, 93], "screenkhorn": [0, 38, 49, 70, 75, 84, 93, 94], "aim": [0, 4, 8, 66, 72, 74, 90, 93], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 45, 46, 50, 56, 64, 65, 68, 69, 70, 71, 72, 80, 81, 83, 85, 93, 94], "strongli": [0, 69, 72, 80, 93, 94], "recommend": [0, 69, 72, 80, 93, 94], "those": [0, 12, 50, 72, 74, 80, 81, 89, 93, 94], "tupl": [0, 72, 73, 81, 82], "logarithm": [0, 71, 72], "36552929": [0, 72, 93], "13447071": [0, 72, 93], "lightspe": [0, 72, 74, 87, 89, 92, 93], "advanc": [0, 32, 39, 45, 47, 48, 68, 72, 73, 74, 87, 88, 89, 92, 93], "neural": [0, 8, 24, 25, 32, 39, 45, 47, 48, 72, 73, 74, 79, 87, 88, 89, 92, 93, 94], "system": [0, 24, 25, 32, 39, 45, 47, 48, 69, 71, 72, 74, 87, 88, 89, 92, 93], "nip": [0, 24, 25, 72, 74, 87, 89, 92, 93], "26": [0, 19, 27, 41, 47, 57, 72, 74, 87, 89, 92, 93, 94], "2013": [0, 72, 74, 87, 89, 90, 92, 93], "9": [0, 2, 4, 8, 11, 16, 18, 21, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 44, 45, 46, 48, 51, 57, 64, 72, 74, 85, 87, 89, 92, 93], "stabil": [0, 72, 81, 89, 92, 93, 94], "preprint": [0, 16, 57, 63, 72, 74, 76, 81, 82, 89, 92, 93], "1610": [0, 72, 89, 92, 93], "06519": [0, 72, 89, 92, 93], "34": [0, 5, 41, 57, 72, 92, 93], "feydi": [0, 72, 92, 93], "s\u00e9journ\u00e9": [0, 72, 92, 93], "amari": [0, 72, 92, 93], "trouv\u00e9": [0, 72, 92, 93], "mmd": [0, 72, 92, 93], "diverg": [0, 8, 55, 66, 71, 72, 80, 82, 89, 92, 93, 94], "2681": [0, 72, 92, 93], "2690": [0, 72, 92, 93], "unregular": [0, 72, 74, 82, 85, 87, 89], "sinkhorn_knopp": [0, 72, 89, 93], "classic": [0, 43, 72, 74, 89, 93, 94], "epsilon": [0, 13, 29, 31, 33, 47, 62, 71, 72, 73, 80, 89, 93, 94], "sinkhorn2": [0, 55, 72, 92, 94], "without": [0, 43, 68, 69, 71, 72, 80, 85, 92, 94], "contribut": [0, 68, 72, 93, 94], "26894142136999516": [0, 72], "21": [0, 41, 57, 72, 92, 93], "altschul": [0, 72, 92, 93], "Near": [0, 72, 92, 93], "linear": [0, 1, 5, 8, 24, 25, 27, 32, 37, 38, 65, 70, 71, 72, 73, 74, 76, 78, 80, 81, 82, 85, 89, 90, 92, 93, 94], "31": [0, 1, 3, 5, 41, 50, 57, 59, 72, 78, 86, 92, 93, 94], "sinkhorn_lpl1_mm": [0, 74, 93], "labels_a": [0, 74], "eta": [0, 7, 24, 25, 74, 81], "numinneritermax": [0, 15, 72, 74, 82], "200": [0, 1, 4, 5, 8, 14, 15, 31, 43, 51, 56, 57, 59, 60, 74, 80, 82, 83, 94], "stopinnerthr": [0, 74], "non": [0, 52, 63, 65, 69, 70, 71, 72, 74, 81, 82, 85, 87, 89, 90, 92, 93, 94], "convex": [0, 35, 54, 74, 81, 82, 87, 93], "group": [0, 18, 20, 74, 92, 94], "lasso": [0, 18, 20, 74, 85, 92, 94], "omega_": [0, 74, 93], "omega_g": [0, 74], "_c": [0, 74], "_1": [0, 40, 72, 74, 81, 83, 93], "index": [0, 2, 73, 74, 85, 88, 92], "class": [0, 2, 5, 8, 21, 26, 32, 40, 70, 72, 75, 76, 79, 94], "label": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 24, 26, 28, 32, 33, 35, 40, 41, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 72, 74, 75, 76, 90, 93, 94], "inner": [0, 72, 74, 80], "tuia": [0, 57, 72, 74, 82, 92, 93], "rakotomamonji": [0, 41, 47, 57, 70, 72, 74, 76, 82, 92, 93], "adapt": [0, 26, 27, 57, 68, 72, 74, 75, 80, 81, 82, 84, 90, 92, 94], "analysi": [0, 38, 49, 57, 69, 72, 74, 76, 81, 82, 91, 92, 94], "99": [0, 2, 57, 74, 82, 92, 93, 94], "1510": [0, 57, 74, 82, 92, 93], "06567": [0, 57, 74, 82, 92, 93], "kl": [0, 52, 62, 71, 72, 73, 80, 87, 89, 92, 93, 94], "kullback": [0, 31, 33, 62, 66, 71, 80, 87, 89, 93], "leibler": [0, 31, 33, 62, 66, 71, 80, 87, 89, 93], "25": [0, 5, 8, 11, 28, 30, 32, 41, 56, 57, 60, 83, 85, 89, 92, 93, 94], "unnorm": [0, 83, 89], "One": [0, 74, 89, 92, 93, 94], "mani": [0, 89, 94], "sinkhorn_reg_sc": [0, 89], "ot_dist": [0, 89], "51122823": [0, 89], "18807035": [0, 89], "frogner": [0, 89, 92, 93], "zhang": [0, 89, 92, 93], "mobahi": [0, 89, 92, 93], "h": [0, 6, 13, 28, 31, 33, 65, 72, 74, 75, 76, 79, 80, 85, 89, 90, 92, 93], "araya": [0, 89, 92, 93], "polo": [0, 89, 92, 93], "poggio": [0, 89, 92, 93], "sinkhorn_knopp_unbalanc": [0, 89, 93], "sinkhorn_stabilized_unbalanc": [0, 89, 93], "sinkhorn_reg_scaling_unbalanc": [0, 89], "sinkhorn_unbalanced2": [0, 89, 93], "31912866": [0, 89], "sim": [0, 74, 86], "et": [0, 3, 59, 65, 72, 81, 86, 92, 93], "al": [0, 3, 59, 65, 72, 81, 86, 92, 93], "radon": [0, 3, 59, 86, 92, 93], "imag": [0, 3, 11, 12, 27, 34, 38, 50, 57, 59, 72, 74, 82, 86, 90, 92, 93, 94], "51": [0, 3, 31, 33, 57, 59, 80, 81, 86, 92, 93], "22": [0, 3, 5, 11, 41, 57, 59, 72, 86, 92, 93, 94], "45": [0, 3, 16, 57, 59, 81, 86, 92, 93, 94], "sliced_wasserstein_spher": [0, 60, 86, 94], "discrep": [0, 60, 80, 83, 86, 94], "ssw_p": [0, 86], "int_": [0, 86], "sigma": [0, 8, 21, 23, 24, 25, 28, 39, 74, 75, 86, 90], "foral": [0, 72, 80, 81, 86, 90], "tx": [0, 12, 86], "_2": [0, 72, 78, 80, 85, 86, 90], "keepdim": [0, 41, 60, 71, 86], "sliced_wasserstein_sphere_unif": [0, 4, 86, 94], "ssw_2": [0, 4, 86], "42": [0, 1, 2, 3, 5, 16, 19, 23, 25, 35, 40, 44, 57, 81, 86, 92, 94], "randn": [0, 1, 3, 5, 6, 8, 15, 23, 30, 33, 39, 41, 45, 48, 60, 64, 71, 86], "500": [0, 3, 4, 5, 6, 8, 19, 25, 31, 43, 56, 71, 73, 80, 86, 87], "ssw": [0, 4, 86], "allclos": [0, 71, 86], "01734": [0, 86], "atol": [0, 71, 86], "reg_typ": [0, 52, 74, 87, 93, 94], "unbalanced_typ": [0, 94], "n_thread": 0, "plan_init": 0, "potentials_init": 0, "discret": [0, 19, 24, 25, 35, 43, 57, 70, 72, 74, 81, 82, 88, 92, 93, 94], "otresult": [0, 90, 94], "t_": [0, 80], "m_": [0, 30, 85, 93], "lambda_r": 0, "lambda_u": 0, "penal": [0, 38, 67, 75, 85, 89, 92], "exact": [0, 17, 38, 49, 57, 67, 72, 75, 81, 83, 84, 89, 90, 92, 93, 94], "array_lik": [0, 90], "l2": [0, 10, 11, 38, 43, 52, 63, 67, 75, 80, 85, 87, 89, 92, 93, 94], "balanc": [0, 90, 93], "unction": 0, "tv": [0, 55], "omp": 0, "_type_": 0, "toler": [0, 34, 71, 73, 83, 87], "re": [0, 59, 60, 64, 65, 71, 81, 94], "obtain": [0, 56, 74, 85, 93], "value_linear": [0, 90, 94], "more": [0, 29, 31, 36, 45, 50, 69, 72, 76, 78, 81, 93, 94], "avail": [0, 26, 68, 69, 71, 92, 93, 94], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 70, 71, 72, 75, 81, 87, 90, 93, 94], "origin": [0, 2, 24, 28, 69, 70, 81, 87, 93, 94], "paper": [0, 11, 72, 92, 93, 94], "formul": [0, 83, 87, 92, 93], "17": [0, 18, 25, 41, 57, 81, 87, 92, 93], "blondel": [0, 48, 70, 87, 88, 92, 93, 94], "segui": [0, 14, 48, 87, 88, 92, 93], "rolet": [0, 48, 70, 87, 88, 92, 93], "twenti": [0, 72, 87, 92, 93], "aistat": [0, 72, 74, 87, 92, 93], "tic": [0, 11, 30, 43, 90, 94], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 69, 71, 90, 93, 94], "matlab": [0, 70, 90], "toc": [0, 11, 30, 43, 90, 94], "messag": [0, 69, 72, 90, 94], "elaps": [0, 11, 30, 90], "toq": [0, 90], "julia": [0, 90], "type_a": [0, 71, 86, 90], "length": [0, 71, 73, 81, 85, 88, 90], "bin": [0, 7, 10, 11, 13, 43, 47, 51, 52, 55, 57, 62, 63, 75, 81, 90, 93], "expect": [0, 8, 45, 68, 69, 72, 90, 92, 93], "output": [0, 5, 8, 34, 69, 72, 80, 88, 90, 92, 93, 94], "pytorch": [0, 9, 38, 45, 70, 71, 75, 79, 84, 88, 90, 92, 93, 94], "wasserstein_1d": [0, 7, 56, 81, 93, 94], "dimension": [0, 33, 38, 49, 64, 72, 75, 76, 81, 92, 93, 94], "15": [0, 5, 8, 12, 13, 14, 17, 18, 22, 25, 28, 30, 40, 41, 45, 57, 64, 74, 81, 89, 92, 93, 94], "batch": [0, 7, 8, 32, 72, 74, 79, 80, 81, 88], "formal": [0, 72, 81], "so": [0, 2, 8, 43, 66, 80, 81, 90, 93, 94], "wai": [0, 19, 69, 81, 93, 94], "build": [0, 8, 28, 69, 74, 81, 92, 93, 94], "individu": [0, 68, 81], "quantil": [0, 81, 83], "integr": [0, 81], "them": [0, 29, 36, 71, 74, 81, 83, 94], "prefer": [0, 69, 76, 81, 94], "whenev": [0, 81], "differ": [0, 2, 16, 31, 38, 43, 50, 58, 68, 72, 73, 74, 80, 81, 84, 89, 92, 93, 94], "over": [0, 8, 35, 71, 72, 80, 81, 83], "posit": [0, 2, 7, 10, 11, 13, 35, 47, 50, 51, 52, 55, 57, 62, 63, 68, 71, 74, 78, 81, 82, 83, 84, 92, 93], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 71, 73, 80, 81, 82, 87, 90, 92, 93, 94], "least": [0, 69, 74, 81], "chap": [0, 81], "atom": [0, 72, 80, 81], "consid": [0, 7, 26, 28, 35, 39, 68, 69, 72, 81, 83, 90, 93], "have": [0, 8, 26, 35, 50, 68, 69, 71, 80, 81, 90, 93, 94], "been": [0, 8, 70, 81, 83, 90, 92, 93, 94], "prior": [0, 69, 72, 81, 93], "being": [0, 43, 50, 69, 74, 81, 93, 94], "wasserstein_circl": [0, 56, 81, 94], "ot_": [0, 81, 93], "cdf_u": [0, 81], "cdf_v": [0, 81], "w_1": [0, 81, 93], "levm": [0, 81], "hundries": [0, 81, 92], "shayan": [0, 81, 92], "marcel": [0, 81, 92], "klatt": [0, 81, 92], "axel": [0, 81, 92], "munk": [0, 81, 92], "circular": [0, 28, 81, 92], "direct": [0, 35, 55, 81, 82, 87, 92, 94], "innov": [0, 81, 92], "bicentenni": [0, 81, 92], "tribut": [0, 81, 92], "florenc": [0, 81, 92], "nightingal": [0, 81, 92], "singapor": [0, 81, 92], "springer": [0, 81, 92], "natur": [0, 71, 81, 92], "2022": [0, 32, 74, 78, 80, 81, 92, 94], "57": [0, 57, 74, 78, 81, 89, 92, 94], "82": [0, 50, 57, 81, 92, 94], "weak_optimal_transport": [0, 42, 91], "weak": [0, 38, 49, 70, 75, 84, 92, 93, 94], "_j": [0, 76, 81, 87, 88, 91], "guess": [0, 82, 91], "indep": [0, 82, 91], "joint": [0, 35, 72, 74, 80, 82, 91, 92, 93, 94], "densiti": [0, 82, 91], "numitermaxemd": [0, 82, 91], "stopthr2": [0, 82, 91], "gozlan": [0, 16, 81, 91, 92, 93], "roberto": [0, 91, 92, 93], "samson": [0, 91, 92, 93], "tetali": [0, 91, 92, 93], "kantorovich": [0, 81, 91, 92, 93], "dualiti": [0, 11, 91, 92, 93], "273": [0, 81, 91, 92, 93], "3327": [0, 91, 92, 93], "3405": [0, 91, 92, 93], "go": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 94], "end": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 81, 85, 93, 94], "download": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66], "full": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 71, 72, 88, 90, 92, 94], "author": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 92], "remi": [1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 32, 39, 41, 42, 44, 45, 46, 50, 51, 52, 53, 54, 55], "polytechniqu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 42, 44, 46], "edu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 42, 43, 44, 46, 93], "licens": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66], "mit": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 92], "sphinx_gallery_thumbnail_numb": [1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 40, 41, 42, 44, 46, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65], "pyplot": [1, 4, 5, 8, 10, 12, 13, 15, 16, 19, 23, 25, 28, 30, 32, 34, 43, 45, 46], "pl": [1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 16, 18, 20, 21, 22, 24, 26, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66], "manual_se": [1, 3, 4, 5, 8, 32], "n_source_sampl": [1, 5, 18, 22, 24, 74], "n_target_sampl": [1, 5, 18, 22, 24, 74], "noise_level": [1, 5, 24], "make_data_classif": [1, 18, 20, 21, 22, 24, 26], "gaussrot": [1, 24], "nz": [1, 21, 24, 41, 75], "xt": [1, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 33, 41, 42, 44, 53, 54, 56, 59, 60, 64, 65, 66, 72, 74, 78, 84, 85, 88, 93], "yt": [1, 18, 20, 21, 22, 24, 26, 30, 41, 74], "one": [1, 3, 5, 7, 19, 23, 24, 25, 28, 32, 34, 35, 48, 50, 69, 71, 72, 74, 75, 81, 85, 93, 94], "mode": [1, 5, 24, 74], "chang": [1, 2, 5, 24, 34, 35, 69, 71, 72, 81, 93, 94], "varianc": [1, 5, 24, 33], "map": [1, 5, 27, 38, 48, 66, 70, 74, 75, 78, 80, 81, 88, 90, 92, 94], "figur": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69], "clf": [1, 2, 3, 4, 5, 8, 11, 21, 23, 24, 29, 30, 31, 32, 34, 35, 36, 39, 45, 46, 50, 54, 55, 63, 65], "scatter": [1, 2, 3, 4, 5, 6, 8, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 30, 32, 33, 34, 35, 40, 41, 50, 56, 60, 64, 65, 66], "marker": [1, 5, 14, 16, 18, 20, 21, 22, 24, 26, 32, 35, 40, 41], "o": [1, 5, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 34, 35, 43, 46, 50, 79, 80, 92, 93, 94], "legend": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 23, 24, 26, 32, 35, 40, 41, 42, 43, 44, 47, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 65], "loc": [1, 5, 14, 18, 20, 22, 23, 24, 26, 29, 31, 36, 40, 41, 42, 44, 53, 54, 59, 60, 62, 65], "titl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 50, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 84, 92], "text": [1, 4, 5, 6, 8, 14, 19, 21, 23, 24, 42, 44, 45, 50, 53, 57, 59, 60, 62, 69, 72, 78, 80, 81, 85, 90, 93], "requires_grad": [1, 6, 45], "adam": [1, 5, 32, 80], "lr": [1, 2, 3, 4, 5, 6, 7, 8, 32, 45, 48, 88], "n_iter": [1, 4, 5, 8], "rang": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 21, 28, 29, 31, 32, 34, 35, 36, 39, 40, 43, 45, 46, 50, 55, 56, 59, 60, 63, 65, 66, 94], "nois": [1, 5, 8, 28, 64, 75], "minu": [1, 5], "becaus": [1, 5, 81, 93, 94], "maxim": [1, 5, 81, 88, 89, 94], "te": [1, 5], "loss_dual_entrop": [1, 5], "append": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 28, 29, 31, 32, 34, 35, 36, 43, 45, 63, 64, 90], "detach": [1, 2, 3, 4, 5, 6, 7, 8, 32, 45, 71], "3d": [1, 4, 5, 8, 10, 11, 16, 60, 63], "backward": [1, 2, 3, 5, 6, 7, 8, 32, 45], "zero_grad": [1, 5, 8], "grid": [1, 4, 5, 6, 8, 60, 94], "neg": [1, 5, 65, 71, 72, 80, 81, 85, 87, 89, 92], "xlabel": [1, 4, 5, 6, 8, 19, 25, 30, 32, 35, 39, 40, 45, 50, 55, 56, 59, 60], "ge": [1, 53, 57], "plan_dual_entrop": [1, 5], "20204949002247338": 1, "19": [1, 4, 9, 18, 25, 41, 43, 48, 49, 57, 88, 92, 93, 94], "383428565073125": 1, "65107330210596": 1, "36": [1, 3, 5, 57, 85, 89, 92, 93], "40194024601092": 1, "73057896529872": 1, "41": [1, 7, 50, 57, 85, 89, 92, 94], "28484075850784": 1, "60": [1, 3, 4, 5, 7, 8, 10, 11, 13, 31, 32, 33, 35, 43, 47, 51, 52, 57, 62, 63, 81], "13568311247837": 1, "347413443016016": 1, "80": [1, 4, 5, 8, 11, 14, 31, 35, 51, 57, 94], "426712152733515": 1, "90": [1, 5, 8, 16, 31, 50, 51, 55, 57, 94], "45594140110095": 1, "46847301495387": 1, "110": [1, 5, 8, 31, 51, 57], "47305859845829": 1, "120": [1, 5, 8, 31, 51, 57, 60], "47523155434341": 1, "130": [1, 5, 8, 31, 51, 57, 94], "476345732898444": 1, "140": [1, 5, 8, 31, 51, 57, 94], "47716709994315": 1, "150": [1, 4, 5, 8, 16, 18, 20, 22, 24, 26, 27, 31, 43, 46, 51, 56, 57, 94], "477700563087105": 1, "160": [1, 5, 8, 31, 43, 51, 57, 94], "47809724496496": 1, "170": [1, 5, 8, 31, 51, 57, 94], "47840460062189": 1, "180": [1, 5, 8, 31, 43, 51, 57], "478648650683404": 1, "190": [1, 5, 8, 31, 51, 57], "478845473012946": 1, "plot2d_samples_mat": [1, 20, 42, 44, 53, 54], "zorder": [1, 2, 5, 35, 40, 46], "01": [1, 9, 10, 17, 18, 22, 27, 29, 30, 31, 33, 36, 37, 41, 48, 49, 51, 55, 57, 58, 63, 64, 67, 72, 83, 85], "loss_dual_quadrat": 1, "gq": 1, "plan_dual_quadrat": 1, "0018442196020623663": 1, "487824387805805": 1, "299723603085543": 1, "15464201406162": 1, "617267628537185": 1, "05151147069902": 1, "91815161482398": 1, "20180087726417": 1, "28127936838481": 1, "31590183857952": 1, "33509941279608": 1, "34118289546517": 1, "3444848987324": 1, "34632326816542": 1, "34756609671153": 1, "34840565534252": 1, "34896867971146": 1, "349331421518066": 1, "34955989053499": 1, "349713238476255": 1, "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 81, 93], "script": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 94], "minut": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66], "279": [1, 9], "plot_dual_ot_pytorch": [1, 9], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 90, 94], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 94], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 93, 94], "ipynb": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 92, 94], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 69, 94], "express": [2, 6, 68, 93], "part": [2, 41, 94], "model": [2, 3, 5, 32, 72, 92, 93], "actual": [2, 93], "proport": [2, 29, 31, 35, 36, 50, 72, 74, 75, 84], "sbm": [2, 29, 31, 32, 35, 36], "allow": [2, 6, 33, 34, 39, 45, 64, 69, 73, 83, 93, 94], "accur": 2, "simultan": [2, 94], "other": [2, 6, 7, 41, 50, 68, 69, 80, 87, 88, 90, 92, 94], "properti": [2, 8, 80, 81, 90, 92, 93], "sklearn": [2, 32, 34, 35, 40, 90, 94], "manifold": [2, 32, 34, 35, 76, 93], "md": [2, 35, 94], "pylab": [2, 3, 6, 7, 11, 14, 16, 18, 20, 21, 22, 24, 26, 29, 31, 33, 35, 36, 39, 40, 41, 42, 44, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66], "torch": [2, 3, 4, 6, 7, 8, 32, 45, 71, 79, 93, 94], "ot": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 45, 46, 47, 48, 51, 53, 58, 59, 60, 62, 63, 64, 65, 66, 69, 70, 92, 94], "rng": [2, 6, 19, 23, 25, 34, 40, 48], "def": [2, 3, 4, 5, 6, 8, 16, 19, 21, 23, 25, 28, 29, 31, 32, 33, 34, 35, 36, 56, 57, 65, 71, 90], "get_sbm": 2, "nc": [2, 35], "ratio": 2, "nbpc": 2, "round": [2, 29, 31, 33, 35, 36, 50, 83, 89], "astyp": [2, 3, 14, 15, 16, 19, 23, 25, 31, 33, 34, 35], "zero": [2, 3, 4, 6, 8, 10, 11, 22, 29, 31, 33, 35, 36, 45, 50, 52, 54, 55, 56, 63, 71, 73, 80, 81, 90, 94], "rand": [2, 4, 8, 23, 41, 43, 44, 64, 66, 71], "ey": [2, 35, 71], "05": [2, 5, 11, 18, 24, 25, 31, 33, 37, 41, 48, 51, 57, 66, 67, 71, 72, 74, 80, 81, 85], "ones": [2, 8, 14, 15, 28, 29, 30, 31, 35, 36, 43, 50, 53, 59, 60, 65, 66, 71, 74, 80], "2d": [2, 16, 17, 18, 20, 21, 22, 26, 35, 38, 42, 44, 50, 54, 58, 61, 65, 67, 72, 75, 81, 83, 84, 89, 90, 93, 94], "dissimilar": [2, 34, 35], "precomput": [2, 34, 35, 93], "fit_transform": [2, 32, 34, 35, 74], "plot_graph": [2, 35], "color": [2, 4, 5, 6, 7, 10, 13, 15, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 40, 43, 45, 46, 50, 53, 56, 60, 64, 65, 66, 74, 84, 90, 93, 94], "c0": [2, 5, 35, 40, 65, 66], "edgecolor": [2, 15, 35, 40], "cmap": [2, 5, 10, 12, 13, 21, 28, 30, 33, 35, 40, 50, 63, 64, 66], "tab10": [2, 35, 40], "vmax": [2, 21, 28, 35, 40, 45, 50], "subplot": [2, 4, 5, 8, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 41, 42, 44, 45, 50, 54, 55, 57, 63, 64, 65, 66, 84], "axi": [2, 3, 4, 5, 12, 13, 15, 16, 19, 21, 23, 25, 29, 31, 32, 35, 36, 40, 46, 54, 56, 57, 59, 60, 64, 66, 71, 76, 87, 90], "imshow": [2, 12, 13, 18, 19, 20, 22, 23, 25, 26, 30, 33, 35, 39, 40, 42, 45, 50, 53, 54, 57, 64, 66], "nearest": [2, 18, 20, 22, 26, 30, 35, 42, 53, 54, 74], "adjac": [2, 28, 79], "home": [2, 5, 7, 10, 15, 18, 20, 21, 22, 31, 33, 34, 35, 41, 47, 50, 56, 57, 63], "circleci": [2, 5, 7, 10, 15, 18, 20, 21, 22, 31, 33, 34, 35, 41, 47, 50, 56, 57, 63, 94], "local": [2, 34, 35, 41, 69, 93, 94], "lib": [2, 34, 35, 41, 71], "python3": [2, 34, 35, 41], "site": [2, 34, 35, 41], "packag": [2, 34, 35, 41, 72, 90, 93], "_md": [2, 34, 35], "298": [2, 34, 35, 94], "futurewarn": [2, 34, 35], "normalized_stress": [2, 34, 35], "auto": [2, 30, 34, 35, 40], "suppress": [2, 34, 35], "manual": [2, 34, 35], "plot_optim_gromov_pytorch": [2, 9], "81": [2, 57], "userwarn": [2, 5, 7, 15, 18, 20, 21, 22, 31, 33, 35, 47, 50, 57, 63], "colormap": [2, 10, 35, 40, 63], "ignor": [2, 35, 43, 45, 71, 82, 94], "diagon": [2, 26, 28, 71, 78], "want": [2, 8, 15, 18, 20, 21, 31, 33, 45, 50, 57, 93, 94], "up": [2, 69, 94], "min_weight_gw": 2, "a2": [2, 10, 11, 13, 15, 43, 63], "nb_iter_max": [2, 3, 7], "min_a": [2, 93], "our": [2, 3, 7, 92, 93, 94], "c1_torch": 2, "c2_torch": 2, "a0": 2, "random_init": 2, "a1_torch": 2, "requires_grad_": [2, 3, 4, 7], "a2_torch": 2, "loss_it": [2, 3, 7], "clone": [2, 3, 4, 7, 69, 71], "03d": [2, 32], "no_grad": [2, 3, 6, 7, 45], "grad": [2, 3, 4, 6, 7, 41, 45, 71, 80, 87, 88], "zero_": [2, 3, 6, 7, 45], "proj_simplex": [2, 6, 7, 45], "a1": [2, 10, 11, 13, 15, 43, 63], "a0_est": 2, "loss_iter0": 2, "29850312": 2, "20157616": 2, "49992072": 2, "clear": 2, "noe": 2, "receiv": [2, 69], "most": [2, 72, 90, 93, 94], "show": [2, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 68, 81], "here": [2, 4, 65, 80, 81, 92, 93, 94], "previous": 2, "t_unif": 2, "label_unif": 2, "argmax": [2, 29, 31, 32, 35, 36, 39, 45, 71], "t_est": 2, "label_est": 2, "est": 2, "7760154087783518": 2, "5785554952306606": 2, "7708789474385981": 2, "6510858680020267": 2, "now": [2, 4, 50, 71, 93, 94], "seen": [2, 72, 81, 93], "probabl": [2, 7, 16, 32, 35, 45, 74, 78, 80, 81, 92], "link": [2, 29, 31, 69, 92, 94], "graph_compression_gw": 2, "nb_node": 2, "clamp": 2, "a0_est2": 2, "c0_est2": 2, "loss_iter2": 2, "5e": [2, 13, 21, 33, 34, 65], "vmin": [2, 28, 40, 45, 50], "colorbar": [2, 35, 40, 50], "29985821": 2, "18926744": 2, "51087435": 2, "0x7f39dc29eaa0": 2, "306": [2, 9, 94], "liutku": [3, 92, 93], "simsekli": [3, 92, 93], "majewski": [3, 92, 93], "durmu": [3, 92, 93], "st\u00f6ter": [3, 92, 93], "mai": [3, 68, 69, 80, 81, 83, 85, 92, 93, 94], "nonparametr": [3, 92, 93], "diffus": [3, 92, 93], "4104": [3, 92, 93], "4113": [3, 92, 93], "load": [3, 19, 25, 50], "i1": [3, 14, 16, 19, 23, 25], "imread": [3, 12, 13, 14, 16, 19, 23, 25, 34], "redcross": [3, 12, 14, 16], "png": [3, 12, 13, 14, 16, 34, 46], "i2": [3, 14, 16, 19, 23, 25], "tooth": [3, 12, 16], "sz": [3, 14, 16], "xx": [3, 5, 14], "yy": [3, 5, 14], "meshgrid": [3, 4, 5, 14, 16, 71], "arang": [3, 7, 10, 11, 13, 14, 16, 30, 39, 40, 41, 43, 45, 47, 51, 52, 54, 55, 57, 62, 63, 71, 72], "stack": [3, 14, 16, 35, 71], "32": [3, 5, 14, 41, 57, 76, 80, 92, 93], "x3": [3, 14, 15], "collect": [3, 10, 11, 34, 41, 56, 63, 72], "pathcollect": [3, 34, 56], "0x7f39486ee8c0": 3, "devic": [3, 7, 71, 93, 94], "cuda": [3, 7, 70, 94], "is_avail": [3, 7], "x1_torch": 3, "x2_torch": 3, "1e3": 3, "x_all": 3, "gen": 3, "5e1": 3, "ax": [3, 4, 10, 12, 13, 15, 16, 40, 45, 50, 60, 63, 71, 82, 93], "_update_plot": [3, 4, 8, 16, 65], "ani": [3, 4, 8, 16, 43, 65, 68, 69, 71, 73, 81, 82, 85, 90, 92, 93], "funcanim": [3, 4, 8, 16, 65], "gcf": [3, 4, 8, 10, 63, 65], "interv": [3, 4, 8, 16, 59, 60, 65, 71], "repeat_delai": [3, 4, 8, 16, 65], "2000": [3, 4, 7, 8, 16, 43, 65], "onc": [3, 4, 8, 16, 65], "loop": [3, 4, 8, 16, 50, 65, 74], "reflect": [3, 4, 8, 16, 65], "x3_torch": 3, "xbinit": 3, "16": [3, 7, 15, 18, 25, 30, 35, 39, 41, 45, 57, 71, 73, 76, 81, 85, 92, 93], "xbary_torch": 3, "983": [3, 9], "plot_sliced_wass_grad_flow_pytorch": [3, 9], "transform": [4, 18, 19, 20, 22, 24, 26, 74, 88, 90, 93], "cl\u00e9ment": [4, 56, 60, 70], "clement": [4, 56, 60], "univ": [4, 21, 22, 39, 45, 56, 60, 65, 66], "ub": [4, 39, 45, 56, 60, 65, 66], "fr": [4, 7, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 39, 40, 41, 45, 51, 52, 53, 54, 55, 56, 60, 62, 63, 64, 65, 66], "nn": [4, 5, 8, 32, 94], "function": [4, 7, 10, 11, 12, 34, 50, 63, 65, 69, 79, 80, 92, 93, 94], "plot_spher": 4, "xlist": 4, "linspac": [4, 5, 10, 15, 28, 55, 56, 63, 71], "ylist": 4, "z": [4, 10, 35, 47, 60, 63, 70, 72, 81, 87, 90, 92, 93], "plot_wirefram": [4, 60], "grai": [4, 60], "bottom": [4, 13, 50], "half": 4, "set_titl": [4, 10, 13, 15, 45], "0x7f39dc57eef0": 4, "xvisu": [4, 8], "sw": 4, "grad_x": 4, "item": [4, 28, 29, 31, 32, 36, 69], "semilogi": [4, 6, 8], "21361243724822998": 4, "23": [4, 5, 6, 8, 41, 55, 57, 72, 81, 92, 93, 94], "52222222222222": [4, 5, 6, 8], "ivisu": [4, 8], "fig": [4, 12, 13, 15, 16, 33, 34, 39, 40, 45, 54, 60, 64], "add_subplot": [4, 10, 16, 33, 63, 64], "set_xlim": [4, 15, 60], "set_ylim": [4, 15, 60], "995": [4, 9, 81], "plot_ssw_unif_torch": [4, 9], "nvisu": [5, 57], "300": [5, 31, 35, 43], "ax_bound": 5, "mlp": [5, 8], "modul": [5, 8, 32, 47, 50, 69, 72, 76, 79, 84, 92, 94], "__init__": [5, 8, 32, 74, 90], "self": [5, 8, 32, 74, 90], "super": [5, 8, 32], "fc1": [5, 8], "fc2": [5, 8], "relu": [5, 8], "heavisid": [5, 8], "fn": [5, 8], "forward": [5, 8, 32, 79, 93], "ravel": [5, 28, 65, 66, 87, 90], "doubl": [5, 45, 50], "005": [5, 32, 66], "n_batch": 5, "iperm": 5, "randint": [5, 19, 25, 28, 32, 43], "ipermt": 5, "xsi": 5, "xti": 5, "257329928299894": 5, "890456785604675": 5, "58037947236615": 5, "18": [5, 18, 25, 28, 41, 48, 57, 83, 88, 92, 93], "440996850749862": 5, "12608610815788": 5, "275903405782387": 5, "27": [5, 35, 41, 57, 72, 74, 92, 94], "268827591939186": 5, "29": [5, 35, 37, 41, 57, 74, 78, 83, 92, 93, 94], "79159074243252": 5, "63488731570214": 5, "127228618478725": 5, "696522621311644": 5, "33": [5, 33, 39, 41, 45, 47, 57, 72, 73, 92, 93], "46949401889149": 5, "64206913098602": 5, "153816351532946": 5, "283212421610095": 5, "52058538064263": 5, "676096587323535": 5, "458654411651835": 5, "43596310348253": 5, "26194570410683": 5, "01278968196741": 5, "210": [5, 31, 94], "87401169938976": 5, "220": [5, 31, 94], "12820568044987": 5, "230": [5, 31, 43], "63722430960618": 5, "240": [5, 31, 94], "65926621902025": 5, "250": [5, 31, 43], "52742547536184": 5, "260": [5, 31, 94], "12658368170403": 5, "270": [5, 31], "735871196038282": 5, "280": [5, 31, 43, 94], "15756050565185": 5, "290": [5, 31, 94], "070647347170436": 5, "27069736487665": 5, "310": [5, 31, 94], "4032555710632": 5, "320": [5, 11, 31, 43], "751519332118505": 5, "330": [5, 31], "505787072896766": 5, "340": [5, 31, 94], "833572391120526": 5, "350": [5, 31, 33, 37, 94], "540097202879465": 5, "360": [5, 31, 94], "54715464928039": 5, "370": [5, 31], "635978662861795": 5, "380": [5, 31, 94], "85734724064163": 5, "390": [5, 31], "22195044833465": 5, "400": [5, 31, 43, 94], "54526255143114": 5, "410": [5, 31, 94], "2028827111356": 5, "420": [5, 31], "146730918684945": 5, "430": [5, 31], "32427691564021": 5, "440": [5, 31, 94], "51095472212391": 5, "450": [5, 31], "56664149963812": 5, "460": [5, 31, 94], "5571464161218": 5, "470": [5, 31], "7012331965002": 5, "480": [5, 31], "754363123393354": 5, "490": [5, 31], "12920968279601": 5, "nv": [5, 65], "xl": 5, "yl": 5, "xg": [5, 8], "concaten": [5, 6, 15, 23, 41, 46, 56, 64, 66, 71, 85, 90], "wxg": 5, "exp": [5, 50, 56, 71, 76, 88, 93], "iv": [5, 56, 65], "gg": [5, 30], "wt": [5, 78, 88], "reshap": [5, 19, 23, 25, 28, 32, 34, 41, 43, 47, 51, 52, 55, 57, 62, 64, 65, 71, 72, 83, 85], "pcolormesh": 5, "green": [5, 7], "plot_stoch_continuous_ot_pytorch": [5, 9], "159": [5, 57], "doe": [5, 50, 69, 71, 80, 93, 94], "handl": [5, 7, 93, 94], "quadmesh": 5, "http": [5, 47, 50, 54, 68, 71, 72, 87, 90, 92, 93, 94], "org": [5, 47, 54, 68, 71, 72, 87, 90, 92, 93, 94], "tutori": [5, 69, 93], "legend_guid": 5, "html": [5, 50, 69, 71, 92], "custom": 5, "handler": 5, "173": [5, 57], "187": [5, 57], "788": [5, 9], "mix": [6, 7, 45], "word": [6, 93], "suppos": [6, 72, 93], "s_k": 6, "w_k": [6, 93], "belong": [6, 33, 64, 85], "delta_k": 6, "observ": [6, 72, 75], "pot": [6, 7, 12, 18, 33, 34, 39, 45, 48, 49, 64, 66, 70, 71, 73, 90, 94], "nt1": 6, "ns1": 6, "xs1": [6, 21], "xs2": [6, 21, 56], "correspond": [6, 7, 26, 50, 76, 80, 81, 85, 93, 94], "s_1": 6, "s_2": 6, "0x7f3a681a9030": 6, "h2": [6, 29, 31, 36, 80], "m2": [6, 54, 55], "2e": [6, 47, 52, 65], "rate": [6, 80, 81, 88], "niter": [6, 43, 45, 81], "get_loss": 6, "mv": 6, "squar": [6, 34, 50, 54, 55, 71, 74, 76, 80, 86, 87, 90, 92, 93, 94], "mixtur": 6, "09980706": 6, "90019294": 6, "dot": [6, 10, 11, 21, 23, 29, 31, 33, 36, 43, 44, 50, 63, 64, 71, 90], "c3": [6, 29, 31, 36, 46], "0x7f39e841d150": 6, "549": [6, 9], "plot_unmix_optim_torch": [6, 9], "refer": [7, 29, 31, 36, 69, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91], "ensur": [7, 69, 81, 93], "remain": 7, "illustr": [7, 10, 11, 12, 13, 14, 15, 16, 28, 29, 30, 31, 32, 35, 36, 40, 41, 42, 44, 45, 47, 50, 51, 52, 53, 56, 57, 59, 60, 62, 63, 65, 69, 94], "within": [7, 68, 71, 80], "framework": [7, 35, 94], "ncourti": [7, 12, 33, 34], "irisa": [7, 12, 28, 30, 33, 34, 53, 64], "mpl": 7, "make_1d_gauss": [7, 10, 11, 13, 43, 47, 51, 52, 55, 57, 62, 63], "gauss": [7, 47, 51, 52, 55, 62, 74], "red": [7, 19, 25, 30, 32, 50], "to_rgb": 7, "blue": [7, 12, 19, 25, 30, 32, 33, 39, 40, 45, 50], "dtype": [7, 10, 11, 13, 43, 47, 51, 52, 55, 57, 59, 60, 62, 63, 71, 72], "gaussian": [7, 8, 10, 23, 24, 25, 28, 43, 47, 51, 52, 55, 57, 62, 63, 70, 71, 74, 75, 90, 92, 93, 94], "mean": [7, 10, 11, 13, 29, 31, 32, 36, 40, 43, 47, 51, 52, 55, 56, 57, 59, 60, 62, 63, 71, 72, 75, 76, 78, 79, 81, 93, 94], "std": [7, 10, 11, 13, 30, 43, 47, 51, 52, 55, 56, 57, 59, 60, 62, 63, 71, 75, 80, 94], "enforc": [7, 93], "x_torch": 7, "a_torch": 7, "b_torch": 7, "800": [7, 31, 43], "figsiz": [7, 11, 12, 13, 15, 16, 18, 19, 20, 22, 23, 25, 26, 28, 29, 31, 32, 34, 36, 40, 41, 43, 45, 47, 48, 51, 52, 54, 57, 60, 62, 63], "onto": [7, 18, 20, 22, 74, 80, 87, 90, 93], "curv": [7, 45], "everi": [7, 35, 73, 80, 92], "lw": [7, 13, 29, 31, 36, 40, 50], "evolut": [7, 35, 56, 72, 80, 92], "fontsiz": [7, 13, 28, 29, 30, 31, 32, 33, 35, 36, 40, 50, 60, 65], "solver_1d": [7, 56, 94], "than": [7, 50, 71, 80, 93, 94], "revers": [7, 71], "throw": [7, 94], "futur": [7, 72, 94], "releas": [7, 10, 63, 72, 92, 93], "mt": [7, 78], "transpos": [7, 39, 45, 71, 94], "ndim": 7, "trigger": [7, 73], "aten": 7, "src": 7, "nativ": 7, "tensorshap": 7, "cpp": 7, "3571": 7, "cw": 7, "contigu": 7, "tw": [7, 79, 92], "bary_torch": 7, "instant": 7, "955": [7, 9], "plot_wass1d_torch": [7, 9], "fit": [8, 23, 25, 26, 34, 72, 74, 81, 93], "g_": 8, "realist": 8, "drawn": [8, 75, 84], "indistinguish": 8, "mu_d": 8, "arjovsky2017": 8, "access": [8, 50, 92], "cannot": [8, 26, 43, 74, 93, 94], "larg": [8, 26, 48, 74, 76, 83, 88, 92, 93, 94], "genevay2018": 8, "studi": 8, "fatras2019": 8, "arjovski": 8, "chintala": 8, "bottou": 8, "adversari": [8, 93], "214": 8, "223": 8, "genevai": [8, 48, 72, 88, 92, 93], "aud": [8, 72, 92], "fatra": [8, 48, 53, 70, 92], "zine": 8, "gribonv": 8, "2020": [8, 13, 39, 45, 72, 73, 79, 83, 92, 93, 94], "june": 8, "asymptot": 8, "23nd": 8, "108": [8, 57, 94], "n_dim": 8, "n_featur": [8, 32, 40, 74, 79, 90], "get_data": 8, "n_sampl": [8, 15, 33, 34, 40, 64, 74], "angl": [8, 23, 56], "cat": 8, "co": [8, 23, 38, 41, 49, 54, 56, 60, 73, 90, 92, 94], "sin": [8, 23, 28, 41, 54, 56, 60, 90], "0x7f394869e3e0": 8, "fc3": 8, "rmsprop": 8, "00019": 8, "doc": [8, 69, 71, 94], "size_batch": 8, "stati": 8, "n_visu": 8, "xnvisu": 8, "ab": [8, 30, 33, 55, 71, 87, 90, 93, 94], "xn": 8, "xd": 8, "smapl": 8, "compt": 8, "del": 8, "9009847640991211": 8, "10964284837245941": 8, "04564394801855087": 8, "03516071289777756": 8, "05013977363705635": 8, "058588504791259766": 8, "03730057179927826": 8, "04171676188707352": 8, "03168988972902298": 8, "031197285279631615": 8, "03596879169344902": 8, "03272819146513939": 8, "032379165291786194": 8, "03959248960018158": 8, "029337508603930473": 8, "05796702206134796": 8, "034939464181661606": 8, "022607704624533653": 8, "04347885772585869": 8, "1164197325706482": 8, "75": [8, 57, 94], "125": [8, 10, 11, 46, 57], "175": [8, 43, 57, 94], "199": [8, 57, 83, 94], "xtick": [8, 11, 18, 20, 22, 26, 30, 40, 55, 65, 66], "ytick": [8, 11, 18, 20, 22, 26, 30, 40, 66], "xlim": [8, 34, 40, 50, 55, 56], "ylim": [8, 34, 40, 55, 56], "0x7f39e841dba0": 8, "910": [8, 9, 31, 63], "plot_wass2_gan_torch": [8, 9], "02": [9, 18, 24, 25, 27, 31, 33, 37, 41, 48, 49, 51, 57, 58, 64, 83], "54": [9, 57, 79, 92], "764": [9, 43], "execut": [9, 17, 27, 37, 49, 58, 61, 67, 81, 93, 94], "auto_examples_backend": 9, "file": [9, 17, 27, 37, 38, 46, 49, 58, 61, 67, 93, 94], "minibatch": [9, 38, 88, 93, 94], "04": [9, 18, 24, 25, 30, 31, 33, 48, 51, 57, 58], "mb": [9, 17, 27, 37, 49, 58, 61, 67], "flow": [9, 38, 75, 90, 92, 93, 94], "00": [9, 17, 18, 21, 24, 25, 27, 30, 31, 33, 37, 49, 57, 58, 61, 64, 67, 85], "continu": [9, 35, 38, 43, 72, 81, 88, 93], "estim": [9, 21, 27, 30, 31, 33, 38, 43, 48, 69, 70, 72, 74, 75, 78, 80, 81, 82, 88, 90, 92, 94], "embed": [9, 31, 32, 33, 34, 38, 80, 92, 93], "sphere": [9, 38, 86, 94], "unmix": [9, 35, 38, 72, 80, 90, 92, 93, 94], "unic": [10, 11, 18, 19, 20, 21, 23, 24, 25, 26, 32, 39, 41, 45, 51, 52, 53, 54, 55, 81], "plt": [10, 12, 13, 15, 16, 19, 23, 25, 28, 34], "necessari": [10, 11, 63, 64, 68, 69, 81, 92, 94], "mpl_toolkit": [10, 11, 33, 63, 64], "mplot3d": [10, 11, 33, 63, 64], "axes3d": [10, 11, 33, 63, 64], "noqa": [10, 11, 33, 63, 64], "polycollect": [10, 11, 63], "creat": [10, 11, 13, 28, 32, 63, 68, 69, 70, 71, 84, 92, 94], "vstack": [10, 11, 13, 30, 32, 43, 63], "n_distribut": [10, 11, 13, 63], "dist0": [10, 11, 13, 63], "l2bari": [10, 11, 63], "bary_l2": [10, 11, 63], "bary_wass": [10, 11, 63], "ax1": [10, 30, 33, 34, 39, 45, 64], "ax2": [10, 30, 33, 34, 39, 45, 64], "tight_layout": [10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 45, 50, 54, 55, 63], "num": [10, 13, 71], "black": [10, 29, 31, 35, 36, 39, 45, 84], "n_alpha": 10, "alpha_list": 10, "b_l2": [10, 63], "b_wass": [10, 63], "cm": [10, 12, 28, 40, 63], "get_cmap": [10, 40, 63], "viridi": [10, 28, 63], "vert": [10, 63], "enumer": [10, 13, 28, 29, 31, 35, 36, 40, 55, 56, 59, 60, 63], "zip": [10, 13, 16, 35, 38, 63, 92], "poli": [10, 63], "facecolor": [10, 40, 46, 63], "set_alpha": [10, 63], "add_collection3d": [10, 63], "zdir": [10, 63], "set_xlabel": [10, 60, 63], "set_xlim3d": [10, 63], "set_ylabel": [10, 13, 50, 60, 63], "set_ylim3d": [10, 63], "set_zlabel": [10, 60, 63], "set_zlim3d": [10, 63], "plot_barycenter_1d": [10, 17], "103": [10, 57], "matplotlibdeprecationwarn": [10, 63], "wa": [10, 50, 63, 93, 94], "remov": [10, 63, 68, 71, 81, 85, 90, 94], "minor": [10, 63, 94], "later": [10, 29, 31, 36, 63, 74], "name": [10, 21, 63, 71, 80, 90, 92, 93], "obj": [10, 43, 63, 81, 87], "695": [10, 17], "standard": [11, 71, 75, 79, 80, 90, 94], "scienc": [11, 19, 25, 57, 74, 82, 92, 93], "343": [11, 94], "cvx": 11, "bary_wass2": 11, "interior": [11, 43, 81, 93], "0039899349212646484": 11, "primal": [11, 43, 81, 88], "feasibl": [11, 31, 33, 81], "gap": 11, "path": [11, 12, 13, 19, 23, 25, 34, 38, 67, 69, 75, 85, 92, 94], "1700": [11, 43], "336700337": 11, "006776453137633": 11, "006776453137634": 11, "9932238647293": 11, "6700527543": 11, "004018712867874": 11, "4301142633": 11, "26594150092": 11, "001172775061627": 11, "7599932455028": 11, "3378536968897": 11, "0004375137005385": 11, "6422331807989": 11, "1468420566358": 11, "000232669046734": 11, "0002326690467341": 11, "5016999460893": 11, "09381703231432": 11, "430121674303e": 11, "7035962305812": 11, "0577787025717": 11, "321227838882e": 11, "321227838879e": 11, "3087841864401": 11, "05266249477204": 11, "990900379202e": 11, "990900379201e": 11, "6520472013245": 11, "0452605440552": 11, "305442046817e": 11, "30544204679e": 11, "305442046812e": 11, "7073953304073": 11, "305442046809e": 11, "04237597591383": 11, "290148391578e": 11, "290148391587e": 11, "290148391592e": 11, "6941812711476": 11, "290148391602e": 11, "041522849321": 11, "182864875418e": 11, "182864875486e": 11, "182864875459e": 11, "508455204664": 11, "182864875475e": 11, "04129461872827": 11, "626786380237e": 11, "626786380498e": 11, "626786380591e": 11, "7101651574148": 11, "626786380499e": 11, "04113032448919": 11, "53975423377e": 11, "539754239097e": 11, "539754238957e": 11, "627932209399": 11, "539754244458e": 11, "04108867636364": 11, "193221588102e": 11, "08": [11, 27, 37, 48, 51, 57, 71, 74, 84], "193221525716e": 11, "193221527893e": 11, "6843453372866": 11, "193221744194e": 11, "04106859618425": 11, "888204557375e": 11, "888204466916e": 11, "888204464386e": 11, "6673444754752": 11, "888205403e": 11, "04106214175154": 11, "676851456731e": 11, "676853754852e": 11, "676853775137e": 11, "7281705629265": 11, "676886118764e": 11, "04105958648699": 11, "50115020171e": 11, "501137125386e": 11, "501137136515e": 11, "4140221641718": 11, "501151490466e": 11, "04105916265115": 11, "110591805675e": 11, "110570750049e": 11, "110570733855e": 11, "699900032435": 11, "110619438659e": 11, "04105870073191": 11, "770990264961e": 11, "776274527894e": 11, "776273877079e": 11, "4996170321381": 11, "772744208187e": 11, "04105859774172": 11, "536197932746e": 11, "538885612866e": 11, "538885001653e": 11, "7515062666584": 11, "537834631178e": 11, "04105851682752": 11, "743041081423e": 11, "740002462354e": 11, "740001907827e": 11, "5949277749653": 11, "73465642858e": 11, "04105850033226": 11, "794231989236e": 11, "747423074042e": 11, "747429829833e": 11, "7557701998162": 11, "741755335329e": 11, "04105849090303": 11, "termin": [11, 41], "successfulli": [11, 45], "current": [11, 18, 69, 71, 73, 74, 80, 82, 85, 87, 94], "041058": 11, "198990821838379": 11, "0065724849700927734": 11, "006776466288967": 11, "9932238515788": 11, "006776466288968": 11, "6649255808": 11, "004036918865497": 11, "4272973099314": 11, "34716170111": 11, "001219232687069": 11, "7496986855994": 11, "3243835647407": 11, "0003837422984427": 11, "6926882608286": 11, "1361719397492": 11, "0001070128410182": 11, "7643889137854": 11, "07581952832515": 11, "0001001275033711": 11, "000100127503371": 11, "07058704837782": 11, "07347394936348": 11, "550897507833e": 11, "550897507832e": 11, "5761172484836": 11, "05555077655044": 11, "557124125502e": 11, "557124125495e": 11, "8535925441154": 11, "557124125503e": 11, "0443981466022": 11, "611995628362e": 11, "611995628359e": 11, "611995628375e": 11, "6002277331592": 11, "611995628377e": 11, "04283007762151": 11, "590393750322e": 11, "59039375014e": 11, "590393750355e": 11, "822148653339": 11, "590393750361e": 11, "04192322976247": 11, "299929287269e": 11, "299929283142e": 11, "299929287457e": 11, "9017467938803": 11, "299929287509e": 11, "04170825633295": 11, "117560215317e": 11, "117560474123e": 11, "117560204434e": 11, "9970399692198": 11, "117560202277e": 11, "04168179329766": 11, "559775055372e": 11, "14": [11, 18, 23, 25, 35, 41, 44, 50, 57, 58, 64, 71, 74, 80, 92, 93], "561428379782e": 11, "559760203488e": 11, "9999499685222": 11, "559752674386e": 11, "04168169240444": 11, "041682": 11, "376809597015381": 11, "001070261001586914": 11, "006774675520687": 11, "9932256422636": 11, "6956034733": 11, "002048208707529": 11, "7343095368176": 11, "213991622021": 11, "0002697365474824": 11, "8839403501148": 11, "5059383903968": 11, "832109993819e": 11, "832109993818e": 11, "7601171076044": 11, "2339657807265": 11, "437682932226e": 11, "6663448297416": 11, "1471256246326": 11, "134983216297e": 11, "134983216299e": 11, "5553643816468": 11, "1181584941169": 11, "342312725774e": 11, "342312725781e": 11, "723813357168": 11, "1006387519744": 11, "078561231268e": 11, "078561231235e": 11, "078561231266e": 11, "8033142552548": 11, "09474734646262": 11, "966870958108e": 11, "966870953918e": 11, "966870953989e": 11, "7525479178458": 11, "966870954248e": 11, "09354342735761": 11, "199895240123e": 11, "199895384126e": 11, "199895235332e": 11, "9984019849396": 11, "199895236104e": 11, "0931036778586": 11, "1017793609e": 11, "101768735229e": 11, "101780822184e": 11, "9999499563876": 11, "101780420221e": 11, "0931027446646": 11, "093103": 11, "480184555053711": 11, "nbm": 11, "len": [11, 13, 15, 28, 29, 31, 32, 34, 35, 36, 40, 43, 50, 87, 90], "nbm2": 11, "656": [11, 17], "plot_barycenter_lp_vs_entrop": [11, 17], "design": [12, 29, 33, 34, 36, 39, 48, 57, 64, 66, 85, 93, 94], "how": [12, 24, 29, 32, 33, 34, 35, 36, 39, 45, 48, 50, 55, 56, 64, 66, 72, 94], "pathlib": [12, 13, 19, 23, 25, 34], "four": [12, 34], "construct": [12, 34, 68, 71, 74, 85], "this_fil": [12, 13, 19, 23, 25, 34], "realpath": [12, 13, 19, 23, 25, 34], "__file__": [12, 13, 19, 23, 25, 34], "data_path": [12, 13, 19, 23, 25, 34], "join": [12, 13, 19, 23, 25, 34, 71, 92], "parent": [12, 13, 19, 23, 25, 34], "f1": [12, 13], "f2": [12, 13, 29, 31, 36, 80], "f3": [12, 29, 31, 36], "heart": [12, 13, 16], "f4": 12, "duck": [12, 13, 14], "nb_imag": 12, "corner": [12, 93], "bilinear": [12, 50], "v1": [12, 29, 31, 36], "v2": [12, 29, 31, 36], "v3": 12, "v4": 12, "suptitl": [12, 28], "004": [12, 32], "ty": 12, "tmp1": 12, "tmp2": 12, "elif": [12, 29, 31, 35, 36], "call": [12, 43, 48, 66, 72, 74, 80, 81, 82, 88, 90, 93, 94], "convolutional_barycenter2d": [12, 13], "063": [12, 17], "plot_convolutional_barycent": [12, 17], "janati": [13, 62, 63, 70, 72, 92, 93], "gramfort": [13, 70, 72, 92, 93], "37th": [13, 72, 92, 93], "119": [13, 57, 72, 92, 93], "4692": [13, 72, 92, 93], "4701": [13, 72, 92, 93], "hicham": [13, 62, 63, 70, 92], "janati100": 13, "gmail": [13, 18, 19, 20, 24, 25, 26, 29, 31, 33, 34, 36, 47, 48], "com": [13, 18, 19, 20, 24, 25, 26, 29, 31, 33, 34, 36, 47, 48, 69, 71, 87, 90, 92, 94], "barycenter_debias": 13, "convolutional_barycenter2d_debias": 13, "bar": [13, 85], "bars_debias": 13, "indianr": 13, "gold": [13, 71], "sharei": [13, 30], "bar_debias": 13, "varepsilon": [13, 73], "3f": [13, 21, 65], "asarrai": 13, "displai": [13, 20, 26, 50, 72], "img": [13, 19, 23, 25, 34], "grei": [13, 35, 40, 43], "bars_sinkhorn": 13, "7e": 13, "all_bar": 13, "jj": 13, "ax_row": 13, "ii": [13, 22], "set_xtick": [13, 16, 60], "set_ytick": [13, 16, 60], "spine": 13, "top": [13, 40, 69, 80, 84], "set_vis": 13, "717": [13, 17], "plot_debiased_barycent": [13, 17], "vivien": [14, 87, 92], "iip": 14, "ist": 14, "kyoto": 14, "ac": 14, "jp": 14, "eduardo": [14, 15, 70], "fernand": [14, 15, 70], "montesuma": [14, 15, 70], "universit": [14, 15], "saclai": [14, 15, 32], "measures_loc": [14, 15, 72, 81], "measures_weight": [14, 15, 72, 81], "x_init": [14, 15, 72, 81], "free_support_barycent": [14, 72, 93, 94], "free_support_sinkhorn_barycent": [14, 15], "795": [14, 17], "plot_free_support_barycent": [14, 17], "understood": 15, "cloud": [15, 34], "linalg": [15, 28, 31, 33, 64, 71], "x4": 15, "multivariate_norm": 15, "a3": 15, "a4": 15, "steelblu": 15, "float32": 15, "xb_init": 15, "subplot2grid": [15, 34], "536": [15, 18, 20, 21, 31, 33, 34, 37, 50, 57], "did": [15, 18, 20, 21, 31, 33, 50, 57, 80, 94], "increas": [15, 18, 20, 21, 31, 33, 50, 57, 83], "692": [15, 17], "plot_free_support_sinkhorn_barycent": [15, 17], "saint": [16, 81, 92], "dizier": [16, 81, 92], "live": [16, 35, 69, 81, 92], "subspac": [16, 76, 81, 92, 93], "2105": [16, 81, 92], "09755": [16, 81, 92], "eloi": [16, 70], "tangui": [16, 33, 70, 80], "sub_sample_factor": 16, "i3": 16, "uu": 16, "vv": 16, "x_list": [16, 81], "im": [16, 23, 25, 40, 50], "a_list": [16, 81], "p1": [16, 21, 29, 31, 32, 36, 46], "p2": [16, 21, 29, 31, 32, 36, 46], "p3": [16, 29, 31, 36], "p_list": [16, 81], "n_samples_bari": [16, 81], "send": [16, 69], "visual": [16, 20, 26, 32, 39, 51, 52], "x_visu": 16, "xi": 16, "view_init": [16, 60], "azim": 16, "set_ztick": [16, 60], "generalized_free_support_barycent": 16, "elev": 16, "_init": 16, "init_func": 16, "frame": 16, "136": [16, 43, 57], "blit": 16, "947": [16, 17], "plot_generalized_free_support_barycent": [16, 17], "566": 17, "auto_examples_barycent": 17, "demo": [17, 38, 67, 72, 75, 81, 90, 93], "convolut": [17, 38, 70, 72, 92, 94], "debias": [17, 38, 70, 72, 75, 90, 92, 93, 94], "free": [17, 38, 68, 69, 70, 72, 81, 83, 92, 94], "introduc": [18, 19, 20, 21, 22, 24, 26, 72, 93, 94], "otda": [18, 21, 22, 27, 38, 74, 75, 90, 94], "stanisla": [18, 19, 20, 24, 25, 26, 70, 92], "chambon": [18, 19, 20, 24, 25, 26, 70, 92], "stan": [18, 19, 20, 24, 25, 26], "3gauss": [18, 20, 22, 26], "3gauss2": [18, 20, 22, 26], "ot_emd": [18, 19, 20, 22, 25, 50, 93], "da": [18, 19, 20, 21, 22, 23, 24, 25, 26, 70, 93, 94], "emdtransport": [18, 19, 20, 22, 25, 93, 94], "ot_sinkhorn": [18, 19, 20, 21, 22, 25, 50], "sinkhorntransport": [18, 19, 20, 21, 22, 25, 26, 93, 94], "reg_": [18, 19, 20, 21, 22, 25, 26, 74], "ot_lpl1": [18, 20], "sinkhornlpl1transport": [18, 20, 93, 94], "reg_cl": [18, 20, 74], "1e0": [18, 20, 24, 25, 41], "l1l2": [18, 74], "ot_l1l2": 18, "sinkhornl1l2transport": [18, 93], "2e0": 18, "transp_xs_emd": [18, 19, 20, 22, 25], "transp_xs_sinkhorn": [18, 19, 20, 22, 25], "transp_xs_lpl1": [18, 20], "transp_xs_l1l2": 18, "763061e": 18, "000000e": [18, 24, 25, 30, 31, 33, 57], "081861e": 18, "689583e": 18, "681200e": 18, "862280e": 18, "179100e": 18, "195813e": 18, "821987e": 18, "211501e": 18, "029326e": 18, "808932e": 18, "216608e": 18, "03": [18, 24, 30, 31, 33, 37, 41, 46, 47, 48, 49, 51, 57, 60, 61, 67, 83], "305436e": 18, "792762e": 18, "019666e": 18, "617012e": 18, "785968e": 18, "804295e": 18, "794348e": 18, "778259e": 18, "335304e": 18, "709292e": 18, "772608e": 18, "187777e": 18, "650678e": 18, "768734e": 18, "190456e": 18, "874332e": 18, "768700e": 18, "876119e": 18, "318292e": 18, "767482e": 18, "894485e": 18, "218588e": 18, "765491e": 18, "127725e": 18, "990989e": 18, "762434e": 18, "734384e": 18, "056738e": 18, "759833e": 18, "478250e": 18, "601472e": 18, "758374e": 18, "294698e": 18, "458518e": 18, "757601e": 18, "396351e": 18, "727032e": 18, "756624e": 18, "562652e": 18, "771489e": 18, "754377e": 18, "281229e": 18, "247758e": 18, "753747e": 18, "587988e": 18, "292424e": 18, "753162e": 18, "336538e": 18, "849492e": 18, "param_img": [18, 22], "coupling_": [18, 20, 21, 22, 26, 74], "nemdtransport": [18, 20, 22, 26], "nsinkhorntransport": [18, 20, 22, 26], "nsinkhornlpl1transport": [18, 20], "nsinkhornl1l2transport": 18, "transp": [18, 20, 22, 23, 26, 66], "282": [18, 27, 94], "plot_otda_class": [18, 27], "present": [19, 24, 26, 65, 69, 94], "transfer": [19, 93], "ferradan": [19, 25, 57, 74, 82, 92, 93], "papadaki": [19, 25, 57, 74, 82, 92, 93], "peyr": [19, 25], "aujol": [19, 25, 57, 74, 82, 92, 93], "2014": [19, 25, 57, 72, 74, 81, 82, 92, 93], "1853": [19, 25, 57, 74, 82, 92, 93], "1882": [19, 25, 57, 74, 82, 92, 93], "im2mat": [19, 23, 25, 34], "pixel": [19, 23, 34], "per": [19, 23, 25, 34, 52, 81, 87], "mat2im": [19, 23, 25], "back": [19, 23, 25, 69], "minmax": [19, 23, 25], "clip": [19, 23, 25, 71], "ocean_dai": [19, 23, 25], "jpg": [19, 23, 25], "256": [19, 23, 25], "ocean_sunset": [19, 23, 25], "idx1": [19, 25], "idx2": [19, 25], "ylabel": [19, 25, 30, 35, 40, 50, 59, 60, 66], "predict": [19, 80], "out": [19, 24, 32, 74, 86], "transp_xt_emd": 19, "inverse_transform": [19, 23, 74, 93], "transp_xt_sinkhorn": 19, "i1t": [19, 23], "i2t": [19, 23], "902": [19, 27], "plot_otda_color_imag": [19, 27], "explicit": [20, 26, 68, 74, 90], "some": [20, 26, 64, 69, 70, 74, 81, 83, 90, 92, 93, 94], "quantiti": [20, 26, 35], "greater": [20, 26, 94], "coeffici": [20, 26, 35, 72, 73, 80, 81, 82, 85], "give": [20, 26, 50, 66, 69, 71, 80, 85, 94], "understand": [20, 26], "what": [20, 26, 68, 69, 93], "n_samples_sourc": [20, 26], "n_samples_target": [20, 26], "main": [20, 69, 81, 93, 94], "510": [20, 27, 31], "plot_otda_d2": [20, 27], "ievgen": [21, 22, 70, 72, 74, 92], "redko": [21, 22, 39, 45, 70, 72, 73, 74, 92], "st": [21, 22, 76], "etienn": [21, 22], "1985": 21, "dec1": 21, "dec2": 21, "pt": 21, "dect": 21, "ys1": 21, "2gauss_prop": 21, "bia": [21, 24, 25, 74, 78], "ys2": 21, "all_xr": 21, "all_yr": 21, "plot_ax": 21, "dec": 21, "set1": 21, "2f": [21, 50], "85": [21, 57, 94], "046431138906241": 21, "129455496299416": 21, "print_g": 21, "independ": [21, 81, 93], "jcpottransport": 21, "ws1": 21, "proportions_": [21, 74], "log_": [21, 74], "d2": [21, 39, 45], "ws2": 21, "prop": [21, 83], "err": [21, 31, 33, 51, 64], "069551e": 21, "h_re": 21, "1f": 21, "977": [21, 27], "plot_otda_jcpot": [21, 27], "ot_emd_laplac": 22, "emdlaplacetransport": 22, "reg_lap": [22, 74], "reg_src": [22, 74], "transp_xs_emd_laplac": 22, "503": 22, "runtimewarn": [22, 31, 33, 56, 63], "divid": [22, 31, 33, 50, 56, 63], "encount": [22, 31, 33, 56, 63], "ktransposeu": 22, "511": 22, "nemdlaplacetransport": 22, "573": [22, 27], "plot_otda_laplacian": [22, 27], "anglet": 23, "ae": 23, "empirical_bures_wasserstein_map": 23, "xst": 23, "agw": 23, "bgw": 23, "empirical_gaussian_gromov_wasserstein_map": 23, "xstgw": 23, "lineartransport": [23, 93], "lineargwtransport": 23, "xtsgw": 23, "i1tgw": 23, "i2tgw": 23, "invers": [23, 29, 31, 36, 65, 71, 74, 81, 85], "643": [23, 27], "plot_otda_linear_map": [23, 27], "mappingtransport": [24, 25, 93], "perrot": [24, 25, 70, 74, 92, 93], "habrard": [24, 25, 74, 92, 93], "xs_new": 24, "ot_mapping_linear": [24, 25], "transp_xs_linear": 24, "transp_xs_linear_new": 24, "ot_mapping_gaussian": [24, 25], "transp_xs_gaussian": 24, "transp_xs_gaussian_new": 24, "delta": [24, 25, 45, 85], "190105e": 24, "170411e": 24, "700201e": 24, "169845e": 24, "356805e": 24, "169664e": 24, "344581e": 24, "169558e": 24, "549048e": 24, "169490e": 24, "619901e": 24, "169453e": 24, "982881e": 24, "208325e": 24, "153391e": 24, "305359e": 24, "150638e": 24, "627997e": 24, "149220e": 24, "416816e": 24, "148278e": 24, "270431e": 24, "147579e": 24, "685273e": 24, "147070e": 24, "226112e": 24, "146654e": 24, "002934e": 24, "146340e": 24, "574136e": 24, "146055e": 24, "890732e": 24, "145822e": 24, "605142e": 24, "bari": [24, 28, 43], "plot_otda_map": [24, 27], "image_emd": 25, "image_sinkhorn": 25, "x1tl": 25, "image_mapping_linear": 25, "x1tn": 25, "image_mapping_gaussian": 25, "797245e": 25, "758014e": 25, "182822e": 25, "757026e": 25, "620752e": 25, "756521e": 25, "875691e": 25, "756218e": 25, "725224e": 25, "756015e": 25, "153553e": 25, "755868e": 25, "348118e": 25, "755759e": 25, "234582e": 25, "755673e": 25, "893582e": 25, "755604e": 25, "942771e": 25, "755547e": 25, "206000e": 25, "755500e": 25, "695056e": 25, "755460e": 25, "307154e": 25, "755426e": 25, "944208e": 25, "755395e": 25, "715960e": 25, "755369e": 25, "515613e": 25, "755345e": 25, "367864e": 25, "755324e": 25, "197885e": 25, "755305e": 25, "071067e": 25, "755303e": 25, "898122e": 25, "842001e": 25, "780145e": 25, "358084e": 25, "778490e": 25, "296544e": 25, "777841e": 25, "648247e": 25, "777495e": 25, "948923e": 25, "777284e": 25, "184075e": 25, "777135e": 25, "396988e": 25, "777027e": 25, "059322e": 25, "776945e": 25, "619816e": 25, "776880e": 25, "672789e": 25, "776827e": 25, "971430e": 25, "711": [25, 27], "plot_otda_mapping_colors_imag": [25, 27], "ot_sinkhorn_un": 26, "transp_xs_sinkhorn_un": 26, "ot_sinkhorn_semi": 26, "transp_xs_sinkhorn_semi": 26, "modifi": 26, "involv": [26, 69], "infinit": [26, 74], "daili": 26, "element": [26, 28, 50, 71, 72, 74, 80, 81, 85, 90], "fill": [26, 62, 71, 74], "recal": [26, 85], "cost_": [26, 74], "exhibit": [26, 74], "nunsupervis": 26, "nsemi": 26, "677": [26, 27], "plot_otda_semi_supervis": [26, 27], "426": 27, "auto_examples_domain": 27, "multi": [27, 38, 70, 71, 72, 74, 75, 81, 90, 92, 93, 94], "shift": [27, 38, 72, 74, 75, 90, 92, 93, 94], "laplacian": [27, 38, 70, 74, 75, 90, 92, 93], "unsupervis": [27, 38, 74, 75, 90, 93], "semi": [27, 37, 38, 70, 74, 75, 80, 82, 85, 87, 88, 90, 92, 93, 94], "supervis": [27, 38, 72, 74, 75, 90, 92, 93, 94], "networkx": [28, 29, 31, 32, 35, 36], "nx": [28, 32, 71, 80, 81, 82, 90, 94], "csgraph": 28, "shortest_path": 28, "mcol": 28, "fgw_barycent": [28, 80, 93], "find_thresh": 28, "inf": [28, 74], "sup": 28, "trick": [28, 83, 93], "adequ": 28, "sai": 28, "connect": [28, 29, 31, 35, 36], "linesearch": [28, 80, 82, 94], "reconstruct": [28, 35, 80, 87, 94], "come": [28, 69, 93, 94], "n_node": [28, 32, 35, 79], "begin": [28, 81, 85], "thresh": 28, "cprime": 28, "sp_to_adjac": 28, "sc": 28, "argmin": [28, 29, 31, 36, 71], "threshinf": 28, "threshsup": 28, "minimum": [28, 71, 74, 80, 81, 82, 93, 94], "new": [28, 71, 90, 93], "zeros_lik": 28, "fill_diagon": [28, 35], "build_noisy_circular_graph": 28, "with_nois": 28, "structure_nois": 28, "noisi": [28, 45], "add_nodes_from": 28, "add_nod": [28, 29, 31, 36], "attr_nam": 28, "add_edg": [28, 29, 31, 36], "randomint": 28, "graph_color": 28, "nx_graph": 28, "cnorm": 28, "cpick": 28, "scalarmapp": 28, "set_arrai": 28, "val_map": 28, "get_node_attribut": 28, "to_rgba": 28, "ad": [28, 29, 31, 45, 69, 71, 74, 78, 81, 83, 85, 90, 93, 94], "po": [28, 29, 31, 32, 34, 36, 74], "kamada_kawai_layout": 28, "draw": 28, "node_color": [28, 29, 31, 32, 36], "with_label": [28, 32], "node_s": [28, 29, 31, 36], "indic": [28, 32, 40, 69, 71, 79, 81, 85], "adjacency_matrix": 28, "todens": [28, 71], "sizebari": 28, "95": [28, 29, 31, 34, 36, 57, 59, 60, 94], "from_numpy_arrai": 28, "950": [28, 31, 37], "plot_barycenter_fgw": [28, 37], "sr": [29, 36, 82], "g1": [29, 31, 36, 54], "g2": [29, 31, 36, 54], "reweigh": [29, 36], "srgw": [29, 36, 80], "These": [29, 36, 69], "endow": [29, 31, 36], "srfgw": [29, 36, 80], "48": [29, 36, 50, 57, 80, 82, 92, 94], "c\u00e9dric": [29, 31, 33, 35, 36, 70, 79, 80, 82, 92], "iclr": [29, 36, 80, 82, 87, 92], "cedvincentcuaz": [29, 31, 33, 36], "entropic_semirelaxed_gromov_wasserstein": [29, 80], "entropic_semirelaxed_fused_gromov_wasserstein": [29, 80], "commun": [29, 31, 35, 36, 68, 93], "stochastic_block_model": [29, 31, 35, 36], "n3": [29, 31, 36], "g3": [29, 31, 36], "to_numpy_arrai": [29, 31, 35, 36], "h3": [29, 31, 36], "edg": [29, 31, 32, 36, 79], "weight_intra_g2": [29, 31, 36], "weight_inter_g2": [29, 31, 36], "weight_intra_g3": [29, 31, 36], "weight_inter_g3": [29, 31, 36], "weightedg2": [29, 31, 36], "part_g2": [29, 31, 36], "weightedg3": [29, 31, 36], "part_g3": [29, 31, 36], "srgw_e": 29, "ot_23": [29, 36], "log_23": [29, 36], "srgw_23": [29, 36], "srgw_dist": [29, 36], "ot_32": [29, 36], "log_32": [29, 36], "srgw_32": [29, 36], "255": [29, 36], "06000000014822844": 29, "1577777782120945": 29, "adjust": [29, 31], "intens": [29, 31, 35], "proportionali": [29, 31], "sent": [29, 31, 93], "draw_graph": [29, 31, 36], "nodes_color_part": [29, 31, 36], "gweight": [29, 31, 36], "edge_color": [29, 31, 36], "shiftx": [29, 31, 36], "spring_layout": [29, 31, 32, 36], "alpha_edg": [29, 31, 36], "width_edg": [29, 31, 36], "draw_networkx_edg": [29, 31, 36], "width": [29, 31, 36, 40, 72], "visibl": [29, 31, 36, 94], "activ": [29, 31, 36, 71, 72, 85], "edgelist_activ": [29, 31, 36], "edgelist_deactiv": [29, 31, 36], "edgelist": [29, 31, 36], "draw_networkx_nod": [29, 31, 36], "nodelist": [29, 31, 32, 36], "scaled_gweight": [29, 31, 36], "nodes_s": [29, 31, 36], "draw_transp_colored_srgw": [29, 36], "part_g1": [29, 31, 36], "pos1": [29, 31, 36], "pos2": [29, 31, 36], "switchx": [29, 31, 36], "seed_g1": [29, 31, 36], "seed_g2": [29, 31, 36], "starting_color": [29, 31, 36], "partit": [29, 31, 36], "part1": [29, 31, 36], "unique_color": [29, 31, 36], "uniqu": [29, 31, 36, 40, 71, 81, 93], "nodes_color_part1": [29, 31, 36], "nodes_color_part2": [29, 31, 36], "assign": [29, 31, 35, 36, 72, 73, 79, 80], "k1": [29, 31, 36], "max_tk1": [29, 31], "k2": [29, 31, 36], "seed_g3": [29, 31, 36], "121": [29, 32, 33, 36, 50, 57, 64, 94], "h_2": [29, 36, 80], "c_3": [29, 36], "hbar2": [29, 36], "122": [29, 32, 33, 36, 50, 57, 64, 94], "hbar3": [29, 36], "h_3": [29, 36], "intra": [29, 31, 35, 36, 83], "fgw_alpha": [29, 36], "fgw_dist": [29, 31, 36, 80], "srfgw_e": 29, "srfgw_23": [29, 36], "srfgw_dist": [29, 36], "srfgw_32": [29, 36], "38089508056745364": 29, "0325729126416439": 29, "24125701598915783": 29, "f_2": [29, 36, 80], "f_3": [29, 36], "618": [29, 37], "plot_entropic_semirelaxed_fgw": [29, 37], "sig": 30, "sig2": 30, "phi": [30, 81, 85], "phi2": 30, "a_i": [30, 72, 81, 93], "y_j": [30, 93], "b_j": [30, 72, 81, 93], "w1": [30, 76], "w2": [30, 56, 76], "got": 30, "l_x": 30, "l_y": 30, "gridspec": 30, "set_aspect": 30, "ax3": [30, 34, 64], "sharex": 30, "gwg": 30, "logw": 30, "reload_ext": 30, "wgw": 30, "734412e": 30, "508254e": 30, "875326e": 30, "226158e": 30, "189327e": 30, "456740e": 30, "189279e": 30, "622743e": 30, "552714e": 30, "0031135082244873047": 30, "683978e": 30, "860061e": 30, "134468e": 30, "239175e": 30, "182948e": 30, "682787e": 30, "677113e": 30, "visu": 30, "750": [30, 31, 37], "plot_fgw": [30, 37], "attribut": [31, 71, 74, 80, 94], "further": [31, 50, 68, 69], "xu": [31, 33, 80, 92], "luo": [31, 33, 80, 92], "zha": [31, 33, 80, 92], "duke": [31, 33, 80, 92], "entropic_fused_gromov_wasserstein": [31, 80, 94], "add": [31, 35, 64, 69, 81, 83, 90, 94], "fgw0": 31, "log0": [31, 33, 64], "proxim": [31, 33, 80, 94], "oper": [31, 33, 69, 74, 76, 78, 81, 93], "ppa": [31, 33, 80, 94], "fgwe": 31, "loge": [31, 33], "pgd": [31, 33, 80], "sparsiti": [31, 33, 35, 52, 80, 87, 92, 93, 94], "level": [31, 33, 68, 72, 74, 75, 90, 93], "fgw0_sparsiti": 31, "fgw_sparsiti": 31, "fgwe_spars": 31, "tend": [31, 33, 50], "produc": [31, 33, 81], "err0": [31, 33], "271184e": 31, "211305e": 31, "640431e": 31, "059879e": 31, "024660e": 31, "637523e": 31, "866445e": 31, "936346e": 31, "243555e": 31, "831410e": 31, "891614e": 31, "149450e": 31, "473216e": 31, "854134e": 31, "724554e": 31, "747973e": 31, "850574e": 31, "244899e": 31, "559817e": 31, "841819e": 31, "279017e": 31, "755571e": 31, "819396e": 31, "870728e": 31, "242264e": 31, "784264e": 31, "283767e": 31, "513222e": 31, "772225e": 31, "191339e": 31, "203845e": 31, "764565e": [31, 57], "034974e": 31, "660790e": 31, "761179e": 31, "000610e": 31, "385291e": 31, "536990e": 31, "472502e": 31, "129779e": 31, "936118e": 31, "334121e": 31, "852583e": 31, "134797e": 31, "177453e": 31, "236970e": 31, "465712e": 31, "858590e": 31, "312306e": 31, "789776e": 31, "493878e": 31, "029873e": 31, "095678e": 31, "177744e": 31, "257392e": 31, "242762e": 31, "125684e": 31, "770321e": 31, "368455e": 31, "094853e": 31, "159374e": 31, "564338e": 31, "974174e": 31, "297098e": 31, "639787e": 31, "106686e": 31, "716049e": 31, "433353e": 31, "227167e": 31, "080617e": 31, "980812e": 31, "912468e": 31, "858901e": 31, "805235e": 31, "740559e": 31, "658655e": 31, "557834e": 31, "440242e": 31, "310793e": 31, "175881e": 31, "1086": [31, 33], "042086e": 31, "151311e": 31, "992882e": 31, "972309e": 31, "101506e": 31, "379844e": 31, "797194e": 31, "337741e": 31, "984020e": 31, "520": 31, "720212e": 31, "530": 31, "534028e": 31, "540": 31, "417109e": 31, "550": 31, "364311e": 31, "560": 31, "372351e": 31, "570": 31, "438312e": 31, "580": 31, "558368e": 31, "590": 31, "726958e": 31, "600": [31, 43], "936418e": 31, "610": 31, "176966e": 31, "620": [31, 51, 58], "436877e": 31, "630": 31, "702796e": 31, "640": 31, "960175e": 31, "650": 31, "193888e": 31, "660": 31, "389046e": 31, "670": 31, "531979e": 31, "680": 31, "611295e": 31, "690": 31, "618871e": 31, "700": [31, 43], "550627e": 31, "710": 31, "406954e": 31, "720": 31, "192695e": 31, "730": [31, 83, 92, 93], "916691e": 31, "740": 31, "590932e": 31, "229430e": 31, "760": 31, "846976e": 31, "770": 31, "457933e": 31, "780": 31, "075230e": 31, "790": 31, "709643e": 31, "369414e": 31, "810": [31, 43], "060184e": 31, "820": 31, "785186e": 31, "830": 31, "545590e": 31, "840": 31, "340916e": 31, "850": 31, "169442e": 31, "860": 31, "028566e": 31, "870": 31, "150926e": 31, "880": 31, "254840e": 31, "890": 31, "560795e": 31, "900": [31, 43], "033105e": 31, "638947e": 31, "920": 31, "349865e": 31, "930": 31, "142583e": 31, "940": 31, "999120e": 31, "906371e": 31, "960": 31, "855388e": 31, "970": 31, "840590e": 31, "980": 31, "859006e": 31, "990": 31, "909627e": 31, "981055e": 31, "110756e": 31, "139916e": 31, "158952e": 31, "159648e": 31, "159715e": 31, "159728e": 31, "159732e": 31, "159733e": 31, "37611793139330985": 31, "3671471715862439": 31, "21736592892258028": 31, "proportionn": 31, "draw_transp_colored_gw": 31, "131": [31, 33, 57, 64], "algo": [31, 33, 50, 72], "p0": [31, 41, 76], "q0": 31, "132": [31, 33, 57, 64, 94], "133": [31, 33, 57, 64], "pe": [31, 94], "qe": 31, "201": [31, 37, 94], "plot_fgw_solv": [31, 37], "gnn": [32, 70, 92, 94], "templat": [32, 44, 70, 79, 92, 94], "52": [32, 40, 57, 76, 92, 94], "53": [32, 57, 79, 92], "sonia": [32, 70], "mazelet": [32, 70], "en": [32, 93], "random_split": 32, "torch_geometr": 32, "loader": 32, "dataload": 32, "to_networkx": 32, "one_hot": 32, "stochastic_blockmodel_graph": 32, "graphdata": 32, "gcnconv": 32, "tfgwpool": [32, 79], "tsne": 32, "n_graph": [32, 79], "n_node_class": 32, "block_sizes1": 32, "block_sizes2": 32, "num_class": 32, "graphs1": 32, "edge_index": [32, 79], "graphs2": 32, "split": [32, 76], "train_graph": 32, "test_graph": 32, "train_load": 32, "batch_siz": [32, 35, 48, 74, 80, 88], "shuffl": [32, 40], "test_load": 32, "to_undirect": 32, "draw_networkx": 32, "tab": 32, "pooling_tfgw": 32, "n_templat": [32, 79], "n_template_nod": [32, 79], "n_class": [32, 74], "n_hidden_lay": 32, "feature_init_mean": [32, 79], "feature_init_std": [32, 79], "conv": 32, "x_latent": 32, "save": [32, 46, 72, 80], "latent": 32, "n_epoch": 32, "store": [32, 74], "embeddings_for_tsn": 32, "weight_decai": 32, "0005": 32, "criterion": [32, 93, 94], "crossentropyloss": 32, "all_accuraci": 32, "all_loss": 32, "epoch": [32, 35, 80], "acc": 32, "latent_embed": 32, "pred": 32, "train_correct": 32, "train_acc": 32, "4f": 32, "accuraci": [32, 72], "test_acc": 32, "test_correct": 32, "hstack": [32, 41], "000": 32, "6519": 32, "5200": 32, "001": [32, 35, 54, 72, 74, 76, 87], "6222": 32, "7400": 32, "002": 32, "5858": 32, "0000": 32, "003": 32, "5570": 32, "5235": 32, "9800": 32, "4944": 32, "9600": 32, "006": 32, "4595": 32, "007": 32, "4248": 32, "008": 32, "3867": 32, "009": 32, "3455": 32, "010": 32, "3008": 32, "011": 32, "2525": 32, "012": 32, "2050": 32, "013": [32, 66, 67], "1598": 32, "014": 32, "1277": 32, "015": 32, "1046": 32, "016": 32, "0875": 32, "017": 32, "0725": 32, "018": 32, "0554": 32, "019": 32, "0355": 32, "020": 32, "0194": 32, "021": 32, "0095": 32, "022": 32, "0052": 32, "023": 32, "0047": 32, "024": 32, "0054": [32, 43], "tsne_embed": 32, "n_compon": [32, 34], "perplex": 32, "class_0": 32, "class_1": 32, "tsne_embeddings_0": 32, "tsne_embeddings_1": 32, "after": [32, 41, 43, 92], "43": [32, 37, 41, 46, 57, 72, 74, 78, 81, 92, 93, 94], "241": [32, 37, 94], "plot_gnn_tfgw": [32, 37], "compar": [33, 50, 69, 93], "Then": [33, 35, 56, 81, 93], "kerdoncuff": [33, 70, 80, 92, 93], "emonet": [33, 80, 92, 93], "marc": [33, 80, 92, 93], "mjl": [33, 92, 93], "erwan": [33, 34, 70], "vautier": [33, 34, 70], "lapost": 33, "net": 33, "sp": [33, 34, 64, 83], "demonstr": [33, 64, 69, 94], "purpos": [33, 64, 93], "mu_": [33, 42, 53, 56, 59, 64, 65, 66, 74, 78, 93], "cov_": [33, 42, 53, 59, 64, 65, 66, 78], "mu_t": [33, 42, 53, 59, 64, 65, 66, 74, 78, 93], "cov_t": [33, 42, 53, 59, 64, 65, 66, 78], "make_2d_samples_gauss": [33, 42, 53, 59, 64, 65, 66], "sqrtm": [33, 64, 71], "gw0": 33, "entropic_gromov_wasserstein": [33, 80, 93, 94], "gwe": 33, "gw0_sparsiti": 33, "gw_sparsiti": 33, "gwe_spars": 33, "nfeasibl": 33, "606056e": 33, "330020e": 33, "022552e": 33, "276036e": 33, "023674e": 33, "098033e": 33, "063453e": 33, "820952e": 33, "205038e": 33, "027228e": 33, "501837e": 33, "088545e": 33, "191147e": 33, "684324e": 33, "209223e": 33, "076331e": 33, "140465e": 33, "876462e": 33, "040056e": 33, "334508e": 33, "018997e": 33, "123553e": 33, "184445e": 33, "04501836901925051": 33, "037612941478320075": 33, "03823623173438275": 33, "pgw": 33, "plog": 33, "pointwise_gromov_wasserstein": [33, 80], "sgw": 33, "slog": [33, 72], "sampled_gromov_wasserstein": [33, 80], "pointwis": [33, 94], "gw_dist_estim": 33, "gw_dist_std": 33, "toarrai": [33, 71, 85], "18551015414186553": 33, "14981263716330115": 33, "0013724960658236956": 33, "plot_gromov": [33, 37], "decomposit": 34, "pca": [34, 94], "smacof_md": 34, "3000": [34, 43], "singl": 34, "stress": 34, "declar": 34, "npo": 34, "isometri": 34, "n_init": 34, "embedding_": 34, "nmd": 34, "init": [34, 43, 80, 94], "cross": 34, "triangl": 34, "star": 34, "lambdast": 34, "ct01": 34, "ct02": 34, "ct13": 34, "ct23": 34, "help": [34, 69, 81, 93, 94], "consist": [34, 69, 71, 72, 74, 81, 93], "rotat": [34, 50], "npost01": 34, "npost02": 34, "npost13": 34, "npost23": 34, "ax4": 34, "ax5": 34, "ax6": 34, "ax7": 34, "ax8": 34, "ax9": 34, "ax10": 34, "ax11": 34, "ax12": 34, "0x7f39803aa050": 34, "plot_gromov_barycent": [34, 37], "denot": [35, 50, 72, 74, 81], "c_": [35, 50, 80], "p_": [35, 80], "combin": [35, 93], "sigma_d": 35, "sum_d": [35, 80], "vari": 35, "extens": 35, "aforement": 35, "unattribut": 35, "uniformli": 35, "cedric": 35, "inria": [35, 40, 62, 63], "gromov_wasserstein_linear_unmix": [35, 80], "gromov_wasserstein_dictionary_learn": [35, 80], "fused_gromov_wasserstein_linear_unmix": [35, 80], "fused_gromov_wasserstein_dictionary_learn": [35, 80], "inter": 35, "nlabel": 35, "p_inter": 35, "p_intra": 35, "n_cluster": 35, "low": [35, 44, 50, 77], "high": [35, 69], "int32": 35, "idx_c": 35, "plot_gromov_wasserstein_dictionary_learn": [35, 37], "93": [35, 57, 94], "promot": [35, 80, 93], "cdict_gw": 35, "learning_r": [35, 80], "nonnegative_symmetr": [35, 80], "tol_out": [35, 80], "tol_inn": [35, 80], "max_iter_out": [35, 80], "max_iter_inn": [35, 80], "use_log": [35, 80], "use_adam_optim": [35, 80], "loss_epoch": 35, "cumul": [35, 71], "928070954885737": 35, "528435380634622": 35, "481496257647932": 35, "7251645422089865": 35, "5896787585765": 35, "904249565820505": 35, "894474501829586": 35, "839762947251266": 35, "8357620167079265": 35, "57323879230497": 35, "shade": 35, "dark": [35, 94], "white": 35, "idx_atom": 35, "scaled_atom": 35, "reconstruction_error": 35, "cembed": [35, 80], "unmixings2d": 35, "extrem": 35, "linewidth": [35, 40, 46, 60], "876122061653427": 35, "hot": 35, "encod": [35, 90], "dataset_featur": 35, "cdict_fgw": 35, "ydict_fgw": 35, "learning_rate_c": [35, 80], "learning_rate_i": [35, 80], "488307468700953": 35, "409377567767253": 35, "7999724972950055": 35, "590157056733561": 35, "8883324021076806": 35, "6222694197786383": 35, "638584123604814": 35, "537256942676492": 35, "4127469295470614": 35, "315769238894676": 35, "max_featur": 35, "min_featur": 35, "catom": 35, "fatom": 35, "scaled_f": 35, "yembed": [35, 80], "1390622525410854": 35, "825": [35, 37], "semirelaxed_gromov_wasserstein": [36, 80], "semirelaxed_fused_gromov_wasserstein": [36, 80], "105007529006411": 36, "1622222222222223": 36, "38017836704293934": 36, "04004733478713954": 36, "24196480586404343": 36, "265": [36, 37, 81, 92], "plot_semirelaxed_fgw": [36, 37], "736": 37, "auto_examples_gromov": 37, "classif": [37, 38, 75, 94], "tempat": [37, 38], "comparison": [37, 38, 50, 57, 93], "introduct": [38, 58, 93, 94], "row": [38, 49, 71, 72, 73, 80, 81, 85, 90], "align": [38, 49, 68, 73, 74, 78, 81, 93], "discrimin": [38, 49, 76, 92, 94], "logo": [38, 49, 93, 94], "toolbox": [38, 49, 70, 93, 94], "mmot": [38, 49, 75, 81, 93], "compon": [38, 49, 76, 90, 92, 93, 94], "auto_examples_python": 38, "auto_examples_jupyt": 38, "arbitrari": 39, "n_1": [39, 45], "d_1": [39, 45], "n_2": [39, 45], "d_2": [39, 45], "49": [39, 45, 57, 67, 73, 92, 94], "quang": [39, 45], "hui": [39, 45], "tran": [39, 45], "patch": [39, 40, 45], "connectionpatch": [39, 45], "coot": 39, "co_optimal_transport": [39, 45], "co_optimal_transport2": [39, 45], "coot2": [39, 45], "d1": [39, 45], "pi_sampl": [39, 45, 73], "pi_featur": [39, 45, 73], "coot_dist": 39, "5f": 39, "yaxi": [39, 40, 45], "tick_right": [39, 45], "xaxi": [39, 45], "tick_top": [39, 45], "xya": [39, 45], "xyb": [39, 45], "con": [39, 45], "coordsa": [39, 45], "transdata": [39, 45], "coordsb": [39, 45], "add_artist": [39, 45], "10903416567681642": 39, "09875680836922485": 39, "09685398028260431": 39, "09685": 39, "647": [39, 43, 49], "plot_coot": [39, 49], "colla": [40, 76, 92], "breloi": [40, 76, 92], "antoin": [40, 70, 87, 92], "make_blob": 40, "ticker": 40, "mticker": 40, "esp": 40, "cluster_std": 40, "x_y_lim": 40, "linestyl": [40, 56], "pi_": [40, 76], "powernorm": 40, "aspect": [40, 93, 94], "cb": 40, "orient": [40, 68], "vertic": [40, 46], "shrink": [40, 50], "ticks_loc": 40, "get_ytick": 40, "tolist": 40, "set_major_loc": 40, "fixedloc": 40, "set_yticklabel": 40, "get_tick": 40, "tick_param": 40, "labels": 40, "class_": 40, "idx_min": 40, "idx_max": 40, "rect": 40, "rectangl": 40, "gca": 40, "add_patch": 40, "_n": [40, 72], "x_label": 40, "725": [40, 49], "plot_ewca": [40, 49], "wda": [41, 70, 94], "fda": [41, 93], "floor": [41, 71], "nbnois": 41, "pfda": 41, "projfda": 41, "maxit": [41, 72, 76], "pwda": 41, "projwda": 41, "3042776946697494e": 41, "65147154e": 41, "4401037686381040e": 41, "16760501e": 41, "2234351238819928e": 41, "30555049e": 41, "2169879996364462e": 41, "39115407e": 41, "1924746118060602e": 41, "25387848e": 41, "1177409528990749e": 41, "70993539e": 41, "0862213476139048e": 41, "52716830e": 41, "0747229322240269e": 41, "34923131e": 41, "0678766065261684e": 41, "74029183e": 41, "0621337155459647e": 41, "03651803e": 41, "0577080390746939e": 41, "59605592e": 41, "0543140912472148e": 41, "28883715e": 41, "0470236926310577e": 41, "47528039e": 41, "0445628467498224e": 41, "03183254e": 41, "0364189455866245e": 41, "31006504e": 41, "0303977563823823e": 41, "39885352e": 41, "0301476238242911e": 41, "17467624e": 41, "0292344306414324e": 41, "79959907e": 41, "0271888325518124e": 41, "94408237e": 41, "0183214741002155e": 41, "98322994e": 41, "9762636217090053e": 41, "03196875e": 41, "8225627240876070e": 41, "36012863e": 41, "0855506616050116e": 41, "92702943e": 41, "8001027160864295e": 41, "01920255e": 41, "3687486090807947e": 41, "01780640e": 41, "3431203993360381e": 41, "23716793e": 41, "3118645266923005e": 41, "90753137e": 41, "28": [41, 57, 83, 85, 92, 93, 94], "3067593392325469e": 41, "02767925e": 41, "3064856262240019e": 41, "07925279e": 41, "3060699763593800e": 41, "95215754e": 41, "3060442760754873e": 41, "77368118e": 41, "3060442709529139e": 41, "34108449e": 41, "3060442708435561e": 41, "52599061e": 41, "3060442707674844e": 41, "07742368e": 41, "3060442707600512e": 41, "36125504e": 41, "reach": [41, 94], "xsp": 41, "xtp": 41, "xspw": 41, "xtpw": 41, "cbook": 41, "1699": 41, "complexwarn": 41, "complex": [41, 80, 93], "discard": [41, 81], "imaginari": 41, "isfinit": [41, 71], "val": [41, 71], "194": [41, 57], "offset": 41, "asanyarrai": 41, "345": [41, 49, 94], "plot_wda": [41, 49], "xr": [42, 44, 53, 54, 59], "gweak": 42, "961": [42, 49], "plot_weakot_vs_ot": [42, 49], "quickli": [43, 50, 69, 94], "qualiti": [43, 94], "ronak": [43, 70, 81, 92], "mehta": [43, 70, 81, 92], "ronakrm": 43, "wisc": 43, "xizheng": [43, 70], "yu": [43, 70], "xyu354": 43, "0x7f3888637be0": 43, "l2_bari": 43, "lp_bari": 43, "lp_log": 43, "fun": [43, 50], "dmmot_monge_1dgrid_optim": [43, 81], "4000": 43, "lr_init": [43, 81], "lr_decai": [43, 81], "997": 43, "dmmot_obj": 43, "262": [43, 94], "799085855484": 43, "999774740910517": 43, "9995": 43, "gradnorm": 43, "739": 43, "7831": 43, "0914": 43, "6322": 43, "0583": 43, "434": [43, 94], "3777": 43, "4220": 43, "252": 43, "9269": 43, "2317": 43, "168": [43, 57], "8668": 43, "2116": 43, "384": [43, 56, 58], "2968": 43, "1755": 43, "6758": 43, "1343": 43, "786": 43, "2442": 43, "1021": 43, "3703": 43, "0662": 43, "0539": 43, "741": 43, "7304": 43, "1100": 43, "0348": 43, "621": 43, "4660": 43, "1200": 43, "0338": 43, "3429": 43, "1300": 43, "0200": 43, "556": 43, "2338": 43, "1400": 43, "0182": 43, "765": 43, "8329": 43, "1500": 43, "0103": 43, "579": 43, "8241": 43, "1600": 43, "0075": 43, "638": 43, "2570": 43, "0045": 43, "1562": 43, "1800": 43, "0035": 43, "479": 43, "8625": 43, "1900": 43, "0032": 43, "1939": 43, "0022": 43, "442": 43, "4975": 43, "2100": 43, "0015": 43, "61": [43, 57], "0901": 43, "2200": 43, "0016": 43, "464": 43, "9430": 43, "2300": [43, 92, 93], "0014": 43, "382": 43, "5650": 43, "2400": 43, "0011": 43, "287": [43, 94], "2281": 43, "2500": 43, "355": 43, "6796": 43, "2600": 43, "0010": 43, "1357": 43, "2700": 43, "289": 43, "6964": 43, "2800": 43, "184": [43, 57, 94], "4234": 43, "2900": 43, "0009": 43, "246": 43, "5847": 43, "65": [43, 57, 64], "3299": 43, "3100": 43, "185": [43, 57], "9355": 43, "3200": 43, "263": [43, 81], "0209": 43, "3300": 43, "3132": 43, "3400": 43, "231": [43, 94], "4044": 43, "3500": 43, "226": 43, "3184": 43, "3600": 43, "211": 43, "4237": 43, "3700": 43, "233": 43, "2981": 43, "3800": 43, "299": 43, "0853": 43, "3900": 43, "4271": 43, "937375545501709": 43, "0008940778156514197": 43, "dmmot": 43, "0x7f39dc260ca0": 43, "pseudorandom": 43, "vecsiz": [43, 81], "artist": 43, "put": [43, 56], "whose": [43, 73, 78, 80, 81, 85], "underscor": 43, "argument": [43, 71, 74, 82, 90, 94], "0x7f38c81ed660": 43, "bary_log": 43, "1964": 43, "284": [43, 94], "3413": 43, "9858": 43, "3320": 43, "2204": 43, "7755": 43, "156": [43, 57, 94], "3650": 43, "4874": 43, "229": [43, 81], "6258": 43, "3684": 43, "238": [43, 94], "1008": 43, "3353": 43, "3034": 43, "2220": 43, "267": [43, 94], "4771": 43, "1678": 43, "1315": 43, "0706": 43, "271": 43, "7241": 43, "0567": 43, "269": 43, "5960": 43, "0420": 43, "8386": 43, "0345": 43, "8676": 43, "0230": 43, "8679": 43, "0145": 43, "217": [43, 94], "0122": 43, "244": 43, "9326": 43, "0089": 43, "207": [43, 94], "8076": 43, "0064": 43, "3682": 43, "208": [43, 94], "5713": 43, "0042": 43, "196": [43, 57], "3110": 43, "189": [43, 57, 94], "1930": 43, "0028": 43, "152": [43, 57], "9444": 43, "0025": 43, "154": [43, 57], "9903": 43, "0023": 43, "165": [43, 57], "5778": 43, "0020": 43, "162": [43, 57], "6161": 43, "0019": 43, "148": [43, 57, 94], "9564": 43, "0018": 43, "7780": 43, "0017": 43, "8478": 43, "145": [43, 57, 63, 94], "0931": 43, "128": [43, 57, 74, 81, 92], "1718": 43, "0x7f39dc524d60": 43, "918": [43, 49], "plot_dmmot": [43, 49], "sign": [44, 71, 74, 78], "og": 44, "835": [44, 49], "plot_factored_coupl": [44, 49], "mu_x": 45, "mu_i": [45, 93], "clean": [45, 94], "y_": [45, 74, 80], "contamin": 45, "outlier": 45, "intuit": [45, 69], "182": [45, 57], "y_noisi": 45, "nrow": 45, "ncol": 45, "wy_samp": [45, 73], "07507868": 45, "08001347": 45, "09469872": 45, "1001999": 45, "10001527": 45, "10001687": 45, "09999904": 45, "09979829": 45, "11466591": 45, "13551386": 45, "clearli": [45, 93], "complet": [45, 69, 93, 94], "010389716046318498": 45, "752": [45, 49, 81], "plot_learning_weights_with_coot": [45, 49], "letter": 46, "o1": 46, "o2": 46, "translat": 46, "t1": 46, "t2": [46, 65, 85], "horizont": 46, "sx": 46, "sy": [46, 69], "markerfacecolor": 46, "markeredgecolor": 46, "savefig": 46, "svg": 46, "dpi": 46, "transpar": 46, "bbox_inch": 46, "tight": 46, "375": [46, 94], "darkgrai": 46, "logo_dark": 46, "090": [46, 49], "plot_logo": [46, 49], "alaya": [47, 70, 72, 83, 92, 93], "b\u00e9rar": [47, 72, 92, 93], "gasso": [47, 65, 72, 83, 85, 89, 92, 93], "neurip": [47, 83, 85, 89, 92, 93], "mokhtar": [47, 70, 92], "mokhtarzahdi": 47, "plot1d_mat": [47, 48, 51, 52, 57, 62], "lambd": [47, 51, 52, 53], "ns_budget": [47, 72], "budget": [47, 72], "kept": [47, 72, 94], "nt_budget": [47, 72], "g_screen": 47, "restrict": [47, 72], "3524": 47, "bottleneck": [47, 72], "instal": [47, 69, 72, 81, 93, 94], "pypi": [47, 72, 92, 94], "020986042861303855": 47, "kappa": [47, 72], "7476531411890917": 47, "cardin": [47, 72, 90], "isel": 47, "jsel": 47, "519": [47, 49], "plot_screenkhorn_1d": [47, 49], "librari": [48, 70, 92, 93, 94], "bach": [48, 88, 92, 93], "bhushan": [48, 88, 92, 93], "damodaran": [48, 88, 92, 93], "kilian": [48, 53, 70, 92], "n_sourc": [48, 88], "n_target": [48, 55, 88], "x_sourc": 48, "y_target": 48, "sag": [48, 88], "sag_pi": 48, "solve_semi_dual_entrop": 48, "55553509e": 48, "96395660e": 48, "76579142e": 48, "31178196e": 48, "21640234e": 48, "25357448e": 48, "30225078e": 48, "37891338e": 48, "56123975e": 48, "61451746e": 48, "31505947e": 48, "33831456e": 48, "61515202e": 48, "34246014e": 48, "28734709e": 48, "07550428e": 48, "85500870e": 48, "52288517e": 48, "08262628e": 48, "21423583e": 48, "16904253e": 48, "03825797e": 48, "87178503e": 48, "18391107e": 48, "15462212e": 48, "65987989e": 48, "23177216e": 48, "39440107e": 48, "semicontinu": 48, "asgd": [48, 88], "asgd_pi": 48, "log_asgd": 48, "beta": [48, 72, 81, 87, 88, 94], "87919564": 48, "64972912": 48, "90370867": 48, "65425719": 48, "46885467": 48, "30171991": 48, "77560865": 48, "50927934": 48, "40235686": 48, "91006054": 48, "82169674": 48, "44871332e": 48, "00795848e": 48, "75697554e": 48, "40659699e": 48, "20593540e": 48, "31205385e": 48, "34063837e": 48, "80242597e": 48, "40238837e": 48, "68032820e": 48, "26513361e": 48, "36373920e": 48, "52546195e": 48, "40772739e": 48, "31054753e": 48, "19774150e": 48, "29902872e": 48, "49410422e": 48, "06078986e": 48, "22200805e": 48, "05396464e": 48, "03575289e": 48, "84056467e": 48, "19573357e": 48, "02994053e": 48, "72385417e": 48, "28420336e": 48, "47716225e": 48, "sinkhorn_pi": 48, "55553508e": 48, "96395661e": 48, "31178193e": 48, "30225079e": 48, "37891333e": 48, "56123974e": 48, "33831455e": 48, "61515201e": 48, "07550425e": 48, "85500876e": 48, "52288523e": 48, "08262629e": 48, "16904255e": 48, "03825804e": 48, "87178504e": 48, "23177217e": 48, "39440105e": 48, "sgd": [48, 80, 88], "sgd_dual_pi": 48, "log_sgd": 48, "solve_dual_entrop": 48, "92075753": 48, "80864372": 48, "07370578": 48, "0179414": 48, "60239916": 48, "8141425": 48, "11122763": 48, "346688": 48, "47228889": 48, "57636303": 48, "9534778": 48, "21021974e": 48, "26940978e": 48, "09590373e": 48, "59858662e": 48, "65652588e": 48, "83627521e": 48, "27260904e": 48, "58648690e": 48, "49188637e": 48, "03096858e": 48, "44340331e": 48, "37764488e": 48, "14582303e": 48, "32484188e": 48, "15372556e": 48, "26187284e": 48, "79941580e": 48, "58297483e": 48, "36009581e": 48, "15632652e": 48, "07006729e": 48, "61709962e": 48, "99740394e": 48, "13377026e": 48, "88094057e": 48, "36124884e": 48, "09671824e": 48, "24045368e": 48, "275": [48, 49, 94], "plot_stochast": [48, 49], "067": 49, "auto_examples_oth": 49, "aureli": 50, "boisbunon": [50, 92], "pip": [50, 69, 93, 94], "conda": [50, 93], "forg": [50, 93], "alwai": [50, 69, 74, 93, 94], "document": [50, 70, 92, 93, 94], "pythonot": [50, 71, 92, 94], "github": [50, 69, 71, 87, 90, 92, 93, 94], "io": [50, 92, 94], "Or": 50, "inlin": 50, "caf\u00e9": 50, "croissant": 50, "manhattan": 50, "quick": [50, 92, 94], "googl": 50, "extract": [50, 71], "fiction": 50, "product": [50, 71, 74, 78, 85, 90, 93], "sale": 50, "bakery_po": 50, "bakery_prod": 50, "describ": [50, 69, 72, 80], "sold": 50, "cafe_po": 50, "cafe_prod": 50, "imap": 50, "shop": 50, "npz": 50, "cafe": 50, "89": [50, 57, 74, 94], "73": [50, 57], "88": [50, 57, 94], "92": [50, 57, 94], "91": [50, 57, 94], "441": [50, 72, 81, 92], "next": [50, 80, 81, 85, 93, 94], "ec": 50, "thing": 50, "fontweight": 50, "bold": 50, "va": 50, "coolwarm": 50, "cbar": 50, "use_gridspec": 50, "cell": 50, "awai": 50, "thu": [50, 90], "costli": 50, "while": [50, 81, 93, 94], "time_emd": 50, "section": [50, 93, 94], "good": [50, 68, 69, 93], "plane": 50, "easili": [50, 81, 93], "interpret": 50, "10838179": 50, "pseudo": 50, "oslash": 50, "wise": [50, 71, 90, 93], "divis": 50, "altern": [50, 69, 74, 93, 94], "Be": 50, "care": 50, "pre": [50, 72, 93], "nit": 50, "ot_sink_algo": 50, "atleast_2d": 50, "equival": [50, 51, 74, 78, 83], "diag": [50, 71, 72, 93], "2g": 50, "0008": 50, "notic": 50, "deliv": 50, "fraction": 50, "sens": [50, 72, 81, 92, 93], "reg_paramet": 50, "logspac": [50, 56, 59, 60, 65], "w_sinkhorn_reg": 50, "time_sinkhorn_reg": 50, "max_ot": 50, "few": [50, 94], "seri": 50, "someth": [50, 69], "although": [50, 81], "972222222222223": 50, "impact": [50, 93], "higher": [50, 80, 87], "much": [50, 69, 72], "littl": [50, 81], "458": [50, 58], "plot_intro_ot": [50, 58], "0x7f3a681abc70": 51, "861463e": 51, "860154e": 51, "144529e": 51, "130143e": 51, "178815e": 51, "426078e": 51, "661047e": 51, "233110e": 51, "338932e": 51, "776627e": 51, "293340e": 51, "235791e": 51, "637176e": 51, "740051e": 51, "529356e": 51, "450071e": 51, "193632e": 51, "449812e": 51, "294505e": 51, "857493e": 51, "822723e": 51, "plot_ot_1d": [51, 58], "constrain": [52, 87, 92, 93, 94], "togeth": 52, "0x7f3a08159990": 52, "gsm": 52, "smooth_ot_du": [52, 93], "max_nz": [52, 87, 90], "entri": [52, 71, 81], "permit": 52, "gsc": 52, "sparsity_constrain": [52, 87], "057": [52, 58], "plot_ot_1d_smooth": [52, 58], "empirical_sinkhorn": [53, 93], "938": [53, 58], "plot_ot_2d_sampl": [53, 58], "stole": 54, "idea": [54, 81, 93, 94], "pdf": [54, 56, 69, 93], "1706": 54, "07650": 54, "strictli": [54, 81, 93], "m1": 54, "mp": 54, "l1": [54, 73], "gp": 54, "xtot": 54, "188": [54, 57, 58], "plot_ot_l1_vs_l2": [54, 58], "lst_m": 55, "d_emd": 55, "d_emd2": 55, "d_tv": 55, "0x7f39a8623580": 55, "d_sinkhorn": 55, "d_sinkhorn2": 55, "599": [55, 58], "plot_compute_emd": [55, 58], "special": [56, 71], "pdf_von_mis": 56, "endpoint": 56, "mu1": 56, "kappa1": 56, "mu_target": 56, "pdf1": 56, "pdf_t": 56, "mu2": 56, "kappa2": 56, "vonmis": 56, "0x7f39dc400640": 56, "period": 56, "attain": [56, 83], "antipod": 56, "contrari": 56, "n_try": 56, "deal": [56, 83], "xts2": 56, "l_w2_circl": 56, "l_w2": 56, "w2_circl": 56, "m_w2_circl": 56, "std_w2_circl": 56, "m_w2": 56, "std_w2": 56, "fill_between": [56, 59, 60], "vline": 56, "ymin": 56, "ymax": 56, "733": 56, "tc": 56, "mask_end": 56, "ctp": 56, "ctm": 56, "dcptm": 56, "dcmtp": 56, "invalid": [56, 63], "vm": 56, "plot_compute_wasserstein_circl": [56, 58], "df": [57, 82, 93], "gl2": 57, "frob": 57, "760578e": 57, "669467e": 57, "457501e": 57, "111116e": 57, "665639e": 57, "298130e": 57, "827855e": 57, "664378e": 57, "572776e": 57, "260396e": 57, "664077e": 57, "811855e": 57, "015066e": 57, "663912e": 57, "936787e": 57, "653393e": 57, "663852e": 57, "555826e": 57, "916369e": 57, "663814e": 57, "305693e": 57, "836245e": 57, "663785e": 57, "760450e": 57, "929009e": 57, "663767e": 57, "078011e": 57, "793559e": 57, "663751e": 57, "525192e": 57, "584755e": 57, "663737e": 57, "396466e": 57, "396951e": 57, "663727e": 57, "086938e": 57, "012700e": 57, "663720e": 57, "042609e": 57, "725769e": 57, "663713e": 57, "160914e": 57, "922568e": 57, "663707e": 57, "823502e": 57, "361187e": 57, "663702e": 57, "022440e": 57, "028438e": 57, "663697e": 57, "181249e": 57, "292634e": 57, "663692e": 57, "698532e": 57, "489527e": 57, "663687e": 57, "258253e": 57, "420712e": 57, "663682e": 57, "741118e": 57, "560349e": 57, "663678e": 57, "624135e": 57, "365715e": 57, "663673e": 57, "645179e": 57, "400714e": 57, "663670e": 57, "957237e": 57, "256196e": 57, "663666e": 57, "261541e": 57, "762450e": 57, "663663e": 57, "851305e": 57, "079948e": 57, "663660e": 57, "942296e": 57, "231320e": 57, "663657e": 57, "092896e": 57, "481860e": 57, "663653e": 57, "924361e": 57, "201470e": 57, "663651e": 57, "625455e": 57, "704189e": 57, "663648e": 57, "641123e": 57, "730250e": 57, "663645e": 57, "566666e": 57, "606377e": 57, "663643e": 57, "338514e": 57, "226810e": 57, "663641e": 57, "222711e": 57, "034152e": 57, "663639e": 57, "221805e": 57, "032642e": 57, "663637e": 57, "440781e": 57, "396935e": 57, "663634e": 57, "520091e": 57, "528875e": 57, "663632e": 57, "288193e": 57, "143080e": 57, "663630e": 57, "123055e": 57, "868347e": 57, "663628e": 57, "024487e": 57, "704365e": 57, "663627e": 57, "079606e": 57, "796061e": 57, "663625e": 57, "172093e": 57, "949922e": 57, "663623e": 57, "047880e": 57, "743277e": 57, "663621e": 57, "010577e": 57, "681217e": 57, "663619e": 57, "064438e": 57, "770820e": 57, "663618e": 57, "882375e": 57, "644049e": 57, "663616e": 57, "532647e": 57, "419505e": 57, "663615e": 57, "930189e": 57, "652001e": 57, "663613e": 57, "728955e": 57, "452161e": 57, "663612e": 57, "524214e": 57, "584459e": 57, "663610e": 57, "088418e": 57, "511958e": 57, "663609e": 57, "639430e": 57, "270902e": 57, "663608e": 57, "662611e": 57, "108397e": 57, "663607e": 57, "133700e": 57, "186767e": 57, "663605e": 57, "648141e": 57, "272349e": 57, "55": [57, 81, 92, 94], "663604e": 57, "557516e": 57, "090911e": 57, "56": [57, 81, 92, 94], "663603e": 57, "304213e": 57, "215131e": 57, "663602e": 57, "353809e": 57, "057021e": 57, "58": [57, 81, 94], "663601e": 57, "968279e": 57, "325603e": 57, "59": [57, 74, 78, 81, 92, 93, 94], "663600e": 57, "367159e": 57, "059240e": 57, "663599e": 57, "610790e": 57, "334102e": 57, "663598e": 57, "787466e": 57, "628015e": 57, "62": [57, 94], "663596e": 57, "937777e": 57, "154166e": 57, "63": 57, "599432e": 57, "315190e": 57, "64": [57, 94], "663595e": 57, "813048e": 57, "670555e": 57, "663594e": 57, "724600e": 57, "523409e": 57, "66": [57, 64, 72, 92, 93, 94], "663593e": 57, "081892e": 57, "011779e": 57, "67": [57, 94], "663592e": 57, "948732e": 57, "896260e": 57, "68": 57, "663591e": 57, "941833e": 57, "221188e": 57, "69": [57, 83], "663590e": 57, "213739e": 57, "673523e": 57, "663589e": 57, "127355e": 57, "529811e": 57, "71": 57, "663588e": 57, "349251e": 57, "235363e": 57, "72": [57, 94], "007084e": 57, "329722e": 57, "663587e": 57, "880265e": 57, "118744e": 57, "74": 57, "663586e": 57, "931950e": 57, "204723e": 57, "663585e": 57, "981309e": 57, "286832e": 57, "76": [57, 94], "663584e": 57, "952959e": 57, "576082e": 57, "77": 57, "544857e": 57, "560750e": 57, "78": [57, 92], "663583e": 57, "237579e": 57, "049564e": 57, "79": [57, 94], "663582e": 57, "382386e": 57, "290460e": 57, "646051e": 57, "065503e": 57, "663581e": 57, "197994e": 57, "983702e": 57, "663580e": 57, "072764e": 57, "775370e": 57, "83": 57, "994645e": 57, "645410e": 57, "84": [57, 94], "663579e": 57, "842721e": 57, "056248e": 57, "663578e": 57, "276486e": 57, "450691e": 57, "86": [57, 94], "737346e": 57, "217366e": 57, "87": [57, 83, 94], "663577e": 57, "282043e": 57, "123508e": 57, "663576e": 57, "020937e": 57, "689135e": 57, "431951e": 57, "709310e": 57, "663575e": 57, "052335e": 57, "077789e": 57, "500538e": 57, "823407e": 57, "663574e": 57, "063176e": 57, "095821e": 57, "663573e": 57, "576367e": 57, "949549e": 57, "94": 57, "224681e": 57, "364492e": 57, "663572e": 57, "673221e": 57, "110670e": 57, "96": 57, "635561e": 57, "048017e": 57, "97": 57, "663571e": 57, "527236e": 57, "867807e": 57, "98": [57, 83], "788548e": 57, "638946e": 57, "663570e": 57, "727141e": 57, "536791e": 57, "127278e": 57, "202445e": 57, "101": 57, "663569e": 57, "637504e": 57, "387670e": 57, "102": 57, "922750e": 57, "862195e": 57, "663568e": 57, "076454e": 57, "117891e": 57, "104": 57, "911509e": 57, "843492e": 57, "105": 57, "663567e": 57, "403398e": 57, "998215e": 57, "106": [57, 94], "439790e": 57, "058755e": 57, "107": [57, 94], "634542e": 57, "382735e": 57, "663566e": 57, "452203e": 57, "079401e": 57, "109": 57, "852991e": 57, "746137e": 57, "663565e": 57, "165490e": 57, "602434e": 57, "111": 57, "450250e": 57, "076149e": 57, "112": 57, "663564e": 57, "685294e": 57, "467159e": 57, "113": [57, 94], "821800e": 57, "694245e": 57, "114": [57, 94], "237390e": 57, "722040e": 57, "115": 57, "663563e": 57, "992842e": 57, "315219e": 57, "116": [57, 94], "166739e": 57, "604506e": 57, "117": 57, "086064e": 57, "470297e": 57, "118": [57, 94], "663562e": 57, "435945e": 57, "052346e": 57, "292497e": 57, "813711e": 57, "663561e": 57, "366209e": 57, "936334e": 57, "138746e": 57, "557935e": 57, "009637e": 57, "343153e": 57, "123": [57, 63], "663560e": 57, "386258e": 57, "969683e": 57, "124": [57, 94], "927442e": 57, "206415e": 57, "081681e": 57, "463000e": 57, "126": [57, 94], "663559e": 57, "759123e": 57, "926406e": 57, "127": [57, 94], "890771e": 57, "145409e": 57, "971315e": 57, "279398e": 57, "129": 57, "663558e": 57, "101983e": 57, "496771e": 57, "035645e": 57, "386414e": 57, "984492e": 57, "301317e": 57, "663557e": 57, "849064e": 57, "076024e": 57, "795703e": 57, "987255e": 57, "134": [57, 94], "624087e": 57, "701762e": 57, "135": 57, "689557e": 57, "810673e": 57, "663556e": 57, "644308e": 57, "735399e": 57, "137": [57, 94], "618007e": 57, "691644e": 57, "138": [57, 94], "483013e": 57, "467075e": 57, "139": [57, 94], "663555e": 57, "708771e": 57, "842636e": 57, "013847e": 57, "350146e": 57, "141": [57, 81, 92, 94], "721217e": 57, "863339e": 57, "142": [57, 94], "663554e": 57, "027911e": 57, "373540e": 57, "143": [57, 94], "935449e": 57, "144": [57, 94], "677151e": 57, "790030e": 57, "351982e": 57, "249094e": 57, "146": [57, 94], "663553e": 57, "423360e": 57, "367836e": 57, "147": [57, 59, 61], "541112e": 57, "563722e": 57, "491601e": 57, "481358e": 57, "149": 57, "466407e": 57, "439446e": 57, "663552e": 57, "801524e": 57, "996929e": 57, "151": 57, "714107e": 57, "851507e": 57, "491257e": 57, "480784e": 57, "153": 57, "513799e": 57, "518282e": 57, "663551e": 57, "354539e": 57, "253345e": 57, "155": [57, 94], "233818e": 57, "052519e": 57, "576219e": 57, "622121e": 57, "157": [57, 94], "452791e": 57, "416792e": 57, "663550e": 57, "262867e": 57, "100843e": 57, "316379e": 57, "189863e": 57, "295447e": 57, "155041e": 57, "161": 57, "283286e": 57, "134810e": 57, "569222e": 57, "610479e": 57, "163": 57, "663549e": 57, "172942e": 57, "951247e": 57, "164": 57, "399809e": 57, "328651e": 57, "229432e": 57, "045221e": 57, "166": 57, "326191e": 57, "206184e": 57, "167": 57, "663548e": 57, "209694e": 57, "012384e": 57, "372136e": 57, "282614e": 57, "169": [57, 94], "338395e": 57, "226484e": 57, "416497e": 57, "356410e": 57, "171": 57, "298576e": 57, "160242e": 57, "172": [57, 94], "663547e": 57, "190590e": 57, "980603e": 57, "167083e": 57, "941497e": 57, "174": [57, 94], "069425e": 57, "779038e": 57, "217780e": 57, "025834e": 57, "176": [57, 94], "140754e": 57, "897697e": 57, "177": 57, "663546e": 57, "160707e": 57, "930890e": 57, "178": [57, 94], "101798e": 57, "832892e": 57, "179": 57, "114904e": 57, "854694e": 57, "064022e": 57, "770049e": 57, "181": [57, 94], "258231e": 57, "540149e": 57, "213120e": 57, "018080e": 57, "183": 57, "663545e": 57, "164296e": 57, "936859e": 57, "188762e": 57, "977559e": 57, "394153e": 57, "562760e": 57, "186": 57, "028656e": 57, "711216e": 57, "115348e": 57, "855431e": 57, "663544e": 57, "768310e": 57, "625002e": 57, "021806e": 57, "699820e": 57, "086303e": 57, "807113e": 57, "191": [57, 94], "879008e": 57, "643416e": 57, "192": 57, "050210e": 57, "747071e": 57, "193": 57, "002463e": 57, "667641e": 57, "663543e": 57, "062747e": 57, "767925e": 57, "195": [57, 94], "348538e": 57, "555170e": 57, "992512e": 57, "329589e": 57, "197": 57, "558020e": 57, "590018e": 57, "198": [57, 94], "993772e": 57, "662507e": 57, "588499e": 57, "428734e": 57, "737134e": 57, "453459e": 57, "692289e": 57, "617643e": 57, "614437e": 57, "464513e": 57, "612639e": 57, "102965e": 57, "003963e": 57, "611291e": 57, "371098e": 57, "348827e": 57, "610468e": 57, "110558e": 57, "230389e": 57, "610198e": 57, "672927e": 57, "693743e": 57, "610130e": 57, "232417e": 57, "814742e": 57, "610090e": 57, "513455e": 57, "046887e": 57, "610002e": 57, "443507e": 57, "764057e": 57, "609996e": 57, "657071e": 57, "887869e": 57, "609948e": 57, "998735e": 57, "827807e": 57, "609695e": 57, "569217e": 57, "525962e": 57, "609533e": 57, "010779e": 57, "626881e": 57, "609520e": 57, "043897e": 57, "294681e": 57, "609465e": 57, "415246e": 57, "496718e": 57, "609386e": 57, "898605e": 57, "883745e": 57, "609324e": 57, "837052e": 57, "175060e": 57, "609298e": 57, "617826e": 57, "603564e": 57, "609184e": 57, "080015e": 57, "139305e": 57, "609083e": 57, "273206e": 57, "009411e": 57, "608988e": 57, "940805e": 57, "558681e": 57, "608853e": 57, "380030e": 57, "348223e": 57, "608844e": 57, "185045e": 57, "341930e": 57, "608824e": 57, "279113e": 57, "057868e": 57, "608819e": 57, "156821e": 57, "078753e": 57, "608783e": 57, "205746e": 57, "548567e": 57, "608764e": 57, "189894e": 57, "914259e": 57, "608755e": 57, "474607e": 57, "807303e": 57, "608737e": 57, "144227e": 57, "840760e": 57, "608676e": 57, "775335e": 57, "073291e": 57, "608638e": 57, "348020e": 57, "777116e": 57, "608627e": 57, "863136e": 57, "104023e": 57, "608529e": 57, "110230e": 57, "828482e": 57, "608487e": 57, "641106e": 57, "248184e": 57, "608409e": 57, "823638e": 57, "758383e": 57, "608373e": 57, "256641e": 57, "629519e": 57, "608338e": 57, "132444e": 57, "429691e": 57, "608310e": 57, "786649e": 57, "873484e": 57, "608260e": 57, "103848e": 57, "991794e": 57, "608206e": 57, "321265e": 57, "341279e": 57, "608201e": 57, "054747e": 57, "912648e": 57, "608195e": 57, "198335e": 57, "751739e": 57, "608193e": 57, "458736e": 57, "360328e": 57, "608159e": 57, "153759e": 57, "463587e": 57, "608115e": 57, "738314e": 57, "403523e": 57, "608108e": 57, "960032e": 57, "368161e": 57, "608081e": 57, "675447e": 57, "694254e": 57, "608072e": 57, "976340e": 57, "610383e": 57, "608046e": 57, "604130e": 57, "579515e": 57, "608020e": 57, "617036e": 57, "600226e": 57, "608014e": 57, "957795e": 57, "364188e": 57, "608011e": 57, "292411e": 57, "078211e": 57, "607998e": 57, "431795e": 57, "355831e": 57, "607964e": 57, "127054e": 57, "420225e": 57, "607947e": 57, "021878e": 57, "643126e": 57, "560621e": 57, "725288e": 57, "607900e": 57, "929781e": 57, "710793e": 57, "607890e": 57, "740229e": 57, "229659e": 57, "607858e": 57, "039550e": 57, "279306e": 57, "607836e": 57, "319545e": 57, "121612e": 57, "607826e": 57, "378947e": 57, "025624e": 57, "607808e": 57, "145102e": 57, "841105e": 57, "607776e": 57, "941743e": 57, "121889e": 57, "607743e": 57, "087422e": 57, "356037e": 57, "607741e": 57, "310249e": 57, "106541e": 57, "607738e": 57, "682752e": 57, "705425e": 57, "607691e": 57, "913936e": 57, "684709e": 57, "607671e": 57, "288855e": 57, "072055e": 57, "607654e": 57, "002448e": 57, "611590e": 57, "607641e": 57, "209492e": 57, "319792e": 57, "607632e": 57, "588467e": 57, "984199e": 57, "607619e": 57, "050388e": 57, "294196e": 57, "607618e": 57, "417493e": 57, "513973e": 57, "607598e": 57, "210509e": 57, "946012e": 57, "607591e": 57, "392914e": 57, "062009e": 57, "607579e": 57, "759587e": 57, "247415e": 57, "607574e": 57, "760280e": 57, "437356e": 57, "607556e": 57, "146469e": 57, "843012e": 57, "607550e": 57, "689456e": 57, "930984e": 57, "065631e": 57, "535705e": 57, "607539e": 57, "555681e": 57, "053852e": 57, "607528e": 57, "177470e": 57, "153798e": 57, "607527e": 57, "306068e": 57, "529648e": 57, "607514e": 57, "816045e": 57, "256440e": 57, "607511e": 57, "301970e": 57, "700442e": 57, "607504e": 57, "281072e": 57, "881840e": 57, "607503e": 57, "821886e": 57, "257370e": 57, "607480e": 57, "403013e": 57, "255315e": 57, "169298e": 57, "879624e": 57, "607473e": 57, "235982e": 57, "809227e": 57, "607470e": 57, "717105e": 57, "760195e": 57, "148402e": 57, "883374e": 57, "reg1": [57, 82], "reg2": [57, 82], "gel2": 57, "gcg": [57, 74, 93], "693084e": 57, "610202e": 57, "147342e": 57, "288260e": 57, "610179e": 57, "406304e": 57, "264402e": 57, "610174e": 57, "352083e": 57, "397436e": 57, "449": [57, 58, 94], "plot_optim_otreg": [57, 58], "694": 58, "auto_exampl": 58, "adrien": [59, 70, 92], "corenflo": [59, 70, 92], "aalto": 59, "fi": [59, 63], "n_seed": [59, 60], "n_projections_arr": [59, 60], "res_mean": [59, 60], "res_std": [59, 60], "xscale": [59, 60], "confid": [59, 60], "plot_vari": [59, 61], "mgrid": 60, "30j": 60, "plot_surfac": 60, "set_zlim": 60, "tick": 60, "ssw_1": 60, "781": [60, 61], "plot_variance_ssw": [60, 61], "928": 61, "auto_examples_sl": 61, "uot": [62, 85, 92, 93], "812": [62, 67], "plot_uot_1d": [62, 67], "n_weight": 63, "weight_list": 63, "overflow": [63, 94], "kv": 63, "915": 63, "ktu": 63, "922": 63, "595": 63, "974": 63, "615": 63, "455": [63, 94], "361": [63, 94], "plot_uot_barycenter_1d": [63, 67], "797": [63, 67], "n_nois": [64, 66], "cov": 64, "w0": 64, "partial_wasserstein": [64, 66, 93], "entropic_partial_wasserstein": [64, 93], "partial_w_dist": 64, "jet": [64, 66], "47910182636916243": 64, "5034205945081646": 64, "res0": 64, "partial_gromov_wasserstein": [64, 93], "entropic_partial_gromov_wasserstein": [64, 93], "partial_gw_dist": [64, 83], "611280e": 64, "345385e": 64, "584346e": 64, "659015e": 64, "38071035222889": 64, "59015303098326": 64, "478237e": 64, "894947e": 64, "251769e": 64, "596705e": 64, "808371e": 64, "136110e": 64, "859072e": 64, "136043e": 64, "11743971783944865": 64, "9136043100219415": 64, "359": [64, 67, 94], "plot_partial_wass_and_gromov": [64, 67], "wu": [65, 85, 89, 92], "f\u00e9vott": [65, 85, 89, 92], "through": [65, 85, 89, 92, 93], "regress": [65, 69, 85, 89, 92], "haoran": 65, "final_gamma": 65, "t_list": [65, 85], "g_list": [65, 85], "regularization_path": 65, "semi_relax": [65, 85], "t_list2": 65, "g_list2": 65, "selected_gamma": 65, "compute_transport_plan": 65, "ell_2": [65, 66, 89], "g_list_v": 65, "l_2": 65, "991": [65, 67], "plot_regpath": [65, 67], "_f": [66, 93], "div": [66, 89], "ell_1": 66, "reg_m_kl": 66, "reg_m_l2": 66, "entropic_kl_uot": 66, "kl_uot": 66, "mm_unbalanc": 66, "l2_uot": 66, "partial_ot": 66, "plot_unbalanced_ot": [66, 67], "972": 67, "auto_examples_unbalanc": 67, "interest": [68, 93], "foster": [68, 93], "open": [68, 69, 70, 92, 93, 94], "welcom": [68, 92], "environ": 68, "contributor": [68, 92], "maintain": [68, 71, 92, 94], "particip": 68, "harass": 68, "experi": 68, "everyon": 68, "regardless": [68, 94], "ag": 68, "bodi": 68, "disabl": 68, "ethnic": 68, "gender": 68, "ident": [68, 71, 74], "nation": 68, "person": [68, 70], "appear": [68, 72], "race": 68, "religion": 68, "sexual": 68, "behavior": [68, 69, 94], "includ": [68, 69, 73, 76, 81, 90, 93, 94], "inclus": [68, 69], "languag": [68, 70, 93], "Being": 68, "viewpoint": 68, "gracefulli": 68, "critic": 68, "focus": 68, "best": [68, 69, 80, 93, 94], "empathi": 68, "toward": [68, 94], "member": [68, 92], "unaccept": 68, "imageri": 68, "unwelcom": 68, "attent": 68, "troll": 68, "insult": 68, "derogatori": 68, "comment": 68, "polit": 68, "attack": 68, "public": [68, 69, 94], "privat": 68, "publish": 68, "physic": 68, "electron": 68, "address": [68, 69, 93], "permiss": [68, 94], "could": [68, 94], "inappropri": 68, "profession": 68, "clarifi": 68, "appropri": [68, 69, 90], "fair": [68, 81], "correct": [68, 69, 81, 92, 94], "action": [68, 94], "edit": [68, 69], "reject": 68, "commit": [68, 69, 71, 94], "wiki": 68, "ban": 68, "temporarili": 68, "perman": 68, "deem": 68, "threaten": 68, "offens": 68, "harm": 68, "offici": [68, 94], "mail": [68, 69, 92], "post": 68, "social": 68, "media": 68, "act": 68, "appoint": 68, "offlin": 68, "event": 68, "abus": 68, "report": [68, 69, 92, 94], "contact": 68, "team": [68, 69, 94], "complaint": 68, "review": [68, 69], "investig": [68, 93], "circumst": 68, "oblig": 68, "confidenti": 68, "regard": 68, "incid": 68, "polici": 68, "separ": [68, 93, 94], "who": [68, 94], "faith": 68, "face": [68, 83], "temporari": 68, "repercuss": 68, "determin": [68, 72, 76, 80, 88], "leadership": 68, "coven": 68, "thank": [69, 70, 85, 94], "workflow": 69, "fork": 69, "repositori": [69, 94], "develop": [69, 92, 93, 94], "branch": [69, 94], "click": 69, "button": 69, "page": [69, 92, 94], "under": [69, 72, 73, 74, 92], "your": [69, 92, 93], "guid": [69, 92, 94], "repo": [69, 94], "disk": 69, "git": 69, "yourlogin": 69, "cd": 69, "hold": 69, "checkout": 69, "my": 69, "never": [69, 94], "master": [69, 90, 92, 94], "modified_fil": 69, "push": [69, 93, 94], "instruct": 69, "email": 69, "committ": 69, "abov": [69, 80, 84, 85, 93, 94], "seem": 69, "magic": 69, "look": [69, 85], "web": 69, "ask": [69, 92, 94], "friend": 69, "anoth": [69, 74, 81, 93, 94], "compli": 69, "rule": [69, 82], "submit": 69, "pep8": [69, 94], "guidelin": [69, 92], "mention": 69, "descript": 69, "docstr": [69, 90, 94], "usag": 69, "doctest": [69, 94], "prefix": 69, "mrg": 69, "readi": 69, "merg": [69, 94], "core": [69, 94], "approv": [69, 94], "elig": 69, "incomplet": [69, 94], "wip": 69, "progress": 69, "matur": 69, "duplic": 69, "broad": 69, "api": [69, 71, 79, 92, 94], "seek": [69, 93], "collabor": 69, "often": [69, 93], "benefit": [69, 70, 92], "task": 69, "pr": [69, 71, 94], "folder": [69, 92, 94], "coverag": [69, 94], "enhanc": 69, "verifi": 69, "manner": 69, "modif": 69, "grant": 69, "desir": [69, 72, 80, 81, 90], "fail": [69, 81, 93, 94], "At": [69, 93], "paragraph": 69, "narr": 69, "literatur": [69, 72, 93], "common": [69, 93], "program": [69, 72, 81, 82, 92, 93, 94], "tool": [69, 93], "pyflak": 69, "autopep8": 69, "easi": [69, 92, 93], "redund": [69, 94], "bonu": 69, "benchmark": [69, 71, 94], "profil": 69, "track": [69, 80, 94], "feel": 69, "wish": 69, "snippet": 69, "highlight": [69, 94], "well": [69, 71, 81, 90, 93], "platform": [69, 94], "__version__": 69, "about": [69, 72, 93, 94], "gist": 69, "except": 69, "traceback": 69, "great": 69, "pick": [69, 88], "tracker": 69, "resolv": 69, "knowledg": [69, 93], "assist": 69, "area": [69, 93], "greatli": [69, 93, 94], "appreci": 69, "experienc": 69, "concentr": 69, "glad": 69, "restructuredtext": 69, "etc": [69, 73], "directori": 69, "editor": 69, "noplot": 69, "place": [69, 94], "viewabl": 69, "browser": 69, "pillow": 69, "write": [69, 71], "keep": [69, 93, 94], "compromis": 69, "reader": [69, 93], "hand": 69, "wave": 69, "explan": 69, "inspir": 69, "scikit": [69, 90, 93, 94], "wrapper": [70, 93], "alexandr": [70, 92], "ci": [70, 94], "michael": [70, 81], "l\u00e9o": [70, 92], "gautheron": [70, 92], "nathali": [70, 92], "gayraud": [70, 92], "debug": [70, 81, 94], "alain": [70, 92], "jcpot": [70, 92, 94], "minhui": 70, "huang": [70, 76, 92, 93], "robust": [70, 76, 92, 93, 94], "nathan": [70, 94], "cassereau": [70, 94], "camil": 70, "le": [70, 90], "coz": 70, "theo": 70, "gnassoun": 70, "wassertstein": 70, "effici": [70, 72, 81, 92, 93, 94], "layer": [70, 79, 92, 94], "lot": [70, 94], "would": [70, 71, 94], "variou": [70, 90, 94], "mathieu": [70, 87, 94], "financ": [70, 92], "manpow": [70, 92], "partner": [70, 92], "goal": [71, 88], "agnost": 71, "whether": [71, 80, 81, 90], "cupi": [71, 92, 93, 94], "nonetheless": 71, "achiev": 71, "imit": 71, "As": [71, 81, 93, 94], "convent": [71, 74, 94], "list_to_arrai": [71, 90], "get_backend": [71, 94], "know": 71, "op": 71, "numpy_op": 71, "np_config": 71, "enable_numpy_behavior": 71, "intel": 71, "xeon": 71, "6248": 71, "50ghz": 71, "tesla": 71, "v100": 71, "sxm2": 71, "32gb": 71, "date": [71, 94], "8th": 71, "316": [71, 94], "pull": [71, 94], "bitsize32": 71, "bit": 71, "devicecpugpu": 71, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 71, "00080": 71, "00220": 71, "01510": 71, "00950": 71, "01930": 71, "00510": 71, "0293": 71, "00050": 71, "00130": 71, "00970": 71, "00570": 71, "01150": 71, "00290": 71, "0173": 71, "5000": 71, "00090": 71, "00160": 71, "01100": 71, "00580": 71, "0166": 71, "00210": 71, "01450": 71, "00560": 71, "01180": 71, "0168": 71, "20000": 71, "00690": 71, "00430": 71, "02780": 71, "00590": 71, "00300": 71, "0165": 71, "50000": [71, 85], "07070": 71, "03140": 71, "13950": 71, "00740": 71, "01250": 71, "00350": 71, "0198": 71, "nbsp": 71, "bitsize64": 71, "00200": 71, "01540": 71, "00930": 71, "01910": 71, "0328": 71, "00940": 71, "01140": 71, "0169": 71, "00170": 71, "01200": 71, "01160": 71, "00340": 71, "00270": 71, "01770": 71, "0167": 71, "01460": 71, "00750": 71, "04360": 71, "14670": 71, "05680": 71, "24680": 71, "00770": 71, "00450": 71, "0204": 71, "proper": [71, 94], "typeerror": 71, "get_backend_list": 71, "register_backend": 71, "to_numpi": 71, "abstract": 71, "jaxbackend": 71, "numpybackend": 71, "torchbackend": [71, 94], "cupybackend": 71, "tensorflowbackend": 71, "__name__": 71, "__type__": 71, "rtol": 71, "equal_nan": 71, "evalu": [71, 72, 73, 81, 94], "evenli": 71, "argsort": 71, "array_equ": 71, "assert_same_dtype_devic": 71, "arctang": 71, "arctan2": 71, "bitsiz": 71, "a_min": 71, "a_max": 71, "sequenc": 71, "exist": [71, 72, 93, 94], "col": 71, "cumsum": 71, "device_typ": 71, "dtype_devic": 71, "eigh": 71, "eigenvalu": [71, 74, 78], "eigenvector": 71, "einsum": 71, "subscript": 71, "operand": 71, "einstein": 71, "summat": 71, "eliminate_zero": 71, "smaller": [71, 94], "csr_matrix": 71, "exponenti": [71, 72], "flip": 71, "from_numpi": 71, "fill_valu": 71, "inv": 71, "is_floating_point": 71, "infin": 71, "Not": 71, "isinf": 71, "isnan": 71, "nan": 71, "isspars": 71, "kl_div": 71, "stat": 71, "specifi": [71, 74, 87, 90, 94], "logsumexp": [71, 76, 93], "matmul": 71, "amax": 71, "arithmet": 71, "median": [71, 90, 94], "amin": 71, "frobeniu": 71, "outer": 71, "expon": 71, "prod": 71, "qr": 71, "repeat": 71, "searchsort": 71, "side": [71, 85], "insert": 71, "set_gradi": [71, 94], "equat": [71, 72, 80, 88, 93], "scalar": [71, 72, 73], "sort2": 71, "ngeativ": 71, "root": [71, 92, 93], "definit": [71, 93], "squeez": 71, "deviat": [71, 75, 79, 80], "take_along_axi": 71, "arr": 71, "gather": 71, "tile": 71, "rep": 71, "tocsr": 71, "compress": 71, "trace": 71, "dim0": 71, "dim1": 71, "swap": 71, "chosen": [71, 90, 93], "zero_pad": 71, "pad_width": 71, "pad": 71, "cp": 71, "s_": 72, "empirical_sinkhorn_diverg": [72, 93, 94], "barycenter_sinkhorn": 72, "barycenter_stabil": [72, 94], "tau": [72, 76, 89], "10000000000": 72, "mast": 72, "strength": 72, "height": 72, "stabthr": 72, "goe": [72, 92, 93], "butscher": [72, 92, 93], "nguyen": [72, 92, 93], "guiba": [72, 92, 93], "geometr": [72, 79, 92, 93, 94], "islazi": 72, "batchsiz": 72, "99977301e": 72, "26989344e": 72, "empirical_sinkhorn2": [72, 93], "53978687e": 72, "w_a": 72, "gamma_a": 72, "m_a": 72, "w_b": 72, "gamma_b": 72, "m_b": 72, "_a": [72, 85], "_b": 72, "499887176049052": 72, "frechet": [72, 81], "w_i": [72, 81], "measure_weight": [72, 81], "k_i": [72, 81], "There": [72, 81, 93], "arnaud": [72, 81], "doucet": [72, 81, 92, 93], "\u00e1lvarez": [72, 81, 92], "esteban": [72, 81, 92], "pedro": [72, 81, 92], "744": [72, 81, 92], "762": [72, 81, 92], "geometricbar": 72, "alldistribt": 72, "geometricmean": 72, "jcpot_barycent": 72, "lambda_k": 72, "gamma_k": 72, "th": [72, 73, 81, 85, 87], "relat": [72, 80, 92, 93, 94], "n_k": 72, "unknown": 72, "nsk": 72, "control": [72, 74, 80, 81], "devi": [72, 74], "projc": 72, "constrint": 72, "projr": 72, "maxfun": 72, "pgtol": 72, "written": [72, 81], "u_i": 72, "ldot": [72, 81], "v_j": 72, "regularis": 72, "bfg": [72, 87, 89, 93], "lbfg": 72, "final": [72, 81, 93, 94], "gain": [72, 94], "isn": 72, "epsilon0": 72, "print_period": 72, "decreas": [72, 74], "tabl": 72, "m0": 72, "h0": 72, "reg0": 72, "dh": 72, "m_0": 72, "_0": [72, 90], "n_atom": 72, "dim_prior": 72, "trust": [72, 76], "nakhostin": [72, 92], "corpetti": [72, 92], "planetari": [72, 92], "workshop": [72, 74, 92, 93], "hyperspectr": [72, 92], "signal": [72, 92, 93], "remot": [72, 92], "whisper": [72, 92], "wx_samp": 73, "wx_feat": 73, "wy_feat": 73, "m_samp": 73, "m_feat": 73, "nits_bcd": 73, "tol_bcd": 73, "eval_bcd": 73, "nits_ot": 73, "tol_sinkhorn": 73, "method_sinkhorn": 73, "early_stopping_tol": 73, "xf": 73, "yf": 73, "alpha_": 73, "alpha_f": 73, "varepsilon_": 73, "varepsilon_f": 73, "n_sample_x": 73, "n_feature_x": 73, "n_sample_i": 73, "n_feature_i": 73, "kei": [73, 80], "duals_sampl": 73, "duals_featur": 73, "bcd": [73, 74, 76, 80], "scheme": 73, "previou": [73, 85], "multipli": [73, 90], "earli": [73, 94], "pi_samp": 73, "pi_feat": 73, "pair": [73, 90], "ny_sampstem": 73, "alpha_1": 73, "alpha_2": 73, "varepsilon_1": 73, "varepsilon_2": 73, "distribution_estimation_uniform": 74, "emd_laplac": 74, "knn": 74, "sim_param": 74, "n_": [74, 81], "s_i": 74, "s_j": 74, "n_t": 74, "t_i": 74, "t_j": 74, "neighbor": 74, "bandwidth": 74, "otml": [74, 92, 93], "joint_ot_mapping_kernel": [74, 93], "kerneltyp": 74, "verbose2": 74, "nonlinear": [74, 81, 93], "2_f": 74, "2_": 74, "jointli": 74, "constant": [74, 80, 81], "supplementari": 74, "materi": 74, "joint_ot_mapping_linear": [74, 93], "neutral": 74, "sinkhorn_l1l2_gl": [74, 93], "keyword": [74, 90], "transform_label": 74, "inverse_transform_label": 74, "y_t": 74, "unlabel": [74, 83, 92, 93], "transp_x": 74, "transp_xt": 74, "propag": 74, "transp_i": 74, "soft": 74, "nb_class": 74, "similarity_param": 74, "max_inner_it": 74, "inner_tol": 74, "distribution_estim": 74, "out_of_sample_map": 74, "disp": 74, "occur": [74, 93], "kind": [74, 81, 93], "emploi": 74, "limit_max": 74, "10e": 74, "849": 74, "858": 74, "nk_source_sampl": 74, "sign_eig": [74, 78], "sigma_": [74, 78], "sigma_t": [74, 78], "skew": [74, 78], "desolneux": [74, 78, 92], "salmona": [74, 78, 92], "1178": [74, 78, 92], "1198": [74, 78, 92], "discuss": [74, 78, 80, 82, 92, 93, 94], "remark": [74, 78, 93], "daigon": 74, "covari": [74, 75, 78, 93], "knott": [74, 78, 92, 93], "smith": [74, 78, 92, 93], "theori": [74, 78, 92, 93], "1984": [74, 78, 92, 93], "mapping_": 74, "lpl1": 74, "infti": 74, "unbalancedsinkhorntransport": 74, "reduct": [76, 92, 94], "explicitli": [76, 79, 84, 94], "u0": 76, "sinkhorn_method": 76, "maxiter_sink": 76, "maxiter_mm": 76, "stiefel": [76, 93], "eather": 76, "mm": 76, "major": [76, 93, 94], "fisher": [76, 83, 93], "ridg": 76, "proj": [76, 86], "projection_robust_wasserstein": 76, "max_": [76, 85, 87, 88], "stepsiz": 76, "riemannian": [76, 92, 93], "ma": [76, 92, 93], "lai": [76, 92, 93], "split_class": 76, "limits_i": 76, "limits_": 76, "neq": [76, 81, 93], "steepest": 76, "trustregion": 76, "region": 76, "wasserstaiun": 76, "1608": [76, 92, 93], "08063": [76, 92, 93], "bures_wasserstein_dist": 78, "ct": 78, "bure": [78, 94], "lvert": 78, "_t": 78, "rvert": 78, "tr": 78, "bures_wasserstein_map": [78, 93], "empirical_bures_wasserstein_dist": 78, "empirical_gaussian_gromov_wasserstein_dist": 78, "gaussien": 78, "theorem": [78, 93], "dt": 78, "_refer": [78, 88], "gaussian_gromov_wasserstein_dist": 78, "gaussian_gromov_wasserstein_map": 78, "fgw_distance_to_templ": 79, "g_edg": 79, "tplt_adjac": 79, "g_featur": 79, "tplt_featur": 79, "tplt_weight": 79, "multi_alpha": 79, "n_edg": 79, "n_templates_nod": 79, "n_tplt": 79, "n_tplt_node": 79, "train_node_weight": 79, "tfgw": [79, 92], "pool": [79, 94], "tfgw_": 79, "overlin": 79, "fgw_": [79, 80], "_k": 79, "character": 79, "law": 79, "twpool": 79, "kown": 79, "tw_": 79, "charactersis": 79, "b\u00e9cigneul": [79, 92], "ganea": [79, 92], "chen": [79, 92], "barzilai": [79, 92], "jaakkola": [79, 92], "wasserstein_distance_to_templ": 79, "gw_distance_estim": 80, "nb_samples_p": 80, "nb_samples_q": 80, "unbias": 80, "csr": 80, "replac": [80, 93, 94], "sebban": 80, "mlj": 80, "entropic_fused_gromov_barycent": 80, "init_i": 80, "necessarili": 80, "correctli": [80, 94], "Such": 80, "suggest": 80, "entropic_fused_gromov_wasserstein2": 80, "asymetr": 80, "entropic_gromov_barycent": [80, 93], "entropic_gromov_wasserstein2": 80, "recommand": 80, "correcli": 80, "mirror": 80, "geometri": 80, "howev": [80, 93], "yet": [80, 93, 94], "entropic_semirelaxed_fused_gromov_wasserstein2": 80, "entropic_semirelaxed_gromov_wasserstein2": 80, "fixed_structur": 80, "fixed_featur": 80, "init_x": 80, "eq": [80, 87], "cdict_init": 80, "ydict_init": 80, "_d": 80, "distibut": 80, "cdict": 80, "ydict": 80, "randomli": 80, "nonneg": 80, "strategi": 80, "consecut": 80, "cdict_best_st": 80, "compos": 80, "ydict_best_st": 80, "w_d": 80, "emb": 80, "depict": 80, "span": [80, 81], "current_loss": 80, "gw_2": 80, "gwggrad": 80, "constc": 80, "hc1": 80, "hc2": 80, "proposit": [80, 87, 88], "h1": 80, "gwloss": 80, "init_matrix": 80, "otim": 80, "read": [80, 92], "f_1": 80, "h_1": 80, "2b": 80, "init_matrix_semirelax": 80, "anymor": 80, "fc2t": 80, "threshold_plan": 80, "frank": 80, "wolf": 80, "_iter": 80, "pn": 80, "delet": [80, 85], "violat": [80, 81, 93], "nb_samples_grad": 80, "semirelaxed_fused_gromov_wasserstein2": 80, "semirelaxed_gromov_wasserstein2": 80, "solve_gromov_linesearch": [80, 82], "deltag": 80, "cost_g": 80, "alpha_min": [80, 82], "alpha_max": [80, 82], "fw": 80, "fc": [80, 82], "useless": [80, 94], "solve_semirelaxed_gromov_linesearch": [80, 82], "ones_p": 80, "tensor_product": 80, "ten": 80, "update_feature_matrix": 80, "update_kl_loss": 80, "update_square_loss": 80, "alpha0": [81, 82], "beta0": 81, "below": [81, 92, 94], "basic": 81, "sinc": [81, 93, 94], "alpha_0": 81, "beta_0": 81, "check_number_thread": 81, "request": [81, 86, 92], "valid": 81, "estimate_dual_null_weight": 81, "rather": 81, "coars": 81, "emd_c": 81, "amount": [81, 83, 93, 94], "max_j": 81, "max_i": 81, "beta_j": [81, 87], "y_init": 81, "nu_i": 81, "b_l": 81, "y_l": 81, "a_": 81, "d_i": 81, "p_i": 81, "p_ix_": 81, "rightarrow": 81, "don": 81, "ill": 81, "anywai": 81, "cvxopt": [81, 93, 94], "glpk": 81, "mosek": 81, "agueh": [81, 92, 93], "904": [81, 92, 93], "924": [81, 92, 93], "dmmot_monge_1dgrid_loss": 81, "concurr": 81, "prime": 81, "state": [81, 94], "textrm": 81, "i_1": 81, "i_d": 81, "i_2": 81, "a_1": 81, "i_i": 81, "qquad": 81, "vdot": 81, "i_": 81, "jefferi": [81, 92], "kline": [81, 92], "vishnu": [81, 92], "suresh": [81, 92], "lokhand": [81, 92], "glenn": [81, 92], "fung": [81, 92], "vika": [81, 92], "singh": [81, 92], "eleventh": [81, 87, 92], "leonid": 81, "transloc": 81, "dokl": 81, "akad": 81, "nauk": 81, "sssr": 81, "227": 81, "1942": 81, "print_rat": 81, "a_d": 81, "z_j": [81, 87, 90], "a_j": 81, "subject": 81, "z_": 81, "i_j": 81, "jin": 81, "nabla": [81, 87], "a_2": 81, "nonumb": 81, "z_1": 81, "move": [81, 93, 94], "decai": 81, "olvi": 81, "mangasarian": 81, "rr": 81, "meyer": 81, "perturb": 81, "745": 81, "1979": 81, "ferri": 81, "1991": 81, "line_search": 82, "line_search_armijo": [82, 94], "reg_1": 82, "reg_2": 82, "generic_conditional_gradi": 82, "lp_solver": 82, "lp_semi_relaxed_ot": 82, "gcg_linesearch": 82, "xk": 82, "pk": 82, "gfk": 82, "old_fval": 82, "x_k": 82, "p_k": 82, "fa": 82, "const": 82, "semirelaxed_cg": 82, "solve_1d_linesearch_quad": 82, "bx": 82, "entropic_partial_gromov_wasserstein2": 83, "gwgrad_parti": 83, "n_p": 83, "n_u": 83, "nb_dummi": 83, "gwloss_parti": 83, "thre": 83, "costfr": 83, "dummi": [83, 94], "instabl": 83, "popul": 83, "partial_gromov_wasserstein2": 83, "especi": [83, 93], "smoother": 83, "repartit": 83, "reservoir": [83, 93], "caffarelli": [83, 92, 93], "mccann": [83, 92, 93], "boundari": [83, 92, 93], "amper": [83, 92, 93], "obstacl": [83, 92, 93], "annal": [83, 92, 93], "673": [83, 92, 93], "partial_wasserstein_lagrang": 83, "partial_wasserstein2": [83, 93], "rao": 83, "tune": 83, "shown": [84, 93], "na": 84, "thr": 84, "noth": 84, "complement_schur": 85, "m_current": 85, "id_pop": 85, "schur": 85, "complement": 85, "aris": 85, "bmatrix": 85, "m_k": 85, "h_a": 85, "th_a": 85, "backslash": 85, "r_": 85, "depriv": 85, "compute_next_remov": 85, "current_gamma": 85, "largest": 85, "vanish": [85, 93], "phi_j": 85, "delta_j": 85, "intercept": 85, "slope": 85, "next_removal_gamma": 85, "next_removal_index": 85, "gamma_list": 85, "pi_list": 85, "piecewis": 85, "flatten": 85, "19722222": 85, "05555556": 85, "24722222": 85, "construct_augmented_h": 85, "active_index": 85, "hc": 85, "hrhr": 85, "augment": 85, "_h": 85, "h_": 85, "h_r": 85, "h_c": 85, "h_augment": 85, "fully_relaxed_path": 85, "itmax": 85, "reformul": 85, "min_t": 85, "99958333e": 85, "00000000e": 85, "88888889e": 85, "99938889e": 85, "ot_next_gamma": 85, "hth": 85, "hty": 85, "inact": 85, "next_gamma": 85, "next_active_index": 85, "recast_ot_as_lasso": 85, "recast": 85, "1_m": 85, "1_n": 85, "particularli": [85, 93], "uot2": 85, "recast_semi_relaxed_as_lasso": 85, "hr": 85, "auxiliari": 85, "constitut": 85, "semi_relaxed_next_gamma": 85, "phi_u": 85, "delta_u": 85, "hra": 85, "ri": 85, "ra": 85, "ith": 85, "lagrang": [85, 90], "semi_relaxed_path": 85, "99980556e": 85, "94444444e": 85, "get_random_project": 86, "unit": [86, 93], "ue": 86, "proc": 87, "1710": 87, "06276": 87, "mblondel": 87, "liu": [87, 92], "puigcerv": [87, 92], "2209": 87, "15466": 87, "dual_obj_grad": 87, "regul": 87, "delta_omega": 87, "grad_alpha": 87, "grad_beta": 87, "get_plan_from_du": 87, "retriev": 87, "get_plan_from_semi_du": 87, "projection_simplex": 87, "substack": [87, 90], "z_i": [87, 90], "semi_dual_obj_grad": 87, "max_omega": 87, "decent": 87, "nbb": 87, "nonzero": 87, "sinhorn": 87, "smooth_ot_semi_du": [87, 93], "solve_du": 87, "solve_semi_du": 87, "negentropi": 87, "sup_": 87, "intend": 87, "appar": 87, "sparsityconstrain": 87, "squaredl2": 87, "averaged_sgd_entropic_transport": 88, "300000": 88, "contin": 88, "alg": 88, "ave_v": 88, "batch_grad_du": 88, "batch_alpha": 88, "batch_beta": 88, "partial_": 88, "b_": 88, "l_v": 88, "b_v": 88, "l_u": 88, "b_u": 88, "c_transform_entrop": 88, "coordinate_grad_semi_du": 88, "bewar": 88, "dual_loss": 88, "sag_entropic_transport": 88, "sgd_entropic_regular": 88, "barycenter_unbalanced_sinkhorn": 89, "barycenter_unbalanced_stabil": [89, 93], "absorpt": 89, "lbfgsb_unbalanc": 89, "reg_div": 89, "regm_div": 89, "div_m": 89, "quantifi": 89, "mm_unbalanced2": 89, "b_i": 89, "check_param": 90, "miss": 90, "check_random_st": 90, "turn": 90, "singleton": 90, "alreadi": [90, 93, 94], "valueerror": 90, "clean_zero": [90, 94], "cost_norm": [90, 94], "loglog": 90, "lin_squar": 90, "euclidean_dist": 90, "n_samples_1": 90, "n_samples_2": 90, "ambient": 90, "y1": 90, "is_all_finit": 90, "label_norm": 90, "smallest": 90, "lst": 90, "parmap": 90, "nproc": 90, "multiprocess": 90, "closest": 90, "orthogon": 90, "projection_sparse_simplex": [90, 94], "anastasio": 90, "kyrillidi": 90, "stephen": 90, "becker": 90, "volkan": 90, "cevher": 90, "christoph": 90, "koch": 90, "1206": 90, "1529": 90, "get_param": 90, "deep": 90, "subobject": 90, "param": 90, "set_param": 90, "nest": 90, "pipelin": 90, "latter": 90, "__": 90, "sparse_plan": 90, "lazy_plan": 90, "a_to_b": 90, "b_to_a": 90, "citat": 90, "plain": 90, "bibtex": [90, 92], "symbol": 90, "keop": 90, "lazytensor": 90, "marginal_a": 90, "marginal_b": 90, "potential_a": 90, "potential_b": 90, "extra": 90, "decor": 90, "mark": 90, "blob": 90, "instanti": [90, 94], "parenthes": 90, "some_funct": 90, "undefinedparamet": 90, "undefin": 90, "ransport": 91, "sever": [92, 93, 94], "websit": 92, "jmlr": [92, 94], "aur\u00e9li": 92, "nemo": 92, "fournier": 92, "antoni": 92, "schutz": 92, "danica": 92, "sutherland": 92, "alexand": 92, "tong": 92, "articl": 92, "flamary2021pot": 92, "mi": 92, "aur": 92, "lie": [92, 93], "year": [92, 93, 94], "volum": 92, "url": 92, "v22": 92, "451": 92, "linux": [92, 94], "macosx": [92, 94], "window": [92, 94], "cython": [92, 93, 94], "latest": 92, "archiv": 92, "abl": 92, "easier": [92, 93], "wd": 92, "wd_reg": 92, "t_reg": [92, 93], "ba": 92, "question": 92, "slack": 92, "channel": 92, "gitter": 92, "bug": [92, 94], "2292": [92, 93], "36th": [92, 93], "38th": [92, 93], "pointer": [93, 94], "concret": 93, "book": 93, "ml": 93, "gaspard": 93, "1781": 93, "overal": 93, "difficult": 93, "kantorovitch": 93, "share": 93, "disjoint": 93, "favor": 93, "popular": 93, "jensen": 93, "shannon": 93, "meaning": 93, "becam": 93, "overcom": 93, "spectra": 93, "itself": 93, "context": 93, "recent": [93, 94], "rapidli": 93, "grow": 93, "novel": [93, 94], "abil": 93, "extend": 93, "proven": 93, "nearli": [93, 94], "still": [93, 94], "geomloss": 93, "lipschitz": 93, "exactli": 93, "filter": 93, "quit": [93, 94], "known": 93, "affin": 93, "hi": 93, "semin": 93, "strong": 93, "procedur": 93, "slower": 93, "variant": [93, 94], "tu": 93, "kullbach": 93, "similarli": 93, "pure": 93, "speed": [93, 94], "effect": 93, "densifi": 93, "lost": 93, "soon": 93, "_q": 93, "overlap": 93, "forc": 93, "choic": [93, 94], "long": [93, 94], "w_kw": 93, "mu_k": 93, "b_k": 93, "linprog": 93, "brought": 93, "brenier": 93, "eponym": 93, "interfac": 93, "basetransport": [93, 94], "classifi": [93, 94], "xs_map": 93, "inherit": [93, 94], "w_u": 93, "interestingli": 93, "fr\u00e9chet": 93, "w_kw_u": 93, "barycenter_unbalanced_sinkhorn_unbalanc": 93, "surplu": 93, "resolut": 93, "c1_": 93, "c2_": 93, "realign": 93, "ck": 93, "fusion": 93, "coin": 93, "partli": 93, "linearli": 93, "projector": 93, "min_p": 93, "mu_j": 93, "hard": [93, 94], "seamlessli": [93, 94], "incur": 93, "far": 93, "longer": 93, "hopefulli": [93, 94], "disappear": 93, "becom": 93, "fulli": [93, 94], "importerror": 93, "shortli": 93, "readm": [93, 94], "tri": [93, 94], "quicker": [93, 94], "configur": 93, "nterpol": 93, "cc": 93, "9386": 93, "www": 93, "toronto": 93, "annals2010": 93, "2002": 93, "08276": 93, "tweak": 94, "525": 94, "outsid": 94, "502": 94, "504": 94, "august": 94, "submodul": 94, "front": 94, "unregist": 94, "celebr": 94, "neighborhood": 94, "streamlin": 94, "timeout": 94, "runner": 94, "old": 94, "made": 94, "498": 94, "488": 94, "483": 94, "463": 94, "459": 94, "473": 94, "472": 94, "maco": 94, "484": 94, "_gw": 94, "_bregman": 94, "_semirelax": 94, "ecwa": 94, "486": 94, "454": 94, "497": 94, "check_backend": 94, "494": 94, "redirector": 94, "codecov": 94, "457": 94, "cleanup": 94, "462": 94, "467": 94, "475": 94, "wasserstein2": 94, "466": 94, "468": 94, "471": 94, "474": 94, "pression": 94, "429": 94, "496": 94, "kachayev": 94, "liutianlin0121": 94, "francoi": 94, "rozet": 94, "framunoz": 94, "soniamaz8": 94, "tommor": 94, "12hengyu": 94, "decid": 94, "bring": 94, "431": 94, "happi": 94, "began": 94, "unifi": 94, "behind": 94, "facilit": 94, "explor": 94, "just": 94, "sol": 94, "ot_loss": 94, "ot_loss_linear": 94, "sol2": 94, "sol_rkl": 94, "sol_rl2": 94, "sol_ul2": 94, "sol_rkl_ukl": 94, "kickstart": 94, "encourag": 94, "plai": 94, "big": 94, "428": 94, "372": 94, "376": 94, "387": 94, "388": 94, "437": 94, "443": 94, "447": 94, "448": 94, "395": 94, "393": 94, "394": 94, "371": 94, "373": 94, "374": 94, "hit": 94, "stderr": 94, "cerr": 94, "stream": 94, "377": 94, "378": 94, "379": 94, "beyond": 94, "certain": 94, "slightli": 94, "46k": 94, "roughli": 94, "381": 94, "mismatch": 94, "386": 94, "389": 94, "391": 94, "around": 94, "402": 94, "built": 94, "403": 94, "setuptool": 94, "408": 94, "409": 94, "404": 94, "412": 94, "413": 94, "render": 94, "subcal": 94, "421": 94, "422": 94, "break": 94, "try": 94, "424": 94, "425": 94, "444": 94, "445": 94, "446": 94, "notabl": 94, "less": 94, "background": 94, "autodiff": 94, "358": 94, "brand": 94, "357": 94, "minigalleri": 94, "334": 94, "336": 94, "341": 94, "319": 94, "362": 94, "364": 94, "363": 94, "valfunct": 94, "337": 94, "338": 94, "abi": 94, "346": 94, "349": 94, "feed": 94, "backpropag": 94, "351": 94, "352": 94, "tag": 94, "332": 94, "global": 94, "namespac": 94, "331": 94, "333": 94, "enabl": 94, "wheel": 94, "older": 94, "realli": 94, "315": 94, "code_of_conduct": 94, "322": 94, "308": 94, "326": 94, "305": 94, "309": 94, "sinkhornl1l2": 94, "311": 94, "313": 94, "317": 94, "3018": 94, "novemb": 94, "nice": 94, "mechan": 94, "moment": 94, "ott": 94, "simplifi": 94, "pyproject": 94, "toml": 94, "aarch64": 94, "raspberri": 94, "android": 94, "phone": 94, "arm": 94, "processor": 94, "softwar": 94, "cite": 94, "improv": 94, "particular": 94, "usual": 94, "peopl": 94, "kamel": 94, "guerda": 94, "ai": 94, "idri": 94, "249": 94, "294": 94, "302": 94, "304": 94, "303": 94, "274": 94, "291": 94, "293": 94, "lazi": 94, "259": 94, "smartphon": 94, "236": 94, "253": 94, "202": 94, "203": 94, "introductori": 94, "leak": 94, "254": 94, "288": 94, "278": 94, "258": 94, "234": 94, "242": 94, "215": 94, "281": 94, "286": 94, "infeas": 94, "296": 94, "flake8": 94, "setup": 94, "flag": 94, "organ": 94, "own": 94, "host": 94, "offer": 94, "readthedoc": 94, "beauti": 94, "huge": 94, "travi": 94, "simpler": 94, "laplac": 94, "acknowledg": 94, "232": 94, "bad": 94, "jump": 94, "wild": 94, "fundament": 94, "month": 94, "until": 94, "python3stat": 94, "relev": 94, "64bit": 94, "past": 94, "manylinux": 94, "sep": 94, "among": 94, "rewrit": 94, "unmaintain": 94, "cudamat": 94, "were": 94, "stai": 94, "stuff": 94, "markdown": 94, "pipi": 94, "renam": 94, "compliant": 94, "un": 94, "plug": 94, "unus": 94, "unicodedecodeerror": 94, "ascii": 94, "pytest": 94, "pep": 94, "du": 94, "jul": 94, "reloc": 94, "apr": 94, "jan": 94, "nov": 94, "oct": 94}, "objects": {"": [[0, 0, 0, "-", "ot"]], "ot": [[71, 0, 0, "-", "backend"], [0, 3, 1, "", "barycenter"], [0, 3, 1, "", "barycenter_unbalanced"], [0, 3, 1, "", "binary_search_circle"], [72, 0, 0, "-", "bregman"], [73, 0, 0, "-", "coot"], [74, 0, 0, "-", "da"], [75, 0, 0, "-", "datasets"], [0, 3, 1, "", "dist"], [76, 0, 0, "-", "dr"], [0, 3, 1, "", "emd"], [0, 3, 1, "", "emd2"], [0, 3, 1, "", "emd2_1d"], [0, 3, 1, "", "emd_1d"], [77, 0, 0, "-", "factored"], [0, 3, 1, "", "factored_optimal_transport"], [0, 3, 1, "", "fused_gromov_wasserstein"], [0, 3, 1, "", "fused_gromov_wasserstein2"], [78, 0, 0, "-", "gaussian"], [79, 0, 0, "-", "gnn"], [80, 0, 0, "-", "gromov"], [0, 3, 1, "", "gromov_barycenters"], [0, 3, 1, "", "gromov_wasserstein"], [0, 3, 1, "", "gromov_wasserstein2"], [81, 0, 0, "-", "lp"], [0, 3, 1, "", "max_sliced_wasserstein_distance"], [82, 0, 0, "-", "optim"], [83, 0, 0, "-", "partial"], [84, 0, 0, "-", "plot"], [85, 0, 0, "-", "regpath"], [0, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [0, 3, 1, "", "sinkhorn"], [0, 3, 1, "", "sinkhorn2"], [0, 3, 1, "", "sinkhorn_lpl1_mm"], [0, 3, 1, "", "sinkhorn_unbalanced"], [0, 3, 1, "", "sinkhorn_unbalanced2"], [86, 0, 0, "-", "sliced"], [0, 3, 1, "", "sliced_wasserstein_distance"], [0, 3, 1, "", "sliced_wasserstein_sphere"], [0, 3, 1, "", "sliced_wasserstein_sphere_unif"], [87, 0, 0, "-", "smooth"], [0, 3, 1, "", "solve"], [88, 0, 0, "-", "stochastic"], [0, 3, 1, "", "tic"], [0, 3, 1, "", "toc"], [0, 3, 1, "", "toq"], [89, 0, 0, "-", "unbalanced"], [0, 3, 1, "", "unif"], [90, 0, 0, "-", "utils"], [0, 3, 1, "", "wasserstein_1d"], [0, 3, 1, "", "wasserstein_circle"], [91, 0, 0, "-", "weak"], [0, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[71, 1, 1, "id0", "Backend"], [71, 1, 1, "id83", "CupyBackend"], [71, 1, 1, "id164", "JaxBackend"], [71, 1, 1, "id245", "NumpyBackend"], [71, 1, 1, "id326", "TensorflowBackend"], [71, 1, 1, "id407", "TorchBackend"], [71, 3, 1, "id488", "get_backend"], [71, 3, 1, "id489", "get_backend_list"], [71, 3, 1, "", "register_backend"], [71, 3, 1, "id490", "to_numpy"]], "ot.backend.Backend": [[71, 2, 1, "id1", "abs"], [71, 2, 1, "id2", "allclose"], [71, 2, 1, "id3", "any"], [71, 2, 1, "id4", "arange"], [71, 2, 1, "id5", "argmax"], [71, 2, 1, "id6", "argmin"], [71, 2, 1, "id7", "argsort"], [71, 2, 1, "id8", "array_equal"], [71, 2, 1, "id9", "assert_same_dtype_device"], [71, 2, 1, "id10", "atan2"], [71, 2, 1, "id11", "bitsize"], [71, 2, 1, "id12", "clip"], [71, 2, 1, "id13", "concatenate"], [71, 2, 1, "id14", "coo_matrix"], [71, 2, 1, "id15", "copy"], [71, 2, 1, "id16", "cumsum"], [71, 2, 1, "id17", "detach"], [71, 2, 1, "id18", "device_type"], [71, 2, 1, "id19", "diag"], [71, 2, 1, "id20", "dot"], [71, 2, 1, "id21", "dtype_device"], [71, 2, 1, "id22", "eigh"], [71, 2, 1, "id23", "einsum"], [71, 2, 1, "id24", "eliminate_zeros"], [71, 2, 1, "id25", "exp"], [71, 2, 1, "id26", "eye"], [71, 2, 1, "id27", "flip"], [71, 2, 1, "id28", "floor"], [71, 2, 1, "id29", "from_numpy"], [71, 2, 1, "id30", "full"], [71, 2, 1, "id31", "inv"], [71, 2, 1, "id32", "is_floating_point"], [71, 2, 1, "id33", "isfinite"], [71, 2, 1, "id34", "isinf"], [71, 2, 1, "id35", "isnan"], [71, 2, 1, "id36", "issparse"], [71, 2, 1, "id37", "kl_div"], [71, 2, 1, "id38", "linspace"], [71, 2, 1, "id39", "log"], [71, 2, 1, "id40", "logsumexp"], [71, 2, 1, "id41", "matmul"], [71, 2, 1, "id42", "max"], [71, 2, 1, "id43", "maximum"], [71, 2, 1, "id44", "mean"], [71, 2, 1, "id45", "median"], [71, 2, 1, "id46", "meshgrid"], [71, 2, 1, "id47", "min"], [71, 2, 1, "id48", "minimum"], [71, 2, 1, "id49", "norm"], [71, 2, 1, "id50", "ones"], [71, 2, 1, "id51", "outer"], [71, 2, 1, "id52", "power"], [71, 2, 1, "id53", "prod"], [71, 2, 1, "id54", "qr"], [71, 2, 1, "id55", "rand"], [71, 2, 1, "id56", "randn"], [71, 2, 1, "id57", "repeat"], [71, 2, 1, "id58", "reshape"], [71, 2, 1, "id59", "searchsorted"], [71, 2, 1, "id60", "seed"], [71, 2, 1, "id61", "set_gradients"], [71, 2, 1, "id62", "sign"], [71, 2, 1, "id63", "solve"], [71, 2, 1, "id64", "sort"], [71, 2, 1, "id65", "sort2"], [71, 2, 1, "id66", "sqrt"], [71, 2, 1, "id67", "sqrtm"], [71, 2, 1, "id68", "squeeze"], [71, 2, 1, "id69", "stack"], [71, 2, 1, "id70", "std"], [71, 2, 1, "id71", "sum"], [71, 2, 1, "id72", "take_along_axis"], [71, 2, 1, "id73", "tile"], [71, 2, 1, "id74", "to_numpy"], [71, 2, 1, "id75", "tocsr"], [71, 2, 1, "id76", "todense"], [71, 2, 1, "id77", "trace"], [71, 2, 1, "id78", "transpose"], [71, 2, 1, "id79", "unique"], [71, 2, 1, "id80", "where"], [71, 2, 1, "id81", "zero_pad"], [71, 2, 1, "id82", "zeros"]], "ot.backend.CupyBackend": [[71, 2, 1, "id84", "abs"], [71, 2, 1, "id85", "allclose"], [71, 2, 1, "id86", "any"], [71, 2, 1, "id87", "arange"], [71, 2, 1, "id88", "argmax"], [71, 2, 1, "id89", "argmin"], [71, 2, 1, "id90", "argsort"], [71, 2, 1, "id91", "array_equal"], [71, 2, 1, "id92", "assert_same_dtype_device"], [71, 2, 1, "id93", "atan2"], [71, 2, 1, "id94", "bitsize"], [71, 2, 1, "id95", "clip"], [71, 2, 1, "id96", "concatenate"], [71, 2, 1, "id97", "coo_matrix"], [71, 2, 1, "id98", "copy"], [71, 2, 1, "id99", "cumsum"], [71, 2, 1, "id100", "detach"], [71, 2, 1, "id101", "device_type"], [71, 2, 1, "id102", "diag"], [71, 2, 1, "id103", "dot"], [71, 2, 1, "id104", "dtype_device"], [71, 2, 1, "id105", "eigh"], [71, 2, 1, "id106", "einsum"], [71, 2, 1, "id107", "eliminate_zeros"], [71, 2, 1, "id108", "exp"], [71, 2, 1, "id109", "eye"], [71, 2, 1, "id110", "flip"], [71, 2, 1, "id111", "floor"], [71, 2, 1, "id112", "full"], [71, 2, 1, "id113", "inv"], [71, 2, 1, "id114", "is_floating_point"], [71, 2, 1, "id115", "isfinite"], [71, 2, 1, "id116", "isinf"], [71, 2, 1, "id117", "isnan"], [71, 2, 1, "id118", "issparse"], [71, 2, 1, "id119", "kl_div"], [71, 2, 1, "id120", "linspace"], [71, 2, 1, "id121", "log"], [71, 2, 1, "id122", "logsumexp"], [71, 2, 1, "id123", "matmul"], [71, 2, 1, "id124", "max"], [71, 2, 1, "id125", "maximum"], [71, 2, 1, "id126", "mean"], [71, 2, 1, "id127", "median"], [71, 2, 1, "id128", "meshgrid"], [71, 2, 1, "id129", "min"], [71, 2, 1, "id130", "minimum"], [71, 2, 1, "id131", "norm"], [71, 2, 1, "id132", "ones"], [71, 2, 1, "id133", "outer"], [71, 2, 1, "id134", "power"], [71, 2, 1, "id135", "prod"], [71, 2, 1, "id136", "qr"], [71, 2, 1, "id137", "rand"], [71, 2, 1, "id138", "randn"], [71, 2, 1, "id139", "repeat"], [71, 2, 1, "id140", "reshape"], [71, 2, 1, "id141", "searchsorted"], [71, 2, 1, "id142", "seed"], [71, 2, 1, "id143", "set_gradients"], [71, 2, 1, "id144", "sign"], [71, 2, 1, "id145", "solve"], [71, 2, 1, "id146", "sort"], [71, 2, 1, "id147", "sort2"], [71, 2, 1, "id148", "sqrt"], [71, 2, 1, "id149", "sqrtm"], [71, 2, 1, "id150", "squeeze"], [71, 2, 1, "id151", "stack"], [71, 2, 1, "id152", "std"], [71, 2, 1, "id153", "sum"], [71, 2, 1, "id154", "take_along_axis"], [71, 2, 1, "id155", "tile"], [71, 2, 1, "id156", "tocsr"], [71, 2, 1, "id157", "todense"], [71, 2, 1, "id158", "trace"], [71, 2, 1, "id159", "transpose"], [71, 2, 1, "id160", "unique"], [71, 2, 1, "id161", "where"], [71, 2, 1, "id162", "zero_pad"], [71, 2, 1, "id163", "zeros"]], "ot.backend.JaxBackend": [[71, 2, 1, "id165", "abs"], [71, 2, 1, "id166", "allclose"], [71, 2, 1, "id167", "any"], [71, 2, 1, "id168", "arange"], [71, 2, 1, "id169", "argmax"], [71, 2, 1, "id170", "argmin"], [71, 2, 1, "id171", "argsort"], [71, 2, 1, "id172", "array_equal"], [71, 2, 1, "id173", "assert_same_dtype_device"], [71, 2, 1, "id174", "atan2"], [71, 2, 1, "id175", "bitsize"], [71, 2, 1, "id176", "clip"], [71, 2, 1, "id177", "concatenate"], [71, 2, 1, "id178", "coo_matrix"], [71, 2, 1, "id179", "copy"], [71, 2, 1, "id180", "cumsum"], [71, 2, 1, "id181", "detach"], [71, 2, 1, "id182", "device_type"], [71, 2, 1, "id183", "diag"], [71, 2, 1, "id184", "dot"], [71, 2, 1, "id185", "dtype_device"], [71, 2, 1, "id186", "eigh"], [71, 2, 1, "id187", "einsum"], [71, 2, 1, "id188", "eliminate_zeros"], [71, 2, 1, "id189", "exp"], [71, 2, 1, "id190", "eye"], [71, 2, 1, "id191", "flip"], [71, 2, 1, "id192", "floor"], [71, 2, 1, "id193", "full"], [71, 2, 1, "id194", "inv"], [71, 2, 1, "id195", "is_floating_point"], [71, 2, 1, "id196", "isfinite"], [71, 2, 1, "id197", "isinf"], [71, 2, 1, "id198", "isnan"], [71, 2, 1, "id199", "issparse"], [71, 2, 1, "id200", "kl_div"], [71, 2, 1, "id201", "linspace"], [71, 2, 1, "id202", "log"], [71, 2, 1, "id203", "logsumexp"], [71, 2, 1, "id204", "matmul"], [71, 2, 1, "id205", "max"], [71, 2, 1, "id206", "maximum"], [71, 2, 1, "id207", "mean"], [71, 2, 1, "id208", "median"], [71, 2, 1, "id209", "meshgrid"], [71, 2, 1, "id210", "min"], [71, 2, 1, "id211", "minimum"], [71, 2, 1, "id212", "norm"], [71, 2, 1, "id213", "ones"], [71, 2, 1, "id214", "outer"], [71, 2, 1, "id215", "power"], [71, 2, 1, "id216", "prod"], [71, 2, 1, "id217", "qr"], [71, 2, 1, "id218", "rand"], [71, 2, 1, "id219", "randn"], [71, 2, 1, "id220", "repeat"], [71, 2, 1, "id221", "reshape"], [71, 2, 1, "id222", "searchsorted"], [71, 2, 1, "id223", "seed"], [71, 2, 1, "id224", "set_gradients"], [71, 2, 1, "id225", "sign"], [71, 2, 1, "id226", "solve"], [71, 2, 1, "id227", "sort"], [71, 2, 1, "id228", "sort2"], [71, 2, 1, "id229", "sqrt"], [71, 2, 1, "id230", "sqrtm"], [71, 2, 1, "id231", "squeeze"], [71, 2, 1, "id232", "stack"], [71, 2, 1, "id233", "std"], [71, 2, 1, "id234", "sum"], [71, 2, 1, "id235", "take_along_axis"], [71, 2, 1, "id236", "tile"], [71, 2, 1, "id237", "tocsr"], [71, 2, 1, "id238", "todense"], [71, 2, 1, "id239", "trace"], [71, 2, 1, "id240", "transpose"], [71, 2, 1, "id241", "unique"], [71, 2, 1, "id242", "where"], [71, 2, 1, "id243", "zero_pad"], [71, 2, 1, "id244", "zeros"]], "ot.backend.NumpyBackend": [[71, 2, 1, "id246", "abs"], [71, 2, 1, "id247", "allclose"], [71, 2, 1, "id248", "any"], [71, 2, 1, "id249", "arange"], [71, 2, 1, "id250", "argmax"], [71, 2, 1, "id251", "argmin"], [71, 2, 1, "id252", "argsort"], [71, 2, 1, "id253", "array_equal"], [71, 2, 1, "id254", "assert_same_dtype_device"], [71, 2, 1, "id255", "atan2"], [71, 2, 1, "id256", "bitsize"], [71, 2, 1, "id257", "clip"], [71, 2, 1, "id258", "concatenate"], [71, 2, 1, "id259", "coo_matrix"], [71, 2, 1, "id260", "copy"], [71, 2, 1, "id261", "cumsum"], [71, 2, 1, "id262", "detach"], [71, 2, 1, "id263", "device_type"], [71, 2, 1, "id264", "diag"], [71, 2, 1, "id265", "dot"], [71, 2, 1, "id266", "dtype_device"], [71, 2, 1, "id267", "eigh"], [71, 2, 1, "id268", "einsum"], [71, 2, 1, "id269", "eliminate_zeros"], [71, 2, 1, "id270", "exp"], [71, 2, 1, "id271", "eye"], [71, 2, 1, "id272", "flip"], [71, 2, 1, "id273", "floor"], [71, 2, 1, "id274", "full"], [71, 2, 1, "id275", "inv"], [71, 2, 1, "id276", "is_floating_point"], [71, 2, 1, "id277", "isfinite"], [71, 2, 1, "id278", "isinf"], [71, 2, 1, "id279", "isnan"], [71, 2, 1, "id280", "issparse"], [71, 2, 1, "id281", "kl_div"], [71, 2, 1, "id282", "linspace"], [71, 2, 1, "id283", "log"], [71, 2, 1, "id284", "logsumexp"], [71, 2, 1, "id285", "matmul"], [71, 2, 1, "id286", "max"], [71, 2, 1, "id287", "maximum"], [71, 2, 1, "id288", "mean"], [71, 2, 1, "id289", "median"], [71, 2, 1, "id290", "meshgrid"], [71, 2, 1, "id291", "min"], [71, 2, 1, "id292", "minimum"], [71, 2, 1, "id293", "norm"], [71, 2, 1, "id294", "ones"], [71, 2, 1, "id295", "outer"], [71, 2, 1, "id296", "power"], [71, 2, 1, "id297", "prod"], [71, 2, 1, "id298", "qr"], [71, 2, 1, "id299", "rand"], [71, 2, 1, "id300", "randn"], [71, 2, 1, "id301", "repeat"], [71, 2, 1, "id302", "reshape"], [71, 2, 1, "id303", "searchsorted"], [71, 2, 1, "id304", "seed"], [71, 2, 1, "id305", "set_gradients"], [71, 2, 1, "id306", "sign"], [71, 2, 1, "id307", "solve"], [71, 2, 1, "id308", "sort"], [71, 2, 1, "id309", "sort2"], [71, 2, 1, "id310", "sqrt"], [71, 2, 1, "id311", "sqrtm"], [71, 2, 1, "id312", "squeeze"], [71, 2, 1, "id313", "stack"], [71, 2, 1, "id314", "std"], [71, 2, 1, "id315", "sum"], [71, 2, 1, "id316", "take_along_axis"], [71, 2, 1, "id317", "tile"], [71, 2, 1, "id318", "tocsr"], [71, 2, 1, "id319", "todense"], [71, 2, 1, "id320", "trace"], [71, 2, 1, "id321", "transpose"], [71, 2, 1, "id322", "unique"], [71, 2, 1, "id323", "where"], [71, 2, 1, "id324", "zero_pad"], [71, 2, 1, "id325", "zeros"]], "ot.backend.TensorflowBackend": [[71, 2, 1, "id327", "abs"], [71, 2, 1, "id328", "allclose"], [71, 2, 1, "id329", "any"], [71, 2, 1, "id330", "arange"], [71, 2, 1, "id331", "argmax"], [71, 2, 1, "id332", "argmin"], [71, 2, 1, "id333", "argsort"], [71, 2, 1, "id334", "array_equal"], [71, 2, 1, "id335", "assert_same_dtype_device"], [71, 2, 1, "id336", "atan2"], [71, 2, 1, "id337", "bitsize"], [71, 2, 1, "id338", "clip"], [71, 2, 1, "id339", "concatenate"], [71, 2, 1, "id340", "coo_matrix"], [71, 2, 1, "id341", "copy"], [71, 2, 1, "id342", "cumsum"], [71, 2, 1, "id343", "detach"], [71, 2, 1, "id344", "device_type"], [71, 2, 1, "id345", "diag"], [71, 2, 1, "id346", "dot"], [71, 2, 1, "id347", "dtype_device"], [71, 2, 1, "id348", "eigh"], [71, 2, 1, "id349", "einsum"], [71, 2, 1, "id350", "eliminate_zeros"], [71, 2, 1, "id351", "exp"], [71, 2, 1, "id352", "eye"], [71, 2, 1, "id353", "flip"], [71, 2, 1, "id354", "floor"], [71, 2, 1, "id355", "full"], [71, 2, 1, "id356", "inv"], [71, 2, 1, "id357", "is_floating_point"], [71, 2, 1, "id358", "isfinite"], [71, 2, 1, "id359", "isinf"], [71, 2, 1, "id360", "isnan"], [71, 2, 1, "id361", "issparse"], [71, 2, 1, "id362", "kl_div"], [71, 2, 1, "id363", "linspace"], [71, 2, 1, "id364", "log"], [71, 2, 1, "id365", "logsumexp"], [71, 2, 1, "id366", "matmul"], [71, 2, 1, "id367", "max"], [71, 2, 1, "id368", "maximum"], [71, 2, 1, "id369", "mean"], [71, 2, 1, "id370", "median"], [71, 2, 1, "id371", "meshgrid"], [71, 2, 1, "id372", "min"], [71, 2, 1, "id373", "minimum"], [71, 2, 1, "id374", "norm"], [71, 2, 1, "id375", "ones"], [71, 2, 1, "id376", "outer"], [71, 2, 1, "id377", "power"], [71, 2, 1, "id378", "prod"], [71, 2, 1, "id379", "qr"], [71, 2, 1, "id380", "rand"], [71, 2, 1, "id381", "randn"], [71, 2, 1, "id382", "repeat"], [71, 2, 1, "id383", "reshape"], [71, 2, 1, "id384", "searchsorted"], [71, 2, 1, "id385", "seed"], [71, 2, 1, "id386", "set_gradients"], [71, 2, 1, "id387", "sign"], [71, 2, 1, "id388", "solve"], [71, 2, 1, "id389", "sort"], [71, 2, 1, "id390", "sort2"], [71, 2, 1, "id391", "sqrt"], [71, 2, 1, "id392", "sqrtm"], [71, 2, 1, "id393", "squeeze"], [71, 2, 1, "id394", "stack"], [71, 2, 1, "id395", "std"], [71, 2, 1, "id396", "sum"], [71, 2, 1, "id397", "take_along_axis"], [71, 2, 1, "id398", "tile"], [71, 2, 1, "id399", "tocsr"], [71, 2, 1, "id400", "todense"], [71, 2, 1, "id401", "trace"], [71, 2, 1, "id402", "transpose"], [71, 2, 1, "id403", "unique"], [71, 2, 1, "id404", "where"], [71, 2, 1, "id405", "zero_pad"], [71, 2, 1, "id406", "zeros"]], "ot.backend.TorchBackend": [[71, 2, 1, "id408", "abs"], [71, 2, 1, "id409", "allclose"], [71, 2, 1, "id410", "any"], [71, 2, 1, "id411", "arange"], [71, 2, 1, "id412", "argmax"], [71, 2, 1, "id413", "argmin"], [71, 2, 1, "id414", "argsort"], [71, 2, 1, "id415", "array_equal"], [71, 2, 1, "id416", "assert_same_dtype_device"], [71, 2, 1, "id417", "atan2"], [71, 2, 1, "id418", "bitsize"], [71, 2, 1, "id419", "clip"], [71, 2, 1, "id420", "concatenate"], [71, 2, 1, "id421", "coo_matrix"], [71, 2, 1, "id422", "copy"], [71, 2, 1, "id423", "cumsum"], [71, 2, 1, "id424", "detach"], [71, 2, 1, "id425", "device_type"], [71, 2, 1, "id426", "diag"], [71, 2, 1, "id427", "dot"], [71, 2, 1, "id428", "dtype_device"], [71, 2, 1, "id429", "eigh"], [71, 2, 1, "id430", "einsum"], [71, 2, 1, "id431", "eliminate_zeros"], [71, 2, 1, "id432", "exp"], [71, 2, 1, "id433", "eye"], [71, 2, 1, "id434", "flip"], [71, 2, 1, "id435", "floor"], [71, 2, 1, "id436", "full"], [71, 2, 1, "id437", "inv"], [71, 2, 1, "id438", "is_floating_point"], [71, 2, 1, "id439", "isfinite"], [71, 2, 1, "id440", "isinf"], [71, 2, 1, "id441", "isnan"], [71, 2, 1, "id442", "issparse"], [71, 2, 1, "id443", "kl_div"], [71, 2, 1, "id444", "linspace"], [71, 2, 1, "id445", "log"], [71, 2, 1, "id446", "logsumexp"], [71, 2, 1, "id447", "matmul"], [71, 2, 1, "id448", "max"], [71, 2, 1, "id449", "maximum"], [71, 2, 1, "id450", "mean"], [71, 2, 1, "id451", "median"], [71, 2, 1, "id452", "meshgrid"], [71, 2, 1, "id453", "min"], [71, 2, 1, "id454", "minimum"], [71, 2, 1, "id455", "norm"], [71, 2, 1, "id456", "ones"], [71, 2, 1, "id457", "outer"], [71, 2, 1, "id458", "power"], [71, 2, 1, "id459", "prod"], [71, 2, 1, "id460", "qr"], [71, 2, 1, "id461", "rand"], [71, 2, 1, "id462", "randn"], [71, 2, 1, "id463", "repeat"], [71, 2, 1, "id464", "reshape"], [71, 2, 1, "id465", "searchsorted"], [71, 2, 1, "id466", "seed"], [71, 2, 1, "id467", "set_gradients"], [71, 2, 1, "id468", "sign"], [71, 2, 1, "id469", "solve"], [71, 2, 1, "id470", "sort"], [71, 2, 1, "id471", "sort2"], [71, 2, 1, "id472", "sqrt"], [71, 2, 1, "id473", "sqrtm"], [71, 2, 1, "id474", "squeeze"], [71, 2, 1, "id475", "stack"], [71, 2, 1, "id476", "std"], [71, 2, 1, "id477", "sum"], [71, 2, 1, "id478", "take_along_axis"], [71, 2, 1, "id479", "tile"], [71, 2, 1, "id480", "tocsr"], [71, 2, 1, "id481", "todense"], [71, 2, 1, "id482", "trace"], [71, 2, 1, "id483", "transpose"], [71, 2, 1, "id484", "unique"], [71, 2, 1, "id485", "where"], [71, 2, 1, "id486", "zero_pad"], [71, 2, 1, "id487", "zeros"]], "ot.bregman": [[72, 3, 1, "id0", "barycenter"], [72, 3, 1, "id43", "barycenter_debiased"], [72, 3, 1, "id46", "barycenter_sinkhorn"], [72, 3, 1, "id49", "barycenter_stabilized"], [72, 3, 1, "id52", "convolutional_barycenter2d"], [72, 3, 1, "id56", "convolutional_barycenter2d_debiased"], [72, 3, 1, "id59", "empirical_sinkhorn"], [72, 3, 1, "id63", "empirical_sinkhorn2"], [72, 3, 1, "id67", "empirical_sinkhorn_divergence"], [72, 3, 1, "id69", "free_support_sinkhorn_barycenter"], [72, 3, 1, "id72", "geometricBar"], [72, 3, 1, "id73", "geometricMean"], [72, 3, 1, "id74", "greenkhorn"], [72, 3, 1, "id78", "jcpot_barycenter"], [72, 3, 1, "id81", "projC"], [72, 3, 1, "id82", "projR"], [72, 3, 1, "id83", "screenkhorn"], [72, 3, 1, "id87", "sinkhorn"], [72, 3, 1, "id93", "sinkhorn2"], [72, 3, 1, "id100", "sinkhorn_epsilon_scaling"], [72, 3, 1, "id105", "sinkhorn_knopp"], [72, 3, 1, "id108", "sinkhorn_log"], [72, 3, 1, "id112", "sinkhorn_stabilized"], [72, 3, 1, "id117", "unmix"]], "ot.coot": [[73, 3, 1, "id0", "co_optimal_transport"], [73, 3, 1, "id4", "co_optimal_transport2"]], "ot.da": [[74, 1, 1, "id0", "BaseTransport"], [74, 1, 1, "id41", "EMDLaplaceTransport"], [74, 1, 1, "id48", "EMDTransport"], [74, 1, 1, "id54", "JCPOTTransport"], [74, 1, 1, "id67", "LinearGWTransport"], [74, 1, 1, "id71", "LinearTransport"], [74, 1, 1, "id78", "MappingTransport"], [74, 1, 1, "id85", "SinkhornL1l2Transport"], [74, 1, 1, "id93", "SinkhornLpl1Transport"], [74, 1, 1, "id100", "SinkhornTransport"], [74, 1, 1, "id108", "UnbalancedSinkhornTransport"], [74, 3, 1, "id115", "distribution_estimation_uniform"], [74, 3, 1, "id116", "emd_laplace"], [74, 3, 1, "id120", "joint_OT_mapping_kernel"], [74, 3, 1, "id123", "joint_OT_mapping_linear"], [74, 3, 1, "id126", "sinkhorn_l1l2_gl"], [74, 3, 1, "id130", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[74, 2, 1, "id33", "fit"], [74, 2, 1, "id34", "fit_transform"], [74, 2, 1, "id35", "inverse_transform"], [74, 2, 1, "id36", "inverse_transform_labels"], [74, 2, 1, "id37", "transform"], [74, 2, 1, "id38", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[74, 4, 1, "id42", "coupling_"], [74, 2, 1, "id47", "fit"]], "ot.da.EMDTransport": [[74, 4, 1, "id49", "coupling_"], [74, 2, 1, "id53", "fit"]], "ot.da.JCPOTTransport": [[74, 4, 1, "id55", "coupling_"], [74, 2, 1, "id61", "fit"], [74, 2, 1, "id62", "inverse_transform_labels"], [74, 4, 1, "id57", "log_"], [74, 4, 1, "id56", "proportions_"], [74, 2, 1, "id63", "transform"], [74, 2, 1, "id64", "transform_labels"]], "ot.da.LinearGWTransport": [[74, 2, 1, "id70", "fit"]], "ot.da.LinearTransport": [[74, 2, 1, "id75", "fit"], [74, 2, 1, "id76", "inverse_transform"], [74, 2, 1, "id77", "transform"]], "ot.da.MappingTransport": [[74, 4, 1, "id79", "coupling_"], [74, 2, 1, "id83", "fit"], [74, 4, 1, "id81", "log_"], [74, 4, 1, "id80", "mapping_"], [74, 2, 1, "id84", "transform"]], "ot.da.SinkhornL1l2Transport": [[74, 4, 1, "id86", "coupling_"], [74, 2, 1, "id92", "fit"], [74, 4, 1, "id87", "log_"]], "ot.da.SinkhornLpl1Transport": [[74, 4, 1, "id94", "coupling_"], [74, 2, 1, "id99", "fit"]], "ot.da.SinkhornTransport": [[74, 4, 1, "id101", "coupling_"], [74, 2, 1, "id107", "fit"], [74, 4, 1, "id102", "log_"]], "ot.da.UnbalancedSinkhornTransport": [[74, 4, 1, "id109", "coupling_"], [74, 2, 1, "id114", "fit"], [74, 4, 1, "id110", "log_"]], "ot.datasets": [[75, 3, 1, "id0", "make_1D_gauss"], [75, 3, 1, "id1", "make_2D_samples_gauss"], [75, 3, 1, "id2", "make_data_classif"]], "ot.dr": [[76, 3, 1, "id0", "dist"], [76, 3, 1, "id4", "ewca"], [76, 3, 1, "id7", "fda"], [76, 3, 1, "id8", "logsumexp"], [76, 3, 1, "id9", "projection_robust_wasserstein"], [76, 3, 1, "id12", "sinkhorn"], [76, 3, 1, "id13", "sinkhorn_log"], [76, 3, 1, "id14", "split_classes"], [76, 3, 1, "id15", "wda"]], "ot.factored": [[77, 3, 1, "id0", "factored_optimal_transport"]], "ot.gaussian": [[78, 3, 1, "id0", "bures_wasserstein_distance"], [78, 3, 1, "id15", "bures_wasserstein_mapping"], [78, 3, 1, "id19", "empirical_bures_wasserstein_distance"], [78, 3, 1, "id22", "empirical_bures_wasserstein_mapping"], [78, 3, 1, "id26", "empirical_gaussian_gromov_wasserstein_distance"], [78, 3, 1, "id29", "empirical_gaussian_gromov_wasserstein_mapping"], [78, 3, 1, "id31", "gaussian_gromov_wasserstein_distance"], [78, 3, 1, "id34", "gaussian_gromov_wasserstein_mapping"]], "ot.gnn": [[79, 3, 1, "", "FGW_distance_to_templates"], [79, 1, 1, "", "TFGWPooling"], [79, 1, 1, "", "TWPooling"], [79, 3, 1, "", "wasserstein_distance_to_templates"]], "ot.gnn.TFGWPooling": [[79, 2, 1, "", "forward"]], "ot.gnn.TWPooling": [[79, 2, 1, "", "forward"]], "ot.gromov": [[80, 3, 1, "", "GW_distance_estimation"], [80, 3, 1, "", "entropic_fused_gromov_barycenters"], [80, 3, 1, "", "entropic_fused_gromov_wasserstein"], [80, 3, 1, "", "entropic_fused_gromov_wasserstein2"], [80, 3, 1, "", "entropic_gromov_barycenters"], [80, 3, 1, "", "entropic_gromov_wasserstein"], [80, 3, 1, "", "entropic_gromov_wasserstein2"], [80, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein"], [80, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein2"], [80, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein"], [80, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein2"], [80, 3, 1, "", "fgw_barycenters"], [80, 3, 1, "", "fused_gromov_wasserstein"], [80, 3, 1, "", "fused_gromov_wasserstein2"], [80, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [80, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [80, 3, 1, "", "gromov_barycenters"], [80, 3, 1, "", "gromov_wasserstein"], [80, 3, 1, "", "gromov_wasserstein2"], [80, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [80, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [80, 3, 1, "", "gwggrad"], [80, 3, 1, "", "gwloss"], [80, 3, 1, "", "init_matrix"], [80, 3, 1, "", "init_matrix_semirelaxed"], [80, 3, 1, "", "pointwise_gromov_wasserstein"], [80, 3, 1, "", "sampled_gromov_wasserstein"], [80, 3, 1, "", "semirelaxed_fused_gromov_wasserstein"], [80, 3, 1, "", "semirelaxed_fused_gromov_wasserstein2"], [80, 3, 1, "", "semirelaxed_gromov_wasserstein"], [80, 3, 1, "", "semirelaxed_gromov_wasserstein2"], [80, 3, 1, "", "solve_gromov_linesearch"], [80, 3, 1, "", "solve_semirelaxed_gromov_linesearch"], [80, 3, 1, "", "tensor_product"], [80, 3, 1, "", "update_feature_matrix"], [80, 3, 1, "", "update_kl_loss"], [80, 3, 1, "", "update_square_loss"]], "ot.lp": [[81, 3, 1, "", "barycenter"], [81, 3, 1, "", "binary_search_circle"], [81, 3, 1, "", "center_ot_dual"], [81, 3, 1, "", "check_number_threads"], [81, 3, 1, "", "dmmot_monge_1dgrid_loss"], [81, 3, 1, "", "dmmot_monge_1dgrid_optimize"], [81, 3, 1, "id0", "emd"], [81, 3, 1, "id17", "emd2"], [81, 3, 1, "", "emd2_1d"], [81, 3, 1, "", "emd_1d"], [81, 3, 1, "", "estimate_dual_null_weights"], [81, 3, 1, "id24", "free_support_barycenter"], [81, 3, 1, "id28", "generalized_free_support_barycenter"], [81, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [81, 3, 1, "", "wasserstein_1d"], [81, 3, 1, "", "wasserstein_circle"]], "ot.optim": [[82, 3, 1, "id0", "cg"], [82, 3, 1, "id13", "gcg"], [82, 3, 1, "id17", "generic_conditional_gradient"], [82, 3, 1, "id23", "line_search_armijo"], [82, 3, 1, "id24", "semirelaxed_cg"], [82, 3, 1, "id27", "solve_1d_linesearch_quad"]], "ot.partial": [[83, 3, 1, "id0", "entropic_partial_gromov_wasserstein"], [83, 3, 1, "id17", "entropic_partial_gromov_wasserstein2"], [83, 3, 1, "id21", "entropic_partial_wasserstein"], [83, 3, 1, "id24", "gwgrad_partial"], [83, 3, 1, "id27", "gwloss_partial"], [83, 3, 1, "id28", "partial_gromov_wasserstein"], [83, 3, 1, "id31", "partial_gromov_wasserstein2"], [83, 3, 1, "id34", "partial_wasserstein"], [83, 3, 1, "id37", "partial_wasserstein2"], [83, 3, 1, "id40", "partial_wasserstein_lagrange"]], "ot.plot": [[84, 3, 1, "id0", "plot1D_mat"], [84, 3, 1, "id1", "plot2D_samples_mat"]], "ot.regpath": [[85, 3, 1, "id0", "complement_schur"], [85, 3, 1, "id12", "compute_next_removal"], [85, 3, 1, "id15", "compute_transport_plan"], [85, 3, 1, "id18", "construct_augmented_H"], [85, 3, 1, "id19", "fully_relaxed_path"], [85, 3, 1, "id21", "ot_next_gamma"], [85, 3, 1, "id23", "recast_ot_as_lasso"], [85, 3, 1, "id25", "recast_semi_relaxed_as_lasso"], [85, 3, 1, "id26", "regularization_path"], [85, 3, 1, "id28", "semi_relaxed_next_gamma"], [85, 3, 1, "id30", "semi_relaxed_path"]], "ot.sliced": [[86, 3, 1, "id0", "get_random_projections"], [86, 3, 1, "id5", "max_sliced_wasserstein_distance"], [86, 3, 1, "id7", "sliced_wasserstein_distance"], [86, 3, 1, "id9", "sliced_wasserstein_sphere"], [86, 3, 1, "id11", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[87, 1, 1, "id0", "NegEntropy"], [87, 1, 1, "id10", "Regularization"], [87, 1, 1, "id14", "SparsityConstrained"], [87, 1, 1, "id18", "SquaredL2"], [87, 3, 1, "id22", "dual_obj_grad"], [87, 3, 1, "id23", "get_plan_from_dual"], [87, 3, 1, "id24", "get_plan_from_semi_dual"], [87, 3, 1, "id25", "projection_simplex"], [87, 3, 1, "id26", "semi_dual_obj_grad"], [87, 3, 1, "id27", "smooth_ot_dual"], [87, 3, 1, "id32", "smooth_ot_semi_dual"], [87, 3, 1, "id37", "solve_dual"], [87, 3, 1, "id38", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[87, 2, 1, "id7", "Omega"], [87, 2, 1, "id8", "delta_Omega"], [87, 2, 1, "id9", "max_Omega"]], "ot.smooth.Regularization": [[87, 2, 1, "id11", "Omega"], [87, 2, 1, "id12", "delta_Omega"], [87, 2, 1, "id13", "max_Omega"]], "ot.smooth.SparsityConstrained": [[87, 2, 1, "id15", "Omega"], [87, 2, 1, "id16", "delta_Omega"], [87, 2, 1, "id17", "max_Omega"]], "ot.smooth.SquaredL2": [[87, 2, 1, "id19", "Omega"], [87, 2, 1, "id20", "delta_Omega"], [87, 2, 1, "id21", "max_Omega"]], "ot.stochastic": [[88, 3, 1, "id0", "averaged_sgd_entropic_transport"], [88, 3, 1, "id14", "batch_grad_dual"], [88, 3, 1, "id16", "c_transform_entropic"], [88, 3, 1, "id18", "coordinate_grad_semi_dual"], [88, 3, 1, "id20", "loss_dual_entropic"], [88, 3, 1, "id22", "loss_dual_quadratic"], [88, 3, 1, "id24", "plan_dual_entropic"], [88, 3, 1, "id26", "plan_dual_quadratic"], [88, 3, 1, "id28", "sag_entropic_transport"], [88, 3, 1, "id30", "sgd_entropic_regularization"], [88, 3, 1, "id32", "solve_dual_entropic"], [88, 3, 1, "id34", "solve_semi_dual_entropic"]], "ot.unbalanced": [[89, 3, 1, "id0", "barycenter_unbalanced"], [89, 3, 1, "id25", "barycenter_unbalanced_sinkhorn"], [89, 3, 1, "id29", "barycenter_unbalanced_stabilized"], [89, 3, 1, "id33", "lbfgsb_unbalanced"], [89, 3, 1, "id35", "mm_unbalanced"], [89, 3, 1, "id38", "mm_unbalanced2"], [89, 3, 1, "id40", "sinkhorn_knopp_unbalanced"], [89, 3, 1, "id44", "sinkhorn_stabilized_unbalanced"], [89, 3, 1, "id48", "sinkhorn_unbalanced"], [89, 3, 1, "id54", "sinkhorn_unbalanced2"]], "ot.utils": [[90, 1, 1, "id0", "BaseEstimator"], [90, 1, 1, "", "OTResult"], [90, 6, 1, "", "UndefinedParameter"], [90, 3, 1, "id3", "check_params"], [90, 3, 1, "id4", "check_random_state"], [90, 3, 1, "id5", "clean_zeros"], [90, 3, 1, "id6", "cost_normalization"], [90, 1, 1, "id7", "deprecated"], [90, 3, 1, "id8", "dist"], [90, 3, 1, "id9", "dist0"], [90, 3, 1, "id10", "dots"], [90, 3, 1, "id11", "euclidean_distances"], [90, 3, 1, "id12", "get_coordinate_circle"], [90, 3, 1, "id13", "is_all_finite"], [90, 3, 1, "id14", "kernel"], [90, 3, 1, "id15", "label_normalization"], [90, 3, 1, "id16", "laplacian"], [90, 3, 1, "id17", "list_to_array"], [90, 3, 1, "id18", "parmap"], [90, 3, 1, "id19", "proj_simplex"], [90, 3, 1, "id20", "projection_sparse_simplex"], [90, 3, 1, "id21", "tic"], [90, 3, 1, "id22", "toc"], [90, 3, 1, "id23", "toq"], [90, 3, 1, "id24", "unif"]], "ot.utils.BaseEstimator": [[90, 2, 1, "id1", "get_params"], [90, 2, 1, "id2", "set_params"]], "ot.utils.OTResult": [[90, 5, 1, "", "a_to_b"], [90, 5, 1, "", "b_to_a"], [90, 5, 1, "", "citation"], [90, 5, 1, "", "lazy_plan"], [90, 5, 1, "", "marginal_a"], [90, 5, 1, "", "marginal_b"], [90, 5, 1, "", "marginals"], [90, 5, 1, "", "plan"], [90, 5, 1, "", "potential_a"], [90, 5, 1, "", "potential_b"], [90, 5, 1, "", "potentials"], [90, 5, 1, "", "sparse_plan"], [90, 5, 1, "", "status"], [90, 5, 1, "", "value"], [90, 5, 1, "", "value_linear"]], "ot.weak": [[91, 3, 1, "id0", "weak_optimal_transport"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "modul": [0, 93], "main": 0, "ot": [0, 1, 5, 18, 19, 20, 21, 22, 23, 24, 25, 38, 42, 44, 50, 52, 54, 55, 56, 57, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93], "function": [0, 33, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91], "refer": [0, 86, 92, 93], "dual": [1, 5, 48, 50], "solver": [1, 31, 57, 93], "entrop": [1, 5, 11, 29, 40, 57, 66, 93], "quadrat": [1, 93], "regular": [1, 11, 22, 29, 38, 50, 57, 65, 66, 93], "pytorch": [1, 2, 3, 5, 6, 7, 8], "data": [1, 4, 5, 6, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 34, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 55, 56, 57, 59, 60, 62, 63, 65, 66], "gener": [1, 2, 4, 5, 6, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53, 55, 57, 59, 60, 62, 63, 65, 66, 93], "plot": [1, 4, 5, 6, 8, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 40, 41, 42, 44, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 59, 60, 62, 63, 64, 65, 66, 84], "convert": [1, 5], "torch": [1, 5], "tensor": [1, 5], "estim": [1, 2, 5, 6, 23, 24, 25, 35, 45, 93], "variabl": [1, 5, 50], "plan": [1, 5, 33, 40, 50, 64], "optim": [2, 6, 18, 20, 21, 22, 26, 39, 42, 44, 45, 47, 50, 51, 53, 54, 62, 65, 66, 82, 92, 93], "gromov": [2, 29, 30, 31, 32, 33, 34, 35, 36, 38, 64, 80, 93], "wasserstein": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 50, 56, 59, 60, 63, 64, 93], "distanc": [2, 6, 20, 26, 30, 31, 33, 38, 43, 45, 55, 56, 59, 64, 93], "graph": [2, 28, 29, 31, 32, 35, 36], "gw": [2, 30, 33, 93], "w": 2, "r": 2, "t": 2, "weight": [2, 6], "templat": 2, "structur": [2, 30], "commun": 2, "cluster": [2, 29, 31, 35, 36], "uniform": [2, 54, 56], "compress": 2, "slice": [3, 4, 38, 59, 60, 86], "barycent": [3, 7, 10, 11, 12, 13, 14, 15, 16, 28, 34, 38, 43, 63, 93], "gradient": [3, 4], "flow": [3, 7], "anim": [3, 4, 8, 16, 65], "trajectori": [3, 4, 8], "along": [3, 4, 8], "iter": [3, 4, 8], "comput": [3, 9, 10, 12, 13, 14, 16, 17, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 41, 42, 43, 44, 48, 49, 50, 53, 55, 58, 61, 63, 64, 65, 66, 67, 93], "descent": [3, 4], "spheric": [4, 60], "embed": [4, 35], "sphere": 4, "sampl": [4, 5, 8, 18, 20, 21, 22, 23, 24, 26, 33, 45, 54, 64], "continu": [5, 48], "deep": 5, "densiti": 5, "target": [5, 18, 20, 21, 22, 26], "given": 5, "sourc": [5, 6, 18, 20, 21, 22, 26], "unmix": 6, "model": [6, 8, 29, 31, 35, 36], "wrt": 6, "converg": 6, "object": 6, "reweight": 6, "distribut": [6, 14, 15, 20, 25, 33, 43, 45, 47, 51, 52, 53, 59, 60, 62, 63, 64, 93], "1d": [7, 10, 11, 13, 51, 55, 62, 63], "2": [8, 18, 20, 21, 22, 26, 29, 31, 35, 36, 43, 54, 60, 94], "minibatch": 8, "gan": 8, "train": [8, 32], "visual": [8, 12, 13, 29, 30, 31, 34, 35, 36, 45, 50], "time": [9, 17, 27, 37, 49, 50, 58, 61, 67], "demo": [10, 13, 16, 63], "barycentr": [10, 63], "interpol": [10, 15, 63], "exact": [11, 42, 44, 66], "lp": [11, 81], "v": [11, 26, 42], "gaussian": [11, 13, 33, 64, 78], "stair": 11, "dirac": 11, "final": 11, "figur": 11, "convolut": [12, 93], "exampl": [12, 29, 33, 34, 36, 38, 48, 52, 64, 66, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93], "prepar": [12, 34], "debias": 13, "sinkhorn": [13, 15, 21, 48, 50, 51, 53, 55, 62, 93], "2d": [13, 14, 15, 33, 41, 53, 59, 64, 66], "imag": [13, 19, 23, 25], "free": [14, 15, 93], "support": [14, 15, 92, 93], "paramet": [15, 50], "inspect": 15, "empir": [15, 20, 53], "project": [16, 40, 41, 59, 60], "match": [16, 29, 31, 36], "rotat": 16, "domain": [18, 20, 21, 22, 24, 25, 38, 93], "adapt": [18, 19, 20, 21, 22, 23, 24, 25, 38, 93], "instanti": [18, 19, 20, 21, 22, 24], "differ": [18, 19, 20, 22, 24, 26, 54, 55, 56, 59, 60], "transport": [18, 19, 20, 21, 22, 23, 24, 26, 30, 39, 40, 42, 44, 45, 47, 48, 50, 51, 53, 54, 62, 65, 66, 92, 93], "algorithm": [18, 19, 20, 21, 22, 24, 48, 50], "fit": [18, 19, 20, 21, 22, 24], "them": [18, 19, 20, 21, 22, 24, 33, 64], "fig": [18, 20, 21, 22, 26], "1": [18, 20, 21, 22, 26, 35, 54, 94], "coupl": [18, 20, 21, 22, 26, 44], "color": [19, 25], "origin": [19, 25, 43], "scatter": 19, "new": [19, 69, 94], "matrix": [20, 26, 30, 47, 48, 50, 51, 52, 62], "pairwis": [20, 26], "method": [20, 26, 33, 43], "3": [20, 26, 29, 31, 35, 36, 94], "multi": 21, "shift": 21, "all": 21, "jcpot": 21, "run": 21, "oracl": 21, "known": 21, "proport": 21, "laplacian": 22, "linear": [23, 35], "map": [23, 24, 25, 50, 93], "load": 23, "transform": [23, 25], "pixel": 25, "transfer": 25, "valu": 25, "otda": [26, 93], "unsupervis": 26, "semi": [26, 29, 36, 48, 65], "supervis": 26, "set": 26, "onto": 26, "us": [28, 32, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93], "fgw": [28, 30, 93], "relax": [29, 36, 65], "fuse": [29, 30, 31, 32, 35, 36, 38], "two": [29, 31, 33, 36, 64], "follow": [29, 31, 35, 36], "stochast": [29, 31, 33, 35, 36, 48, 88], "block": [29, 31, 35, 36], "diverg": [29, 36], "add": [29, 36], "node": [29, 35, 36], "featur": [29, 30, 35, 36, 94], "creat": 30, "matric": [30, 48, 54], "across": 30, "comparison": 31, "classif": 32, "tempat": 32, "base": 32, "pool": 32, "architectur": 32, "tfgw": 32, "layer": 32, "3d": [33, 64], "kernel": 33, "normal": 33, "displai": 33, "scalabl": 33, "ani": 33, "loss": [33, 47, 50, 51, 52, 55, 62], "smacof": 34, "md": 34, "dictionari": 35, "learn": [35, 45], "dataset": [35, 54, 75], "compos": 35, "from": 35, "atom": 35, "space": 35, "endow": 35, "attribut": [35, 68], "galleri": 38, "pot": [38, 46, 50, 69, 92, 93], "backend": [38, 71, 93], "other": [38, 93], "problem": [38, 48, 50], "unbalanc": [38, 62, 63, 65, 66, 89, 93], "partial": [38, 54, 64, 83, 93], "row": [39, 45], "column": [39, 45], "align": [39, 45], "co": [39, 45], "compon": 40, "analysi": [40, 41, 93], "ewca": [40, 76], "first": [40, 50, 94], "discrimin": [41, 93], "fisher": 41, "weak": [42, 91], "an": [42, 44, 93], "solut": [42, 44], "d": 43, "dimension": 43, "via": 43, "mmot": 43, "minim": 43, "among": 43, "identifi": 43, "compar": [43, 48, 56], "both": 43, "more": 43, "than": 43, "mani": 43, "factor": [44, 77], "margin": 45, "coot": [45, 73], "respect": 45, "logo": 46, "toolbox": [46, 50, 92], "clear": 46, "background": 46, "dark": 46, "screen": 47, "screenkhorn": [47, 72], "solv": [47, 50, 51, 52, 57, 62, 93], "discret": 48, "case": [48, 93], "result": [48, 66], "introduct": 50, "python": [50, 92], "instal": [50, 92], "import": 50, "get": 50, "help": 50, "bakeri": 50, "citi": 50, "cost": 50, "emd": [50, 51, 53, 55, 57, 93], "vari": 50, "smooth": [52, 87], "spars": 52, "between": [53, 56, 93], "ground": 54, "metric": 54, "circl": [54, 56], "euclidean": 56, "von": 56, "mise": 56, "kappa": 56, "frobeniu": 57, "norm": 57, "seed": [59, 60], "number": [59, 60], "": 60, "mass": 62, "one": 64, "path": 65, "l2": [65, 66], "penal": 65, "fulli": 65, "regpath": [65, 85], "uot": [65, 66], "kl": 66, "code": [68, 92], "conduct": [68, 92], "our": 68, "pledg": 68, "standard": 68, "respons": 68, "scope": 68, "enforc": 68, "contribut": [69, 92], "how": [69, 93], "pull": 69, "request": 69, "checklist": 69, "file": 69, "bug": 69, "contributor": [69, 70, 94], "tip": 69, "document": 69, "creator": 70, "maintain": 70, "acknowledg": [70, 92], "perform": 71, "class": [71, 74, 87, 90, 93], "bregman": [72, 93], "barycenter_debias": 72, "convolutional_barycenter2d": [72, 93], "convolutional_barycenter2d_debias": 72, "empirical_sinkhorn": 72, "free_support_sinkhorn_barycent": 72, "depend": [72, 92], "co_optimal_transport": 73, "co_optimal_transport2": 73, "da": 74, "basetransport": 74, "emdlaplacetransport": 74, "emdtransport": 74, "jcpottransport": 74, "lineargwtransport": 74, "lineartransport": 74, "mappingtransport": 74, "sinkhornl1l2transport": 74, "sinkhornlpl1transport": 74, "sinkhorntransport": 74, "make_1d_gauss": 75, "make_2d_samples_gauss": 75, "make_data_classif": 75, "dr": 76, "fda": 76, "wda": [76, 93], "empirical_bures_wasserstein_map": 78, "empirical_gaussian_gromov_wasserstein_map": 78, "gnn": 79, "free_support_barycent": 81, "generalized_free_support_barycent": 81, "cg": 82, "gcg": 82, "entropic_partial_gromov_wasserstein": 83, "entropic_partial_wasserstein": 83, "partial_gromov_wasserstein": 83, "partial_wasserstein": 83, "plot1d_mat": 84, "plot2d_samples_mat": 84, "compute_transport_plan": 85, "regularization_path": 85, "smooth_ot_du": 87, "loss_dual_entrop": 88, "loss_dual_quadrat": 88, "plan_dual_entrop": 88, "plan_dual_quadrat": 88, "solve_dual_entrop": 88, "solve_semi_dual_entrop": 88, "mm_unbalanc": 89, "util": 90, "dist0": 90, "proj_simplex": 90, "baseestim": 90, "except": 90, "content": 92, "cite": 92, "pip": 92, "anaconda": 92, "conda": 92, "forg": 92, "post": 92, "check": 92, "short": 92, "notebook": 92, "indic": 92, "tabl": 92, "quick": 93, "start": 93, "guid": 93, "why": 93, "when": 93, "emd2": 93, "special": 93, "sinkhorn2": 93, "group": 93, "lasso": 93, "fix": 93, "mong": 93, "extens": 93, "g": 93, "applic": 93, "multipl": 93, "cpu": 93, "gpu": 93, "work": 93, "acceler": 93, "list": 93, "compat": 93, "faq": 93, "releas": 94, "0": 94, "9": 94, "2dev": 94, "close": 94, "issu": 94, "8": 94, "7": 94, "6": 94, "5": 94, "deprec": 94, "4": 94, "v0": 94, "11": 94, "10": 94, "pre": 94}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API and modules": [[0, "api-and-modules"]], "Main ot functions": [[0, "module-ot"]], "References:": [[0, "references"], [86, "references"], [86, "id12"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[1, "dual-ot-solvers-for-entropic-and-quadratic-regularized-ot-with-pytorch"]], "Data generation": [[1, "data-generation"], [4, "data-generation"], [5, "data-generation"], [8, "data-generation"]], "Plot data": [[1, "plot-data"], [4, "plot-data"], [5, "plot-data"], [6, "plot-data"], [8, "plot-data"], [23, "plot-data"], [24, "plot-data"], [28, "plot-data"], [30, "plot-data"], [32, "plot-data"], [40, "plot-data"], [41, "plot-data"], [53, "plot-data"], [55, "plot-data"], [56, "plot-data"], [59, "plot-data"], [60, "plot-data"], [63, "plot-data"], [65, "plot-data"]], "Convert data to torch tensors": [[1, "convert-data-to-torch-tensors"], [5, "convert-data-to-torch-tensors"]], "Estimating dual variables for entropic OT": [[1, "estimating-dual-variables-for-entropic-ot"]], "Plot the estimated entropic OT plan": [[1, "plot-the-estimated-entropic-ot-plan"]], "Estimating dual variables for quadratic OT": [[1, "estimating-dual-variables-for-quadratic-ot"]], "Plot the estimated quadratic OT plan": [[1, "plot-the-estimated-quadratic-ot-plan"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[2, "optimizing-the-gromov-wasserstein-distance-with-pytorch"]], "Graph generation": [[2, "graph-generation"]], "Optimizing GW w.r.t. the weights on a template structure": [[2, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Community clustering with uniform and estimated weights": [[2, "community-clustering-with-uniform-and-estimated-weights"]], "Graph compression with GW": [[2, "graph-compression-with-gw"]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[3, "sliced-wasserstein-barycenter-and-gradient-flow-with-pytorch"]], "Sliced Wasserstein gradient flow with Pytorch": [[3, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Animate trajectories of the gradient flow along iteration": [[3, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Compute the Sliced Wasserstein Barycenter": [[3, "compute-the-sliced-wasserstein-barycenter"]], "Animate trajectories of the barycenter along gradient descent": [[3, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[4, "spherical-sliced-wasserstein-embedding-on-sphere"]], "Gradient descent": [[4, "gradient-descent"]], "Plot trajectories of generated samples along iterations": [[4, "plot-trajectories-of-generated-samples-along-iterations"], [8, "plot-trajectories-of-generated-samples-along-iterations"]], "Animate trajectories of generated samples along iteration": [[4, "animate-trajectories-of-generated-samples-along-iteration"], [8, "animate-trajectories-of-generated-samples-along-iteration"]], "Continuous OT plan estimation with Pytorch": [[5, "continuous-ot-plan-estimation-with-pytorch"]], "Estimating deep dual variables for entropic OT": [[5, "estimating-deep-dual-variables-for-entropic-ot"]], "Plot the density on target for a given source sample": [[5, "plot-the-density-on-target-for-a-given-source-sample"]], "Wasserstein unmixing with PyTorch": [[6, "wasserstein-unmixing-with-pytorch"]], "Generate data": [[6, "generate-data"], [10, "generate-data"], [14, "generate-data"], [18, "generate-data"], [19, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [28, "generate-data"], [30, "generate-data"], [32, "generate-data"], [40, "generate-data"], [41, "generate-data"], [45, "generate-data"], [47, "generate-data"], [51, "generate-data"], [52, "generate-data"], [53, "generate-data"], [55, "generate-data"], [57, "generate-data"], [59, "generate-data"], [60, "generate-data"], [62, "generate-data"], [63, "generate-data"], [65, "generate-data"], [66, "generate-data"]], "Optimization of the model wrt the Wasserstein distance": [[6, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Estimated weights and convergence of the objective": [[6, "estimated-weights-and-convergence-of-the-objective"]], "Plotting the reweighted source distribution": [[6, "plotting-the-reweighted-source-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[7, "wasserstein-1d-flow-and-barycenter-with-pytorch"]], "Wasserstein barycenter": [[7, "wasserstein-barycenter"]], "Wasserstein 2 Minibatch GAN with PyTorch": [[8, "wasserstein-2-minibatch-gan-with-pytorch"]], "Generator Model": [[8, "generator-model"]], "Training the model": [[8, "training-the-model"]], "Generate and visualize data": [[8, "generate-and-visualize-data"]], "Computation times": [[9, "computation-times"], [17, "computation-times"], [27, "computation-times"], [37, "computation-times"], [49, "computation-times"], [58, "computation-times"], [61, "computation-times"], [67, "computation-times"]], "1D Wasserstein barycenter demo": [[10, "d-wasserstein-barycenter-demo"]], "Barycenter computation": [[10, "barycenter-computation"], [28, "barycenter-computation"], [34, "barycenter-computation"], [63, "barycenter-computation"]], "Barycentric interpolation": [[10, "barycentric-interpolation"], [63, "barycentric-interpolation"]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[11, "d-wasserstein-barycenter-exact-lp-vs-entropic-regularization"]], "Gaussian Data": [[11, "gaussian-data"]], "Stair Data": [[11, "stair-data"]], "Dirac Data": [[11, "dirac-data"]], "Final figure": [[11, "final-figure"]], "Convolutional Wasserstein Barycenter example": [[12, "convolutional-wasserstein-barycenter-example"]], "Data preparation": [[12, "data-preparation"], [34, "data-preparation"]], "Barycenter computation and visualization": [[12, "barycenter-computation-and-visualization"], [13, "barycenter-computation-and-visualization"]], "Debiased Sinkhorn barycenter demo": [[13, "debiased-sinkhorn-barycenter-demo"]], "Debiased barycenter of 1D Gaussians": [[13, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[13, "debiased-barycenter-of-2d-images"]], "2D free support Wasserstein barycenters of distributions": [[14, "d-free-support-wasserstein-barycenters-of-distributions"]], "Compute free support Wasserstein barycenter": [[14, "compute-free-support-wasserstein-barycenter"]], "Plot the Wasserstein barycenter": [[14, "plot-the-wasserstein-barycenter"], [14, "id1"]], "2D free support Sinkhorn barycenters of distributions": [[15, "d-free-support-sinkhorn-barycenters-of-distributions"]], "General Parameters": [[15, "general-parameters"]], "Generate Data": [[15, "generate-data"]], "Inspect generated distributions": [[15, "inspect-generated-distributions"]], "Interpolating Empirical Distributions": [[15, "interpolating-empirical-distributions"]], "Generalized Wasserstein Barycenter Demo": [[16, "generalized-wasserstein-barycenter-demo"]], "Generate and plot data": [[16, "generate-and-plot-data"]], "Barycenter computation and plot": [[16, "barycenter-computation-and-plot"]], "Plotting projection matches": [[16, "plotting-projection-matches"]], "Rotation animation": [[16, "rotation-animation"]], "OT for domain adaptation": [[18, "ot-for-domain-adaptation"]], "Instantiate the different transport algorithms and fit them": [[18, "instantiate-the-different-transport-algorithms-and-fit-them"], [19, "instantiate-the-different-transport-algorithms-and-fit-them"], [20, "instantiate-the-different-transport-algorithms-and-fit-them"], [22, "instantiate-the-different-transport-algorithms-and-fit-them"], [24, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Fig 1 : plots source and target samples": [[18, "fig-1-plots-source-and-target-samples"], [21, "fig-1-plots-source-and-target-samples"], [22, "fig-1-plots-source-and-target-samples"]], "Fig 2 : plot optimal couplings and transported samples": [[18, "fig-2-plot-optimal-couplings-and-transported-samples"], [21, "fig-2-plot-optimal-couplings-and-transported-samples"], [22, "fig-2-plot-optimal-couplings-and-transported-samples"]], "OT for image color adaptation": [[19, "ot-for-image-color-adaptation"]], "Plot original image": [[19, "plot-original-image"]], "Scatter plot of colors": [[19, "scatter-plot-of-colors"]], "Plot new images": [[19, "plot-new-images"]], "OT for domain adaptation on empirical distributions": [[20, "ot-for-domain-adaptation-on-empirical-distributions"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[20, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [26, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plots optimal couplings for the different methods": [[20, "fig-2-plots-optimal-couplings-for-the-different-methods"], [26, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[20, "fig-3-plot-transported-samples"], [26, "fig-3-plot-transported-samples"]], "OT for multi-source target shift": [[21, "ot-for-multi-source-target-shift"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[21, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate JCPOT adaptation algorithm and fit it": [[21, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Run oracle transport algorithm with known proportions": [[21, "run-oracle-transport-algorithm-with-known-proportions"]], "OT with Laplacian regularization for domain adaptation": [[22, "ot-with-laplacian-regularization-for-domain-adaptation"]], "Linear OT mapping estimation": [[23, "linear-ot-mapping-estimation"]], "Estimate linear mapping and transport": [[23, "estimate-linear-mapping-and-transport"]], "Plot transported samples": [[23, "plot-transported-samples"], [24, "plot-transported-samples"]], "Load image data": [[23, "load-image-data"]], "Estimate mapping and adapt": [[23, "estimate-mapping-and-adapt"]], "Plot transformed images": [[23, "plot-transformed-images"], [25, "plot-transformed-images"]], "OT mapping estimation for domain adaptation": [[24, "ot-mapping-estimation-for-domain-adaptation"]], "OT for image color adaptation with mapping estimation": [[25, "ot-for-image-color-adaptation-with-mapping-estimation"]], "Domain adaptation for pixel distribution transfer": [[25, "domain-adaptation-for-pixel-distribution-transfer"]], "Plot original images": [[25, "plot-original-images"]], "Plot pixel values distribution": [[25, "plot-pixel-values-distribution"]], "OTDA unsupervised vs semi-supervised setting": [[26, "otda-unsupervised-vs-semi-supervised-setting"]], "Transport source samples onto target samples": [[26, "transport-source-samples-onto-target-samples"]], "Plot graphs barycenter using FGW": [[28, "plot-graphs-barycenter-using-fgw"]], "Plot Barycenter": [[28, "plot-barycenter"]], "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example": [[29, "entropic-regularized-semi-relaxed-fused-gromov-wasserstein-example"]], "Generate two graphs following Stochastic Block models of 2 and 3 clusters.": [[29, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [31, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [36, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"]], "Compute their entropic-regularized semi-relaxed Gromov-Wasserstein divergences": [[29, "compute-their-entropic-regularized-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the entropic-regularized semi-relaxed Gromov-Wasserstein matchings": [[29, "visualization-of-the-entropic-regularized-semi-relaxed-gromov-wasserstein-matchings"]], "Add node features": [[29, "add-node-features"], [36, "add-node-features"]], "Compute their semi-relaxed Fused Gromov-Wasserstein divergences": [[29, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"], [36, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"]], "Visualization of the entropic semi-relaxed Fused Gromov-Wasserstein matchings": [[29, "visualization-of-the-entropic-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Plot Fused-Gromov-Wasserstein": [[30, "plot-fused-gromov-wasserstein"]], "Create structure matrices and across-feature distance matrix": [[30, "create-structure-matrices-and-across-feature-distance-matrix"]], "Plot matrices": [[30, "plot-matrices"]], "Compute FGW/GW": [[30, "compute-fgw-gw"]], "Visualize transport matrices": [[30, "visualize-transport-matrices"]], "Comparison of Fused Gromov-Wasserstein solvers": [[31, "comparison-of-fused-gromov-wasserstein-solvers"]], "Compute their Fused Gromov-Wasserstein distances": [[31, "compute-their-fused-gromov-wasserstein-distances"]], "Visualization of the Fused Gromov-Wasserstein matchings": [[31, "visualization-of-the-fused-gromov-wasserstein-matchings"]], "Graph classification with Tempate Based Fused Gromov Wasserstein": [[32, "graph-classification-with-tempate-based-fused-gromov-wasserstein"]], "Pooling architecture using the TFGW layer": [[32, "pooling-architecture-using-the-tfgw-layer"]], "Graph classification training": [[32, "graph-classification-training"]], "Gromov-Wasserstein example": [[33, "gromov-wasserstein-example"]], "Sample two Gaussian distributions (2D and 3D)": [[33, "sample-two-gaussian-distributions-2d-and-3d"]], "Plotting the distributions": [[33, "plotting-the-distributions"]], "Compute distance kernels, normalize them and then display": [[33, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute Gromov-Wasserstein plans and distance": [[33, "compute-gromov-wasserstein-plans-and-distance"]], "Compute GW with scalable stochastic methods with any loss function": [[33, "compute-gw-with-scalable-stochastic-methods-with-any-loss-function"]], "Gromov-Wasserstein Barycenter example": [[34, "gromov-wasserstein-barycenter-example"]], "Smacof MDS": [[34, "smacof-mds"]], "Visualization": [[34, "visualization"]], "(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[35, "fused-gromov-wasserstein-linear-dictionary-learning"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[35, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Estimate the Gromov-Wasserstein dictionary from the dataset": [[35, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Visualization of the estimated dictionary atoms": [[35, "visualization-of-the-estimated-dictionary-atoms"], [35, "id1"]], "Visualization of the embedding space": [[35, "visualization-of-the-embedding-space"], [35, "id2"]], "Endow the dataset with node features": [[35, "endow-the-dataset-with-node-features"]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[35, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Semi-relaxed (Fused) Gromov-Wasserstein example": [[36, "semi-relaxed-fused-gromov-wasserstein-example"]], "Compute their semi-relaxed Gromov-Wasserstein divergences": [[36, "compute-their-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the semi-relaxed Gromov-Wasserstein matchings": [[36, "visualization-of-the-semi-relaxed-gromov-wasserstein-matchings"]], "Visualization of the semi-relaxed Fused Gromov-Wasserstein matchings": [[36, "visualization-of-the-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Examples gallery": [[38, "examples-gallery"]], "OT and regularized OT": [[38, "ot-and-regularized-ot"]], "POT backend examples": [[38, "pot-backend-examples"]], "Wasserstein barycenters": [[38, "wasserstein-barycenters"]], "Domain adaptation examples": [[38, "domain-adaptation-examples"]], "Gromov and Fused-Gromov-Wasserstein": [[38, "gromov-and-fused-gromov-wasserstein"]], "Other OT problems": [[38, "other-ot-problems"]], "Sliced Wasserstein Distance": [[38, "sliced-wasserstein-distance"]], "Unbalanced and Partial OT": [[38, "unbalanced-and-partial-ot"]], "Row and column alignments with CO-Optimal Transport": [[39, "row-and-column-alignments-with-co-optimal-transport"]], "Entropic Wasserstein Component Analysis": [[40, "entropic-wasserstein-component-analysis"]], "Compute EWCA": [[40, "compute-ewca"]], "Plot data, first component, and projected data": [[40, "plot-data-first-component-and-projected-data"]], "Plot transport plan": [[40, "plot-transport-plan"]], "Wasserstein Discriminant Analysis": [[41, "wasserstein-discriminant-analysis"], [93, "wasserstein-discriminant-analysis"]], "Compute Fisher Discriminant Analysis": [[41, "compute-fisher-discriminant-analysis"]], "Compute Wasserstein Discriminant Analysis": [[41, "compute-wasserstein-discriminant-analysis"]], "Plot 2D projections": [[41, "plot-2d-projections"]], "Weak Optimal Transport VS exact Optimal Transport": [[42, "weak-optimal-transport-vs-exact-optimal-transport"]], "Generate data an plot it": [[42, "generate-data-an-plot-it"], [44, "generate-data-an-plot-it"]], "Compute Weak OT and exact OT solutions": [[42, "compute-weak-ot-and-exact-ot-solutions"]], "Plot weak OT and exact OT solutions": [[42, "plot-weak-ot-and-exact-ot-solutions"]], "Computing d-dimensional Barycenters via d-MMOT": [[43, "computing-d-dimensional-barycenters-via-d-mmot"]], "Generating 2 distributions": [[43, "generating-2-distributions"]], "Minimize the distances among distributions, identify the Barycenter": [[43, "minimize-the-distances-among-distributions-identify-the-barycenter"]], "Compare Barycenters in both methods": [[43, "compare-barycenters-in-both-methods"], [43, "id1"]], "More than 2 distributions": [[43, "more-than-2-distributions"]], "Minimizing Distances Among Many Distributions": [[43, "minimizing-distances-among-many-distributions"]], "Compare with original distributions": [[43, "compare-with-original-distributions"]], "Optimal transport with factored couplings": [[44, "optimal-transport-with-factored-couplings"]], "Compute Factored OT and exact OT solutions": [[44, "compute-factored-ot-and-exact-ot-solutions"]], "Plot factored OT and exact OT solutions": [[44, "plot-factored-ot-and-exact-ot-solutions"]], "Learning sample marginal distribution with CO-Optimal Transport": [[45, "learning-sample-marginal-distribution-with-co-optimal-transport"]], "Optimize the COOT distance with respect to the sample marginal distribution": [[45, "optimize-the-coot-distance-with-respect-to-the-sample-marginal-distribution"]], "Visualizing the row and column alignments with the estimated sample marginal distribution": [[45, "visualizing-the-row-and-column-alignments-with-the-estimated-sample-marginal-distribution"]], "Logo of the POT toolbox": [[46, "logo-of-the-pot-toolbox"]], "Data for logo": [[46, "data-for-logo"]], "Plot the logo (clear background)": [[46, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[46, "plot-the-logo-dark-background"]], "Screened optimal transport (Screenkhorn)": [[47, "screened-optimal-transport-screenkhorn"]], "Plot distributions and loss matrix": [[47, "plot-distributions-and-loss-matrix"], [51, "plot-distributions-and-loss-matrix"], [52, "plot-distributions-and-loss-matrix"], [62, "plot-distributions-and-loss-matrix"]], "Solve Screenkhorn": [[47, "solve-screenkhorn"]], "Stochastic examples": [[48, "stochastic-examples"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[48, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Discrete case": [[48, "discrete-case"]], "Semi-Continuous Case": [[48, "semi-continuous-case"]], "Plot Transportation Matrices": [[48, "plot-transportation-matrices"], [48, "id2"]], "Compute the Transportation Matrix for the Dual Problem": [[48, "compute-the-transportation-matrix-for-the-dual-problem"]], "Semi-continuous case": [[48, "id1"]], "Compare the results with the Sinkhorn algorithm": [[48, "compare-the-results-with-the-sinkhorn-algorithm"]], "Introduction to Optimal Transport with Python": [[50, "introduction-to-optimal-transport-with-python"]], "POT Python Optimal Transport Toolbox": [[50, "pot-python-optimal-transport-toolbox"]], "POT installation": [[50, "pot-installation"]], "Import the toolbox": [[50, "import-the-toolbox"]], "Getting help": [[50, "getting-help"]], "First OT Problem": [[50, "first-ot-problem"]], "Plotting bakeries in the city": [[50, "plotting-bakeries-in-the-city"]], "Cost matrix": [[50, "cost-matrix"]], "Solving the OT problem with ot.emd": [[50, "solving-the-ot-problem-with-ot-emd"]], "Transportation plan visualization": [[50, "transportation-plan-visualization"]], "OT loss and dual variables": [[50, "ot-loss-and-dual-variables"]], "Regularized OT with Sinkhorn": [[50, "regularized-ot-with-sinkhorn"]], "Algorithm": [[50, "algorithm"]], "Plot the matrix and the map": [[50, "plot-the-matrix-and-the-map"]], "Varying the regularization parameter in Sinkhorn": [[50, "varying-the-regularization-parameter-in-sinkhorn"]], "Wasserstein loss and computational time": [[50, "wasserstein-loss-and-computational-time"]], "Optimal Transport for 1D distributions": [[51, "optimal-transport-for-1d-distributions"]], "Solve EMD": [[51, "solve-emd"], [57, "solve-emd"]], "Solve Sinkhorn": [[51, "solve-sinkhorn"]], "Smooth and sparse OT example": [[52, "smooth-and-sparse-ot-example"]], "Solve Smooth OT": [[52, "solve-smooth-ot"]], "Optimal Transport between 2D empirical distributions": [[53, "optimal-transport-between-2d-empirical-distributions"]], "Compute EMD": [[53, "compute-emd"]], "Compute Sinkhorn": [[53, "compute-sinkhorn"]], "Empirical Sinkhorn": [[53, "empirical-sinkhorn"]], "Optimal Transport with different ground metrics": [[54, "optimal-transport-with-different-ground-metrics"]], "Dataset 1 : uniform sampling": [[54, "dataset-1-uniform-sampling"]], "Dataset 1 : Plot OT Matrices": [[54, "dataset-1-plot-ot-matrices"]], "Dataset 2 : Partial circle": [[54, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[54, "dataset-2-plot-ot-matrices"]], "OT distances in 1D": [[55, "ot-distances-in-1d"]], "Compute EMD for the different losses": [[55, "compute-emd-for-the-different-losses"]], "Compute Sinkhorn for the different losses": [[55, "compute-sinkhorn-for-the-different-losses"]], "OT distance on the Circle": [[56, "ot-distance-on-the-circle"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[56, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Wasserstein distance between von Mises and uniform for different kappa": [[56, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Regularized OT with generic solver": [[57, "regularized-ot-with-generic-solver"]], "Solve EMD with Frobenius norm regularization": [[57, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[57, "solve-emd-with-entropic-regularization"]], "Solve EMD with Frobenius norm + entropic regularization": [[57, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Sliced Wasserstein Distance on 2D distributions": [[59, "sliced-wasserstein-distance-on-2d-distributions"]], "Sliced Wasserstein distance for different seeds and number of projections": [[59, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Plot Sliced Wasserstein Distance": [[59, "plot-sliced-wasserstein-distance"]], "Spherical Sliced Wasserstein on distributions in S^2": [[60, "spherical-sliced-wasserstein-on-distributions-in-s-2"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[60, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Plot Spherical Sliced Wasserstein": [[60, "plot-spherical-sliced-wasserstein"]], "1D Unbalanced optimal transport": [[62, "d-unbalanced-optimal-transport"]], "Solve Unbalanced Sinkhorn": [[62, "solve-unbalanced-sinkhorn"]], "plot the transported mass": [[62, "plot-the-transported-mass"]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[63, "d-wasserstein-barycenter-demo-for-unbalanced-distributions"]], "Partial Wasserstein and Gromov-Wasserstein example": [[64, "partial-wasserstein-and-gromov-wasserstein-example"]], "Sample two 2D Gaussian distributions and plot them": [[64, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Compute partial Wasserstein plans and distance": [[64, "compute-partial-wasserstein-plans-and-distance"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[64, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Compute partial Gromov-Wasserstein plans and distance": [[64, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Regularization path of l2-penalized unbalanced optimal transport": [[65, "regularization-path-of-l2-penalized-unbalanced-optimal-transport"]], "Compute semi-relaxed and fully relaxed regularization paths": [[65, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Plot the regularization path": [[65, "plot-the-regularization-path"]], "Animation of the regpath for UOT l2": [[65, "animation-of-the-regpath-for-uot-l2"]], "Plot the semi-relaxed regularization path": [[65, "plot-the-semi-relaxed-regularization-path"]], "Animation of the regpath for semi-relaxed UOT l2": [[65, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "2D examples of exact and entropic unbalanced optimal transport": [[66, "d-examples-of-exact-and-entropic-unbalanced-optimal-transport"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[66, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Plot the results": [[66, "plot-the-results"]], "Code of conduct": [[68, "code-of-conduct"]], "Our Pledge": [[68, "our-pledge"]], "Our Standards": [[68, "our-standards"]], "Our Responsibilities": [[68, "our-responsibilities"]], "Scope": [[68, "scope"]], "Enforcement": [[68, "enforcement"]], "Attribution": [[68, "attribution"]], "Contributing to POT": [[69, "contributing-to-pot"]], "How to contribute": [[69, "how-to-contribute"]], "Pull Request Checklist": [[69, "pull-request-checklist"]], "Filing bugs": [[69, "filing-bugs"]], "New contributor tips": [[69, "new-contributor-tips"]], "Documentation": [[69, "documentation"]], "Contributors": [[70, "contributors"], [70, "contributors"]], "Creators and Maintainers": [[70, "creators-and-maintainers"]], "Acknowledgments": [[70, "acknowledgments"]], "ot.backend": [[71, "module-ot.backend"]], "Performance": [[71, "performance"]], "Functions": [[71, "functions"], [72, "functions"], [73, "functions"], [74, "functions"], [75, "functions"], [76, "functions"], [77, "functions"], [78, "functions"], [81, "functions"], [82, "functions"], [83, "functions"], [84, "functions"], [85, "functions"], [86, "functions"], [87, "functions"], [88, "functions"], [89, "functions"], [90, "functions"], [91, "functions"]], "Classes": [[71, "classes"], [74, "classes"], [87, "classes"], [90, "classes"]], "ot.bregman": [[72, "module-ot.bregman"]], "Examples using ot.bregman.barycenter_debiased": [[72, "examples-using-ot-bregman-barycenter-debiased"]], "Examples using ot.bregman.convolutional_barycenter2d": [[72, "examples-using-ot-bregman-convolutional-barycenter2d"]], "Examples using ot.bregman.convolutional_barycenter2d_debiased": [[72, "examples-using-ot-bregman-convolutional-barycenter2d-debiased"]], "Examples using ot.bregman.empirical_sinkhorn": [[72, "examples-using-ot-bregman-empirical-sinkhorn"]], "Examples using ot.bregman.free_support_sinkhorn_barycenter": [[72, "examples-using-ot-bregman-free-support-sinkhorn-barycenter"]], "Dependency": [[72, null], [72, null]], "Examples using ot.bregman.screenkhorn": [[72, "examples-using-ot-bregman-screenkhorn"]], "ot.coot": [[73, "module-ot.coot"]], "Examples using ot.coot.co_optimal_transport": [[73, "examples-using-ot-coot-co-optimal-transport"]], "Examples using ot.coot.co_optimal_transport2": [[73, "examples-using-ot-coot-co-optimal-transport2"]], "ot.da": [[74, "module-ot.da"]], "Examples using ot.da.BaseTransport": [[74, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[74, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[74, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[74, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearGWTransport": [[74, "examples-using-ot-da-lineargwtransport"]], "Examples using ot.da.LinearTransport": [[74, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[74, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[74, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[74, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[74, "examples-using-ot-da-sinkhorntransport"]], "ot.datasets": [[75, "module-ot.datasets"]], "Examples using ot.datasets.make_1D_gauss": [[75, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[75, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[75, "examples-using-ot-datasets-make-data-classif"]], "ot.dr": [[76, "module-ot.dr"]], "Examples using ot.dr.ewca": [[76, "examples-using-ot-dr-ewca"]], "Examples using ot.dr.fda": [[76, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[76, "examples-using-ot-dr-wda"]], "ot.factored": [[77, "module-ot.factored"]], "ot.gaussian": [[78, "module-ot.gaussian"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[78, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "Examples using ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping": [[78, "examples-using-ot-gaussian-empirical-gaussian-gromov-wasserstein-mapping"]], "ot.gnn": [[79, "module-ot.gnn"]], "ot.gromov": [[80, "module-ot.gromov"]], "ot.lp": [[81, "module-ot.lp"]], "Examples using ot.lp.free_support_barycenter": [[81, "examples-using-ot-lp-free-support-barycenter"]], "Examples using ot.lp.generalized_free_support_barycenter": [[81, "examples-using-ot-lp-generalized-free-support-barycenter"]], "ot.optim": [[82, "module-ot.optim"]], "Examples using ot.optim.cg": [[82, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[82, "examples-using-ot-optim-gcg"]], "ot.partial": [[83, "module-ot.partial"]], "Examples using ot.partial.entropic_partial_gromov_wasserstein": [[83, "examples-using-ot-partial-entropic-partial-gromov-wasserstein"]], "Examples using ot.partial.entropic_partial_wasserstein": [[83, "examples-using-ot-partial-entropic-partial-wasserstein"]], "Examples using ot.partial.partial_gromov_wasserstein": [[83, "examples-using-ot-partial-partial-gromov-wasserstein"]], "Examples using ot.partial.partial_wasserstein": [[83, "examples-using-ot-partial-partial-wasserstein"]], "ot.plot": [[84, "module-ot.plot"]], "Examples using ot.plot.plot1D_mat": [[84, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[84, "examples-using-ot-plot-plot2d-samples-mat"]], "ot.regpath": [[85, "module-ot.regpath"]], "Examples using ot.regpath.compute_transport_plan": [[85, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[85, "examples-using-ot-regpath-regularization-path"]], "ot.sliced": [[86, "module-ot.sliced"]], "ot.smooth": [[87, "module-ot.smooth"]], "Examples using ot.smooth.smooth_ot_dual": [[87, "examples-using-ot-smooth-smooth-ot-dual"]], "ot.stochastic": [[88, "module-ot.stochastic"]], "Examples using ot.stochastic.loss_dual_entropic": [[88, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[88, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[88, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[88, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[88, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[88, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "ot.unbalanced": [[89, "module-ot.unbalanced"]], "Examples using ot.unbalanced.mm_unbalanced": [[89, "examples-using-ot-unbalanced-mm-unbalanced"]], "ot.utils": [[90, "module-ot.utils"]], "Examples using ot.utils.dist0": [[90, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_simplex": [[90, "examples-using-ot-utils-proj-simplex"]], "Examples using ot.utils.BaseEstimator": [[90, "examples-using-ot-utils-baseestimator"]], "Exceptions": [[90, "exceptions"]], "ot.weak": [[91, "module-ot.weak"]], "POT: Python Optimal Transport": [[92, "pot-python-optimal-transport"], [92, "pot-python-optimal-transport"]], "Contents": [[92, "contents"]], "Using and citing the toolbox": [[92, "using-and-citing-the-toolbox"]], "Installation": [[92, "installation"]], "Pip installation": [[92, "pip-installation"]], "Anaconda installation with conda-forge": [[92, "anaconda-installation-with-conda-forge"]], "Post installation check": [[92, "post-installation-check"]], "Dependencies": [[92, "dependencies"]], "Examples": [[92, "examples"]], "Short examples": [[92, "short-examples"]], "Examples and Notebooks": [[92, "examples-and-notebooks"]], "Acknowledgements": [[92, "acknowledgements"]], "Contributions and code of conduct": [[92, "contributions-and-code-of-conduct"]], "Support": [[92, "support"]], "References": [[92, "references"], [93, "references"]], "Indices and tables": [[92, "indices-and-tables"]], "Quick start guide": [[93, "quick-start-guide"]], "Why Optimal Transport ?": [[93, "why-optimal-transport"]], "When to use OT": [[93, "when-to-use-ot"]], "Wasserstein distance between distributions": [[93, "wasserstein-distance-between-distributions"]], "OT for mapping estimation": [[93, "ot-for-mapping-estimation"]], "When to use POT": [[93, "when-to-use-pot"]], "When not to use POT": [[93, "when-not-to-use-pot"]], "Optimal transport and Wasserstein distance": [[93, "optimal-transport-and-wasserstein-distance"]], "Solving optimal transport": [[93, "solving-optimal-transport"]], "Examples of use for ot.emd": [[93, "examples-of-use-for-ot-emd"]], "Computing Wasserstein distance": [[93, "computing-wasserstein-distance"]], "Examples of use for ot.emd2": [[93, "examples-of-use-for-ot-emd2"]], "Special cases": [[93, "special-cases"]], "Regularized Optimal Transport": [[93, "regularized-optimal-transport"]], "Entropic regularized OT": [[93, "entropic-regularized-ot"]], "Examples of use for ot.sinkhorn": [[93, "examples-of-use-for-ot-sinkhorn"]], "Examples of use for ot.sinkhorn2": [[93, "examples-of-use-for-ot-sinkhorn2"]], "Other regularizations": [[93, "other-regularizations"]], "Quadratic regularization": [[93, "quadratic-regularization"]], "Examples of use of quadratic regularization": [[93, "examples-of-use-of-quadratic-regularization"]], "Group Lasso regularization": [[93, "group-lasso-regularization"]], "Examples of group Lasso regularization": [[93, "examples-of-group-lasso-regularization"]], "Generic solvers": [[93, "generic-solvers"]], "Examples of the generic solvers": [[93, "examples-of-the-generic-solvers"]], "Wasserstein Barycenters": [[93, "wasserstein-barycenters"]], "Barycenters with fixed support": [[93, "barycenters-with-fixed-support"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[93, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[93, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Barycenters with free support": [[93, "barycenters-with-free-support"]], "Examples of free support barycenter estimation": [[93, "examples-of-free-support-barycenter-estimation"]], "Monge mapping and Domain adaptation": [[93, "monge-mapping-and-domain-adaptation"]], "Monge Mapping estimation": [[93, "monge-mapping-estimation"]], "Domain adaptation classes": [[93, "domain-adaptation-classes"]], "Examples of the use of OTDA classes": [[93, "examples-of-the-use-of-otda-classes"]], "Unbalanced and partial OT": [[93, "unbalanced-and-partial-ot"]], "Unbalanced optimal transport": [[93, "unbalanced-optimal-transport"]], "Examples of Unbalanced OT": [[93, "examples-of-unbalanced-ot"]], "Unbalanced Barycenters": [[93, "unbalanced-barycenters"]], "Examples of Unbalanced OT barycenters": [[93, "examples-of-unbalanced-ot-barycenters"]], "Partial optimal transport": [[93, "partial-optimal-transport"]], "Examples of Partial OT": [[93, "examples-of-partial-ot"]], "Gromov Wasserstein and extensions": [[93, "gromov-wasserstein-and-extensions"]], "Gromov Wasserstein(GW)": [[93, "gromov-wasserstein-gw"]], "Examples of computation of GW, regularized G and FGW": [[93, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Gromov Wasserstein barycenters": [[93, "gromov-wasserstein-barycenters"]], "Examples of GW, regularized G and FGW barycenters": [[93, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Other applications": [[93, "other-applications"]], "Examples of the use of WDA": [[93, "examples-of-the-use-of-wda"]], "Solving OT with Multiple backends on CPU/GPU": [[93, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "How it works": [[93, "how-it-works"]], "GPU acceleration": [[93, "gpu-acceleration"]], "List of compatible Backends": [[93, "list-of-compatible-backends"]], "List of compatible modules": [[93, "list-of-compatible-modules"]], "FAQ": [[93, "faq"]], "Releases": [[94, "releases"]], "0.9.2dev": [[94, "dev"]], "New features": [[94, "new-features"], [94, "id2"], [94, "id5"], [94, "id8"], [94, "id13"], [94, "id16"]], "Closed issues": [[94, "closed-issues"], [94, "id3"], [94, "id6"], [94, "id9"], [94, "id11"], [94, "id14"], [94, "id17"], [94, "id19"], [94, "id22"], [94, "id25"], [94, "id28"]], "0.9.1": [[94, "id1"]], "New Contributors": [[94, "new-contributors"]], "0.9.0": [[94, "id4"]], "0.8.2": [[94, "id7"]], "0.8.1.0": [[94, "id10"]], "0.8.1": [[94, "id12"]], "0.8.0": [[94, "id15"]], "0.7.0": [[94, "id18"]], "Features": [[94, "features"], [94, "id21"], [94, "id24"], [94, "id27"]], "0.6.0": [[94, "id20"]], "0.5.0": [[94, "id23"]], "Deprecation": [[94, "deprecation"]], "0.4": [[94, "id26"]], "0.3.1": [[94, "id29"]], "0.3": [[94, "id30"]], "V0.2": [[94, "v0-2"]], "0.1.11": [[94, "id31"]], "0.1.10": [[94, "id32"]], "0.1.9": [[94, "id33"]], "0.1.7": [[94, "id34"]], "0.1.3": [[94, "id35"]], "First pre-release": [[94, "first-pre-release"]]}, "indexentries": {"barycenter() (in module ot)": [[0, "ot.barycenter"]], "barycenter_unbalanced() (in module ot)": [[0, "ot.barycenter_unbalanced"]], "binary_search_circle() (in module ot)": [[0, "ot.binary_search_circle"]], "dist() (in module ot)": [[0, "ot.dist"]], "emd() (in module ot)": [[0, "ot.emd"]], "emd2() (in module ot)": [[0, "ot.emd2"]], "emd2_1d() (in module ot)": [[0, "ot.emd2_1d"]], "emd_1d() (in module ot)": [[0, "ot.emd_1d"]], "factored_optimal_transport() (in module ot)": [[0, "ot.factored_optimal_transport"]], "fused_gromov_wasserstein() (in module ot)": [[0, "ot.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot)": [[0, "ot.fused_gromov_wasserstein2"]], "gromov_barycenters() (in module ot)": [[0, "ot.gromov_barycenters"]], "gromov_wasserstein() (in module ot)": [[0, "ot.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot)": [[0, "ot.gromov_wasserstein2"]], "max_sliced_wasserstein_distance() (in module ot)": [[0, "ot.max_sliced_wasserstein_distance"]], "module": [[0, "module-ot"], [71, "module-ot.backend"], [72, "module-ot.bregman"], [73, "module-ot.coot"], [74, "module-ot.da"], [75, "module-ot.datasets"], [76, "module-ot.dr"], [77, "module-ot.factored"], [78, "module-ot.gaussian"], [79, "module-ot.gnn"], [80, "module-ot.gromov"], [81, "module-ot.lp"], [82, "module-ot.optim"], [83, "module-ot.partial"], [84, "module-ot.plot"], [85, "module-ot.regpath"], [86, "module-ot.sliced"], [87, "module-ot.smooth"], [88, "module-ot.stochastic"], [89, "module-ot.unbalanced"], [90, "module-ot.utils"], [91, "module-ot.weak"]], "ot": [[0, "module-ot"]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[0, "ot.semidiscrete_wasserstein2_unif_circle"]], "sinkhorn() (in module ot)": [[0, "ot.sinkhorn"]], "sinkhorn2() (in module ot)": [[0, "ot.sinkhorn2"]], "sinkhorn_lpl1_mm() (in module ot)": [[0, "ot.sinkhorn_lpl1_mm"]], "sinkhorn_unbalanced() (in module ot)": [[0, "ot.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot)": [[0, "ot.sinkhorn_unbalanced2"]], "sliced_wasserstein_distance() (in module ot)": [[0, "ot.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot)": [[0, "ot.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot)": [[0, "ot.sliced_wasserstein_sphere_unif"]], "solve() (in module ot)": [[0, "ot.solve"]], "tic() (in module ot)": [[0, "ot.tic"]], "toc() (in module ot)": [[0, "ot.toc"]], "toq() (in module ot)": [[0, "ot.toq"]], "unif() (in module ot)": [[0, "ot.unif"]], "wasserstein_1d() (in module ot)": [[0, "ot.wasserstein_1d"]], "wasserstein_circle() (in module ot)": [[0, "ot.wasserstein_circle"]], "weak_optimal_transport() (in module ot)": [[0, "ot.weak_optimal_transport"]], "backend (class in ot.backend)": [[71, "id0"], [71, "ot.backend.Backend"]], "cupybackend (class in ot.backend)": [[71, "id83"], [71, "ot.backend.CupyBackend"]], "jaxbackend (class in ot.backend)": [[71, "id164"], [71, "ot.backend.JaxBackend"]], "numpybackend (class in ot.backend)": [[71, "id245"], [71, "ot.backend.NumpyBackend"]], "tensorflowbackend (class in ot.backend)": [[71, "id326"], [71, "ot.backend.TensorflowBackend"]], "torchbackend (class in ot.backend)": [[71, "id407"], [71, "ot.backend.TorchBackend"]], "abs() (ot.backend.backend method)": [[71, "id1"], [71, "ot.backend.Backend.abs"]], "abs() (ot.backend.cupybackend method)": [[71, "id84"], [71, "ot.backend.CupyBackend.abs"]], "abs() (ot.backend.jaxbackend method)": [[71, "id165"], [71, "ot.backend.JaxBackend.abs"]], "abs() (ot.backend.numpybackend method)": [[71, "id246"], [71, "ot.backend.NumpyBackend.abs"]], "abs() (ot.backend.tensorflowbackend method)": [[71, "id327"], [71, "ot.backend.TensorflowBackend.abs"]], "abs() (ot.backend.torchbackend method)": [[71, "id408"], [71, "ot.backend.TorchBackend.abs"]], "allclose() (ot.backend.backend method)": [[71, "id2"], [71, "ot.backend.Backend.allclose"]], "allclose() (ot.backend.cupybackend method)": [[71, "id85"], [71, "ot.backend.CupyBackend.allclose"]], "allclose() (ot.backend.jaxbackend method)": [[71, "id166"], [71, "ot.backend.JaxBackend.allclose"]], "allclose() (ot.backend.numpybackend method)": [[71, "id247"], [71, "ot.backend.NumpyBackend.allclose"]], "allclose() (ot.backend.tensorflowbackend method)": [[71, "id328"], [71, "ot.backend.TensorflowBackend.allclose"]], "allclose() (ot.backend.torchbackend method)": [[71, "id409"], [71, "ot.backend.TorchBackend.allclose"]], "any() (ot.backend.backend method)": [[71, "id3"], [71, "ot.backend.Backend.any"]], "any() (ot.backend.cupybackend method)": [[71, "id86"], [71, "ot.backend.CupyBackend.any"]], "any() (ot.backend.jaxbackend method)": [[71, "id167"], [71, "ot.backend.JaxBackend.any"]], "any() (ot.backend.numpybackend method)": [[71, "id248"], [71, "ot.backend.NumpyBackend.any"]], "any() (ot.backend.tensorflowbackend method)": [[71, "id329"], [71, "ot.backend.TensorflowBackend.any"]], "any() (ot.backend.torchbackend method)": [[71, "id410"], [71, "ot.backend.TorchBackend.any"]], "arange() (ot.backend.backend method)": [[71, "id4"], [71, "ot.backend.Backend.arange"]], "arange() (ot.backend.cupybackend method)": [[71, "id87"], [71, "ot.backend.CupyBackend.arange"]], "arange() (ot.backend.jaxbackend method)": [[71, "id168"], [71, "ot.backend.JaxBackend.arange"]], "arange() (ot.backend.numpybackend method)": [[71, "id249"], [71, "ot.backend.NumpyBackend.arange"]], "arange() (ot.backend.tensorflowbackend method)": [[71, "id330"], [71, "ot.backend.TensorflowBackend.arange"]], "arange() (ot.backend.torchbackend method)": [[71, "id411"], [71, "ot.backend.TorchBackend.arange"]], "argmax() (ot.backend.backend method)": [[71, "id5"], [71, "ot.backend.Backend.argmax"]], "argmax() (ot.backend.cupybackend method)": [[71, "id88"], [71, "ot.backend.CupyBackend.argmax"]], "argmax() (ot.backend.jaxbackend method)": [[71, "id169"], [71, "ot.backend.JaxBackend.argmax"]], "argmax() (ot.backend.numpybackend method)": [[71, "id250"], [71, "ot.backend.NumpyBackend.argmax"]], "argmax() (ot.backend.tensorflowbackend method)": [[71, "id331"], [71, "ot.backend.TensorflowBackend.argmax"]], "argmax() (ot.backend.torchbackend method)": [[71, "id412"], [71, "ot.backend.TorchBackend.argmax"]], "argmin() (ot.backend.backend method)": [[71, "id6"], [71, "ot.backend.Backend.argmin"]], "argmin() (ot.backend.cupybackend method)": [[71, "id89"], [71, "ot.backend.CupyBackend.argmin"]], "argmin() (ot.backend.jaxbackend method)": [[71, "id170"], [71, "ot.backend.JaxBackend.argmin"]], "argmin() (ot.backend.numpybackend method)": [[71, "id251"], [71, "ot.backend.NumpyBackend.argmin"]], "argmin() (ot.backend.tensorflowbackend method)": [[71, "id332"], [71, "ot.backend.TensorflowBackend.argmin"]], "argmin() (ot.backend.torchbackend method)": [[71, "id413"], [71, "ot.backend.TorchBackend.argmin"]], "argsort() (ot.backend.backend method)": [[71, "id7"], [71, "ot.backend.Backend.argsort"]], "argsort() (ot.backend.cupybackend method)": [[71, "id90"], [71, "ot.backend.CupyBackend.argsort"]], "argsort() (ot.backend.jaxbackend method)": [[71, "id171"], [71, "ot.backend.JaxBackend.argsort"]], "argsort() (ot.backend.numpybackend method)": [[71, "id252"], [71, "ot.backend.NumpyBackend.argsort"]], "argsort() (ot.backend.tensorflowbackend method)": [[71, "id333"], [71, "ot.backend.TensorflowBackend.argsort"]], "argsort() (ot.backend.torchbackend method)": [[71, "id414"], [71, "ot.backend.TorchBackend.argsort"]], "array_equal() (ot.backend.backend method)": [[71, "id8"], [71, "ot.backend.Backend.array_equal"]], "array_equal() (ot.backend.cupybackend method)": [[71, "id91"], [71, "ot.backend.CupyBackend.array_equal"]], "array_equal() (ot.backend.jaxbackend method)": [[71, "id172"], [71, "ot.backend.JaxBackend.array_equal"]], "array_equal() (ot.backend.numpybackend method)": [[71, "id253"], [71, "ot.backend.NumpyBackend.array_equal"]], "array_equal() (ot.backend.tensorflowbackend method)": [[71, "id334"], [71, "ot.backend.TensorflowBackend.array_equal"]], "array_equal() (ot.backend.torchbackend method)": [[71, "id415"], [71, "ot.backend.TorchBackend.array_equal"]], "assert_same_dtype_device() (ot.backend.backend method)": [[71, "id9"], [71, "ot.backend.Backend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[71, "id92"], [71, "ot.backend.CupyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[71, "id173"], [71, "ot.backend.JaxBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[71, "id254"], [71, "ot.backend.NumpyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[71, "id335"], [71, "ot.backend.TensorflowBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[71, "id416"], [71, "ot.backend.TorchBackend.assert_same_dtype_device"]], "atan2() (ot.backend.backend method)": [[71, "id10"], [71, "ot.backend.Backend.atan2"]], "atan2() (ot.backend.cupybackend method)": [[71, "id93"], [71, "ot.backend.CupyBackend.atan2"]], "atan2() (ot.backend.jaxbackend method)": [[71, "id174"], [71, "ot.backend.JaxBackend.atan2"]], "atan2() (ot.backend.numpybackend method)": [[71, "id255"], [71, "ot.backend.NumpyBackend.atan2"]], "atan2() (ot.backend.tensorflowbackend method)": [[71, "id336"], [71, "ot.backend.TensorflowBackend.atan2"]], "atan2() (ot.backend.torchbackend method)": [[71, "id417"], [71, "ot.backend.TorchBackend.atan2"]], "bitsize() (ot.backend.backend method)": [[71, "id11"], [71, "ot.backend.Backend.bitsize"]], "bitsize() (ot.backend.cupybackend method)": [[71, "id94"], [71, "ot.backend.CupyBackend.bitsize"]], "bitsize() (ot.backend.jaxbackend method)": [[71, "id175"], [71, "ot.backend.JaxBackend.bitsize"]], "bitsize() (ot.backend.numpybackend method)": [[71, "id256"], [71, "ot.backend.NumpyBackend.bitsize"]], "bitsize() (ot.backend.tensorflowbackend method)": [[71, "id337"], [71, "ot.backend.TensorflowBackend.bitsize"]], "bitsize() (ot.backend.torchbackend method)": [[71, "id418"], [71, "ot.backend.TorchBackend.bitsize"]], "clip() (ot.backend.backend method)": [[71, "id12"], [71, "ot.backend.Backend.clip"]], "clip() (ot.backend.cupybackend method)": [[71, "id95"], [71, "ot.backend.CupyBackend.clip"]], "clip() (ot.backend.jaxbackend method)": [[71, "id176"], [71, "ot.backend.JaxBackend.clip"]], "clip() (ot.backend.numpybackend method)": [[71, "id257"], [71, "ot.backend.NumpyBackend.clip"]], "clip() (ot.backend.tensorflowbackend method)": [[71, "id338"], [71, "ot.backend.TensorflowBackend.clip"]], "clip() (ot.backend.torchbackend method)": [[71, "id419"], [71, "ot.backend.TorchBackend.clip"]], "concatenate() (ot.backend.backend method)": [[71, "id13"], [71, "ot.backend.Backend.concatenate"]], "concatenate() (ot.backend.cupybackend method)": [[71, "id96"], [71, "ot.backend.CupyBackend.concatenate"]], "concatenate() (ot.backend.jaxbackend method)": [[71, "id177"], [71, "ot.backend.JaxBackend.concatenate"]], "concatenate() (ot.backend.numpybackend method)": [[71, "id258"], [71, "ot.backend.NumpyBackend.concatenate"]], "concatenate() (ot.backend.tensorflowbackend method)": [[71, "id339"], [71, "ot.backend.TensorflowBackend.concatenate"]], "concatenate() (ot.backend.torchbackend method)": [[71, "id420"], [71, "ot.backend.TorchBackend.concatenate"]], "coo_matrix() (ot.backend.backend method)": [[71, "id14"], [71, "ot.backend.Backend.coo_matrix"]], "coo_matrix() (ot.backend.cupybackend method)": [[71, "id97"], [71, "ot.backend.CupyBackend.coo_matrix"]], "coo_matrix() (ot.backend.jaxbackend method)": [[71, "id178"], [71, "ot.backend.JaxBackend.coo_matrix"]], "coo_matrix() (ot.backend.numpybackend method)": [[71, "id259"], [71, "ot.backend.NumpyBackend.coo_matrix"]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[71, "id340"], [71, "ot.backend.TensorflowBackend.coo_matrix"]], "coo_matrix() (ot.backend.torchbackend method)": [[71, "id421"], [71, "ot.backend.TorchBackend.coo_matrix"]], "copy() (ot.backend.backend method)": [[71, "id15"], [71, "ot.backend.Backend.copy"]], "copy() (ot.backend.cupybackend method)": [[71, "id98"], [71, "ot.backend.CupyBackend.copy"]], "copy() (ot.backend.jaxbackend method)": [[71, "id179"], [71, "ot.backend.JaxBackend.copy"]], "copy() (ot.backend.numpybackend method)": [[71, "id260"], [71, "ot.backend.NumpyBackend.copy"]], "copy() (ot.backend.tensorflowbackend method)": [[71, "id341"], [71, "ot.backend.TensorflowBackend.copy"]], "copy() (ot.backend.torchbackend method)": [[71, "id422"], [71, "ot.backend.TorchBackend.copy"]], "cumsum() (ot.backend.backend method)": [[71, "id16"], [71, "ot.backend.Backend.cumsum"]], "cumsum() (ot.backend.cupybackend method)": [[71, "id99"], [71, "ot.backend.CupyBackend.cumsum"]], "cumsum() (ot.backend.jaxbackend method)": [[71, "id180"], [71, "ot.backend.JaxBackend.cumsum"]], "cumsum() (ot.backend.numpybackend method)": [[71, "id261"], [71, "ot.backend.NumpyBackend.cumsum"]], "cumsum() (ot.backend.tensorflowbackend method)": [[71, "id342"], [71, "ot.backend.TensorflowBackend.cumsum"]], "cumsum() (ot.backend.torchbackend method)": [[71, "id423"], [71, "ot.backend.TorchBackend.cumsum"]], "detach() (ot.backend.backend method)": [[71, "id17"], [71, "ot.backend.Backend.detach"]], "detach() (ot.backend.cupybackend method)": [[71, "id100"], [71, "ot.backend.CupyBackend.detach"]], "detach() (ot.backend.jaxbackend method)": [[71, "id181"], [71, "ot.backend.JaxBackend.detach"]], "detach() (ot.backend.numpybackend method)": [[71, "id262"], [71, "ot.backend.NumpyBackend.detach"]], "detach() (ot.backend.tensorflowbackend method)": [[71, "id343"], [71, "ot.backend.TensorflowBackend.detach"]], "detach() (ot.backend.torchbackend method)": [[71, "id424"], [71, "ot.backend.TorchBackend.detach"]], "device_type() (ot.backend.backend method)": [[71, "id18"], [71, "ot.backend.Backend.device_type"]], "device_type() (ot.backend.cupybackend method)": [[71, "id101"], [71, "ot.backend.CupyBackend.device_type"]], "device_type() (ot.backend.jaxbackend method)": [[71, "id182"], [71, "ot.backend.JaxBackend.device_type"]], "device_type() (ot.backend.numpybackend method)": [[71, "id263"], [71, "ot.backend.NumpyBackend.device_type"]], "device_type() (ot.backend.tensorflowbackend method)": [[71, "id344"], [71, "ot.backend.TensorflowBackend.device_type"]], "device_type() (ot.backend.torchbackend method)": [[71, "id425"], [71, "ot.backend.TorchBackend.device_type"]], "diag() (ot.backend.backend method)": [[71, "id19"], [71, "ot.backend.Backend.diag"]], "diag() (ot.backend.cupybackend method)": [[71, "id102"], [71, "ot.backend.CupyBackend.diag"]], "diag() (ot.backend.jaxbackend method)": [[71, "id183"], [71, "ot.backend.JaxBackend.diag"]], "diag() (ot.backend.numpybackend method)": [[71, "id264"], [71, "ot.backend.NumpyBackend.diag"]], "diag() (ot.backend.tensorflowbackend method)": [[71, "id345"], [71, "ot.backend.TensorflowBackend.diag"]], "diag() (ot.backend.torchbackend method)": [[71, "id426"], [71, "ot.backend.TorchBackend.diag"]], "dot() (ot.backend.backend method)": [[71, "id20"], [71, "ot.backend.Backend.dot"]], "dot() (ot.backend.cupybackend method)": [[71, "id103"], [71, "ot.backend.CupyBackend.dot"]], "dot() (ot.backend.jaxbackend method)": [[71, "id184"], [71, "ot.backend.JaxBackend.dot"]], "dot() (ot.backend.numpybackend method)": [[71, "id265"], [71, "ot.backend.NumpyBackend.dot"]], "dot() (ot.backend.tensorflowbackend method)": [[71, "id346"], [71, "ot.backend.TensorflowBackend.dot"]], "dot() (ot.backend.torchbackend method)": [[71, "id427"], [71, "ot.backend.TorchBackend.dot"]], "dtype_device() (ot.backend.backend method)": [[71, "id21"], [71, "ot.backend.Backend.dtype_device"]], "dtype_device() (ot.backend.cupybackend method)": [[71, "id104"], [71, "ot.backend.CupyBackend.dtype_device"]], "dtype_device() (ot.backend.jaxbackend method)": [[71, "id185"], [71, "ot.backend.JaxBackend.dtype_device"]], "dtype_device() (ot.backend.numpybackend method)": [[71, "id266"], [71, "ot.backend.NumpyBackend.dtype_device"]], "dtype_device() (ot.backend.tensorflowbackend method)": [[71, "id347"], [71, "ot.backend.TensorflowBackend.dtype_device"]], "dtype_device() (ot.backend.torchbackend method)": [[71, "id428"], [71, "ot.backend.TorchBackend.dtype_device"]], "eigh() (ot.backend.backend method)": [[71, "id22"], [71, "ot.backend.Backend.eigh"]], "eigh() (ot.backend.cupybackend method)": [[71, "id105"], [71, "ot.backend.CupyBackend.eigh"]], "eigh() (ot.backend.jaxbackend method)": [[71, "id186"], [71, "ot.backend.JaxBackend.eigh"]], "eigh() (ot.backend.numpybackend method)": [[71, "id267"], [71, "ot.backend.NumpyBackend.eigh"]], "eigh() (ot.backend.tensorflowbackend method)": [[71, "id348"], [71, "ot.backend.TensorflowBackend.eigh"]], "eigh() (ot.backend.torchbackend method)": [[71, "id429"], [71, "ot.backend.TorchBackend.eigh"]], "einsum() (ot.backend.backend method)": [[71, "id23"], [71, "ot.backend.Backend.einsum"]], "einsum() (ot.backend.cupybackend method)": [[71, "id106"], [71, "ot.backend.CupyBackend.einsum"]], "einsum() (ot.backend.jaxbackend method)": [[71, "id187"], [71, "ot.backend.JaxBackend.einsum"]], "einsum() (ot.backend.numpybackend method)": [[71, "id268"], [71, "ot.backend.NumpyBackend.einsum"]], "einsum() (ot.backend.tensorflowbackend method)": [[71, "id349"], [71, "ot.backend.TensorflowBackend.einsum"]], "einsum() (ot.backend.torchbackend method)": [[71, "id430"], [71, "ot.backend.TorchBackend.einsum"]], "eliminate_zeros() (ot.backend.backend method)": [[71, "id24"], [71, "ot.backend.Backend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.cupybackend method)": [[71, "id107"], [71, "ot.backend.CupyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[71, "id188"], [71, "ot.backend.JaxBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.numpybackend method)": [[71, "id269"], [71, "ot.backend.NumpyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[71, "id350"], [71, "ot.backend.TensorflowBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.torchbackend method)": [[71, "id431"], [71, "ot.backend.TorchBackend.eliminate_zeros"]], "exp() (ot.backend.backend method)": [[71, "id25"], [71, "ot.backend.Backend.exp"]], "exp() (ot.backend.cupybackend method)": [[71, "id108"], [71, "ot.backend.CupyBackend.exp"]], "exp() (ot.backend.jaxbackend method)": [[71, "id189"], [71, "ot.backend.JaxBackend.exp"]], "exp() (ot.backend.numpybackend method)": [[71, "id270"], [71, "ot.backend.NumpyBackend.exp"]], "exp() (ot.backend.tensorflowbackend method)": [[71, "id351"], [71, "ot.backend.TensorflowBackend.exp"]], "exp() (ot.backend.torchbackend method)": [[71, "id432"], [71, "ot.backend.TorchBackend.exp"]], "eye() (ot.backend.backend method)": [[71, "id26"], [71, "ot.backend.Backend.eye"]], "eye() (ot.backend.cupybackend method)": [[71, "id109"], [71, "ot.backend.CupyBackend.eye"]], "eye() (ot.backend.jaxbackend method)": [[71, "id190"], [71, "ot.backend.JaxBackend.eye"]], "eye() (ot.backend.numpybackend method)": [[71, "id271"], [71, "ot.backend.NumpyBackend.eye"]], "eye() (ot.backend.tensorflowbackend method)": [[71, "id352"], [71, "ot.backend.TensorflowBackend.eye"]], "eye() (ot.backend.torchbackend method)": [[71, "id433"], [71, "ot.backend.TorchBackend.eye"]], "flip() (ot.backend.backend method)": [[71, "id27"], [71, "ot.backend.Backend.flip"]], "flip() (ot.backend.cupybackend method)": [[71, "id110"], [71, "ot.backend.CupyBackend.flip"]], "flip() (ot.backend.jaxbackend method)": [[71, "id191"], [71, "ot.backend.JaxBackend.flip"]], "flip() (ot.backend.numpybackend method)": [[71, "id272"], [71, "ot.backend.NumpyBackend.flip"]], "flip() (ot.backend.tensorflowbackend method)": [[71, "id353"], [71, "ot.backend.TensorflowBackend.flip"]], "flip() (ot.backend.torchbackend method)": [[71, "id434"], [71, "ot.backend.TorchBackend.flip"]], "floor() (ot.backend.backend method)": [[71, "id28"], [71, "ot.backend.Backend.floor"]], "floor() (ot.backend.cupybackend method)": [[71, "id111"], [71, "ot.backend.CupyBackend.floor"]], "floor() (ot.backend.jaxbackend method)": [[71, "id192"], [71, "ot.backend.JaxBackend.floor"]], "floor() (ot.backend.numpybackend method)": [[71, "id273"], [71, "ot.backend.NumpyBackend.floor"]], "floor() (ot.backend.tensorflowbackend method)": [[71, "id354"], [71, "ot.backend.TensorflowBackend.floor"]], "floor() (ot.backend.torchbackend method)": [[71, "id435"], [71, "ot.backend.TorchBackend.floor"]], "from_numpy() (ot.backend.backend method)": [[71, "id29"], [71, "ot.backend.Backend.from_numpy"]], "full() (ot.backend.backend method)": [[71, "id30"], [71, "ot.backend.Backend.full"]], "full() (ot.backend.cupybackend method)": [[71, "id112"], [71, "ot.backend.CupyBackend.full"]], "full() (ot.backend.jaxbackend method)": [[71, "id193"], [71, "ot.backend.JaxBackend.full"]], "full() (ot.backend.numpybackend method)": [[71, "id274"], [71, "ot.backend.NumpyBackend.full"]], "full() (ot.backend.tensorflowbackend method)": [[71, "id355"], [71, "ot.backend.TensorflowBackend.full"]], "full() (ot.backend.torchbackend method)": [[71, "id436"], [71, "ot.backend.TorchBackend.full"]], "get_backend() (in module ot.backend)": [[71, "id488"], [71, "ot.backend.get_backend"]], "get_backend_list() (in module ot.backend)": [[71, "id489"], [71, "ot.backend.get_backend_list"]], "inv() (ot.backend.backend method)": [[71, "id31"], [71, "ot.backend.Backend.inv"]], "inv() (ot.backend.cupybackend method)": [[71, "id113"], [71, "ot.backend.CupyBackend.inv"]], "inv() (ot.backend.jaxbackend method)": [[71, "id194"], [71, "ot.backend.JaxBackend.inv"]], "inv() (ot.backend.numpybackend method)": [[71, "id275"], [71, "ot.backend.NumpyBackend.inv"]], "inv() (ot.backend.tensorflowbackend method)": [[71, "id356"], [71, "ot.backend.TensorflowBackend.inv"]], "inv() (ot.backend.torchbackend method)": [[71, "id437"], [71, "ot.backend.TorchBackend.inv"]], "is_floating_point() (ot.backend.backend method)": [[71, "id32"], [71, "ot.backend.Backend.is_floating_point"]], "is_floating_point() (ot.backend.cupybackend method)": [[71, "id114"], [71, "ot.backend.CupyBackend.is_floating_point"]], "is_floating_point() (ot.backend.jaxbackend method)": [[71, "id195"], [71, "ot.backend.JaxBackend.is_floating_point"]], "is_floating_point() (ot.backend.numpybackend method)": [[71, "id276"], [71, "ot.backend.NumpyBackend.is_floating_point"]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[71, "id357"], [71, "ot.backend.TensorflowBackend.is_floating_point"]], "is_floating_point() (ot.backend.torchbackend method)": [[71, "id438"], [71, "ot.backend.TorchBackend.is_floating_point"]], "isfinite() (ot.backend.backend method)": [[71, "id33"], [71, "ot.backend.Backend.isfinite"]], "isfinite() (ot.backend.cupybackend method)": [[71, "id115"], [71, "ot.backend.CupyBackend.isfinite"]], "isfinite() (ot.backend.jaxbackend method)": [[71, "id196"], [71, "ot.backend.JaxBackend.isfinite"]], "isfinite() (ot.backend.numpybackend method)": [[71, "id277"], [71, "ot.backend.NumpyBackend.isfinite"]], "isfinite() (ot.backend.tensorflowbackend method)": [[71, "id358"], [71, "ot.backend.TensorflowBackend.isfinite"]], "isfinite() (ot.backend.torchbackend method)": [[71, "id439"], [71, "ot.backend.TorchBackend.isfinite"]], "isinf() (ot.backend.backend method)": [[71, "id34"], [71, "ot.backend.Backend.isinf"]], "isinf() (ot.backend.cupybackend method)": [[71, "id116"], [71, "ot.backend.CupyBackend.isinf"]], "isinf() (ot.backend.jaxbackend method)": [[71, "id197"], [71, "ot.backend.JaxBackend.isinf"]], "isinf() (ot.backend.numpybackend method)": [[71, "id278"], [71, "ot.backend.NumpyBackend.isinf"]], "isinf() (ot.backend.tensorflowbackend method)": [[71, "id359"], [71, "ot.backend.TensorflowBackend.isinf"]], "isinf() (ot.backend.torchbackend method)": [[71, "id440"], [71, "ot.backend.TorchBackend.isinf"]], "isnan() (ot.backend.backend method)": [[71, "id35"], [71, "ot.backend.Backend.isnan"]], "isnan() (ot.backend.cupybackend method)": [[71, "id117"], [71, "ot.backend.CupyBackend.isnan"]], "isnan() (ot.backend.jaxbackend method)": [[71, "id198"], [71, "ot.backend.JaxBackend.isnan"]], "isnan() (ot.backend.numpybackend method)": [[71, "id279"], [71, "ot.backend.NumpyBackend.isnan"]], "isnan() (ot.backend.tensorflowbackend method)": [[71, "id360"], [71, "ot.backend.TensorflowBackend.isnan"]], "isnan() (ot.backend.torchbackend method)": [[71, "id441"], [71, "ot.backend.TorchBackend.isnan"]], "issparse() (ot.backend.backend method)": [[71, "id36"], [71, "ot.backend.Backend.issparse"]], "issparse() (ot.backend.cupybackend method)": [[71, "id118"], [71, "ot.backend.CupyBackend.issparse"]], "issparse() (ot.backend.jaxbackend method)": [[71, "id199"], [71, "ot.backend.JaxBackend.issparse"]], "issparse() (ot.backend.numpybackend method)": [[71, "id280"], [71, "ot.backend.NumpyBackend.issparse"]], "issparse() (ot.backend.tensorflowbackend method)": [[71, "id361"], [71, "ot.backend.TensorflowBackend.issparse"]], "issparse() (ot.backend.torchbackend method)": [[71, "id442"], [71, "ot.backend.TorchBackend.issparse"]], "kl_div() (ot.backend.backend method)": [[71, "id37"], [71, "ot.backend.Backend.kl_div"]], "kl_div() (ot.backend.cupybackend method)": [[71, "id119"], [71, "ot.backend.CupyBackend.kl_div"]], "kl_div() (ot.backend.jaxbackend method)": [[71, "id200"], [71, "ot.backend.JaxBackend.kl_div"]], "kl_div() (ot.backend.numpybackend method)": [[71, "id281"], [71, "ot.backend.NumpyBackend.kl_div"]], "kl_div() (ot.backend.tensorflowbackend method)": [[71, "id362"], [71, "ot.backend.TensorflowBackend.kl_div"]], "kl_div() (ot.backend.torchbackend method)": [[71, "id443"], [71, "ot.backend.TorchBackend.kl_div"]], "linspace() (ot.backend.backend method)": [[71, "id38"], [71, "ot.backend.Backend.linspace"]], "linspace() (ot.backend.cupybackend method)": [[71, "id120"], [71, "ot.backend.CupyBackend.linspace"]], "linspace() (ot.backend.jaxbackend method)": [[71, "id201"], [71, "ot.backend.JaxBackend.linspace"]], "linspace() (ot.backend.numpybackend method)": [[71, "id282"], [71, "ot.backend.NumpyBackend.linspace"]], "linspace() (ot.backend.tensorflowbackend method)": [[71, "id363"], [71, "ot.backend.TensorflowBackend.linspace"]], "linspace() (ot.backend.torchbackend method)": [[71, "id444"], [71, "ot.backend.TorchBackend.linspace"]], "log() (ot.backend.backend method)": [[71, "id39"], [71, "ot.backend.Backend.log"]], "log() (ot.backend.cupybackend method)": [[71, "id121"], [71, "ot.backend.CupyBackend.log"]], "log() (ot.backend.jaxbackend method)": [[71, "id202"], [71, "ot.backend.JaxBackend.log"]], "log() (ot.backend.numpybackend method)": [[71, "id283"], [71, "ot.backend.NumpyBackend.log"]], "log() (ot.backend.tensorflowbackend method)": [[71, "id364"], [71, "ot.backend.TensorflowBackend.log"]], "log() (ot.backend.torchbackend method)": [[71, "id445"], [71, "ot.backend.TorchBackend.log"]], "logsumexp() (ot.backend.backend method)": [[71, "id40"], [71, "ot.backend.Backend.logsumexp"]], "logsumexp() (ot.backend.cupybackend method)": [[71, "id122"], [71, "ot.backend.CupyBackend.logsumexp"]], "logsumexp() (ot.backend.jaxbackend method)": [[71, "id203"], [71, "ot.backend.JaxBackend.logsumexp"]], "logsumexp() (ot.backend.numpybackend method)": [[71, "id284"], [71, "ot.backend.NumpyBackend.logsumexp"]], "logsumexp() (ot.backend.tensorflowbackend method)": [[71, "id365"], [71, "ot.backend.TensorflowBackend.logsumexp"]], "logsumexp() (ot.backend.torchbackend method)": [[71, "id446"], [71, "ot.backend.TorchBackend.logsumexp"]], "matmul() (ot.backend.backend method)": [[71, "id41"], [71, "ot.backend.Backend.matmul"]], "matmul() (ot.backend.cupybackend method)": [[71, "id123"], [71, "ot.backend.CupyBackend.matmul"]], "matmul() (ot.backend.jaxbackend method)": [[71, "id204"], [71, "ot.backend.JaxBackend.matmul"]], "matmul() (ot.backend.numpybackend method)": [[71, "id285"], [71, "ot.backend.NumpyBackend.matmul"]], "matmul() (ot.backend.tensorflowbackend method)": [[71, "id366"], [71, "ot.backend.TensorflowBackend.matmul"]], "matmul() (ot.backend.torchbackend method)": [[71, "id447"], [71, "ot.backend.TorchBackend.matmul"]], "max() (ot.backend.backend method)": [[71, "id42"], [71, "ot.backend.Backend.max"]], "max() (ot.backend.cupybackend method)": [[71, "id124"], [71, "ot.backend.CupyBackend.max"]], "max() (ot.backend.jaxbackend method)": [[71, "id205"], [71, "ot.backend.JaxBackend.max"]], "max() (ot.backend.numpybackend method)": [[71, "id286"], [71, "ot.backend.NumpyBackend.max"]], "max() (ot.backend.tensorflowbackend method)": [[71, "id367"], [71, "ot.backend.TensorflowBackend.max"]], "max() (ot.backend.torchbackend method)": [[71, "id448"], [71, "ot.backend.TorchBackend.max"]], "maximum() (ot.backend.backend method)": [[71, "id43"], [71, "ot.backend.Backend.maximum"]], "maximum() (ot.backend.cupybackend method)": [[71, "id125"], [71, "ot.backend.CupyBackend.maximum"]], "maximum() (ot.backend.jaxbackend method)": [[71, "id206"], [71, "ot.backend.JaxBackend.maximum"]], "maximum() (ot.backend.numpybackend method)": [[71, "id287"], [71, "ot.backend.NumpyBackend.maximum"]], "maximum() (ot.backend.tensorflowbackend method)": [[71, "id368"], [71, "ot.backend.TensorflowBackend.maximum"]], "maximum() (ot.backend.torchbackend method)": [[71, "id449"], [71, "ot.backend.TorchBackend.maximum"]], "mean() (ot.backend.backend method)": [[71, "id44"], [71, "ot.backend.Backend.mean"]], "mean() (ot.backend.cupybackend method)": [[71, "id126"], [71, "ot.backend.CupyBackend.mean"]], "mean() (ot.backend.jaxbackend method)": [[71, "id207"], [71, "ot.backend.JaxBackend.mean"]], "mean() (ot.backend.numpybackend method)": [[71, "id288"], [71, "ot.backend.NumpyBackend.mean"]], "mean() (ot.backend.tensorflowbackend method)": [[71, "id369"], [71, "ot.backend.TensorflowBackend.mean"]], "mean() (ot.backend.torchbackend method)": [[71, "id450"], [71, "ot.backend.TorchBackend.mean"]], "median() (ot.backend.backend method)": [[71, "id45"], [71, "ot.backend.Backend.median"]], "median() (ot.backend.cupybackend method)": [[71, "id127"], [71, "ot.backend.CupyBackend.median"]], "median() (ot.backend.jaxbackend method)": [[71, "id208"], [71, "ot.backend.JaxBackend.median"]], "median() (ot.backend.numpybackend method)": [[71, "id289"], [71, "ot.backend.NumpyBackend.median"]], "median() (ot.backend.tensorflowbackend method)": [[71, "id370"], [71, "ot.backend.TensorflowBackend.median"]], "median() (ot.backend.torchbackend method)": [[71, "id451"], [71, "ot.backend.TorchBackend.median"]], "meshgrid() (ot.backend.backend method)": [[71, "id46"], [71, "ot.backend.Backend.meshgrid"]], "meshgrid() (ot.backend.cupybackend method)": [[71, "id128"], [71, "ot.backend.CupyBackend.meshgrid"]], "meshgrid() (ot.backend.jaxbackend method)": [[71, "id209"], [71, "ot.backend.JaxBackend.meshgrid"]], "meshgrid() (ot.backend.numpybackend method)": [[71, "id290"], [71, "ot.backend.NumpyBackend.meshgrid"]], "meshgrid() (ot.backend.tensorflowbackend method)": [[71, "id371"], [71, "ot.backend.TensorflowBackend.meshgrid"]], "meshgrid() (ot.backend.torchbackend method)": [[71, "id452"], [71, "ot.backend.TorchBackend.meshgrid"]], "min() (ot.backend.backend method)": [[71, "id47"], [71, "ot.backend.Backend.min"]], "min() (ot.backend.cupybackend method)": [[71, "id129"], [71, "ot.backend.CupyBackend.min"]], "min() (ot.backend.jaxbackend method)": [[71, "id210"], [71, "ot.backend.JaxBackend.min"]], "min() (ot.backend.numpybackend method)": [[71, "id291"], [71, "ot.backend.NumpyBackend.min"]], "min() (ot.backend.tensorflowbackend method)": [[71, "id372"], [71, "ot.backend.TensorflowBackend.min"]], "min() (ot.backend.torchbackend method)": [[71, "id453"], [71, "ot.backend.TorchBackend.min"]], "minimum() (ot.backend.backend method)": [[71, "id48"], [71, "ot.backend.Backend.minimum"]], "minimum() (ot.backend.cupybackend method)": [[71, "id130"], [71, "ot.backend.CupyBackend.minimum"]], "minimum() (ot.backend.jaxbackend method)": [[71, "id211"], [71, "ot.backend.JaxBackend.minimum"]], "minimum() (ot.backend.numpybackend method)": [[71, "id292"], [71, "ot.backend.NumpyBackend.minimum"]], "minimum() (ot.backend.tensorflowbackend method)": [[71, "id373"], [71, "ot.backend.TensorflowBackend.minimum"]], "minimum() (ot.backend.torchbackend method)": [[71, "id454"], [71, "ot.backend.TorchBackend.minimum"]], "norm() (ot.backend.backend method)": [[71, "id49"], [71, "ot.backend.Backend.norm"]], "norm() (ot.backend.cupybackend method)": [[71, "id131"], [71, "ot.backend.CupyBackend.norm"]], "norm() (ot.backend.jaxbackend method)": [[71, "id212"], [71, "ot.backend.JaxBackend.norm"]], "norm() (ot.backend.numpybackend method)": [[71, "id293"], [71, "ot.backend.NumpyBackend.norm"]], "norm() (ot.backend.tensorflowbackend method)": [[71, "id374"], [71, "ot.backend.TensorflowBackend.norm"]], "norm() (ot.backend.torchbackend method)": [[71, "id455"], [71, "ot.backend.TorchBackend.norm"]], "ones() (ot.backend.backend method)": [[71, "id50"], [71, "ot.backend.Backend.ones"]], "ones() (ot.backend.cupybackend method)": [[71, "id132"], [71, "ot.backend.CupyBackend.ones"]], "ones() (ot.backend.jaxbackend method)": [[71, "id213"], [71, "ot.backend.JaxBackend.ones"]], "ones() (ot.backend.numpybackend method)": [[71, "id294"], [71, "ot.backend.NumpyBackend.ones"]], "ones() (ot.backend.tensorflowbackend method)": [[71, "id375"], [71, "ot.backend.TensorflowBackend.ones"]], "ones() (ot.backend.torchbackend method)": [[71, "id456"], [71, "ot.backend.TorchBackend.ones"]], "ot.backend": [[71, "module-ot.backend"]], "outer() (ot.backend.backend method)": [[71, "id51"], [71, "ot.backend.Backend.outer"]], "outer() (ot.backend.cupybackend method)": [[71, "id133"], [71, "ot.backend.CupyBackend.outer"]], "outer() (ot.backend.jaxbackend method)": [[71, "id214"], [71, "ot.backend.JaxBackend.outer"]], "outer() (ot.backend.numpybackend method)": [[71, "id295"], [71, "ot.backend.NumpyBackend.outer"]], "outer() (ot.backend.tensorflowbackend method)": [[71, "id376"], [71, "ot.backend.TensorflowBackend.outer"]], "outer() (ot.backend.torchbackend method)": [[71, "id457"], [71, "ot.backend.TorchBackend.outer"]], "power() (ot.backend.backend method)": [[71, "id52"], [71, "ot.backend.Backend.power"]], "power() (ot.backend.cupybackend method)": [[71, "id134"], [71, "ot.backend.CupyBackend.power"]], "power() (ot.backend.jaxbackend method)": [[71, "id215"], [71, "ot.backend.JaxBackend.power"]], "power() (ot.backend.numpybackend method)": [[71, "id296"], [71, "ot.backend.NumpyBackend.power"]], "power() (ot.backend.tensorflowbackend method)": [[71, "id377"], [71, "ot.backend.TensorflowBackend.power"]], "power() (ot.backend.torchbackend method)": [[71, "id458"], [71, "ot.backend.TorchBackend.power"]], "prod() (ot.backend.backend method)": [[71, "id53"], [71, "ot.backend.Backend.prod"]], "prod() (ot.backend.cupybackend method)": [[71, "id135"], [71, "ot.backend.CupyBackend.prod"]], "prod() (ot.backend.jaxbackend method)": [[71, "id216"], [71, "ot.backend.JaxBackend.prod"]], "prod() (ot.backend.numpybackend method)": [[71, "id297"], [71, "ot.backend.NumpyBackend.prod"]], "prod() (ot.backend.tensorflowbackend method)": [[71, "id378"], [71, "ot.backend.TensorflowBackend.prod"]], "prod() (ot.backend.torchbackend method)": [[71, "id459"], [71, "ot.backend.TorchBackend.prod"]], "qr() (ot.backend.backend method)": [[71, "id54"], [71, "ot.backend.Backend.qr"]], "qr() (ot.backend.cupybackend method)": [[71, "id136"], [71, "ot.backend.CupyBackend.qr"]], "qr() (ot.backend.jaxbackend method)": [[71, "id217"], [71, "ot.backend.JaxBackend.qr"]], "qr() (ot.backend.numpybackend method)": [[71, "id298"], [71, "ot.backend.NumpyBackend.qr"]], "qr() (ot.backend.tensorflowbackend method)": [[71, "id379"], [71, "ot.backend.TensorflowBackend.qr"]], "qr() (ot.backend.torchbackend method)": [[71, "id460"], [71, "ot.backend.TorchBackend.qr"]], "rand() (ot.backend.backend method)": [[71, "id55"], [71, "ot.backend.Backend.rand"]], "rand() (ot.backend.cupybackend method)": [[71, "id137"], [71, "ot.backend.CupyBackend.rand"]], "rand() (ot.backend.jaxbackend method)": [[71, "id218"], [71, "ot.backend.JaxBackend.rand"]], "rand() (ot.backend.numpybackend method)": [[71, "id299"], [71, "ot.backend.NumpyBackend.rand"]], "rand() (ot.backend.tensorflowbackend method)": [[71, "id380"], [71, "ot.backend.TensorflowBackend.rand"]], "rand() (ot.backend.torchbackend method)": [[71, "id461"], [71, "ot.backend.TorchBackend.rand"]], "randn() (ot.backend.backend method)": [[71, "id56"], [71, "ot.backend.Backend.randn"]], "randn() (ot.backend.cupybackend method)": [[71, "id138"], [71, "ot.backend.CupyBackend.randn"]], "randn() (ot.backend.jaxbackend method)": [[71, "id219"], [71, "ot.backend.JaxBackend.randn"]], "randn() (ot.backend.numpybackend method)": [[71, "id300"], [71, "ot.backend.NumpyBackend.randn"]], "randn() (ot.backend.tensorflowbackend method)": [[71, "id381"], [71, "ot.backend.TensorflowBackend.randn"]], "randn() (ot.backend.torchbackend method)": [[71, "id462"], [71, "ot.backend.TorchBackend.randn"]], "register_backend() (in module ot.backend)": [[71, "ot.backend.register_backend"]], "repeat() (ot.backend.backend method)": [[71, "id57"], [71, "ot.backend.Backend.repeat"]], "repeat() (ot.backend.cupybackend method)": [[71, "id139"], [71, "ot.backend.CupyBackend.repeat"]], "repeat() (ot.backend.jaxbackend method)": [[71, "id220"], [71, "ot.backend.JaxBackend.repeat"]], "repeat() (ot.backend.numpybackend method)": [[71, "id301"], [71, "ot.backend.NumpyBackend.repeat"]], "repeat() (ot.backend.tensorflowbackend method)": [[71, "id382"], [71, "ot.backend.TensorflowBackend.repeat"]], "repeat() (ot.backend.torchbackend method)": [[71, "id463"], [71, "ot.backend.TorchBackend.repeat"]], "reshape() (ot.backend.backend method)": [[71, "id58"], [71, "ot.backend.Backend.reshape"]], "reshape() (ot.backend.cupybackend method)": [[71, "id140"], [71, "ot.backend.CupyBackend.reshape"]], "reshape() (ot.backend.jaxbackend method)": [[71, "id221"], [71, "ot.backend.JaxBackend.reshape"]], "reshape() (ot.backend.numpybackend method)": [[71, "id302"], [71, "ot.backend.NumpyBackend.reshape"]], "reshape() (ot.backend.tensorflowbackend method)": [[71, "id383"], [71, "ot.backend.TensorflowBackend.reshape"]], "reshape() (ot.backend.torchbackend method)": [[71, "id464"], [71, "ot.backend.TorchBackend.reshape"]], "searchsorted() (ot.backend.backend method)": [[71, "id59"], [71, "ot.backend.Backend.searchsorted"]], "searchsorted() (ot.backend.cupybackend method)": [[71, "id141"], [71, "ot.backend.CupyBackend.searchsorted"]], "searchsorted() (ot.backend.jaxbackend method)": [[71, "id222"], [71, "ot.backend.JaxBackend.searchsorted"]], "searchsorted() (ot.backend.numpybackend method)": [[71, "id303"], [71, "ot.backend.NumpyBackend.searchsorted"]], "searchsorted() (ot.backend.tensorflowbackend method)": [[71, "id384"], [71, "ot.backend.TensorflowBackend.searchsorted"]], "searchsorted() (ot.backend.torchbackend method)": [[71, "id465"], [71, "ot.backend.TorchBackend.searchsorted"]], "seed() (ot.backend.backend method)": [[71, "id60"], [71, "ot.backend.Backend.seed"]], "seed() (ot.backend.cupybackend method)": [[71, "id142"], [71, "ot.backend.CupyBackend.seed"]], "seed() (ot.backend.jaxbackend method)": [[71, "id223"], [71, "ot.backend.JaxBackend.seed"]], "seed() (ot.backend.numpybackend method)": [[71, "id304"], [71, "ot.backend.NumpyBackend.seed"]], "seed() (ot.backend.tensorflowbackend method)": [[71, "id385"], [71, "ot.backend.TensorflowBackend.seed"]], "seed() (ot.backend.torchbackend method)": [[71, "id466"], [71, "ot.backend.TorchBackend.seed"]], "set_gradients() (ot.backend.backend method)": [[71, "id61"], [71, "ot.backend.Backend.set_gradients"]], "set_gradients() (ot.backend.cupybackend method)": [[71, "id143"], [71, "ot.backend.CupyBackend.set_gradients"]], "set_gradients() (ot.backend.jaxbackend method)": [[71, "id224"], [71, "ot.backend.JaxBackend.set_gradients"]], "set_gradients() (ot.backend.numpybackend method)": [[71, "id305"], [71, "ot.backend.NumpyBackend.set_gradients"]], "set_gradients() (ot.backend.tensorflowbackend method)": [[71, "id386"], [71, "ot.backend.TensorflowBackend.set_gradients"]], "set_gradients() (ot.backend.torchbackend method)": [[71, "id467"], [71, "ot.backend.TorchBackend.set_gradients"]], "sign() (ot.backend.backend method)": [[71, "id62"], [71, "ot.backend.Backend.sign"]], "sign() (ot.backend.cupybackend method)": [[71, "id144"], [71, "ot.backend.CupyBackend.sign"]], "sign() (ot.backend.jaxbackend method)": [[71, "id225"], [71, "ot.backend.JaxBackend.sign"]], "sign() (ot.backend.numpybackend method)": [[71, "id306"], [71, "ot.backend.NumpyBackend.sign"]], "sign() (ot.backend.tensorflowbackend method)": [[71, "id387"], [71, "ot.backend.TensorflowBackend.sign"]], "sign() (ot.backend.torchbackend method)": [[71, "id468"], [71, "ot.backend.TorchBackend.sign"]], "solve() (ot.backend.backend method)": [[71, "id63"], [71, "ot.backend.Backend.solve"]], "solve() (ot.backend.cupybackend method)": [[71, "id145"], [71, "ot.backend.CupyBackend.solve"]], "solve() (ot.backend.jaxbackend method)": [[71, "id226"], [71, "ot.backend.JaxBackend.solve"]], "solve() (ot.backend.numpybackend method)": [[71, "id307"], [71, "ot.backend.NumpyBackend.solve"]], "solve() (ot.backend.tensorflowbackend method)": [[71, "id388"], [71, "ot.backend.TensorflowBackend.solve"]], "solve() (ot.backend.torchbackend method)": [[71, "id469"], [71, "ot.backend.TorchBackend.solve"]], "sort() (ot.backend.backend method)": [[71, "id64"], [71, "ot.backend.Backend.sort"]], "sort() (ot.backend.cupybackend method)": [[71, "id146"], [71, "ot.backend.CupyBackend.sort"]], "sort() (ot.backend.jaxbackend method)": [[71, "id227"], [71, "ot.backend.JaxBackend.sort"]], "sort() (ot.backend.numpybackend method)": [[71, "id308"], [71, "ot.backend.NumpyBackend.sort"]], "sort() (ot.backend.tensorflowbackend method)": [[71, "id389"], [71, "ot.backend.TensorflowBackend.sort"]], "sort() (ot.backend.torchbackend method)": [[71, "id470"], [71, "ot.backend.TorchBackend.sort"]], "sort2() (ot.backend.backend method)": [[71, "id65"], [71, "ot.backend.Backend.sort2"]], "sort2() (ot.backend.cupybackend method)": [[71, "id147"], [71, "ot.backend.CupyBackend.sort2"]], "sort2() (ot.backend.jaxbackend method)": [[71, "id228"], [71, "ot.backend.JaxBackend.sort2"]], "sort2() (ot.backend.numpybackend method)": [[71, "id309"], [71, "ot.backend.NumpyBackend.sort2"]], "sort2() (ot.backend.tensorflowbackend method)": [[71, "id390"], [71, "ot.backend.TensorflowBackend.sort2"]], "sort2() (ot.backend.torchbackend method)": [[71, "id471"], [71, "ot.backend.TorchBackend.sort2"]], "sqrt() (ot.backend.backend method)": [[71, "id66"], [71, "ot.backend.Backend.sqrt"]], "sqrt() (ot.backend.cupybackend method)": [[71, "id148"], [71, "ot.backend.CupyBackend.sqrt"]], "sqrt() (ot.backend.jaxbackend method)": [[71, "id229"], [71, "ot.backend.JaxBackend.sqrt"]], "sqrt() (ot.backend.numpybackend method)": [[71, "id310"], [71, "ot.backend.NumpyBackend.sqrt"]], "sqrt() (ot.backend.tensorflowbackend method)": [[71, "id391"], [71, "ot.backend.TensorflowBackend.sqrt"]], "sqrt() (ot.backend.torchbackend method)": [[71, "id472"], [71, "ot.backend.TorchBackend.sqrt"]], "sqrtm() (ot.backend.backend method)": [[71, "id67"], [71, "ot.backend.Backend.sqrtm"]], "sqrtm() (ot.backend.cupybackend method)": [[71, "id149"], [71, "ot.backend.CupyBackend.sqrtm"]], "sqrtm() (ot.backend.jaxbackend method)": [[71, "id230"], [71, "ot.backend.JaxBackend.sqrtm"]], "sqrtm() (ot.backend.numpybackend method)": [[71, "id311"], [71, "ot.backend.NumpyBackend.sqrtm"]], "sqrtm() (ot.backend.tensorflowbackend method)": [[71, "id392"], [71, "ot.backend.TensorflowBackend.sqrtm"]], "sqrtm() (ot.backend.torchbackend method)": [[71, "id473"], [71, "ot.backend.TorchBackend.sqrtm"]], "squeeze() (ot.backend.backend method)": [[71, "id68"], [71, "ot.backend.Backend.squeeze"]], "squeeze() (ot.backend.cupybackend method)": [[71, "id150"], [71, "ot.backend.CupyBackend.squeeze"]], "squeeze() (ot.backend.jaxbackend method)": [[71, "id231"], [71, "ot.backend.JaxBackend.squeeze"]], "squeeze() (ot.backend.numpybackend method)": [[71, "id312"], [71, "ot.backend.NumpyBackend.squeeze"]], "squeeze() (ot.backend.tensorflowbackend method)": [[71, "id393"], [71, "ot.backend.TensorflowBackend.squeeze"]], "squeeze() (ot.backend.torchbackend method)": [[71, "id474"], [71, "ot.backend.TorchBackend.squeeze"]], "stack() (ot.backend.backend method)": [[71, "id69"], [71, "ot.backend.Backend.stack"]], "stack() (ot.backend.cupybackend method)": [[71, "id151"], [71, "ot.backend.CupyBackend.stack"]], "stack() (ot.backend.jaxbackend method)": [[71, "id232"], [71, "ot.backend.JaxBackend.stack"]], "stack() (ot.backend.numpybackend method)": [[71, "id313"], [71, "ot.backend.NumpyBackend.stack"]], "stack() (ot.backend.tensorflowbackend method)": [[71, "id394"], [71, "ot.backend.TensorflowBackend.stack"]], "stack() (ot.backend.torchbackend method)": [[71, "id475"], [71, "ot.backend.TorchBackend.stack"]], "std() (ot.backend.backend method)": [[71, "id70"], [71, "ot.backend.Backend.std"]], "std() (ot.backend.cupybackend method)": [[71, "id152"], [71, "ot.backend.CupyBackend.std"]], "std() (ot.backend.jaxbackend method)": [[71, "id233"], [71, "ot.backend.JaxBackend.std"]], "std() (ot.backend.numpybackend method)": [[71, "id314"], [71, "ot.backend.NumpyBackend.std"]], "std() (ot.backend.tensorflowbackend method)": [[71, "id395"], [71, "ot.backend.TensorflowBackend.std"]], "std() (ot.backend.torchbackend method)": [[71, "id476"], [71, "ot.backend.TorchBackend.std"]], "sum() (ot.backend.backend method)": [[71, "id71"], [71, "ot.backend.Backend.sum"]], "sum() (ot.backend.cupybackend method)": [[71, "id153"], [71, "ot.backend.CupyBackend.sum"]], "sum() (ot.backend.jaxbackend method)": [[71, "id234"], [71, "ot.backend.JaxBackend.sum"]], "sum() (ot.backend.numpybackend method)": [[71, "id315"], [71, "ot.backend.NumpyBackend.sum"]], "sum() (ot.backend.tensorflowbackend method)": [[71, "id396"], [71, "ot.backend.TensorflowBackend.sum"]], "sum() (ot.backend.torchbackend method)": [[71, "id477"], [71, "ot.backend.TorchBackend.sum"]], "take_along_axis() (ot.backend.backend method)": [[71, "id72"], [71, "ot.backend.Backend.take_along_axis"]], "take_along_axis() (ot.backend.cupybackend method)": [[71, "id154"], [71, "ot.backend.CupyBackend.take_along_axis"]], "take_along_axis() (ot.backend.jaxbackend method)": [[71, "id235"], [71, "ot.backend.JaxBackend.take_along_axis"]], "take_along_axis() (ot.backend.numpybackend method)": [[71, "id316"], [71, "ot.backend.NumpyBackend.take_along_axis"]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[71, "id397"], [71, "ot.backend.TensorflowBackend.take_along_axis"]], "take_along_axis() (ot.backend.torchbackend method)": [[71, "id478"], [71, "ot.backend.TorchBackend.take_along_axis"]], "tile() (ot.backend.backend method)": [[71, "id73"], [71, "ot.backend.Backend.tile"]], "tile() (ot.backend.cupybackend method)": [[71, "id155"], [71, "ot.backend.CupyBackend.tile"]], "tile() (ot.backend.jaxbackend method)": [[71, "id236"], [71, "ot.backend.JaxBackend.tile"]], "tile() (ot.backend.numpybackend method)": [[71, "id317"], [71, "ot.backend.NumpyBackend.tile"]], "tile() (ot.backend.tensorflowbackend method)": [[71, "id398"], [71, "ot.backend.TensorflowBackend.tile"]], "tile() (ot.backend.torchbackend method)": [[71, "id479"], [71, "ot.backend.TorchBackend.tile"]], "to_numpy() (in module ot.backend)": [[71, "id490"], [71, "ot.backend.to_numpy"]], "to_numpy() (ot.backend.backend method)": [[71, "id74"], [71, "ot.backend.Backend.to_numpy"]], "tocsr() (ot.backend.backend method)": [[71, "id75"], [71, "ot.backend.Backend.tocsr"]], "tocsr() (ot.backend.cupybackend method)": [[71, "id156"], [71, "ot.backend.CupyBackend.tocsr"]], "tocsr() (ot.backend.jaxbackend method)": [[71, "id237"], [71, "ot.backend.JaxBackend.tocsr"]], "tocsr() (ot.backend.numpybackend method)": [[71, "id318"], [71, "ot.backend.NumpyBackend.tocsr"]], "tocsr() (ot.backend.tensorflowbackend method)": [[71, "id399"], [71, "ot.backend.TensorflowBackend.tocsr"]], "tocsr() (ot.backend.torchbackend method)": [[71, "id480"], [71, "ot.backend.TorchBackend.tocsr"]], "todense() (ot.backend.backend method)": [[71, "id76"], [71, "ot.backend.Backend.todense"]], "todense() (ot.backend.cupybackend method)": [[71, "id157"], [71, "ot.backend.CupyBackend.todense"]], "todense() (ot.backend.jaxbackend method)": [[71, "id238"], [71, "ot.backend.JaxBackend.todense"]], "todense() (ot.backend.numpybackend method)": [[71, "id319"], [71, "ot.backend.NumpyBackend.todense"]], "todense() (ot.backend.tensorflowbackend method)": [[71, "id400"], [71, "ot.backend.TensorflowBackend.todense"]], "todense() (ot.backend.torchbackend method)": [[71, "id481"], [71, "ot.backend.TorchBackend.todense"]], "trace() (ot.backend.backend method)": [[71, "id77"], [71, "ot.backend.Backend.trace"]], "trace() (ot.backend.cupybackend method)": [[71, "id158"], [71, "ot.backend.CupyBackend.trace"]], "trace() (ot.backend.jaxbackend method)": [[71, "id239"], [71, "ot.backend.JaxBackend.trace"]], "trace() (ot.backend.numpybackend method)": [[71, "id320"], [71, "ot.backend.NumpyBackend.trace"]], "trace() (ot.backend.tensorflowbackend method)": [[71, "id401"], [71, "ot.backend.TensorflowBackend.trace"]], "trace() (ot.backend.torchbackend method)": [[71, "id482"], [71, "ot.backend.TorchBackend.trace"]], "transpose() (ot.backend.backend method)": [[71, "id78"], [71, "ot.backend.Backend.transpose"]], "transpose() (ot.backend.cupybackend method)": [[71, "id159"], [71, "ot.backend.CupyBackend.transpose"]], "transpose() (ot.backend.jaxbackend method)": [[71, "id240"], [71, "ot.backend.JaxBackend.transpose"]], "transpose() (ot.backend.numpybackend method)": [[71, "id321"], [71, "ot.backend.NumpyBackend.transpose"]], "transpose() (ot.backend.tensorflowbackend method)": [[71, "id402"], [71, "ot.backend.TensorflowBackend.transpose"]], "transpose() (ot.backend.torchbackend method)": [[71, "id483"], [71, "ot.backend.TorchBackend.transpose"]], "unique() (ot.backend.backend method)": [[71, "id79"], [71, "ot.backend.Backend.unique"]], "unique() (ot.backend.cupybackend method)": [[71, "id160"], [71, "ot.backend.CupyBackend.unique"]], "unique() (ot.backend.jaxbackend method)": [[71, "id241"], [71, "ot.backend.JaxBackend.unique"]], "unique() (ot.backend.numpybackend method)": [[71, "id322"], [71, "ot.backend.NumpyBackend.unique"]], "unique() (ot.backend.tensorflowbackend method)": [[71, "id403"], [71, "ot.backend.TensorflowBackend.unique"]], "unique() (ot.backend.torchbackend method)": [[71, "id484"], [71, "ot.backend.TorchBackend.unique"]], "where() (ot.backend.backend method)": [[71, "id80"], [71, "ot.backend.Backend.where"]], "where() (ot.backend.cupybackend method)": [[71, "id161"], [71, "ot.backend.CupyBackend.where"]], "where() (ot.backend.jaxbackend method)": [[71, "id242"], [71, "ot.backend.JaxBackend.where"]], "where() (ot.backend.numpybackend method)": [[71, "id323"], [71, "ot.backend.NumpyBackend.where"]], "where() (ot.backend.tensorflowbackend method)": [[71, "id404"], [71, "ot.backend.TensorflowBackend.where"]], "where() (ot.backend.torchbackend method)": [[71, "id485"], [71, "ot.backend.TorchBackend.where"]], "zero_pad() (ot.backend.backend method)": [[71, "id81"], [71, "ot.backend.Backend.zero_pad"]], "zero_pad() (ot.backend.cupybackend method)": [[71, "id162"], [71, "ot.backend.CupyBackend.zero_pad"]], "zero_pad() (ot.backend.jaxbackend method)": [[71, "id243"], [71, "ot.backend.JaxBackend.zero_pad"]], "zero_pad() (ot.backend.numpybackend method)": [[71, "id324"], [71, "ot.backend.NumpyBackend.zero_pad"]], "zero_pad() (ot.backend.tensorflowbackend method)": [[71, "id405"], [71, "ot.backend.TensorflowBackend.zero_pad"]], "zero_pad() (ot.backend.torchbackend method)": [[71, "id486"], [71, "ot.backend.TorchBackend.zero_pad"]], "zeros() (ot.backend.backend method)": [[71, "id82"], [71, "ot.backend.Backend.zeros"]], "zeros() (ot.backend.cupybackend method)": [[71, "id163"], [71, "ot.backend.CupyBackend.zeros"]], "zeros() (ot.backend.jaxbackend method)": [[71, "id244"], [71, "ot.backend.JaxBackend.zeros"]], "zeros() (ot.backend.numpybackend method)": [[71, "id325"], [71, "ot.backend.NumpyBackend.zeros"]], "zeros() (ot.backend.tensorflowbackend method)": [[71, "id406"], [71, "ot.backend.TensorflowBackend.zeros"]], "zeros() (ot.backend.torchbackend method)": [[71, "id487"], [71, "ot.backend.TorchBackend.zeros"]], "barycenter() (in module ot.bregman)": [[72, "id0"], [72, "ot.bregman.barycenter"]], "barycenter_debiased() (in module ot.bregman)": [[72, "id43"], [72, "ot.bregman.barycenter_debiased"]], "barycenter_sinkhorn() (in module ot.bregman)": [[72, "id46"], [72, "ot.bregman.barycenter_sinkhorn"]], "barycenter_stabilized() (in module ot.bregman)": [[72, "id49"], [72, "ot.bregman.barycenter_stabilized"]], "convolutional_barycenter2d() (in module ot.bregman)": [[72, "id52"], [72, "ot.bregman.convolutional_barycenter2d"]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[72, "id56"], [72, "ot.bregman.convolutional_barycenter2d_debiased"]], "empirical_sinkhorn() (in module ot.bregman)": [[72, "id59"], [72, "ot.bregman.empirical_sinkhorn"]], "empirical_sinkhorn2() (in module ot.bregman)": [[72, "id63"], [72, "ot.bregman.empirical_sinkhorn2"]], "empirical_sinkhorn_divergence() (in module ot.bregman)": [[72, "id67"], [72, "ot.bregman.empirical_sinkhorn_divergence"]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[72, "id69"], [72, "ot.bregman.free_support_sinkhorn_barycenter"]], "geometricbar() (in module ot.bregman)": [[72, "id72"], [72, "ot.bregman.geometricBar"]], "geometricmean() (in module ot.bregman)": [[72, "id73"], [72, "ot.bregman.geometricMean"]], "greenkhorn() (in module ot.bregman)": [[72, "id74"], [72, "ot.bregman.greenkhorn"]], "jcpot_barycenter() (in module ot.bregman)": [[72, "id78"], [72, "ot.bregman.jcpot_barycenter"]], "ot.bregman": [[72, "module-ot.bregman"]], "projc() (in module ot.bregman)": [[72, "id81"], [72, "ot.bregman.projC"]], "projr() (in module ot.bregman)": [[72, "id82"], [72, "ot.bregman.projR"]], "screenkhorn() (in module ot.bregman)": [[72, "id83"], [72, "ot.bregman.screenkhorn"]], "sinkhorn() (in module ot.bregman)": [[72, "id87"], [72, "ot.bregman.sinkhorn"]], "sinkhorn2() (in module ot.bregman)": [[72, "id93"], [72, "ot.bregman.sinkhorn2"]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[72, "id100"], [72, "ot.bregman.sinkhorn_epsilon_scaling"]], "sinkhorn_knopp() (in module ot.bregman)": [[72, "id105"], [72, "ot.bregman.sinkhorn_knopp"]], "sinkhorn_log() (in module ot.bregman)": [[72, "id108"], [72, "ot.bregman.sinkhorn_log"]], "sinkhorn_stabilized() (in module ot.bregman)": [[72, "id112"], [72, "ot.bregman.sinkhorn_stabilized"]], "unmix() (in module ot.bregman)": [[72, "id117"], [72, "ot.bregman.unmix"]], "co_optimal_transport() (in module ot.coot)": [[73, "id0"], [73, "ot.coot.co_optimal_transport"]], "co_optimal_transport2() (in module ot.coot)": [[73, "id4"], [73, "ot.coot.co_optimal_transport2"]], "ot.coot": [[73, "module-ot.coot"]], "basetransport (class in ot.da)": [[74, "id0"], [74, "ot.da.BaseTransport"]], "emdlaplacetransport (class in ot.da)": [[74, "id41"], [74, "ot.da.EMDLaplaceTransport"]], "emdtransport (class in ot.da)": [[74, "id48"], [74, "ot.da.EMDTransport"]], "jcpottransport (class in ot.da)": [[74, "id54"], [74, "ot.da.JCPOTTransport"]], "lineargwtransport (class in ot.da)": [[74, "id67"], [74, "ot.da.LinearGWTransport"]], "lineartransport (class in ot.da)": [[74, "id71"], [74, "ot.da.LinearTransport"]], "mappingtransport (class in ot.da)": [[74, "id78"], [74, "ot.da.MappingTransport"]], "sinkhornl1l2transport (class in ot.da)": [[74, "id85"], [74, "ot.da.SinkhornL1l2Transport"]], "sinkhornlpl1transport (class in ot.da)": [[74, "id93"], [74, "ot.da.SinkhornLpl1Transport"]], "sinkhorntransport (class in ot.da)": [[74, "id100"], [74, "ot.da.SinkhornTransport"]], "unbalancedsinkhorntransport (class in ot.da)": [[74, "id108"], [74, "ot.da.UnbalancedSinkhornTransport"]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[74, "id42"], [74, "ot.da.EMDLaplaceTransport.coupling_"]], "coupling_ (ot.da.emdtransport attribute)": [[74, "id49"], [74, "ot.da.EMDTransport.coupling_"]], "coupling_ (ot.da.jcpottransport attribute)": [[74, "id55"], [74, "ot.da.JCPOTTransport.coupling_"]], "coupling_ (ot.da.mappingtransport attribute)": [[74, "id79"], [74, "ot.da.MappingTransport.coupling_"]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[74, "id86"], [74, "ot.da.SinkhornL1l2Transport.coupling_"]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[74, "id94"], [74, "ot.da.SinkhornLpl1Transport.coupling_"]], "coupling_ (ot.da.sinkhorntransport attribute)": [[74, "id101"], [74, "ot.da.SinkhornTransport.coupling_"]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[74, "id109"], [74, "ot.da.UnbalancedSinkhornTransport.coupling_"]], "distribution_estimation_uniform() (in module ot.da)": [[74, "id115"], [74, "ot.da.distribution_estimation_uniform"]], "emd_laplace() (in module ot.da)": [[74, "id116"], [74, "ot.da.emd_laplace"]], "fit() (ot.da.basetransport method)": [[74, "id33"], [74, "ot.da.BaseTransport.fit"]], "fit() (ot.da.emdlaplacetransport method)": [[74, "id47"], [74, "ot.da.EMDLaplaceTransport.fit"]], "fit() (ot.da.emdtransport method)": [[74, "id53"], [74, "ot.da.EMDTransport.fit"]], "fit() (ot.da.jcpottransport method)": [[74, "id61"], [74, "ot.da.JCPOTTransport.fit"]], "fit() (ot.da.lineargwtransport method)": [[74, "id70"], [74, "ot.da.LinearGWTransport.fit"]], "fit() (ot.da.lineartransport method)": [[74, "id75"], [74, "ot.da.LinearTransport.fit"]], "fit() (ot.da.mappingtransport method)": [[74, "id83"], [74, "ot.da.MappingTransport.fit"]], "fit() (ot.da.sinkhornl1l2transport method)": [[74, "id92"], [74, "ot.da.SinkhornL1l2Transport.fit"]], "fit() (ot.da.sinkhornlpl1transport method)": [[74, "id99"], [74, "ot.da.SinkhornLpl1Transport.fit"]], "fit() (ot.da.sinkhorntransport method)": [[74, "id107"], [74, "ot.da.SinkhornTransport.fit"]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[74, "id114"], [74, "ot.da.UnbalancedSinkhornTransport.fit"]], "fit_transform() (ot.da.basetransport method)": [[74, "id34"], [74, "ot.da.BaseTransport.fit_transform"]], "inverse_transform() (ot.da.basetransport method)": [[74, "id35"], [74, "ot.da.BaseTransport.inverse_transform"]], "inverse_transform() (ot.da.lineartransport method)": [[74, "id76"], [74, "ot.da.LinearTransport.inverse_transform"]], "inverse_transform_labels() (ot.da.basetransport method)": [[74, "id36"], [74, "ot.da.BaseTransport.inverse_transform_labels"]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[74, "id62"], [74, "ot.da.JCPOTTransport.inverse_transform_labels"]], "joint_ot_mapping_kernel() (in module ot.da)": [[74, "id120"], [74, "ot.da.joint_OT_mapping_kernel"]], "joint_ot_mapping_linear() (in module ot.da)": [[74, "id123"], [74, "ot.da.joint_OT_mapping_linear"]], "log_ (ot.da.jcpottransport attribute)": [[74, "id57"], [74, "ot.da.JCPOTTransport.log_"]], "log_ (ot.da.mappingtransport attribute)": [[74, "id81"], [74, "ot.da.MappingTransport.log_"]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[74, "id87"], [74, "ot.da.SinkhornL1l2Transport.log_"]], "log_ (ot.da.sinkhorntransport attribute)": [[74, "id102"], [74, "ot.da.SinkhornTransport.log_"]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[74, "id110"], [74, "ot.da.UnbalancedSinkhornTransport.log_"]], "mapping_ (ot.da.mappingtransport attribute)": [[74, "id80"], [74, "ot.da.MappingTransport.mapping_"]], "ot.da": [[74, "module-ot.da"]], "proportions_ (ot.da.jcpottransport attribute)": [[74, "id56"], [74, "ot.da.JCPOTTransport.proportions_"]], "sinkhorn_l1l2_gl() (in module ot.da)": [[74, "id126"], [74, "ot.da.sinkhorn_l1l2_gl"]], "sinkhorn_lpl1_mm() (in module ot.da)": [[74, "id130"], [74, "ot.da.sinkhorn_lpl1_mm"]], "transform() (ot.da.basetransport method)": [[74, "id37"], [74, "ot.da.BaseTransport.transform"]], "transform() (ot.da.jcpottransport method)": [[74, "id63"], [74, "ot.da.JCPOTTransport.transform"]], "transform() (ot.da.lineartransport method)": [[74, "id77"], [74, "ot.da.LinearTransport.transform"]], "transform() (ot.da.mappingtransport method)": [[74, "id84"], [74, "ot.da.MappingTransport.transform"]], "transform_labels() (ot.da.basetransport method)": [[74, "id38"], [74, "ot.da.BaseTransport.transform_labels"]], "transform_labels() (ot.da.jcpottransport method)": [[74, "id64"], [74, "ot.da.JCPOTTransport.transform_labels"]], "make_1d_gauss() (in module ot.datasets)": [[75, "id0"], [75, "ot.datasets.make_1D_gauss"]], "make_2d_samples_gauss() (in module ot.datasets)": [[75, "id1"], [75, "ot.datasets.make_2D_samples_gauss"]], "make_data_classif() (in module ot.datasets)": [[75, "id2"], [75, "ot.datasets.make_data_classif"]], "ot.datasets": [[75, "module-ot.datasets"]], "dist() (in module ot.dr)": [[76, "id0"], [76, "ot.dr.dist"]], "ewca() (in module ot.dr)": [[76, "id4"], [76, "ot.dr.ewca"]], "fda() (in module ot.dr)": [[76, "id7"], [76, "ot.dr.fda"]], "logsumexp() (in module ot.dr)": [[76, "id8"], [76, "ot.dr.logsumexp"]], "ot.dr": [[76, "module-ot.dr"]], "projection_robust_wasserstein() (in module ot.dr)": [[76, "id9"], [76, "ot.dr.projection_robust_wasserstein"]], "sinkhorn() (in module ot.dr)": [[76, "id12"], [76, "ot.dr.sinkhorn"]], "sinkhorn_log() (in module ot.dr)": [[76, "id13"], [76, "ot.dr.sinkhorn_log"]], "split_classes() (in module ot.dr)": [[76, "id14"], [76, "ot.dr.split_classes"]], "wda() (in module ot.dr)": [[76, "id15"], [76, "ot.dr.wda"]], "factored_optimal_transport() (in module ot.factored)": [[77, "id0"], [77, "ot.factored.factored_optimal_transport"]], "ot.factored": [[77, "module-ot.factored"]], "bures_wasserstein_distance() (in module ot.gaussian)": [[78, "id0"], [78, "ot.gaussian.bures_wasserstein_distance"]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[78, "id15"], [78, "ot.gaussian.bures_wasserstein_mapping"]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[78, "id19"], [78, "ot.gaussian.empirical_bures_wasserstein_distance"]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[78, "id22"], [78, "ot.gaussian.empirical_bures_wasserstein_mapping"]], "empirical_gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[78, "id26"], [78, "ot.gaussian.empirical_gaussian_gromov_wasserstein_distance"]], "empirical_gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[78, "id29"], [78, "ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping"]], "gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[78, "id31"], [78, "ot.gaussian.gaussian_gromov_wasserstein_distance"]], "gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[78, "id34"], [78, "ot.gaussian.gaussian_gromov_wasserstein_mapping"]], "ot.gaussian": [[78, "module-ot.gaussian"]], "fgw_distance_to_templates() (in module ot.gnn)": [[79, "ot.gnn.FGW_distance_to_templates"]], "tfgwpooling (class in ot.gnn)": [[79, "ot.gnn.TFGWPooling"]], "twpooling (class in ot.gnn)": [[79, "ot.gnn.TWPooling"]], "forward() (ot.gnn.tfgwpooling method)": [[79, "ot.gnn.TFGWPooling.forward"]], "forward() (ot.gnn.twpooling method)": [[79, "ot.gnn.TWPooling.forward"]], "ot.gnn": [[79, "module-ot.gnn"]], "wasserstein_distance_to_templates() (in module ot.gnn)": [[79, "ot.gnn.wasserstein_distance_to_templates"]], "gw_distance_estimation() (in module ot.gromov)": [[80, "ot.gromov.GW_distance_estimation"]], "entropic_fused_gromov_barycenters() (in module ot.gromov)": [[80, "ot.gromov.entropic_fused_gromov_barycenters"]], "entropic_fused_gromov_wasserstein() (in module ot.gromov)": [[80, "ot.gromov.entropic_fused_gromov_wasserstein"]], "entropic_fused_gromov_wasserstein2() (in module ot.gromov)": [[80, "ot.gromov.entropic_fused_gromov_wasserstein2"]], "entropic_gromov_barycenters() (in module ot.gromov)": [[80, "ot.gromov.entropic_gromov_barycenters"]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[80, "ot.gromov.entropic_gromov_wasserstein"]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[80, "ot.gromov.entropic_gromov_wasserstein2"]], "entropic_semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[80, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein"]], "entropic_semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[80, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein2"]], "entropic_semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[80, "ot.gromov.entropic_semirelaxed_gromov_wasserstein"]], "entropic_semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[80, "ot.gromov.entropic_semirelaxed_gromov_wasserstein2"]], "fgw_barycenters() (in module ot.gromov)": [[80, "ot.gromov.fgw_barycenters"]], "fused_gromov_wasserstein() (in module ot.gromov)": [[80, "ot.gromov.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[80, "ot.gromov.fused_gromov_wasserstein2"]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[80, "ot.gromov.fused_gromov_wasserstein_dictionary_learning"]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[80, "ot.gromov.fused_gromov_wasserstein_linear_unmixing"]], "gromov_barycenters() (in module ot.gromov)": [[80, "ot.gromov.gromov_barycenters"]], "gromov_wasserstein() (in module ot.gromov)": [[80, "ot.gromov.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot.gromov)": [[80, "ot.gromov.gromov_wasserstein2"]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[80, "ot.gromov.gromov_wasserstein_dictionary_learning"]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[80, "ot.gromov.gromov_wasserstein_linear_unmixing"]], "gwggrad() (in module ot.gromov)": [[80, "ot.gromov.gwggrad"]], "gwloss() (in module ot.gromov)": [[80, "ot.gromov.gwloss"]], "init_matrix() (in module ot.gromov)": [[80, "ot.gromov.init_matrix"]], "init_matrix_semirelaxed() (in module ot.gromov)": [[80, "ot.gromov.init_matrix_semirelaxed"]], "ot.gromov": [[80, "module-ot.gromov"]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[80, "ot.gromov.pointwise_gromov_wasserstein"]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[80, "ot.gromov.sampled_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[80, "ot.gromov.semirelaxed_fused_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[80, "ot.gromov.semirelaxed_fused_gromov_wasserstein2"]], "semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[80, "ot.gromov.semirelaxed_gromov_wasserstein"]], "semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[80, "ot.gromov.semirelaxed_gromov_wasserstein2"]], "solve_gromov_linesearch() (in module ot.gromov)": [[80, "ot.gromov.solve_gromov_linesearch"]], "solve_semirelaxed_gromov_linesearch() (in module ot.gromov)": [[80, "ot.gromov.solve_semirelaxed_gromov_linesearch"]], "tensor_product() (in module ot.gromov)": [[80, "ot.gromov.tensor_product"]], "update_feature_matrix() (in module ot.gromov)": [[80, "ot.gromov.update_feature_matrix"]], "update_kl_loss() (in module ot.gromov)": [[80, "ot.gromov.update_kl_loss"]], "update_square_loss() (in module ot.gromov)": [[80, "ot.gromov.update_square_loss"]], "barycenter() (in module ot.lp)": [[81, "ot.lp.barycenter"]], "binary_search_circle() (in module ot.lp)": [[81, "ot.lp.binary_search_circle"]], "center_ot_dual() (in module ot.lp)": [[81, "ot.lp.center_ot_dual"]], "check_number_threads() (in module ot.lp)": [[81, "ot.lp.check_number_threads"]], "dmmot_monge_1dgrid_loss() (in module ot.lp)": [[81, "ot.lp.dmmot_monge_1dgrid_loss"]], "dmmot_monge_1dgrid_optimize() (in module ot.lp)": [[81, "ot.lp.dmmot_monge_1dgrid_optimize"]], "emd() (in module ot.lp)": [[81, "id0"], [81, "ot.lp.emd"]], "emd2() (in module ot.lp)": [[81, "id17"], [81, "ot.lp.emd2"]], "emd2_1d() (in module ot.lp)": [[81, "ot.lp.emd2_1d"]], "emd_1d() (in module ot.lp)": [[81, "ot.lp.emd_1d"]], "estimate_dual_null_weights() (in module ot.lp)": [[81, "ot.lp.estimate_dual_null_weights"]], "free_support_barycenter() (in module ot.lp)": [[81, "id24"], [81, "ot.lp.free_support_barycenter"]], "generalized_free_support_barycenter() (in module ot.lp)": [[81, "id28"], [81, "ot.lp.generalized_free_support_barycenter"]], "ot.lp": [[81, "module-ot.lp"]], "semidiscrete_wasserstein2_unif_circle() (in module ot.lp)": [[81, "ot.lp.semidiscrete_wasserstein2_unif_circle"]], "wasserstein_1d() (in module ot.lp)": [[81, "ot.lp.wasserstein_1d"]], "wasserstein_circle() (in module ot.lp)": [[81, "ot.lp.wasserstein_circle"]], "cg() (in module ot.optim)": [[82, "id0"], [82, "ot.optim.cg"]], "gcg() (in module ot.optim)": [[82, "id13"], [82, "ot.optim.gcg"]], "generic_conditional_gradient() (in module ot.optim)": [[82, "id17"], [82, "ot.optim.generic_conditional_gradient"]], "line_search_armijo() (in module ot.optim)": [[82, "id23"], [82, "ot.optim.line_search_armijo"]], "ot.optim": [[82, "module-ot.optim"]], "semirelaxed_cg() (in module ot.optim)": [[82, "id24"], [82, "ot.optim.semirelaxed_cg"]], "solve_1d_linesearch_quad() (in module ot.optim)": [[82, "id27"], [82, "ot.optim.solve_1d_linesearch_quad"]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[83, "id0"], [83, "ot.partial.entropic_partial_gromov_wasserstein"]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[83, "id17"], [83, "ot.partial.entropic_partial_gromov_wasserstein2"]], "entropic_partial_wasserstein() (in module ot.partial)": [[83, "id21"], [83, "ot.partial.entropic_partial_wasserstein"]], "gwgrad_partial() (in module ot.partial)": [[83, "id24"], [83, "ot.partial.gwgrad_partial"]], "gwloss_partial() (in module ot.partial)": [[83, "id27"], [83, "ot.partial.gwloss_partial"]], "ot.partial": [[83, "module-ot.partial"]], "partial_gromov_wasserstein() (in module ot.partial)": [[83, "id28"], [83, "ot.partial.partial_gromov_wasserstein"]], "partial_gromov_wasserstein2() (in module ot.partial)": [[83, "id31"], [83, "ot.partial.partial_gromov_wasserstein2"]], "partial_wasserstein() (in module ot.partial)": [[83, "id34"], [83, "ot.partial.partial_wasserstein"]], "partial_wasserstein2() (in module ot.partial)": [[83, "id37"], [83, "ot.partial.partial_wasserstein2"]], "partial_wasserstein_lagrange() (in module ot.partial)": [[83, "id40"], [83, "ot.partial.partial_wasserstein_lagrange"]], "ot.plot": [[84, "module-ot.plot"]], "plot1d_mat() (in module ot.plot)": [[84, "id0"], [84, "ot.plot.plot1D_mat"]], "plot2d_samples_mat() (in module ot.plot)": [[84, "id1"], [84, "ot.plot.plot2D_samples_mat"]], "complement_schur() (in module ot.regpath)": [[85, "id0"], [85, "ot.regpath.complement_schur"]], "compute_next_removal() (in module ot.regpath)": [[85, "id12"], [85, "ot.regpath.compute_next_removal"]], "compute_transport_plan() (in module ot.regpath)": [[85, "id15"], [85, "ot.regpath.compute_transport_plan"]], "construct_augmented_h() (in module ot.regpath)": [[85, "id18"], [85, "ot.regpath.construct_augmented_H"]], "fully_relaxed_path() (in module ot.regpath)": [[85, "id19"], [85, "ot.regpath.fully_relaxed_path"]], "ot.regpath": [[85, "module-ot.regpath"]], "ot_next_gamma() (in module ot.regpath)": [[85, "id21"], [85, "ot.regpath.ot_next_gamma"]], "recast_ot_as_lasso() (in module ot.regpath)": [[85, "id23"], [85, "ot.regpath.recast_ot_as_lasso"]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[85, "id25"], [85, "ot.regpath.recast_semi_relaxed_as_lasso"]], "regularization_path() (in module ot.regpath)": [[85, "id26"], [85, "ot.regpath.regularization_path"]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[85, "id28"], [85, "ot.regpath.semi_relaxed_next_gamma"]], "semi_relaxed_path() (in module ot.regpath)": [[85, "id30"], [85, "ot.regpath.semi_relaxed_path"]], "get_random_projections() (in module ot.sliced)": [[86, "id0"], [86, "ot.sliced.get_random_projections"]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[86, "id5"], [86, "ot.sliced.max_sliced_wasserstein_distance"]], "ot.sliced": [[86, "module-ot.sliced"]], "sliced_wasserstein_distance() (in module ot.sliced)": [[86, "id7"], [86, "ot.sliced.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[86, "id9"], [86, "ot.sliced.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[86, "id11"], [86, "ot.sliced.sliced_wasserstein_sphere_unif"]], "negentropy (class in ot.smooth)": [[87, "id0"], [87, "ot.smooth.NegEntropy"]], "omega() (ot.smooth.negentropy method)": [[87, "id7"], [87, "ot.smooth.NegEntropy.Omega"]], "omega() (ot.smooth.regularization method)": [[87, "id11"], [87, "ot.smooth.Regularization.Omega"]], "omega() (ot.smooth.sparsityconstrained method)": [[87, "id15"], [87, "ot.smooth.SparsityConstrained.Omega"]], "omega() (ot.smooth.squaredl2 method)": [[87, "id19"], [87, "ot.smooth.SquaredL2.Omega"]], "regularization (class in ot.smooth)": [[87, "id10"], [87, "ot.smooth.Regularization"]], "sparsityconstrained (class in ot.smooth)": [[87, "id14"], [87, "ot.smooth.SparsityConstrained"]], "squaredl2 (class in ot.smooth)": [[87, "id18"], [87, "ot.smooth.SquaredL2"]], "delta_omega() (ot.smooth.negentropy method)": [[87, "id8"], [87, "ot.smooth.NegEntropy.delta_Omega"]], "delta_omega() (ot.smooth.regularization method)": [[87, "id12"], [87, "ot.smooth.Regularization.delta_Omega"]], "delta_omega() (ot.smooth.sparsityconstrained method)": [[87, "id16"], [87, "ot.smooth.SparsityConstrained.delta_Omega"]], "delta_omega() (ot.smooth.squaredl2 method)": [[87, "id20"], [87, "ot.smooth.SquaredL2.delta_Omega"]], "dual_obj_grad() (in module ot.smooth)": [[87, "id22"], [87, "ot.smooth.dual_obj_grad"]], "get_plan_from_dual() (in module ot.smooth)": [[87, "id23"], [87, "ot.smooth.get_plan_from_dual"]], "get_plan_from_semi_dual() (in module ot.smooth)": [[87, "id24"], [87, "ot.smooth.get_plan_from_semi_dual"]], "max_omega() (ot.smooth.negentropy method)": [[87, "id9"], [87, "ot.smooth.NegEntropy.max_Omega"]], "max_omega() (ot.smooth.regularization method)": [[87, "id13"], [87, "ot.smooth.Regularization.max_Omega"]], "max_omega() (ot.smooth.sparsityconstrained method)": [[87, "id17"], [87, "ot.smooth.SparsityConstrained.max_Omega"]], "max_omega() (ot.smooth.squaredl2 method)": [[87, "id21"], [87, "ot.smooth.SquaredL2.max_Omega"]], "ot.smooth": [[87, "module-ot.smooth"]], "projection_simplex() (in module ot.smooth)": [[87, "id25"], [87, "ot.smooth.projection_simplex"]], "semi_dual_obj_grad() (in module ot.smooth)": [[87, "id26"], [87, "ot.smooth.semi_dual_obj_grad"]], "smooth_ot_dual() (in module ot.smooth)": [[87, "id27"], [87, "ot.smooth.smooth_ot_dual"]], "smooth_ot_semi_dual() (in module ot.smooth)": [[87, "id32"], [87, "ot.smooth.smooth_ot_semi_dual"]], "solve_dual() (in module ot.smooth)": [[87, "id37"], [87, "ot.smooth.solve_dual"]], "solve_semi_dual() (in module ot.smooth)": [[87, "id38"], [87, "ot.smooth.solve_semi_dual"]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[88, "id0"], [88, "ot.stochastic.averaged_sgd_entropic_transport"]], "batch_grad_dual() (in module ot.stochastic)": [[88, "id14"], [88, "ot.stochastic.batch_grad_dual"]], "c_transform_entropic() (in module ot.stochastic)": [[88, "id16"], [88, "ot.stochastic.c_transform_entropic"]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[88, "id18"], [88, "ot.stochastic.coordinate_grad_semi_dual"]], "loss_dual_entropic() (in module ot.stochastic)": [[88, "id20"], [88, "ot.stochastic.loss_dual_entropic"]], "loss_dual_quadratic() (in module ot.stochastic)": [[88, "id22"], [88, "ot.stochastic.loss_dual_quadratic"]], "ot.stochastic": [[88, "module-ot.stochastic"]], "plan_dual_entropic() (in module ot.stochastic)": [[88, "id24"], [88, "ot.stochastic.plan_dual_entropic"]], "plan_dual_quadratic() (in module ot.stochastic)": [[88, "id26"], [88, "ot.stochastic.plan_dual_quadratic"]], "sag_entropic_transport() (in module ot.stochastic)": [[88, "id28"], [88, "ot.stochastic.sag_entropic_transport"]], "sgd_entropic_regularization() (in module ot.stochastic)": [[88, "id30"], [88, "ot.stochastic.sgd_entropic_regularization"]], "solve_dual_entropic() (in module ot.stochastic)": [[88, "id32"], [88, "ot.stochastic.solve_dual_entropic"]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[88, "id34"], [88, "ot.stochastic.solve_semi_dual_entropic"]], "barycenter_unbalanced() (in module ot.unbalanced)": [[89, "id0"], [89, "ot.unbalanced.barycenter_unbalanced"]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[89, "id25"], [89, "ot.unbalanced.barycenter_unbalanced_sinkhorn"]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[89, "id29"], [89, "ot.unbalanced.barycenter_unbalanced_stabilized"]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[89, "id33"], [89, "ot.unbalanced.lbfgsb_unbalanced"]], "mm_unbalanced() (in module ot.unbalanced)": [[89, "id35"], [89, "ot.unbalanced.mm_unbalanced"]], "mm_unbalanced2() (in module ot.unbalanced)": [[89, "id38"], [89, "ot.unbalanced.mm_unbalanced2"]], "ot.unbalanced": [[89, "module-ot.unbalanced"]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[89, "id40"], [89, "ot.unbalanced.sinkhorn_knopp_unbalanced"]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[89, "id44"], [89, "ot.unbalanced.sinkhorn_stabilized_unbalanced"]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[89, "id48"], [89, "ot.unbalanced.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[89, "id54"], [89, "ot.unbalanced.sinkhorn_unbalanced2"]], "baseestimator (class in ot.utils)": [[90, "id0"], [90, "ot.utils.BaseEstimator"]], "otresult (class in ot.utils)": [[90, "ot.utils.OTResult"]], "undefinedparameter": [[90, "ot.utils.UndefinedParameter"]], "a_to_b (ot.utils.otresult property)": [[90, "ot.utils.OTResult.a_to_b"]], "b_to_a (ot.utils.otresult property)": [[90, "ot.utils.OTResult.b_to_a"]], "check_params() (in module ot.utils)": [[90, "id3"], [90, "ot.utils.check_params"]], "check_random_state() (in module ot.utils)": [[90, "id4"], [90, "ot.utils.check_random_state"]], "citation (ot.utils.otresult property)": [[90, "ot.utils.OTResult.citation"]], "clean_zeros() (in module ot.utils)": [[90, "id5"], [90, "ot.utils.clean_zeros"]], "cost_normalization() (in module ot.utils)": [[90, "id6"], [90, "ot.utils.cost_normalization"]], "deprecated (class in ot.utils)": [[90, "id7"], [90, "ot.utils.deprecated"]], "dist() (in module ot.utils)": [[90, "id8"], [90, "ot.utils.dist"]], "dist0() (in module ot.utils)": [[90, "id9"], [90, "ot.utils.dist0"]], "dots() (in module ot.utils)": [[90, "id10"], [90, "ot.utils.dots"]], "euclidean_distances() (in module ot.utils)": [[90, "id11"], [90, "ot.utils.euclidean_distances"]], "get_coordinate_circle() (in module ot.utils)": [[90, "id12"], [90, "ot.utils.get_coordinate_circle"]], "get_params() (ot.utils.baseestimator method)": [[90, "id1"], [90, "ot.utils.BaseEstimator.get_params"]], "is_all_finite() (in module ot.utils)": [[90, "id13"], [90, "ot.utils.is_all_finite"]], "kernel() (in module ot.utils)": [[90, "id14"], [90, "ot.utils.kernel"]], "label_normalization() (in module ot.utils)": [[90, "id15"], [90, "ot.utils.label_normalization"]], "laplacian() (in module ot.utils)": [[90, "id16"], [90, "ot.utils.laplacian"]], "lazy_plan (ot.utils.otresult property)": [[90, "ot.utils.OTResult.lazy_plan"]], "list_to_array() (in module ot.utils)": [[90, "id17"], [90, "ot.utils.list_to_array"]], "marginal_a (ot.utils.otresult property)": [[90, "ot.utils.OTResult.marginal_a"]], "marginal_b (ot.utils.otresult property)": [[90, "ot.utils.OTResult.marginal_b"]], "marginals (ot.utils.otresult property)": [[90, "ot.utils.OTResult.marginals"]], "ot.utils": [[90, "module-ot.utils"]], "parmap() (in module ot.utils)": [[90, "id18"], [90, "ot.utils.parmap"]], "plan (ot.utils.otresult property)": [[90, "ot.utils.OTResult.plan"]], "potential_a (ot.utils.otresult property)": [[90, "ot.utils.OTResult.potential_a"]], "potential_b (ot.utils.otresult property)": [[90, "ot.utils.OTResult.potential_b"]], "potentials (ot.utils.otresult property)": [[90, "ot.utils.OTResult.potentials"]], "proj_simplex() (in module ot.utils)": [[90, "id19"], [90, "ot.utils.proj_simplex"]], "projection_sparse_simplex() (in module ot.utils)": [[90, "id20"], [90, "ot.utils.projection_sparse_simplex"]], "set_params() (ot.utils.baseestimator method)": [[90, "id2"], [90, "ot.utils.BaseEstimator.set_params"]], "sparse_plan (ot.utils.otresult property)": [[90, "ot.utils.OTResult.sparse_plan"]], "status (ot.utils.otresult property)": [[90, "ot.utils.OTResult.status"]], "tic() (in module ot.utils)": [[90, "id21"], [90, "ot.utils.tic"]], "toc() (in module ot.utils)": [[90, "id22"], [90, "ot.utils.toc"]], "toq() (in module ot.utils)": [[90, "id23"], [90, "ot.utils.toq"]], "unif() (in module ot.utils)": [[90, "id24"], [90, "ot.utils.unif"]], "value (ot.utils.otresult property)": [[90, "ot.utils.OTResult.value"]], "value_linear (ot.utils.otresult property)": [[90, "ot.utils.OTResult.value_linear"]], "ot.weak": [[91, "module-ot.weak"]], "weak_optimal_transport() (in module ot.weak)": [[91, "id0"], [91, "ot.weak.weak_optimal_transport"]]}})