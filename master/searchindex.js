Search.setIndex({"docnames": ["all", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_entropic_semirelaxed_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_fgw_solvers", "auto_examples/gromov/plot_gnn_TFGW", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/plot_semirelaxed_fgw", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_COOT", "auto_examples/others/plot_EWCA", "auto_examples/others/plot_SSNB", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_dmmot", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_learning_weights_with_COOT", "auto_examples/others/plot_logo", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_compute_wasserstein_circle", "auto_examples/plot_optim_OTreg", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "code_of_conduct", "contributing", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.coot", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gnn", "gen_modules/ot.gromov", "gen_modules/ot.lp", "gen_modules/ot.mapping", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "quickstart", "releases"], "filenames": ["all.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_entropic_semirelaxed_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_fgw_solvers.rst", "auto_examples/gromov/plot_gnn_TFGW.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/plot_semirelaxed_fgw.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_COOT.rst", "auto_examples/others/plot_EWCA.rst", "auto_examples/others/plot_SSNB.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_dmmot.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_learning_weights_with_COOT.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_compute_wasserstein_circle.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "code_of_conduct.rst", "contributing.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.coot.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gnn.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.mapping.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "quickstart.rst", "releases.rst"], "titles": ["API and modules", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example", "Plot Fused-Gromov-Wasserstein", "Comparison of Fused Gromov-Wasserstein solvers", "Graph classification with Tempate Based Fused Gromov Wasserstein", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Semi-relaxed (Fused) Gromov-Wasserstein example", "Computation times", "Examples gallery", "Row and column alignments with CO-Optimal Transport", "Entropic Wasserstein Component Analysis", "Smooth and Strongly Convex Nearest Brenier Potentials", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Computing d-dimensional Barycenters via d-MMOT", "Optimal transport with factored couplings", "Learning sample marginal distribution with CO-Optimal Transport", "Logo of the POT toolbox", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth and sparse OT example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different ground metrics", "OT distances in 1D", "OT distance on the Circle", "Regularized OT with generic solver", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Code of conduct", "Contributing to POT", "Contributors", "ot.backend", "ot.bregman", "ot.coot", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gnn", "ot.gromov", "ot.lp", "ot.mapping", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Quick start guide", "Releases"], "terms": {"The": [0, 2, 7, 10, 12, 26, 28, 33, 34, 35, 41, 43, 44, 46, 51, 54, 57, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 94, 95, 96], "list": [0, 5, 10, 28, 64, 70, 72, 73, 74, 75, 78, 80, 81, 82, 87, 90, 92, 93, 94, 96], "automat": [0, 6, 7, 46, 82, 95, 96], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 72, 73, 75, 77, 80, 82, 83, 85, 86, 87, 91, 92, 94, 95, 96], "sub": [0, 87, 94, 95], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 51, 54, 56, 57, 60, 61, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "follow": [0, 6, 7, 8, 11, 34, 46, 51, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 94, 95, 96], "lp": [0, 7, 14, 16, 17, 38, 44, 57, 73, 74, 75, 76, 83, 84, 89, 91, 92, 94, 95, 96], "bregman": [0, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 31, 33, 48, 51, 54, 58, 75, 77, 78, 82, 84, 85, 91, 93, 94, 96], "optim": [0, 1, 3, 5, 8, 9, 14, 19, 24, 25, 28, 29, 30, 31, 32, 33, 36, 38, 41, 42, 44, 49, 50, 58, 59, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93, 96], "util": [0, 2, 6, 7, 10, 11, 13, 32, 44, 46, 49, 51, 64, 72, 82, 83, 95], "dataset": [0, 1, 7, 8, 10, 11, 13, 18, 20, 21, 22, 24, 26, 28, 33, 40, 41, 42, 43, 44, 48, 52, 53, 54, 56, 58, 60, 63, 64, 65, 66, 67, 77, 81, 90, 95, 96], "gromov": [0, 9, 28, 37, 68, 71, 75, 76, 79, 80, 84, 85, 92, 94, 96], "smooth": [0, 11, 38, 50, 59, 71, 75, 76, 83, 86, 94, 95, 96], "stochast": [0, 1, 2, 5, 32, 38, 50, 71, 73, 81, 86, 94, 95, 96], "partial": [0, 64, 67, 68, 71, 76, 90, 94, 96], "regpath": 0, "unbalanc": [0, 68, 71, 73, 75, 76, 85, 86, 87, 92, 94, 96], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 92, 96], "mod": 0, "map": [0, 1, 5, 27, 38, 41, 49, 67, 71, 75, 76, 79, 81, 82, 90, 92, 94, 96], "ar": [0, 7, 12, 14, 20, 26, 28, 29, 31, 34, 35, 36, 41, 43, 44, 46, 49, 51, 53, 54, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "due": [0, 75, 82, 95, 96], "addit": [0, 70, 74, 82, 87, 94, 95], "depend": [0, 35, 72, 80, 81, 83, 84, 95, 96], "dr": [0, 40, 42, 94, 95], "pymanopt": [0, 77, 94, 95], "autograd": [0, 4, 77, 94, 95, 96], "plot": [0, 2, 7, 10, 11, 13, 29, 31, 35, 36, 37, 38, 41, 44, 46, 58, 95, 96], "matplotlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 96], "barycent": [0, 9, 17, 37, 50, 60, 68, 71, 73, 75, 76, 81, 82, 88, 91, 92, 94, 96], "A": [0, 3, 10, 11, 12, 13, 16, 23, 24, 25, 26, 28, 40, 42, 44, 48, 49, 51, 58, 64, 70, 73, 75, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96], "m": [0, 2, 6, 7, 8, 10, 11, 13, 20, 21, 24, 25, 29, 30, 31, 32, 35, 36, 42, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 56, 58, 61, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "reg": [0, 1, 5, 10, 11, 12, 13, 15, 18, 19, 20, 21, 31, 33, 35, 40, 42, 49, 51, 53, 54, 56, 58, 64, 65, 66, 67, 73, 75, 77, 78, 79, 81, 82, 84, 85, 87, 89, 90, 91, 94, 95], "weight": [0, 10, 11, 12, 13, 14, 15, 16, 29, 31, 35, 36, 43, 44, 46, 51, 54, 64, 66, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96], "none": [0, 2, 5, 13, 15, 28, 29, 30, 31, 32, 35, 36, 39, 40, 46, 51, 57, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96], "method": [0, 7, 13, 28, 31, 41, 49, 70, 73, 74, 75, 77, 81, 82, 83, 89, 90, 91, 92, 94, 95, 96], "sinkhorn": [0, 8, 14, 17, 18, 20, 22, 31, 33, 38, 48, 58, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 84, 89, 91, 92, 93, 94, 96], "numitermax": [0, 14, 15, 18, 20, 21, 31, 33, 49, 51, 58, 73, 75, 78, 81, 82, 83, 84, 85, 89, 90, 91, 93], "10000": [0, 72, 73, 81, 90], "stopthr": [0, 73, 75, 77, 78, 81, 82, 83, 84, 85, 89, 91, 93, 96], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95], "0001": [0, 73, 84, 87], "verbos": [0, 18, 21, 24, 25, 30, 31, 33, 35, 39, 44, 46, 48, 52, 58, 63, 65, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 89, 91, 93], "fals": [0, 13, 25, 28, 29, 31, 32, 35, 36, 40, 44, 46, 48, 57, 61, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93], "log": [0, 13, 21, 28, 29, 30, 31, 33, 35, 36, 39, 44, 46, 49, 58, 60, 61, 65, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96], "warn": [0, 2, 15, 18, 20, 21, 22, 26, 31, 33, 34, 35, 48, 51, 58, 64, 70, 73, 75, 92, 96], "true": [0, 1, 2, 3, 4, 6, 7, 8, 10, 13, 16, 18, 21, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 39, 42, 44, 46, 47, 48, 49, 51, 52, 58, 61, 63, 65, 66, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95, 96], "kwarg": [0, 73, 75, 76, 78, 81, 83, 84, 85, 86, 91, 92, 93], "sourc": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "comput": [0, 2, 6, 7, 8, 11, 35, 38, 41, 46, 48, 52, 53, 57, 60, 61, 63, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 94, 96], "entrop": [0, 9, 15, 17, 31, 33, 37, 38, 50, 65, 68, 73, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 89, 90, 91, 92, 93, 94, 96], "regular": [0, 9, 10, 12, 15, 17, 18, 19, 20, 21, 25, 27, 31, 33, 35, 37, 41, 48, 59, 64, 68, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96], "wasserstein": [0, 9, 17, 37, 44, 50, 56, 62, 68, 71, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 88, 91, 92, 94, 96], "distribut": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 17, 23, 24, 27, 30, 34, 38, 41, 43, 45, 50, 51, 55, 56, 57, 58, 59, 62, 66, 67, 68, 71, 73, 74, 75, 76, 78, 79, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96], "mathbf": [0, 6, 29, 35, 36, 40, 51, 67, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93], "solv": [0, 2, 20, 26, 41, 46, 47, 67, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 96], "problem": [0, 6, 7, 8, 10, 11, 20, 21, 26, 41, 44, 46, 47, 64, 67, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96], "mathop": [0, 73, 74, 75, 77, 78, 81, 82, 84, 85, 89, 90, 91, 92, 93], "arg": [0, 72, 73, 74, 75, 77, 78, 81, 82, 84, 85, 89, 90, 91, 92, 93, 95], "min": [0, 29, 31, 35, 40, 42, 51, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 95], "_": [0, 24, 35, 39, 41, 46, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95], "quad": [0, 6, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 95], "sum_i": [0, 30, 72, 73, 82, 89, 90, 91, 92, 93, 95], "w_": [0, 35, 73, 81, 82, 91], "_i": [0, 40, 73, 77, 82, 87, 89, 90, 91, 92, 93], "where": [0, 4, 6, 7, 28, 35, 41, 46, 49, 51, 67, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 95, 96], "cdot": [0, 40, 67, 73, 75, 77, 82, 83, 84, 85, 90, 91, 95], "distanc": [0, 3, 8, 9, 28, 29, 32, 34, 35, 36, 39, 51, 59, 61, 62, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 85, 88, 89, 91, 92, 94, 96], "see": [0, 2, 5, 8, 51, 70, 72, 73, 75, 76, 77, 79, 81, 82, 83, 85, 87, 89, 90, 91, 95, 96], "sinkhorn_stabil": [0, 73, 75, 91, 95], "sinkhorn_log": [0, 73, 74, 77, 95, 96], "train": [0, 19, 25, 42, 46, 73, 75, 76, 77, 80, 82, 91, 95, 96], "column": [0, 6, 29, 31, 36, 38, 50, 53, 73, 74, 82, 87, 89, 91], "matrix": [0, 2, 6, 8, 10, 11, 13, 19, 23, 25, 28, 34, 35, 43, 44, 46, 54, 55, 56, 58, 64, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "respect": [0, 6, 16, 32, 35, 51, 69, 72, 73, 74, 75, 77, 80, 81, 82, 83, 91, 94, 95, 96], "term": [0, 8, 41, 54, 58, 73, 74, 75, 77, 81, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96], "cost": [0, 20, 26, 33, 39, 42, 43, 44, 46, 48, 49, 52, 53, 54, 55, 63, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "algorithm": [0, 15, 31, 33, 34, 44, 48, 64, 70, 73, 74, 75, 77, 78, 81, 82, 83, 84, 89, 90, 91, 93, 94, 95, 96], "us": [0, 2, 3, 6, 7, 8, 10, 11, 19, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 46, 47, 49, 51, 52, 58, 63, 64, 65, 67, 69, 70, 72, 73, 78, 80, 81, 88, 93, 96], "knopp": [0, 71, 72, 73, 91, 94, 95, 96], "scale": [0, 29, 31, 34, 36, 40, 47, 49, 64, 73, 75, 82, 83, 89, 90, 91, 92, 94, 95, 96], "propos": [0, 3, 6, 8, 10, 11, 13, 16, 32, 40, 42, 58, 60, 61, 64, 73, 75, 78, 79, 81, 82, 83, 85, 90, 91, 93, 95, 96], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 28, 30, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 73, 75, 82, 83, 84, 85, 87, 88, 91, 92, 94, 95], "paramet": [0, 2, 5, 6, 7, 8, 12, 18, 20, 21, 28, 30, 31, 32, 33, 34, 35, 45, 48, 57, 58, 63, 64, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "arrai": [0, 2, 6, 7, 10, 11, 12, 13, 15, 16, 21, 23, 28, 33, 34, 35, 40, 43, 47, 51, 54, 60, 64, 65, 66, 67, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96], "like": [0, 2, 51, 70, 71, 72, 73, 74, 75, 78, 79, 81, 82, 83, 84, 90, 91, 92, 93, 96], "shape": [0, 2, 3, 4, 7, 10, 11, 13, 14, 16, 19, 21, 23, 25, 26, 28, 29, 30, 31, 34, 35, 36, 42, 47, 51, 64, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "dim": [0, 4, 32, 34, 73, 82, 88, 91, 92], "n_hist": [0, 73, 82, 91], "size": [0, 4, 6, 8, 15, 19, 25, 29, 31, 32, 35, 36, 39, 41, 51, 57, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 87, 90, 92, 96], "loss": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 18, 24, 25, 30, 31, 32, 35, 43, 46, 54, 55, 58, 64, 65, 66, 67, 73, 75, 81, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96], "float": [0, 1, 5, 6, 7, 8, 12, 28, 34, 44, 46, 51, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "str": [0, 31, 33, 35, 51, 65, 67, 73, 75, 76, 77, 81, 82, 83, 89, 90, 91, 92], "option": [0, 51, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96], "solver": [0, 9, 11, 30, 33, 37, 38, 44, 47, 52, 59, 71, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96], "either": [0, 24, 67, 73, 75, 77, 81, 82, 91], "each": [0, 6, 8, 28, 31, 32, 35, 51, 73, 74, 75, 80, 81, 82, 83, 89, 90, 91, 92, 94, 95, 96], "histogram": [0, 46, 73, 74, 76, 78, 82, 85, 87, 89, 91, 92, 93, 94, 95, 96], "simplex": [0, 2, 6, 7, 35, 46, 73, 82, 89, 92, 94, 95], "barycentr": [0, 24, 41, 73, 75, 82, 83, 91, 95], "coodin": [0, 73, 91], "int": [0, 2, 32, 34, 35, 40, 41, 60, 61, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 95], "max": [0, 10, 11, 13, 29, 31, 33, 34, 35, 36, 40, 43, 48, 51, 52, 53, 55, 56, 57, 58, 63, 64, 66, 67, 72, 73, 75, 78, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "number": [0, 1, 5, 6, 8, 14, 15, 16, 18, 20, 21, 28, 30, 31, 33, 34, 35, 48, 51, 58, 70, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "iter": [0, 1, 2, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 31, 33, 34, 39, 41, 42, 44, 46, 51, 58, 64, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 93, 94, 95, 96], "stop": [0, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 89, 91, 93], "threshold": [0, 28, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 89, 91, 93, 95], "error": [0, 7, 22, 28, 31, 33, 35, 64, 70, 72, 73, 75, 77, 81, 82, 83, 85, 89, 91, 94, 95, 96], "bool": [0, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93], "print": [0, 1, 2, 4, 5, 6, 8, 29, 31, 32, 33, 35, 36, 39, 44, 46, 49, 51, 65, 70, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 89, 91, 93, 96], "inform": [0, 24, 25, 32, 35, 39, 46, 48, 49, 69, 70, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95], "along": [0, 2, 6, 7, 72, 73, 75, 77, 78, 81, 82, 83, 84, 85, 87, 89, 91, 92, 93], "record": [0, 7, 70, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 89, 90, 91, 93], "rais": [0, 70, 72, 73, 82, 85, 92, 96], "doesn": [0, 73], "t": [0, 6, 7, 10, 11, 13, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 46, 47, 51, 57, 61, 64, 66, 67, 73, 74, 75, 77, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "converg": [0, 2, 15, 18, 20, 21, 31, 33, 34, 51, 58, 73, 75, 81, 82, 84, 94, 95, 96], "return": [0, 2, 3, 4, 5, 6, 8, 16, 19, 23, 25, 28, 29, 31, 32, 33, 34, 36, 51, 57, 58, 66, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "dict": [0, 35, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93], "dictionari": [0, 2, 37, 38, 71, 73, 74, 75, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96], "onli": [0, 6, 14, 30, 41, 51, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96], "benam": [0, 10, 11, 73, 85, 91, 94, 95], "j": [0, 2, 10, 11, 12, 16, 19, 21, 25, 29, 30, 31, 34, 35, 36, 39, 40, 46, 47, 51, 58, 66, 67, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 94, 95], "d": [0, 10, 11, 14, 22, 23, 28, 31, 33, 35, 38, 41, 50, 51, 58, 65, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95], "carlier": [0, 10, 11, 73, 82, 85, 91, 94, 95], "g": [0, 4, 8, 10, 11, 19, 21, 25, 28, 29, 30, 31, 32, 35, 36, 41, 44, 48, 49, 51, 52, 54, 58, 63, 64, 66, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94], "cuturi": [0, 8, 10, 11, 13, 31, 33, 41, 42, 49, 71, 73, 75, 77, 79, 81, 82, 83, 85, 89, 90, 91, 94, 95], "nenna": [0, 10, 11, 73, 85, 91, 94, 95], "l": [0, 8, 10, 11, 13, 30, 31, 33, 41, 61, 64, 66, 73, 74, 75, 77, 81, 82, 83, 85, 87, 88, 89, 91, 94, 95], "peyr\u00e9": [0, 8, 10, 11, 31, 33, 49, 58, 64, 71, 73, 75, 79, 81, 82, 84, 85, 90, 91, 94, 95], "2015": [0, 3, 10, 11, 58, 60, 73, 75, 84, 85, 88, 91, 94, 95], "project": [0, 2, 3, 4, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 28, 29, 31, 33, 35, 36, 44, 46, 48, 51, 57, 58, 64, 65, 69, 70, 71, 73, 75, 77, 79, 81, 82, 83, 85, 88, 89, 91, 92, 94, 95, 96], "transport": [0, 3, 5, 10, 11, 25, 28, 29, 31, 32, 33, 36, 38, 41, 50, 58, 59, 64, 65, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 96], "siam": [0, 10, 11, 19, 25, 58, 73, 75, 82, 84, 85, 91, 94, 95], "journal": [0, 3, 10, 11, 19, 25, 33, 58, 60, 73, 75, 79, 81, 82, 84, 85, 88, 91, 93, 94, 95, 96], "scientif": [0, 10, 11, 73, 85, 91, 94, 95, 96], "37": [0, 5, 10, 11, 13, 44, 58, 73, 82, 85, 91, 94, 95, 96], "2": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 30, 32, 33, 34, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "a1111": [0, 10, 11, 73, 85, 91, 94, 95], "a1138": [0, 10, 11, 73, 85, 91, 94, 95], "barycenter_unbalanc": [0, 64, 91, 95], "reg_m": [0, 67, 75, 85, 91, 95], "1000": [0, 5, 8, 14, 21, 23, 42, 44, 46, 49, 57, 72, 73, 75, 77, 81, 85, 91], "1e": [0, 2, 7, 8, 10, 11, 13, 15, 18, 19, 20, 21, 24, 25, 26, 30, 34, 44, 46, 47, 51, 52, 53, 54, 56, 58, 64, 66, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 96], "06": [0, 24, 31, 42, 49, 52, 58, 62, 73, 74, 75, 77, 79, 82, 83, 85, 91], "u_": [0, 88, 91], "sinkhorn_unbalanc": [0, 63, 67, 91, 95], "reg_mi": [0, 91], "margin": [0, 31, 33, 38, 50, 66, 71, 73, 74, 81, 82, 83, 85, 87, 91, 92, 94, 95, 96], "relax": [0, 37, 38, 41, 63, 71, 75, 81, 84, 87, 89, 91, 94, 95, 96], "hyperparamet": [0, 91], "gener": [0, 3, 7, 11, 12, 13, 17, 33, 34, 38, 39, 41, 47, 49, 51, 55, 57, 59, 65, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96], "10": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 18, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 46, 48, 50, 52, 53, 57, 58, 60, 61, 63, 64, 65, 66, 67, 73, 75, 77, 81, 82, 83, 84, 89, 91, 94, 95], "dimens": [0, 7, 34, 42, 72, 73, 77, 80, 81, 82, 85, 87, 88, 91, 96], "ground": [0, 38, 56, 59, 73, 75, 82, 86, 89, 90, 91, 94, 95], "metric": [0, 20, 21, 33, 38, 44, 47, 51, 56, 59, 65, 73, 75, 81, 82, 84, 85, 86, 87, 90, 91, 92, 94, 95, 96], "entropi": [0, 48, 63, 72, 73, 77, 81, 89, 91, 94, 95], "If": [0, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 91, 92, 93, 94, 95, 96], "uniform": [0, 4, 6, 35, 41, 43, 45, 48, 51, 54, 60, 61, 66, 67, 72, 73, 74, 75, 78, 80, 81, 82, 83, 88, 91, 92, 93, 95, 96], "chizat": [0, 64, 73, 75, 85, 91, 94, 95], "schmitzer": [0, 64, 73, 75, 85, 91, 94, 95], "b": [0, 6, 7, 11, 14, 21, 22, 23, 26, 30, 33, 34, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 72, 73, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "vialard": [0, 64, 73, 75, 85, 91, 94, 95], "f": [0, 3, 4, 10, 13, 19, 25, 29, 30, 32, 35, 36, 40, 41, 46, 49, 51, 58, 61, 64, 72, 73, 74, 75, 77, 80, 81, 82, 84, 85, 88, 90, 91, 92, 94, 95, 96], "x": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 48, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "2016": [0, 11, 24, 25, 31, 33, 42, 49, 64, 73, 75, 77, 81, 82, 83, 85, 90, 91, 94, 95, 96], "arxiv": [0, 16, 55, 58, 64, 73, 75, 77, 82, 84, 89, 91, 92, 94, 95], "preprin": [0, 91], "1607": [0, 64, 73, 75, 91, 94, 95], "05816": [0, 64, 73, 75, 91, 94, 95], "binary_search_circl": [0, 82], "u_valu": [0, 82], "v_valu": [0, 82], "u_weight": [0, 82], "v_weight": [0, 82], "p": [0, 2, 4, 7, 21, 28, 29, 30, 31, 33, 34, 35, 36, 42, 47, 51, 57, 61, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 81, 82, 85, 88, 89, 92, 93, 94, 95], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95], "lm": [0, 82], "tm": [0, 57, 82], "tp": [0, 57, 66, 82], "ep": [0, 8, 13, 34, 72, 75, 82], "require_sort": [0, 82], "circl": [0, 38, 42, 51, 59, 71, 82, 92, 94], "binari": [0, 35, 76, 82], "search": [0, 28, 29, 36, 51, 73, 81, 82, 84, 94, 95, 96], "44": [0, 58, 82, 85, 94, 96], "sampl": [0, 1, 6, 19, 25, 35, 38, 41, 42, 43, 45, 47, 49, 50, 51, 54, 57, 60, 61, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96], "need": [0, 41, 44, 51, 70, 72, 73, 77, 80, 82, 83, 86, 95, 96], "": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 25, 26, 29, 30, 31, 33, 34, 35, 36, 38, 40, 44, 46, 48, 51, 52, 53, 56, 57, 58, 62, 63, 64, 66, 67, 69, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 96], "cong": [0, 82], "thei": [0, 69, 80, 82, 95, 96], "mathbb": [0, 41, 73, 81, 82, 83, 88, 90, 92, 95], "r": [0, 3, 4, 7, 8, 10, 11, 13, 21, 24, 25, 29, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 48, 49, 51, 52, 53, 56, 57, 58, 61, 63, 64, 65, 66, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 94, 95, 96], "take": [0, 57, 69, 82, 83, 84, 87, 90, 91, 95, 96], "valu": [0, 2, 7, 26, 28, 30, 34, 35, 44, 51, 56, 57, 64, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 95, 96], "modulo": [0, 82], "subset": [0, 32, 82, 83, 92], "requir": [0, 28, 41, 72, 75, 81, 82, 83, 92, 94, 95, 96], "first": [0, 2, 3, 29, 30, 32, 33, 35, 36, 41, 70, 72, 73, 74, 75, 81, 82, 83, 87, 89, 92, 94, 95], "find": [0, 28, 34, 49, 72, 82, 83, 84, 94, 95, 96], "coordin": [0, 12, 30, 34, 72, 74, 77, 81, 82, 83, 90, 91, 92, 94, 95], "e": [0, 46, 69, 73, 80, 81, 82, 83, 88, 92, 94, 95], "atan2": [0, 72, 82, 92], "w_p": [0, 82, 88, 95], "u": [0, 1, 2, 3, 5, 6, 14, 40, 41, 46, 51, 61, 64, 70, 73, 77, 82, 83, 85, 88, 90, 91, 92, 94, 95, 96], "v": [0, 1, 5, 17, 22, 27, 28, 29, 31, 36, 38, 40, 49, 50, 51, 61, 64, 72, 73, 75, 76, 82, 83, 86, 88, 89, 90, 91, 92, 94, 95, 96], "inf_": [0, 82], "theta": [0, 1, 5, 8, 24, 57, 73, 76, 82, 88], "int_0": [0, 82], "f_u": [0, 82], "q": [0, 30, 31, 33, 35, 64, 65, 72, 73, 74, 81, 82, 85, 87, 92, 95], "f_v": [0, 82], "mathrm": [0, 4, 41, 57, 67, 73, 75, 77, 81, 82, 84, 85, 88, 89, 90, 91, 92], "cdf": [0, 82], "For": [0, 26, 31, 33, 35, 49, 51, 65, 70, 73, 74, 81, 82, 83, 84, 87, 90, 91, 92, 95, 96], "x_1": [0, 39, 41, 51, 82, 83, 92], "x_2": [0, 39, 41, 51, 82, 92], "get": [0, 2, 29, 31, 34, 35, 36, 73, 75, 77, 81, 82, 92, 94, 95, 96], "frac": [0, 4, 39, 46, 72, 73, 75, 77, 81, 82, 85, 87, 88, 89, 90, 92, 93, 95], "pi": [0, 1, 5, 8, 16, 23, 24, 28, 39, 40, 42, 46, 55, 57, 61, 77, 82, 83, 90, 92, 96], "get_coordinate_circl": [0, 82, 92], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 72, 82, 88, 94, 96], "backend": [0, 2, 3, 5, 6, 7, 31, 33, 46, 51, 71, 73, 75, 78, 81, 82, 83, 84, 88, 90, 91, 92, 93, 94, 96], "tensorflow": [0, 72, 82, 88, 94, 95, 96], "jax": [0, 72, 82, 88, 92, 94, 95, 96], "support": [0, 3, 5, 7, 17, 18, 38, 71, 73, 74, 78, 82, 88, 96], "ndarrai": [0, 28, 34, 72, 73, 76, 77, 82, 84, 85, 86, 87, 88, 89, 90, 92], "n": [0, 2, 4, 6, 7, 8, 10, 11, 13, 14, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 43, 44, 45, 46, 48, 49, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95], "domain": [0, 26, 27, 29, 31, 58, 73, 75, 76, 77, 79, 81, 82, 83, 84, 86, 88, 89, 91, 92, 94, 96], "target": [0, 1, 6, 7, 8, 23, 24, 27, 34, 38, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 66, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "default": [0, 2, 34, 35, 41, 51, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96], "power": [0, 51, 72, 82, 88], "lower": [0, 14, 18, 22, 33, 41, 51, 75, 82, 83], "bound": [0, 41, 75, 82, 83, 94, 96], "dc": [0, 82], "upper": [0, 40, 41, 63, 75, 82, 83], "condit": [0, 30, 31, 33, 58, 71, 72, 75, 78, 81, 82, 83, 84, 93, 94, 95, 96], "sort": [0, 40, 70, 72, 82, 95], "also": [0, 2, 51, 70, 72, 73, 79, 80, 81, 82, 83, 92, 94, 95, 96], "associ": [0, 46, 75, 81, 82, 85, 88, 92], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 68, 69, 70, 72, 73, 88, 96], "np": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 72, 73, 75, 76, 82, 85, 87, 88, 89, 91, 92, 95], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 73, 75, 76, 80, 81, 82, 84, 85, 87, 88, 91, 92, 94, 95], "8": [0, 3, 4, 7, 8, 10, 11, 13, 14, 16, 18, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 46, 47, 49, 52, 54, 55, 58, 60, 64, 65, 66, 67, 74, 75, 81, 82, 83, 90, 91, 92, 94, 95], "4": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 58, 60, 63, 64, 65, 66, 67, 69, 73, 74, 75, 79, 81, 82, 83, 85, 87, 91, 92, 94, 95], "7": [0, 10, 12, 13, 15, 16, 18, 19, 20, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 39, 42, 44, 46, 47, 49, 51, 54, 55, 56, 58, 64, 67, 74, 75, 82, 84, 87, 89, 90, 92, 94, 95], "delon": [0, 16, 75, 79, 82, 94], "juli": [0, 8, 82, 94, 96], "julien": [0, 82, 94], "salomon": [0, 82, 94], "andrei": [0, 82, 94], "sobolevski": [0, 82, 94], "fast": [0, 52, 73, 81, 82, 94, 95, 96], "mong": [0, 23, 44, 82, 85, 94, 96], "appli": [0, 24, 69, 74, 75, 79, 82, 91, 92, 94], "mathemat": [0, 3, 60, 70, 73, 81, 82, 85, 88, 94, 95, 96], "70": [0, 1, 4, 5, 8, 29, 30, 31, 36, 52, 58, 82, 94], "2010": [0, 82, 85, 94], "2239": [0, 82, 94], "2258": [0, 82, 94], "dist": [0, 6, 8, 20, 28, 30, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 63, 64, 66, 67, 77, 81, 82, 87, 92, 95, 96], "x1": [0, 2, 3, 14, 15, 19, 23, 25, 32, 39, 40, 47, 51, 57, 77, 92], "x2": [0, 3, 14, 15, 19, 23, 25, 32, 39, 47, 51, 57, 77, 92], "sqeuclidean": [0, 20, 21, 51, 55, 56, 73, 75, 82, 90, 92], "w": [0, 6, 7, 8, 34, 35, 41, 47, 51, 65, 67, 73, 74, 75, 77, 79, 80, 81, 82, 88, 89, 90, 91, 92, 94, 95, 96], "between": [0, 2, 3, 6, 15, 16, 19, 28, 29, 31, 34, 35, 36, 38, 39, 43, 44, 45, 46, 47, 51, 59, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 91, 92, 93, 94, 96], "thi": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 57, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 87, 88, 89, 90, 92, 93, 94, 95, 96], "compat": [0, 51, 72, 73, 77, 78, 80, 81, 82, 83, 89, 90, 92, 93, 96], "work": [0, 12, 51, 70, 72, 73, 78, 81, 82, 84, 92, 93, 96], "from": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 19, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "all": [0, 10, 11, 13, 26, 28, 31, 34, 35, 38, 47, 51, 64, 69, 70, 72, 73, 75, 78, 79, 81, 82, 87, 91, 92, 93, 94, 95, 96], "n1": [0, 39, 46, 51, 92], "n2": [0, 29, 30, 31, 36, 39, 46, 51, 92], "callabl": [0, 51, 75, 77, 81, 84, 90, 92, 96], "euclidean": [0, 11, 28, 29, 31, 36, 47, 51, 55, 56, 75, 77, 82, 83, 89, 92, 95, 96], "On": [0, 51, 75, 79, 82, 92, 94, 95, 96], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 72, 73, 75, 77, 81, 82, 83, 85, 87, 88, 91, 92, 94, 95, 96], "accept": [0, 51, 69, 70, 72, 75, 82, 83, 92, 96], "scipi": [0, 28, 33, 34, 51, 57, 65, 70, 72, 82, 85, 89, 91, 92, 94, 95, 96], "spatial": [0, 33, 34, 51, 65, 85, 92], "cdist": [0, 33, 34, 51, 65, 85, 92], "braycurti": [0, 51, 92], "canberra": [0, 51, 92], "chebyshev": [0, 51, 92], "cityblock": [0, 51, 55, 82, 92], "correl": [0, 51, 92], "cosin": [0, 51, 92], "dice": [0, 51, 92], "ham": [0, 51, 92, 96], "jaccard": [0, 51, 92], "kulczynski1": [0, 51, 92], "mahalanobi": [0, 51, 92], "match": [0, 33, 51, 75, 81, 92, 94, 95], "minkowski": [0, 44, 51, 82, 92], "rogerstanimoto": [0, 51, 92], "russellrao": [0, 51, 92], "seuclidean": [0, 51, 92], "sokalmichen": [0, 51, 92], "sokalsneath": [0, 51, 92], "wminkowski": [0, 51, 92], "yule": [0, 51, 92], "norm": [0, 15, 28, 31, 33, 40, 42, 51, 67, 72, 74, 75, 82, 92, 96], "rank": [0, 45, 51, 78, 89, 92, 96], "given": [0, 2, 29, 31, 34, 35, 36, 41, 46, 51, 72, 73, 75, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 95, 96], "type": [0, 70, 72, 73, 75, 76, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 92, 95, 96], "emd": [0, 18, 20, 22, 30, 43, 45, 47, 55, 71, 73, 74, 75, 82, 83, 84, 85, 88, 89, 91, 93, 94, 96], "100000": [0, 49, 75, 82, 84, 91], "center_du": [0, 82], "numthread": [0, 82, 96], "check_margin": [0, 82], "earth": [0, 75, 82, 94, 96], "mover": [0, 75, 82, 94, 96], "gamma": [0, 51, 66, 67, 73, 75, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 95], "langl": [0, 73, 75, 81, 82, 83, 84, 85, 88, 90, 91], "rangle_f": [0, 73, 75, 81, 82, 83, 84, 85, 90, 91], "geq": [0, 67, 73, 75, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95], "note": [0, 26, 44, 51, 72, 73, 75, 77, 80, 81, 82, 83, 85, 86, 89, 92, 94, 95, 96], "c": [0, 2, 7, 8, 15, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 49, 51, 54, 55, 57, 61, 66, 67, 71, 72, 73, 75, 78, 79, 80, 81, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "order": [0, 6, 20, 26, 28, 41, 51, 72, 75, 77, 80, 82, 83, 86, 92, 94, 95], "float64": [0, 3, 7, 10, 11, 13, 14, 16, 19, 23, 25, 31, 33, 34, 44, 48, 52, 53, 56, 58, 63, 64, 73, 82], "format": [0, 1, 2, 3, 4, 5, 8, 21, 39, 51, 66, 70, 72, 80, 82, 92, 94, 96], "It": [0, 2, 11, 18, 20, 21, 24, 25, 26, 30, 31, 33, 52, 58, 65, 70, 81, 82, 90, 94, 95, 96], "convert": [0, 6, 19, 23, 25, 34, 72, 75, 82, 83, 92, 96], "But": [0, 78, 81, 82, 93, 95, 96], "cpu": [0, 2, 3, 7, 72, 78, 81, 82, 93, 96], "which": [0, 2, 28, 41, 46, 51, 69, 72, 73, 74, 75, 78, 80, 81, 82, 83, 84, 86, 87, 92, 93, 94, 95, 96], "can": [0, 2, 6, 41, 44, 51, 67, 70, 73, 75, 77, 78, 81, 82, 83, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96], "lead": [0, 6, 51, 72, 73, 78, 81, 82, 84, 93, 95, 96], "copi": [0, 7, 10, 29, 31, 36, 64, 70, 72, 78, 81, 82, 93, 95], "overhead": [0, 73, 78, 81, 82, 93, 95], "gpu": [0, 71, 72, 73, 78, 81, 82, 93, 96], "cast": [0, 81, 82, 95], "plan": [0, 2, 9, 29, 31, 36, 38, 45, 47, 52, 53, 66, 67, 73, 74, 78, 79, 81, 82, 85, 87, 89, 90, 91, 92, 95, 96], "data": [0, 2, 3, 7, 13, 31, 33, 35, 41, 44, 51, 55, 70, 72, 73, 74, 75, 79, 81, 82, 83, 94, 95, 96], "provid": [0, 2, 35, 51, 70, 71, 72, 73, 75, 79, 81, 82, 84, 87, 91, 94, 95, 96], "input": [0, 13, 16, 64, 72, 73, 74, 75, 78, 81, 82, 83, 89, 91, 92, 93, 95, 96], "prioriti": [0, 82], "an": [0, 2, 7, 8, 19, 23, 25, 28, 34, 41, 44, 51, 53, 69, 70, 72, 73, 75, 78, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 94, 96], "integ": [0, 28, 81, 82, 96], "tensor": [0, 2, 3, 6, 7, 32, 46, 72, 80, 81, 82, 84, 92, 95, 96], "might": [0, 15, 18, 20, 21, 26, 31, 33, 51, 58, 72, 73, 81, 82, 95], "result": [0, 2, 51, 69, 70, 72, 81, 82, 92, 95, 96], "precis": [0, 46, 72, 73, 75, 81, 82, 96], "behaviour": [0, 81, 82], "unwant": [0, 81, 82], "pleas": [0, 70, 72, 81, 82, 94], "make": [0, 29, 31, 36, 51, 55, 63, 64, 69, 70, 72, 76, 81, 82, 94, 95, 96], "sure": [0, 70, 81, 82, 94], "point": [0, 15, 16, 30, 31, 33, 34, 44, 47, 48, 49, 57, 70, 73, 75, 77, 81, 82, 83, 85, 92, 94, 95, 96], "vector": [0, 6, 72, 73, 74, 75, 80, 82, 87, 88, 91, 92, 94, 95, 96], "do": [0, 8, 20, 26, 33, 51, 65, 69, 70, 72, 73, 82, 92, 95, 96], "sum": [0, 2, 5, 6, 7, 11, 12, 13, 14, 29, 31, 32, 33, 35, 36, 42, 43, 51, 54, 56, 58, 61, 63, 66, 67, 72, 73, 75, 77, 81, 82, 84, 85, 87, 88, 89, 90, 92, 94, 95], "same": [0, 24, 29, 33, 36, 51, 65, 72, 74, 82, 91, 92, 95, 96], "empti": [0, 60, 61, 75, 78, 82, 92, 93], "nt": [0, 6, 35, 73, 75, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 93], "maximum": [0, 4, 15, 28, 34, 51, 57, 72, 73, 75, 77, 81, 82, 84, 87, 89, 92], "befor": [0, 28, 70, 72, 75, 82, 96], "ha": [0, 2, 6, 8, 51, 71, 73, 75, 81, 82, 83, 85, 92, 94, 95, 96], "contain": [0, 10, 11, 13, 64, 74, 78, 81, 82, 83, 87, 92, 93, 94, 95, 96], "dual": [0, 8, 9, 11, 38, 44, 73, 74, 76, 78, 81, 82, 86, 89, 90, 91, 92, 93, 94, 95, 96], "variabl": [0, 35, 73, 75, 78, 81, 82, 83, 87, 89, 90, 93, 95, 96], "otherwis": [0, 69, 72, 81, 82, 92], "boolean": [0, 72, 73, 75, 79, 82, 92], "center": [0, 40, 51, 77, 82, 96], "potenti": [0, 5, 8, 31, 38, 50, 73, 75, 81, 82, 83, 89, 90, 91, 92, 94, 96], "center_ot_du": [0, 82], "openmp": [0, 82, 96], "compil": [0, 82, 94, 95, 96], "choos": [0, 28, 57, 73, 77, 82, 95], "thread": [0, 82], "parallel": [0, 82, 92, 95, 96], "select": [0, 32, 48, 75, 79, 81, 82, 95], "highest": [0, 82], "possibl": [0, 70, 73, 75, 82, 92, 95, 96], "check": [0, 31, 70, 72, 73, 82, 92, 95, 96], "mass": [0, 2, 21, 29, 31, 51, 65, 67, 75, 81, 82, 85, 94, 95, 96], "equal": [0, 21, 41, 47, 55, 72, 82, 87], "skip": [0, 82], "exit": [0, 78, 82, 93, 96], "statu": [0, 78, 82, 92, 93, 96], "simpl": [0, 2, 6, 12, 34, 46, 51, 76, 82, 92, 95, 96], "obviou": [0, 82], "solut": [0, 44, 47, 51, 73, 75, 82, 87, 92, 95, 96], "perform": [0, 2, 3, 7, 28, 41, 44, 48, 70, 75, 81, 82, 83, 92, 94, 95, 96], "convers": [0, 28, 82], "bonneel": [0, 3, 60, 71, 82, 88, 94, 95], "van": [0, 82, 94, 95], "de": [0, 73, 82, 94, 95], "pann": [0, 82, 94, 95], "pari": [0, 14, 15, 32, 41, 82, 94, 95], "heidrich": [0, 82, 94, 95], "2011": [0, 81, 82, 94, 95], "decemb": [0, 72, 82, 94, 95, 96], "displac": [0, 56, 82, 92, 94, 95], "interpol": [0, 2, 7, 12, 18, 20, 22, 26, 30, 34, 35, 41, 43, 51, 54, 55, 73, 75, 82, 83, 85, 94, 95, 96], "lagrangian": [0, 82, 85, 87, 94, 95], "In": [0, 2, 3, 6, 7, 8, 31, 33, 35, 39, 41, 46, 47, 51, 69, 70, 73, 74, 75, 77, 78, 80, 81, 82, 83, 86, 88, 89, 94, 95, 96], "acm": [0, 73, 82, 94, 95], "transact": [0, 58, 73, 75, 82, 84, 94, 95], "graphic": [0, 73, 82, 94, 95, 96], "tog": [0, 73, 82, 94, 95], "vol": [0, 8, 58, 75, 79, 82, 84, 94, 95], "30": [0, 1, 3, 4, 5, 8, 11, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 40, 41, 42, 48, 51, 52, 58, 75, 82, 94, 95], "No": [0, 2, 35, 44, 70, 82, 94, 95], "6": [0, 2, 5, 7, 11, 13, 16, 18, 19, 20, 22, 23, 24, 25, 29, 31, 32, 33, 35, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 58, 61, 63, 64, 65, 66, 67, 74, 75, 81, 82, 83, 87, 90, 92, 94, 95], "158": [0, 58, 82, 94, 95], "cg": [0, 31, 33, 58, 73, 75, 78, 81, 82, 83, 89, 91, 93, 95, 96], "emd2": [0, 6, 8, 56, 71, 82, 91, 94, 96], "process": [0, 24, 25, 29, 32, 36, 39, 46, 48, 49, 51, 73, 74, 75, 82, 83, 89, 90, 91, 94, 95, 96], "return_matrix": [0, 82], "min_": [0, 4, 6, 7, 8, 46, 67, 73, 77, 81, 82, 83, 85, 87, 91, 95], "nb": [0, 7, 10, 11, 13, 19, 25, 29, 31, 33, 34, 36, 42, 43, 44, 45, 48, 52, 53, 54, 55, 56, 58, 60, 61, 63, 64, 65, 66, 67, 81, 82, 84, 86], "multipl": [0, 56, 73, 81, 82, 89, 90, 91, 92, 96], "deprec": [0, 7, 10, 28, 64, 82, 92], "emd2_1d": [0, 82, 95], "x_a": [0, 82], "x_b": [0, 82], "dens": [0, 72, 81, 82, 92], "1d": [0, 9, 17, 30, 38, 44, 59, 68, 71, 76, 81, 82, 84, 86, 92, 94, 95, 96], "measur": [0, 3, 7, 14, 16, 30, 41, 49, 60, 73, 74, 75, 77, 81, 82, 88, 90, 91, 92, 94, 95], "sum_j": [0, 30, 82, 89, 90, 93], "gamma_": [0, 51, 73, 75, 82, 84, 85, 90, 91, 93, 95], "ij": [0, 40, 82, 93], "when": [0, 2, 44, 57, 67, 69, 70, 73, 74, 77, 79, 81, 82, 85, 87, 92, 94, 96], "y": [0, 1, 4, 8, 10, 15, 16, 18, 20, 21, 22, 24, 26, 28, 30, 32, 33, 35, 40, 41, 42, 46, 61, 64, 72, 73, 74, 75, 76, 77, 81, 82, 83, 85, 87, 88, 89, 92, 94, 95], "detail": [0, 69, 70, 72, 77, 79, 82, 95, 96], "dirac": [0, 14, 43, 54, 82], "locat": [0, 14, 16, 72, 73, 82], "real": [0, 82], "line": [0, 19, 23, 25, 34, 51, 73, 81, 82, 84, 86, 95, 96], "string": [0, 73, 74, 75, 79, 81, 82, 90, 91, 92], "implement": [0, 5, 51, 70, 71, 72, 73, 77, 82, 89, 92, 95, 96], "faster": [0, 82, 96], "math": [0, 28, 51, 82, 85, 89, 95], "spars": [0, 28, 38, 44, 51, 59, 72, 73, 76, 77, 81, 82, 86, 89, 91, 92, 94, 95, 96], "represent": [0, 29, 35, 36, 49, 61, 69, 81, 82, 84, 88, 89, 90, 94, 95], "coo_matrix": [0, 72, 82], "set": [0, 2, 8, 18, 20, 22, 27, 28, 32, 34, 35, 38, 41, 44, 51, 69, 72, 73, 75, 76, 80, 81, 82, 84, 87, 92, 94, 95], "2017": [0, 8, 41, 73, 75, 79, 82, 83, 93, 94, 95, 96], "2018": [0, 8, 49, 73, 75, 79, 82, 85, 89, 90, 94, 95, 96], "multidimension": [0, 34, 82], "emd_1d": [0, 52, 82, 95, 96], "instead": [0, 5, 8, 10, 35, 64, 72, 73, 74, 82, 83, 92, 94, 95, 96], "factored_optimal_transport": [0, 45, 78], "xa": [0, 78, 93], "xb": [0, 3, 15, 45, 78, 93], "100": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 22, 24, 28, 31, 33, 34, 35, 40, 42, 44, 45, 47, 48, 51, 52, 53, 56, 57, 58, 63, 64, 65, 66, 72, 73, 74, 75, 77, 78, 81, 82, 83, 85, 88, 92], "x0": [0, 4, 28, 78, 82, 88], "07": [0, 17, 25, 27, 33, 37, 42, 49, 52, 58, 65, 73, 74, 78, 82, 85], "factor": [0, 38, 50, 72, 86, 92, 94, 95, 96], "intermedi": [0, 5, 44, 78], "40": [0, 1, 3, 4, 5, 8, 9, 29, 31, 33, 35, 36, 51, 52, 58, 67, 78, 87, 94, 95], "mu": [0, 3, 6, 7, 24, 25, 28, 30, 41, 57, 65, 75, 77, 78, 83, 88, 95], "w_2": [0, 57, 78, 82, 95], "mu_a": [0, 78], "mu_b": [0, 78], "empir": [0, 2, 3, 27, 38, 45, 55, 59, 71, 73, 75, 76, 78, 79, 82, 86, 92, 93, 94, 95, 96], "And": [0, 78], "two": [0, 2, 3, 10, 19, 21, 30, 39, 46, 49, 51, 53, 56, 64, 70, 72, 73, 74, 75, 78, 79, 81, 82, 87, 91, 92, 93, 94, 95, 96], "gradient": [0, 2, 6, 7, 8, 9, 30, 31, 33, 38, 41, 42, 44, 46, 58, 71, 72, 73, 75, 77, 78, 81, 82, 83, 84, 85, 87, 89, 90, 93, 94, 95, 96], "39": [0, 1, 44, 58, 66, 68, 78, 93, 94, 95], "rel": [0, 18, 30, 31, 33, 34, 58, 73, 75, 78, 81, 83, 84, 93], "variat": [0, 11, 56, 78, 84, 93, 95], "ga": [0, 45, 78], "gb": [0, 45, 78], "forrow": [0, 78, 94, 95], "h\u00fctter": [0, 78, 94, 95], "nitzan": [0, 78, 94, 95], "rigollet": [0, 73, 78, 94, 95], "schiebing": [0, 78, 94, 95], "weed": [0, 73, 78, 94, 95], "2019": [0, 3, 28, 30, 31, 33, 48, 73, 75, 78, 81, 82, 88, 94, 95, 96], "april": [0, 73, 78, 94, 95], "statist": [0, 8, 41, 73, 75, 78, 82, 83, 89, 94, 95], "via": [0, 2, 3, 35, 38, 50, 69, 73, 75, 76, 78, 81, 94, 95], "coupl": [0, 24, 38, 50, 73, 74, 75, 78, 81, 86, 94, 95, 96], "22nd": [0, 73, 78, 94, 95], "intern": [0, 2, 3, 7, 8, 13, 28, 29, 30, 31, 33, 35, 36, 41, 49, 61, 73, 75, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95], "confer": [0, 2, 3, 8, 13, 28, 29, 30, 31, 33, 35, 36, 41, 49, 61, 73, 75, 78, 81, 82, 83, 84, 85, 88, 89, 90, 94, 95], "artifici": [0, 8, 41, 73, 75, 78, 83, 89, 94, 95], "intellig": [0, 8, 41, 58, 73, 75, 78, 83, 84, 89, 94, 95], "pp": [0, 3, 8, 31, 33, 58, 73, 75, 78, 84, 88, 94, 95], "2454": [0, 78, 94, 95], "2465": [0, 78, 94, 95], "pmlr": [0, 3, 8, 13, 41, 73, 75, 78, 83, 94, 95], "fused_gromov_wasserstein": [0, 29, 30, 31, 36, 81, 95, 96], "c1": [0, 2, 29, 30, 31, 33, 36, 65, 66, 67, 81, 84, 85, 95], "c2": [0, 2, 29, 30, 31, 33, 36, 65, 66, 67, 81, 85, 95], "loss_fun": [0, 30, 81], "square_loss": [0, 30, 31, 33, 34, 81], "symmetr": [0, 29, 36, 72, 73, 81, 95, 96], "alpha": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 18, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 35, 36, 40, 41, 45, 47, 49, 51, 56, 57, 60, 61, 63, 64, 66, 67, 73, 74, 75, 80, 81, 82, 84, 86, 89, 90, 96], "armijo": [0, 81, 84, 96], "g0": [0, 29, 36, 43, 45, 52, 54, 58, 81, 84, 85, 91, 93], "max_it": [0, 18, 21, 24, 25, 33, 34, 75, 81, 89, 96], "tol_rel": [0, 81], "09": [0, 9, 33, 49, 52, 58, 62, 73, 75, 81, 84, 89], "tol_ab": [0, 81], "fuse": [0, 37, 71, 80, 81, 94, 95, 96], "c_1": [0, 30, 81, 83, 84, 85], "y_1": [0, 81], "c_2": [0, 29, 30, 36, 81, 83, 85], "y_2": [0, 81], "pairwis": [0, 29, 31, 36, 75, 81], "node": [0, 2, 28, 31, 32, 33, 80, 81, 94], "featur": [0, 28, 31, 32, 46, 70, 73, 74, 80, 81, 94], "matric": [0, 7, 31, 33, 34, 39, 46, 51, 58, 72, 73, 74, 75, 77, 80, 81, 82, 84, 85, 86, 92, 93, 94, 95, 96], "24": [0, 30, 31, 33, 42, 58, 74, 81, 94, 95, 96], "sum_": [0, 4, 6, 51, 73, 74, 75, 77, 81, 82, 83, 84, 85, 88, 90, 91, 95], "k": [0, 2, 6, 8, 13, 14, 15, 21, 28, 29, 30, 31, 35, 36, 40, 41, 42, 44, 47, 51, 53, 57, 72, 73, 74, 75, 77, 80, 81, 82, 83, 85, 87, 95], "across": [0, 29, 31, 81, 90], "space": [0, 16, 32, 33, 34, 41, 65, 69, 72, 73, 74, 75, 81, 82, 85, 88, 94, 95, 96], "account": [0, 57, 69, 70, 73, 81, 83, 96], "misfit": [0, 81], "similar": [0, 8, 26, 51, 75, 81, 87, 95], "trade": [0, 35, 80, 81], "off": [0, 2, 4, 12, 13, 19, 21, 23, 25, 29, 31, 32, 35, 36, 47, 58, 70, 80, 81], "conjug": [0, 81, 89], "done": [0, 6, 46, 47, 51, 81, 92, 95, 96], "limit": [0, 72, 81, 96], "memori": [0, 72, 73, 81, 82, 90, 92, 95, 96], "repres": [0, 20, 26, 28, 41, 69, 73, 81, 82, 95], "structur": [0, 28, 31, 33, 35, 72, 80, 81, 94, 95, 96], "let": [0, 81, 82, 84], "its": [0, 1, 2, 5, 24, 29, 31, 35, 36, 41, 51, 57, 69, 72, 73, 75, 80, 81, 83, 84, 85, 88, 92, 94, 95, 96], "taken": [0, 35, 81, 92, 95], "assum": [0, 79, 81, 96], "symmetri": [0, 81], "test": [0, 28, 32, 42, 70, 72, 81, 84, 92, 94, 96], "conduct": [0, 81, 84], "els": [0, 2, 3, 7, 12, 16, 21, 28, 29, 31, 35, 36, 40, 44, 57, 75, 77, 79, 80, 81, 91], "resp": [0, 73, 81, 84], "asymmetr": [0, 81], "step": [0, 1, 2, 3, 5, 6, 7, 8, 28, 32, 46, 70, 72, 73, 81, 82, 84], "found": [0, 28, 44, 70, 75, 81, 83, 95], "research": [0, 71, 81, 94, 95, 96], "close": [0, 28, 51, 75, 79, 81, 82, 92, 95], "form": [0, 6, 8, 51, 75, 79, 81, 82, 87, 92, 95, 96], "issu": [0, 69, 70, 73, 81, 92, 94, 95], "initi": [0, 14, 71, 73, 74, 77, 80, 81, 82, 84, 85, 91, 93, 95], "pq": [0, 81], "must": [0, 81, 89, 91, 92], "satisfi": [0, 81, 84], "constraint": [0, 31, 33, 44, 73, 81, 82, 83, 84, 89, 92, 95, 96], "absolut": [0, 18, 30, 31, 33, 58, 72, 74, 81, 84, 93], "directli": [0, 51, 81, 85, 95], "pass": [0, 70, 81, 82, 85, 89, 90, 92], "vayer": [0, 2, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 46, 71, 74, 77, 80, 81, 84, 94, 95], "titouan": [0, 28, 29, 30, 31, 33, 36, 71, 80, 81, 84, 94], "chapel": [0, 28, 30, 31, 33, 65, 66, 67, 71, 81, 85, 87, 91, 94, 95], "laetitia": [0, 28, 30, 31, 33, 65, 67, 71, 81, 94], "flamari": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 42, 43, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 58, 66, 71, 73, 74, 75, 77, 80, 81, 83, 84, 87, 90, 91, 94, 95], "r\u00e9mi": [0, 2, 3, 7, 14, 28, 29, 30, 31, 32, 33, 36, 71, 73, 75, 80, 81, 84, 94, 95], "tavenard": [0, 28, 30, 31, 33, 71, 81, 94, 95], "romain": [0, 28, 30, 31, 33, 71, 81, 94], "courti": [0, 2, 7, 8, 12, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 49, 51, 58, 61, 71, 73, 74, 75, 77, 80, 81, 82, 83, 84, 88, 90, 94, 95], "nicola": [0, 3, 7, 12, 28, 29, 30, 31, 33, 34, 36, 51, 60, 71, 73, 75, 80, 81, 84, 88, 94, 95], "applic": [0, 26, 28, 29, 30, 31, 33, 36, 58, 73, 75, 79, 81, 82, 84, 85, 93, 94], "graph": [0, 30, 33, 37, 38, 51, 71, 72, 80, 81, 84, 94, 95, 96], "machin": [0, 2, 3, 8, 13, 28, 30, 31, 33, 35, 58, 73, 75, 81, 82, 84, 85, 94, 95, 96], "learn": [0, 2, 3, 6, 8, 13, 24, 28, 29, 30, 31, 33, 36, 37, 38, 49, 50, 61, 70, 71, 73, 74, 75, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 94, 95, 96], "icml": [0, 2, 28, 30, 31, 33, 35, 77, 81, 85, 92, 94, 95], "47": [0, 39, 46, 58, 74, 81, 94, 96], "chowdhuri": [0, 81, 94], "m\u00e9moli": [0, 81, 94, 95], "network": [0, 8, 32, 80, 81, 94, 95, 96], "stabl": [0, 5, 72, 81, 94, 95, 96], "invari": [0, 81, 94], "infer": [0, 72, 81, 94], "ima": [0, 81, 94], "757": [0, 81, 94], "787": [0, 81, 94], "fused_gromov_wasserstein2": [0, 81], "fgw": [0, 29, 31, 36, 37, 38, 71, 80, 81, 94, 96], "differenti": [0, 6, 7, 46, 81, 94, 95, 96], "wrt": [0, 2, 72, 75, 81, 92], "quadrat": [0, 9, 38, 67, 75, 76, 81, 84, 85, 86, 90, 91, 92, 94, 96], "38": [0, 1, 2, 35, 58, 81, 94, 95], "vincent": [0, 2, 29, 31, 32, 33, 35, 36, 71, 80, 81, 84, 94, 95], "cuaz": [0, 2, 29, 31, 32, 33, 35, 36, 71, 80, 81, 84, 94, 95], "corn": [0, 2, 29, 32, 35, 36, 80, 81, 84, 94, 95], "onlin": [0, 2, 35, 51, 69, 81, 94, 95, 96], "2021": [0, 2, 16, 29, 33, 35, 36, 66, 72, 77, 81, 82, 84, 87, 91, 94, 95, 96], "gromov_barycent": [0, 34, 81, 95, 96], "lambda": [0, 28, 81, 85, 87, 95], "tol": [0, 21, 34, 75, 81, 85, 89], "warmstartt": [0, 81], "init_c": [0, 81, 96], "random_st": [0, 2, 32, 34, 35, 40, 76, 77, 81, 90], "leq": [0, 81, 82, 84, 85, 95], "block": [0, 2, 26, 32, 70, 73, 74, 77, 81, 83, 94, 95], "descent": [0, 2, 6, 7, 44, 46, 74, 77, 81, 82, 83, 84, 94, 95], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 72, 73, 75, 81, 82, 83, 90, 92, 94, 95, 96], "lambda_": [0, 81, 95], "gw": [0, 23, 29, 36, 81, 84, 85, 94, 96], "base": [0, 29, 31, 33, 36, 37, 38, 70, 71, 73, 75, 80, 81, 89, 92, 94, 95, 96], "specif": [0, 34, 69, 70, 72, 73, 75, 81, 91, 95, 96], "updat": [0, 73, 81, 82, 83, 87, 90, 92, 96], "accord": [0, 81, 92], "kernel": [0, 24, 31, 75, 81, 83, 85, 92, 94, 95], "calcul": [0, 15, 39, 72, 73, 74, 81], "warmstart": [0, 31, 73, 74, 81, 91, 96], "success": [0, 81], "random": [0, 2, 3, 5, 6, 8, 14, 15, 19, 21, 23, 25, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 46, 49, 57, 61, 65, 66, 67, 72, 75, 76, 77, 80, 81, 88, 90, 92, 96], "user": [0, 58, 70, 81, 94, 95, 96], "randomst": [0, 2, 6, 19, 23, 25, 34, 40, 41, 49, 75, 76, 77, 81, 88, 90, 92], "instanc": [0, 5, 69, 72, 76, 77, 81, 84, 90, 92, 95, 96], "fix": [0, 35, 46, 70, 73, 77, 80, 81, 82, 85, 89, 94, 96], "seed": [0, 3, 5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 44, 45, 46, 66, 67, 72, 75, 76, 81, 88, 92], "reproduc": [0, 11, 70, 81, 90, 95], "permut": [0, 2, 3, 7, 81], "arbitrarili": [0, 81], "dure": [0, 81, 82], "12": [0, 5, 13, 14, 18, 25, 31, 33, 35, 42, 46, 58, 75, 81, 82, 85, 94, 95, 96], "gabriel": [0, 8, 31, 33, 71, 73, 81, 85, 94, 95], "marco": [0, 8, 29, 31, 33, 36, 41, 71, 73, 75, 80, 81, 82, 83, 84, 85, 94, 95], "justin": [0, 31, 33, 81, 85, 94, 95], "solomon": [0, 31, 33, 73, 81, 85, 94, 95], "averag": [0, 31, 33, 72, 75, 77, 81, 85, 90, 94, 95], "gromov_wasserstein": [0, 2, 29, 30, 33, 36, 81, 95, 96], "_1": [0, 40, 73, 75, 81, 82, 85, 95], "kl_loss": [0, 81], "minim": [0, 2, 3, 4, 6, 7, 28, 29, 31, 35, 36, 46, 77, 81, 82, 84, 89, 91, 92, 95, 96], "13": [0, 13, 18, 25, 30, 31, 42, 51, 56, 58, 81, 85, 94, 95, 96], "facundo": [0, 81, 94, 95], "approach": [0, 11, 18, 20, 22, 26, 44, 73, 75, 81, 82, 94, 95], "object": [0, 1, 2, 3, 4, 5, 8, 34, 44, 52, 53, 56, 57, 72, 73, 74, 75, 81, 82, 89, 91, 92, 94, 95], "foundat": [0, 81, 85, 94, 95, 96], "11": [0, 5, 10, 16, 17, 18, 25, 31, 33, 35, 42, 50, 58, 64, 66, 77, 81, 93, 94, 95], "417": [0, 81, 94, 95, 96], "487": [0, 81, 94, 95], "gromov_wasserstein2": [0, 2, 81, 95, 96], "To": [0, 2, 8, 34, 35, 72, 73, 81, 85, 92, 94, 95], "recov": [0, 2, 8, 81, 90, 91, 95], "defin": [0, 5, 8, 34, 39, 49, 51, 69, 72, 73, 75, 81, 82, 83, 87, 89, 92, 95, 96], "d_": [0, 81], "sqrt": [0, 4, 35, 42, 61, 72, 79, 81, 85, 88], "gw_dist": [0, 29, 33, 36, 81], "max_sliced_wasserstein_dist": [0, 88], "x_": [0, 46, 73, 75, 82, 83, 88], "x_t": [0, 73, 75, 83, 88, 92], "n_project": [0, 3, 4, 60, 61, 88], "50": [0, 1, 3, 4, 5, 6, 8, 11, 15, 16, 21, 31, 32, 33, 35, 40, 41, 43, 44, 52, 54, 58, 66, 73, 82, 85, 88, 89, 94, 96], "mont": [0, 88], "carlo": [0, 88], "approxim": [0, 8, 11, 24, 41, 73, 74, 81, 82, 83, 84, 88, 94, 95], "slice": [0, 9, 62, 71, 76, 82, 92, 94, 95, 96], "mathcal": [0, 39, 41, 75, 76, 79, 80, 81, 83, 88, 92, 95], "swd": [0, 60, 88], "_p": [0, 88, 95], "nu": [0, 3, 4, 7, 30, 41, 75, 77, 82, 83, 88], "underset": [0, 82, 88], "_in": [0, 88], "theta_": [0, 88], "stand": [0, 88], "pushforward": [0, 88], "ni": [0, 88], "mapsto": [0, 81, 88], "rangl": [0, 73, 83, 88], "n_samples_a": [0, 73, 88], "n_samples_b": [0, 73, 88], "case": [0, 26, 51, 66, 70, 72, 74, 82, 87, 88, 89, 91, 94], "sliced_wasserstein_dist": [0, 3, 60, 88, 96], "20": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 24, 25, 28, 29, 30, 31, 32, 33, 36, 37, 39, 40, 42, 44, 46, 48, 51, 52, 53, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 73, 81, 82, 88, 94, 95, 96], "normal": [0, 4, 10, 11, 13, 14, 28, 29, 31, 36, 56, 64, 72, 75, 77, 80, 88, 92, 96], "35": [0, 1, 5, 13, 17, 21, 32, 42, 58, 88, 94, 95, 96], "deshpand": [0, 88, 94, 95], "hu": [0, 88, 94, 95], "sun": [0, 88, 94, 95], "pyrro": [0, 88, 94, 95], "siddiqui": [0, 88, 94, 95], "koyejo": [0, 88, 94, 95], "schwing": [0, 88, 94, 95], "gan": [0, 9, 38, 88, 94, 95, 96], "proceed": [0, 13, 73, 88, 89, 94, 95], "ieee": [0, 58, 75, 84, 88, 94, 95], "cvf": [0, 88, 94, 95], "vision": [0, 3, 60, 88, 94, 95], "pattern": [0, 58, 75, 84, 88, 94, 95], "recognit": [0, 88, 94, 95], "10648": [0, 88, 94, 95], "10656": [0, 88, 94, 95], "semidiscrete_wasserstein2_unif_circl": [0, 57, 82], "mu_n": [0, 4, 8, 82, 88], "alpha_i": [0, 82, 88], "x_i": [0, 4, 30, 82, 83, 88, 95], "left": [0, 6, 13, 18, 22, 40, 46, 72, 73, 75, 79, 81, 82, 86, 88, 89, 90, 92, 93], "right": [0, 6, 13, 14, 29, 31, 36, 41, 46, 51, 63, 69, 70, 73, 75, 79, 81, 82, 88, 89, 90, 92, 93, 96], "alpha_k": [0, 82], "unif": [0, 2, 4, 6, 14, 15, 16, 30, 33, 34, 35, 43, 44, 45, 46, 49, 55, 57, 65, 82, 88, 90, 92], "delta_": [0, 4, 30, 82, 88, 89, 95], "02111111": [0, 82], "46": [0, 58, 61, 82, 88, 94, 96], "bonet": [0, 4, 57, 61, 71, 82, 88, 94], "berg": [0, 61, 82, 88, 94], "septier": [0, 61, 82, 88, 94], "drumetz": [0, 61, 82, 88, 94], "pham": [0, 61, 82, 88, 94], "2023": [0, 40, 61, 77, 82, 88, 89, 94, 96], "spheric": [0, 9, 38, 62, 71, 82, 88, 94], "omega": [0, 67, 73, 84, 85, 89, 90, 91, 95], "dim_a": [0, 73, 85, 87, 91], "dim_b": [0, 73, 85, 87, 91], "both": [0, 2, 7, 24, 51, 66, 69, 73, 74, 82, 83, 87, 91, 95, 96], "By": [0, 73, 77, 87, 91, 95], "too": [0, 73, 77, 95], "small": [0, 2, 7, 51, 70, 73, 75, 77, 81, 82, 94, 95, 96], "should": [0, 26, 46, 67, 70, 72, 73, 75, 77, 81, 82, 87, 89, 91, 92, 94, 95, 96], "enough": [0, 28, 73, 77, 95], "you": [0, 15, 18, 20, 21, 28, 31, 33, 51, 58, 70, 72, 73, 77, 80, 83, 86, 94, 95, 96], "sharper": [0, 73, 95], "avoid": [0, 70, 72, 73, 75, 77, 85, 95, 96], "numer": [0, 22, 33, 51, 64, 72, 73, 75, 77, 85, 92, 94, 95, 96], "last": [0, 32, 51, 73, 74, 87, 95, 96], "veri": [0, 26, 51, 73, 81, 92, 94, 95], "slow": [0, 73, 77, 95, 96], "practic": [0, 8, 70, 73, 75, 77, 83, 95], "even": [0, 10, 11, 64, 65, 72, 73, 95, 96], "reason": [0, 69, 73, 95, 96], "finit": [0, 72, 73, 82, 92, 95], "why": [0, 70, 73, 96], "sinkhorn_epsilon_sc": [0, 73, 75, 95], "reli": [0, 73, 81, 94, 95], "warm": [0, 73, 95, 96], "start": [0, 35, 44, 51, 70, 72, 73, 77, 87, 92, 94, 96], "sometim": [0, 73, 95], "better": [0, 8, 48, 73, 89, 95, 96], "greedi": [0, 73, 94, 95, 96], "version": [0, 2, 34, 35, 57, 69, 70, 72, 73, 84, 87, 94, 95, 96], "greenkhorn": [0, 71, 73, 95, 96], "speedup": [0, 73, 95, 96], "screen": [0, 38, 50, 73, 76, 86, 94, 95], "screenkhorn": [0, 38, 50, 71, 73, 76, 86, 95, 96], "aim": [0, 4, 8, 67, 73, 75, 92, 95], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 41, 46, 47, 51, 57, 65, 66, 69, 70, 71, 72, 73, 75, 81, 82, 85, 87, 95, 96], "strongli": [0, 38, 50, 70, 73, 75, 81, 83, 94, 95, 96], "recommend": [0, 70, 73, 81, 95, 96], "those": [0, 12, 51, 73, 75, 81, 82, 91, 92, 95], "tupl": [0, 73, 74, 82, 84, 91, 92], "logarithm": [0, 72, 73, 91], "36552929": [0, 73, 95], "13447071": [0, 73, 95], "lightspe": [0, 73, 75, 89, 91, 94, 95], "advanc": [0, 32, 39, 46, 48, 49, 69, 73, 74, 75, 89, 90, 91, 94, 95], "neural": [0, 8, 24, 25, 32, 39, 46, 48, 49, 73, 74, 75, 80, 83, 89, 90, 91, 94, 95, 96], "system": [0, 24, 25, 32, 39, 46, 48, 49, 70, 72, 73, 75, 83, 89, 90, 91, 94, 95], "nip": [0, 24, 25, 73, 75, 83, 89, 91, 94, 95], "26": [0, 42, 48, 58, 73, 75, 89, 91, 94, 95, 96], "2013": [0, 73, 75, 89, 91, 92, 94, 95], "9": [0, 2, 4, 8, 11, 16, 18, 21, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 42, 45, 46, 47, 49, 52, 58, 65, 73, 75, 87, 89, 91, 94, 95], "stabil": [0, 73, 82, 91, 94, 95, 96], "preprint": [0, 16, 58, 64, 73, 75, 77, 82, 84, 91, 94, 95], "1610": [0, 73, 91, 94, 95], "06519": [0, 73, 91, 94, 95], "34": [0, 5, 42, 58, 73, 91, 94, 95], "feydi": [0, 73, 94, 95], "s\u00e9journ\u00e9": [0, 73, 94, 95], "amari": [0, 73, 94, 95], "trouv\u00e9": [0, 73, 94, 95], "mmd": [0, 73, 94, 95], "diverg": [0, 8, 56, 67, 72, 73, 81, 84, 91, 94, 95, 96], "2681": [0, 73, 94, 95], "2690": [0, 73, 94, 95], "unregular": [0, 73, 75, 83, 84, 87, 89, 91], "sinkhorn_knopp": [0, 73, 91, 95], "classic": [0, 44, 73, 83, 91, 95, 96], "epsilon": [0, 13, 29, 31, 33, 48, 63, 72, 73, 74, 81, 91, 95, 96], "sinkhorn2": [0, 56, 73, 94, 96], "without": [0, 44, 69, 70, 72, 73, 81, 87, 94, 96], "contribut": [0, 69, 73, 95, 96], "26894142136999516": [0, 73], "21": [0, 4, 9, 42, 58, 73, 94, 95], "altschul": [0, 73, 94, 95], "Near": [0, 73, 94, 95], "linear": [0, 1, 5, 8, 24, 25, 27, 32, 37, 38, 66, 71, 72, 73, 74, 75, 77, 79, 81, 82, 83, 84, 87, 91, 92, 94, 95, 96], "31": [0, 1, 3, 5, 42, 51, 58, 60, 73, 79, 88, 94, 95, 96], "sinkhorn_lpl1_mm": [0, 75, 95], "labels_a": [0, 75], "eta": [0, 7, 24, 25, 75, 82, 83], "numinneritermax": [0, 15, 73, 75, 83, 84], "200": [0, 1, 4, 5, 8, 14, 15, 31, 44, 52, 57, 58, 60, 61, 75, 81, 84, 85, 96], "stopinnerthr": [0, 75, 83], "non": [0, 41, 53, 64, 66, 70, 71, 72, 73, 75, 82, 84, 87, 89, 91, 92, 94, 95, 96], "convex": [0, 35, 38, 50, 55, 75, 82, 83, 84, 89, 94, 95], "group": [0, 18, 20, 75, 94, 96], "lasso": [0, 18, 20, 75, 87, 94, 96], "omega_": [0, 75, 95], "omega_g": [0, 75], "_c": [0, 75], "index": [0, 2, 74, 75, 87, 90, 91, 92, 94], "class": [0, 2, 5, 8, 21, 26, 32, 40, 41, 71, 73, 76, 77, 80, 83, 96], "label": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 24, 26, 28, 32, 33, 35, 40, 41, 42, 43, 44, 45, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 73, 75, 76, 77, 92, 95, 96], "inner": [0, 73, 75, 81, 83], "tuia": [0, 58, 73, 75, 84, 94, 95], "rakotomamonji": [0, 42, 48, 58, 71, 73, 75, 77, 84, 94, 95], "adapt": [0, 26, 27, 41, 58, 69, 73, 75, 76, 81, 82, 84, 86, 92, 94, 96], "analysi": [0, 38, 50, 58, 70, 73, 75, 77, 82, 84, 93, 94, 96], "99": [0, 2, 58, 75, 84, 94, 95, 96], "1510": [0, 58, 75, 84, 94, 95], "06567": [0, 58, 75, 84, 94, 95], "reg_typ": [0, 53, 75, 89, 91, 95], "reg_": [0, 18, 19, 20, 21, 22, 25, 26, 75, 91], "m1": [0, 55, 91], "kl": [0, 53, 63, 72, 73, 74, 81, 89, 91, 94, 95, 96], "m2": [0, 6, 55, 56, 91], "neg": [0, 1, 5, 66, 72, 73, 81, 82, 87, 89, 91, 94], "kullback": [0, 31, 33, 63, 67, 72, 81, 89, 91, 95], "leibler": [0, 31, 33, 63, 67, 72, 81, 89, 91, 95], "25": [0, 5, 8, 11, 28, 30, 32, 35, 37, 42, 57, 58, 61, 85, 87, 91, 94, 95, 96], "unnorm": [0, 85, 91], "One": [0, 83, 91, 94, 95, 96], "mani": [0, 91, 96], "length": [0, 72, 74, 82, 87, 90, 91, 92], "scalar": [0, 28, 72, 73, 74, 91, 92], "balanc": [0, 91, 92, 95], "inf": [0, 28, 75, 91], "semi": [0, 27, 37, 38, 71, 75, 76, 81, 84, 87, 89, 90, 91, 92, 94, 95, 96], "have": [0, 8, 26, 35, 51, 69, 70, 72, 81, 82, 91, 92, 95, 96], "sinkhorn_reg_sc": [0, 91], "text": [0, 1, 4, 5, 6, 8, 14, 19, 21, 23, 24, 43, 45, 46, 51, 54, 58, 60, 61, 63, 70, 73, 75, 79, 81, 82, 83, 87, 91, 92, 95], "ot_dist": [0, 91], "51122814": [0, 91], "18807032": [0, 91], "frogner": [0, 91, 94, 95], "zhang": [0, 91, 94, 95], "mobahi": [0, 91, 94, 95], "h": [0, 6, 13, 28, 31, 33, 66, 73, 76, 77, 80, 81, 83, 87, 91, 92, 94, 95], "araya": [0, 91, 94, 95], "polo": [0, 91, 94, 95], "poggio": [0, 91, 94, 95], "sinkhorn_knopp_unbalanc": [0, 91, 95], "sinkhorn_stabilized_unbalanc": [0, 91, 95], "sinkhorn_reg_scaling_unbalanc": [0, 91], "sinkhorn_unbalanced2": [0, 91, 95], "parameterss": [0, 91], "round": [0, 2, 29, 31, 33, 35, 36, 51, 85, 91], "31912858": [0, 91], "sim": [0, 75, 83, 88], "et": [0, 3, 60, 66, 73, 82, 88, 94, 95], "al": [0, 3, 60, 66, 73, 82, 88, 94, 95], "radon": [0, 3, 60, 88, 94, 95], "imag": [0, 3, 11, 12, 27, 34, 38, 41, 51, 58, 60, 73, 75, 83, 84, 88, 92, 94, 95, 96], "51": [0, 3, 31, 33, 58, 60, 81, 82, 88, 94, 95], "22": [0, 3, 5, 42, 58, 60, 73, 88, 94, 95, 96], "45": [0, 3, 16, 58, 60, 82, 88, 91, 94, 95, 96], "sliced_wasserstein_spher": [0, 61, 88], "discrep": [0, 61, 81, 85, 88], "ssw_p": [0, 88], "int_": [0, 88], "sigma": [0, 8, 21, 23, 24, 25, 28, 39, 75, 76, 83, 88, 92], "foral": [0, 73, 81, 82, 83, 88, 92], "tx": [0, 12, 88], "_2": [0, 41, 73, 75, 79, 81, 83, 87, 88, 92], "keepdim": [0, 42, 61, 72, 88], "sliced_wasserstein_sphere_unif": [0, 4, 88], "ssw_2": [0, 4, 88], "42": [0, 1, 2, 3, 5, 9, 16, 19, 23, 25, 35, 40, 45, 58, 82, 88, 94, 96], "randn": [0, 1, 3, 5, 6, 8, 15, 23, 30, 33, 39, 42, 46, 49, 61, 65, 72, 88], "500": [0, 3, 4, 5, 6, 8, 19, 25, 31, 44, 57, 72, 74, 81, 88, 89], "ssw": [0, 4, 88], "allclos": [0, 72, 88], "01734": [0, 88], "atol": [0, 72, 88], "unbalanced_typ": 0, "n_thread": 0, "plan_init": 0, "potentials_init": 0, "discret": [0, 19, 24, 25, 35, 44, 58, 71, 73, 75, 82, 83, 84, 90, 94, 95, 96], "otresult": [0, 92], "t_": [0, 81], "m_": [0, 30, 87, 95], "lambda_r": 0, "lambda_u": 0, "penal": [0, 38, 68, 76, 87, 91, 94], "exact": [0, 17, 38, 50, 58, 68, 73, 76, 82, 85, 86, 91, 92, 94, 95, 96], "array_lik": [0, 75, 83, 92], "l2": [0, 10, 11, 38, 44, 53, 64, 68, 76, 81, 87, 89, 91, 94, 95, 96], "tv": [0, 56], "omp": 0, "_type_": 0, "toler": [0, 34, 72, 74, 85, 89], "re": [0, 60, 61, 65, 66, 72, 82, 92], "obtain": [0, 57, 75, 87, 95], "value_linear": [0, 92], "more": [0, 29, 31, 36, 46, 51, 70, 72, 73, 77, 79, 82, 95, 96], "avail": [0, 26, 69, 70, 72, 94, 95, 96], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 71, 72, 73, 76, 82, 89, 92, 95, 96], "origin": [0, 2, 24, 28, 70, 71, 82, 89, 95, 96], "paper": [0, 11, 73, 94, 95, 96], "formul": [0, 85, 89, 94, 95], "17": [0, 1, 9, 18, 25, 42, 58, 82, 89, 94, 95], "blondel": [0, 49, 71, 89, 90, 94, 95, 96], "segui": [0, 14, 49, 89, 90, 94, 95], "rolet": [0, 49, 71, 89, 90, 94, 95], "twenti": [0, 73, 89, 94, 95], "aistat": [0, 73, 75, 89, 94, 95], "solve_gromov": [0, 96], "ca": 0, "cb": [0, 40], "whether": [0, 72, 81, 82, 92], "wass": 0, "Not": [0, 72], "correspond": [0, 6, 7, 26, 51, 75, 77, 81, 82, 83, 87, 95, 96], "yet": [0, 81, 95, 96], "semirelax": 0, "pgd": [0, 31, 33, 81], "ppa": [0, 31, 33, 81, 96], "proxim": [0, 31, 33, 81, 96], "value_quad": [0, 92], "part": [0, 2, 92, 96], "loss_linear_term": 0, "loss_quad_term": 0, "includ": [0, 69, 70, 74, 77, 82, 92, 95, 96], "48": [0, 29, 36, 51, 58, 81, 84, 94, 96], "right_margin": 0, "marginal_b": [0, 92], "29": [0, 5, 27, 42, 58, 75, 79, 85, 94, 95, 96], "36th": [0, 94, 95], "c\u00e9dric": [0, 29, 31, 33, 35, 36, 71, 80, 81, 84, 94], "2022": [0, 32, 75, 79, 81, 82, 94], "iclr": [0, 29, 36, 81, 84, 89, 94], "alaya": [0, 48, 71, 73, 85, 94, 95], "gasso": [0, 48, 66, 73, 85, 87, 91, 94, 95], "2020": [0, 8, 13, 39, 41, 46, 73, 74, 75, 80, 83, 85, 94, 95, 96], "posit": [0, 2, 7, 10, 11, 13, 35, 48, 51, 52, 53, 56, 58, 63, 64, 69, 72, 75, 79, 82, 84, 85, 86, 94, 95], "unlabel": [0, 75, 85, 94, 95], "neurip": [0, 48, 85, 87, 91, 94, 95], "tic": [0, 11, 30, 44, 92, 96], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 70, 72, 92, 95, 96], "matlab": [0, 71, 92], "toc": [0, 11, 30, 44, 92, 96], "messag": [0, 70, 73, 92, 96], "elaps": [0, 11, 30, 92], "toq": [0, 92], "julia": [0, 92], "type_a": [0, 72, 88, 92, 96], "bin": [0, 7, 10, 11, 13, 44, 48, 52, 53, 56, 58, 63, 64, 76, 82, 92, 95], "expect": [0, 8, 46, 69, 70, 73, 92, 94, 95], "output": [0, 5, 8, 34, 70, 73, 75, 81, 90, 92, 94, 95, 96], "pytorch": [0, 9, 38, 46, 71, 72, 76, 80, 86, 90, 92, 94, 95, 96], "wasserstein_1d": [0, 7, 57, 82, 95, 96], "dimension": [0, 33, 38, 50, 65, 73, 76, 77, 82, 94, 95, 96], "15": [0, 5, 8, 13, 14, 18, 22, 25, 28, 30, 40, 42, 46, 58, 65, 75, 82, 91, 94, 95, 96], "batch": [0, 7, 8, 32, 73, 75, 80, 81, 82, 90, 92], "formal": [0, 73, 82], "so": [0, 2, 8, 44, 67, 81, 82, 92, 95, 96], "wai": [0, 19, 70, 82, 95], "build": [0, 8, 28, 70, 75, 82, 94, 95, 96], "individu": [0, 69, 82], "quantil": [0, 82, 85], "integr": [0, 82], "them": [0, 29, 36, 72, 75, 82, 85, 96], "prefer": [0, 70, 77, 82], "whenev": [0, 82], "differ": [0, 2, 16, 31, 38, 44, 51, 59, 69, 73, 74, 75, 81, 82, 86, 91, 94, 95, 96], "over": [0, 8, 35, 72, 73, 81, 82, 83, 85, 92], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 72, 74, 81, 82, 84, 89, 92, 94, 95, 96], "least": [0, 70, 82, 83], "chap": [0, 82], "atom": [0, 73, 81, 82], "consid": [0, 7, 26, 28, 35, 39, 41, 69, 70, 73, 82, 85, 92, 95], "been": [0, 8, 71, 82, 85, 92, 94, 95, 96], "prior": [0, 70, 73, 82, 95], "being": [0, 44, 51, 70, 75, 82, 95, 96], "wasserstein_circl": [0, 57, 82], "ot_": [0, 82, 95], "cdf_u": [0, 82], "cdf_v": [0, 82], "w_1": [0, 82, 95], "levm": [0, 82], "hundries": [0, 82, 94], "shayan": [0, 82, 94], "marcel": [0, 82, 94], "klatt": [0, 82, 94], "axel": [0, 82, 94], "munk": [0, 82, 94], "circular": [0, 28, 82, 94], "direct": [0, 35, 56, 82, 84, 89, 94, 96], "innov": [0, 82, 94], "bicentenni": [0, 82, 94], "tribut": [0, 82, 94], "florenc": [0, 82, 94], "nightingal": [0, 82, 94], "singapor": [0, 82, 94], "springer": [0, 82, 94], "natur": [0, 72, 82, 94], "57": [0, 58, 75, 79, 82, 94, 96], "82": [0, 51, 58, 82, 94, 96], "weak_optimal_transport": [0, 43, 93], "weak": [0, 38, 50, 71, 76, 86, 94, 95, 96], "_j": [0, 77, 82, 89, 90, 93], "guess": [0, 84, 93], "indep": [0, 84, 93], "joint": [0, 35, 73, 81, 83, 84, 93, 94, 95, 96], "densiti": [0, 84, 93], "numitermaxemd": [0, 84, 93], "stopthr2": [0, 84, 93], "gozlan": [0, 16, 82, 93, 94, 95], "roberto": [0, 93, 94, 95], "samson": [0, 93, 94, 95], "tetali": [0, 93, 94, 95], "kantorovich": [0, 82, 93, 94, 95], "dualiti": [0, 93, 94, 95], "273": [0, 82, 93, 94, 95], "3327": [0, 93, 94, 95], "3405": [0, 93, 94, 95], "go": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 96], "end": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 75, 82, 83, 87, 95], "download": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67], "full": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 72, 73, 90, 92, 94, 96], "author": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 94], "remi": [1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 32, 39, 42, 43, 45, 46, 47, 51, 52, 53, 54, 55, 56], "polytechniqu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 43, 45, 47], "edu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 43, 44, 45, 47, 95], "licens": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67], "mit": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 94], "sphinx_gallery_thumbnail_numb": [1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 40, 41, 42, 43, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66], "pyplot": [1, 4, 5, 8, 10, 12, 13, 15, 16, 19, 23, 25, 28, 30, 32, 34, 41, 44, 46, 47], "pl": [1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 16, 18, 20, 21, 22, 24, 26, 29, 30, 31, 32, 33, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67], "manual_se": [1, 3, 4, 5, 8, 32], "n_source_sampl": [1, 5, 18, 22, 24, 75], "n_target_sampl": [1, 5, 18, 22, 24, 75], "noise_level": [1, 5, 24], "make_data_classif": [1, 18, 20, 21, 22, 24, 26], "gaussrot": [1, 24], "nz": [1, 21, 24, 42, 76], "xt": [1, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 33, 41, 42, 43, 45, 54, 55, 57, 60, 61, 65, 66, 67, 73, 75, 79, 83, 86, 87, 90, 95], "yt": [1, 18, 20, 21, 22, 24, 26, 30, 42, 75], "one": [1, 3, 5, 7, 19, 23, 24, 25, 28, 32, 34, 35, 49, 51, 70, 72, 73, 75, 76, 82, 87, 95, 96], "mode": [1, 5, 24, 75], "chang": [1, 2, 5, 24, 34, 35, 70, 72, 73, 82, 95, 96], "varianc": [1, 5, 24, 33], "figur": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70], "clf": [1, 2, 3, 4, 5, 8, 11, 21, 23, 24, 29, 30, 31, 32, 34, 35, 36, 39, 41, 46, 47, 51, 55, 56, 64, 66], "scatter": [1, 2, 3, 4, 5, 6, 8, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 30, 32, 33, 34, 35, 40, 41, 42, 51, 57, 61, 65, 66, 67], "marker": [1, 5, 14, 16, 18, 20, 21, 22, 24, 26, 32, 35, 40, 42], "o": [1, 5, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 34, 35, 44, 47, 51, 80, 81, 94, 95, 96], "legend": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 23, 24, 26, 32, 35, 40, 41, 42, 43, 44, 45, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 66], "loc": [1, 5, 14, 18, 20, 22, 23, 24, 26, 29, 31, 36, 40, 41, 42, 43, 45, 54, 55, 60, 61, 63, 66], "titl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 51, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 86, 94], "requires_grad": [1, 6, 46], "adam": [1, 5, 32, 81], "lr": [1, 2, 3, 4, 5, 6, 7, 8, 32, 46, 49, 90], "n_iter": [1, 4, 5, 8], "rang": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 21, 28, 29, 31, 32, 34, 35, 36, 39, 40, 41, 44, 46, 47, 51, 56, 57, 60, 61, 64, 66, 67, 96], "nois": [1, 5, 8, 28, 65, 76], "minu": [1, 5], "becaus": [1, 5, 82, 95, 96], "maxim": [1, 5, 82, 90, 91, 96], "te": [1, 5], "loss_dual_entrop": [1, 5], "append": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 28, 29, 31, 32, 34, 35, 36, 44, 46, 64, 65, 92], "detach": [1, 2, 3, 4, 5, 6, 7, 8, 32, 46, 72], "3d": [1, 4, 5, 8, 10, 11, 16, 61, 64], "backward": [1, 2, 3, 5, 6, 7, 8, 32, 46], "zero_grad": [1, 5, 8], "grid": [1, 4, 5, 6, 8, 61], "xlabel": [1, 4, 5, 6, 8, 19, 25, 30, 32, 35, 39, 40, 46, 51, 56, 57, 60, 61], "ge": [1, 54, 58], "plan_dual_entrop": [1, 5], "20204949002247302": 1, "19": [1, 17, 18, 25, 42, 44, 49, 58, 90, 94, 95, 96], "662825536403204": 1, "50880063676151": 1, "94968614657631": 1, "197216115570654": 1, "92043243593924": 1, "60": [1, 3, 4, 5, 7, 8, 10, 11, 13, 31, 32, 33, 35, 44, 48, 52, 53, 58, 63, 64, 82], "41": [1, 7, 9, 25, 27, 44, 50, 51, 58, 87, 91, 94, 96], "924890983275354": 1, "24224195186385": 1, "80": [1, 4, 5, 8, 11, 14, 31, 35, 52, 58, 96], "35191241916756": 1, "90": [1, 5, 8, 16, 31, 51, 52, 56, 58, 96], "38752718709047": 1, "409752704159374": 1, "110": [1, 5, 8, 31, 52, 58], "42023387848141": 1, "120": [1, 5, 8, 31, 48, 52, 58, 61], "42394598363345": 1, "130": [1, 5, 8, 31, 52, 58, 96], "426857504364534": 1, "140": [1, 5, 8, 31, 52, 58, 96], "42914736500385": 1, "150": [1, 4, 5, 8, 16, 18, 20, 22, 26, 31, 44, 47, 52, 57, 58, 96], "43085926660218": 1, "160": [1, 5, 8, 31, 44, 52, 58, 96], "43229904499419": 1, "170": [1, 5, 8, 31, 52, 58, 96], "43346159626151": 1, "180": [1, 5, 8, 31, 44, 52, 58], "43439875767295": 1, "190": [1, 5, 8, 31, 52, 58], "43514584281792": 1, "plot2d_samples_mat": [1, 20, 43, 45, 54, 55], "zorder": [1, 2, 5, 35, 40, 47], "01": [1, 9, 10, 17, 18, 22, 27, 29, 30, 31, 33, 36, 37, 42, 49, 50, 52, 56, 58, 59, 64, 65, 68, 73, 85, 87], "loss_dual_quadrat": 1, "gq": 1, "plan_dual_quadrat": 1, "0018442196020623663": 1, "809460345084254": 1, "426513157594925": 1, "723243122013415": 1, "93947346106286": 1, "72563917327977": 1, "68839766622662": 1, "0791576989381": 1, "2066628918355": 1, "268319790133226": 1, "29347566241247": 1, "301776860467484": 1, "30784726471754": 1, "3115114939725": 1, "31409375172724": 1, "3161172599585": 1, "31782528510188": 1, "31927452868262": 1, "32041291200664": 1, "321245628900904": 1, "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 82, 95], "script": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 96], "minut": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67], "943": [1, 9], "plot_dual_ot_pytorch": [1, 9], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 96], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 95, 96], "ipynb": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 94, 96], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 70, 96], "express": [2, 6, 69, 95], "model": [2, 3, 5, 32, 73, 94, 95, 96], "actual": [2, 95], "proport": [2, 29, 31, 35, 36, 51, 73, 75, 76, 86], "sbm": [2, 29, 31, 32, 35, 36], "allow": [2, 6, 33, 34, 39, 41, 46, 65, 70, 74, 85, 95, 96], "accur": 2, "simultan": 2, "other": [2, 6, 7, 42, 51, 69, 70, 81, 89, 90, 92, 94, 96], "properti": [2, 8, 75, 81, 82, 83, 92, 94, 95], "sklearn": [2, 32, 34, 35, 40, 92, 96], "manifold": [2, 32, 34, 35, 77, 95], "md": [2, 35, 96], "pylab": [2, 3, 6, 7, 11, 14, 16, 18, 20, 21, 22, 24, 26, 29, 31, 33, 35, 36, 39, 40, 42, 43, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67], "torch": [2, 3, 4, 6, 7, 8, 32, 46, 72, 80, 95, 96], "ot": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 46, 47, 48, 49, 52, 54, 59, 60, 61, 63, 64, 65, 66, 67, 70, 71, 94, 96], "rng": [2, 6, 19, 23, 25, 34, 40, 41, 49], "def": [2, 3, 4, 5, 6, 8, 16, 19, 21, 23, 25, 28, 29, 31, 32, 33, 34, 35, 36, 57, 58, 66, 72, 92], "get_sbm": 2, "nc": [2, 35], "ratio": 2, "nbpc": 2, "astyp": [2, 3, 14, 15, 16, 19, 23, 25, 31, 33, 34, 35, 41], "zero": [2, 3, 4, 6, 8, 10, 11, 22, 29, 31, 33, 35, 36, 46, 51, 53, 55, 56, 57, 64, 72, 74, 75, 81, 82, 92, 96], "rand": [2, 4, 8, 23, 42, 44, 45, 65, 67, 72], "ey": [2, 35, 72], "05": [2, 5, 18, 24, 25, 31, 33, 42, 49, 52, 58, 67, 72, 73, 75, 81, 82, 83, 87], "ones": [2, 8, 14, 15, 28, 29, 30, 31, 35, 36, 44, 51, 54, 60, 61, 66, 67, 72, 75, 81], "2d": [2, 16, 17, 18, 20, 21, 22, 26, 35, 38, 43, 45, 51, 55, 59, 62, 66, 68, 73, 76, 82, 85, 86, 91, 92, 95, 96], "dissimilar": [2, 34, 35], "precomput": [2, 34, 35, 95], "fit_transform": [2, 32, 34, 35, 75], "plot_graph": [2, 35], "color": [2, 4, 5, 6, 7, 10, 13, 15, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 40, 41, 44, 46, 47, 51, 54, 57, 61, 65, 66, 67, 75, 86, 92, 95, 96], "c0": [2, 5, 35, 40, 66, 67], "edgecolor": [2, 15, 35, 40], "cmap": [2, 5, 10, 12, 13, 21, 28, 30, 33, 35, 40, 51, 64, 65, 67], "tab10": [2, 35, 40], "vmax": [2, 21, 28, 35, 40, 46, 51], "subplot": [2, 4, 5, 8, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 42, 43, 45, 46, 51, 55, 56, 58, 64, 65, 66, 67, 86], "axi": [2, 3, 4, 5, 12, 13, 15, 16, 19, 21, 23, 25, 29, 31, 32, 35, 36, 40, 41, 47, 55, 57, 58, 60, 61, 65, 67, 72, 77, 89, 92], "imshow": [2, 12, 13, 18, 19, 20, 22, 23, 25, 26, 30, 33, 35, 39, 40, 43, 46, 51, 54, 55, 58, 65, 67], "nearest": [2, 18, 20, 22, 26, 30, 35, 38, 43, 50, 54, 55, 75, 83, 94, 96], "adjac": [2, 28, 80], "home": [2, 5, 7, 10, 15, 18, 20, 21, 22, 28, 31, 33, 34, 35, 44, 48, 51, 57, 58, 64], "circleci": [2, 5, 7, 10, 15, 18, 20, 21, 22, 28, 31, 33, 34, 35, 44, 48, 51, 57, 58, 64, 96], "local": [2, 34, 35, 70, 95, 96], "lib": [2, 34, 35, 72], "python3": [2, 34, 35], "site": [2, 34, 35], "packag": [2, 34, 35, 73, 92, 95, 96], "_md": [2, 34, 35], "298": [2, 34, 35, 96], "futurewarn": [2, 34, 35], "normalized_stress": [2, 34, 35], "auto": [2, 30, 34, 35, 40], "suppress": [2, 34, 35], "manual": [2, 34, 35], "plot_optim_gromov_pytorch": [2, 9], "81": [2, 58], "userwarn": [2, 5, 7, 15, 18, 20, 21, 22, 31, 33, 35, 48, 51, 58, 64], "colormap": [2, 10, 35, 40, 64], "ignor": [2, 35, 44, 46, 72, 75, 84, 96], "diagon": [2, 26, 28, 72, 79, 92], "want": [2, 8, 15, 18, 20, 21, 31, 33, 46, 51, 58, 95, 96], "up": [2, 70, 96], "min_weight_gw": 2, "a2": [2, 10, 11, 13, 15, 44, 64], "nb_iter_max": [2, 3, 7], "min_a": [2, 95], "our": [2, 3, 7, 94, 95, 96], "c1_torch": 2, "c2_torch": 2, "a0": 2, "random_init": 2, "a1_torch": 2, "requires_grad_": [2, 3, 4, 7], "a2_torch": 2, "loss_it": [2, 3, 7], "clone": [2, 3, 4, 7, 70, 72], "03d": [2, 32], "no_grad": [2, 3, 6, 7, 46], "grad": [2, 3, 4, 6, 7, 42, 46, 72, 81, 89, 90], "zero_": [2, 3, 6, 7, 46], "proj_simplex": [2, 6, 7, 46], "a1": [2, 10, 11, 13, 15, 44, 64], "a0_est": 2, "loss_iter0": 2, "29850312": 2, "20157616": 2, "49992072": 2, "clear": 2, "noe": 2, "receiv": [2, 70], "most": [2, 73, 92, 95, 96], "show": [2, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 69, 82], "here": [2, 4, 66, 81, 82, 94, 95, 96], "previous": 2, "t_unif": 2, "label_unif": 2, "argmax": [2, 29, 31, 32, 35, 36, 39, 46, 72, 83], "t_est": 2, "label_est": 2, "est": 2, "7760154087783518": 2, "5785554952306606": 2, "7708789474385981": 2, "6510858680020267": 2, "now": [2, 4, 51, 72, 95, 96], "seen": [2, 73, 82, 95], "probabl": [2, 7, 16, 32, 35, 46, 75, 79, 81, 82, 94], "link": [2, 29, 31, 70, 94, 96], "graph_compression_gw": 2, "nb_node": 2, "clamp": 2, "a0_est2": 2, "c0_est2": 2, "loss_iter2": 2, "5e": [2, 13, 21, 33, 34, 66], "vmin": [2, 28, 40, 46, 51], "colorbar": [2, 35, 40, 51], "29985821": 2, "18926744": 2, "51087435": 2, "0x7f45dee724d0": 2, "234": [2, 9, 96], "36": [3, 5, 58, 87, 91, 94, 95], "liutku": [3, 94, 95], "simsekli": [3, 94, 95], "majewski": [3, 94, 95], "durmu": [3, 94, 95], "st\u00f6ter": [3, 94, 95], "mai": [3, 69, 70, 81, 82, 85, 87, 94, 95, 96], "nonparametr": [3, 94, 95], "diffus": [3, 94, 95], "4104": [3, 94, 95], "4113": [3, 94, 95], "load": [3, 19, 25, 51, 95], "i1": [3, 14, 16, 19, 23, 25], "imread": [3, 12, 13, 14, 16, 19, 23, 25, 34], "redcross": [3, 12, 14, 16], "png": [3, 12, 13, 14, 16, 34, 47], "i2": [3, 14, 16, 19, 23, 25], "tooth": [3, 12, 16], "sz": [3, 14, 16], "xx": [3, 5, 14], "yy": [3, 5, 14], "meshgrid": [3, 4, 5, 14, 16, 72], "arang": [3, 7, 10, 11, 13, 14, 16, 30, 39, 40, 42, 44, 46, 48, 52, 53, 55, 56, 58, 63, 64, 72, 73, 92], "stack": [3, 14, 16, 35, 41, 72], "32": [3, 5, 14, 42, 58, 77, 81, 94, 95], "x3": [3, 14, 15], "collect": [3, 10, 11, 34, 57, 64, 73], "pathcollect": [3, 34, 57], "0x7f45de243a00": 3, "devic": [3, 7, 72, 95, 96], "cuda": [3, 7, 71, 96], "is_avail": [3, 7], "x1_torch": 3, "x2_torch": 3, "1e3": 3, "x_all": 3, "gen": 3, "5e1": 3, "ax": [3, 4, 10, 12, 13, 15, 16, 40, 46, 51, 61, 64, 72, 84, 95], "_update_plot": [3, 4, 8, 16, 66], "ani": [3, 4, 8, 16, 41, 44, 66, 69, 70, 72, 74, 75, 81, 82, 83, 84, 87, 92, 94, 95], "funcanim": [3, 4, 8, 16, 66], "gcf": [3, 4, 8, 10, 64, 66], "interv": [3, 4, 8, 16, 60, 61, 66, 72], "repeat_delai": [3, 4, 8, 16, 66], "2000": [3, 4, 7, 8, 16, 44, 66], "onc": [3, 4, 8, 16, 66], "loop": [3, 4, 8, 16, 51, 66, 75], "reflect": [3, 4, 8, 16, 66], "x3_torch": 3, "xbinit": 3, "16": [3, 7, 15, 18, 25, 30, 35, 39, 42, 46, 58, 72, 74, 77, 82, 87, 94, 95], "xbary_torch": 3, "996": [3, 9], "plot_sliced_wass_grad_flow_pytorch": [3, 9], "transform": [4, 18, 19, 20, 22, 24, 26, 75, 81, 90, 92, 95], "cl\u00e9ment": [4, 57, 61, 71], "clement": [4, 57, 61], "univ": [4, 21, 22, 39, 46, 57, 61, 66, 67], "ub": [4, 39, 46, 57, 61, 66, 67], "fr": [4, 7, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 39, 40, 41, 42, 46, 52, 53, 54, 55, 56, 57, 61, 63, 64, 65, 66, 67], "nn": [4, 5, 8, 32, 96], "function": [4, 7, 10, 12, 34, 41, 51, 64, 66, 70, 73, 80, 81, 94, 95, 96], "plot_spher": 4, "xlist": 4, "linspac": [4, 5, 10, 15, 28, 56, 57, 64, 72, 96], "ylist": 4, "z": [4, 10, 35, 48, 61, 64, 71, 73, 82, 89, 92, 94, 95], "plot_wirefram": [4, 61], "grai": [4, 61], "bottom": [4, 13, 51], "half": 4, "set_titl": [4, 10, 13, 15, 46], "0x7f45fd9e9f90": 4, "xvisu": [4, 8], "sw": 4, "grad_x": 4, "item": [4, 28, 29, 31, 32, 36, 70], "semilogi": [4, 6, 8], "21157926321029663": 4, "23": [4, 5, 6, 8, 9, 42, 50, 56, 58, 73, 82, 94, 95, 96], "52222222222222": [4, 5, 6, 8], "ivisu": [4, 8], "fig": [4, 12, 13, 15, 16, 33, 34, 39, 40, 46, 55, 61, 65], "add_subplot": [4, 10, 16, 33, 64, 65], "set_xlim": [4, 15, 61], "set_ylim": [4, 15, 61], "977": [4, 9], "plot_ssw_unif_torch": [4, 9], "nvisu": [5, 58], "300": [5, 31, 35, 44], "ax_bound": 5, "mlp": [5, 8], "modul": [5, 8, 32, 48, 51, 70, 73, 77, 80, 83, 86, 94, 96], "__init__": [5, 8, 32, 75, 92], "self": [5, 8, 32, 75, 92], "super": [5, 8, 32], "fc1": [5, 8], "fc2": [5, 8], "relu": [5, 8], "heavisid": [5, 8], "fn": [5, 8], "forward": [5, 8, 32, 80, 95], "ravel": [5, 28, 66, 67, 89, 92], "doubl": [5, 46, 51], "005": [5, 32, 67], "n_batch": 5, "iperm": 5, "randint": [5, 19, 25, 28, 32, 44], "ipermt": 5, "xsi": 5, "xti": 5, "257329928299894": 5, "890456785604673": 5, "58037947236615": 5, "18": [5, 18, 25, 28, 42, 49, 58, 85, 90, 94, 95], "440996850749865": 5, "12608610815788": 5, "275903405782387": 5, "27": [5, 35, 42, 58, 73, 75, 94, 96], "268827591939186": 5, "79159074243252": 5, "63488731570214": 5, "12722861847872": 5, "696522621311644": 5, "33": [5, 33, 39, 42, 46, 48, 58, 73, 74, 94, 95], "46949401889149": 5, "64206913098603": 5, "15381635153295": 5, "28321242161009": 5, "520585380642636": 5, "676096587323535": 5, "45865441165184": 5, "43596310348253": 5, "26194570410683": 5, "01278968196742": 5, "210": [5, 31, 96], "87401169938976": 5, "220": [5, 31, 96], "12820568044987": 5, "230": [5, 31, 44], "6372243096062": 5, "240": [5, 31, 96], "65926621902025": 5, "250": [5, 31, 44], "527425475361845": 5, "260": [5, 31, 96], "126583681704034": 5, "270": [5, 31], "735871196038286": 5, "280": [5, 31, 44, 96], "157560505651844": 5, "290": [5, 31, 96], "070647347170436": 5, "27069736487665": 5, "310": [5, 31, 96], "40325557106319": 5, "320": [5, 11, 31, 44], "75151933211852": 5, "330": [5, 31], "50578707289677": 5, "340": [5, 31, 96], "833572391120526": 5, "350": [5, 31, 96], "54009720287946": 5, "360": [5, 31, 96], "54715464928039": 5, "370": [5, 31, 62], "63597866286179": 5, "380": [5, 31, 96], "85734724064162": 5, "390": [5, 31], "22195044833466": 5, "400": [5, 31, 44, 96], "54526255143114": 5, "410": [5, 31, 96], "20288271113561": 5, "420": [5, 31], "14673091868496": 5, "430": [5, 31], "32427691564021": 5, "440": [5, 31], "51095472212393": 5, "450": [5, 31], "56664149963812": 5, "460": [5, 31], "557146416121796": 5, "470": [5, 31], "7012331965002": 5, "480": [5, 31], "754363123393354": 5, "490": [5, 31], "129209682796": 5, "nv": [5, 66], "xl": 5, "yl": 5, "xg": [5, 8], "concaten": [5, 6, 15, 23, 42, 47, 57, 65, 67, 72, 87, 92], "wxg": 5, "exp": [5, 51, 57, 72, 77, 90, 95], "iv": [5, 57, 66], "gg": [5, 30], "wt": [5, 79, 90], "reshap": [5, 19, 23, 25, 28, 32, 34, 42, 44, 48, 52, 53, 56, 58, 63, 65, 66, 72, 73, 85, 87], "pcolormesh": 5, "green": [5, 7], "plot_stoch_continuous_ot_pytorch": [5, 9], "159": [5, 58], "doe": [5, 51, 70, 72, 81, 95, 96], "handl": [5, 7, 92, 95, 96], "quadmesh": 5, "http": [5, 48, 51, 55, 69, 72, 73, 89, 92, 94, 95, 96], "org": [5, 48, 55, 69, 72, 73, 89, 92, 94, 95, 96], "tutori": [5, 70, 95], "legend_guid": 5, "html": [5, 51, 70, 72, 94], "custom": 5, "handler": 5, "173": [5, 58], "187": [5, 58], "767": [5, 9], "mix": [6, 7, 46], "word": [6, 95], "suppos": [6, 73, 95], "s_k": 6, "w_k": [6, 95], "belong": [6, 33, 65, 83, 87], "delta_k": 6, "observ": [6, 73, 76], "pot": [6, 7, 12, 18, 33, 34, 39, 41, 46, 49, 50, 65, 67, 71, 72, 74, 92, 96], "nt1": 6, "ns1": 6, "xs1": [6, 21], "xs2": [6, 21, 57], "s_1": 6, "s_2": 6, "0x7f45ff704400": 6, "h2": [6, 29, 31, 36, 81], "2e": [6, 48, 53, 66], "rate": [6, 81, 82, 90], "niter": [6, 44, 46, 82], "get_loss": 6, "mv": 6, "squar": [6, 34, 41, 51, 55, 56, 72, 75, 77, 81, 83, 88, 89, 92, 94, 95, 96], "mixtur": 6, "09980706": 6, "90019294": 6, "dot": [6, 10, 11, 21, 23, 29, 31, 33, 36, 44, 45, 51, 64, 65, 72, 92], "c3": [6, 29, 31, 36, 47], "0x7f45fe13f280": 6, "630": [6, 9, 31], "plot_unmix_optim_torch": [6, 9], "refer": [7, 29, 31, 36, 70, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93], "ensur": [7, 28, 70, 82, 95], "remain": 7, "illustr": [7, 10, 11, 12, 13, 14, 15, 16, 28, 29, 30, 31, 32, 35, 36, 40, 42, 43, 45, 46, 48, 51, 52, 53, 54, 57, 58, 60, 61, 63, 64, 66, 70, 96], "within": [7, 69, 72, 81], "framework": [7, 35, 96], "ncourti": [7, 12, 33, 34], "irisa": [7, 12, 28, 30, 33, 34, 54, 65], "mpl": 7, "make_1d_gauss": [7, 10, 11, 13, 44, 48, 52, 53, 56, 58, 63, 64], "gauss": [7, 48, 52, 53, 56, 63, 75], "red": [7, 19, 25, 30, 32, 41, 51], "to_rgb": 7, "blue": [7, 12, 19, 25, 30, 32, 33, 39, 40, 41, 46, 51], "dtype": [7, 10, 11, 13, 44, 48, 52, 53, 56, 58, 60, 61, 63, 64, 72, 73, 96], "gaussian": [7, 8, 10, 23, 24, 25, 28, 44, 48, 52, 53, 56, 58, 63, 64, 71, 72, 75, 76, 83, 92, 94, 95, 96], "mean": [7, 10, 11, 13, 29, 31, 32, 36, 40, 44, 48, 52, 53, 56, 57, 58, 60, 61, 63, 64, 72, 73, 76, 77, 79, 80, 82, 95, 96], "std": [7, 10, 11, 13, 30, 44, 48, 52, 53, 56, 57, 58, 60, 61, 63, 64, 72, 76, 81, 96], "enforc": [7, 41, 75, 95], "x_torch": 7, "a_torch": 7, "b_torch": 7, "800": [7, 31, 44], "figsiz": [7, 11, 12, 13, 15, 16, 18, 19, 20, 22, 23, 25, 26, 28, 29, 31, 32, 34, 36, 40, 42, 44, 46, 48, 49, 52, 53, 55, 58, 61, 63, 64], "onto": [7, 18, 20, 22, 75, 81, 89, 92, 95], "curv": [7, 46], "everi": [7, 35, 41, 74, 75, 81, 94], "lw": [7, 13, 29, 31, 36, 40, 51], "evolut": [7, 35, 57, 73, 81, 94], "fontsiz": [7, 13, 28, 29, 30, 31, 32, 33, 35, 36, 40, 51, 61, 66], "solver_1d": [7, 57], "than": [7, 51, 72, 81, 95, 96], "revers": [7, 72], "throw": [7, 96], "futur": [7, 28, 73, 96], "releas": [7, 10, 64, 73, 94, 95], "mt": [7, 79], "transpos": [7, 39, 46, 72, 96], "ndim": [7, 28], "trigger": [7, 74], "aten": 7, "src": 7, "nativ": 7, "tensorshap": 7, "cpp": 7, "3614": 7, "cw": 7, "contigu": 7, "tw": [7, 80, 94], "bary_torch": 7, "instant": 7, "548": [7, 9], "plot_wass1d_torch": [7, 9], "fit": [8, 23, 25, 26, 34, 41, 73, 75, 82, 83, 92, 95], "g_": 8, "realist": 8, "drawn": [8, 76, 86], "indistinguish": 8, "mu_d": 8, "arjovsky2017": 8, "access": [8, 51, 94], "cannot": [8, 26, 44, 75, 91, 95, 96], "larg": [8, 26, 49, 75, 77, 85, 90, 94, 95, 96], "genevay2018": 8, "studi": 8, "fatras2019": 8, "arjovski": 8, "chintala": 8, "bottou": 8, "adversari": [8, 95], "214": 8, "223": 8, "genevai": [8, 49, 73, 90, 94, 95], "aud": [8, 73, 94], "fatra": [8, 49, 54, 71, 94], "zine": 8, "gribonv": 8, "june": 8, "asymptot": 8, "23nd": 8, "108": [8, 58, 96], "n_dim": 8, "n_featur": [8, 32, 40, 75, 80, 92], "get_data": 8, "n_sampl": [8, 15, 33, 34, 40, 65, 75], "angl": [8, 23, 57], "cat": 8, "co": [8, 23, 38, 42, 50, 55, 57, 61, 74, 92, 94], "sin": [8, 23, 28, 42, 55, 57, 61, 92], "0x7f45ddc55210": 8, "fc3": 8, "rmsprop": 8, "00019": 8, "doc": [8, 70, 72, 96], "size_batch": 8, "stati": 8, "n_visu": 8, "xnvisu": 8, "ab": [8, 30, 33, 56, 72, 89, 92, 95], "xn": 8, "xd": 8, "smapl": 8, "compt": 8, "del": 8, "9009847640991211": 8, "10964284837245941": 8, "04564394801855087": 8, "03516071289777756": 8, "05013977363705635": 8, "058588504791259766": 8, "03730057179927826": 8, "04171676188707352": 8, "03168988972902298": 8, "031197285279631615": 8, "03596879169344902": 8, "03272819146513939": 8, "032379165291786194": 8, "03959248960018158": 8, "029337508603930473": 8, "05796702206134796": 8, "034939464181661606": 8, "022607704624533653": 8, "04347885772585869": 8, "1164197325706482": 8, "75": [8, 58, 96], "125": [8, 10, 44, 47, 58], "175": [8, 44, 58, 96], "199": [8, 58, 85, 96], "xtick": [8, 11, 18, 20, 22, 26, 30, 40, 56, 66, 67], "ytick": [8, 11, 18, 20, 22, 26, 30, 40, 67], "xlim": [8, 34, 40, 51, 56, 57], "ylim": [8, 34, 40, 56, 57], "0x7f45de1b5450": 8, "481": [8, 9], "plot_wass2_gan_torch": [8, 9], "03": [9, 18, 24, 30, 31, 33, 37, 42, 47, 48, 49, 50, 52, 58, 61, 68, 85], "576": 9, "execut": [9, 17, 27, 37, 50, 59, 62, 68, 82, 95, 96], "auto_examples_backend": 9, "file": [9, 17, 27, 37, 38, 47, 50, 59, 62, 68, 95, 96], "minibatch": [9, 38, 90, 95], "mb": [9, 17, 27, 37, 50, 59, 62, 68], "continu": [9, 35, 38, 44, 73, 82, 90, 95], "estim": [9, 21, 27, 30, 31, 33, 38, 41, 44, 49, 70, 71, 73, 75, 76, 79, 81, 82, 83, 84, 90, 92, 94, 96], "00": [9, 17, 18, 21, 24, 25, 27, 30, 31, 33, 37, 50, 58, 59, 62, 65, 68, 87], "flow": [9, 38, 76, 92, 94, 95, 96], "embed": [9, 31, 32, 33, 34, 38, 81, 94, 95], "sphere": [9, 38, 41, 88], "unmix": [9, 35, 38, 73, 81, 92, 94, 95, 96], "unic": [10, 11, 18, 19, 20, 21, 23, 24, 25, 26, 32, 39, 42, 46, 52, 53, 54, 55, 56, 82], "plt": [10, 12, 13, 15, 16, 19, 23, 25, 28, 34, 41], "necessari": [10, 11, 64, 65, 69, 70, 82, 94, 95, 96], "mpl_toolkit": [10, 11, 33, 64, 65], "mplot3d": [10, 11, 33, 64, 65], "axes3d": [10, 11, 33, 64, 65], "noqa": [10, 11, 33, 64, 65], "polycollect": [10, 11, 64], "creat": [10, 11, 13, 28, 32, 64, 69, 70, 71, 72, 86, 94, 96], "vstack": [10, 11, 13, 30, 32, 44, 64], "n_distribut": [10, 11, 13, 64], "dist0": [10, 11, 13, 64], "l2bari": [10, 11, 64], "bary_l2": [10, 11, 64], "bary_wass": [10, 11, 64], "ax1": [10, 30, 33, 34, 39, 46, 65], "ax2": [10, 30, 33, 34, 39, 46, 65], "tight_layout": [10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 39, 40, 42, 46, 51, 55, 56, 64], "num": [10, 13, 72], "black": [10, 29, 31, 35, 36, 39, 41, 46, 86], "n_alpha": 10, "alpha_list": 10, "b_l2": [10, 64], "b_wass": [10, 64], "cm": [10, 12, 28, 40, 64], "get_cmap": [10, 40, 64], "viridi": [10, 28, 64], "vert": [10, 64], "enumer": [10, 13, 28, 29, 31, 35, 36, 40, 56, 57, 60, 61, 64], "zip": [10, 13, 16, 35, 38, 64, 94], "poli": [10, 64], "facecolor": [10, 40, 47, 64], "set_alpha": [10, 64], "add_collection3d": [10, 64], "zdir": [10, 64], "set_xlabel": [10, 61, 64], "set_xlim3d": [10, 64], "set_ylabel": [10, 13, 51, 61, 64], "set_ylim3d": [10, 64], "set_zlabel": [10, 61, 64], "set_zlim3d": [10, 64], "plot_barycenter_1d": [10, 17], "103": [10, 58], "matplotlibdeprecationwarn": [10, 64], "wa": [10, 51, 64, 72, 95, 96], "remov": [10, 64, 69, 72, 82, 87, 92, 96], "minor": [10, 64, 96], "later": [10, 29, 31, 36, 64, 75], "name": [10, 21, 64, 72, 81, 92, 94, 95], "obj": [10, 44, 64, 82, 89], "890": [10, 17, 31], "standard": [11, 72, 76, 80, 81, 83, 92, 96], "scienc": [11, 19, 25, 58, 75, 84, 94, 95], "343": [11, 96], "cvx": [11, 44], "bary_wass2": 11, "0034651756286621094": 11, "24031591415405273": 11, "005532979965209961": 11, "09207725524902344": 11, "0011057853698730469": 11, "023316621780395508": 11, "nbm": 11, "len": [11, 13, 15, 28, 29, 31, 32, 34, 35, 36, 40, 44, 51, 89, 92], "nbm2": 11, "665": [11, 17], "plot_barycenter_lp_vs_entrop": [11, 17], "design": [12, 29, 33, 34, 36, 39, 41, 49, 58, 65, 67, 87, 95, 96], "how": [12, 24, 29, 32, 33, 34, 35, 36, 39, 41, 46, 49, 51, 56, 57, 65, 67, 73, 96], "pathlib": [12, 13, 19, 23, 25, 34], "path": [12, 13, 19, 23, 25, 34, 38, 68, 70, 76, 87, 94, 96], "four": [12, 34], "construct": [12, 34, 69, 72, 75, 87], "this_fil": [12, 13, 19, 23, 25, 34], "realpath": [12, 13, 19, 23, 25, 34], "__file__": [12, 13, 19, 23, 25, 34], "data_path": [12, 13, 19, 23, 25, 34], "join": [12, 13, 19, 23, 25, 34, 72, 94], "parent": [12, 13, 19, 23, 25, 34], "f1": [12, 13], "f2": [12, 13, 29, 31, 36, 81], "f3": [12, 29, 31, 36], "heart": [12, 13, 16], "f4": 12, "duck": [12, 13, 14], "nb_imag": 12, "corner": [12, 95], "bilinear": [12, 51], "v1": [12, 29, 31, 36], "v2": [12, 29, 31, 36], "v3": 12, "v4": 12, "suptitl": [12, 28], "004": [12, 32], "ty": 12, "tmp1": 12, "tmp2": 12, "elif": [12, 29, 31, 35, 36], "call": [12, 44, 49, 67, 73, 75, 81, 82, 83, 84, 90, 92, 95, 96], "convolutional_barycenter2d": [12, 13, 73, 96], "294": [12, 17, 96], "plot_convolutional_barycent": [12, 17], "janati": [13, 63, 64, 71, 73, 94, 95], "gramfort": [13, 71, 73, 94, 95], "37th": [13, 73, 94, 95], "119": [13, 58, 73, 94, 95], "4692": [13, 73, 94, 95], "4701": [13, 73, 94, 95], "hicham": [13, 63, 64, 71, 94], "janati100": 13, "gmail": [13, 18, 19, 20, 24, 25, 26, 29, 31, 33, 34, 36, 48, 49], "com": [13, 18, 19, 20, 24, 25, 26, 29, 31, 33, 34, 36, 48, 49, 70, 72, 89, 92, 94, 96], "barycenter_debias": [13, 73], "convolutional_barycenter2d_debias": [13, 73, 96], "bar": [13, 87], "bars_debias": 13, "indianr": 13, "gold": [13, 72], "sharei": [13, 30], "bar_debias": 13, "varepsilon": [13, 74], "3f": [13, 21, 66], "asarrai": 13, "displai": [13, 20, 26, 51, 73], "img": [13, 19, 23, 25, 34], "grei": [13, 35, 40, 44], "bars_sinkhorn": 13, "7e": 13, "all_bar": 13, "jj": 13, "ax_row": 13, "ii": [13, 22], "set_xtick": [13, 16, 61], "set_ytick": [13, 16, 61], "spine": 13, "top": [13, 40, 70, 81, 86], "set_vis": 13, "044": [13, 17], "plot_debiased_barycent": [13, 17], "vivien": [14, 89, 94], "iip": 14, "ist": 14, "kyoto": 14, "ac": 14, "jp": 14, "eduardo": [14, 15, 71], "fernand": [14, 15, 71], "montesuma": [14, 15, 71], "universit": [14, 15], "saclai": [14, 15, 32], "measures_loc": [14, 15, 73, 82], "measures_weight": [14, 15, 73, 82], "x_init": [14, 15, 73, 82], "free_support_barycent": [14, 73, 95, 96], "free_support_sinkhorn_barycent": [14, 15, 73], "459": [14, 17], "plot_free_support_barycent": [14, 17], "understood": 15, "cloud": [15, 34], "linalg": [15, 28, 31, 33, 65, 72], "x4": 15, "multivariate_norm": 15, "a3": 15, "a4": 15, "steelblu": 15, "float32": 15, "xb_init": 15, "subplot2grid": [15, 34], "_sinkhorn": [15, 18, 20, 21, 22, 31, 33, 51, 58], "531": [15, 18, 20, 21, 31, 33, 51, 58], "did": [15, 18, 20, 21, 31, 33, 51, 58, 81, 96], "increas": [15, 18, 20, 21, 31, 33, 51, 58, 85], "731": [15, 17], "plot_free_support_sinkhorn_barycent": [15, 17], "saint": [16, 82, 94], "dizier": [16, 82, 94], "live": [16, 35, 70, 82, 94], "subspac": [16, 77, 82, 94, 95], "2105": [16, 82, 94], "09755": [16, 82, 94], "eloi": [16, 41, 71], "tangui": [16, 33, 41, 71, 81], "sub_sample_factor": 16, "i3": 16, "uu": 16, "vv": 16, "x_list": [16, 82], "im": [16, 23, 25, 40, 51], "a_list": [16, 82], "p1": [16, 21, 29, 31, 32, 36, 47], "p2": [16, 21, 29, 31, 32, 36, 47], "p3": [16, 29, 31, 36], "p_list": [16, 82], "n_samples_bari": [16, 82], "send": [16, 70], "visual": [16, 20, 26, 32, 39, 52, 53], "x_visu": 16, "xi": 16, "view_init": [16, 61], "azim": 16, "set_ztick": [16, 61], "generalized_free_support_barycent": 16, "elev": 16, "_init": 16, "init_func": 16, "frame": 16, "136": [16, 44, 58], "blit": 16, "765": [16, 17, 44], "plot_generalized_free_support_barycent": [16, 17], "02": [17, 18, 24, 25, 27, 31, 33, 37, 42, 49, 50, 52, 58, 59, 62, 65, 85], "848": 17, "auto_examples_barycent": 17, "demo": [17, 38, 68, 76, 82, 92, 95], "debias": [17, 38, 71, 73, 76, 92, 94, 95, 96], "convolut": [17, 38, 71, 73, 94, 96], "free": [17, 38, 69, 70, 71, 73, 82, 85, 94, 96], "introduc": [18, 19, 20, 21, 22, 24, 26, 73, 95, 96], "otda": [18, 21, 22, 27, 38, 75, 76, 92, 96], "current": [18, 70, 72, 74, 75, 81, 84, 87, 89, 96], "stanisla": [18, 19, 20, 24, 25, 26, 71, 94], "chambon": [18, 19, 20, 24, 25, 26, 71, 94], "stan": [18, 19, 20, 24, 25, 26], "3gauss": [18, 20, 22, 26], "3gauss2": [18, 20, 22, 26], "ot_emd": [18, 19, 20, 22, 25, 51, 95], "da": [18, 19, 20, 21, 22, 23, 24, 25, 26, 71, 83, 95, 96], "emdtransport": [18, 19, 20, 22, 25, 95, 96], "ot_sinkhorn": [18, 19, 20, 21, 22, 25, 51], "sinkhorntransport": [18, 19, 20, 21, 22, 25, 26, 95], "ot_lpl1": [18, 20], "sinkhornlpl1transport": [18, 20, 95, 96], "reg_cl": [18, 20, 75], "1e0": [18, 20, 24, 25, 42], "l1l2": [18, 75], "ot_l1l2": 18, "sinkhornl1l2transport": [18, 95], "2e0": 18, "transp_xs_emd": [18, 19, 20, 22, 25], "transp_xs_sinkhorn": [18, 19, 20, 22, 25], "transp_xs_lpl1": [18, 20], "transp_xs_l1l2": 18, "763061e": 18, "000000e": [18, 24, 25, 30, 31, 33, 58], "081861e": 18, "689583e": 18, "681200e": 18, "862280e": 18, "179100e": 18, "195813e": 18, "821987e": 18, "211501e": 18, "029326e": 18, "808932e": 18, "216608e": 18, "305436e": 18, "792762e": 18, "019666e": 18, "617012e": 18, "785968e": 18, "804295e": 18, "794348e": 18, "778259e": 18, "335304e": 18, "709292e": 18, "772608e": 18, "187777e": 18, "650678e": 18, "768734e": 18, "190456e": 18, "874332e": 18, "768700e": 18, "876119e": 18, "318292e": 18, "767482e": 18, "894485e": 18, "04": [18, 24, 25, 30, 31, 33, 37, 49, 52, 58, 59, 68], "218588e": 18, "765491e": 18, "127725e": 18, "990989e": 18, "762434e": 18, "734384e": 18, "056738e": 18, "14": [18, 23, 25, 35, 41, 42, 45, 51, 58, 59, 65, 72, 75, 81, 83, 94, 95], "759833e": 18, "478250e": 18, "601472e": 18, "758374e": 18, "294698e": 18, "458518e": 18, "757601e": 18, "396351e": 18, "727032e": 18, "756624e": 18, "562652e": 18, "771489e": 18, "754377e": 18, "281229e": 18, "247758e": 18, "753747e": 18, "587988e": 18, "292424e": 18, "753162e": 18, "336538e": 18, "849492e": 18, "param_img": [18, 22], "coupling_": [18, 20, 21, 22, 26, 75], "nemdtransport": [18, 20, 22, 26], "nsinkhorntransport": [18, 20, 22, 26], "nsinkhornlpl1transport": [18, 20], "nsinkhornl1l2transport": 18, "transp": [18, 20, 22, 23, 26, 67], "551": [18, 27, 96], "plot_otda_class": [18, 27], "present": [19, 24, 26, 66, 70], "transfer": [19, 95], "ferradan": [19, 25, 58, 75, 84, 94, 95], "papadaki": [19, 25, 58, 75, 84, 94, 95], "peyr": [19, 25], "aujol": [19, 25, 58, 75, 84, 94, 95], "2014": [19, 25, 58, 73, 75, 82, 84, 94, 95], "1853": [19, 25, 58, 75, 84, 94, 95], "1882": [19, 25, 58, 75, 84, 94, 95], "im2mat": [19, 23, 25, 34], "pixel": [19, 23, 34], "per": [19, 23, 25, 34, 53, 82, 89], "mat2im": [19, 23, 25], "back": [19, 23, 25, 70, 75, 83], "minmax": [19, 23, 25], "clip": [19, 23, 25, 72], "ocean_dai": [19, 23, 25], "jpg": [19, 23, 25], "256": [19, 23, 25], "ocean_sunset": [19, 23, 25], "idx1": [19, 25], "idx2": [19, 25], "ylabel": [19, 25, 30, 35, 40, 51, 60, 61, 67], "predict": [19, 41, 75, 81, 83], "out": [19, 24, 32, 75, 88], "transp_xt_emd": 19, "inverse_transform": [19, 23, 75, 95], "transp_xt_sinkhorn": 19, "i1t": [19, 23], "i2t": [19, 23], "366": [19, 27], "plot_otda_color_imag": [19, 27], "explicit": [20, 26, 69, 75, 92], "some": [20, 26, 65, 70, 71, 75, 82, 85, 92, 94, 95, 96], "quantiti": [20, 26, 35], "greater": [20, 26, 96], "coeffici": [20, 26, 35, 73, 74, 81, 82, 84, 87], "give": [20, 26, 51, 67, 70, 72, 81, 87, 96], "understand": [20, 26], "what": [20, 26, 69, 70, 95], "n_samples_sourc": [20, 26], "n_samples_target": [20, 26], "main": [20, 70, 82, 95, 96], "995": [20, 27, 82], "plot_otda_d2": [20, 27], "ievgen": [21, 22, 71, 73, 75, 94], "redko": [21, 22, 39, 46, 71, 73, 74, 75, 94], "st": [21, 22, 77], "etienn": [21, 22], "1985": 21, "dec1": 21, "dec2": 21, "pt": 21, "dect": 21, "ys1": 21, "2gauss_prop": 21, "bia": [21, 24, 25, 75, 79, 83], "ys2": 21, "all_xr": 21, "all_yr": 21, "plot_ax": 21, "dec": 21, "set1": 21, "2f": [21, 51], "85": [21, 58, 96], "046431138906241": 21, "129455496299416": 21, "print_g": 21, "independ": [21, 82, 95, 96], "jcpottransport": 21, "ws1": 21, "proportions_": [21, 75], "log_": [21, 75], "d2": [21, 39, 46], "ws2": 21, "prop": [21, 85], "err": [21, 31, 33, 52, 65], "069551e": 21, "h_re": 21, "1f": 21, "826": [21, 27], "plot_otda_jcpot": [21, 27], "ot_emd_laplac": 22, "emdlaplacetransport": 22, "reg_lap": [22, 75], "reg_src": [22, 75], "transp_xs_emd_laplac": 22, "498": 22, "runtimewarn": [22, 31, 33, 57, 64], "divid": [22, 31, 33, 51, 57, 64], "encount": [22, 31, 33, 57, 64], "ktransposeu": 22, "506": 22, "nemdlaplacetransport": 22, "351": [22, 27, 96], "plot_otda_laplacian": [22, 27], "anglet": 23, "ae": 23, "empirical_bures_wasserstein_map": 23, "xst": 23, "agw": 23, "bgw": 23, "empirical_gaussian_gromov_wasserstein_map": 23, "xstgw": 23, "lineartransport": [23, 95], "lineargwtransport": 23, "xtsgw": 23, "i1tgw": 23, "i2tgw": 23, "invers": [23, 29, 31, 36, 66, 72, 75, 82, 87], "704": [23, 27], "plot_otda_linear_map": [23, 27], "mappingtransport": [24, 25, 95], "perrot": [24, 25, 71, 75, 83, 94, 95], "habrard": [24, 25, 75, 83, 94, 95], "xs_new": 24, "ot_mapping_linear": [24, 25], "transp_xs_linear": 24, "transp_xs_linear_new": 24, "ot_mapping_gaussian": [24, 25], "transp_xs_gaussian": 24, "transp_xs_gaussian_new": 24, "delta": [24, 25, 46, 87], "190105e": 24, "170411e": 24, "700201e": 24, "169845e": 24, "356805e": 24, "169664e": 24, "344581e": 24, "169558e": 24, "549048e": 24, "169490e": 24, "619901e": 24, "169453e": 24, "982881e": 24, "208325e": 24, "153391e": 24, "305356e": 24, "150638e": 24, "628072e": 24, "149220e": 24, "416721e": 24, "148278e": 24, "270372e": 24, "147579e": 24, "685396e": 24, "147070e": 24, "226155e": 24, "146654e": 24, "002728e": 24, "146340e": 24, "575830e": 24, "146055e": 24, "889490e": 24, "145822e": 24, "605308e": 24, "bari": [24, 28, 44], "242": [24, 27, 96], "plot_otda_map": [24, 27], "image_emd": 25, "image_sinkhorn": 25, "x1tl": 25, "image_mapping_linear": 25, "x1tn": 25, "image_mapping_gaussian": 25, "797245e": 25, "758014e": 25, "182822e": 25, "757026e": 25, "620752e": 25, "756521e": 25, "875691e": 25, "756218e": 25, "725224e": 25, "756015e": 25, "153553e": 25, "755868e": 25, "348118e": 25, "755759e": 25, "234582e": 25, "755673e": 25, "893582e": 25, "755604e": 25, "942771e": 25, "755547e": 25, "206000e": 25, "755500e": 25, "695056e": 25, "755460e": 25, "307154e": 25, "755426e": 25, "944208e": 25, "755395e": 25, "715960e": 25, "755369e": 25, "515613e": 25, "755345e": 25, "367864e": 25, "755324e": 25, "197885e": 25, "755305e": 25, "071067e": 25, "755303e": 25, "898122e": 25, "842001e": 25, "780145e": 25, "358084e": 25, "778490e": 25, "296544e": 25, "777841e": 25, "648247e": 25, "777495e": 25, "948923e": 25, "777284e": 25, "184075e": 25, "777135e": 25, "396988e": 25, "777027e": 25, "059322e": 25, "776945e": 25, "619816e": 25, "776880e": 25, "672789e": 25, "776827e": 25, "971430e": 25, "791": [25, 27], "plot_otda_mapping_colors_imag": [25, 27], "ot_sinkhorn_un": 26, "transp_xs_sinkhorn_un": 26, "ot_sinkhorn_semi": 26, "transp_xs_sinkhorn_semi": 26, "modifi": 26, "involv": [26, 70], "infinit": [26, 75], "daili": 26, "element": [26, 28, 51, 72, 73, 75, 81, 82, 87, 92], "fill": [26, 63, 72, 75], "recal": [26, 87], "cost_": [26, 75], "exhibit": [26, 75], "nunsupervis": 26, "nsemi": 26, "599": [26, 27], "plot_otda_semi_supervis": [26, 27], "425": [27, 96], "auto_examples_domain": 27, "multi": [27, 38, 71, 72, 73, 75, 76, 82, 92, 94, 95, 96], "shift": [27, 38, 73, 75, 76, 92, 94, 95, 96], "laplacian": [27, 38, 71, 75, 76, 92, 94, 95], "unsupervis": [27, 38, 75, 76, 92, 95], "supervis": [27, 38, 73, 75, 76, 92, 94, 95, 96], "networkx": [28, 29, 31, 32, 35, 36], "nx": [28, 32, 72, 81, 82, 84, 92, 96], "csgraph": 28, "shortest_path": 28, "mcol": 28, "fgw_barycent": [28, 81, 95, 96], "find_thresh": 28, "sup": 28, "trick": [28, 85, 95], "adequ": 28, "sai": 28, "connect": [28, 29, 31, 35, 36], "linesearch": [28, 81, 84, 96], "reconstruct": [28, 35, 81, 89, 96], "come": [28, 70, 83, 95, 96], "n_node": [28, 32, 35, 80], "begin": [28, 75, 82, 83, 87], "thresh": 28, "cprime": 28, "sp_to_adjac": 28, "sc": 28, "argmin": [28, 29, 31, 36, 41, 72, 75, 83], "threshinf": 28, "threshsup": 28, "minimum": [28, 72, 75, 81, 82, 84, 95, 96], "new": [28, 41, 72, 75, 83, 92, 95], "zeros_lik": 28, "fill_diagon": [28, 35], "build_noisy_circular_graph": 28, "with_nois": 28, "structure_nois": 28, "noisi": [28, 46], "add_nodes_from": 28, "add_nod": [28, 29, 31, 36], "attr_nam": 28, "add_edg": [28, 29, 31, 36], "randomint": 28, "graph_color": 28, "nx_graph": 28, "cnorm": 28, "cpick": 28, "scalarmapp": 28, "set_arrai": 28, "val_map": 28, "get_node_attribut": 28, "to_rgba": 28, "ad": [28, 29, 31, 46, 70, 72, 75, 79, 82, 85, 87, 92, 95, 96], "plot_barycenter_fgw": [28, 37], "93": [28, 35, 58, 96], "deprecationwarn": 28, "extract": [28, 51, 72, 92], "singl": [28, 34, 75, 83], "your": [28, 70, 94, 95], "oper": [28, 31, 33, 70, 75, 77, 79, 82, 83, 95], "109": [28, 58], "po": [28, 29, 31, 32, 34, 36, 75], "kamada_kawai_layout": 28, "draw": 28, "node_color": [28, 29, 31, 32, 36], "with_label": [28, 32], "node_s": [28, 29, 31, 36], "indic": [28, 32, 40, 70, 72, 80, 82, 87, 92], "adjacency_matrix": 28, "todens": [28, 72], "sizebari": 28, "95": [28, 29, 31, 34, 36, 42, 58, 60, 61, 96], "from_numpy_arrai": 28, "683": [28, 37], "sr": [29, 36, 84], "g1": [29, 31, 36, 55], "g2": [29, 31, 36, 55], "reweigh": [29, 36], "srgw": [29, 36, 81], "These": [29, 36, 70], "endow": [29, 31, 36], "srfgw": [29, 36, 81], "cedvincentcuaz": [29, 31, 33, 36], "entropic_semirelaxed_gromov_wasserstein": [29, 81], "entropic_semirelaxed_fused_gromov_wasserstein": [29, 81], "commun": [29, 31, 35, 36, 69, 95], "stochastic_block_model": [29, 31, 35, 36], "n3": [29, 31, 36], "g3": [29, 31, 36], "to_numpy_arrai": [29, 31, 35, 36], "h3": [29, 31, 36], "edg": [29, 31, 32, 36, 80], "weight_intra_g2": [29, 31, 36], "weight_inter_g2": [29, 31, 36], "weight_intra_g3": [29, 31, 36], "weight_inter_g3": [29, 31, 36], "weightedg2": [29, 31, 36], "part_g2": [29, 31, 36], "weightedg3": [29, 31, 36], "part_g3": [29, 31, 36], "srgw_e": 29, "ot_23": [29, 36], "log_23": [29, 36], "srgw_23": [29, 36], "srgw_dist": [29, 36], "ot_32": [29, 36], "log_32": [29, 36], "srgw_32": [29, 36], "255": [29, 36], "06000000014822844": 29, "1577777782120945": 29, "adjust": [29, 31], "intens": [29, 31, 35], "proportionali": [29, 31], "sent": [29, 31, 95], "draw_graph": [29, 31, 36], "nodes_color_part": [29, 31, 36], "gweight": [29, 31, 36], "edge_color": [29, 31, 36], "shiftx": [29, 31, 36], "spring_layout": [29, 31, 32, 36], "alpha_edg": [29, 31, 36], "width_edg": [29, 31, 36], "draw_networkx_edg": [29, 31, 36], "width": [29, 31, 36, 40, 73], "visibl": [29, 31, 36, 96], "activ": [29, 31, 36, 72, 73, 87], "edgelist_activ": [29, 31, 36], "edgelist_deactiv": [29, 31, 36], "edgelist": [29, 31, 36], "draw_networkx_nod": [29, 31, 36], "nodelist": [29, 31, 32, 36], "scaled_gweight": [29, 31, 36], "nodes_s": [29, 31, 36], "draw_transp_colored_srgw": [29, 36], "part_g1": [29, 31, 36], "pos1": [29, 31, 36], "pos2": [29, 31, 36], "switchx": [29, 31, 36], "seed_g1": [29, 31, 36], "seed_g2": [29, 31, 36], "starting_color": [29, 31, 36], "partit": [29, 31, 36, 41, 75, 83], "part1": [29, 31, 36], "unique_color": [29, 31, 36], "uniqu": [29, 31, 36, 40, 72, 82, 95], "nodes_color_part1": [29, 31, 36], "nodes_color_part2": [29, 31, 36], "assign": [29, 31, 35, 36, 73, 74, 80, 81], "k1": [29, 31, 36], "max_tk1": [29, 31], "k2": [29, 31, 36], "seed_g3": [29, 31, 36], "121": [29, 32, 33, 36, 51, 57, 58, 59, 65, 96], "h_2": [29, 36, 81], "c_3": [29, 36, 83], "hbar2": [29, 36], "122": [29, 32, 33, 36, 51, 58, 65, 96], "hbar3": [29, 36], "h_3": [29, 36], "intra": [29, 31, 35, 36, 85], "fgw_alpha": [29, 36], "fgw_dist": [29, 31, 36, 81], "srfgw_e": 29, "srfgw_23": [29, 36], "srfgw_dist": [29, 36], "srfgw_32": [29, 36], "38089508056745364": 29, "0325729126416439": 29, "24125701598915783": 29, "f_2": [29, 36, 81], "f_3": [29, 36], "982": [29, 37], "plot_entropic_semirelaxed_fgw": [29, 37], "sig": 30, "sig2": 30, "phi": [30, 41, 75, 82, 83, 87], "phi2": 30, "a_i": [30, 73, 82, 95], "y_j": [30, 95], "b_j": [30, 73, 82, 95], "w1": [30, 77], "w2": [30, 57, 77], "got": 30, "l_x": 30, "l_y": 30, "gridspec": 30, "set_aspect": 30, "ax3": [30, 34, 65], "sharex": 30, "gwg": 30, "logw": 30, "reload_ext": 30, "wgw": 30, "734412e": 30, "508254e": 30, "875326e": 30, "226158e": 30, "189327e": 30, "456740e": 30, "189279e": 30, "622743e": 30, "552714e": 30, "0018074512481689453": 30, "683978e": 30, "860061e": 30, "134468e": 30, "239175e": 30, "182948e": 30, "682787e": 30, "677113e": 30, "visu": 30, "741": [30, 37, 44], "plot_fgw": [30, 37], "attribut": [31, 72, 75, 81, 92, 96], "further": [31, 51, 69, 70, 96], "xu": [31, 33, 81, 94], "luo": [31, 33, 81, 94], "zha": [31, 33, 81, 94], "duke": [31, 33, 81, 94], "entropic_fused_gromov_wasserstein": [31, 81], "add": [31, 35, 65, 70, 82, 85, 92, 96], "fgw0": 31, "log0": [31, 33, 65], "fgwe": 31, "loge": [31, 33], "sparsiti": [31, 33, 35, 53, 81, 89, 94, 95, 96], "level": [31, 33, 69, 73, 75, 76, 92, 95], "fgw0_sparsiti": 31, "fgw_sparsiti": 31, "fgwe_spars": 31, "tend": [31, 33, 51], "produc": [31, 33, 82], "feasibl": [31, 33, 82], "err0": [31, 33], "271184e": 31, "211305e": 31, "640431e": 31, "059879e": 31, "024660e": 31, "637523e": 31, "866445e": 31, "936346e": 31, "243555e": 31, "831410e": 31, "891614e": 31, "149450e": 31, "473216e": 31, "854134e": 31, "724554e": 31, "747973e": 31, "850574e": 31, "244899e": 31, "559817e": 31, "841819e": 31, "279017e": 31, "755571e": 31, "819396e": 31, "870728e": 31, "242264e": 31, "784264e": 31, "283767e": 31, "513222e": 31, "772225e": 31, "191339e": 31, "203845e": 31, "764565e": [31, 58], "034974e": 31, "660790e": 31, "761179e": 31, "000610e": 31, "385291e": 31, "536990e": 31, "472502e": 31, "129779e": 31, "936118e": 31, "334121e": 31, "852583e": 31, "134797e": 31, "177453e": 31, "236970e": 31, "465712e": 31, "858590e": 31, "312306e": 31, "789776e": 31, "493878e": 31, "029873e": 31, "095678e": 31, "177744e": 31, "257392e": 31, "242762e": 31, "125684e": 31, "770321e": 31, "368455e": 31, "094853e": 31, "159374e": 31, "564338e": 31, "974174e": 31, "297098e": 31, "639787e": 31, "106686e": 31, "716049e": 31, "433353e": 31, "227167e": 31, "080617e": 31, "980812e": 31, "912468e": 31, "858901e": 31, "805235e": 31, "740559e": 31, "658655e": 31, "557834e": 31, "440242e": 31, "310793e": 31, "175881e": 31, "1135": [31, 33], "042086e": 31, "151311e": 31, "992882e": 31, "972309e": 31, "101506e": 31, "379844e": 31, "797194e": 31, "337741e": 31, "510": 31, "984020e": 31, "520": [31, 96], "720212e": 31, "530": [31, 96], "534028e": 31, "540": 31, "417109e": 31, "550": 31, "364311e": 31, "560": 31, "372351e": 31, "570": [31, 96], "438312e": 31, "580": 31, "558368e": 31, "590": 31, "726958e": 31, "600": [31, 44], "936418e": 31, "610": 31, "176966e": 31, "620": 31, "436877e": 31, "702796e": 31, "640": 31, "960175e": 31, "650": 31, "193888e": 31, "660": 31, "389046e": 31, "670": 31, "531979e": 31, "680": 31, "611295e": 31, "690": 31, "618871e": 31, "700": [31, 44], "550627e": 31, "710": 31, "406954e": 31, "720": 31, "192695e": 31, "730": [31, 85, 94, 95], "916691e": 31, "740": 31, "590932e": 31, "750": 31, "229430e": 31, "760": 31, "846976e": 31, "770": 31, "457933e": 31, "780": 31, "075230e": 31, "790": 31, "709643e": 31, "369414e": 31, "810": [31, 44], "060184e": 31, "820": 31, "785186e": 31, "830": 31, "545590e": 31, "840": 31, "340916e": 31, "850": 31, "169442e": 31, "860": [31, 42, 50], "028566e": 31, "870": 31, "150926e": 31, "880": 31, "254840e": 31, "560795e": 31, "900": [31, 44], "033105e": 31, "910": 31, "638947e": 31, "920": 31, "349865e": 31, "930": 31, "142583e": 31, "940": 31, "999120e": 31, "950": 31, "906371e": 31, "960": 31, "855388e": 31, "970": 31, "840590e": 31, "980": 31, "859006e": 31, "990": 31, "909627e": 31, "981055e": 31, "110756e": 31, "139916e": 31, "158952e": 31, "159648e": 31, "159715e": 31, "159728e": 31, "159732e": 31, "159733e": 31, "37611793139330985": 31, "3671471715862439": 31, "21736592892258028": 31, "proportionn": 31, "draw_transp_colored_gw": 31, "131": [31, 33, 58, 65], "algo": [31, 33, 51, 73], "p0": [31, 42, 77], "q0": 31, "132": [31, 33, 58, 65, 96], "133": [31, 33, 58, 65], "pe": [31, 96], "qe": 31, "107": [31, 37, 58, 96], "plot_fgw_solv": [31, 37], "gnn": [32, 71, 94, 96], "templat": [32, 45, 71, 80, 94, 96], "52": [32, 40, 58, 77, 94, 96], "53": [32, 58, 80, 94], "sonia": [32, 71], "mazelet": [32, 71], "en": [32, 95], "random_split": 32, "torch_geometr": 32, "loader": 32, "dataload": 32, "to_networkx": 32, "one_hot": 32, "stochastic_blockmodel_graph": 32, "graphdata": 32, "gcnconv": 32, "tfgwpool": [32, 80], "tsne": 32, "n_graph": [32, 80], "n_node_class": 32, "block_sizes1": 32, "block_sizes2": 32, "num_class": 32, "graphs1": 32, "edge_index": [32, 80], "graphs2": 32, "split": [32, 41, 77], "train_graph": 32, "test_graph": 32, "train_load": 32, "batch_siz": [32, 35, 49, 75, 81, 90, 92], "shuffl": [32, 40], "test_load": 32, "to_undirect": 32, "draw_networkx": 32, "tab": 32, "pooling_tfgw": 32, "n_templat": [32, 80], "n_template_nod": [32, 80], "n_class": [32, 75], "n_hidden_lay": 32, "feature_init_mean": [32, 80], "feature_init_std": [32, 80], "conv": 32, "x_latent": 32, "save": [32, 47, 73, 81], "latent": 32, "n_epoch": 32, "store": [32, 75, 92], "embeddings_for_tsn": 32, "weight_decai": 32, "0005": 32, "criterion": [32, 95], "crossentropyloss": 32, "all_accuraci": 32, "all_loss": 32, "epoch": [32, 35, 81], "acc": 32, "latent_embed": 32, "pred": 32, "train_correct": 32, "train_acc": 32, "4f": 32, "accuraci": [32, 73], "test_acc": 32, "test_correct": 32, "hstack": [32, 42], "000": 32, "6519": 32, "5200": 32, "001": [32, 35, 55, 73, 75, 77, 83, 89], "6222": 32, "7400": 32, "002": 32, "5858": 32, "0000": 32, "003": 32, "5570": 32, "5235": 32, "9800": 32, "4945": 32, "9600": 32, "006": [32, 68], "4596": 32, "007": 32, "4248": 32, "008": 32, "3868": 32, "009": 32, "3455": 32, "010": 32, "3008": 32, "011": 32, "2525": 32, "012": 32, "2050": 32, "013": 32, "1598": 32, "014": 32, "1277": 32, "015": 32, "1046": 32, "016": 32, "0875": 32, "017": 32, "0725": 32, "018": 32, "0554": 32, "019": 32, "0355": 32, "020": 32, "0194": 32, "021": 32, "0095": 32, "022": 32, "0052": 32, "023": 32, "0047": 32, "024": 32, "0054": [32, 44], "tsne_embed": 32, "n_compon": [32, 34], "perplex": 32, "class_0": 32, "class_1": 32, "tsne_embeddings_0": 32, "tsne_embeddings_1": 32, "after": [32, 42, 44, 94], "843": [32, 37], "plot_gnn_tfgw": [32, 37], "compar": [33, 41, 51, 70, 75, 95], "Then": [33, 35, 57, 82, 95], "kerdoncuff": [33, 71, 81, 94, 95], "emonet": [33, 81, 94, 95], "marc": [33, 81, 94, 95], "mjl": [33, 94, 95], "erwan": [33, 34, 71], "vautier": [33, 34, 71], "lapost": 33, "net": 33, "sp": [33, 34, 44, 65, 85], "demonstr": [33, 65, 70, 96], "purpos": [33, 65, 95], "mu_": [33, 41, 43, 54, 57, 60, 65, 66, 67, 75, 79, 95], "cov_": [33, 43, 54, 60, 65, 66, 67, 79], "mu_t": [33, 41, 43, 54, 60, 65, 66, 67, 75, 79, 95], "cov_t": [33, 43, 54, 60, 65, 66, 67, 79], "make_2d_samples_gauss": [33, 43, 54, 60, 65, 66, 67], "sqrtm": [33, 65, 72], "gw0": 33, "entropic_gromov_wasserstein": [33, 81, 95], "gwe": 33, "gw0_sparsiti": 33, "gw_sparsiti": 33, "gwe_spars": 33, "nfeasibl": 33, "606056e": 33, "330020e": 33, "022552e": 33, "276036e": 33, "023674e": 33, "098033e": 33, "063453e": 33, "820952e": 33, "205038e": 33, "027228e": 33, "501837e": 33, "088545e": 33, "191147e": 33, "684324e": 33, "209223e": 33, "076331e": 33, "140465e": 33, "876462e": 33, "040056e": 33, "334508e": 33, "018997e": 33, "123553e": 33, "184445e": 33, "04501836901925051": 33, "037612941478320075": 33, "03823623173438275": 33, "pgw": 33, "plog": 33, "pointwise_gromov_wasserstein": [33, 81], "sgw": 33, "slog": [33, 73], "sampled_gromov_wasserstein": [33, 81], "pointwis": [33, 96], "gw_dist_estim": 33, "gw_dist_std": 33, "toarrai": [33, 72, 87], "18551015414186553": 33, "14981263716330115": 33, "0013724960658236956": 33, "393": [33, 37, 96], "plot_gromov": [33, 37], "decomposit": 34, "pca": [34, 96], "smacof_md": 34, "3000": [34, 44], "stress": 34, "declar": 34, "npo": 34, "isometri": 34, "n_init": 34, "embedding_": 34, "nmd": 34, "init": [34, 44, 81, 96], "cross": 34, "triangl": 34, "star": 34, "lambdast": 34, "ct01": 34, "ct02": 34, "ct13": 34, "ct23": 34, "help": [34, 70, 82, 95, 96], "consist": [34, 70, 72, 73, 82, 83, 95], "rotat": [34, 51], "npost01": 34, "npost02": 34, "npost13": 34, "npost23": 34, "ax4": 34, "ax5": 34, "ax6": 34, "ax7": 34, "ax8": 34, "ax9": 34, "ax10": 34, "ax11": 34, "ax12": 34, "0x7f45ff610a30": 34, "197": [34, 37, 58], "plot_gromov_barycent": [34, 37], "denot": [35, 51, 73, 75, 82, 83], "c_": [35, 51, 81], "p_": [35, 81], "combin": [35, 95], "sigma_d": 35, "sum_d": [35, 81], "vari": 35, "extens": [35, 94], "aforement": 35, "unattribut": 35, "uniformli": 35, "cedric": 35, "inria": [35, 40, 63, 64], "gromov_wasserstein_linear_unmix": [35, 81], "gromov_wasserstein_dictionary_learn": [35, 81], "fused_gromov_wasserstein_linear_unmix": [35, 81], "fused_gromov_wasserstein_dictionary_learn": [35, 81], "inter": 35, "nlabel": 35, "p_inter": 35, "p_intra": 35, "n_cluster": 35, "low": [35, 41, 45, 51, 78, 92, 96], "high": [35, 70, 82], "int32": 35, "idx_c": 35, "plot_gromov_wasserstein_dictionary_learn": [35, 37], "promot": [35, 81, 95], "cdict_gw": 35, "learning_r": [35, 81], "nonnegative_symmetr": [35, 81], "tol_out": [35, 81], "tol_inn": [35, 81], "max_iter_out": [35, 81], "max_iter_inn": [35, 81], "use_log": [35, 81], "use_adam_optim": [35, 81], "loss_epoch": 35, "cumul": [35, 72], "928070954885737": 35, "528435380634622": 35, "481496257647932": 35, "7251645422089865": 35, "5896787585765": 35, "904249565820505": 35, "894474501829586": 35, "839762947251266": 35, "8357620167079265": 35, "57323879230497": 35, "shade": 35, "dark": [35, 96], "white": 35, "idx_atom": 35, "scaled_atom": 35, "reconstruction_error": 35, "cembed": [35, 81], "unmixings2d": 35, "extrem": 35, "linewidth": [35, 40, 47, 61], "876122061653427": 35, "hot": 35, "encod": [35, 75, 92], "dataset_featur": 35, "cdict_fgw": 35, "ydict_fgw": 35, "learning_rate_c": [35, 81], "learning_rate_i": [35, 81], "488307468700953": 35, "409377567767253": 35, "7999724972950055": 35, "590157056733561": 35, "8883324021076806": 35, "6222694197786383": 35, "638584123604814": 35, "537256942676492": 35, "4127469295470614": 35, "315769238894676": 35, "max_featur": 35, "min_featur": 35, "catom": 35, "fatom": 35, "scaled_f": 35, "yembed": [35, 81], "1390622525410854": 35, "896": [35, 37], "semirelaxed_gromov_wasserstein": [36, 81], "semirelaxed_fused_gromov_wasserstein": [36, 81], "105007529006411": 36, "1622222222222223": 36, "38017836704293934": 36, "04004733478713954": 36, "24196480586404343": 36, "907": [36, 37], "plot_semirelaxed_fgw": [36, 37], "751": 37, "auto_examples_gromov": 37, "classif": [37, 38, 76, 96], "tempat": [37, 38], "comparison": [37, 38, 51, 58, 95], "introduct": [38, 59, 95], "row": [38, 50, 72, 73, 74, 81, 82, 87, 92], "align": [38, 50, 69, 74, 75, 79, 82, 95], "discrimin": [38, 50, 77, 94, 96], "logo": [38, 50, 95, 96], "toolbox": [38, 50, 71, 95, 96], "brenier": [38, 50, 75, 83, 94, 95, 96], "mmot": [38, 50, 76, 82, 95], "compon": [38, 41, 50, 75, 77, 92, 94, 95, 96], "auto_examples_python": 38, "auto_examples_jupyt": 38, "arbitrari": 39, "n_1": [39, 46], "d_1": [39, 46], "n_2": [39, 46], "d_2": [39, 46], "49": [39, 46, 58, 68, 74, 94, 96], "quang": [39, 46], "hui": [39, 46], "tran": [39, 46], "patch": [39, 40, 46], "connectionpatch": [39, 46], "coot": [39, 92], "co_optimal_transport": [39, 46], "co_optimal_transport2": [39, 46], "coot2": [39, 46], "d1": [39, 46], "pi_sampl": [39, 46, 74], "pi_featur": [39, 46, 74], "coot_dist": 39, "5f": 39, "yaxi": [39, 40, 46], "tick_right": [39, 46], "xaxi": [39, 46], "tick_top": [39, 46], "xya": [39, 46], "xyb": [39, 46], "con": [39, 46], "coordsa": [39, 46], "transdata": [39, 46], "coordsb": [39, 46], "add_artist": [39, 46], "10903416567681642": 39, "0987568083692249": 39, "09685398028260428": 39, "09685": 39, "499": [39, 50], "plot_coot": [39, 50], "colla": [40, 77, 94], "breloi": [40, 77, 94], "antoin": [40, 71, 89, 94], "make_blob": 40, "ticker": 40, "mticker": 40, "esp": 40, "cluster_std": 40, "x_y_lim": 40, "linestyl": [40, 57], "pi_": [40, 77, 83], "powernorm": 40, "aspect": [40, 95], "orient": [40, 69], "vertic": [40, 47], "shrink": [40, 51], "ticks_loc": 40, "get_ytick": 40, "tolist": 40, "set_major_loc": 40, "fixedloc": 40, "set_yticklabel": 40, "get_tick": 40, "tick_param": 40, "labels": 40, "class_": 40, "idx_min": 40, "idx_max": 40, "rect": 40, "rectangl": 40, "gca": 40, "add_patch": 40, "_n": [40, 73], "x_label": 40, "768": [40, 50], "plot_ewca": [40, 50], "ssnb": [41, 75, 83, 96], "58": [41, 58, 75, 82, 83, 94, 96], "varphi": [41, 75, 83], "lipschitz": [41, 75, 83, 95], "nabla": [41, 75, 82, 83, 89], "approx": [41, 75, 83], "ambient": [41, 75, 92], "impos": [41, 75], "global": [41, 75, 92, 96], "unit": [41, 88, 95], "mu_x": [41, 46], "sign": [41, 45, 72, 75, 79], "wish": [41, 70], "style": 41, "lbrace": 41, "rbrace": 41, "well": [41, 70, 72, 82, 83, 92, 95], "particular": [41, 96], "varphi_l": [41, 83], "varphi_u": [41, 83], "59": [41, 58, 75, 79, 82, 83, 94, 95, 96], "theorem": [41, 75, 79, 83, 95], "sens": [41, 51, 73, 82, 94, 95], "definit": [41, 72, 95], "e_k": [41, 75, 83], "optimis": [41, 75, 83], "amount": [41, 82, 85, 95, 96], "few": [41, 51, 96], "sinc": [41, 82, 95, 96], "quit": [41, 95, 96], "computation": 41, "expens": 41, "cvxpy": [41, 75, 83], "fran\u00e7oi": [41, 75, 83], "pierr": [41, 75, 83], "pati": [41, 75, 83, 94], "alexandr": [41, 71, 75, 83, 94], "aspremont": [41, 75, 83, 94], "page": [41, 70, 75, 83, 94, 96], "1222": [41, 75, 83, 94], "1232": [41, 75, 83, 94], "adrien": [41, 60, 71, 75, 83, 94], "taylor": [41, 75, 83, 94], "phd": [41, 75, 83, 94], "thesi": [41, 75, 83, 94], "cathol": [41, 75, 83, 94], "univers": [41, 75, 83, 94], "louvain": [41, 75, 83, 94], "la": [41, 75, 83, 94], "neuv": [41, 75, 83, 94], "belgium": [41, 75, 83, 94], "n_fitting_sampl": 41, "xs_class": 41, "dodgerblu": 41, "nearest_brenier_potential_fit": [41, 75], "init_method": [41, 83], "gradient_lipschitz_const": [41, 75, 83], "n_predict_sampl": 41, "ys_class": 41, "phi_lu": [41, 83], "g_lu": [41, 75, 83], "nearest_brenier_potential_predict_bound": [41, 75], "306": [41, 50, 96], "plot_ssnb": [41, 50], "wda": [42, 71, 96], "fda": [42, 95], "floor": [42, 72], "nbnois": 42, "pfda": 42, "projfda": 42, "maxit": [42, 73, 77], "pwda": 42, "projwda": 42, "3042776946697494e": 42, "65147154e": 42, "4401037686381040e": 42, "16760501e": 42, "2234351238819928e": 42, "30555049e": 42, "2169879996364462e": 42, "39115407e": 42, "1924746118060602e": 42, "25387848e": 42, "1177409528990749e": 42, "70993539e": 42, "0862213476139048e": 42, "52716830e": 42, "0747229322240269e": 42, "34923131e": 42, "0678766065261684e": 42, "74029183e": 42, "0621337155459647e": 42, "03651803e": 42, "0577080390746939e": 42, "59605592e": 42, "0543140912472148e": 42, "28883715e": 42, "0470236926310577e": 42, "47528039e": 42, "0445628467498224e": 42, "03183254e": 42, "0364189455866245e": 42, "31006504e": 42, "0303977563823823e": 42, "39885352e": 42, "0301476238242911e": 42, "17467624e": 42, "0292344306414324e": 42, "79959907e": 42, "0271888325518124e": 42, "94408237e": 42, "0183214741002155e": 42, "98322994e": 42, "9762636217090053e": 42, "03196875e": 42, "8225627240876070e": 42, "36012863e": 42, "0855506616050116e": 42, "92702943e": 42, "8001027160864295e": 42, "01920255e": 42, "3687486090807947e": 42, "01780640e": 42, "3431203993360381e": 42, "23716793e": 42, "3118645266923005e": 42, "90753137e": 42, "28": [42, 58, 85, 87, 94, 95, 96], "3067593392325469e": 42, "02767925e": 42, "3064856262240019e": 42, "07925279e": 42, "3060699763593800e": 42, "95215754e": 42, "3060442760754873e": 42, "77368118e": 42, "3060442709529139e": 42, "34108449e": 42, "3060442708435561e": 42, "52599061e": 42, "3060442707674844e": 42, "07742368e": 42, "3060442707600512e": 42, "36125504e": 42, "termin": 42, "reach": [42, 96], "xsp": 42, "xtp": 42, "xspw": 42, "xtpw": 42, "plot_wda": [42, 50], "xr": [43, 45, 54, 55, 60], "gweak": 43, "867": [43, 50], "plot_weakot_vs_ot": [43, 50], "quickli": [44, 51, 70, 96], "qualiti": [44, 96], "primal": [44, 82, 90], "ronak": [44, 71, 82, 94], "mehta": [44, 71, 82, 94], "ronakrm": 44, "wisc": 44, "xizheng": [44, 71], "yu": [44, 71], "xyu354": 44, "0x7f45df42f070": 44, "l2_bari": 44, "lp_bari": 44, "lp_log": 44, "interior": [44, 82, 95], "fun": [44, 51, 92], "dmmot_monge_1dgrid_optim": [44, 82], "4000": 44, "lr_init": [44, 82], "lr_decai": [44, 82], "997": 44, "dmmot_obj": 44, "optimizewarn": 44, "detect": [44, 72, 95], "sol": 44, "linprog": [44, 95], "a_eq": 44, "b_eq": 44, "241": [44, 96], "77870988845825": 44, "999774740910517": 44, "9995": 44, "gradnorm": 44, "739": 44, "7831": 44, "0914": 44, "6322": 44, "0583": 44, "434": 44, "3777": 44, "4220": 44, "252": 44, "9269": 44, "2317": 44, "168": [44, 58], "8668": 44, "2116": 44, "384": 44, "2968": 44, "1755": 44, "647": 44, "6758": 44, "1343": 44, "786": 44, "2442": 44, "1021": 44, "3703": 44, "0662": 44, "0539": 44, "7304": 44, "1100": 44, "0348": 44, "621": 44, "4660": 44, "1200": 44, "0338": 44, "764": 44, "3429": 44, "1300": 44, "0200": 44, "556": [44, 96], "2338": 44, "1400": 44, "0182": 44, "8329": 44, "1500": 44, "0103": 44, "579": 44, "8241": 44, "1600": 44, "0075": 44, "638": 44, "2570": 44, "1700": 44, "0045": 44, "1562": 44, "1800": 44, "0035": 44, "479": 44, "8625": 44, "1900": 44, "0032": 44, "1939": 44, "0022": 44, "442": 44, "4975": 44, "2100": 44, "0015": 44, "61": [44, 58], "0901": 44, "2200": 44, "0016": 44, "464": 44, "9430": 44, "2300": [44, 94, 95], "0014": 44, "382": 44, "5650": 44, "2400": 44, "0011": 44, "287": [44, 96], "2281": 44, "2500": 44, "355": 44, "6796": 44, "2600": 44, "0010": 44, "1357": 44, "2700": 44, "289": 44, "6964": 44, "2800": 44, "184": [44, 58, 96], "4234": 44, "2900": 44, "0009": 44, "246": 44, "5847": 44, "65": [44, 58, 65], "3299": 44, "3100": 44, "185": [44, 58], "9355": 44, "3200": 44, "263": [44, 82], "0209": 44, "3300": 44, "3132": 44, "3400": 44, "231": [44, 96], "4044": 44, "3500": 44, "226": 44, "3184": 44, "3600": 44, "211": 44, "4237": 44, "3700": 44, "233": 44, "2981": 44, "3800": 44, "299": 44, "0853": 44, "3900": 44, "262": [44, 96], "4271": 44, "965843439102173": 44, "0008940778156514197": 44, "dmmot": 44, "0x7f45d7e030a0": 44, "pseudorandom": 44, "vecsiz": [44, 82], "artist": 44, "put": [44, 57], "whose": [44, 74, 79, 81, 82, 87], "underscor": 44, "argument": [44, 72, 75, 83, 84, 92, 96], "0x7f45fee91330": 44, "bary_log": 44, "1964": 44, "284": [44, 96], "3413": 44, "9858": 44, "3320": 44, "2204": 44, "7755": 44, "156": [44, 58, 96], "3650": 44, "4874": 44, "229": [44, 82], "6258": 44, "3684": 44, "238": [44, 55, 59, 96], "1008": 44, "3353": 44, "3034": 44, "2220": 44, "267": [44, 96], "4771": 44, "1678": 44, "1315": 44, "0706": 44, "271": 44, "7241": 44, "0567": 44, "269": 44, "5960": 44, "0420": 44, "8386": 44, "0345": 44, "8676": 44, "0230": 44, "8679": 44, "0145": 44, "217": [44, 96], "0122": 44, "244": 44, "9326": 44, "0089": 44, "207": [44, 96], "8076": 44, "0064": 44, "3682": 44, "208": [44, 96], "5713": 44, "0042": 44, "196": [44, 50, 53, 58, 59], "3110": 44, "189": [44, 58, 96], "1930": 44, "0028": 44, "152": [44, 58], "9444": 44, "0025": 44, "154": [44, 58], "9903": 44, "0023": 44, "165": [44, 58], "5778": 44, "0020": 44, "162": [44, 58], "6161": 44, "0019": 44, "148": [44, 58, 96], "9564": 44, "0018": 44, "7780": 44, "0017": 44, "8478": 44, "145": [44, 58, 64, 96], "0931": 44, "128": [44, 58, 75, 82, 94], "1718": 44, "0x7f45fc627dc0": 44, "plot_dmmot": [44, 50], "og": 45, "625": [45, 50], "plot_factored_coupl": [45, 50], "mu_i": [46, 95], "clean": [46, 96], "y_": [46, 75, 81], "contamin": 46, "outlier": 46, "intuit": [46, 70], "182": [46, 58], "y_noisi": 46, "nrow": 46, "ncol": 46, "wy_samp": [46, 74], "07507868": 46, "08001347": 46, "09469872": 46, "1001999": 46, "10001527": 46, "10001687": 46, "09999904": 46, "09979829": 46, "11466591": 46, "13551386": 46, "clearli": [46, 95], "complet": [46, 70, 95, 96], "successfulli": 46, "010389716046318498": 46, "821": [46, 50], "plot_learning_weights_with_coot": [46, 50], "letter": 47, "o1": 47, "o2": 47, "translat": 47, "t1": 47, "t2": [47, 66, 87], "horizont": 47, "sx": 47, "sy": [47, 70], "markerfacecolor": 47, "markeredgecolor": 47, "savefig": 47, "svg": 47, "dpi": 47, "transpar": 47, "bbox_inch": 47, "tight": 47, "43": [47, 58, 73, 75, 79, 82, 94, 95, 96], "375": [47, 96], "darkgrai": 47, "logo_dark": 47, "070": [47, 50], "plot_logo": [47, 50], "b\u00e9rar": [48, 73, 94, 95], "mokhtar": [48, 71, 94], "mokhtarzahdi": 48, "plot1d_mat": [48, 49, 52, 53, 58, 63], "lambd": [48, 52, 53, 54], "ns_budget": [48, 73], "budget": [48, 73], "kept": [48, 73, 96], "nt_budget": [48, 73], "g_screen": 48, "restrict": [48, 73], "_screenkhorn": 48, "bottleneck": [48, 73], "instal": [48, 70, 73, 82, 95, 96], "pypi": [48, 73, 94, 96], "020986042861303855": 48, "kappa": [48, 73], "7476531411890917": 48, "cardin": [48, 73, 92], "isel": 48, "jsel": 48, "472": [48, 50], "plot_screenkhorn_1d": [48, 50], "librari": [49, 71, 75, 83, 94, 95, 96], "bach": [49, 90, 94, 95], "bhushan": [49, 90, 94, 95], "damodaran": [49, 90, 94, 95], "kilian": [49, 54, 71, 94], "n_sourc": [49, 90], "n_target": [49, 56, 90], "x_sourc": 49, "y_target": 49, "sag": [49, 90], "sag_pi": 49, "solve_semi_dual_entrop": 49, "55553509e": 49, "96395660e": 49, "76579142e": 49, "31178196e": 49, "21640234e": 49, "25357448e": 49, "30225078e": 49, "37891338e": 49, "56123975e": 49, "61451746e": 49, "31505947e": 49, "33831456e": 49, "61515202e": 49, "34246014e": 49, "28734709e": 49, "07550428e": 49, "85500870e": 49, "52288517e": 49, "08262628e": 49, "21423583e": 49, "16904253e": 49, "03825797e": 49, "87178503e": 49, "18391107e": 49, "15462212e": 49, "65987989e": 49, "23177216e": 49, "39440107e": 49, "semicontinu": 49, "asgd": [49, 90], "asgd_pi": 49, "log_asgd": 49, "beta": [49, 73, 82, 89, 90, 96], "87919564": 49, "64972912": 49, "90370867": 49, "65425719": 49, "46885467": 49, "30171991": 49, "77560865": 49, "50927934": 49, "40235686": 49, "91006054": 49, "82169674": 49, "44871332e": 49, "00795848e": 49, "75697554e": 49, "40659699e": 49, "20593540e": 49, "31205385e": 49, "34063837e": 49, "80242597e": 49, "40238837e": 49, "68032820e": 49, "26513361e": 49, "36373920e": 49, "52546195e": 49, "40772739e": 49, "31054753e": 49, "19774150e": 49, "29902872e": 49, "49410422e": 49, "06078986e": 49, "22200805e": 49, "05396464e": 49, "03575289e": 49, "84056467e": 49, "19573357e": 49, "02994053e": 49, "72385417e": 49, "28420336e": 49, "47716225e": 49, "sinkhorn_pi": 49, "55553508e": 49, "96395661e": 49, "31178193e": 49, "30225079e": 49, "37891333e": 49, "56123974e": 49, "33831455e": 49, "61515201e": 49, "07550425e": 49, "85500876e": 49, "52288523e": 49, "08262629e": 49, "16904255e": 49, "03825804e": 49, "87178504e": 49, "23177217e": 49, "39440105e": 49, "sgd": [49, 81, 90], "sgd_dual_pi": 49, "log_sgd": 49, "solve_dual_entrop": 49, "92075753": 49, "80864372": 49, "07370578": 49, "0179414": 49, "60239916": 49, "8141425": 49, "11122763": 49, "346688": 49, "47228889": 49, "57636303": 49, "9534778": 49, "21021974e": 49, "26940978e": 49, "09590373e": 49, "59858662e": 49, "08": [49, 50, 52, 58, 72, 75, 86], "65652588e": 49, "83627521e": 49, "27260904e": 49, "58648690e": 49, "49188637e": 49, "03096858e": 49, "44340331e": 49, "37764488e": 49, "14582303e": 49, "32484188e": 49, "15372556e": 49, "26187284e": 49, "79941580e": 49, "58297483e": 49, "36009581e": 49, "15632652e": 49, "07006729e": 49, "61709962e": 49, "99740394e": 49, "13377026e": 49, "88094057e": 49, "36124884e": 49, "09671824e": 49, "24045368e": 49, "687": [49, 50], "plot_stochast": [49, 50], "172": [50, 58, 96], "auto_examples_oth": 50, "aureli": 51, "boisbunon": [51, 94], "pip": [51, 70, 95, 96], "conda": [51, 95], "forg": [51, 95], "alwai": [51, 70, 75, 95, 96], "document": [51, 71, 72, 94, 95, 96], "pythonot": [51, 72, 94, 96], "github": [51, 70, 72, 89, 92, 94, 95, 96], "io": [51, 94, 96], "Or": 51, "inlin": 51, "caf\u00e9": 51, "croissant": 51, "manhattan": 51, "quick": [51, 94, 96], "googl": 51, "fiction": 51, "product": [51, 72, 75, 79, 87, 92, 95], "sale": 51, "bakery_po": 51, "bakery_prod": 51, "describ": [51, 70, 73, 81], "sold": 51, "cafe_po": 51, "cafe_prod": 51, "imap": 51, "shop": 51, "npz": 51, "cafe": 51, "89": [51, 58, 75, 96], "73": [51, 58], "88": [51, 58, 96], "92": [51, 58, 96], "91": [51, 58, 96], "441": [51, 73, 82, 94], "next": [51, 81, 82, 87, 95, 96], "ec": 51, "thing": 51, "fontweight": 51, "bold": 51, "va": 51, "coolwarm": 51, "cbar": 51, "use_gridspec": 51, "cell": 51, "awai": 51, "thu": [51, 92], "costli": 51, "while": [51, 82, 83, 95, 96], "time_emd": 51, "section": [51, 95, 96], "good": [51, 69, 70, 95], "plane": 51, "easili": [51, 82, 95], "interpret": 51, "10838179": 51, "pseudo": 51, "oslash": 51, "wise": [51, 72, 92, 95], "divis": [51, 75], "altern": [51, 70, 83, 95, 96], "Be": [51, 72], "care": [51, 72], "pre": [51, 72, 73, 95], "nit": 51, "ot_sink_algo": 51, "atleast_2d": 51, "equival": [51, 52, 75, 79, 83, 85], "diag": [51, 72, 73, 92, 95], "2g": 51, "0008": 51, "notic": 51, "deliv": 51, "fraction": 51, "reg_paramet": 51, "logspac": [51, 57, 60, 61, 66], "w_sinkhorn_reg": 51, "time_sinkhorn_reg": 51, "max_ot": 51, "seri": 51, "someth": [51, 70], "although": [51, 82], "972222222222223": 51, "impact": [51, 95], "higher": [51, 81, 89], "much": [51, 70, 73], "littl": [51, 82], "573": [51, 59, 96], "plot_intro_ot": [51, 59], "0x7f45ff911c60": 52, "861463e": 52, "860154e": 52, "144529e": 52, "130143e": 52, "178815e": 52, "426078e": 52, "661047e": 52, "233110e": 52, "338932e": 52, "776627e": 52, "293340e": 52, "235791e": 52, "637176e": 52, "740051e": 52, "529356e": 52, "450071e": 52, "193632e": 52, "449812e": 52, "294505e": 52, "857493e": 52, "822723e": 52, "722": [52, 59], "plot_ot_1d": [52, 59], "constrain": [53, 75, 89, 94, 95, 96], "togeth": 53, "0x7f45ff74d570": 53, "gsm": 53, "smooth_ot_du": [53, 95], "max_nz": [53, 89, 92], "entri": [53, 72, 82], "permit": 53, "gsc": 53, "sparsity_constrain": [53, 89], "plot_ot_1d_smooth": [53, 59], "empirical_sinkhorn": [54, 73, 95], "846": [54, 59], "plot_ot_2d_sampl": [54, 59], "stole": 55, "idea": [55, 82, 95], "pdf": [55, 57, 70, 95], "1706": 55, "07650": 55, "strictli": [55, 82, 95], "mp": 55, "l1": [55, 74], "gp": 55, "xtot": 55, "plot_ot_l1_vs_l2": [55, 59], "lst_m": 56, "d_emd": 56, "d_emd2": 56, "d_tv": 56, "0x7f45fe13dfc0": 56, "d_sinkhorn": 56, "d_sinkhorn2": 56, "692": [56, 59], "plot_compute_emd": [56, 59], "special": [57, 72], "pdf_von_mis": 57, "endpoint": 57, "mu1": 57, "kappa1": 57, "mu_target": 57, "pdf1": 57, "pdf_t": 57, "mu2": 57, "kappa2": 57, "vonmis": 57, "0x7f45fe1a5270": 57, "period": 57, "attain": [57, 85], "antipod": 57, "contrari": 57, "n_try": 57, "deal": [57, 85], "xts2": 57, "l_w2_circl": 57, "l_w2": 57, "w2_circl": 57, "m_w2_circl": 57, "std_w2_circl": 57, "m_w2": 57, "std_w2": 57, "fill_between": [57, 60, 61], "vline": 57, "ymin": 57, "ymax": 57, "733": 57, "tc": 57, "mask_end": 57, "ctp": 57, "ctm": 57, "dcptm": 57, "dcmtp": 57, "invalid": [57, 64], "vm": 57, "plot_compute_wasserstein_circl": [57, 59], "df": [58, 84, 95], "gl2": 58, "frob": 58, "760578e": 58, "669467e": 58, "457501e": 58, "111116e": 58, "665639e": 58, "298130e": 58, "827855e": 58, "664378e": 58, "572776e": 58, "260396e": 58, "664077e": 58, "811855e": 58, "015066e": 58, "663912e": 58, "936787e": 58, "653393e": 58, "663852e": 58, "555826e": 58, "916369e": 58, "663814e": 58, "305693e": 58, "836245e": 58, "663785e": 58, "760450e": 58, "929009e": 58, "663767e": 58, "078011e": 58, "793559e": 58, "663751e": 58, "525192e": 58, "584755e": 58, "663737e": 58, "396466e": 58, "396951e": 58, "663727e": 58, "086938e": 58, "012700e": 58, "663720e": 58, "042609e": 58, "725769e": 58, "663713e": 58, "160914e": 58, "922568e": 58, "663707e": 58, "823502e": 58, "361187e": 58, "663702e": 58, "022440e": 58, "028438e": 58, "663697e": 58, "181249e": 58, "292634e": 58, "663692e": 58, "698532e": 58, "489527e": 58, "663687e": 58, "258253e": 58, "420712e": 58, "663682e": 58, "741118e": 58, "560349e": 58, "663678e": 58, "624135e": 58, "365715e": 58, "663673e": 58, "645179e": 58, "400714e": 58, "663670e": 58, "957237e": 58, "256196e": 58, "663666e": 58, "261541e": 58, "762450e": 58, "663663e": 58, "851305e": 58, "079948e": 58, "663660e": 58, "942296e": 58, "231320e": 58, "663657e": 58, "092896e": 58, "481860e": 58, "663653e": 58, "924361e": 58, "201470e": 58, "663651e": 58, "625455e": 58, "704189e": 58, "663648e": 58, "641123e": 58, "730250e": 58, "663645e": 58, "566666e": 58, "606377e": 58, "663643e": 58, "338514e": 58, "226810e": 58, "663641e": 58, "222711e": 58, "034152e": 58, "663639e": 58, "221805e": 58, "032642e": 58, "663637e": 58, "440781e": 58, "396935e": 58, "663634e": 58, "520091e": 58, "528875e": 58, "663632e": 58, "288193e": 58, "143080e": 58, "663630e": 58, "123055e": 58, "868347e": 58, "663628e": 58, "024487e": 58, "704365e": 58, "663627e": 58, "079606e": 58, "796061e": 58, "663625e": 58, "172093e": 58, "949922e": 58, "663623e": 58, "047880e": 58, "743277e": 58, "663621e": 58, "010577e": 58, "681217e": 58, "663619e": 58, "064438e": 58, "770820e": 58, "663618e": 58, "882375e": 58, "644049e": 58, "663616e": 58, "532647e": 58, "419505e": 58, "663615e": 58, "930189e": 58, "652001e": 58, "663613e": 58, "728955e": 58, "452161e": 58, "663612e": 58, "524214e": 58, "584459e": 58, "663610e": 58, "088418e": 58, "511958e": 58, "663609e": 58, "639430e": 58, "270902e": 58, "663608e": 58, "662611e": 58, "108397e": 58, "663607e": 58, "133700e": 58, "186767e": 58, "54": [58, 80, 94], "663605e": 58, "648141e": 58, "272349e": 58, "55": [58, 82, 94, 96], "663604e": 58, "557516e": 58, "090911e": 58, "56": [58, 82, 94, 96], "663603e": 58, "304213e": 58, "215131e": 58, "663602e": 58, "353809e": 58, "057021e": 58, "663601e": 58, "968279e": 58, "325603e": 58, "663600e": 58, "367159e": 58, "059240e": 58, "663599e": 58, "610790e": 58, "334102e": 58, "663598e": 58, "787466e": 58, "628015e": 58, "62": [58, 96], "663596e": 58, "937777e": 58, "154166e": 58, "63": 58, "599432e": 58, "315190e": 58, "64": [58, 96], "663595e": 58, "813048e": 58, "670555e": 58, "663594e": 58, "724600e": 58, "523409e": 58, "66": [58, 65, 73, 94, 95, 96], "663593e": 58, "081892e": 58, "011779e": 58, "67": [58, 96], "663592e": 58, "948732e": 58, "896260e": 58, "68": 58, "663591e": 58, "941833e": 58, "221188e": 58, "69": [58, 85], "663590e": 58, "213739e": 58, "673523e": 58, "663589e": 58, "127355e": 58, "529811e": 58, "71": 58, "663588e": 58, "349251e": 58, "235363e": 58, "72": [58, 96], "007084e": 58, "329722e": 58, "663587e": 58, "880265e": 58, "118744e": 58, "74": 58, "663586e": 58, "931950e": 58, "204723e": 58, "663585e": 58, "981309e": 58, "286832e": 58, "76": [58, 96], "663584e": 58, "952959e": 58, "576082e": 58, "77": 58, "544857e": 58, "560750e": 58, "78": [58, 94], "663583e": 58, "237579e": 58, "049564e": 58, "79": [58, 91, 96], "663582e": 58, "382386e": 58, "290460e": 58, "646051e": 58, "065503e": 58, "663581e": 58, "197994e": 58, "983702e": 58, "663580e": 58, "072764e": 58, "775370e": 58, "83": 58, "994645e": 58, "645410e": 58, "84": [58, 96], "663579e": 58, "842721e": 58, "056248e": 58, "663578e": 58, "276486e": 58, "450691e": 58, "86": [58, 96], "737346e": 58, "217366e": 58, "87": [58, 85, 96], "663577e": 58, "282043e": 58, "123508e": 58, "663576e": 58, "020937e": 58, "689135e": 58, "431951e": 58, "709310e": 58, "663575e": 58, "052335e": 58, "077789e": 58, "500538e": 58, "823407e": 58, "663574e": 58, "063176e": 58, "095821e": 58, "663573e": 58, "576367e": 58, "949549e": 58, "94": 58, "224681e": 58, "364492e": 58, "663572e": 58, "673221e": 58, "110670e": 58, "96": 58, "635561e": 58, "048017e": 58, "97": 58, "663571e": 58, "527236e": 58, "867807e": 58, "98": [58, 85], "788548e": 58, "638946e": 58, "663570e": 58, "727141e": 58, "536791e": 58, "127278e": 58, "202445e": 58, "101": 58, "663569e": 58, "637504e": 58, "387670e": 58, "102": 58, "922750e": 58, "862195e": 58, "663568e": 58, "076454e": 58, "117891e": 58, "104": 58, "911509e": 58, "843492e": 58, "105": 58, "663567e": 58, "403398e": 58, "998215e": 58, "106": [58, 96], "439790e": 58, "058755e": 58, "634542e": 58, "382735e": 58, "663566e": 58, "452203e": 58, "079401e": 58, "852991e": 58, "746137e": 58, "663565e": 58, "165490e": 58, "602434e": 58, "111": 58, "450250e": 58, "076149e": 58, "112": 58, "663564e": 58, "685294e": 58, "467159e": 58, "113": [58, 96], "821800e": 58, "694245e": 58, "114": [58, 96], "237390e": 58, "722040e": 58, "115": 58, "663563e": 58, "992842e": 58, "315219e": 58, "116": [58, 96], "166739e": 58, "604506e": 58, "117": 58, "086064e": 58, "470297e": 58, "118": [58, 96], "663562e": 58, "435945e": 58, "052346e": 58, "292497e": 58, "813711e": 58, "663561e": 58, "366209e": 58, "936334e": 58, "138746e": 58, "557935e": 58, "009637e": 58, "343153e": 58, "123": [58, 64], "663560e": 58, "386258e": 58, "969683e": 58, "124": [58, 96], "927442e": 58, "206415e": 58, "081681e": 58, "463000e": 58, "126": [58, 96], "663559e": 58, "759123e": 58, "926406e": 58, "127": [58, 96], "890771e": 58, "145409e": 58, "971315e": 58, "279398e": 58, "129": 58, "663558e": 58, "101983e": 58, "496771e": 58, "035645e": 58, "386414e": 58, "984492e": 58, "301317e": 58, "663557e": 58, "849064e": 58, "076024e": 58, "795703e": 58, "987255e": 58, "134": [58, 96], "624087e": 58, "701762e": 58, "135": 58, "689557e": 58, "810673e": 58, "663556e": 58, "644308e": 58, "735399e": 58, "137": [58, 96], "618007e": 58, "691644e": 58, "138": [58, 96], "483013e": 58, "467075e": 58, "139": [58, 96], "663555e": 58, "708771e": 58, "842636e": 58, "013847e": 58, "350146e": 58, "141": [58, 82, 94, 96], "721217e": 58, "863339e": 58, "142": [58, 96], "663554e": 58, "027911e": 58, "373540e": 58, "143": [58, 96], "935449e": 58, "144": [58, 96], "677151e": 58, "790030e": 58, "351982e": 58, "249094e": 58, "146": [58, 96], "663553e": 58, "423360e": 58, "367836e": 58, "147": 58, "541112e": 58, "563722e": 58, "491601e": 58, "481358e": 58, "149": 58, "466407e": 58, "439446e": 58, "663552e": 58, "801524e": 58, "996929e": 58, "151": 58, "714107e": 58, "851507e": 58, "491257e": 58, "480784e": 58, "153": 58, "513799e": 58, "518282e": 58, "663551e": 58, "354539e": 58, "253345e": 58, "155": [58, 96], "233818e": 58, "052519e": 58, "576219e": 58, "622121e": 58, "157": [58, 96], "452791e": 58, "416792e": 58, "663550e": 58, "262867e": 58, "100843e": 58, "316379e": 58, "189863e": 58, "295447e": 58, "155041e": 58, "161": 58, "283286e": 58, "134810e": 58, "569222e": 58, "610479e": 58, "163": 58, "663549e": 58, "172942e": 58, "951247e": 58, "164": 58, "399809e": 58, "328651e": 58, "229432e": 58, "045221e": 58, "166": 58, "326191e": 58, "206184e": 58, "167": 58, "663548e": 58, "209694e": 58, "012384e": 58, "372136e": 58, "282614e": 58, "169": [58, 96], "338395e": 58, "226484e": 58, "416497e": 58, "356410e": 58, "171": 58, "298576e": 58, "160242e": 58, "663547e": 58, "190590e": 58, "980603e": 58, "167083e": 58, "941497e": 58, "174": [58, 96], "069425e": 58, "779038e": 58, "217780e": 58, "025834e": 58, "176": [58, 96], "140754e": 58, "897697e": 58, "177": 58, "663546e": 58, "160707e": 58, "930890e": 58, "178": [58, 96], "101798e": 58, "832892e": 58, "179": 58, "114904e": 58, "854694e": 58, "064022e": 58, "770049e": 58, "181": [58, 96], "258231e": 58, "540149e": 58, "213120e": 58, "018080e": 58, "183": 58, "663545e": 58, "164296e": 58, "936859e": 58, "188762e": 58, "977559e": 58, "394153e": 58, "562760e": 58, "186": 58, "028656e": 58, "711216e": 58, "115348e": 58, "855431e": 58, "188": 58, "663544e": 58, "768310e": 58, "625002e": 58, "021806e": 58, "699820e": 58, "086303e": 58, "807113e": 58, "191": [58, 96], "879008e": 58, "643416e": 58, "192": 58, "050210e": 58, "747071e": 58, "193": 58, "002463e": 58, "667641e": 58, "194": 58, "663543e": 58, "062747e": 58, "767925e": 58, "195": [58, 96], "348538e": 58, "555170e": 58, "992512e": 58, "329589e": 58, "558020e": 58, "590018e": 58, "198": [58, 96], "993772e": 58, "662507e": 58, "588499e": 58, "428734e": 58, "737134e": 58, "453459e": 58, "692289e": 58, "617643e": 58, "614437e": 58, "464513e": 58, "612639e": 58, "102965e": 58, "003963e": 58, "611291e": 58, "371098e": 58, "348827e": 58, "610468e": 58, "110558e": 58, "230389e": 58, "610198e": 58, "672927e": 58, "693743e": 58, "610130e": 58, "232417e": 58, "814742e": 58, "610090e": 58, "513455e": 58, "046887e": 58, "610002e": 58, "443507e": 58, "764057e": 58, "609996e": 58, "657071e": 58, "887869e": 58, "609948e": 58, "998735e": 58, "827807e": 58, "609695e": 58, "569217e": 58, "525962e": 58, "609533e": 58, "010779e": 58, "626881e": 58, "609520e": 58, "043897e": 58, "294681e": 58, "609465e": 58, "415246e": 58, "496718e": 58, "609386e": 58, "898605e": 58, "883745e": 58, "609324e": 58, "837052e": 58, "175060e": 58, "609298e": 58, "617826e": 58, "603564e": 58, "609184e": 58, "080015e": 58, "139305e": 58, "609083e": 58, "273206e": 58, "009411e": 58, "608988e": 58, "940805e": 58, "558681e": 58, "608853e": 58, "380030e": 58, "348223e": 58, "608844e": 58, "185045e": 58, "341930e": 58, "608824e": 58, "279113e": 58, "057868e": 58, "608819e": 58, "156821e": 58, "078753e": 58, "608783e": 58, "205746e": 58, "548567e": 58, "608764e": 58, "189894e": 58, "914259e": 58, "608755e": 58, "474607e": 58, "807303e": 58, "608737e": 58, "144227e": 58, "840760e": 58, "608676e": 58, "775335e": 58, "073291e": 58, "608638e": 58, "348020e": 58, "777116e": 58, "608627e": 58, "863136e": 58, "104023e": 58, "608529e": 58, "110230e": 58, "828482e": 58, "608487e": 58, "641106e": 58, "248184e": 58, "608409e": 58, "823638e": 58, "758383e": 58, "608373e": 58, "256641e": 58, "629519e": 58, "608338e": 58, "132444e": 58, "429691e": 58, "608310e": 58, "786649e": 58, "873484e": 58, "608260e": 58, "103848e": 58, "991794e": 58, "608206e": 58, "321265e": 58, "341279e": 58, "608201e": 58, "054747e": 58, "912648e": 58, "608195e": 58, "198335e": 58, "751739e": 58, "608193e": 58, "458736e": 58, "360328e": 58, "608159e": 58, "153759e": 58, "463587e": 58, "608115e": 58, "738314e": 58, "403523e": 58, "608108e": 58, "960032e": 58, "368161e": 58, "608081e": 58, "675447e": 58, "694254e": 58, "608072e": 58, "976340e": 58, "610383e": 58, "608046e": 58, "604130e": 58, "579515e": 58, "608020e": 58, "617036e": 58, "600226e": 58, "608014e": 58, "957795e": 58, "364188e": 58, "608011e": 58, "292411e": 58, "078211e": 58, "607998e": 58, "431795e": 58, "355831e": 58, "607964e": 58, "127054e": 58, "420225e": 58, "607947e": 58, "021878e": 58, "643126e": 58, "560621e": 58, "725288e": 58, "607900e": 58, "929781e": 58, "710793e": 58, "607890e": 58, "740229e": 58, "229659e": 58, "607858e": 58, "039550e": 58, "279306e": 58, "607836e": 58, "319545e": 58, "121612e": 58, "607826e": 58, "378947e": 58, "025624e": 58, "607808e": 58, "145102e": 58, "841105e": 58, "607776e": 58, "941743e": 58, "121889e": 58, "607743e": 58, "087422e": 58, "356037e": 58, "607741e": 58, "310249e": 58, "106541e": 58, "607738e": 58, "682752e": 58, "705425e": 58, "607691e": 58, "913936e": 58, "684709e": 58, "607671e": 58, "288855e": 58, "072055e": 58, "607654e": 58, "002448e": 58, "611590e": 58, "607641e": 58, "209492e": 58, "319792e": 58, "607632e": 58, "588467e": 58, "984199e": 58, "607619e": 58, "050388e": 58, "294196e": 58, "607618e": 58, "417493e": 58, "513973e": 58, "607598e": 58, "210509e": 58, "946012e": 58, "607591e": 58, "392914e": 58, "062009e": 58, "607579e": 58, "759587e": 58, "247415e": 58, "607574e": 58, "760280e": 58, "437356e": 58, "607556e": 58, "146469e": 58, "843012e": 58, "607550e": 58, "689456e": 58, "930984e": 58, "065631e": 58, "535705e": 58, "607539e": 58, "555681e": 58, "053852e": 58, "607528e": 58, "177470e": 58, "153798e": 58, "607527e": 58, "306068e": 58, "529648e": 58, "607514e": 58, "816045e": 58, "256440e": 58, "607511e": 58, "301970e": 58, "700442e": 58, "607504e": 58, "281072e": 58, "881840e": 58, "607503e": 58, "821886e": 58, "257370e": 58, "607480e": 58, "403013e": 58, "255315e": 58, "169298e": 58, "879624e": 58, "607473e": 58, "235982e": 58, "809227e": 58, "607470e": 58, "717105e": 58, "760195e": 58, "148402e": 58, "883374e": 58, "reg1": [58, 84], "reg2": [58, 84], "gel2": 58, "gcg": [58, 75, 95], "693084e": 58, "610202e": 58, "147342e": 58, "288260e": 58, "610179e": 58, "406304e": 58, "264402e": 58, "610174e": 58, "352083e": 58, "397436e": 58, "583": [58, 59], "plot_optim_otreg": [58, 59], "971": 59, "auto_exampl": 59, "corenflo": [60, 71, 94], "aalto": 60, "fi": [60, 64], "n_seed": [60, 61], "n_projections_arr": [60, 61], "res_mean": [60, 61], "res_std": [60, 61], "xscale": [60, 61], "confid": [60, 61], "838": [60, 62], "plot_vari": [60, 62], "mgrid": 61, "30j": 61, "plot_surfac": 61, "set_zlim": 61, "tick": 61, "ssw_1": 61, "532": [61, 62], "plot_variance_ssw": [61, 62], "auto_examples_sl": 62, "uot": [63, 87, 94, 95], "574": [63, 68, 96], "plot_uot_1d": [63, 68], "n_weight": 64, "weight_list": 64, "1022": 64, "overflow": [64, 96], "kv": 64, "1027": 64, "ktu": 64, "1034": 64, "595": 64, "974": 64, "615": 64, "455": 64, "361": [64, 65, 68, 96], "plot_uot_barycenter_1d": [64, 68], "582": [64, 68], "n_nois": [65, 67], "cov": 65, "w0": 65, "partial_wasserstein": [65, 67, 95], "entropic_partial_wasserstein": [65, 95], "partial_w_dist": 65, "jet": [65, 67], "47910182636916243": 65, "5034205945081646": 65, "res0": 65, "partial_gromov_wasserstein": [65, 95], "entropic_partial_gromov_wasserstein": [65, 95], "partial_gw_dist": [65, 85], "611280e": 65, "345385e": 65, "584346e": 65, "659015e": 65, "38071035222889": 65, "59015303098326": 65, "478237e": 65, "894947e": 65, "251769e": 65, "596705e": 65, "808371e": 65, "136110e": 65, "859072e": 65, "136043e": 65, "11743971783944865": 65, "9136043100219415": 65, "plot_partial_wass_and_gromov": [65, 68], "wu": [66, 87, 91, 94], "f\u00e9vott": [66, 87, 91, 94], "through": [66, 87, 91, 94, 95], "regress": [66, 70, 87, 91, 94], "haoran": 66, "final_gamma": 66, "t_list": [66, 87], "g_list": [66, 87], "regularization_path": 66, "semi_relax": [66, 87], "t_list2": 66, "g_list2": 66, "selected_gamma": 66, "compute_transport_plan": 66, "ell_2": [66, 67, 91], "g_list_v": 66, "l_2": 66, "041": [66, 68], "plot_regpath": [66, 68], "_f": [67, 95], "div": [67, 91], "ell_1": 67, "reg_m_kl": 67, "reg_m_l2": 67, "entropic_kl_uot": 67, "kl_uot": 67, "mm_unbalanc": 67, "l2_uot": 67, "partial_ot": 67, "449": [67, 68], "plot_unbalanced_ot": [67, 68], "auto_examples_unbalanc": 68, "interest": [69, 95], "foster": [69, 95], "open": [69, 70, 71, 94, 95, 96], "welcom": [69, 94], "environ": [69, 95], "contributor": [69, 94, 96], "maintain": [69, 72, 94, 96], "particip": 69, "harass": 69, "experi": 69, "everyon": 69, "regardless": [69, 96], "ag": 69, "bodi": 69, "disabl": [69, 95], "ethnic": 69, "gender": 69, "ident": [69, 72, 83], "nation": 69, "person": [69, 71], "appear": [69, 73], "race": 69, "religion": 69, "sexual": 69, "behavior": [69, 70, 96], "inclus": [69, 70], "languag": [69, 71, 95], "Being": 69, "viewpoint": 69, "gracefulli": 69, "critic": 69, "focus": 69, "best": [69, 70, 81, 95], "empathi": 69, "toward": 69, "member": [69, 94], "unaccept": 69, "imageri": 69, "unwelcom": 69, "attent": 69, "troll": 69, "insult": 69, "derogatori": 69, "comment": 69, "polit": 69, "attack": 69, "public": [69, 70, 96], "privat": 69, "publish": 69, "physic": 69, "electron": 69, "address": [69, 70, 95], "permiss": 69, "could": [69, 96], "inappropri": 69, "profession": 69, "clarifi": 69, "appropri": [69, 70, 92], "fair": [69, 82], "correct": [69, 70, 82, 94, 96], "action": [69, 96], "edit": [69, 70], "reject": 69, "commit": [69, 70, 72, 96], "wiki": 69, "ban": 69, "temporarili": 69, "perman": 69, "deem": 69, "threaten": 69, "offens": 69, "harm": 69, "offici": [69, 96], "mail": [69, 70, 94], "post": 69, "social": 69, "media": 69, "act": 69, "appoint": 69, "offlin": 69, "event": 69, "abus": 69, "report": [69, 70, 94, 96], "contact": 69, "team": [69, 70, 96], "complaint": 69, "review": [69, 70], "investig": [69, 95], "circumst": 69, "oblig": 69, "confidenti": 69, "regard": 69, "incid": 69, "polici": 69, "separ": [69, 95, 96], "who": [69, 96], "faith": 69, "face": [69, 85], "temporari": 69, "repercuss": 69, "determin": [69, 73, 77, 81, 90], "leadership": 69, "coven": 69, "thank": [70, 71, 87, 96], "workflow": 70, "fork": 70, "repositori": [70, 96], "develop": [70, 94, 95, 96], "branch": [70, 96], "click": 70, "button": 70, "under": [70, 73, 74, 75, 94], "guid": [70, 94, 96], "repo": [70, 96], "disk": 70, "git": 70, "yourlogin": 70, "cd": 70, "hold": 70, "checkout": 70, "my": 70, "never": [70, 96], "master": [70, 92, 94, 96], "modified_fil": 70, "push": [70, 95, 96], "instruct": 70, "email": 70, "committ": 70, "abov": [70, 81, 86, 87, 95, 96], "seem": 70, "magic": 70, "look": [70, 87], "web": 70, "ask": [70, 94, 96], "friend": 70, "anoth": [70, 75, 82, 95], "compli": 70, "rule": [70, 84], "submit": 70, "pep8": [70, 96], "guidelin": [70, 94], "mention": 70, "descript": 70, "docstr": [70, 92, 96], "usag": 70, "doctest": [70, 96], "prefix": 70, "mrg": 70, "readi": 70, "merg": [70, 96], "core": [70, 96], "approv": [70, 96], "elig": 70, "incomplet": [70, 96], "wip": 70, "progress": 70, "matur": 70, "duplic": 70, "broad": 70, "api": [70, 72, 80, 94, 96], "seek": [70, 95], "collabor": 70, "often": [70, 95], "benefit": [70, 71, 94], "task": 70, "pr": [70, 72, 96], "folder": [70, 94, 96], "coverag": [70, 96], "enhanc": 70, "verifi": 70, "manner": 70, "modif": 70, "grant": 70, "desir": [70, 73, 81, 82, 83, 92], "fail": [70, 82, 95, 96], "At": [70, 95], "paragraph": 70, "narr": 70, "literatur": [70, 73, 95], "common": [70, 95], "program": [70, 73, 75, 82, 84, 94, 95, 96], "tool": [70, 95], "pyflak": 70, "autopep8": 70, "easi": [70, 94, 95], "redund": 70, "bonu": 70, "benchmark": [70, 72, 96], "profil": 70, "track": [70, 81, 96], "feel": 70, "snippet": 70, "highlight": [70, 96], "platform": [70, 96], "__version__": 70, "about": [70, 73, 92, 95, 96], "gist": 70, "except": 70, "traceback": 70, "great": 70, "pick": [70, 90], "tracker": 70, "resolv": 70, "knowledg": [70, 95], "assist": 70, "area": [70, 95], "greatli": [70, 95, 96], "appreci": 70, "experienc": 70, "concentr": 70, "glad": 70, "restructuredtext": 70, "etc": [70, 74], "directori": 70, "editor": 70, "noplot": 70, "place": [70, 96], "viewabl": 70, "browser": 70, "pillow": 70, "write": [70, 72], "keep": [70, 95, 96], "compromis": 70, "reader": [70, 95], "hand": 70, "wave": 70, "explan": 70, "inspir": 70, "scikit": [70, 92, 95, 96], "wrapper": [71, 75, 83, 95], "ci": [71, 96], "michael": [71, 82], "l\u00e9o": [71, 94], "gautheron": [71, 94], "nathali": [71, 94], "gayraud": [71, 94], "debug": [71, 82, 96], "alain": [71, 94], "jcpot": [71, 94, 96], "minhui": 71, "huang": [71, 77, 94, 95], "robust": [71, 77, 94, 95, 96], "nathan": [71, 96], "cassereau": [71, 96], "camil": 71, "le": [71, 92], "coz": 71, "theo": 71, "gnassoun": 71, "wassertstein": 71, "effici": [71, 73, 82, 94, 95, 96], "layer": [71, 80, 94, 96], "lot": [71, 96], "would": [71, 72, 96], "variou": [71, 92, 96], "mathieu": [71, 89, 96], "financ": [71, 94], "manpow": [71, 94], "partner": [71, 94], "goal": [72, 90], "agnost": 72, "cupi": [72, 94, 95, 96], "nonetheless": 72, "achiev": 72, "imit": 72, "As": [72, 82, 95, 96], "convent": [72, 75], "list_to_arrai": [72, 92], "get_backend": [72, 96], "know": 72, "op": 72, "numpy_op": 72, "np_config": 72, "enable_numpy_behavior": 72, "intel": 72, "xeon": 72, "6248": 72, "50ghz": 72, "tesla": 72, "v100": 72, "sxm2": 72, "32gb": 72, "date": [72, 96], "8th": 72, "316": [72, 96], "pull": [72, 96], "bitsize32": 72, "bit": 72, "devicecpugpu": 72, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 72, "00080": 72, "00220": 72, "01510": 72, "00950": 72, "01930": 72, "00510": 72, "0293": 72, "00050": 72, "00130": 72, "00970": 72, "00570": 72, "01150": 72, "00290": 72, "0173": 72, "5000": 72, "00090": 72, "00160": 72, "01100": 72, "00580": 72, "0166": 72, "00210": 72, "01450": 72, "00560": 72, "01180": 72, "0168": 72, "20000": 72, "00690": 72, "00430": 72, "02780": 72, "00590": 72, "00300": 72, "0165": 72, "50000": [72, 87], "07070": 72, "03140": 72, "13950": 72, "00740": 72, "01250": 72, "00350": 72, "0198": 72, "nbsp": 72, "bitsize64": 72, "00200": 72, "01540": 72, "00930": 72, "01910": 72, "0328": 72, "00940": 72, "01140": 72, "0169": 72, "00170": 72, "01200": 72, "01160": 72, "00340": 72, "00270": 72, "01770": 72, "0167": 72, "01460": 72, "00750": 72, "04360": 72, "14670": 72, "05680": 72, "24680": 72, "00770": 72, "00450": 72, "0204": 72, "get_available_backend_implement": 72, "proper": [72, 96], "typeerror": 72, "get_backend_list": 72, "forc": [72, 95], "instanti": [72, 92, 95, 96], "side": [72, 87], "effect": [72, 95], "alloc": [72, 95, 96], "func": [72, 92], "to_numpi": 72, "abstract": 72, "jaxbackend": 72, "numpybackend": 72, "torchbackend": [72, 96], "cupybackend": 72, "tensorflowbackend": 72, "__name__": 72, "__type__": 72, "rtol": 72, "equal_nan": 72, "evalu": [72, 73, 74, 82, 96], "evenli": 72, "argsort": 72, "array_equ": 72, "assert_same_dtype_devic": 72, "arctang": 72, "arctan2": 72, "bitsiz": 72, "a_min": 72, "a_max": 72, "sequenc": 72, "exist": [72, 73, 95, 96], "col": 72, "cumsum": 72, "device_typ": 72, "dtype_devic": 72, "eigh": 72, "eigenvalu": [72, 75, 79], "eigenvector": 72, "einsum": 72, "subscript": 72, "operand": 72, "einstein": 72, "summat": 72, "eliminate_zero": 72, "smaller": [72, 96], "csr_matrix": 72, "exponenti": [72, 73], "flip": 72, "from_numpi": 72, "fill_valu": 72, "inv": 72, "is_floating_point": 72, "isfinit": 72, "infin": [72, 91], "isinf": 72, "isnan": 72, "nan": 72, "isspars": 72, "kl_div": 72, "stat": 72, "specifi": [72, 75, 89, 92, 96], "logsumexp": [72, 77, 95], "matmul": 72, "amax": 72, "arithmet": 72, "median": [72, 92], "amin": 72, "frobeniu": 72, "outer": 72, "expon": 72, "prod": 72, "qr": 72, "repeat": 72, "searchsort": 72, "insert": 72, "set_gradi": [72, 96], "val": 72, "equat": [72, 73, 81, 83, 90, 95], "sort2": 72, "ngeativ": 72, "root": [72, 94, 95], "squeez": 72, "deviat": [72, 76, 80, 81], "take_along_axi": 72, "arr": 72, "gather": [72, 75, 83], "tile": 72, "rep": 72, "tocsr": 72, "compress": 72, "trace": 72, "dim0": 72, "dim1": 72, "swap": 72, "return_invers": 72, "chosen": [72, 92, 95], "zero_pad": 72, "pad_width": 72, "pad": 72, "cp": 72, "relat": [73, 81, 94, 95, 96], "s_": 73, "empirical_sinkhorn_diverg": [73, 95, 96], "barycenter_sinkhorn": 73, "barycenter_stabil": 73, "tau": [73, 77, 91], "10000000000": 73, "mast": 73, "strength": 73, "height": 73, "stabthr": 73, "goe": [73, 94, 95], "butscher": [73, 94, 95], "nguyen": [73, 94, 95], "guiba": [73, 94, 95], "geometr": [73, 80, 94, 95, 96], "islazi": 73, "batchsiz": 73, "99977301e": 73, "26989344e": 73, "empirical_sinkhorn2": [73, 95], "53978687e": 73, "w_a": 73, "gamma_a": 73, "m_a": 73, "w_b": 73, "gamma_b": 73, "m_b": 73, "_a": [73, 87], "_b": 73, "499887176049052": 73, "frechet": [73, 82], "w_i": [73, 82], "measure_weight": [73, 82], "k_i": [73, 82], "There": [73, 82, 95], "arnaud": [73, 82], "doucet": [73, 82, 94, 95], "\u00e1lvarez": [73, 82, 94], "esteban": [73, 82, 94], "pedro": [73, 82, 94], "744": [73, 82, 94], "762": [73, 82, 94], "geometricbar": 73, "alldistribt": 73, "geometricmean": 73, "jcpot_barycent": 73, "lambda_k": 73, "gamma_k": 73, "th": [73, 74, 82, 87, 89], "n_k": 73, "unknown": 73, "nsk": 73, "control": [73, 75, 81, 82], "devi": [73, 75], "projc": 73, "projr": 73, "maxfun": 73, "pgtol": 73, "written": [73, 82], "u_i": 73, "ldot": [73, 82], "v_j": [73, 83], "regularis": 73, "bfg": [73, 89, 91, 95], "lbfg": 73, "final": [73, 82, 95, 96], "gain": 73, "isn": 73, "epsilon0": 73, "print_period": 73, "decreas": [73, 75, 83], "tabl": 73, "m0": 73, "h0": 73, "reg0": 73, "dh": 73, "m_0": 73, "_0": [73, 92], "n_atom": 73, "dim_prior": 73, "trust": [73, 77], "nakhostin": [73, 94], "corpetti": [73, 94], "planetari": [73, 94], "workshop": [73, 75, 94, 95], "hyperspectr": [73, 94], "signal": [73, 94, 95], "remot": [73, 94], "whisper": [73, 94], "wx_samp": 74, "wx_feat": 74, "wy_feat": 74, "m_samp": 74, "m_feat": 74, "nits_bcd": 74, "tol_bcd": 74, "eval_bcd": 74, "nits_ot": 74, "tol_sinkhorn": 74, "method_sinkhorn": 74, "early_stopping_tol": 74, "xf": 74, "yf": 74, "alpha_": 74, "alpha_f": 74, "varepsilon_": 74, "varepsilon_f": 74, "n_sample_x": 74, "n_feature_x": 74, "n_sample_i": 74, "n_feature_i": 74, "kei": [74, 81], "duals_sampl": 74, "duals_featur": 74, "bcd": [74, 75, 77, 81, 83], "scheme": 74, "previou": [74, 87], "multipli": [74, 92], "earli": [74, 96], "pi_samp": 74, "pi_feat": 74, "pair": [74, 92], "ny_sampstem": 74, "alpha_1": 74, "alpha_2": 74, "varepsilon_1": 74, "varepsilon_2": 74, "distribution_estimation_uniform": 75, "emd_laplac": 75, "knn": 75, "sim_param": 75, "n_": [75, 82, 83], "s_i": 75, "s_j": 75, "n_t": 75, "t_i": 75, "t_j": 75, "neighbor": 75, "bandwidth": [75, 83], "otml": [75, 94, 95], "sinkhorn_l1l2_gl": [75, 95, 96], "keyword": [75, 92], "transform_label": 75, "inverse_transform_label": 75, "y_t": 75, "transp_x": 75, "transp_xt": 75, "propag": 75, "transp_i": 75, "soft": 75, "nb_class": 75, "similarity_param": 75, "max_inner_it": 75, "inner_tol": 75, "distribution_estim": 75, "out_of_sample_map": 75, "disp": 75, "occur": [75, 95], "kind": [75, 82, 95], "emploi": 75, "limit_max": 75, "10e": 75, "849": 75, "858": 75, "nk_source_sampl": 75, "sign_eig": [75, 79], "sigma_": [75, 79], "sigma_t": [75, 79], "skew": [75, 79], "desolneux": [75, 79, 94], "salmona": [75, 79, 94], "1178": [75, 79, 94], "1198": [75, 79, 94], "discuss": [75, 79, 81, 84, 94, 95, 96], "remark": [75, 79, 95], "daigon": 75, "covari": [75, 76, 79, 95], "knott": [75, 79, 94, 95], "smith": [75, 79, 94, 95], "theori": [75, 79, 94, 95], "1984": [75, 79, 94, 95], "verbose2": [75, 83], "jointli": [75, 83], "constant": [75, 81, 82, 83], "mapping_": 75, "nearestbrenierpotenti": [75, 83], "strongly_convex_const": [75, 83], "yield": 75, "simpler": [75, 96], "strong": [75, 83, 95], "initialis": [75, 83], "lpl1": 75, "infti": 75, "unbalancedsinkhorntransport": 75, "reduct": [77, 92, 94, 96], "explicitli": [77, 80, 83, 86, 96], "u0": 77, "sinkhorn_method": 77, "maxiter_sink": 77, "maxiter_mm": 77, "stiefel": [77, 95], "eather": 77, "mm": 77, "major": [77, 95, 96], "fisher": [77, 85, 95], "ridg": 77, "proj": [77, 88], "projection_robust_wasserstein": 77, "max_": [77, 87, 89, 90], "stepsiz": 77, "riemannian": [77, 94, 95], "ma": [77, 94, 95], "lai": [77, 94, 95], "split_class": 77, "limits_i": 77, "limits_": 77, "neq": [77, 82, 95], "steepest": 77, "trustregion": 77, "region": 77, "wasserstaiun": 77, "1608": [77, 94, 95], "08063": [77, 94, 95], "bures_wasserstein_dist": 79, "ct": 79, "bure": [79, 96], "lvert": 79, "_t": 79, "rvert": 79, "tr": 79, "bures_wasserstein_map": [79, 95], "empirical_bures_wasserstein_dist": 79, "empirical_gaussian_gromov_wasserstein_dist": 79, "gaussien": 79, "dt": 79, "_refer": [79, 90], "gaussian_gromov_wasserstein_dist": 79, "gaussian_gromov_wasserstein_map": 79, "fgw_distance_to_templ": 80, "g_edg": 80, "tplt_adjac": 80, "g_featur": 80, "tplt_featur": 80, "tplt_weight": 80, "multi_alpha": 80, "n_edg": 80, "n_templates_nod": 80, "n_tplt": 80, "n_tplt_node": 80, "train_node_weight": 80, "tfgw": [80, 94], "pool": [80, 96], "tfgw_": 80, "overlin": 80, "fgw_": [80, 81], "_k": 80, "character": 80, "law": 80, "twpool": 80, "kown": 80, "tw_": 80, "charactersis": 80, "b\u00e9cigneul": [80, 94], "ganea": [80, 94], "chen": [80, 94], "barzilai": [80, 94], "jaakkola": [80, 94], "wasserstein_distance_to_templ": 80, "gw_distance_estim": 81, "nb_samples_p": 81, "nb_samples_q": 81, "unbias": 81, "csr": 81, "replac": [81, 95, 96], "sebban": 81, "mlj": 81, "entropic_fused_gromov_barycent": [81, 96], "init_i": 81, "necessarili": 81, "correctli": [81, 96], "Such": 81, "suggest": 81, "entropic_fused_gromov_wasserstein2": 81, "asymetr": 81, "entropic_gromov_barycent": [81, 95], "entropic_gromov_wasserstein2": 81, "recommand": 81, "correcli": 81, "mirror": 81, "geometri": 81, "howev": [81, 95], "entropic_semirelaxed_fused_gromov_wasserstein2": 81, "entropic_semirelaxed_gromov_wasserstein2": 81, "fixed_structur": 81, "fixed_featur": 81, "init_x": [81, 96], "eq": [81, 89], "cdict_init": 81, "ydict_init": 81, "_d": 81, "distibut": 81, "cdict": 81, "ydict": 81, "randomli": 81, "nonneg": 81, "strategi": 81, "consecut": 81, "cdict_best_st": 81, "compos": 81, "ydict_best_st": 81, "w_d": 81, "emb": 81, "depict": 81, "span": [81, 82], "current_loss": 81, "gw_2": 81, "gwggrad": 81, "constc": 81, "hc1": 81, "hc2": 81, "proposit": [81, 89, 90], "h1": 81, "gwloss": 81, "init_matrix": 81, "otim": 81, "read": [81, 94], "f_1": 81, "h_1": 81, "2b": 81, "init_matrix_semirelax": 81, "anymor": 81, "fc2t": 81, "threshold_plan": 81, "frank": 81, "wolf": 81, "_iter": 81, "pn": 81, "complex": [81, 95], "delet": [81, 87], "violat": [81, 82, 95], "nb_samples_grad": 81, "semirelaxed_fused_gromov_wasserstein2": 81, "semirelaxed_gromov_wasserstein2": 81, "solve_gromov_linesearch": [81, 84], "deltag": 81, "cost_g": 81, "alpha_min": [81, 84], "alpha_max": [81, 84], "fw": 81, "decompos": 81, "fc": [81, 84], "useless": [81, 96], "solve_semirelaxed_gromov_linesearch": [81, 84], "ones_p": 81, "tensor_product": 81, "ten": 81, "update_feature_matrix": 81, "update_kl_loss": 81, "update_square_loss": 81, "alpha0": [82, 84], "beta0": 82, "below": [82, 94, 96], "basic": 82, "alpha_0": 82, "beta_0": 82, "check_number_thread": 82, "request": [82, 88, 94], "valid": 82, "estimate_dual_null_weight": 82, "rather": 82, "coars": 82, "emd_c": 82, "discard": 82, "max_j": 82, "max_i": 82, "beta_j": [82, 89], "y_init": 82, "nu_i": 82, "b_l": 82, "y_l": 82, "a_": 82, "d_i": 82, "p_i": 82, "p_ix_": 82, "rightarrow": 82, "don": 82, "ill": 82, "anywai": 82, "ipm": 82, "cvxopt": [82, 95, 96], "glpk": 82, "mosek": 82, "agueh": [82, 94, 95], "904": [82, 94, 95], "924": [82, 94, 95], "dmmot_monge_1dgrid_loss": 82, "concurr": 82, "prime": 82, "state": [82, 96], "textrm": 82, "i_1": 82, "i_d": 82, "i_2": 82, "a_1": 82, "i_i": 82, "qquad": 82, "vdot": 82, "i_": 82, "jefferi": [82, 94], "kline": [82, 94], "vishnu": [82, 94], "suresh": [82, 94], "lokhand": [82, 94], "glenn": [82, 94], "fung": [82, 94], "vika": [82, 94], "singh": [82, 94], "eleventh": [82, 89, 94], "265": [82, 94], "leonid": 82, "transloc": 82, "dokl": 82, "akad": 82, "nauk": 82, "sssr": 82, "227": 82, "1942": 82, "print_rat": 82, "a_d": 82, "z_j": [82, 89, 92], "a_j": 82, "subject": 82, "z_": 82, "i_j": 82, "jin": 82, "a_2": 82, "nonumb": 82, "z_1": 82, "move": [82, 95, 96], "decai": 82, "olvi": 82, "mangasarian": 82, "rr": 82, "meyer": 82, "nonlinear": [82, 83, 95], "perturb": 82, "745": 82, "752": 82, "1979": 82, "ferri": 82, "1991": 82, "variant": [83, 95, 96], "joint_ot_mapping_kernel": [83, 95], "kerneltyp": 83, "2_f": 83, "2_": 83, "supplementari": 83, "materi": 83, "joint_ot_mapping_linear": [83, 95], "neutral": 83, "x_class": 83, "x_n": 83, "v_1": 83, "v_n": 83, "g_i": 83, "g_1": 83, "g_n": 83, "varphi_1": 83, "varphi_n": 83, "i_k": 83, "varphi_i": 83, "varphi_j": 83, "g_j": 83, "x_j": 83, "fact": 83, "polytop": 83, "qcqp": 83, "eco": 83, "basetransport": [83, 95, 96], "y_class": 83, "statement": 83, "typo": 83, "varphi_": 83, "line_search": 84, "line_search_armijo": 84, "reg_1": 84, "reg_2": 84, "generic_conditional_gradi": 84, "lp_solver": 84, "lp_semi_relaxed_ot": 84, "gcg_linesearch": 84, "xk": 84, "pk": 84, "gfk": 84, "old_fval": 84, "x_k": 84, "p_k": 84, "fa": 84, "const": 84, "semirelaxed_cg": 84, "solve_1d_linesearch_quad": 84, "bx": 84, "entropic_partial_gromov_wasserstein2": 85, "gwgrad_parti": 85, "n_p": 85, "n_u": 85, "nb_dummi": 85, "gwloss_parti": 85, "thre": 85, "costfr": 85, "dummi": [85, 96], "instabl": 85, "popul": 85, "partial_gromov_wasserstein2": 85, "especi": [85, 95], "smoother": 85, "repartit": 85, "reservoir": [85, 95], "caffarelli": [85, 94, 95], "mccann": [85, 94, 95], "boundari": [85, 94, 95], "amper": [85, 94, 95], "obstacl": [85, 94, 95], "annal": [85, 94, 95], "673": [85, 94, 95], "partial_wasserstein_lagrang": 85, "partial_wasserstein2": [85, 95], "rao": 85, "tune": 85, "shown": [86, 95], "na": 86, "thr": 86, "noth": 86, "complement_schur": 87, "m_current": 87, "id_pop": 87, "schur": 87, "complement": 87, "aris": 87, "bmatrix": 87, "m_k": 87, "h_a": 87, "th_a": 87, "backslash": 87, "r_": 87, "depriv": 87, "compute_next_remov": 87, "current_gamma": 87, "largest": 87, "vanish": [87, 95], "phi_j": 87, "delta_j": 87, "intercept": 87, "slope": 87, "next_removal_gamma": 87, "next_removal_index": 87, "gamma_list": 87, "pi_list": 87, "piecewis": 87, "flatten": 87, "19722222": 87, "05555556": 87, "24722222": 87, "construct_augmented_h": 87, "active_index": 87, "hc": 87, "hrhr": 87, "augment": 87, "_h": 87, "h_": 87, "h_r": 87, "h_c": 87, "h_augment": 87, "fully_relaxed_path": 87, "itmax": 87, "reformul": 87, "min_t": 87, "99958333e": 87, "00000000e": 87, "88888889e": 87, "99938889e": 87, "ot_next_gamma": 87, "hth": 87, "hty": 87, "inact": 87, "next_gamma": 87, "next_active_index": 87, "recast_ot_as_lasso": 87, "recast": 87, "1_m": 87, "1_n": 87, "particularli": [87, 95], "uot2": 87, "recast_semi_relaxed_as_lasso": 87, "hr": 87, "auxiliari": 87, "constitut": 87, "semi_relaxed_next_gamma": 87, "phi_u": 87, "delta_u": 87, "hra": 87, "ri": 87, "ra": 87, "ith": 87, "lagrang": [87, 92], "semi_relaxed_path": 87, "99980556e": 87, "94444444e": 87, "get_random_project": 88, "proc": 89, "1710": 89, "06276": 89, "mblondel": 89, "liu": [89, 94], "puigcerv": [89, 94], "2209": 89, "15466": 89, "dual_obj_grad": 89, "regul": 89, "delta_omega": 89, "grad_alpha": 89, "grad_beta": 89, "get_plan_from_du": 89, "retriev": 89, "get_plan_from_semi_du": 89, "projection_simplex": 89, "substack": [89, 92], "z_i": [89, 92], "semi_dual_obj_grad": 89, "max_omega": 89, "decent": 89, "nbb": 89, "nonzero": 89, "sinhorn": 89, "smooth_ot_semi_du": [89, 95], "solve_du": 89, "solve_semi_du": 89, "negentropi": 89, "sup_": 89, "intend": 89, "appar": 89, "sparsityconstrain": 89, "squaredl2": 89, "averaged_sgd_entropic_transport": 90, "300000": 90, "contin": 90, "alg": 90, "ave_v": 90, "batch_grad_du": 90, "batch_alpha": 90, "batch_beta": 90, "partial_": 90, "b_": 90, "l_v": 90, "b_v": 90, "l_u": 90, "b_u": 90, "c_transform_entrop": 90, "coordinate_grad_semi_du": 90, "bewar": 90, "dual_loss": 90, "sag_entropic_transport": 90, "sgd_entropic_regular": 90, "barycenter_unbalanced_sinkhorn": 91, "barycenter_unbalanced_stabil": [91, 95], "absorpt": 91, "lbfgsb_unbalanc": 91, "reg_div": 91, "regm_div": 91, "div_m": 91, "three": 91, "quantifi": 91, "mm_unbalanced2": 91, "b_i": 91, "check_param": 92, "miss": 92, "check_random_st": 92, "turn": 92, "singleton": 92, "alreadi": [92, 95, 96], "valueerror": 92, "clean_zero": [92, 96], "cost_norm": 92, "loglog": 92, "lin_squar": 92, "euclidean_dist": 92, "n_samples_1": 92, "n_samples_2": 92, "y1": 92, "get_lowrank_lazytensor": 92, "lazytensor": [92, 96], "lowrank": 92, "get_parameter_pair": 92, "param_1": 92, "param_2": 92, "is_all_finit": 92, "label_norm": 92, "smallest": 92, "lst": 92, "parmap": 92, "nproc": 92, "multiprocess": 92, "closest": 92, "orthogon": 92, "projection_sparse_simplex": 92, "anastasio": 92, "kyrillidi": 92, "stephen": 92, "becker": 92, "volkan": 92, "cevher": 92, "christoph": 92, "koch": 92, "1206": 92, "1529": 92, "reduce_lazytensor": 92, "reduc": 92, "get_param": 92, "deep": 92, "subobject": 92, "param": 92, "set_param": 92, "nest": 92, "pipelin": 92, "latter": 92, "__": 92, "getitem": 92, "lazi": [92, 96], "fly": 92, "sparse_plan": 92, "lazy_plan": 92, "symbol": 92, "keop": 92, "potential_a": 92, "potential_b": 92, "marginal_a": 92, "a_to_b": 92, "b_to_a": 92, "citat": 92, "plain": 92, "bibtex": [92, 94], "extra": 92, "decor": 92, "mark": 92, "blob": 92, "parenthes": 92, "some_funct": 92, "undefinedparamet": 92, "undefin": 92, "ransport": 93, "sever": [94, 95, 96], "websit": 94, "jmlr": [94, 96], "aur\u00e9li": 94, "nemo": 94, "fournier": 94, "antoni": 94, "schutz": 94, "danica": 94, "sutherland": 94, "alexand": 94, "tong": 94, "articl": 94, "flamary2021pot": 94, "mi": 94, "aur": 94, "lie": [94, 95], "year": [94, 95, 96], "volum": 94, "url": 94, "v22": 94, "451": 94, "linux": [94, 96], "macosx": [94, 96], "window": [94, 96], "cython": [94, 95, 96], "latest": 94, "archiv": 94, "abl": 94, "easier": [94, 95], "wd": 94, "wd_reg": 94, "t_reg": [94, 95], "ba": 94, "question": 94, "slack": 94, "channel": 94, "gitter": 94, "bug": [94, 96], "2292": [94, 95], "38th": [94, 95], "pointer": [95, 96], "concret": 95, "book": 95, "ml": 95, "gaspard": 95, "1781": 95, "overal": 95, "difficult": 95, "kantorovitch": 95, "share": 95, "disjoint": 95, "favor": 95, "popular": 95, "jensen": 95, "shannon": 95, "meaning": 95, "becam": 95, "overcom": 95, "spectra": 95, "itself": 95, "context": 95, "recent": [95, 96], "rapidli": 95, "grow": 95, "novel": [95, 96], "abil": 95, "extend": 95, "proven": 95, "nearli": [95, 96], "still": [95, 96], "geomloss": 95, "exactli": 95, "filter": 95, "known": 95, "affin": 95, "hi": 95, "semin": 95, "procedur": 95, "slower": 95, "tu": 95, "kullbach": 95, "similarli": 95, "pure": 95, "speed": [95, 96], "densifi": 95, "lost": 95, "soon": 95, "_q": 95, "overlap": 95, "choic": [95, 96], "long": 95, "w_kw": 95, "mu_k": 95, "b_k": 95, "brought": 95, "eponym": 95, "interfac": 95, "classifi": [95, 96], "xs_map": 95, "inherit": 95, "w_u": 95, "interestingli": 95, "fr\u00e9chet": 95, "w_kw_u": 95, "barycenter_unbalanced_sinkhorn_unbalanc": 95, "surplu": 95, "resolut": 95, "c1_": 95, "c2_": 95, "realign": 95, "ck": 95, "fusion": 95, "coin": 95, "partli": 95, "linearli": 95, "projector": 95, "min_p": 95, "mu_j": 95, "hard": [95, 96], "seamlessli": [95, 96], "incur": 95, "far": 95, "lazili": [95, 96], "prevent": 95, "unwarr": 95, "pot_backend_disable_": 95, "export": 95, "pot_backend_disable_tensorflow": 95, "longer": 95, "hopefulli": [95, 96], "disappear": 95, "becom": 95, "fulli": 95, "importerror": 95, "shortli": 95, "readm": [95, 96], "tri": [95, 96], "quicker": [95, 96], "configur": 95, "nterpol": 95, "cc": 95, "9386": 95, "www": 95, "toronto": 95, "annals2010": 95, "2002": 95, "08276": 95, "526": 96, "535": 96, "tweak": 96, "525": 96, "callback": 96, "improv": 96, "507": 96, "533": 96, "536": 96, "537": 96, "wheel": 96, "old": 96, "i686": 96, "arch": 96, "543": 96, "upgrad": 96, "flexibl": 96, "539": 96, "544": 96, "559": 96, "outsid": 96, "502": 96, "504": 96, "unnecessari": 96, "516": 96, "547": 96, "566": 96, "572": 96, "567": 96, "569": 96, "august": 96, "submodul": 96, "front": 96, "unregist": 96, "celebr": 96, "neighborhood": 96, "streamlin": 96, "timeout": 96, "runner": 96, "made": 96, "428": 96, "372": 96, "376": 96, "387": 96, "388": 96, "437": 96, "395": 96, "394": 96, "371": 96, "373": 96, "374": 96, "hit": 96, "stderr": 96, "cerr": 96, "stream": 96, "377": 96, "378": 96, "379": 96, "beyond": 96, "certain": 96, "slightli": 96, "46k": 96, "roughli": 96, "381": 96, "mismatch": 96, "386": 96, "389": 96, "391": 96, "around": 96, "402": 96, "built": 96, "403": 96, "setuptool": 96, "408": 96, "409": 96, "404": 96, "412": 96, "413": 96, "render": 96, "subcal": 96, "421": 96, "422": 96, "break": 96, "try": 96, "424": 96, "notabl": 96, "less": 96, "background": 96, "autodiff": 96, "359": 96, "358": 96, "brand": 96, "357": 96, "minigalleri": 96, "334": 96, "336": 96, "341": 96, "319": 96, "362": 96, "364": 96, "363": 96, "valfunct": 96, "337": 96, "338": 96, "abi": 96, "346": 96, "349": 96, "feed": 96, "345": 96, "backpropag": 96, "352": 96, "tag": 96, "332": 96, "namespac": 96, "331": 96, "333": 96, "enabl": 96, "bring": 96, "older": 96, "realli": 96, "315": 96, "code_of_conduct": 96, "322": 96, "308": 96, "326": 96, "305": 96, "309": 96, "sinkhornl1l2": 96, "311": 96, "313": 96, "317": 96, "3018": 96, "novemb": 96, "nice": 96, "mechan": 96, "wassersein": 96, "moment": 96, "ott": 96, "devias": 96, "sinkorn": 96, "simplifi": 96, "pyproject": 96, "toml": 96, "aarch64": 96, "raspberri": 96, "android": 96, "phone": 96, "maco": 96, "arm": 96, "processor": 96, "softwar": 96, "cite": 96, "usual": 96, "peopl": 96, "kamel": 96, "guerda": 96, "ai": 96, "idri": 96, "249": 96, "282": 96, "302": 96, "304": 96, "303": 96, "274": 96, "291": 96, "275": 96, "293": 96, "259": 96, "cleanup": 96, "smartphon": 96, "236": 96, "253": 96, "202": 96, "203": 96, "introductori": 96, "leak": 96, "254": 96, "288": 96, "278": 96, "258": 96, "215": 96, "281": 96, "286": 96, "infeas": 96, "201": 96, "codecov": 96, "296": 96, "flake8": 96, "setup": 96, "flag": 96, "organ": 96, "own": 96, "host": 96, "offer": 96, "readthedoc": 96, "beauti": 96, "huge": 96, "travi": 96, "laplac": 96, "acknoledg": 96, "232": 96, "bad": 96, "wassertein": 96, "jump": 96, "wild": 96, "fundament": 96, "month": 96, "until": 96, "python3stat": 96, "exempl": 96, "labeld": 96, "relev": 96, "64bit": 96, "acknowledg": 96, "past": 96, "manylinux": 96, "sep": 96, "among": 96, "rewrit": 96, "unmaintain": 96, "cudamat": 96, "keed": 96, "were": 96, "happi": 96, "stai": 96, "stuff": 96, "markdown": 96, "pipi": 96, "renam": 96, "compliant": 96, "big": 96, "un": 96, "plug": 96, "unus": 96, "unicodedecodeerror": 96, "ascii": 96, "pytest": 96, "pep": 96, "du": 96, "jul": 96, "reloc": 96, "removimg": 96, "apr": 96, "tarnsport": 96, "paralel": 96, "jan": 96, "nov": 96, "oct": 96}, "objects": {"": [[0, 0, 0, "-", "ot"]], "ot": [[72, 0, 0, "-", "backend"], [0, 3, 1, "", "barycenter"], [0, 3, 1, "", "barycenter_unbalanced"], [0, 3, 1, "", "binary_search_circle"], [73, 0, 0, "-", "bregman"], [74, 0, 0, "-", "coot"], [75, 0, 0, "-", "da"], [76, 0, 0, "-", "datasets"], [0, 3, 1, "", "dist"], [77, 0, 0, "-", "dr"], [0, 3, 1, "", "emd"], [0, 3, 1, "", "emd2"], [0, 3, 1, "", "emd2_1d"], [0, 3, 1, "", "emd_1d"], [78, 0, 0, "-", "factored"], [0, 3, 1, "", "factored_optimal_transport"], [0, 3, 1, "", "fused_gromov_wasserstein"], [0, 3, 1, "", "fused_gromov_wasserstein2"], [79, 0, 0, "-", "gaussian"], [80, 0, 0, "-", "gnn"], [81, 0, 0, "-", "gromov"], [0, 3, 1, "", "gromov_barycenters"], [0, 3, 1, "", "gromov_wasserstein"], [0, 3, 1, "", "gromov_wasserstein2"], [82, 0, 0, "-", "lp"], [83, 0, 0, "-", "mapping"], [0, 3, 1, "", "max_sliced_wasserstein_distance"], [84, 0, 0, "-", "optim"], [85, 0, 0, "-", "partial"], [86, 0, 0, "-", "plot"], [87, 0, 0, "-", "regpath"], [0, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [0, 3, 1, "", "sinkhorn"], [0, 3, 1, "", "sinkhorn2"], [0, 3, 1, "", "sinkhorn_lpl1_mm"], [0, 3, 1, "", "sinkhorn_unbalanced"], [0, 3, 1, "", "sinkhorn_unbalanced2"], [88, 0, 0, "-", "sliced"], [0, 3, 1, "", "sliced_wasserstein_distance"], [0, 3, 1, "", "sliced_wasserstein_sphere"], [0, 3, 1, "", "sliced_wasserstein_sphere_unif"], [89, 0, 0, "-", "smooth"], [0, 3, 1, "", "solve"], [0, 3, 1, "", "solve_gromov"], [90, 0, 0, "-", "stochastic"], [0, 3, 1, "", "tic"], [0, 3, 1, "", "toc"], [0, 3, 1, "", "toq"], [91, 0, 0, "-", "unbalanced"], [0, 3, 1, "", "unif"], [92, 0, 0, "-", "utils"], [0, 3, 1, "", "wasserstein_1d"], [0, 3, 1, "", "wasserstein_circle"], [93, 0, 0, "-", "weak"], [0, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[72, 1, 1, "id0", "Backend"], [72, 1, 1, "id83", "CupyBackend"], [72, 1, 1, "id164", "JaxBackend"], [72, 1, 1, "id245", "NumpyBackend"], [72, 1, 1, "id326", "TensorflowBackend"], [72, 1, 1, "id407", "TorchBackend"], [72, 3, 1, "id488", "get_available_backend_implementations"], [72, 3, 1, "id489", "get_backend"], [72, 3, 1, "id490", "get_backend_list"], [72, 3, 1, "id491", "to_numpy"]], "ot.backend.Backend": [[72, 2, 1, "id1", "abs"], [72, 2, 1, "id2", "allclose"], [72, 2, 1, "id3", "any"], [72, 2, 1, "id4", "arange"], [72, 2, 1, "id5", "argmax"], [72, 2, 1, "id6", "argmin"], [72, 2, 1, "id7", "argsort"], [72, 2, 1, "id8", "array_equal"], [72, 2, 1, "id9", "assert_same_dtype_device"], [72, 2, 1, "id10", "atan2"], [72, 2, 1, "id11", "bitsize"], [72, 2, 1, "id12", "clip"], [72, 2, 1, "id13", "concatenate"], [72, 2, 1, "id14", "coo_matrix"], [72, 2, 1, "id15", "copy"], [72, 2, 1, "id16", "cumsum"], [72, 2, 1, "id17", "detach"], [72, 2, 1, "id18", "device_type"], [72, 2, 1, "id19", "diag"], [72, 2, 1, "id20", "dot"], [72, 2, 1, "id21", "dtype_device"], [72, 2, 1, "id22", "eigh"], [72, 2, 1, "id23", "einsum"], [72, 2, 1, "id24", "eliminate_zeros"], [72, 2, 1, "id25", "exp"], [72, 2, 1, "id26", "eye"], [72, 2, 1, "id27", "flip"], [72, 2, 1, "id28", "floor"], [72, 2, 1, "id29", "from_numpy"], [72, 2, 1, "id30", "full"], [72, 2, 1, "id31", "inv"], [72, 2, 1, "id32", "is_floating_point"], [72, 2, 1, "id33", "isfinite"], [72, 2, 1, "id34", "isinf"], [72, 2, 1, "id35", "isnan"], [72, 2, 1, "id36", "issparse"], [72, 2, 1, "id37", "kl_div"], [72, 2, 1, "id38", "linspace"], [72, 2, 1, "id39", "log"], [72, 2, 1, "id40", "logsumexp"], [72, 2, 1, "id41", "matmul"], [72, 2, 1, "id42", "max"], [72, 2, 1, "id43", "maximum"], [72, 2, 1, "id44", "mean"], [72, 2, 1, "id45", "median"], [72, 2, 1, "id46", "meshgrid"], [72, 2, 1, "id47", "min"], [72, 2, 1, "id48", "minimum"], [72, 2, 1, "id49", "norm"], [72, 2, 1, "id50", "ones"], [72, 2, 1, "id51", "outer"], [72, 2, 1, "id52", "power"], [72, 2, 1, "id53", "prod"], [72, 2, 1, "id54", "qr"], [72, 2, 1, "id55", "rand"], [72, 2, 1, "id56", "randn"], [72, 2, 1, "id57", "repeat"], [72, 2, 1, "id58", "reshape"], [72, 2, 1, "id59", "searchsorted"], [72, 2, 1, "id60", "seed"], [72, 2, 1, "id61", "set_gradients"], [72, 2, 1, "id62", "sign"], [72, 2, 1, "id63", "solve"], [72, 2, 1, "id64", "sort"], [72, 2, 1, "id65", "sort2"], [72, 2, 1, "id66", "sqrt"], [72, 2, 1, "id67", "sqrtm"], [72, 2, 1, "id68", "squeeze"], [72, 2, 1, "id69", "stack"], [72, 2, 1, "id70", "std"], [72, 2, 1, "id71", "sum"], [72, 2, 1, "id72", "take_along_axis"], [72, 2, 1, "id73", "tile"], [72, 2, 1, "id74", "to_numpy"], [72, 2, 1, "id75", "tocsr"], [72, 2, 1, "id76", "todense"], [72, 2, 1, "id77", "trace"], [72, 2, 1, "id78", "transpose"], [72, 2, 1, "id79", "unique"], [72, 2, 1, "id80", "where"], [72, 2, 1, "id81", "zero_pad"], [72, 2, 1, "id82", "zeros"]], "ot.backend.CupyBackend": [[72, 2, 1, "id84", "abs"], [72, 2, 1, "id85", "allclose"], [72, 2, 1, "id86", "any"], [72, 2, 1, "id87", "arange"], [72, 2, 1, "id88", "argmax"], [72, 2, 1, "id89", "argmin"], [72, 2, 1, "id90", "argsort"], [72, 2, 1, "id91", "array_equal"], [72, 2, 1, "id92", "assert_same_dtype_device"], [72, 2, 1, "id93", "atan2"], [72, 2, 1, "id94", "bitsize"], [72, 2, 1, "id95", "clip"], [72, 2, 1, "id96", "concatenate"], [72, 2, 1, "id97", "coo_matrix"], [72, 2, 1, "id98", "copy"], [72, 2, 1, "id99", "cumsum"], [72, 2, 1, "id100", "detach"], [72, 2, 1, "id101", "device_type"], [72, 2, 1, "id102", "diag"], [72, 2, 1, "id103", "dot"], [72, 2, 1, "id104", "dtype_device"], [72, 2, 1, "id105", "eigh"], [72, 2, 1, "id106", "einsum"], [72, 2, 1, "id107", "eliminate_zeros"], [72, 2, 1, "id108", "exp"], [72, 2, 1, "id109", "eye"], [72, 2, 1, "id110", "flip"], [72, 2, 1, "id111", "floor"], [72, 2, 1, "id112", "full"], [72, 2, 1, "id113", "inv"], [72, 2, 1, "id114", "is_floating_point"], [72, 2, 1, "id115", "isfinite"], [72, 2, 1, "id116", "isinf"], [72, 2, 1, "id117", "isnan"], [72, 2, 1, "id118", "issparse"], [72, 2, 1, "id119", "kl_div"], [72, 2, 1, "id120", "linspace"], [72, 2, 1, "id121", "log"], [72, 2, 1, "id122", "logsumexp"], [72, 2, 1, "id123", "matmul"], [72, 2, 1, "id124", "max"], [72, 2, 1, "id125", "maximum"], [72, 2, 1, "id126", "mean"], [72, 2, 1, "id127", "median"], [72, 2, 1, "id128", "meshgrid"], [72, 2, 1, "id129", "min"], [72, 2, 1, "id130", "minimum"], [72, 2, 1, "id131", "norm"], [72, 2, 1, "id132", "ones"], [72, 2, 1, "id133", "outer"], [72, 2, 1, "id134", "power"], [72, 2, 1, "id135", "prod"], [72, 2, 1, "id136", "qr"], [72, 2, 1, "id137", "rand"], [72, 2, 1, "id138", "randn"], [72, 2, 1, "id139", "repeat"], [72, 2, 1, "id140", "reshape"], [72, 2, 1, "id141", "searchsorted"], [72, 2, 1, "id142", "seed"], [72, 2, 1, "id143", "set_gradients"], [72, 2, 1, "id144", "sign"], [72, 2, 1, "id145", "solve"], [72, 2, 1, "id146", "sort"], [72, 2, 1, "id147", "sort2"], [72, 2, 1, "id148", "sqrt"], [72, 2, 1, "id149", "sqrtm"], [72, 2, 1, "id150", "squeeze"], [72, 2, 1, "id151", "stack"], [72, 2, 1, "id152", "std"], [72, 2, 1, "id153", "sum"], [72, 2, 1, "id154", "take_along_axis"], [72, 2, 1, "id155", "tile"], [72, 2, 1, "id156", "tocsr"], [72, 2, 1, "id157", "todense"], [72, 2, 1, "id158", "trace"], [72, 2, 1, "id159", "transpose"], [72, 2, 1, "id160", "unique"], [72, 2, 1, "id161", "where"], [72, 2, 1, "id162", "zero_pad"], [72, 2, 1, "id163", "zeros"]], "ot.backend.JaxBackend": [[72, 2, 1, "id165", "abs"], [72, 2, 1, "id166", "allclose"], [72, 2, 1, "id167", "any"], [72, 2, 1, "id168", "arange"], [72, 2, 1, "id169", "argmax"], [72, 2, 1, "id170", "argmin"], [72, 2, 1, "id171", "argsort"], [72, 2, 1, "id172", "array_equal"], [72, 2, 1, "id173", "assert_same_dtype_device"], [72, 2, 1, "id174", "atan2"], [72, 2, 1, "id175", "bitsize"], [72, 2, 1, "id176", "clip"], [72, 2, 1, "id177", "concatenate"], [72, 2, 1, "id178", "coo_matrix"], [72, 2, 1, "id179", "copy"], [72, 2, 1, "id180", "cumsum"], [72, 2, 1, "id181", "detach"], [72, 2, 1, "id182", "device_type"], [72, 2, 1, "id183", "diag"], [72, 2, 1, "id184", "dot"], [72, 2, 1, "id185", "dtype_device"], [72, 2, 1, "id186", "eigh"], [72, 2, 1, "id187", "einsum"], [72, 2, 1, "id188", "eliminate_zeros"], [72, 2, 1, "id189", "exp"], [72, 2, 1, "id190", "eye"], [72, 2, 1, "id191", "flip"], [72, 2, 1, "id192", "floor"], [72, 2, 1, "id193", "full"], [72, 2, 1, "id194", "inv"], [72, 2, 1, "id195", "is_floating_point"], [72, 2, 1, "id196", "isfinite"], [72, 2, 1, "id197", "isinf"], [72, 2, 1, "id198", "isnan"], [72, 2, 1, "id199", "issparse"], [72, 2, 1, "id200", "kl_div"], [72, 2, 1, "id201", "linspace"], [72, 2, 1, "id202", "log"], [72, 2, 1, "id203", "logsumexp"], [72, 2, 1, "id204", "matmul"], [72, 2, 1, "id205", "max"], [72, 2, 1, "id206", "maximum"], [72, 2, 1, "id207", "mean"], [72, 2, 1, "id208", "median"], [72, 2, 1, "id209", "meshgrid"], [72, 2, 1, "id210", "min"], [72, 2, 1, "id211", "minimum"], [72, 2, 1, "id212", "norm"], [72, 2, 1, "id213", "ones"], [72, 2, 1, "id214", "outer"], [72, 2, 1, "id215", "power"], [72, 2, 1, "id216", "prod"], [72, 2, 1, "id217", "qr"], [72, 2, 1, "id218", "rand"], [72, 2, 1, "id219", "randn"], [72, 2, 1, "id220", "repeat"], [72, 2, 1, "id221", "reshape"], [72, 2, 1, "id222", "searchsorted"], [72, 2, 1, "id223", "seed"], [72, 2, 1, "id224", "set_gradients"], [72, 2, 1, "id225", "sign"], [72, 2, 1, "id226", "solve"], [72, 2, 1, "id227", "sort"], [72, 2, 1, "id228", "sort2"], [72, 2, 1, "id229", "sqrt"], [72, 2, 1, "id230", "sqrtm"], [72, 2, 1, "id231", "squeeze"], [72, 2, 1, "id232", "stack"], [72, 2, 1, "id233", "std"], [72, 2, 1, "id234", "sum"], [72, 2, 1, "id235", "take_along_axis"], [72, 2, 1, "id236", "tile"], [72, 2, 1, "id237", "tocsr"], [72, 2, 1, "id238", "todense"], [72, 2, 1, "id239", "trace"], [72, 2, 1, "id240", "transpose"], [72, 2, 1, "id241", "unique"], [72, 2, 1, "id242", "where"], [72, 2, 1, "id243", "zero_pad"], [72, 2, 1, "id244", "zeros"]], "ot.backend.NumpyBackend": [[72, 2, 1, "id246", "abs"], [72, 2, 1, "id247", "allclose"], [72, 2, 1, "id248", "any"], [72, 2, 1, "id249", "arange"], [72, 2, 1, "id250", "argmax"], [72, 2, 1, "id251", "argmin"], [72, 2, 1, "id252", "argsort"], [72, 2, 1, "id253", "array_equal"], [72, 2, 1, "id254", "assert_same_dtype_device"], [72, 2, 1, "id255", "atan2"], [72, 2, 1, "id256", "bitsize"], [72, 2, 1, "id257", "clip"], [72, 2, 1, "id258", "concatenate"], [72, 2, 1, "id259", "coo_matrix"], [72, 2, 1, "id260", "copy"], [72, 2, 1, "id261", "cumsum"], [72, 2, 1, "id262", "detach"], [72, 2, 1, "id263", "device_type"], [72, 2, 1, "id264", "diag"], [72, 2, 1, "id265", "dot"], [72, 2, 1, "id266", "dtype_device"], [72, 2, 1, "id267", "eigh"], [72, 2, 1, "id268", "einsum"], [72, 2, 1, "id269", "eliminate_zeros"], [72, 2, 1, "id270", "exp"], [72, 2, 1, "id271", "eye"], [72, 2, 1, "id272", "flip"], [72, 2, 1, "id273", "floor"], [72, 2, 1, "id274", "full"], [72, 2, 1, "id275", "inv"], [72, 2, 1, "id276", "is_floating_point"], [72, 2, 1, "id277", "isfinite"], [72, 2, 1, "id278", "isinf"], [72, 2, 1, "id279", "isnan"], [72, 2, 1, "id280", "issparse"], [72, 2, 1, "id281", "kl_div"], [72, 2, 1, "id282", "linspace"], [72, 2, 1, "id283", "log"], [72, 2, 1, "id284", "logsumexp"], [72, 2, 1, "id285", "matmul"], [72, 2, 1, "id286", "max"], [72, 2, 1, "id287", "maximum"], [72, 2, 1, "id288", "mean"], [72, 2, 1, "id289", "median"], [72, 2, 1, "id290", "meshgrid"], [72, 2, 1, "id291", "min"], [72, 2, 1, "id292", "minimum"], [72, 2, 1, "id293", "norm"], [72, 2, 1, "id294", "ones"], [72, 2, 1, "id295", "outer"], [72, 2, 1, "id296", "power"], [72, 2, 1, "id297", "prod"], [72, 2, 1, "id298", "qr"], [72, 2, 1, "id299", "rand"], [72, 2, 1, "id300", "randn"], [72, 2, 1, "id301", "repeat"], [72, 2, 1, "id302", "reshape"], [72, 2, 1, "id303", "searchsorted"], [72, 2, 1, "id304", "seed"], [72, 2, 1, "id305", "set_gradients"], [72, 2, 1, "id306", "sign"], [72, 2, 1, "id307", "solve"], [72, 2, 1, "id308", "sort"], [72, 2, 1, "id309", "sort2"], [72, 2, 1, "id310", "sqrt"], [72, 2, 1, "id311", "sqrtm"], [72, 2, 1, "id312", "squeeze"], [72, 2, 1, "id313", "stack"], [72, 2, 1, "id314", "std"], [72, 2, 1, "id315", "sum"], [72, 2, 1, "id316", "take_along_axis"], [72, 2, 1, "id317", "tile"], [72, 2, 1, "id318", "tocsr"], [72, 2, 1, "id319", "todense"], [72, 2, 1, "id320", "trace"], [72, 2, 1, "id321", "transpose"], [72, 2, 1, "id322", "unique"], [72, 2, 1, "id323", "where"], [72, 2, 1, "id324", "zero_pad"], [72, 2, 1, "id325", "zeros"]], "ot.backend.TensorflowBackend": [[72, 2, 1, "id327", "abs"], [72, 2, 1, "id328", "allclose"], [72, 2, 1, "id329", "any"], [72, 2, 1, "id330", "arange"], [72, 2, 1, "id331", "argmax"], [72, 2, 1, "id332", "argmin"], [72, 2, 1, "id333", "argsort"], [72, 2, 1, "id334", "array_equal"], [72, 2, 1, "id335", "assert_same_dtype_device"], [72, 2, 1, "id336", "atan2"], [72, 2, 1, "id337", "bitsize"], [72, 2, 1, "id338", "clip"], [72, 2, 1, "id339", "concatenate"], [72, 2, 1, "id340", "coo_matrix"], [72, 2, 1, "id341", "copy"], [72, 2, 1, "id342", "cumsum"], [72, 2, 1, "id343", "detach"], [72, 2, 1, "id344", "device_type"], [72, 2, 1, "id345", "diag"], [72, 2, 1, "id346", "dot"], [72, 2, 1, "id347", "dtype_device"], [72, 2, 1, "id348", "eigh"], [72, 2, 1, "id349", "einsum"], [72, 2, 1, "id350", "eliminate_zeros"], [72, 2, 1, "id351", "exp"], [72, 2, 1, "id352", "eye"], [72, 2, 1, "id353", "flip"], [72, 2, 1, "id354", "floor"], [72, 2, 1, "id355", "full"], [72, 2, 1, "id356", "inv"], [72, 2, 1, "id357", "is_floating_point"], [72, 2, 1, "id358", "isfinite"], [72, 2, 1, "id359", "isinf"], [72, 2, 1, "id360", "isnan"], [72, 2, 1, "id361", "issparse"], [72, 2, 1, "id362", "kl_div"], [72, 2, 1, "id363", "linspace"], [72, 2, 1, "id364", "log"], [72, 2, 1, "id365", "logsumexp"], [72, 2, 1, "id366", "matmul"], [72, 2, 1, "id367", "max"], [72, 2, 1, "id368", "maximum"], [72, 2, 1, "id369", "mean"], [72, 2, 1, "id370", "median"], [72, 2, 1, "id371", "meshgrid"], [72, 2, 1, "id372", "min"], [72, 2, 1, "id373", "minimum"], [72, 2, 1, "id374", "norm"], [72, 2, 1, "id375", "ones"], [72, 2, 1, "id376", "outer"], [72, 2, 1, "id377", "power"], [72, 2, 1, "id378", "prod"], [72, 2, 1, "id379", "qr"], [72, 2, 1, "id380", "rand"], [72, 2, 1, "id381", "randn"], [72, 2, 1, "id382", "repeat"], [72, 2, 1, "id383", "reshape"], [72, 2, 1, "id384", "searchsorted"], [72, 2, 1, "id385", "seed"], [72, 2, 1, "id386", "set_gradients"], [72, 2, 1, "id387", "sign"], [72, 2, 1, "id388", "solve"], [72, 2, 1, "id389", "sort"], [72, 2, 1, "id390", "sort2"], [72, 2, 1, "id391", "sqrt"], [72, 2, 1, "id392", "sqrtm"], [72, 2, 1, "id393", "squeeze"], [72, 2, 1, "id394", "stack"], [72, 2, 1, "id395", "std"], [72, 2, 1, "id396", "sum"], [72, 2, 1, "id397", "take_along_axis"], [72, 2, 1, "id398", "tile"], [72, 2, 1, "id399", "tocsr"], [72, 2, 1, "id400", "todense"], [72, 2, 1, "id401", "trace"], [72, 2, 1, "id402", "transpose"], [72, 2, 1, "id403", "unique"], [72, 2, 1, "id404", "where"], [72, 2, 1, "id405", "zero_pad"], [72, 2, 1, "id406", "zeros"]], "ot.backend.TorchBackend": [[72, 2, 1, "id408", "abs"], [72, 2, 1, "id409", "allclose"], [72, 2, 1, "id410", "any"], [72, 2, 1, "id411", "arange"], [72, 2, 1, "id412", "argmax"], [72, 2, 1, "id413", "argmin"], [72, 2, 1, "id414", "argsort"], [72, 2, 1, "id415", "array_equal"], [72, 2, 1, "id416", "assert_same_dtype_device"], [72, 2, 1, "id417", "atan2"], [72, 2, 1, "id418", "bitsize"], [72, 2, 1, "id419", "clip"], [72, 2, 1, "id420", "concatenate"], [72, 2, 1, "id421", "coo_matrix"], [72, 2, 1, "id422", "copy"], [72, 2, 1, "id423", "cumsum"], [72, 2, 1, "id424", "detach"], [72, 2, 1, "id425", "device_type"], [72, 2, 1, "id426", "diag"], [72, 2, 1, "id427", "dot"], [72, 2, 1, "id428", "dtype_device"], [72, 2, 1, "id429", "eigh"], [72, 2, 1, "id430", "einsum"], [72, 2, 1, "id431", "eliminate_zeros"], [72, 2, 1, "id432", "exp"], [72, 2, 1, "id433", "eye"], [72, 2, 1, "id434", "flip"], [72, 2, 1, "id435", "floor"], [72, 2, 1, "id436", "full"], [72, 2, 1, "id437", "inv"], [72, 2, 1, "id438", "is_floating_point"], [72, 2, 1, "id439", "isfinite"], [72, 2, 1, "id440", "isinf"], [72, 2, 1, "id441", "isnan"], [72, 2, 1, "id442", "issparse"], [72, 2, 1, "id443", "kl_div"], [72, 2, 1, "id444", "linspace"], [72, 2, 1, "id445", "log"], [72, 2, 1, "id446", "logsumexp"], [72, 2, 1, "id447", "matmul"], [72, 2, 1, "id448", "max"], [72, 2, 1, "id449", "maximum"], [72, 2, 1, "id450", "mean"], [72, 2, 1, "id451", "median"], [72, 2, 1, "id452", "meshgrid"], [72, 2, 1, "id453", "min"], [72, 2, 1, "id454", "minimum"], [72, 2, 1, "id455", "norm"], [72, 2, 1, "id456", "ones"], [72, 2, 1, "id457", "outer"], [72, 2, 1, "id458", "power"], [72, 2, 1, "id459", "prod"], [72, 2, 1, "id460", "qr"], [72, 2, 1, "id461", "rand"], [72, 2, 1, "id462", "randn"], [72, 2, 1, "id463", "repeat"], [72, 2, 1, "id464", "reshape"], [72, 2, 1, "id465", "searchsorted"], [72, 2, 1, "id466", "seed"], [72, 2, 1, "id467", "set_gradients"], [72, 2, 1, "id468", "sign"], [72, 2, 1, "id469", "solve"], [72, 2, 1, "id470", "sort"], [72, 2, 1, "id471", "sort2"], [72, 2, 1, "id472", "sqrt"], [72, 2, 1, "id473", "sqrtm"], [72, 2, 1, "id474", "squeeze"], [72, 2, 1, "id475", "stack"], [72, 2, 1, "id476", "std"], [72, 2, 1, "id477", "sum"], [72, 2, 1, "id478", "take_along_axis"], [72, 2, 1, "id479", "tile"], [72, 2, 1, "id480", "tocsr"], [72, 2, 1, "id481", "todense"], [72, 2, 1, "id482", "trace"], [72, 2, 1, "id483", "transpose"], [72, 2, 1, "id484", "unique"], [72, 2, 1, "id485", "where"], [72, 2, 1, "id486", "zero_pad"], [72, 2, 1, "id487", "zeros"]], "ot.bregman": [[73, 3, 1, "", "barycenter"], [73, 3, 1, "", "barycenter_debiased"], [73, 3, 1, "", "barycenter_sinkhorn"], [73, 3, 1, "", "barycenter_stabilized"], [73, 3, 1, "", "convolutional_barycenter2d"], [73, 3, 1, "", "convolutional_barycenter2d_debiased"], [73, 3, 1, "", "empirical_sinkhorn"], [73, 3, 1, "", "empirical_sinkhorn2"], [73, 3, 1, "", "empirical_sinkhorn_divergence"], [73, 3, 1, "", "free_support_sinkhorn_barycenter"], [73, 3, 1, "", "geometricBar"], [73, 3, 1, "", "geometricMean"], [73, 3, 1, "", "greenkhorn"], [73, 3, 1, "", "jcpot_barycenter"], [73, 3, 1, "", "projC"], [73, 3, 1, "", "projR"], [73, 3, 1, "", "screenkhorn"], [73, 3, 1, "", "sinkhorn"], [73, 3, 1, "", "sinkhorn2"], [73, 3, 1, "", "sinkhorn_epsilon_scaling"], [73, 3, 1, "", "sinkhorn_knopp"], [73, 3, 1, "", "sinkhorn_log"], [73, 3, 1, "", "sinkhorn_stabilized"], [73, 3, 1, "", "unmix"]], "ot.coot": [[74, 3, 1, "id0", "co_optimal_transport"], [74, 3, 1, "id4", "co_optimal_transport2"]], "ot.da": [[75, 1, 1, "id0", "BaseTransport"], [75, 1, 1, "id44", "EMDLaplaceTransport"], [75, 1, 1, "id51", "EMDTransport"], [75, 1, 1, "id57", "JCPOTTransport"], [75, 1, 1, "id70", "LinearGWTransport"], [75, 1, 1, "id74", "LinearTransport"], [75, 1, 1, "id81", "MappingTransport"], [75, 1, 1, "id88", "NearestBrenierPotential"], [75, 1, 1, "id96", "SinkhornL1l2Transport"], [75, 1, 1, "id104", "SinkhornLpl1Transport"], [75, 1, 1, "id111", "SinkhornTransport"], [75, 1, 1, "id119", "UnbalancedSinkhornTransport"], [75, 3, 1, "id126", "distribution_estimation_uniform"], [75, 3, 1, "id127", "emd_laplace"], [75, 3, 1, "id131", "sinkhorn_l1l2_gl"], [75, 3, 1, "id135", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[75, 2, 1, "id36", "fit"], [75, 2, 1, "id37", "fit_transform"], [75, 2, 1, "id38", "inverse_transform"], [75, 2, 1, "id39", "inverse_transform_labels"], [75, 2, 1, "id40", "transform"], [75, 2, 1, "id41", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[75, 4, 1, "id45", "coupling_"], [75, 2, 1, "id50", "fit"]], "ot.da.EMDTransport": [[75, 4, 1, "id52", "coupling_"], [75, 2, 1, "id56", "fit"]], "ot.da.JCPOTTransport": [[75, 4, 1, "id58", "coupling_"], [75, 2, 1, "id64", "fit"], [75, 2, 1, "id65", "inverse_transform_labels"], [75, 4, 1, "id60", "log_"], [75, 4, 1, "id59", "proportions_"], [75, 2, 1, "id66", "transform"], [75, 2, 1, "id67", "transform_labels"]], "ot.da.LinearGWTransport": [[75, 2, 1, "id73", "fit"]], "ot.da.LinearTransport": [[75, 2, 1, "id78", "fit"], [75, 2, 1, "id79", "inverse_transform"], [75, 2, 1, "id80", "transform"]], "ot.da.MappingTransport": [[75, 4, 1, "id82", "coupling_"], [75, 2, 1, "id86", "fit"], [75, 4, 1, "id84", "log_"], [75, 4, 1, "id83", "mapping_"], [75, 2, 1, "id87", "transform"]], "ot.da.NearestBrenierPotential": [[75, 2, 1, "id91", "fit"], [75, 2, 1, "id93", "transform"]], "ot.da.SinkhornL1l2Transport": [[75, 4, 1, "id97", "coupling_"], [75, 2, 1, "id103", "fit"], [75, 4, 1, "id98", "log_"]], "ot.da.SinkhornLpl1Transport": [[75, 4, 1, "id105", "coupling_"], [75, 2, 1, "id110", "fit"]], "ot.da.SinkhornTransport": [[75, 4, 1, "id112", "coupling_"], [75, 2, 1, "id118", "fit"], [75, 4, 1, "id113", "log_"]], "ot.da.UnbalancedSinkhornTransport": [[75, 4, 1, "id120", "coupling_"], [75, 2, 1, "id125", "fit"], [75, 4, 1, "id121", "log_"]], "ot.datasets": [[76, 3, 1, "id0", "make_1D_gauss"], [76, 3, 1, "id1", "make_2D_samples_gauss"], [76, 3, 1, "id2", "make_data_classif"]], "ot.dr": [[77, 3, 1, "id0", "dist"], [77, 3, 1, "id4", "ewca"], [77, 3, 1, "id7", "fda"], [77, 3, 1, "id8", "logsumexp"], [77, 3, 1, "id9", "projection_robust_wasserstein"], [77, 3, 1, "id12", "sinkhorn"], [77, 3, 1, "id13", "sinkhorn_log"], [77, 3, 1, "id14", "split_classes"], [77, 3, 1, "id15", "wda"]], "ot.factored": [[78, 3, 1, "id0", "factored_optimal_transport"]], "ot.gaussian": [[79, 3, 1, "id0", "bures_wasserstein_distance"], [79, 3, 1, "id15", "bures_wasserstein_mapping"], [79, 3, 1, "id19", "empirical_bures_wasserstein_distance"], [79, 3, 1, "id22", "empirical_bures_wasserstein_mapping"], [79, 3, 1, "id26", "empirical_gaussian_gromov_wasserstein_distance"], [79, 3, 1, "id29", "empirical_gaussian_gromov_wasserstein_mapping"], [79, 3, 1, "id31", "gaussian_gromov_wasserstein_distance"], [79, 3, 1, "id34", "gaussian_gromov_wasserstein_mapping"]], "ot.gnn": [[80, 3, 1, "", "FGW_distance_to_templates"], [80, 1, 1, "", "TFGWPooling"], [80, 1, 1, "", "TWPooling"], [80, 3, 1, "", "wasserstein_distance_to_templates"]], "ot.gnn.TFGWPooling": [[80, 2, 1, "", "forward"]], "ot.gnn.TWPooling": [[80, 2, 1, "", "forward"]], "ot.gromov": [[81, 3, 1, "", "GW_distance_estimation"], [81, 3, 1, "", "entropic_fused_gromov_barycenters"], [81, 3, 1, "", "entropic_fused_gromov_wasserstein"], [81, 3, 1, "", "entropic_fused_gromov_wasserstein2"], [81, 3, 1, "", "entropic_gromov_barycenters"], [81, 3, 1, "", "entropic_gromov_wasserstein"], [81, 3, 1, "", "entropic_gromov_wasserstein2"], [81, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein"], [81, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein2"], [81, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein"], [81, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein2"], [81, 3, 1, "", "fgw_barycenters"], [81, 3, 1, "", "fused_gromov_wasserstein"], [81, 3, 1, "", "fused_gromov_wasserstein2"], [81, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [81, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [81, 3, 1, "", "gromov_barycenters"], [81, 3, 1, "", "gromov_wasserstein"], [81, 3, 1, "", "gromov_wasserstein2"], [81, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [81, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [81, 3, 1, "", "gwggrad"], [81, 3, 1, "", "gwloss"], [81, 3, 1, "", "init_matrix"], [81, 3, 1, "", "init_matrix_semirelaxed"], [81, 3, 1, "", "pointwise_gromov_wasserstein"], [81, 3, 1, "", "sampled_gromov_wasserstein"], [81, 3, 1, "", "semirelaxed_fused_gromov_wasserstein"], [81, 3, 1, "", "semirelaxed_fused_gromov_wasserstein2"], [81, 3, 1, "", "semirelaxed_gromov_wasserstein"], [81, 3, 1, "", "semirelaxed_gromov_wasserstein2"], [81, 3, 1, "", "solve_gromov_linesearch"], [81, 3, 1, "", "solve_semirelaxed_gromov_linesearch"], [81, 3, 1, "", "tensor_product"], [81, 3, 1, "", "update_feature_matrix"], [81, 3, 1, "", "update_kl_loss"], [81, 3, 1, "", "update_square_loss"]], "ot.lp": [[82, 3, 1, "", "barycenter"], [82, 3, 1, "", "binary_search_circle"], [82, 3, 1, "", "center_ot_dual"], [82, 3, 1, "", "check_number_threads"], [82, 3, 1, "", "dmmot_monge_1dgrid_loss"], [82, 3, 1, "", "dmmot_monge_1dgrid_optimize"], [82, 3, 1, "id0", "emd"], [82, 3, 1, "id17", "emd2"], [82, 3, 1, "", "emd2_1d"], [82, 3, 1, "", "emd_1d"], [82, 3, 1, "", "estimate_dual_null_weights"], [82, 3, 1, "id24", "free_support_barycenter"], [82, 3, 1, "id28", "generalized_free_support_barycenter"], [82, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [82, 3, 1, "", "wasserstein_1d"], [82, 3, 1, "", "wasserstein_circle"]], "ot.mapping": [[83, 3, 1, "id0", "joint_OT_mapping_kernel"], [83, 3, 1, "id8", "joint_OT_mapping_linear"], [83, 3, 1, "id11", "nearest_brenier_potential_fit"], [83, 3, 1, "id13", "nearest_brenier_potential_predict_bounds"]], "ot.optim": [[84, 3, 1, "id0", "cg"], [84, 3, 1, "id13", "gcg"], [84, 3, 1, "id17", "generic_conditional_gradient"], [84, 3, 1, "id23", "line_search_armijo"], [84, 3, 1, "id24", "semirelaxed_cg"], [84, 3, 1, "id27", "solve_1d_linesearch_quad"]], "ot.partial": [[85, 3, 1, "id0", "entropic_partial_gromov_wasserstein"], [85, 3, 1, "id17", "entropic_partial_gromov_wasserstein2"], [85, 3, 1, "id21", "entropic_partial_wasserstein"], [85, 3, 1, "id24", "gwgrad_partial"], [85, 3, 1, "id27", "gwloss_partial"], [85, 3, 1, "id28", "partial_gromov_wasserstein"], [85, 3, 1, "id31", "partial_gromov_wasserstein2"], [85, 3, 1, "id34", "partial_wasserstein"], [85, 3, 1, "id37", "partial_wasserstein2"], [85, 3, 1, "id40", "partial_wasserstein_lagrange"]], "ot.plot": [[86, 3, 1, "id0", "plot1D_mat"], [86, 3, 1, "id1", "plot2D_samples_mat"]], "ot.regpath": [[87, 3, 1, "id0", "complement_schur"], [87, 3, 1, "id12", "compute_next_removal"], [87, 3, 1, "id15", "compute_transport_plan"], [87, 3, 1, "id18", "construct_augmented_H"], [87, 3, 1, "id19", "fully_relaxed_path"], [87, 3, 1, "id21", "ot_next_gamma"], [87, 3, 1, "id23", "recast_ot_as_lasso"], [87, 3, 1, "id25", "recast_semi_relaxed_as_lasso"], [87, 3, 1, "id26", "regularization_path"], [87, 3, 1, "id28", "semi_relaxed_next_gamma"], [87, 3, 1, "id30", "semi_relaxed_path"]], "ot.sliced": [[88, 3, 1, "id0", "get_random_projections"], [88, 3, 1, "id5", "max_sliced_wasserstein_distance"], [88, 3, 1, "id7", "sliced_wasserstein_distance"], [88, 3, 1, "id9", "sliced_wasserstein_sphere"], [88, 3, 1, "id11", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[89, 1, 1, "id0", "NegEntropy"], [89, 1, 1, "id10", "Regularization"], [89, 1, 1, "id14", "SparsityConstrained"], [89, 1, 1, "id18", "SquaredL2"], [89, 3, 1, "id22", "dual_obj_grad"], [89, 3, 1, "id23", "get_plan_from_dual"], [89, 3, 1, "id24", "get_plan_from_semi_dual"], [89, 3, 1, "id25", "projection_simplex"], [89, 3, 1, "id26", "semi_dual_obj_grad"], [89, 3, 1, "id27", "smooth_ot_dual"], [89, 3, 1, "id32", "smooth_ot_semi_dual"], [89, 3, 1, "id37", "solve_dual"], [89, 3, 1, "id38", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[89, 2, 1, "id7", "Omega"], [89, 2, 1, "id8", "delta_Omega"], [89, 2, 1, "id9", "max_Omega"]], "ot.smooth.Regularization": [[89, 2, 1, "id11", "Omega"], [89, 2, 1, "id12", "delta_Omega"], [89, 2, 1, "id13", "max_Omega"]], "ot.smooth.SparsityConstrained": [[89, 2, 1, "id15", "Omega"], [89, 2, 1, "id16", "delta_Omega"], [89, 2, 1, "id17", "max_Omega"]], "ot.smooth.SquaredL2": [[89, 2, 1, "id19", "Omega"], [89, 2, 1, "id20", "delta_Omega"], [89, 2, 1, "id21", "max_Omega"]], "ot.stochastic": [[90, 3, 1, "id0", "averaged_sgd_entropic_transport"], [90, 3, 1, "id14", "batch_grad_dual"], [90, 3, 1, "id16", "c_transform_entropic"], [90, 3, 1, "id18", "coordinate_grad_semi_dual"], [90, 3, 1, "id20", "loss_dual_entropic"], [90, 3, 1, "id22", "loss_dual_quadratic"], [90, 3, 1, "id24", "plan_dual_entropic"], [90, 3, 1, "id26", "plan_dual_quadratic"], [90, 3, 1, "id28", "sag_entropic_transport"], [90, 3, 1, "id30", "sgd_entropic_regularization"], [90, 3, 1, "id32", "solve_dual_entropic"], [90, 3, 1, "id34", "solve_semi_dual_entropic"]], "ot.unbalanced": [[91, 3, 1, "id0", "barycenter_unbalanced"], [91, 3, 1, "id25", "barycenter_unbalanced_sinkhorn"], [91, 3, 1, "id29", "barycenter_unbalanced_stabilized"], [91, 3, 1, "id33", "lbfgsb_unbalanced"], [91, 3, 1, "id35", "mm_unbalanced"], [91, 3, 1, "id38", "mm_unbalanced2"], [91, 3, 1, "id40", "sinkhorn_knopp_unbalanced"], [91, 3, 1, "id44", "sinkhorn_stabilized_unbalanced"], [91, 3, 1, "id48", "sinkhorn_unbalanced"], [91, 3, 1, "id54", "sinkhorn_unbalanced2"]], "ot.utils": [[92, 1, 1, "id12", "BaseEstimator"], [92, 1, 1, "id15", "LazyTensor"], [92, 1, 1, "id16", "OTResult"], [92, 6, 1, "", "UndefinedParameter"], [92, 3, 1, "id45", "check_params"], [92, 3, 1, "id46", "check_random_state"], [92, 3, 1, "id47", "clean_zeros"], [92, 3, 1, "id48", "cost_normalization"], [92, 1, 1, "id49", "deprecated"], [92, 3, 1, "id50", "dist"], [92, 3, 1, "id51", "dist0"], [92, 3, 1, "id52", "dots"], [92, 3, 1, "id53", "euclidean_distances"], [92, 3, 1, "id54", "get_coordinate_circle"], [92, 3, 1, "id55", "get_lowrank_lazytensor"], [92, 3, 1, "id56", "get_parameter_pair"], [92, 3, 1, "id57", "is_all_finite"], [92, 3, 1, "id58", "kernel"], [92, 3, 1, "id59", "label_normalization"], [92, 3, 1, "id60", "laplacian"], [92, 3, 1, "id61", "list_to_array"], [92, 3, 1, "id62", "parmap"], [92, 3, 1, "id63", "proj_simplex"], [92, 3, 1, "id64", "projection_sparse_simplex"], [92, 3, 1, "id65", "reduce_lazytensor"], [92, 3, 1, "id66", "tic"], [92, 3, 1, "id67", "toc"], [92, 3, 1, "id68", "toq"], [92, 3, 1, "id69", "unif"]], "ot.utils.BaseEstimator": [[92, 2, 1, "id13", "get_params"], [92, 2, 1, "id14", "set_params"]], "ot.utils.OTResult": [[92, 5, 1, "id29", "a_to_b"], [92, 5, 1, "id30", "b_to_a"], [92, 5, 1, "id31", "citation"], [92, 5, 1, "id32", "lazy_plan"], [92, 5, 1, "id33", "marginal_a"], [92, 5, 1, "id34", "marginal_b"], [92, 5, 1, "id35", "marginals"], [92, 5, 1, "id36", "plan"], [92, 5, 1, "id37", "potential_a"], [92, 5, 1, "id38", "potential_b"], [92, 5, 1, "id39", "potentials"], [92, 5, 1, "id40", "sparse_plan"], [92, 5, 1, "id41", "status"], [92, 5, 1, "id42", "value"], [92, 5, 1, "id43", "value_linear"], [92, 5, 1, "id44", "value_quad"]], "ot.weak": [[93, 3, 1, "id0", "weak_optimal_transport"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "modul": [0, 95], "main": 0, "ot": [0, 1, 5, 18, 19, 20, 21, 22, 23, 24, 25, 38, 43, 45, 51, 53, 55, 56, 57, 58, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95], "function": [0, 33, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "refer": [0, 88, 94, 95], "dual": [1, 5, 49, 51], "solver": [1, 31, 58, 95], "entrop": [1, 5, 11, 29, 40, 58, 67, 95], "quadrat": [1, 95], "regular": [1, 11, 22, 29, 38, 51, 58, 66, 67, 95], "pytorch": [1, 2, 3, 5, 6, 7, 8], "data": [1, 4, 5, 6, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 34, 40, 42, 43, 45, 46, 47, 48, 52, 53, 54, 56, 57, 58, 60, 61, 63, 64, 66, 67], "gener": [1, 2, 4, 5, 6, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 40, 42, 43, 44, 45, 46, 48, 52, 53, 54, 56, 58, 60, 61, 63, 64, 66, 67, 95], "plot": [1, 4, 5, 6, 8, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 40, 42, 43, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 63, 64, 65, 66, 67, 86], "convert": [1, 5], "torch": [1, 5], "tensor": [1, 5], "estim": [1, 2, 5, 6, 23, 24, 25, 35, 46, 95], "variabl": [1, 5, 51], "plan": [1, 5, 33, 40, 51, 65], "optim": [2, 6, 18, 20, 21, 22, 26, 39, 43, 45, 46, 48, 51, 52, 54, 55, 63, 66, 67, 84, 94, 95], "gromov": [2, 29, 30, 31, 32, 33, 34, 35, 36, 38, 65, 81, 95], "wasserstein": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 51, 57, 60, 61, 64, 65, 95], "distanc": [2, 6, 20, 26, 30, 31, 33, 38, 44, 46, 56, 57, 60, 65, 95], "graph": [2, 28, 29, 31, 32, 35, 36], "gw": [2, 30, 33, 95], "w": 2, "r": 2, "t": 2, "weight": [2, 6], "templat": 2, "structur": [2, 30], "commun": 2, "cluster": [2, 29, 31, 35, 36], "uniform": [2, 55, 57], "compress": 2, "slice": [3, 4, 38, 60, 61, 88], "barycent": [3, 7, 10, 11, 12, 13, 14, 15, 16, 28, 34, 38, 44, 64, 95], "gradient": [3, 4], "flow": [3, 7], "anim": [3, 4, 8, 16, 66], "trajectori": [3, 4, 8], "along": [3, 4, 8], "iter": [3, 4, 8], "comput": [3, 9, 10, 12, 13, 14, 16, 17, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 42, 43, 44, 45, 49, 50, 51, 54, 56, 59, 62, 64, 65, 66, 67, 68, 95], "descent": [3, 4], "spheric": [4, 61], "embed": [4, 35], "sphere": 4, "sampl": [4, 5, 8, 18, 20, 21, 22, 23, 24, 26, 33, 46, 55, 65], "continu": [5, 49], "deep": 5, "densiti": 5, "target": [5, 18, 20, 21, 22, 26], "given": 5, "sourc": [5, 6, 18, 20, 21, 22, 26], "unmix": 6, "model": [6, 8, 29, 31, 35, 36], "wrt": 6, "converg": 6, "object": 6, "reweight": 6, "distribut": [6, 14, 15, 20, 25, 33, 44, 46, 48, 52, 53, 54, 60, 61, 63, 64, 65, 95], "1d": [7, 10, 11, 13, 52, 56, 63, 64], "2": [8, 18, 20, 21, 22, 26, 29, 31, 35, 36, 44, 55, 61, 96], "minibatch": 8, "gan": 8, "train": [8, 32], "visual": [8, 12, 13, 29, 30, 31, 34, 35, 36, 46, 51], "time": [9, 17, 27, 37, 50, 51, 59, 62, 68], "demo": [10, 13, 16, 64], "barycentr": [10, 64], "interpol": [10, 15, 64], "exact": [11, 43, 45, 67], "lp": [11, 82], "v": [11, 26, 43], "gaussian": [11, 13, 33, 65, 79], "stair": 11, "dirac": 11, "final": 11, "figur": 11, "convolut": [12, 95], "exampl": [12, 29, 33, 34, 36, 38, 49, 53, 65, 67, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95], "prepar": [12, 34], "debias": 13, "sinkhorn": [13, 15, 21, 49, 51, 52, 54, 56, 63, 95], "2d": [13, 14, 15, 33, 42, 54, 60, 65, 67], "imag": [13, 19, 23, 25], "free": [14, 15, 95], "support": [14, 15, 94, 95], "paramet": [15, 51], "inspect": 15, "empir": [15, 20, 54], "project": [16, 40, 42, 60, 61], "match": [16, 29, 31, 36], "rotat": 16, "domain": [18, 20, 21, 22, 24, 25, 38, 95], "adapt": [18, 19, 20, 21, 22, 23, 24, 25, 38, 95], "instanti": [18, 19, 20, 21, 22, 24], "differ": [18, 19, 20, 22, 24, 26, 55, 56, 57, 60, 61], "transport": [18, 19, 20, 21, 22, 23, 24, 26, 30, 39, 40, 43, 45, 46, 48, 49, 51, 52, 54, 55, 63, 66, 67, 94, 95], "algorithm": [18, 19, 20, 21, 22, 24, 49, 51], "fit": [18, 19, 20, 21, 22, 24], "them": [18, 19, 20, 21, 22, 24, 33, 65], "fig": [18, 20, 21, 22, 26], "1": [18, 20, 21, 22, 26, 35, 55, 96], "coupl": [18, 20, 21, 22, 26, 45], "color": [19, 25], "origin": [19, 25, 44], "scatter": 19, "new": [19, 70, 96], "matrix": [20, 26, 30, 48, 49, 51, 52, 53, 63], "pairwis": [20, 26], "method": [20, 26, 33, 44], "3": [20, 26, 29, 31, 35, 36, 96], "multi": 21, "shift": 21, "all": 21, "jcpot": 21, "run": 21, "oracl": 21, "known": 21, "proport": 21, "laplacian": 22, "linear": [23, 35], "map": [23, 24, 25, 51, 83, 95], "load": 23, "transform": [23, 25], "pixel": 25, "transfer": 25, "valu": 25, "otda": [26, 95], "unsupervis": 26, "semi": [26, 29, 36, 49, 66], "supervis": 26, "set": 26, "onto": 26, "us": [28, 32, 74, 75, 76, 77, 79, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 95], "fgw": [28, 30, 95], "relax": [29, 36, 66], "fuse": [29, 30, 31, 32, 35, 36, 38], "two": [29, 31, 33, 36, 65], "follow": [29, 31, 35, 36], "stochast": [29, 31, 33, 35, 36, 49, 90], "block": [29, 31, 35, 36], "diverg": [29, 36], "add": [29, 36], "node": [29, 35, 36], "featur": [29, 30, 35, 36, 96], "creat": 30, "matric": [30, 49, 55], "across": 30, "comparison": 31, "classif": 32, "tempat": 32, "base": 32, "pool": 32, "architectur": 32, "tfgw": 32, "layer": 32, "3d": [33, 65], "kernel": 33, "normal": 33, "displai": 33, "scalabl": 33, "ani": 33, "loss": [33, 48, 51, 52, 53, 56, 63], "smacof": 34, "md": 34, "dictionari": 35, "learn": [35, 46], "dataset": [35, 55, 76], "compos": 35, "from": 35, "atom": 35, "space": 35, "endow": 35, "attribut": [35, 69], "galleri": 38, "pot": [38, 47, 51, 70, 94, 95], "backend": [38, 72, 95], "other": [38, 95], "problem": [38, 49, 51], "unbalanc": [38, 63, 64, 66, 67, 91, 95], "partial": [38, 55, 65, 85, 95], "row": [39, 46], "column": [39, 46], "align": [39, 46], "co": [39, 46], "compon": 40, "analysi": [40, 42, 95], "ewca": [40, 77], "first": [40, 51, 96], "smooth": [41, 53, 89], "strongli": 41, "convex": 41, "nearest": 41, "brenier": 41, "potenti": 41, "discrimin": [42, 95], "fisher": 42, "weak": [43, 93], "an": [43, 45, 95], "solut": [43, 45], "d": 44, "dimension": 44, "via": 44, "mmot": 44, "minim": 44, "among": 44, "identifi": 44, "compar": [44, 49, 57], "both": 44, "more": 44, "than": 44, "mani": 44, "factor": [45, 78], "margin": 46, "coot": [46, 74], "respect": 46, "logo": 47, "toolbox": [47, 51, 94], "clear": 47, "background": 47, "dark": 47, "screen": 48, "screenkhorn": 48, "solv": [48, 51, 52, 53, 58, 63, 95], "discret": 49, "case": [49, 95], "result": [49, 67], "introduct": 51, "python": [51, 94], "instal": [51, 94], "import": 51, "get": 51, "help": 51, "bakeri": 51, "citi": 51, "cost": 51, "emd": [51, 52, 54, 56, 58, 95], "vari": 51, "spars": 53, "between": [54, 57, 95], "ground": 55, "metric": 55, "circl": [55, 57], "euclidean": 57, "von": 57, "mise": 57, "kappa": 57, "frobeniu": 58, "norm": 58, "seed": [60, 61], "number": [60, 61], "": 61, "mass": 63, "one": 65, "path": 66, "l2": [66, 67], "penal": 66, "fulli": 66, "regpath": [66, 87], "uot": [66, 67], "kl": 67, "code": [69, 94], "conduct": [69, 94], "our": 69, "pledg": 69, "standard": 69, "respons": 69, "scope": 69, "enforc": 69, "contribut": [70, 94], "how": [70, 95], "pull": 70, "request": 70, "checklist": 70, "file": 70, "bug": 70, "contributor": [70, 71], "tip": 70, "document": 70, "creator": 71, "maintain": 71, "acknowledg": [71, 94], "perform": 72, "class": [72, 75, 89, 92, 95], "bregman": [73, 95], "depend": [73, 94], "co_optimal_transport": 74, "co_optimal_transport2": 74, "da": 75, "basetransport": 75, "emdlaplacetransport": 75, "emdtransport": 75, "jcpottransport": 75, "lineargwtransport": 75, "lineartransport": 75, "mappingtransport": 75, "sinkhornl1l2transport": 75, "sinkhornlpl1transport": 75, "sinkhorntransport": 75, "make_1d_gauss": 76, "make_2d_samples_gauss": 76, "make_data_classif": 76, "dr": 77, "fda": 77, "wda": [77, 95], "empirical_bures_wasserstein_map": 79, "empirical_gaussian_gromov_wasserstein_map": 79, "gnn": 80, "free_support_barycent": 82, "generalized_free_support_barycent": 82, "nearest_brenier_potential_fit": 83, "nearest_brenier_potential_predict_bound": 83, "cg": 84, "gcg": 84, "entropic_partial_gromov_wasserstein": 85, "entropic_partial_wasserstein": 85, "partial_gromov_wasserstein": 85, "partial_wasserstein": 85, "plot1d_mat": 86, "plot2d_samples_mat": 86, "compute_transport_plan": 87, "regularization_path": 87, "smooth_ot_du": 89, "loss_dual_entrop": 90, "loss_dual_quadrat": 90, "plan_dual_entrop": 90, "plan_dual_quadrat": 90, "solve_dual_entrop": 90, "solve_semi_dual_entrop": 90, "mm_unbalanc": 91, "util": 92, "dist0": 92, "proj_simplex": 92, "baseestim": 92, "except": 92, "content": 94, "cite": 94, "pip": 94, "anaconda": 94, "conda": 94, "forg": 94, "post": 94, "check": 94, "short": 94, "notebook": 94, "indic": 94, "tabl": 94, "quick": 95, "start": 95, "guid": 95, "why": 95, "when": 95, "emd2": 95, "special": 95, "sinkhorn2": 95, "group": 95, "lasso": 95, "fix": 95, "convolutional_barycenter2d": 95, "mong": 95, "extens": 95, "g": 95, "applic": 95, "multipl": 95, "cpu": 95, "gpu": 95, "work": 95, "acceler": 95, "list": 95, "compat": 95, "faq": 95, "releas": 96, "0": 96, "9": 96, "2dev": 96, "close": 96, "issu": 96, "8": 96, "7": 96, "6": 96, "5": 96, "deprec": 96, "4": 96, "v0": 96, "11": 96, "10": 96, "pre": 96}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API and modules": [[0, "api-and-modules"]], "Main ot functions": [[0, "module-ot"]], "References:": [[0, "references"], [88, "references"], [88, "id12"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[1, "dual-ot-solvers-for-entropic-and-quadratic-regularized-ot-with-pytorch"]], "Data generation": [[1, "data-generation"], [4, "data-generation"], [5, "data-generation"], [8, "data-generation"]], "Plot data": [[1, "plot-data"], [4, "plot-data"], [5, "plot-data"], [6, "plot-data"], [8, "plot-data"], [23, "plot-data"], [24, "plot-data"], [28, "plot-data"], [30, "plot-data"], [32, "plot-data"], [40, "plot-data"], [42, "plot-data"], [54, "plot-data"], [56, "plot-data"], [57, "plot-data"], [60, "plot-data"], [61, "plot-data"], [64, "plot-data"], [66, "plot-data"]], "Convert data to torch tensors": [[1, "convert-data-to-torch-tensors"], [5, "convert-data-to-torch-tensors"]], "Estimating dual variables for entropic OT": [[1, "estimating-dual-variables-for-entropic-ot"]], "Plot the estimated entropic OT plan": [[1, "plot-the-estimated-entropic-ot-plan"]], "Estimating dual variables for quadratic OT": [[1, "estimating-dual-variables-for-quadratic-ot"]], "Plot the estimated quadratic OT plan": [[1, "plot-the-estimated-quadratic-ot-plan"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[2, "optimizing-the-gromov-wasserstein-distance-with-pytorch"]], "Graph generation": [[2, "graph-generation"]], "Optimizing GW w.r.t. the weights on a template structure": [[2, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Community clustering with uniform and estimated weights": [[2, "community-clustering-with-uniform-and-estimated-weights"]], "Graph compression with GW": [[2, "graph-compression-with-gw"]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[3, "sliced-wasserstein-barycenter-and-gradient-flow-with-pytorch"]], "Sliced Wasserstein gradient flow with Pytorch": [[3, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Animate trajectories of the gradient flow along iteration": [[3, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Compute the Sliced Wasserstein Barycenter": [[3, "compute-the-sliced-wasserstein-barycenter"]], "Animate trajectories of the barycenter along gradient descent": [[3, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[4, "spherical-sliced-wasserstein-embedding-on-sphere"]], "Gradient descent": [[4, "gradient-descent"]], "Plot trajectories of generated samples along iterations": [[4, "plot-trajectories-of-generated-samples-along-iterations"], [8, "plot-trajectories-of-generated-samples-along-iterations"]], "Animate trajectories of generated samples along iteration": [[4, "animate-trajectories-of-generated-samples-along-iteration"], [8, "animate-trajectories-of-generated-samples-along-iteration"]], "Continuous OT plan estimation with Pytorch": [[5, "continuous-ot-plan-estimation-with-pytorch"]], "Estimating deep dual variables for entropic OT": [[5, "estimating-deep-dual-variables-for-entropic-ot"]], "Plot the density on target for a given source sample": [[5, "plot-the-density-on-target-for-a-given-source-sample"]], "Wasserstein unmixing with PyTorch": [[6, "wasserstein-unmixing-with-pytorch"]], "Generate data": [[6, "generate-data"], [10, "generate-data"], [14, "generate-data"], [18, "generate-data"], [19, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [28, "generate-data"], [30, "generate-data"], [32, "generate-data"], [40, "generate-data"], [42, "generate-data"], [46, "generate-data"], [48, "generate-data"], [52, "generate-data"], [53, "generate-data"], [54, "generate-data"], [56, "generate-data"], [58, "generate-data"], [60, "generate-data"], [61, "generate-data"], [63, "generate-data"], [64, "generate-data"], [66, "generate-data"], [67, "generate-data"]], "Optimization of the model wrt the Wasserstein distance": [[6, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Estimated weights and convergence of the objective": [[6, "estimated-weights-and-convergence-of-the-objective"]], "Plotting the reweighted source distribution": [[6, "plotting-the-reweighted-source-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[7, "wasserstein-1d-flow-and-barycenter-with-pytorch"]], "Wasserstein barycenter": [[7, "wasserstein-barycenter"]], "Wasserstein 2 Minibatch GAN with PyTorch": [[8, "wasserstein-2-minibatch-gan-with-pytorch"]], "Generator Model": [[8, "generator-model"]], "Training the model": [[8, "training-the-model"]], "Generate and visualize data": [[8, "generate-and-visualize-data"]], "Computation times": [[9, "computation-times"], [17, "computation-times"], [27, "computation-times"], [37, "computation-times"], [50, "computation-times"], [59, "computation-times"], [62, "computation-times"], [68, "computation-times"]], "1D Wasserstein barycenter demo": [[10, "d-wasserstein-barycenter-demo"]], "Barycenter computation": [[10, "barycenter-computation"], [28, "barycenter-computation"], [34, "barycenter-computation"], [64, "barycenter-computation"]], "Barycentric interpolation": [[10, "barycentric-interpolation"], [64, "barycentric-interpolation"]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[11, "d-wasserstein-barycenter-exact-lp-vs-entropic-regularization"]], "Gaussian Data": [[11, "gaussian-data"]], "Stair Data": [[11, "stair-data"]], "Dirac Data": [[11, "dirac-data"]], "Final figure": [[11, "final-figure"]], "Convolutional Wasserstein Barycenter example": [[12, "convolutional-wasserstein-barycenter-example"]], "Data preparation": [[12, "data-preparation"], [34, "data-preparation"]], "Barycenter computation and visualization": [[12, "barycenter-computation-and-visualization"], [13, "barycenter-computation-and-visualization"]], "Debiased Sinkhorn barycenter demo": [[13, "debiased-sinkhorn-barycenter-demo"]], "Debiased barycenter of 1D Gaussians": [[13, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[13, "debiased-barycenter-of-2d-images"]], "2D free support Wasserstein barycenters of distributions": [[14, "d-free-support-wasserstein-barycenters-of-distributions"]], "Compute free support Wasserstein barycenter": [[14, "compute-free-support-wasserstein-barycenter"]], "Plot the Wasserstein barycenter": [[14, "plot-the-wasserstein-barycenter"], [14, "id1"]], "2D free support Sinkhorn barycenters of distributions": [[15, "d-free-support-sinkhorn-barycenters-of-distributions"]], "General Parameters": [[15, "general-parameters"]], "Generate Data": [[15, "generate-data"]], "Inspect generated distributions": [[15, "inspect-generated-distributions"]], "Interpolating Empirical Distributions": [[15, "interpolating-empirical-distributions"]], "Generalized Wasserstein Barycenter Demo": [[16, "generalized-wasserstein-barycenter-demo"]], "Generate and plot data": [[16, "generate-and-plot-data"]], "Barycenter computation and plot": [[16, "barycenter-computation-and-plot"]], "Plotting projection matches": [[16, "plotting-projection-matches"]], "Rotation animation": [[16, "rotation-animation"]], "OT for domain adaptation": [[18, "ot-for-domain-adaptation"]], "Instantiate the different transport algorithms and fit them": [[18, "instantiate-the-different-transport-algorithms-and-fit-them"], [19, "instantiate-the-different-transport-algorithms-and-fit-them"], [20, "instantiate-the-different-transport-algorithms-and-fit-them"], [22, "instantiate-the-different-transport-algorithms-and-fit-them"], [24, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Fig 1 : plots source and target samples": [[18, "fig-1-plots-source-and-target-samples"], [21, "fig-1-plots-source-and-target-samples"], [22, "fig-1-plots-source-and-target-samples"]], "Fig 2 : plot optimal couplings and transported samples": [[18, "fig-2-plot-optimal-couplings-and-transported-samples"], [21, "fig-2-plot-optimal-couplings-and-transported-samples"], [22, "fig-2-plot-optimal-couplings-and-transported-samples"]], "OT for image color adaptation": [[19, "ot-for-image-color-adaptation"]], "Plot original image": [[19, "plot-original-image"]], "Scatter plot of colors": [[19, "scatter-plot-of-colors"]], "Plot new images": [[19, "plot-new-images"]], "OT for domain adaptation on empirical distributions": [[20, "ot-for-domain-adaptation-on-empirical-distributions"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[20, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [26, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plots optimal couplings for the different methods": [[20, "fig-2-plots-optimal-couplings-for-the-different-methods"], [26, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[20, "fig-3-plot-transported-samples"], [26, "fig-3-plot-transported-samples"]], "OT for multi-source target shift": [[21, "ot-for-multi-source-target-shift"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[21, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate JCPOT adaptation algorithm and fit it": [[21, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Run oracle transport algorithm with known proportions": [[21, "run-oracle-transport-algorithm-with-known-proportions"]], "OT with Laplacian regularization for domain adaptation": [[22, "ot-with-laplacian-regularization-for-domain-adaptation"]], "Linear OT mapping estimation": [[23, "linear-ot-mapping-estimation"]], "Estimate linear mapping and transport": [[23, "estimate-linear-mapping-and-transport"]], "Plot transported samples": [[23, "plot-transported-samples"], [24, "plot-transported-samples"]], "Load image data": [[23, "load-image-data"]], "Estimate mapping and adapt": [[23, "estimate-mapping-and-adapt"]], "Plot transformed images": [[23, "plot-transformed-images"], [25, "plot-transformed-images"]], "OT mapping estimation for domain adaptation": [[24, "ot-mapping-estimation-for-domain-adaptation"]], "OT for image color adaptation with mapping estimation": [[25, "ot-for-image-color-adaptation-with-mapping-estimation"]], "Domain adaptation for pixel distribution transfer": [[25, "domain-adaptation-for-pixel-distribution-transfer"]], "Plot original images": [[25, "plot-original-images"]], "Plot pixel values distribution": [[25, "plot-pixel-values-distribution"]], "OTDA unsupervised vs semi-supervised setting": [[26, "otda-unsupervised-vs-semi-supervised-setting"]], "Transport source samples onto target samples": [[26, "transport-source-samples-onto-target-samples"]], "Plot graphs barycenter using FGW": [[28, "plot-graphs-barycenter-using-fgw"]], "Plot Barycenter": [[28, "plot-barycenter"]], "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example": [[29, "entropic-regularized-semi-relaxed-fused-gromov-wasserstein-example"]], "Generate two graphs following Stochastic Block models of 2 and 3 clusters.": [[29, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [31, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [36, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"]], "Compute their entropic-regularized semi-relaxed Gromov-Wasserstein divergences": [[29, "compute-their-entropic-regularized-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the entropic-regularized semi-relaxed Gromov-Wasserstein matchings": [[29, "visualization-of-the-entropic-regularized-semi-relaxed-gromov-wasserstein-matchings"]], "Add node features": [[29, "add-node-features"], [36, "add-node-features"]], "Compute their semi-relaxed Fused Gromov-Wasserstein divergences": [[29, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"], [36, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"]], "Visualization of the entropic semi-relaxed Fused Gromov-Wasserstein matchings": [[29, "visualization-of-the-entropic-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Plot Fused-Gromov-Wasserstein": [[30, "plot-fused-gromov-wasserstein"]], "Create structure matrices and across-feature distance matrix": [[30, "create-structure-matrices-and-across-feature-distance-matrix"]], "Plot matrices": [[30, "plot-matrices"]], "Compute FGW/GW": [[30, "compute-fgw-gw"]], "Visualize transport matrices": [[30, "visualize-transport-matrices"]], "Comparison of Fused Gromov-Wasserstein solvers": [[31, "comparison-of-fused-gromov-wasserstein-solvers"]], "Compute their Fused Gromov-Wasserstein distances": [[31, "compute-their-fused-gromov-wasserstein-distances"]], "Visualization of the Fused Gromov-Wasserstein matchings": [[31, "visualization-of-the-fused-gromov-wasserstein-matchings"]], "Graph classification with Tempate Based Fused Gromov Wasserstein": [[32, "graph-classification-with-tempate-based-fused-gromov-wasserstein"]], "Pooling architecture using the TFGW layer": [[32, "pooling-architecture-using-the-tfgw-layer"]], "Graph classification training": [[32, "graph-classification-training"]], "Gromov-Wasserstein example": [[33, "gromov-wasserstein-example"]], "Sample two Gaussian distributions (2D and 3D)": [[33, "sample-two-gaussian-distributions-2d-and-3d"]], "Plotting the distributions": [[33, "plotting-the-distributions"]], "Compute distance kernels, normalize them and then display": [[33, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute Gromov-Wasserstein plans and distance": [[33, "compute-gromov-wasserstein-plans-and-distance"]], "Compute GW with scalable stochastic methods with any loss function": [[33, "compute-gw-with-scalable-stochastic-methods-with-any-loss-function"]], "Gromov-Wasserstein Barycenter example": [[34, "gromov-wasserstein-barycenter-example"]], "Smacof MDS": [[34, "smacof-mds"]], "Visualization": [[34, "visualization"]], "(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[35, "fused-gromov-wasserstein-linear-dictionary-learning"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[35, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Estimate the Gromov-Wasserstein dictionary from the dataset": [[35, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Visualization of the estimated dictionary atoms": [[35, "visualization-of-the-estimated-dictionary-atoms"], [35, "id1"]], "Visualization of the embedding space": [[35, "visualization-of-the-embedding-space"], [35, "id2"]], "Endow the dataset with node features": [[35, "endow-the-dataset-with-node-features"]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[35, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Semi-relaxed (Fused) Gromov-Wasserstein example": [[36, "semi-relaxed-fused-gromov-wasserstein-example"]], "Compute their semi-relaxed Gromov-Wasserstein divergences": [[36, "compute-their-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the semi-relaxed Gromov-Wasserstein matchings": [[36, "visualization-of-the-semi-relaxed-gromov-wasserstein-matchings"]], "Visualization of the semi-relaxed Fused Gromov-Wasserstein matchings": [[36, "visualization-of-the-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Examples gallery": [[38, "examples-gallery"]], "OT and regularized OT": [[38, "ot-and-regularized-ot"]], "POT backend examples": [[38, "pot-backend-examples"]], "Wasserstein barycenters": [[38, "wasserstein-barycenters"]], "Domain adaptation examples": [[38, "domain-adaptation-examples"]], "Gromov and Fused-Gromov-Wasserstein": [[38, "gromov-and-fused-gromov-wasserstein"]], "Other OT problems": [[38, "other-ot-problems"]], "Sliced Wasserstein Distance": [[38, "sliced-wasserstein-distance"]], "Unbalanced and Partial OT": [[38, "unbalanced-and-partial-ot"]], "Row and column alignments with CO-Optimal Transport": [[39, "row-and-column-alignments-with-co-optimal-transport"]], "Entropic Wasserstein Component Analysis": [[40, "entropic-wasserstein-component-analysis"]], "Compute EWCA": [[40, "compute-ewca"]], "Plot data, first component, and projected data": [[40, "plot-data-first-component-and-projected-data"]], "Plot transport plan": [[40, "plot-transport-plan"]], "Smooth and Strongly Convex Nearest Brenier Potentials": [[41, "smooth-and-strongly-convex-nearest-brenier-potentials"]], "Wasserstein Discriminant Analysis": [[42, "wasserstein-discriminant-analysis"], [95, "wasserstein-discriminant-analysis"]], "Compute Fisher Discriminant Analysis": [[42, "compute-fisher-discriminant-analysis"]], "Compute Wasserstein Discriminant Analysis": [[42, "compute-wasserstein-discriminant-analysis"]], "Plot 2D projections": [[42, "plot-2d-projections"]], "Weak Optimal Transport VS exact Optimal Transport": [[43, "weak-optimal-transport-vs-exact-optimal-transport"]], "Generate data an plot it": [[43, "generate-data-an-plot-it"], [45, "generate-data-an-plot-it"]], "Compute Weak OT and exact OT solutions": [[43, "compute-weak-ot-and-exact-ot-solutions"]], "Plot weak OT and exact OT solutions": [[43, "plot-weak-ot-and-exact-ot-solutions"]], "Computing d-dimensional Barycenters via d-MMOT": [[44, "computing-d-dimensional-barycenters-via-d-mmot"]], "Generating 2 distributions": [[44, "generating-2-distributions"]], "Minimize the distances among distributions, identify the Barycenter": [[44, "minimize-the-distances-among-distributions-identify-the-barycenter"]], "Compare Barycenters in both methods": [[44, "compare-barycenters-in-both-methods"], [44, "id1"]], "More than 2 distributions": [[44, "more-than-2-distributions"]], "Minimizing Distances Among Many Distributions": [[44, "minimizing-distances-among-many-distributions"]], "Compare with original distributions": [[44, "compare-with-original-distributions"]], "Optimal transport with factored couplings": [[45, "optimal-transport-with-factored-couplings"]], "Compute Factored OT and exact OT solutions": [[45, "compute-factored-ot-and-exact-ot-solutions"]], "Plot factored OT and exact OT solutions": [[45, "plot-factored-ot-and-exact-ot-solutions"]], "Learning sample marginal distribution with CO-Optimal Transport": [[46, "learning-sample-marginal-distribution-with-co-optimal-transport"]], "Optimize the COOT distance with respect to the sample marginal distribution": [[46, "optimize-the-coot-distance-with-respect-to-the-sample-marginal-distribution"]], "Visualizing the row and column alignments with the estimated sample marginal distribution": [[46, "visualizing-the-row-and-column-alignments-with-the-estimated-sample-marginal-distribution"]], "Logo of the POT toolbox": [[47, "logo-of-the-pot-toolbox"]], "Data for logo": [[47, "data-for-logo"]], "Plot the logo (clear background)": [[47, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[47, "plot-the-logo-dark-background"]], "Screened optimal transport (Screenkhorn)": [[48, "screened-optimal-transport-screenkhorn"]], "Plot distributions and loss matrix": [[48, "plot-distributions-and-loss-matrix"], [52, "plot-distributions-and-loss-matrix"], [53, "plot-distributions-and-loss-matrix"], [63, "plot-distributions-and-loss-matrix"]], "Solve Screenkhorn": [[48, "solve-screenkhorn"]], "Stochastic examples": [[49, "stochastic-examples"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[49, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Discrete case": [[49, "discrete-case"]], "Semi-Continuous Case": [[49, "semi-continuous-case"]], "Plot Transportation Matrices": [[49, "plot-transportation-matrices"], [49, "id2"]], "Compute the Transportation Matrix for the Dual Problem": [[49, "compute-the-transportation-matrix-for-the-dual-problem"]], "Semi-continuous case": [[49, "id1"]], "Compare the results with the Sinkhorn algorithm": [[49, "compare-the-results-with-the-sinkhorn-algorithm"]], "Introduction to Optimal Transport with Python": [[51, "introduction-to-optimal-transport-with-python"]], "POT Python Optimal Transport Toolbox": [[51, "pot-python-optimal-transport-toolbox"]], "POT installation": [[51, "pot-installation"]], "Import the toolbox": [[51, "import-the-toolbox"]], "Getting help": [[51, "getting-help"]], "First OT Problem": [[51, "first-ot-problem"]], "Plotting bakeries in the city": [[51, "plotting-bakeries-in-the-city"]], "Cost matrix": [[51, "cost-matrix"]], "Solving the OT problem with ot.emd": [[51, "solving-the-ot-problem-with-ot-emd"]], "Transportation plan visualization": [[51, "transportation-plan-visualization"]], "OT loss and dual variables": [[51, "ot-loss-and-dual-variables"]], "Regularized OT with Sinkhorn": [[51, "regularized-ot-with-sinkhorn"]], "Algorithm": [[51, "algorithm"]], "Plot the matrix and the map": [[51, "plot-the-matrix-and-the-map"]], "Varying the regularization parameter in Sinkhorn": [[51, "varying-the-regularization-parameter-in-sinkhorn"]], "Wasserstein loss and computational time": [[51, "wasserstein-loss-and-computational-time"]], "Optimal Transport for 1D distributions": [[52, "optimal-transport-for-1d-distributions"]], "Solve EMD": [[52, "solve-emd"], [58, "solve-emd"]], "Solve Sinkhorn": [[52, "solve-sinkhorn"]], "Smooth and sparse OT example": [[53, "smooth-and-sparse-ot-example"]], "Solve Smooth OT": [[53, "solve-smooth-ot"]], "Optimal Transport between 2D empirical distributions": [[54, "optimal-transport-between-2d-empirical-distributions"]], "Compute EMD": [[54, "compute-emd"]], "Compute Sinkhorn": [[54, "compute-sinkhorn"]], "Empirical Sinkhorn": [[54, "empirical-sinkhorn"]], "Optimal Transport with different ground metrics": [[55, "optimal-transport-with-different-ground-metrics"]], "Dataset 1 : uniform sampling": [[55, "dataset-1-uniform-sampling"]], "Dataset 1 : Plot OT Matrices": [[55, "dataset-1-plot-ot-matrices"]], "Dataset 2 : Partial circle": [[55, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[55, "dataset-2-plot-ot-matrices"]], "OT distances in 1D": [[56, "ot-distances-in-1d"]], "Compute EMD for the different losses": [[56, "compute-emd-for-the-different-losses"]], "Compute Sinkhorn for the different losses": [[56, "compute-sinkhorn-for-the-different-losses"]], "OT distance on the Circle": [[57, "ot-distance-on-the-circle"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[57, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Wasserstein distance between von Mises and uniform for different kappa": [[57, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Regularized OT with generic solver": [[58, "regularized-ot-with-generic-solver"]], "Solve EMD with Frobenius norm regularization": [[58, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[58, "solve-emd-with-entropic-regularization"]], "Solve EMD with Frobenius norm + entropic regularization": [[58, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Sliced Wasserstein Distance on 2D distributions": [[60, "sliced-wasserstein-distance-on-2d-distributions"]], "Sliced Wasserstein distance for different seeds and number of projections": [[60, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Plot Sliced Wasserstein Distance": [[60, "plot-sliced-wasserstein-distance"]], "Spherical Sliced Wasserstein on distributions in S^2": [[61, "spherical-sliced-wasserstein-on-distributions-in-s-2"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[61, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Plot Spherical Sliced Wasserstein": [[61, "plot-spherical-sliced-wasserstein"]], "1D Unbalanced optimal transport": [[63, "d-unbalanced-optimal-transport"]], "Solve Unbalanced Sinkhorn": [[63, "solve-unbalanced-sinkhorn"]], "plot the transported mass": [[63, "plot-the-transported-mass"]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[64, "d-wasserstein-barycenter-demo-for-unbalanced-distributions"]], "Partial Wasserstein and Gromov-Wasserstein example": [[65, "partial-wasserstein-and-gromov-wasserstein-example"]], "Sample two 2D Gaussian distributions and plot them": [[65, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Compute partial Wasserstein plans and distance": [[65, "compute-partial-wasserstein-plans-and-distance"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[65, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Compute partial Gromov-Wasserstein plans and distance": [[65, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Regularization path of l2-penalized unbalanced optimal transport": [[66, "regularization-path-of-l2-penalized-unbalanced-optimal-transport"]], "Compute semi-relaxed and fully relaxed regularization paths": [[66, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Plot the regularization path": [[66, "plot-the-regularization-path"]], "Animation of the regpath for UOT l2": [[66, "animation-of-the-regpath-for-uot-l2"]], "Plot the semi-relaxed regularization path": [[66, "plot-the-semi-relaxed-regularization-path"]], "Animation of the regpath for semi-relaxed UOT l2": [[66, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "2D examples of exact and entropic unbalanced optimal transport": [[67, "d-examples-of-exact-and-entropic-unbalanced-optimal-transport"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[67, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Plot the results": [[67, "plot-the-results"]], "Code of conduct": [[69, "code-of-conduct"]], "Our Pledge": [[69, "our-pledge"]], "Our Standards": [[69, "our-standards"]], "Our Responsibilities": [[69, "our-responsibilities"]], "Scope": [[69, "scope"]], "Enforcement": [[69, "enforcement"]], "Attribution": [[69, "attribution"]], "Contributing to POT": [[70, "contributing-to-pot"]], "How to contribute": [[70, "how-to-contribute"]], "Pull Request Checklist": [[70, "pull-request-checklist"]], "Filing bugs": [[70, "filing-bugs"]], "New contributor tips": [[70, "new-contributor-tips"]], "Documentation": [[70, "documentation"]], "Contributors": [[71, "contributors"], [71, "contributors"]], "Creators and Maintainers": [[71, "creators-and-maintainers"]], "Acknowledgments": [[71, "acknowledgments"]], "ot.backend": [[72, "module-ot.backend"]], "Performance": [[72, "performance"]], "Functions": [[72, "functions"], [74, "functions"], [75, "functions"], [76, "functions"], [77, "functions"], [78, "functions"], [79, "functions"], [82, "functions"], [83, "functions"], [84, "functions"], [85, "functions"], [86, "functions"], [87, "functions"], [88, "functions"], [89, "functions"], [90, "functions"], [91, "functions"], [92, "functions"], [93, "functions"]], "Classes": [[72, "classes"], [75, "classes"], [89, "classes"], [92, "classes"]], "ot.bregman": [[73, "module-ot.bregman"]], "Dependency": [[73, null]], "ot.coot": [[74, "module-ot.coot"]], "Examples using ot.coot.co_optimal_transport": [[74, "examples-using-ot-coot-co-optimal-transport"]], "Examples using ot.coot.co_optimal_transport2": [[74, "examples-using-ot-coot-co-optimal-transport2"]], "ot.da": [[75, "module-ot.da"]], "Examples using ot.da.BaseTransport": [[75, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[75, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[75, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[75, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearGWTransport": [[75, "examples-using-ot-da-lineargwtransport"]], "Examples using ot.da.LinearTransport": [[75, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[75, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[75, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[75, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[75, "examples-using-ot-da-sinkhorntransport"]], "ot.datasets": [[76, "module-ot.datasets"]], "Examples using ot.datasets.make_1D_gauss": [[76, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[76, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[76, "examples-using-ot-datasets-make-data-classif"]], "ot.dr": [[77, "module-ot.dr"]], "Examples using ot.dr.ewca": [[77, "examples-using-ot-dr-ewca"]], "Examples using ot.dr.fda": [[77, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[77, "examples-using-ot-dr-wda"]], "ot.factored": [[78, "module-ot.factored"]], "ot.gaussian": [[79, "module-ot.gaussian"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[79, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "Examples using ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping": [[79, "examples-using-ot-gaussian-empirical-gaussian-gromov-wasserstein-mapping"]], "ot.gnn": [[80, "module-ot.gnn"]], "ot.gromov": [[81, "module-ot.gromov"]], "ot.lp": [[82, "module-ot.lp"]], "Examples using ot.lp.free_support_barycenter": [[82, "examples-using-ot-lp-free-support-barycenter"]], "Examples using ot.lp.generalized_free_support_barycenter": [[82, "examples-using-ot-lp-generalized-free-support-barycenter"]], "ot.mapping": [[83, "module-ot.mapping"]], "Examples using ot.mapping.nearest_brenier_potential_fit": [[83, "examples-using-ot-mapping-nearest-brenier-potential-fit"]], "Examples using ot.mapping.nearest_brenier_potential_predict_bounds": [[83, "examples-using-ot-mapping-nearest-brenier-potential-predict-bounds"]], "ot.optim": [[84, "module-ot.optim"]], "Examples using ot.optim.cg": [[84, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[84, "examples-using-ot-optim-gcg"]], "ot.partial": [[85, "module-ot.partial"]], "Examples using ot.partial.entropic_partial_gromov_wasserstein": [[85, "examples-using-ot-partial-entropic-partial-gromov-wasserstein"]], "Examples using ot.partial.entropic_partial_wasserstein": [[85, "examples-using-ot-partial-entropic-partial-wasserstein"]], "Examples using ot.partial.partial_gromov_wasserstein": [[85, "examples-using-ot-partial-partial-gromov-wasserstein"]], "Examples using ot.partial.partial_wasserstein": [[85, "examples-using-ot-partial-partial-wasserstein"]], "ot.plot": [[86, "module-ot.plot"]], "Examples using ot.plot.plot1D_mat": [[86, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[86, "examples-using-ot-plot-plot2d-samples-mat"]], "ot.regpath": [[87, "module-ot.regpath"]], "Examples using ot.regpath.compute_transport_plan": [[87, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[87, "examples-using-ot-regpath-regularization-path"]], "ot.sliced": [[88, "module-ot.sliced"]], "ot.smooth": [[89, "module-ot.smooth"]], "Examples using ot.smooth.smooth_ot_dual": [[89, "examples-using-ot-smooth-smooth-ot-dual"]], "ot.stochastic": [[90, "module-ot.stochastic"]], "Examples using ot.stochastic.loss_dual_entropic": [[90, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[90, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[90, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[90, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[90, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[90, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "ot.unbalanced": [[91, "module-ot.unbalanced"]], "Examples using ot.unbalanced.mm_unbalanced": [[91, "examples-using-ot-unbalanced-mm-unbalanced"]], "ot.utils": [[92, "module-ot.utils"]], "Examples using ot.utils.dist0": [[92, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_simplex": [[92, "examples-using-ot-utils-proj-simplex"]], "Examples using ot.utils.BaseEstimator": [[92, "examples-using-ot-utils-baseestimator"]], "Exceptions": [[92, "exceptions"]], "ot.weak": [[93, "module-ot.weak"]], "POT: Python Optimal Transport": [[94, "pot-python-optimal-transport"], [94, "pot-python-optimal-transport"]], "Contents": [[94, "contents"]], "Using and citing the toolbox": [[94, "using-and-citing-the-toolbox"]], "Installation": [[94, "installation"]], "Pip installation": [[94, "pip-installation"]], "Anaconda installation with conda-forge": [[94, "anaconda-installation-with-conda-forge"]], "Post installation check": [[94, "post-installation-check"]], "Dependencies": [[94, "dependencies"]], "Examples": [[94, "examples"]], "Short examples": [[94, "short-examples"]], "Examples and Notebooks": [[94, "examples-and-notebooks"]], "Acknowledgements": [[94, "acknowledgements"]], "Contributions and code of conduct": [[94, "contributions-and-code-of-conduct"]], "Support": [[94, "support"]], "References": [[94, "references"], [95, "references"]], "Indices and tables": [[94, "indices-and-tables"]], "Quick start guide": [[95, "quick-start-guide"]], "Why Optimal Transport ?": [[95, "why-optimal-transport"]], "When to use OT": [[95, "when-to-use-ot"]], "Wasserstein distance between distributions": [[95, "wasserstein-distance-between-distributions"]], "OT for mapping estimation": [[95, "ot-for-mapping-estimation"]], "When to use POT": [[95, "when-to-use-pot"]], "When not to use POT": [[95, "when-not-to-use-pot"]], "Optimal transport and Wasserstein distance": [[95, "optimal-transport-and-wasserstein-distance"]], "Solving optimal transport": [[95, "solving-optimal-transport"]], "Examples of use for ot.emd": [[95, "examples-of-use-for-ot-emd"]], "Computing Wasserstein distance": [[95, "computing-wasserstein-distance"]], "Examples of use for ot.emd2": [[95, "examples-of-use-for-ot-emd2"]], "Special cases": [[95, "special-cases"]], "Regularized Optimal Transport": [[95, "regularized-optimal-transport"]], "Entropic regularized OT": [[95, "entropic-regularized-ot"]], "Examples of use for ot.sinkhorn": [[95, "examples-of-use-for-ot-sinkhorn"]], "Examples of use for ot.sinkhorn2": [[95, "examples-of-use-for-ot-sinkhorn2"]], "Other regularizations": [[95, "other-regularizations"]], "Quadratic regularization": [[95, "quadratic-regularization"]], "Examples of use of quadratic regularization": [[95, "examples-of-use-of-quadratic-regularization"]], "Group Lasso regularization": [[95, "group-lasso-regularization"]], "Examples of group Lasso regularization": [[95, "examples-of-group-lasso-regularization"]], "Generic solvers": [[95, "generic-solvers"]], "Examples of the generic solvers": [[95, "examples-of-the-generic-solvers"]], "Wasserstein Barycenters": [[95, "wasserstein-barycenters"]], "Barycenters with fixed support": [[95, "barycenters-with-fixed-support"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[95, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[95, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Barycenters with free support": [[95, "barycenters-with-free-support"]], "Examples of free support barycenter estimation": [[95, "examples-of-free-support-barycenter-estimation"]], "Monge mapping and Domain adaptation": [[95, "monge-mapping-and-domain-adaptation"]], "Monge Mapping estimation": [[95, "monge-mapping-estimation"]], "Domain adaptation classes": [[95, "domain-adaptation-classes"]], "Examples of the use of OTDA classes": [[95, "examples-of-the-use-of-otda-classes"]], "Unbalanced and partial OT": [[95, "unbalanced-and-partial-ot"]], "Unbalanced optimal transport": [[95, "unbalanced-optimal-transport"]], "Examples of Unbalanced OT": [[95, "examples-of-unbalanced-ot"]], "Unbalanced Barycenters": [[95, "unbalanced-barycenters"]], "Examples of Unbalanced OT barycenters": [[95, "examples-of-unbalanced-ot-barycenters"]], "Partial optimal transport": [[95, "partial-optimal-transport"]], "Examples of Partial OT": [[95, "examples-of-partial-ot"]], "Gromov Wasserstein and extensions": [[95, "gromov-wasserstein-and-extensions"]], "Gromov Wasserstein(GW)": [[95, "gromov-wasserstein-gw"]], "Examples of computation of GW, regularized G and FGW": [[95, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Gromov Wasserstein barycenters": [[95, "gromov-wasserstein-barycenters"]], "Examples of GW, regularized G and FGW barycenters": [[95, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Other applications": [[95, "other-applications"]], "Examples of the use of WDA": [[95, "examples-of-the-use-of-wda"]], "Solving OT with Multiple backends on CPU/GPU": [[95, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "How it works": [[95, "how-it-works"]], "GPU acceleration": [[95, "gpu-acceleration"]], "List of compatible Backends": [[95, "list-of-compatible-backends"]], "List of compatible modules": [[95, "list-of-compatible-modules"]], "FAQ": [[95, "faq"]], "Releases": [[96, "releases"]], "0.9.2dev": [[96, "dev"]], "New features": [[96, "new-features"], [96, "id2"], [96, "id5"], [96, "id10"], [96, "id13"]], "Closed issues": [[96, "closed-issues"], [96, "id3"], [96, "id6"], [96, "id8"], [96, "id11"], [96, "id14"], [96, "id16"], [96, "id19"], [96, "id22"], [96, "id25"]], "0.9.1": [[96, "id1"]], "0.8.2": [[96, "id4"]], "0.8.1.0": [[96, "id7"]], "0.8.1": [[96, "id9"]], "0.8.0": [[96, "id12"]], "0.7.0": [[96, "id15"]], "Features": [[96, "features"], [96, "id18"], [96, "id21"], [96, "id24"]], "0.6.0": [[96, "id17"]], "0.5.0": [[96, "id20"]], "Deprecation": [[96, "deprecation"]], "0.4": [[96, "id23"]], "0.3.1": [[96, "id26"]], "0.3": [[96, "id27"]], "V0.2": [[96, "v0-2"]], "0.1.11": [[96, "id28"]], "0.1.10": [[96, "id29"]], "0.1.9": [[96, "id30"]], "0.1.7": [[96, "id31"]], "0.1.3": [[96, "id32"]], "First pre-release": [[96, "first-pre-release"]]}, "indexentries": {"barycenter() (in module ot)": [[0, "ot.barycenter"]], "barycenter_unbalanced() (in module ot)": [[0, "ot.barycenter_unbalanced"]], "binary_search_circle() (in module ot)": [[0, "ot.binary_search_circle"]], "dist() (in module ot)": [[0, "ot.dist"]], "emd() (in module ot)": [[0, "ot.emd"]], "emd2() (in module ot)": [[0, "ot.emd2"]], "emd2_1d() (in module ot)": [[0, "ot.emd2_1d"]], "emd_1d() (in module ot)": [[0, "ot.emd_1d"]], "factored_optimal_transport() (in module ot)": [[0, "ot.factored_optimal_transport"]], "fused_gromov_wasserstein() (in module ot)": [[0, "ot.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot)": [[0, "ot.fused_gromov_wasserstein2"]], "gromov_barycenters() (in module ot)": [[0, "ot.gromov_barycenters"]], "gromov_wasserstein() (in module ot)": [[0, "ot.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot)": [[0, "ot.gromov_wasserstein2"]], "max_sliced_wasserstein_distance() (in module ot)": [[0, "ot.max_sliced_wasserstein_distance"]], "module": [[0, "module-ot"], [72, "module-ot.backend"], [73, "module-ot.bregman"], [74, "module-ot.coot"], [75, "module-ot.da"], [76, "module-ot.datasets"], [77, "module-ot.dr"], [78, "module-ot.factored"], [79, "module-ot.gaussian"], [80, "module-ot.gnn"], [81, "module-ot.gromov"], [82, "module-ot.lp"], [83, "module-ot.mapping"], [84, "module-ot.optim"], [85, "module-ot.partial"], [86, "module-ot.plot"], [87, "module-ot.regpath"], [88, "module-ot.sliced"], [89, "module-ot.smooth"], [90, "module-ot.stochastic"], [91, "module-ot.unbalanced"], [92, "module-ot.utils"], [93, "module-ot.weak"]], "ot": [[0, "module-ot"]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[0, "ot.semidiscrete_wasserstein2_unif_circle"]], "sinkhorn() (in module ot)": [[0, "ot.sinkhorn"]], "sinkhorn2() (in module ot)": [[0, "ot.sinkhorn2"]], "sinkhorn_lpl1_mm() (in module ot)": [[0, "ot.sinkhorn_lpl1_mm"]], "sinkhorn_unbalanced() (in module ot)": [[0, "ot.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot)": [[0, "ot.sinkhorn_unbalanced2"]], "sliced_wasserstein_distance() (in module ot)": [[0, "ot.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot)": [[0, "ot.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot)": [[0, "ot.sliced_wasserstein_sphere_unif"]], "solve() (in module ot)": [[0, "ot.solve"]], "solve_gromov() (in module ot)": [[0, "ot.solve_gromov"]], "tic() (in module ot)": [[0, "ot.tic"]], "toc() (in module ot)": [[0, "ot.toc"]], "toq() (in module ot)": [[0, "ot.toq"]], "unif() (in module ot)": [[0, "ot.unif"]], "wasserstein_1d() (in module ot)": [[0, "ot.wasserstein_1d"]], "wasserstein_circle() (in module ot)": [[0, "ot.wasserstein_circle"]], "weak_optimal_transport() (in module ot)": [[0, "ot.weak_optimal_transport"]], "backend (class in ot.backend)": [[72, "id0"], [72, "ot.backend.Backend"]], "cupybackend (class in ot.backend)": [[72, "id83"], [72, "ot.backend.CupyBackend"]], "jaxbackend (class in ot.backend)": [[72, "id164"], [72, "ot.backend.JaxBackend"]], "numpybackend (class in ot.backend)": [[72, "id245"], [72, "ot.backend.NumpyBackend"]], "tensorflowbackend (class in ot.backend)": [[72, "id326"], [72, "ot.backend.TensorflowBackend"]], "torchbackend (class in ot.backend)": [[72, "id407"], [72, "ot.backend.TorchBackend"]], "abs() (ot.backend.backend method)": [[72, "id1"], [72, "ot.backend.Backend.abs"]], "abs() (ot.backend.cupybackend method)": [[72, "id84"], [72, "ot.backend.CupyBackend.abs"]], "abs() (ot.backend.jaxbackend method)": [[72, "id165"], [72, "ot.backend.JaxBackend.abs"]], "abs() (ot.backend.numpybackend method)": [[72, "id246"], [72, "ot.backend.NumpyBackend.abs"]], "abs() (ot.backend.tensorflowbackend method)": [[72, "id327"], [72, "ot.backend.TensorflowBackend.abs"]], "abs() (ot.backend.torchbackend method)": [[72, "id408"], [72, "ot.backend.TorchBackend.abs"]], "allclose() (ot.backend.backend method)": [[72, "id2"], [72, "ot.backend.Backend.allclose"]], "allclose() (ot.backend.cupybackend method)": [[72, "id85"], [72, "ot.backend.CupyBackend.allclose"]], "allclose() (ot.backend.jaxbackend method)": [[72, "id166"], [72, "ot.backend.JaxBackend.allclose"]], "allclose() (ot.backend.numpybackend method)": [[72, "id247"], [72, "ot.backend.NumpyBackend.allclose"]], "allclose() (ot.backend.tensorflowbackend method)": [[72, "id328"], [72, "ot.backend.TensorflowBackend.allclose"]], "allclose() (ot.backend.torchbackend method)": [[72, "id409"], [72, "ot.backend.TorchBackend.allclose"]], "any() (ot.backend.backend method)": [[72, "id3"], [72, "ot.backend.Backend.any"]], "any() (ot.backend.cupybackend method)": [[72, "id86"], [72, "ot.backend.CupyBackend.any"]], "any() (ot.backend.jaxbackend method)": [[72, "id167"], [72, "ot.backend.JaxBackend.any"]], "any() (ot.backend.numpybackend method)": [[72, "id248"], [72, "ot.backend.NumpyBackend.any"]], "any() (ot.backend.tensorflowbackend method)": [[72, "id329"], [72, "ot.backend.TensorflowBackend.any"]], "any() (ot.backend.torchbackend method)": [[72, "id410"], [72, "ot.backend.TorchBackend.any"]], "arange() (ot.backend.backend method)": [[72, "id4"], [72, "ot.backend.Backend.arange"]], "arange() (ot.backend.cupybackend method)": [[72, "id87"], [72, "ot.backend.CupyBackend.arange"]], "arange() (ot.backend.jaxbackend method)": [[72, "id168"], [72, "ot.backend.JaxBackend.arange"]], "arange() (ot.backend.numpybackend method)": [[72, "id249"], [72, "ot.backend.NumpyBackend.arange"]], "arange() (ot.backend.tensorflowbackend method)": [[72, "id330"], [72, "ot.backend.TensorflowBackend.arange"]], "arange() (ot.backend.torchbackend method)": [[72, "id411"], [72, "ot.backend.TorchBackend.arange"]], "argmax() (ot.backend.backend method)": [[72, "id5"], [72, "ot.backend.Backend.argmax"]], "argmax() (ot.backend.cupybackend method)": [[72, "id88"], [72, "ot.backend.CupyBackend.argmax"]], "argmax() (ot.backend.jaxbackend method)": [[72, "id169"], [72, "ot.backend.JaxBackend.argmax"]], "argmax() (ot.backend.numpybackend method)": [[72, "id250"], [72, "ot.backend.NumpyBackend.argmax"]], "argmax() (ot.backend.tensorflowbackend method)": [[72, "id331"], [72, "ot.backend.TensorflowBackend.argmax"]], "argmax() (ot.backend.torchbackend method)": [[72, "id412"], [72, "ot.backend.TorchBackend.argmax"]], "argmin() (ot.backend.backend method)": [[72, "id6"], [72, "ot.backend.Backend.argmin"]], "argmin() (ot.backend.cupybackend method)": [[72, "id89"], [72, "ot.backend.CupyBackend.argmin"]], "argmin() (ot.backend.jaxbackend method)": [[72, "id170"], [72, "ot.backend.JaxBackend.argmin"]], "argmin() (ot.backend.numpybackend method)": [[72, "id251"], [72, "ot.backend.NumpyBackend.argmin"]], "argmin() (ot.backend.tensorflowbackend method)": [[72, "id332"], [72, "ot.backend.TensorflowBackend.argmin"]], "argmin() (ot.backend.torchbackend method)": [[72, "id413"], [72, "ot.backend.TorchBackend.argmin"]], "argsort() (ot.backend.backend method)": [[72, "id7"], [72, "ot.backend.Backend.argsort"]], "argsort() (ot.backend.cupybackend method)": [[72, "id90"], [72, "ot.backend.CupyBackend.argsort"]], "argsort() (ot.backend.jaxbackend method)": [[72, "id171"], [72, "ot.backend.JaxBackend.argsort"]], "argsort() (ot.backend.numpybackend method)": [[72, "id252"], [72, "ot.backend.NumpyBackend.argsort"]], "argsort() (ot.backend.tensorflowbackend method)": [[72, "id333"], [72, "ot.backend.TensorflowBackend.argsort"]], "argsort() (ot.backend.torchbackend method)": [[72, "id414"], [72, "ot.backend.TorchBackend.argsort"]], "array_equal() (ot.backend.backend method)": [[72, "id8"], [72, "ot.backend.Backend.array_equal"]], "array_equal() (ot.backend.cupybackend method)": [[72, "id91"], [72, "ot.backend.CupyBackend.array_equal"]], "array_equal() (ot.backend.jaxbackend method)": [[72, "id172"], [72, "ot.backend.JaxBackend.array_equal"]], "array_equal() (ot.backend.numpybackend method)": [[72, "id253"], [72, "ot.backend.NumpyBackend.array_equal"]], "array_equal() (ot.backend.tensorflowbackend method)": [[72, "id334"], [72, "ot.backend.TensorflowBackend.array_equal"]], "array_equal() (ot.backend.torchbackend method)": [[72, "id415"], [72, "ot.backend.TorchBackend.array_equal"]], "assert_same_dtype_device() (ot.backend.backend method)": [[72, "id9"], [72, "ot.backend.Backend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[72, "id92"], [72, "ot.backend.CupyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[72, "id173"], [72, "ot.backend.JaxBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[72, "id254"], [72, "ot.backend.NumpyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[72, "id335"], [72, "ot.backend.TensorflowBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[72, "id416"], [72, "ot.backend.TorchBackend.assert_same_dtype_device"]], "atan2() (ot.backend.backend method)": [[72, "id10"], [72, "ot.backend.Backend.atan2"]], "atan2() (ot.backend.cupybackend method)": [[72, "id93"], [72, "ot.backend.CupyBackend.atan2"]], "atan2() (ot.backend.jaxbackend method)": [[72, "id174"], [72, "ot.backend.JaxBackend.atan2"]], "atan2() (ot.backend.numpybackend method)": [[72, "id255"], [72, "ot.backend.NumpyBackend.atan2"]], "atan2() (ot.backend.tensorflowbackend method)": [[72, "id336"], [72, "ot.backend.TensorflowBackend.atan2"]], "atan2() (ot.backend.torchbackend method)": [[72, "id417"], [72, "ot.backend.TorchBackend.atan2"]], "bitsize() (ot.backend.backend method)": [[72, "id11"], [72, "ot.backend.Backend.bitsize"]], "bitsize() (ot.backend.cupybackend method)": [[72, "id94"], [72, "ot.backend.CupyBackend.bitsize"]], "bitsize() (ot.backend.jaxbackend method)": [[72, "id175"], [72, "ot.backend.JaxBackend.bitsize"]], "bitsize() (ot.backend.numpybackend method)": [[72, "id256"], [72, "ot.backend.NumpyBackend.bitsize"]], "bitsize() (ot.backend.tensorflowbackend method)": [[72, "id337"], [72, "ot.backend.TensorflowBackend.bitsize"]], "bitsize() (ot.backend.torchbackend method)": [[72, "id418"], [72, "ot.backend.TorchBackend.bitsize"]], "clip() (ot.backend.backend method)": [[72, "id12"], [72, "ot.backend.Backend.clip"]], "clip() (ot.backend.cupybackend method)": [[72, "id95"], [72, "ot.backend.CupyBackend.clip"]], "clip() (ot.backend.jaxbackend method)": [[72, "id176"], [72, "ot.backend.JaxBackend.clip"]], "clip() (ot.backend.numpybackend method)": [[72, "id257"], [72, "ot.backend.NumpyBackend.clip"]], "clip() (ot.backend.tensorflowbackend method)": [[72, "id338"], [72, "ot.backend.TensorflowBackend.clip"]], "clip() (ot.backend.torchbackend method)": [[72, "id419"], [72, "ot.backend.TorchBackend.clip"]], "concatenate() (ot.backend.backend method)": [[72, "id13"], [72, "ot.backend.Backend.concatenate"]], "concatenate() (ot.backend.cupybackend method)": [[72, "id96"], [72, "ot.backend.CupyBackend.concatenate"]], "concatenate() (ot.backend.jaxbackend method)": [[72, "id177"], [72, "ot.backend.JaxBackend.concatenate"]], "concatenate() (ot.backend.numpybackend method)": [[72, "id258"], [72, "ot.backend.NumpyBackend.concatenate"]], "concatenate() (ot.backend.tensorflowbackend method)": [[72, "id339"], [72, "ot.backend.TensorflowBackend.concatenate"]], "concatenate() (ot.backend.torchbackend method)": [[72, "id420"], [72, "ot.backend.TorchBackend.concatenate"]], "coo_matrix() (ot.backend.backend method)": [[72, "id14"], [72, "ot.backend.Backend.coo_matrix"]], "coo_matrix() (ot.backend.cupybackend method)": [[72, "id97"], [72, "ot.backend.CupyBackend.coo_matrix"]], "coo_matrix() (ot.backend.jaxbackend method)": [[72, "id178"], [72, "ot.backend.JaxBackend.coo_matrix"]], "coo_matrix() (ot.backend.numpybackend method)": [[72, "id259"], [72, "ot.backend.NumpyBackend.coo_matrix"]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[72, "id340"], [72, "ot.backend.TensorflowBackend.coo_matrix"]], "coo_matrix() (ot.backend.torchbackend method)": [[72, "id421"], [72, "ot.backend.TorchBackend.coo_matrix"]], "copy() (ot.backend.backend method)": [[72, "id15"], [72, "ot.backend.Backend.copy"]], "copy() (ot.backend.cupybackend method)": [[72, "id98"], [72, "ot.backend.CupyBackend.copy"]], "copy() (ot.backend.jaxbackend method)": [[72, "id179"], [72, "ot.backend.JaxBackend.copy"]], "copy() (ot.backend.numpybackend method)": [[72, "id260"], [72, "ot.backend.NumpyBackend.copy"]], "copy() (ot.backend.tensorflowbackend method)": [[72, "id341"], [72, "ot.backend.TensorflowBackend.copy"]], "copy() (ot.backend.torchbackend method)": [[72, "id422"], [72, "ot.backend.TorchBackend.copy"]], "cumsum() (ot.backend.backend method)": [[72, "id16"], [72, "ot.backend.Backend.cumsum"]], "cumsum() (ot.backend.cupybackend method)": [[72, "id99"], [72, "ot.backend.CupyBackend.cumsum"]], "cumsum() (ot.backend.jaxbackend method)": [[72, "id180"], [72, "ot.backend.JaxBackend.cumsum"]], "cumsum() (ot.backend.numpybackend method)": [[72, "id261"], [72, "ot.backend.NumpyBackend.cumsum"]], "cumsum() (ot.backend.tensorflowbackend method)": [[72, "id342"], [72, "ot.backend.TensorflowBackend.cumsum"]], "cumsum() (ot.backend.torchbackend method)": [[72, "id423"], [72, "ot.backend.TorchBackend.cumsum"]], "detach() (ot.backend.backend method)": [[72, "id17"], [72, "ot.backend.Backend.detach"]], "detach() (ot.backend.cupybackend method)": [[72, "id100"], [72, "ot.backend.CupyBackend.detach"]], "detach() (ot.backend.jaxbackend method)": [[72, "id181"], [72, "ot.backend.JaxBackend.detach"]], "detach() (ot.backend.numpybackend method)": [[72, "id262"], [72, "ot.backend.NumpyBackend.detach"]], "detach() (ot.backend.tensorflowbackend method)": [[72, "id343"], [72, "ot.backend.TensorflowBackend.detach"]], "detach() (ot.backend.torchbackend method)": [[72, "id424"], [72, "ot.backend.TorchBackend.detach"]], "device_type() (ot.backend.backend method)": [[72, "id18"], [72, "ot.backend.Backend.device_type"]], "device_type() (ot.backend.cupybackend method)": [[72, "id101"], [72, "ot.backend.CupyBackend.device_type"]], "device_type() (ot.backend.jaxbackend method)": [[72, "id182"], [72, "ot.backend.JaxBackend.device_type"]], "device_type() (ot.backend.numpybackend method)": [[72, "id263"], [72, "ot.backend.NumpyBackend.device_type"]], "device_type() (ot.backend.tensorflowbackend method)": [[72, "id344"], [72, "ot.backend.TensorflowBackend.device_type"]], "device_type() (ot.backend.torchbackend method)": [[72, "id425"], [72, "ot.backend.TorchBackend.device_type"]], "diag() (ot.backend.backend method)": [[72, "id19"], [72, "ot.backend.Backend.diag"]], "diag() (ot.backend.cupybackend method)": [[72, "id102"], [72, "ot.backend.CupyBackend.diag"]], "diag() (ot.backend.jaxbackend method)": [[72, "id183"], [72, "ot.backend.JaxBackend.diag"]], "diag() (ot.backend.numpybackend method)": [[72, "id264"], [72, "ot.backend.NumpyBackend.diag"]], "diag() (ot.backend.tensorflowbackend method)": [[72, "id345"], [72, "ot.backend.TensorflowBackend.diag"]], "diag() (ot.backend.torchbackend method)": [[72, "id426"], [72, "ot.backend.TorchBackend.diag"]], "dot() (ot.backend.backend method)": [[72, "id20"], [72, "ot.backend.Backend.dot"]], "dot() (ot.backend.cupybackend method)": [[72, "id103"], [72, "ot.backend.CupyBackend.dot"]], "dot() (ot.backend.jaxbackend method)": [[72, "id184"], [72, "ot.backend.JaxBackend.dot"]], "dot() (ot.backend.numpybackend method)": [[72, "id265"], [72, "ot.backend.NumpyBackend.dot"]], "dot() (ot.backend.tensorflowbackend method)": [[72, "id346"], [72, "ot.backend.TensorflowBackend.dot"]], "dot() (ot.backend.torchbackend method)": [[72, "id427"], [72, "ot.backend.TorchBackend.dot"]], "dtype_device() (ot.backend.backend method)": [[72, "id21"], [72, "ot.backend.Backend.dtype_device"]], "dtype_device() (ot.backend.cupybackend method)": [[72, "id104"], [72, "ot.backend.CupyBackend.dtype_device"]], "dtype_device() (ot.backend.jaxbackend method)": [[72, "id185"], [72, "ot.backend.JaxBackend.dtype_device"]], "dtype_device() (ot.backend.numpybackend method)": [[72, "id266"], [72, "ot.backend.NumpyBackend.dtype_device"]], "dtype_device() (ot.backend.tensorflowbackend method)": [[72, "id347"], [72, "ot.backend.TensorflowBackend.dtype_device"]], "dtype_device() (ot.backend.torchbackend method)": [[72, "id428"], [72, "ot.backend.TorchBackend.dtype_device"]], "eigh() (ot.backend.backend method)": [[72, "id22"], [72, "ot.backend.Backend.eigh"]], "eigh() (ot.backend.cupybackend method)": [[72, "id105"], [72, "ot.backend.CupyBackend.eigh"]], "eigh() (ot.backend.jaxbackend method)": [[72, "id186"], [72, "ot.backend.JaxBackend.eigh"]], "eigh() (ot.backend.numpybackend method)": [[72, "id267"], [72, "ot.backend.NumpyBackend.eigh"]], "eigh() (ot.backend.tensorflowbackend method)": [[72, "id348"], [72, "ot.backend.TensorflowBackend.eigh"]], "eigh() (ot.backend.torchbackend method)": [[72, "id429"], [72, "ot.backend.TorchBackend.eigh"]], "einsum() (ot.backend.backend method)": [[72, "id23"], [72, "ot.backend.Backend.einsum"]], "einsum() (ot.backend.cupybackend method)": [[72, "id106"], [72, "ot.backend.CupyBackend.einsum"]], "einsum() (ot.backend.jaxbackend method)": [[72, "id187"], [72, "ot.backend.JaxBackend.einsum"]], "einsum() (ot.backend.numpybackend method)": [[72, "id268"], [72, "ot.backend.NumpyBackend.einsum"]], "einsum() (ot.backend.tensorflowbackend method)": [[72, "id349"], [72, "ot.backend.TensorflowBackend.einsum"]], "einsum() (ot.backend.torchbackend method)": [[72, "id430"], [72, "ot.backend.TorchBackend.einsum"]], "eliminate_zeros() (ot.backend.backend method)": [[72, "id24"], [72, "ot.backend.Backend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.cupybackend method)": [[72, "id107"], [72, "ot.backend.CupyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[72, "id188"], [72, "ot.backend.JaxBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.numpybackend method)": [[72, "id269"], [72, "ot.backend.NumpyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[72, "id350"], [72, "ot.backend.TensorflowBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.torchbackend method)": [[72, "id431"], [72, "ot.backend.TorchBackend.eliminate_zeros"]], "exp() (ot.backend.backend method)": [[72, "id25"], [72, "ot.backend.Backend.exp"]], "exp() (ot.backend.cupybackend method)": [[72, "id108"], [72, "ot.backend.CupyBackend.exp"]], "exp() (ot.backend.jaxbackend method)": [[72, "id189"], [72, "ot.backend.JaxBackend.exp"]], "exp() (ot.backend.numpybackend method)": [[72, "id270"], [72, "ot.backend.NumpyBackend.exp"]], "exp() (ot.backend.tensorflowbackend method)": [[72, "id351"], [72, "ot.backend.TensorflowBackend.exp"]], "exp() (ot.backend.torchbackend method)": [[72, "id432"], [72, "ot.backend.TorchBackend.exp"]], "eye() (ot.backend.backend method)": [[72, "id26"], [72, "ot.backend.Backend.eye"]], "eye() (ot.backend.cupybackend method)": [[72, "id109"], [72, "ot.backend.CupyBackend.eye"]], "eye() (ot.backend.jaxbackend method)": [[72, "id190"], [72, "ot.backend.JaxBackend.eye"]], "eye() (ot.backend.numpybackend method)": [[72, "id271"], [72, "ot.backend.NumpyBackend.eye"]], "eye() (ot.backend.tensorflowbackend method)": [[72, "id352"], [72, "ot.backend.TensorflowBackend.eye"]], "eye() (ot.backend.torchbackend method)": [[72, "id433"], [72, "ot.backend.TorchBackend.eye"]], "flip() (ot.backend.backend method)": [[72, "id27"], [72, "ot.backend.Backend.flip"]], "flip() (ot.backend.cupybackend method)": [[72, "id110"], [72, "ot.backend.CupyBackend.flip"]], "flip() (ot.backend.jaxbackend method)": [[72, "id191"], [72, "ot.backend.JaxBackend.flip"]], "flip() (ot.backend.numpybackend method)": [[72, "id272"], [72, "ot.backend.NumpyBackend.flip"]], "flip() (ot.backend.tensorflowbackend method)": [[72, "id353"], [72, "ot.backend.TensorflowBackend.flip"]], "flip() (ot.backend.torchbackend method)": [[72, "id434"], [72, "ot.backend.TorchBackend.flip"]], "floor() (ot.backend.backend method)": [[72, "id28"], [72, "ot.backend.Backend.floor"]], "floor() (ot.backend.cupybackend method)": [[72, "id111"], [72, "ot.backend.CupyBackend.floor"]], "floor() (ot.backend.jaxbackend method)": [[72, "id192"], [72, "ot.backend.JaxBackend.floor"]], "floor() (ot.backend.numpybackend method)": [[72, "id273"], [72, "ot.backend.NumpyBackend.floor"]], "floor() (ot.backend.tensorflowbackend method)": [[72, "id354"], [72, "ot.backend.TensorflowBackend.floor"]], "floor() (ot.backend.torchbackend method)": [[72, "id435"], [72, "ot.backend.TorchBackend.floor"]], "from_numpy() (ot.backend.backend method)": [[72, "id29"], [72, "ot.backend.Backend.from_numpy"]], "full() (ot.backend.backend method)": [[72, "id30"], [72, "ot.backend.Backend.full"]], "full() (ot.backend.cupybackend method)": [[72, "id112"], [72, "ot.backend.CupyBackend.full"]], "full() (ot.backend.jaxbackend method)": [[72, "id193"], [72, "ot.backend.JaxBackend.full"]], "full() (ot.backend.numpybackend method)": [[72, "id274"], [72, "ot.backend.NumpyBackend.full"]], "full() (ot.backend.tensorflowbackend method)": [[72, "id355"], [72, "ot.backend.TensorflowBackend.full"]], "full() (ot.backend.torchbackend method)": [[72, "id436"], [72, "ot.backend.TorchBackend.full"]], "get_available_backend_implementations() (in module ot.backend)": [[72, "id488"], [72, "ot.backend.get_available_backend_implementations"]], "get_backend() (in module ot.backend)": [[72, "id489"], [72, "ot.backend.get_backend"]], "get_backend_list() (in module ot.backend)": [[72, "id490"], [72, "ot.backend.get_backend_list"]], "inv() (ot.backend.backend method)": [[72, "id31"], [72, "ot.backend.Backend.inv"]], "inv() (ot.backend.cupybackend method)": [[72, "id113"], [72, "ot.backend.CupyBackend.inv"]], "inv() (ot.backend.jaxbackend method)": [[72, "id194"], [72, "ot.backend.JaxBackend.inv"]], "inv() (ot.backend.numpybackend method)": [[72, "id275"], [72, "ot.backend.NumpyBackend.inv"]], "inv() (ot.backend.tensorflowbackend method)": [[72, "id356"], [72, "ot.backend.TensorflowBackend.inv"]], "inv() (ot.backend.torchbackend method)": [[72, "id437"], [72, "ot.backend.TorchBackend.inv"]], "is_floating_point() (ot.backend.backend method)": [[72, "id32"], [72, "ot.backend.Backend.is_floating_point"]], "is_floating_point() (ot.backend.cupybackend method)": [[72, "id114"], [72, "ot.backend.CupyBackend.is_floating_point"]], "is_floating_point() (ot.backend.jaxbackend method)": [[72, "id195"], [72, "ot.backend.JaxBackend.is_floating_point"]], "is_floating_point() (ot.backend.numpybackend method)": [[72, "id276"], [72, "ot.backend.NumpyBackend.is_floating_point"]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[72, "id357"], [72, "ot.backend.TensorflowBackend.is_floating_point"]], "is_floating_point() (ot.backend.torchbackend method)": [[72, "id438"], [72, "ot.backend.TorchBackend.is_floating_point"]], "isfinite() (ot.backend.backend method)": [[72, "id33"], [72, "ot.backend.Backend.isfinite"]], "isfinite() (ot.backend.cupybackend method)": [[72, "id115"], [72, "ot.backend.CupyBackend.isfinite"]], "isfinite() (ot.backend.jaxbackend method)": [[72, "id196"], [72, "ot.backend.JaxBackend.isfinite"]], "isfinite() (ot.backend.numpybackend method)": [[72, "id277"], [72, "ot.backend.NumpyBackend.isfinite"]], "isfinite() (ot.backend.tensorflowbackend method)": [[72, "id358"], [72, "ot.backend.TensorflowBackend.isfinite"]], "isfinite() (ot.backend.torchbackend method)": [[72, "id439"], [72, "ot.backend.TorchBackend.isfinite"]], "isinf() (ot.backend.backend method)": [[72, "id34"], [72, "ot.backend.Backend.isinf"]], "isinf() (ot.backend.cupybackend method)": [[72, "id116"], [72, "ot.backend.CupyBackend.isinf"]], "isinf() (ot.backend.jaxbackend method)": [[72, "id197"], [72, "ot.backend.JaxBackend.isinf"]], "isinf() (ot.backend.numpybackend method)": [[72, "id278"], [72, "ot.backend.NumpyBackend.isinf"]], "isinf() (ot.backend.tensorflowbackend method)": [[72, "id359"], [72, "ot.backend.TensorflowBackend.isinf"]], "isinf() (ot.backend.torchbackend method)": [[72, "id440"], [72, "ot.backend.TorchBackend.isinf"]], "isnan() (ot.backend.backend method)": [[72, "id35"], [72, "ot.backend.Backend.isnan"]], "isnan() (ot.backend.cupybackend method)": [[72, "id117"], [72, "ot.backend.CupyBackend.isnan"]], "isnan() (ot.backend.jaxbackend method)": [[72, "id198"], [72, "ot.backend.JaxBackend.isnan"]], "isnan() (ot.backend.numpybackend method)": [[72, "id279"], [72, "ot.backend.NumpyBackend.isnan"]], "isnan() (ot.backend.tensorflowbackend method)": [[72, "id360"], [72, "ot.backend.TensorflowBackend.isnan"]], "isnan() (ot.backend.torchbackend method)": [[72, "id441"], [72, "ot.backend.TorchBackend.isnan"]], "issparse() (ot.backend.backend method)": [[72, "id36"], [72, "ot.backend.Backend.issparse"]], "issparse() (ot.backend.cupybackend method)": [[72, "id118"], [72, "ot.backend.CupyBackend.issparse"]], "issparse() (ot.backend.jaxbackend method)": [[72, "id199"], [72, "ot.backend.JaxBackend.issparse"]], "issparse() (ot.backend.numpybackend method)": [[72, "id280"], [72, "ot.backend.NumpyBackend.issparse"]], "issparse() (ot.backend.tensorflowbackend method)": [[72, "id361"], [72, "ot.backend.TensorflowBackend.issparse"]], "issparse() (ot.backend.torchbackend method)": [[72, "id442"], [72, "ot.backend.TorchBackend.issparse"]], "kl_div() (ot.backend.backend method)": [[72, "id37"], [72, "ot.backend.Backend.kl_div"]], "kl_div() (ot.backend.cupybackend method)": [[72, "id119"], [72, "ot.backend.CupyBackend.kl_div"]], "kl_div() (ot.backend.jaxbackend method)": [[72, "id200"], [72, "ot.backend.JaxBackend.kl_div"]], "kl_div() (ot.backend.numpybackend method)": [[72, "id281"], [72, "ot.backend.NumpyBackend.kl_div"]], "kl_div() (ot.backend.tensorflowbackend method)": [[72, "id362"], [72, "ot.backend.TensorflowBackend.kl_div"]], "kl_div() (ot.backend.torchbackend method)": [[72, "id443"], [72, "ot.backend.TorchBackend.kl_div"]], "linspace() (ot.backend.backend method)": [[72, "id38"], [72, "ot.backend.Backend.linspace"]], "linspace() (ot.backend.cupybackend method)": [[72, "id120"], [72, "ot.backend.CupyBackend.linspace"]], "linspace() (ot.backend.jaxbackend method)": [[72, "id201"], [72, "ot.backend.JaxBackend.linspace"]], "linspace() (ot.backend.numpybackend method)": [[72, "id282"], [72, "ot.backend.NumpyBackend.linspace"]], "linspace() (ot.backend.tensorflowbackend method)": [[72, "id363"], [72, "ot.backend.TensorflowBackend.linspace"]], "linspace() (ot.backend.torchbackend method)": [[72, "id444"], [72, "ot.backend.TorchBackend.linspace"]], "log() (ot.backend.backend method)": [[72, "id39"], [72, "ot.backend.Backend.log"]], "log() (ot.backend.cupybackend method)": [[72, "id121"], [72, "ot.backend.CupyBackend.log"]], "log() (ot.backend.jaxbackend method)": [[72, "id202"], [72, "ot.backend.JaxBackend.log"]], "log() (ot.backend.numpybackend method)": [[72, "id283"], [72, "ot.backend.NumpyBackend.log"]], "log() (ot.backend.tensorflowbackend method)": [[72, "id364"], [72, "ot.backend.TensorflowBackend.log"]], "log() (ot.backend.torchbackend method)": [[72, "id445"], [72, "ot.backend.TorchBackend.log"]], "logsumexp() (ot.backend.backend method)": [[72, "id40"], [72, "ot.backend.Backend.logsumexp"]], "logsumexp() (ot.backend.cupybackend method)": [[72, "id122"], [72, "ot.backend.CupyBackend.logsumexp"]], "logsumexp() (ot.backend.jaxbackend method)": [[72, "id203"], [72, "ot.backend.JaxBackend.logsumexp"]], "logsumexp() (ot.backend.numpybackend method)": [[72, "id284"], [72, "ot.backend.NumpyBackend.logsumexp"]], "logsumexp() (ot.backend.tensorflowbackend method)": [[72, "id365"], [72, "ot.backend.TensorflowBackend.logsumexp"]], "logsumexp() (ot.backend.torchbackend method)": [[72, "id446"], [72, "ot.backend.TorchBackend.logsumexp"]], "matmul() (ot.backend.backend method)": [[72, "id41"], [72, "ot.backend.Backend.matmul"]], "matmul() (ot.backend.cupybackend method)": [[72, "id123"], [72, "ot.backend.CupyBackend.matmul"]], "matmul() (ot.backend.jaxbackend method)": [[72, "id204"], [72, "ot.backend.JaxBackend.matmul"]], "matmul() (ot.backend.numpybackend method)": [[72, "id285"], [72, "ot.backend.NumpyBackend.matmul"]], "matmul() (ot.backend.tensorflowbackend method)": [[72, "id366"], [72, "ot.backend.TensorflowBackend.matmul"]], "matmul() (ot.backend.torchbackend method)": [[72, "id447"], [72, "ot.backend.TorchBackend.matmul"]], "max() (ot.backend.backend method)": [[72, "id42"], [72, "ot.backend.Backend.max"]], "max() (ot.backend.cupybackend method)": [[72, "id124"], [72, "ot.backend.CupyBackend.max"]], "max() (ot.backend.jaxbackend method)": [[72, "id205"], [72, "ot.backend.JaxBackend.max"]], "max() (ot.backend.numpybackend method)": [[72, "id286"], [72, "ot.backend.NumpyBackend.max"]], "max() (ot.backend.tensorflowbackend method)": [[72, "id367"], [72, "ot.backend.TensorflowBackend.max"]], "max() (ot.backend.torchbackend method)": [[72, "id448"], [72, "ot.backend.TorchBackend.max"]], "maximum() (ot.backend.backend method)": [[72, "id43"], [72, "ot.backend.Backend.maximum"]], "maximum() (ot.backend.cupybackend method)": [[72, "id125"], [72, "ot.backend.CupyBackend.maximum"]], "maximum() (ot.backend.jaxbackend method)": [[72, "id206"], [72, "ot.backend.JaxBackend.maximum"]], "maximum() (ot.backend.numpybackend method)": [[72, "id287"], [72, "ot.backend.NumpyBackend.maximum"]], "maximum() (ot.backend.tensorflowbackend method)": [[72, "id368"], [72, "ot.backend.TensorflowBackend.maximum"]], "maximum() (ot.backend.torchbackend method)": [[72, "id449"], [72, "ot.backend.TorchBackend.maximum"]], "mean() (ot.backend.backend method)": [[72, "id44"], [72, "ot.backend.Backend.mean"]], "mean() (ot.backend.cupybackend method)": [[72, "id126"], [72, "ot.backend.CupyBackend.mean"]], "mean() (ot.backend.jaxbackend method)": [[72, "id207"], [72, "ot.backend.JaxBackend.mean"]], "mean() (ot.backend.numpybackend method)": [[72, "id288"], [72, "ot.backend.NumpyBackend.mean"]], "mean() (ot.backend.tensorflowbackend method)": [[72, "id369"], [72, "ot.backend.TensorflowBackend.mean"]], "mean() (ot.backend.torchbackend method)": [[72, "id450"], [72, "ot.backend.TorchBackend.mean"]], "median() (ot.backend.backend method)": [[72, "id45"], [72, "ot.backend.Backend.median"]], "median() (ot.backend.cupybackend method)": [[72, "id127"], [72, "ot.backend.CupyBackend.median"]], "median() (ot.backend.jaxbackend method)": [[72, "id208"], [72, "ot.backend.JaxBackend.median"]], "median() (ot.backend.numpybackend method)": [[72, "id289"], [72, "ot.backend.NumpyBackend.median"]], "median() (ot.backend.tensorflowbackend method)": [[72, "id370"], [72, "ot.backend.TensorflowBackend.median"]], "median() (ot.backend.torchbackend method)": [[72, "id451"], [72, "ot.backend.TorchBackend.median"]], "meshgrid() (ot.backend.backend method)": [[72, "id46"], [72, "ot.backend.Backend.meshgrid"]], "meshgrid() (ot.backend.cupybackend method)": [[72, "id128"], [72, "ot.backend.CupyBackend.meshgrid"]], "meshgrid() (ot.backend.jaxbackend method)": [[72, "id209"], [72, "ot.backend.JaxBackend.meshgrid"]], "meshgrid() (ot.backend.numpybackend method)": [[72, "id290"], [72, "ot.backend.NumpyBackend.meshgrid"]], "meshgrid() (ot.backend.tensorflowbackend method)": [[72, "id371"], [72, "ot.backend.TensorflowBackend.meshgrid"]], "meshgrid() (ot.backend.torchbackend method)": [[72, "id452"], [72, "ot.backend.TorchBackend.meshgrid"]], "min() (ot.backend.backend method)": [[72, "id47"], [72, "ot.backend.Backend.min"]], "min() (ot.backend.cupybackend method)": [[72, "id129"], [72, "ot.backend.CupyBackend.min"]], "min() (ot.backend.jaxbackend method)": [[72, "id210"], [72, "ot.backend.JaxBackend.min"]], "min() (ot.backend.numpybackend method)": [[72, "id291"], [72, "ot.backend.NumpyBackend.min"]], "min() (ot.backend.tensorflowbackend method)": [[72, "id372"], [72, "ot.backend.TensorflowBackend.min"]], "min() (ot.backend.torchbackend method)": [[72, "id453"], [72, "ot.backend.TorchBackend.min"]], "minimum() (ot.backend.backend method)": [[72, "id48"], [72, "ot.backend.Backend.minimum"]], "minimum() (ot.backend.cupybackend method)": [[72, "id130"], [72, "ot.backend.CupyBackend.minimum"]], "minimum() (ot.backend.jaxbackend method)": [[72, "id211"], [72, "ot.backend.JaxBackend.minimum"]], "minimum() (ot.backend.numpybackend method)": [[72, "id292"], [72, "ot.backend.NumpyBackend.minimum"]], "minimum() (ot.backend.tensorflowbackend method)": [[72, "id373"], [72, "ot.backend.TensorflowBackend.minimum"]], "minimum() (ot.backend.torchbackend method)": [[72, "id454"], [72, "ot.backend.TorchBackend.minimum"]], "norm() (ot.backend.backend method)": [[72, "id49"], [72, "ot.backend.Backend.norm"]], "norm() (ot.backend.cupybackend method)": [[72, "id131"], [72, "ot.backend.CupyBackend.norm"]], "norm() (ot.backend.jaxbackend method)": [[72, "id212"], [72, "ot.backend.JaxBackend.norm"]], "norm() (ot.backend.numpybackend method)": [[72, "id293"], [72, "ot.backend.NumpyBackend.norm"]], "norm() (ot.backend.tensorflowbackend method)": [[72, "id374"], [72, "ot.backend.TensorflowBackend.norm"]], "norm() (ot.backend.torchbackend method)": [[72, "id455"], [72, "ot.backend.TorchBackend.norm"]], "ones() (ot.backend.backend method)": [[72, "id50"], [72, "ot.backend.Backend.ones"]], "ones() (ot.backend.cupybackend method)": [[72, "id132"], [72, "ot.backend.CupyBackend.ones"]], "ones() (ot.backend.jaxbackend method)": [[72, "id213"], [72, "ot.backend.JaxBackend.ones"]], "ones() (ot.backend.numpybackend method)": [[72, "id294"], [72, "ot.backend.NumpyBackend.ones"]], "ones() (ot.backend.tensorflowbackend method)": [[72, "id375"], [72, "ot.backend.TensorflowBackend.ones"]], "ones() (ot.backend.torchbackend method)": [[72, "id456"], [72, "ot.backend.TorchBackend.ones"]], "ot.backend": [[72, "module-ot.backend"]], "outer() (ot.backend.backend method)": [[72, "id51"], [72, "ot.backend.Backend.outer"]], "outer() (ot.backend.cupybackend method)": [[72, "id133"], [72, "ot.backend.CupyBackend.outer"]], "outer() (ot.backend.jaxbackend method)": [[72, "id214"], [72, "ot.backend.JaxBackend.outer"]], "outer() (ot.backend.numpybackend method)": [[72, "id295"], [72, "ot.backend.NumpyBackend.outer"]], "outer() (ot.backend.tensorflowbackend method)": [[72, "id376"], [72, "ot.backend.TensorflowBackend.outer"]], "outer() (ot.backend.torchbackend method)": [[72, "id457"], [72, "ot.backend.TorchBackend.outer"]], "power() (ot.backend.backend method)": [[72, "id52"], [72, "ot.backend.Backend.power"]], "power() (ot.backend.cupybackend method)": [[72, "id134"], [72, "ot.backend.CupyBackend.power"]], "power() (ot.backend.jaxbackend method)": [[72, "id215"], [72, "ot.backend.JaxBackend.power"]], "power() (ot.backend.numpybackend method)": [[72, "id296"], [72, "ot.backend.NumpyBackend.power"]], "power() (ot.backend.tensorflowbackend method)": [[72, "id377"], [72, "ot.backend.TensorflowBackend.power"]], "power() (ot.backend.torchbackend method)": [[72, "id458"], [72, "ot.backend.TorchBackend.power"]], "prod() (ot.backend.backend method)": [[72, "id53"], [72, "ot.backend.Backend.prod"]], "prod() (ot.backend.cupybackend method)": [[72, "id135"], [72, "ot.backend.CupyBackend.prod"]], "prod() (ot.backend.jaxbackend method)": [[72, "id216"], [72, "ot.backend.JaxBackend.prod"]], "prod() (ot.backend.numpybackend method)": [[72, "id297"], [72, "ot.backend.NumpyBackend.prod"]], "prod() (ot.backend.tensorflowbackend method)": [[72, "id378"], [72, "ot.backend.TensorflowBackend.prod"]], "prod() (ot.backend.torchbackend method)": [[72, "id459"], [72, "ot.backend.TorchBackend.prod"]], "qr() (ot.backend.backend method)": [[72, "id54"], [72, "ot.backend.Backend.qr"]], "qr() (ot.backend.cupybackend method)": [[72, "id136"], [72, "ot.backend.CupyBackend.qr"]], "qr() (ot.backend.jaxbackend method)": [[72, "id217"], [72, "ot.backend.JaxBackend.qr"]], "qr() (ot.backend.numpybackend method)": [[72, "id298"], [72, "ot.backend.NumpyBackend.qr"]], "qr() (ot.backend.tensorflowbackend method)": [[72, "id379"], [72, "ot.backend.TensorflowBackend.qr"]], "qr() (ot.backend.torchbackend method)": [[72, "id460"], [72, "ot.backend.TorchBackend.qr"]], "rand() (ot.backend.backend method)": [[72, "id55"], [72, "ot.backend.Backend.rand"]], "rand() (ot.backend.cupybackend method)": [[72, "id137"], [72, "ot.backend.CupyBackend.rand"]], "rand() (ot.backend.jaxbackend method)": [[72, "id218"], [72, "ot.backend.JaxBackend.rand"]], "rand() (ot.backend.numpybackend method)": [[72, "id299"], [72, "ot.backend.NumpyBackend.rand"]], "rand() (ot.backend.tensorflowbackend method)": [[72, "id380"], [72, "ot.backend.TensorflowBackend.rand"]], "rand() (ot.backend.torchbackend method)": [[72, "id461"], [72, "ot.backend.TorchBackend.rand"]], "randn() (ot.backend.backend method)": [[72, "id56"], [72, "ot.backend.Backend.randn"]], "randn() (ot.backend.cupybackend method)": [[72, "id138"], [72, "ot.backend.CupyBackend.randn"]], "randn() (ot.backend.jaxbackend method)": [[72, "id219"], [72, "ot.backend.JaxBackend.randn"]], "randn() (ot.backend.numpybackend method)": [[72, "id300"], [72, "ot.backend.NumpyBackend.randn"]], "randn() (ot.backend.tensorflowbackend method)": [[72, "id381"], [72, "ot.backend.TensorflowBackend.randn"]], "randn() (ot.backend.torchbackend method)": [[72, "id462"], [72, "ot.backend.TorchBackend.randn"]], "repeat() (ot.backend.backend method)": [[72, "id57"], [72, "ot.backend.Backend.repeat"]], "repeat() (ot.backend.cupybackend method)": [[72, "id139"], [72, "ot.backend.CupyBackend.repeat"]], "repeat() (ot.backend.jaxbackend method)": [[72, "id220"], [72, "ot.backend.JaxBackend.repeat"]], "repeat() (ot.backend.numpybackend method)": [[72, "id301"], [72, "ot.backend.NumpyBackend.repeat"]], "repeat() (ot.backend.tensorflowbackend method)": [[72, "id382"], [72, "ot.backend.TensorflowBackend.repeat"]], "repeat() (ot.backend.torchbackend method)": [[72, "id463"], [72, "ot.backend.TorchBackend.repeat"]], "reshape() (ot.backend.backend method)": [[72, "id58"], [72, "ot.backend.Backend.reshape"]], "reshape() (ot.backend.cupybackend method)": [[72, "id140"], [72, "ot.backend.CupyBackend.reshape"]], "reshape() (ot.backend.jaxbackend method)": [[72, "id221"], [72, "ot.backend.JaxBackend.reshape"]], "reshape() (ot.backend.numpybackend method)": [[72, "id302"], [72, "ot.backend.NumpyBackend.reshape"]], "reshape() (ot.backend.tensorflowbackend method)": [[72, "id383"], [72, "ot.backend.TensorflowBackend.reshape"]], "reshape() (ot.backend.torchbackend method)": [[72, "id464"], [72, "ot.backend.TorchBackend.reshape"]], "searchsorted() (ot.backend.backend method)": [[72, "id59"], [72, "ot.backend.Backend.searchsorted"]], "searchsorted() (ot.backend.cupybackend method)": [[72, "id141"], [72, "ot.backend.CupyBackend.searchsorted"]], "searchsorted() (ot.backend.jaxbackend method)": [[72, "id222"], [72, "ot.backend.JaxBackend.searchsorted"]], "searchsorted() (ot.backend.numpybackend method)": [[72, "id303"], [72, "ot.backend.NumpyBackend.searchsorted"]], "searchsorted() (ot.backend.tensorflowbackend method)": [[72, "id384"], [72, "ot.backend.TensorflowBackend.searchsorted"]], "searchsorted() (ot.backend.torchbackend method)": [[72, "id465"], [72, "ot.backend.TorchBackend.searchsorted"]], "seed() (ot.backend.backend method)": [[72, "id60"], [72, "ot.backend.Backend.seed"]], "seed() (ot.backend.cupybackend method)": [[72, "id142"], [72, "ot.backend.CupyBackend.seed"]], "seed() (ot.backend.jaxbackend method)": [[72, "id223"], [72, "ot.backend.JaxBackend.seed"]], "seed() (ot.backend.numpybackend method)": [[72, "id304"], [72, "ot.backend.NumpyBackend.seed"]], "seed() (ot.backend.tensorflowbackend method)": [[72, "id385"], [72, "ot.backend.TensorflowBackend.seed"]], "seed() (ot.backend.torchbackend method)": [[72, "id466"], [72, "ot.backend.TorchBackend.seed"]], "set_gradients() (ot.backend.backend method)": [[72, "id61"], [72, "ot.backend.Backend.set_gradients"]], "set_gradients() (ot.backend.cupybackend method)": [[72, "id143"], [72, "ot.backend.CupyBackend.set_gradients"]], "set_gradients() (ot.backend.jaxbackend method)": [[72, "id224"], [72, "ot.backend.JaxBackend.set_gradients"]], "set_gradients() (ot.backend.numpybackend method)": [[72, "id305"], [72, "ot.backend.NumpyBackend.set_gradients"]], "set_gradients() (ot.backend.tensorflowbackend method)": [[72, "id386"], [72, "ot.backend.TensorflowBackend.set_gradients"]], "set_gradients() (ot.backend.torchbackend method)": [[72, "id467"], [72, "ot.backend.TorchBackend.set_gradients"]], "sign() (ot.backend.backend method)": [[72, "id62"], [72, "ot.backend.Backend.sign"]], "sign() (ot.backend.cupybackend method)": [[72, "id144"], [72, "ot.backend.CupyBackend.sign"]], "sign() (ot.backend.jaxbackend method)": [[72, "id225"], [72, "ot.backend.JaxBackend.sign"]], "sign() (ot.backend.numpybackend method)": [[72, "id306"], [72, "ot.backend.NumpyBackend.sign"]], "sign() (ot.backend.tensorflowbackend method)": [[72, "id387"], [72, "ot.backend.TensorflowBackend.sign"]], "sign() (ot.backend.torchbackend method)": [[72, "id468"], [72, "ot.backend.TorchBackend.sign"]], "solve() (ot.backend.backend method)": [[72, "id63"], [72, "ot.backend.Backend.solve"]], "solve() (ot.backend.cupybackend method)": [[72, "id145"], [72, "ot.backend.CupyBackend.solve"]], "solve() (ot.backend.jaxbackend method)": [[72, "id226"], [72, "ot.backend.JaxBackend.solve"]], "solve() (ot.backend.numpybackend method)": [[72, "id307"], [72, "ot.backend.NumpyBackend.solve"]], "solve() (ot.backend.tensorflowbackend method)": [[72, "id388"], [72, "ot.backend.TensorflowBackend.solve"]], "solve() (ot.backend.torchbackend method)": [[72, "id469"], [72, "ot.backend.TorchBackend.solve"]], "sort() (ot.backend.backend method)": [[72, "id64"], [72, "ot.backend.Backend.sort"]], "sort() (ot.backend.cupybackend method)": [[72, "id146"], [72, "ot.backend.CupyBackend.sort"]], "sort() (ot.backend.jaxbackend method)": [[72, "id227"], [72, "ot.backend.JaxBackend.sort"]], "sort() (ot.backend.numpybackend method)": [[72, "id308"], [72, "ot.backend.NumpyBackend.sort"]], "sort() (ot.backend.tensorflowbackend method)": [[72, "id389"], [72, "ot.backend.TensorflowBackend.sort"]], "sort() (ot.backend.torchbackend method)": [[72, "id470"], [72, "ot.backend.TorchBackend.sort"]], "sort2() (ot.backend.backend method)": [[72, "id65"], [72, "ot.backend.Backend.sort2"]], "sort2() (ot.backend.cupybackend method)": [[72, "id147"], [72, "ot.backend.CupyBackend.sort2"]], "sort2() (ot.backend.jaxbackend method)": [[72, "id228"], [72, "ot.backend.JaxBackend.sort2"]], "sort2() (ot.backend.numpybackend method)": [[72, "id309"], [72, "ot.backend.NumpyBackend.sort2"]], "sort2() (ot.backend.tensorflowbackend method)": [[72, "id390"], [72, "ot.backend.TensorflowBackend.sort2"]], "sort2() (ot.backend.torchbackend method)": [[72, "id471"], [72, "ot.backend.TorchBackend.sort2"]], "sqrt() (ot.backend.backend method)": [[72, "id66"], [72, "ot.backend.Backend.sqrt"]], "sqrt() (ot.backend.cupybackend method)": [[72, "id148"], [72, "ot.backend.CupyBackend.sqrt"]], "sqrt() (ot.backend.jaxbackend method)": [[72, "id229"], [72, "ot.backend.JaxBackend.sqrt"]], "sqrt() (ot.backend.numpybackend method)": [[72, "id310"], [72, "ot.backend.NumpyBackend.sqrt"]], "sqrt() (ot.backend.tensorflowbackend method)": [[72, "id391"], [72, "ot.backend.TensorflowBackend.sqrt"]], "sqrt() (ot.backend.torchbackend method)": [[72, "id472"], [72, "ot.backend.TorchBackend.sqrt"]], "sqrtm() (ot.backend.backend method)": [[72, "id67"], [72, "ot.backend.Backend.sqrtm"]], "sqrtm() (ot.backend.cupybackend method)": [[72, "id149"], [72, "ot.backend.CupyBackend.sqrtm"]], "sqrtm() (ot.backend.jaxbackend method)": [[72, "id230"], [72, "ot.backend.JaxBackend.sqrtm"]], "sqrtm() (ot.backend.numpybackend method)": [[72, "id311"], [72, "ot.backend.NumpyBackend.sqrtm"]], "sqrtm() (ot.backend.tensorflowbackend method)": [[72, "id392"], [72, "ot.backend.TensorflowBackend.sqrtm"]], "sqrtm() (ot.backend.torchbackend method)": [[72, "id473"], [72, "ot.backend.TorchBackend.sqrtm"]], "squeeze() (ot.backend.backend method)": [[72, "id68"], [72, "ot.backend.Backend.squeeze"]], "squeeze() (ot.backend.cupybackend method)": [[72, "id150"], [72, "ot.backend.CupyBackend.squeeze"]], "squeeze() (ot.backend.jaxbackend method)": [[72, "id231"], [72, "ot.backend.JaxBackend.squeeze"]], "squeeze() (ot.backend.numpybackend method)": [[72, "id312"], [72, "ot.backend.NumpyBackend.squeeze"]], "squeeze() (ot.backend.tensorflowbackend method)": [[72, "id393"], [72, "ot.backend.TensorflowBackend.squeeze"]], "squeeze() (ot.backend.torchbackend method)": [[72, "id474"], [72, "ot.backend.TorchBackend.squeeze"]], "stack() (ot.backend.backend method)": [[72, "id69"], [72, "ot.backend.Backend.stack"]], "stack() (ot.backend.cupybackend method)": [[72, "id151"], [72, "ot.backend.CupyBackend.stack"]], "stack() (ot.backend.jaxbackend method)": [[72, "id232"], [72, "ot.backend.JaxBackend.stack"]], "stack() (ot.backend.numpybackend method)": [[72, "id313"], [72, "ot.backend.NumpyBackend.stack"]], "stack() (ot.backend.tensorflowbackend method)": [[72, "id394"], [72, "ot.backend.TensorflowBackend.stack"]], "stack() (ot.backend.torchbackend method)": [[72, "id475"], [72, "ot.backend.TorchBackend.stack"]], "std() (ot.backend.backend method)": [[72, "id70"], [72, "ot.backend.Backend.std"]], "std() (ot.backend.cupybackend method)": [[72, "id152"], [72, "ot.backend.CupyBackend.std"]], "std() (ot.backend.jaxbackend method)": [[72, "id233"], [72, "ot.backend.JaxBackend.std"]], "std() (ot.backend.numpybackend method)": [[72, "id314"], [72, "ot.backend.NumpyBackend.std"]], "std() (ot.backend.tensorflowbackend method)": [[72, "id395"], [72, "ot.backend.TensorflowBackend.std"]], "std() (ot.backend.torchbackend method)": [[72, "id476"], [72, "ot.backend.TorchBackend.std"]], "sum() (ot.backend.backend method)": [[72, "id71"], [72, "ot.backend.Backend.sum"]], "sum() (ot.backend.cupybackend method)": [[72, "id153"], [72, "ot.backend.CupyBackend.sum"]], "sum() (ot.backend.jaxbackend method)": [[72, "id234"], [72, "ot.backend.JaxBackend.sum"]], "sum() (ot.backend.numpybackend method)": [[72, "id315"], [72, "ot.backend.NumpyBackend.sum"]], "sum() (ot.backend.tensorflowbackend method)": [[72, "id396"], [72, "ot.backend.TensorflowBackend.sum"]], "sum() (ot.backend.torchbackend method)": [[72, "id477"], [72, "ot.backend.TorchBackend.sum"]], "take_along_axis() (ot.backend.backend method)": [[72, "id72"], [72, "ot.backend.Backend.take_along_axis"]], "take_along_axis() (ot.backend.cupybackend method)": [[72, "id154"], [72, "ot.backend.CupyBackend.take_along_axis"]], "take_along_axis() (ot.backend.jaxbackend method)": [[72, "id235"], [72, "ot.backend.JaxBackend.take_along_axis"]], "take_along_axis() (ot.backend.numpybackend method)": [[72, "id316"], [72, "ot.backend.NumpyBackend.take_along_axis"]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[72, "id397"], [72, "ot.backend.TensorflowBackend.take_along_axis"]], "take_along_axis() (ot.backend.torchbackend method)": [[72, "id478"], [72, "ot.backend.TorchBackend.take_along_axis"]], "tile() (ot.backend.backend method)": [[72, "id73"], [72, "ot.backend.Backend.tile"]], "tile() (ot.backend.cupybackend method)": [[72, "id155"], [72, "ot.backend.CupyBackend.tile"]], "tile() (ot.backend.jaxbackend method)": [[72, "id236"], [72, "ot.backend.JaxBackend.tile"]], "tile() (ot.backend.numpybackend method)": [[72, "id317"], [72, "ot.backend.NumpyBackend.tile"]], "tile() (ot.backend.tensorflowbackend method)": [[72, "id398"], [72, "ot.backend.TensorflowBackend.tile"]], "tile() (ot.backend.torchbackend method)": [[72, "id479"], [72, "ot.backend.TorchBackend.tile"]], "to_numpy() (in module ot.backend)": [[72, "id491"], [72, "ot.backend.to_numpy"]], "to_numpy() (ot.backend.backend method)": [[72, "id74"], [72, "ot.backend.Backend.to_numpy"]], "tocsr() (ot.backend.backend method)": [[72, "id75"], [72, "ot.backend.Backend.tocsr"]], "tocsr() (ot.backend.cupybackend method)": [[72, "id156"], [72, "ot.backend.CupyBackend.tocsr"]], "tocsr() (ot.backend.jaxbackend method)": [[72, "id237"], [72, "ot.backend.JaxBackend.tocsr"]], "tocsr() (ot.backend.numpybackend method)": [[72, "id318"], [72, "ot.backend.NumpyBackend.tocsr"]], "tocsr() (ot.backend.tensorflowbackend method)": [[72, "id399"], [72, "ot.backend.TensorflowBackend.tocsr"]], "tocsr() (ot.backend.torchbackend method)": [[72, "id480"], [72, "ot.backend.TorchBackend.tocsr"]], "todense() (ot.backend.backend method)": [[72, "id76"], [72, "ot.backend.Backend.todense"]], "todense() (ot.backend.cupybackend method)": [[72, "id157"], [72, "ot.backend.CupyBackend.todense"]], "todense() (ot.backend.jaxbackend method)": [[72, "id238"], [72, "ot.backend.JaxBackend.todense"]], "todense() (ot.backend.numpybackend method)": [[72, "id319"], [72, "ot.backend.NumpyBackend.todense"]], "todense() (ot.backend.tensorflowbackend method)": [[72, "id400"], [72, "ot.backend.TensorflowBackend.todense"]], "todense() (ot.backend.torchbackend method)": [[72, "id481"], [72, "ot.backend.TorchBackend.todense"]], "trace() (ot.backend.backend method)": [[72, "id77"], [72, "ot.backend.Backend.trace"]], "trace() (ot.backend.cupybackend method)": [[72, "id158"], [72, "ot.backend.CupyBackend.trace"]], "trace() (ot.backend.jaxbackend method)": [[72, "id239"], [72, "ot.backend.JaxBackend.trace"]], "trace() (ot.backend.numpybackend method)": [[72, "id320"], [72, "ot.backend.NumpyBackend.trace"]], "trace() (ot.backend.tensorflowbackend method)": [[72, "id401"], [72, "ot.backend.TensorflowBackend.trace"]], "trace() (ot.backend.torchbackend method)": [[72, "id482"], [72, "ot.backend.TorchBackend.trace"]], "transpose() (ot.backend.backend method)": [[72, "id78"], [72, "ot.backend.Backend.transpose"]], "transpose() (ot.backend.cupybackend method)": [[72, "id159"], [72, "ot.backend.CupyBackend.transpose"]], "transpose() (ot.backend.jaxbackend method)": [[72, "id240"], [72, "ot.backend.JaxBackend.transpose"]], "transpose() (ot.backend.numpybackend method)": [[72, "id321"], [72, "ot.backend.NumpyBackend.transpose"]], "transpose() (ot.backend.tensorflowbackend method)": [[72, "id402"], [72, "ot.backend.TensorflowBackend.transpose"]], "transpose() (ot.backend.torchbackend method)": [[72, "id483"], [72, "ot.backend.TorchBackend.transpose"]], "unique() (ot.backend.backend method)": [[72, "id79"], [72, "ot.backend.Backend.unique"]], "unique() (ot.backend.cupybackend method)": [[72, "id160"], [72, "ot.backend.CupyBackend.unique"]], "unique() (ot.backend.jaxbackend method)": [[72, "id241"], [72, "ot.backend.JaxBackend.unique"]], "unique() (ot.backend.numpybackend method)": [[72, "id322"], [72, "ot.backend.NumpyBackend.unique"]], "unique() (ot.backend.tensorflowbackend method)": [[72, "id403"], [72, "ot.backend.TensorflowBackend.unique"]], "unique() (ot.backend.torchbackend method)": [[72, "id484"], [72, "ot.backend.TorchBackend.unique"]], "where() (ot.backend.backend method)": [[72, "id80"], [72, "ot.backend.Backend.where"]], "where() (ot.backend.cupybackend method)": [[72, "id161"], [72, "ot.backend.CupyBackend.where"]], "where() (ot.backend.jaxbackend method)": [[72, "id242"], [72, "ot.backend.JaxBackend.where"]], "where() (ot.backend.numpybackend method)": [[72, "id323"], [72, "ot.backend.NumpyBackend.where"]], "where() (ot.backend.tensorflowbackend method)": [[72, "id404"], [72, "ot.backend.TensorflowBackend.where"]], "where() (ot.backend.torchbackend method)": [[72, "id485"], [72, "ot.backend.TorchBackend.where"]], "zero_pad() (ot.backend.backend method)": [[72, "id81"], [72, "ot.backend.Backend.zero_pad"]], "zero_pad() (ot.backend.cupybackend method)": [[72, "id162"], [72, "ot.backend.CupyBackend.zero_pad"]], "zero_pad() (ot.backend.jaxbackend method)": [[72, "id243"], [72, "ot.backend.JaxBackend.zero_pad"]], "zero_pad() (ot.backend.numpybackend method)": [[72, "id324"], [72, "ot.backend.NumpyBackend.zero_pad"]], "zero_pad() (ot.backend.tensorflowbackend method)": [[72, "id405"], [72, "ot.backend.TensorflowBackend.zero_pad"]], "zero_pad() (ot.backend.torchbackend method)": [[72, "id486"], [72, "ot.backend.TorchBackend.zero_pad"]], "zeros() (ot.backend.backend method)": [[72, "id82"], [72, "ot.backend.Backend.zeros"]], "zeros() (ot.backend.cupybackend method)": [[72, "id163"], [72, "ot.backend.CupyBackend.zeros"]], "zeros() (ot.backend.jaxbackend method)": [[72, "id244"], [72, "ot.backend.JaxBackend.zeros"]], "zeros() (ot.backend.numpybackend method)": [[72, "id325"], [72, "ot.backend.NumpyBackend.zeros"]], "zeros() (ot.backend.tensorflowbackend method)": [[72, "id406"], [72, "ot.backend.TensorflowBackend.zeros"]], "zeros() (ot.backend.torchbackend method)": [[72, "id487"], [72, "ot.backend.TorchBackend.zeros"]], "barycenter() (in module ot.bregman)": [[73, "ot.bregman.barycenter"]], "barycenter_debiased() (in module ot.bregman)": [[73, "ot.bregman.barycenter_debiased"]], "barycenter_sinkhorn() (in module ot.bregman)": [[73, "ot.bregman.barycenter_sinkhorn"]], "barycenter_stabilized() (in module ot.bregman)": [[73, "ot.bregman.barycenter_stabilized"]], "convolutional_barycenter2d() (in module ot.bregman)": [[73, "ot.bregman.convolutional_barycenter2d"]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[73, "ot.bregman.convolutional_barycenter2d_debiased"]], "empirical_sinkhorn() (in module ot.bregman)": [[73, "ot.bregman.empirical_sinkhorn"]], "empirical_sinkhorn2() (in module ot.bregman)": [[73, "ot.bregman.empirical_sinkhorn2"]], "empirical_sinkhorn_divergence() (in module ot.bregman)": [[73, "ot.bregman.empirical_sinkhorn_divergence"]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[73, "ot.bregman.free_support_sinkhorn_barycenter"]], "geometricbar() (in module ot.bregman)": [[73, "ot.bregman.geometricBar"]], "geometricmean() (in module ot.bregman)": [[73, "ot.bregman.geometricMean"]], "greenkhorn() (in module ot.bregman)": [[73, "ot.bregman.greenkhorn"]], "jcpot_barycenter() (in module ot.bregman)": [[73, "ot.bregman.jcpot_barycenter"]], "ot.bregman": [[73, "module-ot.bregman"]], "projc() (in module ot.bregman)": [[73, "ot.bregman.projC"]], "projr() (in module ot.bregman)": [[73, "ot.bregman.projR"]], "screenkhorn() (in module ot.bregman)": [[73, "ot.bregman.screenkhorn"]], "sinkhorn() (in module ot.bregman)": [[73, "ot.bregman.sinkhorn"]], "sinkhorn2() (in module ot.bregman)": [[73, "ot.bregman.sinkhorn2"]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[73, "ot.bregman.sinkhorn_epsilon_scaling"]], "sinkhorn_knopp() (in module ot.bregman)": [[73, "ot.bregman.sinkhorn_knopp"]], "sinkhorn_log() (in module ot.bregman)": [[73, "ot.bregman.sinkhorn_log"]], "sinkhorn_stabilized() (in module ot.bregman)": [[73, "ot.bregman.sinkhorn_stabilized"]], "unmix() (in module ot.bregman)": [[73, "ot.bregman.unmix"]], "co_optimal_transport() (in module ot.coot)": [[74, "id0"], [74, "ot.coot.co_optimal_transport"]], "co_optimal_transport2() (in module ot.coot)": [[74, "id4"], [74, "ot.coot.co_optimal_transport2"]], "ot.coot": [[74, "module-ot.coot"]], "basetransport (class in ot.da)": [[75, "id0"], [75, "ot.da.BaseTransport"]], "emdlaplacetransport (class in ot.da)": [[75, "id44"], [75, "ot.da.EMDLaplaceTransport"]], "emdtransport (class in ot.da)": [[75, "id51"], [75, "ot.da.EMDTransport"]], "jcpottransport (class in ot.da)": [[75, "id57"], [75, "ot.da.JCPOTTransport"]], "lineargwtransport (class in ot.da)": [[75, "id70"], [75, "ot.da.LinearGWTransport"]], "lineartransport (class in ot.da)": [[75, "id74"], [75, "ot.da.LinearTransport"]], "mappingtransport (class in ot.da)": [[75, "id81"], [75, "ot.da.MappingTransport"]], "nearestbrenierpotential (class in ot.da)": [[75, "id88"], [75, "ot.da.NearestBrenierPotential"]], "sinkhornl1l2transport (class in ot.da)": [[75, "id96"], [75, "ot.da.SinkhornL1l2Transport"]], "sinkhornlpl1transport (class in ot.da)": [[75, "id104"], [75, "ot.da.SinkhornLpl1Transport"]], "sinkhorntransport (class in ot.da)": [[75, "id111"], [75, "ot.da.SinkhornTransport"]], "unbalancedsinkhorntransport (class in ot.da)": [[75, "id119"], [75, "ot.da.UnbalancedSinkhornTransport"]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[75, "id45"], [75, "ot.da.EMDLaplaceTransport.coupling_"]], "coupling_ (ot.da.emdtransport attribute)": [[75, "id52"], [75, "ot.da.EMDTransport.coupling_"]], "coupling_ (ot.da.jcpottransport attribute)": [[75, "id58"], [75, "ot.da.JCPOTTransport.coupling_"]], "coupling_ (ot.da.mappingtransport attribute)": [[75, "id82"], [75, "ot.da.MappingTransport.coupling_"]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[75, "id97"], [75, "ot.da.SinkhornL1l2Transport.coupling_"]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[75, "id105"], [75, "ot.da.SinkhornLpl1Transport.coupling_"]], "coupling_ (ot.da.sinkhorntransport attribute)": [[75, "id112"], [75, "ot.da.SinkhornTransport.coupling_"]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[75, "id120"], [75, "ot.da.UnbalancedSinkhornTransport.coupling_"]], "distribution_estimation_uniform() (in module ot.da)": [[75, "id126"], [75, "ot.da.distribution_estimation_uniform"]], "emd_laplace() (in module ot.da)": [[75, "id127"], [75, "ot.da.emd_laplace"]], "fit() (ot.da.basetransport method)": [[75, "id36"], [75, "ot.da.BaseTransport.fit"]], "fit() (ot.da.emdlaplacetransport method)": [[75, "id50"], [75, "ot.da.EMDLaplaceTransport.fit"]], "fit() (ot.da.emdtransport method)": [[75, "id56"], [75, "ot.da.EMDTransport.fit"]], "fit() (ot.da.jcpottransport method)": [[75, "id64"], [75, "ot.da.JCPOTTransport.fit"]], "fit() (ot.da.lineargwtransport method)": [[75, "id73"], [75, "ot.da.LinearGWTransport.fit"]], "fit() (ot.da.lineartransport method)": [[75, "id78"], [75, "ot.da.LinearTransport.fit"]], "fit() (ot.da.mappingtransport method)": [[75, "id86"], [75, "ot.da.MappingTransport.fit"]], "fit() (ot.da.nearestbrenierpotential method)": [[75, "id91"], [75, "ot.da.NearestBrenierPotential.fit"]], "fit() (ot.da.sinkhornl1l2transport method)": [[75, "id103"], [75, "ot.da.SinkhornL1l2Transport.fit"]], "fit() (ot.da.sinkhornlpl1transport method)": [[75, "id110"], [75, "ot.da.SinkhornLpl1Transport.fit"]], "fit() (ot.da.sinkhorntransport method)": [[75, "id118"], [75, "ot.da.SinkhornTransport.fit"]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[75, "id125"], [75, "ot.da.UnbalancedSinkhornTransport.fit"]], "fit_transform() (ot.da.basetransport method)": [[75, "id37"], [75, "ot.da.BaseTransport.fit_transform"]], "inverse_transform() (ot.da.basetransport method)": [[75, "id38"], [75, "ot.da.BaseTransport.inverse_transform"]], "inverse_transform() (ot.da.lineartransport method)": [[75, "id79"], [75, "ot.da.LinearTransport.inverse_transform"]], "inverse_transform_labels() (ot.da.basetransport method)": [[75, "id39"], [75, "ot.da.BaseTransport.inverse_transform_labels"]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[75, "id65"], [75, "ot.da.JCPOTTransport.inverse_transform_labels"]], "log_ (ot.da.jcpottransport attribute)": [[75, "id60"], [75, "ot.da.JCPOTTransport.log_"]], "log_ (ot.da.mappingtransport attribute)": [[75, "id84"], [75, "ot.da.MappingTransport.log_"]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[75, "id98"], [75, "ot.da.SinkhornL1l2Transport.log_"]], "log_ (ot.da.sinkhorntransport attribute)": [[75, "id113"], [75, "ot.da.SinkhornTransport.log_"]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[75, "id121"], [75, "ot.da.UnbalancedSinkhornTransport.log_"]], "mapping_ (ot.da.mappingtransport attribute)": [[75, "id83"], [75, "ot.da.MappingTransport.mapping_"]], "ot.da": [[75, "module-ot.da"]], "proportions_ (ot.da.jcpottransport attribute)": [[75, "id59"], [75, "ot.da.JCPOTTransport.proportions_"]], "sinkhorn_l1l2_gl() (in module ot.da)": [[75, "id131"], [75, "ot.da.sinkhorn_l1l2_gl"]], "sinkhorn_lpl1_mm() (in module ot.da)": [[75, "id135"], [75, "ot.da.sinkhorn_lpl1_mm"]], "transform() (ot.da.basetransport method)": [[75, "id40"], [75, "ot.da.BaseTransport.transform"]], "transform() (ot.da.jcpottransport method)": [[75, "id66"], [75, "ot.da.JCPOTTransport.transform"]], "transform() (ot.da.lineartransport method)": [[75, "id80"], [75, "ot.da.LinearTransport.transform"]], "transform() (ot.da.mappingtransport method)": [[75, "id87"], [75, "ot.da.MappingTransport.transform"]], "transform() (ot.da.nearestbrenierpotential method)": [[75, "id93"], [75, "ot.da.NearestBrenierPotential.transform"]], "transform_labels() (ot.da.basetransport method)": [[75, "id41"], [75, "ot.da.BaseTransport.transform_labels"]], "transform_labels() (ot.da.jcpottransport method)": [[75, "id67"], [75, "ot.da.JCPOTTransport.transform_labels"]], "make_1d_gauss() (in module ot.datasets)": [[76, "id0"], [76, "ot.datasets.make_1D_gauss"]], "make_2d_samples_gauss() (in module ot.datasets)": [[76, "id1"], [76, "ot.datasets.make_2D_samples_gauss"]], "make_data_classif() (in module ot.datasets)": [[76, "id2"], [76, "ot.datasets.make_data_classif"]], "ot.datasets": [[76, "module-ot.datasets"]], "dist() (in module ot.dr)": [[77, "id0"], [77, "ot.dr.dist"]], "ewca() (in module ot.dr)": [[77, "id4"], [77, "ot.dr.ewca"]], "fda() (in module ot.dr)": [[77, "id7"], [77, "ot.dr.fda"]], "logsumexp() (in module ot.dr)": [[77, "id8"], [77, "ot.dr.logsumexp"]], "ot.dr": [[77, "module-ot.dr"]], "projection_robust_wasserstein() (in module ot.dr)": [[77, "id9"], [77, "ot.dr.projection_robust_wasserstein"]], "sinkhorn() (in module ot.dr)": [[77, "id12"], [77, "ot.dr.sinkhorn"]], "sinkhorn_log() (in module ot.dr)": [[77, "id13"], [77, "ot.dr.sinkhorn_log"]], "split_classes() (in module ot.dr)": [[77, "id14"], [77, "ot.dr.split_classes"]], "wda() (in module ot.dr)": [[77, "id15"], [77, "ot.dr.wda"]], "factored_optimal_transport() (in module ot.factored)": [[78, "id0"], [78, "ot.factored.factored_optimal_transport"]], "ot.factored": [[78, "module-ot.factored"]], "bures_wasserstein_distance() (in module ot.gaussian)": [[79, "id0"], [79, "ot.gaussian.bures_wasserstein_distance"]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[79, "id15"], [79, "ot.gaussian.bures_wasserstein_mapping"]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[79, "id19"], [79, "ot.gaussian.empirical_bures_wasserstein_distance"]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[79, "id22"], [79, "ot.gaussian.empirical_bures_wasserstein_mapping"]], "empirical_gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[79, "id26"], [79, "ot.gaussian.empirical_gaussian_gromov_wasserstein_distance"]], "empirical_gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[79, "id29"], [79, "ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping"]], "gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[79, "id31"], [79, "ot.gaussian.gaussian_gromov_wasserstein_distance"]], "gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[79, "id34"], [79, "ot.gaussian.gaussian_gromov_wasserstein_mapping"]], "ot.gaussian": [[79, "module-ot.gaussian"]], "fgw_distance_to_templates() (in module ot.gnn)": [[80, "ot.gnn.FGW_distance_to_templates"]], "tfgwpooling (class in ot.gnn)": [[80, "ot.gnn.TFGWPooling"]], "twpooling (class in ot.gnn)": [[80, "ot.gnn.TWPooling"]], "forward() (ot.gnn.tfgwpooling method)": [[80, "ot.gnn.TFGWPooling.forward"]], "forward() (ot.gnn.twpooling method)": [[80, "ot.gnn.TWPooling.forward"]], "ot.gnn": [[80, "module-ot.gnn"]], "wasserstein_distance_to_templates() (in module ot.gnn)": [[80, "ot.gnn.wasserstein_distance_to_templates"]], "gw_distance_estimation() (in module ot.gromov)": [[81, "ot.gromov.GW_distance_estimation"]], "entropic_fused_gromov_barycenters() (in module ot.gromov)": [[81, "ot.gromov.entropic_fused_gromov_barycenters"]], "entropic_fused_gromov_wasserstein() (in module ot.gromov)": [[81, "ot.gromov.entropic_fused_gromov_wasserstein"]], "entropic_fused_gromov_wasserstein2() (in module ot.gromov)": [[81, "ot.gromov.entropic_fused_gromov_wasserstein2"]], "entropic_gromov_barycenters() (in module ot.gromov)": [[81, "ot.gromov.entropic_gromov_barycenters"]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[81, "ot.gromov.entropic_gromov_wasserstein"]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[81, "ot.gromov.entropic_gromov_wasserstein2"]], "entropic_semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[81, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein"]], "entropic_semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[81, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein2"]], "entropic_semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[81, "ot.gromov.entropic_semirelaxed_gromov_wasserstein"]], "entropic_semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[81, "ot.gromov.entropic_semirelaxed_gromov_wasserstein2"]], "fgw_barycenters() (in module ot.gromov)": [[81, "ot.gromov.fgw_barycenters"]], "fused_gromov_wasserstein() (in module ot.gromov)": [[81, "ot.gromov.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[81, "ot.gromov.fused_gromov_wasserstein2"]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[81, "ot.gromov.fused_gromov_wasserstein_dictionary_learning"]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[81, "ot.gromov.fused_gromov_wasserstein_linear_unmixing"]], "gromov_barycenters() (in module ot.gromov)": [[81, "ot.gromov.gromov_barycenters"]], "gromov_wasserstein() (in module ot.gromov)": [[81, "ot.gromov.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot.gromov)": [[81, "ot.gromov.gromov_wasserstein2"]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[81, "ot.gromov.gromov_wasserstein_dictionary_learning"]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[81, "ot.gromov.gromov_wasserstein_linear_unmixing"]], "gwggrad() (in module ot.gromov)": [[81, "ot.gromov.gwggrad"]], "gwloss() (in module ot.gromov)": [[81, "ot.gromov.gwloss"]], "init_matrix() (in module ot.gromov)": [[81, "ot.gromov.init_matrix"]], "init_matrix_semirelaxed() (in module ot.gromov)": [[81, "ot.gromov.init_matrix_semirelaxed"]], "ot.gromov": [[81, "module-ot.gromov"]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[81, "ot.gromov.pointwise_gromov_wasserstein"]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[81, "ot.gromov.sampled_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[81, "ot.gromov.semirelaxed_fused_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[81, "ot.gromov.semirelaxed_fused_gromov_wasserstein2"]], "semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[81, "ot.gromov.semirelaxed_gromov_wasserstein"]], "semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[81, "ot.gromov.semirelaxed_gromov_wasserstein2"]], "solve_gromov_linesearch() (in module ot.gromov)": [[81, "ot.gromov.solve_gromov_linesearch"]], "solve_semirelaxed_gromov_linesearch() (in module ot.gromov)": [[81, "ot.gromov.solve_semirelaxed_gromov_linesearch"]], "tensor_product() (in module ot.gromov)": [[81, "ot.gromov.tensor_product"]], "update_feature_matrix() (in module ot.gromov)": [[81, "ot.gromov.update_feature_matrix"]], "update_kl_loss() (in module ot.gromov)": [[81, "ot.gromov.update_kl_loss"]], "update_square_loss() (in module ot.gromov)": [[81, "ot.gromov.update_square_loss"]], "barycenter() (in module ot.lp)": [[82, "ot.lp.barycenter"]], "binary_search_circle() (in module ot.lp)": [[82, "ot.lp.binary_search_circle"]], "center_ot_dual() (in module ot.lp)": [[82, "ot.lp.center_ot_dual"]], "check_number_threads() (in module ot.lp)": [[82, "ot.lp.check_number_threads"]], "dmmot_monge_1dgrid_loss() (in module ot.lp)": [[82, "ot.lp.dmmot_monge_1dgrid_loss"]], "dmmot_monge_1dgrid_optimize() (in module ot.lp)": [[82, "ot.lp.dmmot_monge_1dgrid_optimize"]], "emd() (in module ot.lp)": [[82, "id0"], [82, "ot.lp.emd"]], "emd2() (in module ot.lp)": [[82, "id17"], [82, "ot.lp.emd2"]], "emd2_1d() (in module ot.lp)": [[82, "ot.lp.emd2_1d"]], "emd_1d() (in module ot.lp)": [[82, "ot.lp.emd_1d"]], "estimate_dual_null_weights() (in module ot.lp)": [[82, "ot.lp.estimate_dual_null_weights"]], "free_support_barycenter() (in module ot.lp)": [[82, "id24"], [82, "ot.lp.free_support_barycenter"]], "generalized_free_support_barycenter() (in module ot.lp)": [[82, "id28"], [82, "ot.lp.generalized_free_support_barycenter"]], "ot.lp": [[82, "module-ot.lp"]], "semidiscrete_wasserstein2_unif_circle() (in module ot.lp)": [[82, "ot.lp.semidiscrete_wasserstein2_unif_circle"]], "wasserstein_1d() (in module ot.lp)": [[82, "ot.lp.wasserstein_1d"]], "wasserstein_circle() (in module ot.lp)": [[82, "ot.lp.wasserstein_circle"]], "joint_ot_mapping_kernel() (in module ot.mapping)": [[83, "id0"], [83, "ot.mapping.joint_OT_mapping_kernel"]], "joint_ot_mapping_linear() (in module ot.mapping)": [[83, "id8"], [83, "ot.mapping.joint_OT_mapping_linear"]], "nearest_brenier_potential_fit() (in module ot.mapping)": [[83, "id11"], [83, "ot.mapping.nearest_brenier_potential_fit"]], "nearest_brenier_potential_predict_bounds() (in module ot.mapping)": [[83, "id13"], [83, "ot.mapping.nearest_brenier_potential_predict_bounds"]], "ot.mapping": [[83, "module-ot.mapping"]], "cg() (in module ot.optim)": [[84, "id0"], [84, "ot.optim.cg"]], "gcg() (in module ot.optim)": [[84, "id13"], [84, "ot.optim.gcg"]], "generic_conditional_gradient() (in module ot.optim)": [[84, "id17"], [84, "ot.optim.generic_conditional_gradient"]], "line_search_armijo() (in module ot.optim)": [[84, "id23"], [84, "ot.optim.line_search_armijo"]], "ot.optim": [[84, "module-ot.optim"]], "semirelaxed_cg() (in module ot.optim)": [[84, "id24"], [84, "ot.optim.semirelaxed_cg"]], "solve_1d_linesearch_quad() (in module ot.optim)": [[84, "id27"], [84, "ot.optim.solve_1d_linesearch_quad"]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[85, "id0"], [85, "ot.partial.entropic_partial_gromov_wasserstein"]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[85, "id17"], [85, "ot.partial.entropic_partial_gromov_wasserstein2"]], "entropic_partial_wasserstein() (in module ot.partial)": [[85, "id21"], [85, "ot.partial.entropic_partial_wasserstein"]], "gwgrad_partial() (in module ot.partial)": [[85, "id24"], [85, "ot.partial.gwgrad_partial"]], "gwloss_partial() (in module ot.partial)": [[85, "id27"], [85, "ot.partial.gwloss_partial"]], "ot.partial": [[85, "module-ot.partial"]], "partial_gromov_wasserstein() (in module ot.partial)": [[85, "id28"], [85, "ot.partial.partial_gromov_wasserstein"]], "partial_gromov_wasserstein2() (in module ot.partial)": [[85, "id31"], [85, "ot.partial.partial_gromov_wasserstein2"]], "partial_wasserstein() (in module ot.partial)": [[85, "id34"], [85, "ot.partial.partial_wasserstein"]], "partial_wasserstein2() (in module ot.partial)": [[85, "id37"], [85, "ot.partial.partial_wasserstein2"]], "partial_wasserstein_lagrange() (in module ot.partial)": [[85, "id40"], [85, "ot.partial.partial_wasserstein_lagrange"]], "ot.plot": [[86, "module-ot.plot"]], "plot1d_mat() (in module ot.plot)": [[86, "id0"], [86, "ot.plot.plot1D_mat"]], "plot2d_samples_mat() (in module ot.plot)": [[86, "id1"], [86, "ot.plot.plot2D_samples_mat"]], "complement_schur() (in module ot.regpath)": [[87, "id0"], [87, "ot.regpath.complement_schur"]], "compute_next_removal() (in module ot.regpath)": [[87, "id12"], [87, "ot.regpath.compute_next_removal"]], "compute_transport_plan() (in module ot.regpath)": [[87, "id15"], [87, "ot.regpath.compute_transport_plan"]], "construct_augmented_h() (in module ot.regpath)": [[87, "id18"], [87, "ot.regpath.construct_augmented_H"]], "fully_relaxed_path() (in module ot.regpath)": [[87, "id19"], [87, "ot.regpath.fully_relaxed_path"]], "ot.regpath": [[87, "module-ot.regpath"]], "ot_next_gamma() (in module ot.regpath)": [[87, "id21"], [87, "ot.regpath.ot_next_gamma"]], "recast_ot_as_lasso() (in module ot.regpath)": [[87, "id23"], [87, "ot.regpath.recast_ot_as_lasso"]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[87, "id25"], [87, "ot.regpath.recast_semi_relaxed_as_lasso"]], "regularization_path() (in module ot.regpath)": [[87, "id26"], [87, "ot.regpath.regularization_path"]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[87, "id28"], [87, "ot.regpath.semi_relaxed_next_gamma"]], "semi_relaxed_path() (in module ot.regpath)": [[87, "id30"], [87, "ot.regpath.semi_relaxed_path"]], "get_random_projections() (in module ot.sliced)": [[88, "id0"], [88, "ot.sliced.get_random_projections"]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[88, "id5"], [88, "ot.sliced.max_sliced_wasserstein_distance"]], "ot.sliced": [[88, "module-ot.sliced"]], "sliced_wasserstein_distance() (in module ot.sliced)": [[88, "id7"], [88, "ot.sliced.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[88, "id9"], [88, "ot.sliced.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[88, "id11"], [88, "ot.sliced.sliced_wasserstein_sphere_unif"]], "negentropy (class in ot.smooth)": [[89, "id0"], [89, "ot.smooth.NegEntropy"]], "omega() (ot.smooth.negentropy method)": [[89, "id7"], [89, "ot.smooth.NegEntropy.Omega"]], "omega() (ot.smooth.regularization method)": [[89, "id11"], [89, "ot.smooth.Regularization.Omega"]], "omega() (ot.smooth.sparsityconstrained method)": [[89, "id15"], [89, "ot.smooth.SparsityConstrained.Omega"]], "omega() (ot.smooth.squaredl2 method)": [[89, "id19"], [89, "ot.smooth.SquaredL2.Omega"]], "regularization (class in ot.smooth)": [[89, "id10"], [89, "ot.smooth.Regularization"]], "sparsityconstrained (class in ot.smooth)": [[89, "id14"], [89, "ot.smooth.SparsityConstrained"]], "squaredl2 (class in ot.smooth)": [[89, "id18"], [89, "ot.smooth.SquaredL2"]], "delta_omega() (ot.smooth.negentropy method)": [[89, "id8"], [89, "ot.smooth.NegEntropy.delta_Omega"]], "delta_omega() (ot.smooth.regularization method)": [[89, "id12"], [89, "ot.smooth.Regularization.delta_Omega"]], "delta_omega() (ot.smooth.sparsityconstrained method)": [[89, "id16"], [89, "ot.smooth.SparsityConstrained.delta_Omega"]], "delta_omega() (ot.smooth.squaredl2 method)": [[89, "id20"], [89, "ot.smooth.SquaredL2.delta_Omega"]], "dual_obj_grad() (in module ot.smooth)": [[89, "id22"], [89, "ot.smooth.dual_obj_grad"]], "get_plan_from_dual() (in module ot.smooth)": [[89, "id23"], [89, "ot.smooth.get_plan_from_dual"]], "get_plan_from_semi_dual() (in module ot.smooth)": [[89, "id24"], [89, "ot.smooth.get_plan_from_semi_dual"]], "max_omega() (ot.smooth.negentropy method)": [[89, "id9"], [89, "ot.smooth.NegEntropy.max_Omega"]], "max_omega() (ot.smooth.regularization method)": [[89, "id13"], [89, "ot.smooth.Regularization.max_Omega"]], "max_omega() (ot.smooth.sparsityconstrained method)": [[89, "id17"], [89, "ot.smooth.SparsityConstrained.max_Omega"]], "max_omega() (ot.smooth.squaredl2 method)": [[89, "id21"], [89, "ot.smooth.SquaredL2.max_Omega"]], "ot.smooth": [[89, "module-ot.smooth"]], "projection_simplex() (in module ot.smooth)": [[89, "id25"], [89, "ot.smooth.projection_simplex"]], "semi_dual_obj_grad() (in module ot.smooth)": [[89, "id26"], [89, "ot.smooth.semi_dual_obj_grad"]], "smooth_ot_dual() (in module ot.smooth)": [[89, "id27"], [89, "ot.smooth.smooth_ot_dual"]], "smooth_ot_semi_dual() (in module ot.smooth)": [[89, "id32"], [89, "ot.smooth.smooth_ot_semi_dual"]], "solve_dual() (in module ot.smooth)": [[89, "id37"], [89, "ot.smooth.solve_dual"]], "solve_semi_dual() (in module ot.smooth)": [[89, "id38"], [89, "ot.smooth.solve_semi_dual"]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[90, "id0"], [90, "ot.stochastic.averaged_sgd_entropic_transport"]], "batch_grad_dual() (in module ot.stochastic)": [[90, "id14"], [90, "ot.stochastic.batch_grad_dual"]], "c_transform_entropic() (in module ot.stochastic)": [[90, "id16"], [90, "ot.stochastic.c_transform_entropic"]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[90, "id18"], [90, "ot.stochastic.coordinate_grad_semi_dual"]], "loss_dual_entropic() (in module ot.stochastic)": [[90, "id20"], [90, "ot.stochastic.loss_dual_entropic"]], "loss_dual_quadratic() (in module ot.stochastic)": [[90, "id22"], [90, "ot.stochastic.loss_dual_quadratic"]], "ot.stochastic": [[90, "module-ot.stochastic"]], "plan_dual_entropic() (in module ot.stochastic)": [[90, "id24"], [90, "ot.stochastic.plan_dual_entropic"]], "plan_dual_quadratic() (in module ot.stochastic)": [[90, "id26"], [90, "ot.stochastic.plan_dual_quadratic"]], "sag_entropic_transport() (in module ot.stochastic)": [[90, "id28"], [90, "ot.stochastic.sag_entropic_transport"]], "sgd_entropic_regularization() (in module ot.stochastic)": [[90, "id30"], [90, "ot.stochastic.sgd_entropic_regularization"]], "solve_dual_entropic() (in module ot.stochastic)": [[90, "id32"], [90, "ot.stochastic.solve_dual_entropic"]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[90, "id34"], [90, "ot.stochastic.solve_semi_dual_entropic"]], "barycenter_unbalanced() (in module ot.unbalanced)": [[91, "id0"], [91, "ot.unbalanced.barycenter_unbalanced"]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[91, "id25"], [91, "ot.unbalanced.barycenter_unbalanced_sinkhorn"]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[91, "id29"], [91, "ot.unbalanced.barycenter_unbalanced_stabilized"]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[91, "id33"], [91, "ot.unbalanced.lbfgsb_unbalanced"]], "mm_unbalanced() (in module ot.unbalanced)": [[91, "id35"], [91, "ot.unbalanced.mm_unbalanced"]], "mm_unbalanced2() (in module ot.unbalanced)": [[91, "id38"], [91, "ot.unbalanced.mm_unbalanced2"]], "ot.unbalanced": [[91, "module-ot.unbalanced"]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[91, "id40"], [91, "ot.unbalanced.sinkhorn_knopp_unbalanced"]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[91, "id44"], [91, "ot.unbalanced.sinkhorn_stabilized_unbalanced"]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[91, "id48"], [91, "ot.unbalanced.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[91, "id54"], [91, "ot.unbalanced.sinkhorn_unbalanced2"]], "baseestimator (class in ot.utils)": [[92, "id12"], [92, "ot.utils.BaseEstimator"]], "lazytensor (class in ot.utils)": [[92, "id15"], [92, "ot.utils.LazyTensor"]], "otresult (class in ot.utils)": [[92, "id16"], [92, "ot.utils.OTResult"]], "undefinedparameter": [[92, "ot.utils.UndefinedParameter"]], "a_to_b (ot.utils.otresult property)": [[92, "id29"], [92, "ot.utils.OTResult.a_to_b"]], "b_to_a (ot.utils.otresult property)": [[92, "id30"], [92, "ot.utils.OTResult.b_to_a"]], "check_params() (in module ot.utils)": [[92, "id45"], [92, "ot.utils.check_params"]], "check_random_state() (in module ot.utils)": [[92, "id46"], [92, "ot.utils.check_random_state"]], "citation (ot.utils.otresult property)": [[92, "id31"], [92, "ot.utils.OTResult.citation"]], "clean_zeros() (in module ot.utils)": [[92, "id47"], [92, "ot.utils.clean_zeros"]], "cost_normalization() (in module ot.utils)": [[92, "id48"], [92, "ot.utils.cost_normalization"]], "deprecated (class in ot.utils)": [[92, "id49"], [92, "ot.utils.deprecated"]], "dist() (in module ot.utils)": [[92, "id50"], [92, "ot.utils.dist"]], "dist0() (in module ot.utils)": [[92, "id51"], [92, "ot.utils.dist0"]], "dots() (in module ot.utils)": [[92, "id52"], [92, "ot.utils.dots"]], "euclidean_distances() (in module ot.utils)": [[92, "id53"], [92, "ot.utils.euclidean_distances"]], "get_coordinate_circle() (in module ot.utils)": [[92, "id54"], [92, "ot.utils.get_coordinate_circle"]], "get_lowrank_lazytensor() (in module ot.utils)": [[92, "id55"], [92, "ot.utils.get_lowrank_lazytensor"]], "get_parameter_pair() (in module ot.utils)": [[92, "id56"], [92, "ot.utils.get_parameter_pair"]], "get_params() (ot.utils.baseestimator method)": [[92, "id13"], [92, "ot.utils.BaseEstimator.get_params"]], "is_all_finite() (in module ot.utils)": [[92, "id57"], [92, "ot.utils.is_all_finite"]], "kernel() (in module ot.utils)": [[92, "id58"], [92, "ot.utils.kernel"]], "label_normalization() (in module ot.utils)": [[92, "id59"], [92, "ot.utils.label_normalization"]], "laplacian() (in module ot.utils)": [[92, "id60"], [92, "ot.utils.laplacian"]], "lazy_plan (ot.utils.otresult attribute)": [[92, "id25"], [92, "ot.utils.OTResult.lazy_plan"]], "lazy_plan (ot.utils.otresult property)": [[92, "id0"], [92, "id32"]], "list_to_array() (in module ot.utils)": [[92, "id61"], [92, "ot.utils.list_to_array"]], "marginal_a (ot.utils.otresult attribute)": [[92, "id27"], [92, "ot.utils.OTResult.marginal_a"]], "marginal_a (ot.utils.otresult property)": [[92, "id1"], [92, "id33"]], "marginal_b (ot.utils.otresult attribute)": [[92, "id28"], [92, "ot.utils.OTResult.marginal_b"]], "marginal_b (ot.utils.otresult property)": [[92, "id2"], [92, "id34"]], "marginals (ot.utils.otresult attribute)": [[92, "id26"], [92, "ot.utils.OTResult.marginals"]], "marginals (ot.utils.otresult property)": [[92, "id3"], [92, "id35"]], "ot.utils": [[92, "module-ot.utils"]], "parmap() (in module ot.utils)": [[92, "id62"], [92, "ot.utils.parmap"]], "plan (ot.utils.otresult attribute)": [[92, "id23"], [92, "ot.utils.OTResult.plan"]], "plan (ot.utils.otresult property)": [[92, "id36"], [92, "id4"]], "potential_a (ot.utils.otresult attribute)": [[92, "id18"], [92, "ot.utils.OTResult.potential_a"]], "potential_a (ot.utils.otresult property)": [[92, "id37"], [92, "id5"]], "potential_b (ot.utils.otresult attribute)": [[92, "id19"], [92, "ot.utils.OTResult.potential_b"]], "potential_b (ot.utils.otresult property)": [[92, "id38"], [92, "id6"]], "potentials (ot.utils.otresult attribute)": [[92, "id17"], [92, "ot.utils.OTResult.potentials"]], "potentials (ot.utils.otresult property)": [[92, "id39"], [92, "id7"]], "proj_simplex() (in module ot.utils)": [[92, "id63"], [92, "ot.utils.proj_simplex"]], "projection_sparse_simplex() (in module ot.utils)": [[92, "id64"], [92, "ot.utils.projection_sparse_simplex"]], "reduce_lazytensor() (in module ot.utils)": [[92, "id65"], [92, "ot.utils.reduce_lazytensor"]], "set_params() (ot.utils.baseestimator method)": [[92, "id14"], [92, "ot.utils.BaseEstimator.set_params"]], "sparse_plan (ot.utils.otresult attribute)": [[92, "id24"], [92, "ot.utils.OTResult.sparse_plan"]], "sparse_plan (ot.utils.otresult property)": [[92, "id40"], [92, "id8"]], "status (ot.utils.otresult property)": [[92, "id41"], [92, "ot.utils.OTResult.status"]], "tic() (in module ot.utils)": [[92, "id66"], [92, "ot.utils.tic"]], "toc() (in module ot.utils)": [[92, "id67"], [92, "ot.utils.toc"]], "toq() (in module ot.utils)": [[92, "id68"], [92, "ot.utils.toq"]], "unif() (in module ot.utils)": [[92, "id69"], [92, "ot.utils.unif"]], "value (ot.utils.otresult attribute)": [[92, "id20"], [92, "ot.utils.OTResult.value"]], "value (ot.utils.otresult property)": [[92, "id42"], [92, "id9"]], "value_linear (ot.utils.otresult attribute)": [[92, "id21"], [92, "ot.utils.OTResult.value_linear"]], "value_linear (ot.utils.otresult property)": [[92, "id10"], [92, "id43"]], "value_quad (ot.utils.otresult attribute)": [[92, "id22"], [92, "ot.utils.OTResult.value_quad"]], "value_quad (ot.utils.otresult property)": [[92, "id11"], [92, "id44"]], "ot.weak": [[93, "module-ot.weak"]], "weak_optimal_transport() (in module ot.weak)": [[93, "id0"], [93, "ot.weak.weak_optimal_transport"]]}})