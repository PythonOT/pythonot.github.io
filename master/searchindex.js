Search.setIndex({"alltitles": {"(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[48, null]], "0.1.10": [[125, "id43"]], "0.1.11": [[125, "id42"]], "0.1.3": [[125, "id46"]], "0.1.7": [[125, "id45"]], "0.1.9": [[125, "id44"]], "0.3": [[125, "id41"]], "0.3.1": [[125, "id40"]], "0.4": [[125, "id37"]], "0.5.0": [[125, "id34"]], "0.6.0": [[125, "id31"]], "0.7.0": [[125, "id29"]], "0.8.0": [[125, "id26"]], "0.8.1": [[125, "id23"]], "0.8.1.0": [[125, "id21"]], "0.8.2": [[125, "id18"]], "0.9.1": [[125, "id15"]], "0.9.2": [[125, "id12"]], "0.9.3": [[125, "id10"]], "0.9.4": [[125, "id7"]], "0.9.5": [[125, "id4"]], "0.9.6": [[125, "id1"]], "0.9.6.post1": [[125, "post1"]], "0.9.7dev": [[125, "dev"]], "1D Unbalanced optimal transport": [[88, null]], "1D Wasserstein barycenter demo": [[14, null]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[89, null]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[15, null]], "2D data example": [[78, "d-data-example"]], "2D examples of exact and entropic unbalanced optimal transport": [[94, null]], "2D free support Sinkhorn barycenters of distributions": [[20, null]], "2D free support Wasserstein barycenters of distributions": [[18, null]], "API and modules": [[0, null]], "Acknowledgements": [[124, "acknowledgements"]], "Acknowledgments": [[98, "acknowledgments"]], "Add node features": [[42, "add-node-features"], [51, "add-node-features"]], "Algorithm": [[72, "algorithm"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[127, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Anaconda installation with conda-forge": [[124, "anaconda-installation-with-conda-forge"]], "Animate trajectories of generated samples along iteration": [[7, "animate-trajectories-of-generated-samples-along-iteration"], [11, "animate-trajectories-of-generated-samples-along-iteration"]], "Animate trajectories of the barycenter along gradient descent": [[6, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Animate trajectories of the gradient flow along iteration": [[6, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Animation of the regpath for UOT l2": [[93, "animation-of-the-regpath-for-uot-l2"]], "Animation of the regpath for semi-relaxed UOT l2": [[93, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "Attribution": [[96, "attribution"]], "Barycenter computation": [[14, "barycenter-computation"], [41, "barycenter-computation"], [47, "barycenter-computation"], [89, "barycenter-computation"]], "Barycenter computation and plot": [[22, "barycenter-computation-and-plot"]], "Barycenter computation and visualization": [[16, "barycenter-computation-and-visualization"], [17, "barycenter-computation-and-visualization"]], "Barycenter of labeled graphs with FGW": [[41, null]], "Barycenters with fixed support": [[127, "barycenters-with-fixed-support"]], "Barycenters with free support": [[127, "barycenters-with-free-support"]], "Barycentric interpolation": [[14, "barycentric-interpolation"], [89, "barycentric-interpolation"]], "Breaking change": [[125, "breaking-change"]], "Classes": [[99, "classes"], [103, "classes"], [119, "classes"], [122, "classes"]], "Closed issues": [[125, "closed-issues"], [125, "id3"], [125, "id6"], [125, "id9"], [125, "id11"], [125, "id14"], [125, "id17"], [125, "id20"], [125, "id22"], [125, "id25"], [125, "id28"], [125, "id30"], [125, "id33"], [125, "id36"], [125, "id39"]], "Code of conduct": [[96, null]], "Community clustering with uniform and estimated weights": [[4, "community-clustering-with-uniform-and-estimated-weights"]], "Compare Barycenters in both methods": [[67, "compare-barycenters-in-both-methods"], [67, "id1"]], "Compare OT plans": [[59, "compare-ot-plans"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[82, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Compare the results with the Sinkhorn algorithm": [[70, "compare-the-results-with-the-sinkhorn-algorithm"]], "Compare with Sinkhorn": [[59, "compare-with-sinkhorn"]], "Compare with original distributions": [[67, "compare-with-original-distributions"]], "Comparing Computation Time": [[5, "comparing-computation-time"]], "Comparing all OT plans": [[78, "comparing-all-ot-plans"]], "Comparison of Fused Gromov-Wasserstein solvers": [[44, null]], "Computation times": [[12, null], [24, null], [35, null], [39, null], [53, null], [60, null], [71, null], [80, null], [86, null], [95, null], [126, null]], "Compute 2-Wasserstein Plan": [[83, "compute-2-wasserstein-plan"]], "Compute Bures-Wasserstein barycenters and plot them": [[21, "compute-bures-wasserstein-barycenters-and-plot-them"]], "Compute EMD": [[74, "compute-emd"]], "Compute EMD for the different losses": [[76, "compute-emd-for-the-different-losses"]], "Compute EWCA": [[63, "compute-ewca"]], "Compute Expected Sliced Plan": [[83, "compute-expected-sliced-plan"]], "Compute FGW/GW": [[43, "compute-fgw-gw"]], "Compute Factored OT and exact OT solutions": [[56, "compute-factored-ot-and-exact-ot-solutions"]], "Compute Fisher Discriminant Analysis": [[65, "compute-fisher-discriminant-analysis"]], "Compute GW with scalable stochastic methods with any loss function": [[46, "compute-gw-with-scalable-stochastic-methods-with-any-loss-function"]], "Compute Gromov-Wasserstein plans and distance": [[46, "compute-gromov-wasserstein-plans-and-distance"]], "Compute Sinkhorn": [[74, "compute-sinkhorn"]], "Compute Sinkhorn for the different losses": [[76, "compute-sinkhorn-for-the-different-losses"]], "Compute Wasserstein Discriminant Analysis": [[65, "compute-wasserstein-discriminant-analysis"]], "Compute Weak OT and exact OT solutions": [[66, "compute-weak-ot-and-exact-ot-solutions"]], "Compute distance kernels, normalize them and then display": [[46, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute entropic kl-regularized UOT with Sinkhorn and Translation Invariant Sinkhorn": [[90, "compute-entropic-kl-regularized-uot-with-sinkhorn-and-translation-invariant-sinkhorn"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[94, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Compute free support Wasserstein barycenter": [[18, "compute-free-support-wasserstein-barycenter"]], "Compute min-Pivot Sliced permutation": [[83, "compute-min-pivot-sliced-permutation"]], "Compute partial Gromov-Wasserstein plans and distance": [[92, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Compute partial Wasserstein plans and distance": [[92, "compute-partial-wasserstein-plans-and-distance"]], "Compute semi-relaxed and fully relaxed regularization paths": [[93, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Compute the Nystr\u00f6m approximation of the Gaussian kernel": [[59, "compute-the-nystrom-approximation-of-the-gaussian-kernel"]], "Compute the Sliced Wasserstein Barycenter": [[6, "compute-the-sliced-wasserstein-barycenter"]], "Compute the Transportation Matrix for the Dual Problem": [[70, "compute-the-transportation-matrix-for-the-dual-problem"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[70, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Compute the quantized Fused Gromov-Wasserstein distance between samples using the wrapper": [[50, "compute-the-quantized-fused-gromov-wasserstein-distance-between-samples-using-the-wrapper"]], "Compute the quantized Gromov-Wasserstein distance using the wrapper": [[50, "compute-the-quantized-gromov-wasserstein-distance-using-the-wrapper"]], "Compute their Fused Gromov-Wasserstein distances": [[44, "compute-their-fused-gromov-wasserstein-distances"]], "Compute their entropic-regularized semi-relaxed Gromov-Wasserstein divergences": [[42, "compute-their-entropic-regularized-semi-relaxed-gromov-wasserstein-divergences"]], "Compute their quantized Gromov-Wasserstein distance without using the wrapper": [[50, "compute-their-quantized-gromov-wasserstein-distance-without-using-the-wrapper"]], "Compute their semi-relaxed Fused Gromov-Wasserstein divergences": [[42, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"], [51, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"]], "Compute their semi-relaxed Gromov-Wasserstein divergences": [[51, "compute-their-semi-relaxed-gromov-wasserstein-divergences"]], "Computing 1-dimensional Barycenters via d-MMOT": [[67, null]], "Computing Wasserstein distance": [[127, "computing-wasserstein-distance"]], "Computing the Cost Matrices": [[5, "computing-the-cost-matrices"]], "Contents": [[124, "contents"]], "Continuous OT plan estimation with Pytorch": [[8, null]], "Contributing to POT": [[97, null]], "Contributions and code of conduct": [[124, "contributions-and-code-of-conduct"]], "Contributors": [[98, null], [98, "contributors"]], "Convert data to torch tensors": [[3, "convert-data-to-torch-tensors"], [8, "convert-data-to-torch-tensors"]], "Convolutional Wasserstein Barycenter example": [[16, null]], "Cost matrix": [[72, "cost-matrix"]], "Create structure matrices and across-feature distance matrix": [[43, "create-structure-matrices-and-across-feature-distance-matrix"]], "Creators and Maintainers": [[98, "creators-and-maintainers"]], "Data for logo": [[68, "data-for-logo"]], "Data generation": [[3, "data-generation"], [7, "data-generation"], [8, "data-generation"], [11, "data-generation"]], "Data preparation": [[16, "data-preparation"], [47, "data-preparation"]], "Dataset 1 : Plot OT Matrices": [[75, "dataset-1-plot-ot-matrices"]], "Dataset 1 : uniform sampling": [[75, "dataset-1-uniform-sampling"]], "Dataset 2 : Partial circle": [[75, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[75, "dataset-2-plot-ot-matrices"]], "Debiased Sinkhorn barycenter demo": [[17, null]], "Debiased barycenter of 1D Gaussians": [[17, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[17, "debiased-barycenter-of-2d-images"]], "Define Gaussian Covariances and distributions": [[21, "define-gaussian-covariances-and-distributions"]], "Define Group lasso regularization and gradient": [[79, "define-group-lasso-regularization-and-gradient"]], "Dependencies": [[124, "dependencies"]], "Dependency": [[101, null]], "Deprecation": [[125, "deprecation"]], "Detecting outliers by learning sample marginal distribution with CO-Optimal Transport and by using unbalanced Co-Optimal Transport": [[69, null]], "Different gradient computations for regularized optimal transport": [[2, null]], "Differentiable OT with PyTorch": [[1, null], [54, "differentiable-ot-with-pytorch"]], "Dirac Data": [[15, "dirac-data"]], "Discrete case": [[70, "discrete-case"]], "Documentation": [[97, "documentation"]], "Domain adaptation classes": [[127, "domain-adaptation-classes"]], "Domain adaptation for pixel distribution transfer": [[33, "domain-adaptation-for-pixel-distribution-transfer"]], "Domain adaptation with OT": [[25, null], [54, "domain-adaptation-with-ot"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[3, null]], "Empirical Sinkhorn": [[74, "empirical-sinkhorn"]], "Endow the dataset with node features": [[48, "endow-the-dataset-with-node-features"], [52, "endow-the-dataset-with-node-features"]], "Enforcement": [[96, "enforcement"]], "Entropic Gromov-Wasserstein": [[57, "entropic-gromov-wasserstein"]], "Entropic OT with Sinkhorn algorithm": [[78, "entropic-ot-with-sinkhorn-algorithm"]], "Entropic Wasserstein Component Analysis": [[63, null]], "Entropic regularized OT": [[127, "entropic-regularized-ot"]], "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example": [[42, null]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[48, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Estimate linear mapping and transport": [[31, "estimate-linear-mapping-and-transport"]], "Estimate mapping and adapt": [[31, "estimate-mapping-and-adapt"]], "Estimate the Gromov-Wasserstein dictionary from the dataset": [[48, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Estimate the srFGW barycenter from the attributed graphs and visualize embeddings": [[52, "estimate-the-srfgw-barycenter-from-the-attributed-graphs-and-visualize-embeddings"]], "Estimate the srGW barycenter from the dataset and visualize embeddings": [[52, "estimate-the-srgw-barycenter-from-the-dataset-and-visualize-embeddings"]], "Estimated weights and convergence of the objective": [[9, "estimated-weights-and-convergence-of-the-objective"]], "Estimating deep dual variables for entropic OT": [[8, "estimating-deep-dual-variables-for-entropic-ot"]], "Estimating dual variables for entropic OT": [[3, "estimating-dual-variables-for-entropic-ot"]], "Estimating dual variables for quadratic OT": [[3, "estimating-dual-variables-for-quadratic-ot"]], "Examples": [[124, "examples"]], "Examples and Notebooks": [[124, "examples-and-notebooks"]], "Examples gallery": [[54, null]], "Examples of GW, regularized G and FGW barycenters": [[127, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Examples of Partial OT": [[127, "examples-of-partial-ot"]], "Examples of Unbalanced OT": [[127, "examples-of-unbalanced-ot"]], "Examples of Unbalanced OT barycenters": [[127, "examples-of-unbalanced-ot-barycenters"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[127, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "Examples of computation of GW, regularized G and FGW": [[127, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Examples of free support barycenter estimation": [[127, "examples-of-free-support-barycenter-estimation"]], "Examples of group Lasso regularization": [[127, "examples-of-group-lasso-regularization"]], "Examples of the generic solvers": [[127, "examples-of-the-generic-solvers"]], "Examples of the use of OTDA classes": [[127, "examples-of-the-use-of-otda-classes"]], "Examples of the use of WDA": [[127, "examples-of-the-use-of-wda"]], "Examples of use for Sinkhorn algorithm": [[127, "examples-of-use-for-sinkhorn-algorithm"]], "Examples of use for ot.emd": [[127, "examples-of-use-for-ot-emd"]], "Examples of use for ot.emd2": [[127, "examples-of-use-for-ot-emd2"]], "Examples of use of quadratic regularization": [[127, "examples-of-use-of-quadratic-regularization"]], "Examples using ot.coot.co_optimal_transport": [[102, "examples-using-ot-coot-co-optimal-transport"]], "Examples using ot.coot.co_optimal_transport2": [[102, "examples-using-ot-coot-co-optimal-transport2"]], "Examples using ot.da.BaseTransport": [[103, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[103, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[103, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[103, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearGWTransport": [[103, "examples-using-ot-da-lineargwtransport"]], "Examples using ot.da.LinearTransport": [[103, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[103, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[103, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[103, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[103, "examples-using-ot-da-sinkhorntransport"]], "Examples using ot.datasets.make_1D_gauss": [[104, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[104, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[104, "examples-using-ot-datasets-make-data-classif"]], "Examples using ot.dr.ewca": [[105, "examples-using-ot-dr-ewca"]], "Examples using ot.dr.fda": [[105, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[105, "examples-using-ot-dr-wda"]], "Examples using ot.gaussian.bures_wasserstein_barycenter": [[107, "examples-using-ot-gaussian-bures-wasserstein-barycenter"]], "Examples using ot.gaussian.empirical_bures_wasserstein_distance": [[107, "examples-using-ot-gaussian-empirical-bures-wasserstein-distance"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[107, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "Examples using ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping": [[107, "examples-using-ot-gaussian-empirical-gaussian-gromov-wasserstein-mapping"]], "Examples using ot.gmm.gmm_barycenter_fixed_point": [[108, "examples-using-ot-gmm-gmm-barycenter-fixed-point"]], "Examples using ot.gmm.gmm_ot_apply_map": [[108, "examples-using-ot-gmm-gmm-ot-apply-map"]], "Examples using ot.gmm.gmm_ot_loss": [[108, "examples-using-ot-gmm-gmm-ot-loss"]], "Examples using ot.gmm.gmm_ot_plan_density": [[108, "examples-using-ot-gmm-gmm-ot-plan-density"]], "Examples using ot.gmm.gmm_pdf": [[108, "examples-using-ot-gmm-gmm-pdf"]], "Examples using ot.lowrank.kernel_nystroem": [[111, "examples-using-ot-lowrank-kernel-nystroem"]], "Examples using ot.lowrank.sinkhorn_low_rank_kernel": [[111, "examples-using-ot-lowrank-sinkhorn-low-rank-kernel"]], "Examples using ot.mapping.nearest_brenier_potential_fit": [[113, "examples-using-ot-mapping-nearest-brenier-potential-fit"]], "Examples using ot.mapping.nearest_brenier_potential_predict_bounds": [[113, "examples-using-ot-mapping-nearest-brenier-potential-predict-bounds"]], "Examples using ot.optim.cg": [[114, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[114, "examples-using-ot-optim-gcg"]], "Examples using ot.plot.plot1D_mat": [[116, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[116, "examples-using-ot-plot-plot2d-samples-mat"]], "Examples using ot.plot.rescale_for_imshow_plot": [[116, "examples-using-ot-plot-rescale-for-imshow-plot"]], "Examples using ot.regpath.compute_transport_plan": [[117, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[117, "examples-using-ot-regpath-regularization-path"]], "Examples using ot.sliced.get_random_projections": [[118, "examples-using-ot-sliced-get-random-projections"]], "Examples using ot.smooth.smooth_ot_dual": [[119, "examples-using-ot-smooth-smooth-ot-dual"]], "Examples using ot.stochastic.loss_dual_entropic": [[120, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[120, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[120, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[120, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[120, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[120, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "Examples using ot.utils.BaseEstimator": [[122, "examples-using-ot-utils-baseestimator"]], "Examples using ot.utils.LazyTensor": [[122, "examples-using-ot-utils-lazytensor"]], "Examples using ot.utils.OTResult": [[122, "examples-using-ot-utils-otresult"]], "Examples using ot.utils.dist0": [[122, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_SDP": [[122, "examples-using-ot-utils-proj-sdp"]], "Examples using ot.utils.proj_simplex": [[122, "examples-using-ot-utils-proj-simplex"]], "Exceptions": [[122, "exceptions"]], "FAQ": [[127, "faq"]], "Factored an Low-Rank OT": [[54, "factored-an-low-rank-ot"], [55, null]], "Factored and Low rank OT": [[78, "factored-and-low-rank-ot"]], "Features": [[125, "features"], [125, "id32"], [125, "id35"], [125, "id38"]], "Fig 1 : plots source and target samples": [[26, "fig-1-plots-source-and-target-samples"], [29, "fig-1-plots-source-and-target-samples"], [30, "fig-1-plots-source-and-target-samples"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[28, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [34, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plot optimal couplings and transported samples": [[26, "fig-2-plot-optimal-couplings-and-transported-samples"], [29, "fig-2-plot-optimal-couplings-and-transported-samples"], [30, "fig-2-plot-optimal-couplings-and-transported-samples"]], "Fig 2 : plots optimal couplings for the different methods": [[28, "fig-2-plots-optimal-couplings-for-the-different-methods"], [34, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[28, "fig-3-plot-transported-samples"], [34, "fig-3-plot-transported-samples"]], "Filing bugs": [[97, "filing-bugs"]], "Final figure": [[15, "final-figure"]], "First OT Problem": [[72, "first-ot-problem"]], "First pre-release": [[125, "first-pre-release"]], "Functions": [[99, "functions"], [102, "functions"], [103, "functions"], [104, "functions"], [105, "functions"], [106, "functions"], [107, "functions"], [108, "functions"], [111, "functions"], [113, "functions"], [114, "functions"], [116, "functions"], [117, "functions"], [118, "functions"], [119, "functions"], [120, "functions"], [122, "functions"], [123, "functions"]], "Fused Gromov-Wasserstein": [[78, "fused-gromov-wasserstein"]], "GPU acceleration": [[127, "gpu-acceleration"]], "Gaussian Bures-Wasserstein barycenters": [[21, null]], "Gaussian Data": [[15, "gaussian-data"]], "Gaussian Mixture Model OT Barycenters": [[23, null]], "Gaussian OT with Bures-Wasserstein": [[78, "gaussian-ot-with-bures-wasserstein"]], "General Parameters": [[20, "general-parameters"]], "Generalized Wasserstein Barycenter Demo": [[22, null]], "Generate Data": [[20, "generate-data"]], "Generate GMMOT maps and plot them over plan": [[37, "generate-gmmot-maps-and-plot-them-over-plan"]], "Generate GMMOT plan plot it": [[37, "generate-gmmot-plan-plot-it"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[48, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"], [52, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Generate and plot data": [[22, "generate-and-plot-data"]], "Generate and visualize data": [[11, "generate-and-visualize-data"], [49, "generate-and-visualize-data"]], "Generate attributed point clouds": [[50, "generate-attributed-point-clouds"]], "Generate data": [[9, "generate-data"], [14, "generate-data"], [18, "generate-data"], [26, "generate-data"], [27, "generate-data"], [28, "generate-data"], [29, "generate-data"], [30, "generate-data"], [31, "generate-data"], [32, "generate-data"], [33, "generate-data"], [34, "generate-data"], [41, "generate-data"], [43, "generate-data"], [45, "generate-data"], [57, "generate-data"], [58, "generate-data"], [59, "generate-data"], [63, "generate-data"], [65, "generate-data"], [69, "generate-data"], [73, "generate-data"], [74, "generate-data"], [76, "generate-data"], [77, "generate-data"], [79, "generate-data"], [84, "generate-data"], [85, "generate-data"], [88, "generate-data"], [89, "generate-data"], [93, "generate-data"], [94, "generate-data"]], "Generate data an plot it": [[56, "generate-data-an-plot-it"], [66, "generate-data-an-plot-it"]], "Generate data and plot it": [[38, "generate-data-and-plot-it"]], "Generate graphs": [[50, "generate-graphs"]], "Generate two graphs following Stochastic Block models of 2 and 3 clusters.": [[42, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [44, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [51, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"]], "Generating 2 distributions": [[67, "generating-2-distributions"]], "Generator Model": [[11, "generator-model"]], "Generic solvers": [[127, "generic-solvers"]], "Geometry of OT distances": [[76, null]], "Getting help": [[72, "getting-help"]], "Gradient Flow for GMM-OT distance": [[38, null]], "Gradient descent": [[7, "gradient-descent"]], "Gradient descent loop": [[38, "gradient-descent-loop"]], "Graph classification training": [[45, "graph-classification-training"]], "Graph classification with Template Based Fused Gromov Wasserstein": [[45, null]], "Graph compression with GW": [[4, "graph-compression-with-gw"]], "Graph generation": [[4, "graph-generation"]], "Gromov Wasserstein and extensions": [[127, "gromov-wasserstein-and-extensions"]], "Gromov Wasserstein barycenters": [[127, "gromov-wasserstein-barycenters"]], "Gromov Wasserstein(GW)": [[127, "gromov-wasserstein-gw"]], "Gromov-Wasserstein": [[5, "gromov-wasserstein"]], "Gromov-Wasserstein (GW) and Fused GW": [[40, null], [54, "gromov-wasserstein-gw-and-fused-gw"]], "Gromov-Wasserstein Barycenter example": [[47, null]], "Gromov-Wasserstein and Entropic GW": [[78, "gromov-wasserstein-and-entropic-gw"]], "Gromov-Wasserstein and Fused Gromov-Wasserstein": [[78, "gromov-wasserstein-and-fused-gromov-wasserstein"]], "Gromov-Wasserstein example": [[46, null]], "Group Lasso regularization": [[127, "group-lasso-regularization"]], "How it works": [[127, "how-it-works"]], "How to contribute": [[97, "how-to-contribute"]], "Implemented Features": [[124, "implemented-features"]], "Import the toolbox": [[72, "import-the-toolbox"]], "In summary: no more for loops!": [[5, "in-summary-no-more-for-loops"]], "Indices and tables": [[124, "indices-and-tables"]], "Inspect generated distributions": [[20, "inspect-generated-distributions"]], "Installation": [[124, "installation"]], "Instantiate JCPOT adaptation algorithm and fit it": [[29, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[29, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate the different transport algorithms and fit them": [[26, "instantiate-the-different-transport-algorithms-and-fit-them"], [27, "instantiate-the-different-transport-algorithms-and-fit-them"], [28, "instantiate-the-different-transport-algorithms-and-fit-them"], [30, "instantiate-the-different-transport-algorithms-and-fit-them"], [32, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Interpolating Empirical Distributions": [[20, "interpolating-empirical-distributions"]], "Introduction to Optimal Transport with Python": [[72, null]], "Large scale OT": [[78, "large-scale-ot"]], "Large scale Sinkhorn": [[78, "large-scale-sinkhorn"]], "Last step visualisation": [[38, "last-step-visualisation"]], "Linear OT mapping estimation": [[31, null]], "List of compatible Backends": [[127, "list-of-compatible-backends"]], "Load image data": [[31, "load-image-data"]], "Logo of the POT toolbox": [[68, null]], "Low rank Gromov-Wasserstein": [[57, "low-rank-gromov-wasserstein"]], "Low rank Gromov-Wasterstein between samples": [[57, null]], "Low rank Sinkhorn": [[58, null]], "Low rank squared euclidean cost matrices": [[57, "low-rank-squared-euclidean-cost-matrices"]], "Main ot functions": [[0, "module-ot"]], "Minimize the distances among distributions, identify the Barycenter": [[67, "minimize-the-distances-among-distributions-identify-the-barycenter"]], "Minimizing Distances Among Many Distributions": [[67, "minimizing-distances-among-many-distributions"]], "Monge Mapping estimation": [[127, "monge-mapping-estimation"]], "Monge mapping and Domain adaptation": [[127, "monge-mapping-and-domain-adaptation"]], "More than 2 distributions": [[67, "more-than-2-distributions"]], "New contributor tips": [[97, "new-contributor-tips"]], "New features": [[125, "new-features"], [125, "id2"], [125, "id5"], [125, "id8"], [125, "id13"], [125, "id16"], [125, "id19"], [125, "id24"], [125, "id27"]], "Nystr\u00f6m approximation for OT": [[59, null]], "OT Barycenter with Generic Costs Demo": [[19, null]], "OT and regularized OT": [[54, "ot-and-regularized-ot"]], "OT between GMM : plan and maps in 1D": [[37, null]], "OT distance on the Circle": [[82, null]], "OT for domain adaptation": [[26, null]], "OT for domain adaptation on empirical distributions": [[28, null]], "OT for image color adaptation": [[27, null]], "OT for image color adaptation with mapping estimation": [[33, null]], "OT for mapping estimation": [[127, "ot-for-mapping-estimation"]], "OT for multi-source target shift": [[29, null]], "OT in 1D and Sliced Wasserstein": [[54, "ot-in-1d-and-sliced-wasserstein"], [81, null]], "OT loss and dual variables": [[72, "ot-loss-and-dual-variables"]], "OT mapping estimation for domain adaptation": [[32, null]], "OT on Gaussian and Gaussian Mixture Models": [[36, null], [54, "ot-on-gaussian-and-gaussian-mixture-models"]], "OT with Laplacian regularization for domain adaptation": [[30, null]], "OTDA unsupervised vs semi-supervised setting": [[34, null]], "Optimal Transport between empirical distributions": [[74, null]], "Optimal Transport for fixed support": [[73, null]], "Optimal Transport problem with a custom cost matrix": [[78, "optimal-transport-problem-with-a-custom-cost-matrix"]], "Optimal Transport solvers comparison": [[79, null]], "Optimal Transport with different ground metrics": [[75, null]], "Optimal transport and Wasserstein distance": [[127, "optimal-transport-and-wasserstein-distance"]], "Optimal transport with factored couplings": [[56, null]], "Optimization of the model wrt the Wasserstein distance": [[9, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Optimize the COOT distance with respect to the sample marginal distribution": [[69, "optimize-the-coot-distance-with-respect-to-the-sample-marginal-distribution"]], "Optimizing GW w.r.t. the weights on a template structure": [[4, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[4, null]], "Other OT problems": [[54, "other-ot-problems"], [61, null]], "Other applications": [[127, "other-applications"]], "Other regularizations": [[127, "other-regularizations"]], "Our Pledge": [[96, "our-pledge"]], "Our Responsibilities": [[96, "our-responsibilities"]], "Our Standards": [[96, "our-standards"]], "POT Python Optimal Transport Toolbox": [[72, "pot-python-optimal-transport-toolbox"]], "POT installation": [[72, "pot-installation"]], "POT: Python Optimal Transport": [[124, null], [124, "pot-python-optimal-transport"]], "Partial (Entropic) Fused Gromov-Wasserstein computation and visualization": [[49, "partial-entropic-fused-gromov-wasserstein-computation-and-visualization"]], "Partial (Entropic) Gromov-Wasserstein computation and visualization": [[49, "partial-entropic-gromov-wasserstein-computation-and-visualization"]], "Partial Optimal Transport": [[78, "partial-optimal-transport"]], "Partial Wasserstein and Gromov-Wasserstein example": [[92, null]], "Partial Wasserstein in 1D": [[91, null]], "Partial optimal transport": [[127, "partial-optimal-transport"]], "Performance": [[99, "performance"]], "Pip installation": [[124, "pip-installation"]], "Plot 2D projections": [[65, "plot-2d-projections"]], "Plot Barycenter": [[41, "plot-barycenter"]], "Plot Fused-Gromov-Wasserstein": [[43, null]], "Plot Sliced Wasserstein Distance": [[84, "plot-sliced-wasserstein-distance"]], "Plot Spherical Sliced Wasserstein": [[85, "plot-spherical-sliced-wasserstein"]], "Plot Transportation Matrices": [[70, "plot-transportation-matrices"], [70, "id2"]], "Plot data": [[3, "plot-data"], [7, "plot-data"], [8, "plot-data"], [9, "plot-data"], [11, "plot-data"], [31, "plot-data"], [32, "plot-data"], [41, "plot-data"], [43, "plot-data"], [45, "plot-data"], [57, "plot-data"], [59, "plot-data"], [63, "plot-data"], [65, "plot-data"], [74, "plot-data"], [76, "plot-data"], [82, "plot-data"], [84, "plot-data"], [85, "plot-data"], [89, "plot-data"], [93, "plot-data"]], "Plot data, first component, and projected data": [[63, "plot-data-first-component-and-projected-data"]], "Plot distributions and loss matrix": [[73, "plot-distributions-and-loss-matrix"], [79, "plot-distributions-and-loss-matrix"], [88, "plot-distributions-and-loss-matrix"]], "Plot factored OT and exact OT solutions": [[56, "plot-factored-ot-and-exact-ot-solutions"]], "Plot matrices": [[43, "plot-matrices"]], "Plot new images": [[27, "plot-new-images"]], "Plot original image": [[27, "plot-original-image"]], "Plot original images": [[33, "plot-original-images"]], "Plot partial FGW for subgraph matching": [[49, null]], "Plot pixel values distribution": [[33, "plot-pixel-values-distribution"]], "Plot plans": [[79, "plot-plans"]], "Plot resulting assignments": [[83, "plot-resulting-assignments"]], "Plot the Wasserstein barycenter": [[18, "plot-the-wasserstein-barycenter"], [18, "id1"]], "Plot the density on target for a given source sample": [[8, "plot-the-density-on-target-for-a-given-source-sample"]], "Plot the distributions": [[21, "plot-the-distributions"]], "Plot the estimated entropic OT plan": [[3, "plot-the-estimated-entropic-ot-plan"]], "Plot the estimated quadratic OT plan": [[3, "plot-the-estimated-quadratic-ot-plan"]], "Plot the logo (clear background)": [[68, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[68, "plot-the-logo-dark-background"]], "Plot the matrix and the map": [[72, "plot-the-matrix-and-the-map"]], "Plot the regularization path": [[93, "plot-the-regularization-path"]], "Plot the results": [[90, "plot-the-results"], [94, "plot-the-results"]], "Plot the semi-relaxed regularization path": [[93, "plot-the-semi-relaxed-regularization-path"]], "Plot trajectories of generated samples along iterations": [[7, "plot-trajectories-of-generated-samples-along-iterations"], [11, "plot-trajectories-of-generated-samples-along-iterations"]], "Plot transformed images": [[31, "plot-transformed-images"], [33, "plot-transformed-images"]], "Plot transport plan": [[63, "plot-transport-plan"]], "Plot transported samples": [[31, "plot-transported-samples"], [32, "plot-transported-samples"]], "Plot weak OT and exact OT solutions": [[66, "plot-weak-ot-and-exact-ot-solutions"]], "Plotting bakeries in the city": [[72, "plotting-bakeries-in-the-city"]], "Plotting projection matches": [[22, "plotting-projection-matches"]], "Plotting the distributions": [[46, "plotting-the-distributions"]], "Plotting the reweighted source distribution": [[9, "plotting-the-reweighted-source-distribution"]], "Pooling architecture using the TFGW layer": [[45, "pooling-architecture-using-the-tfgw-layer"]], "Post installation check": [[124, "post-installation-check"]], "Pull Request Checklist": [[97, "pull-request-checklist"]], "Quadratic Regularized OT": [[78, "quadratic-regularized-ot"]], "Quadratic regularization": [[127, "quadratic-regularization"]], "Quantized Fused Gromov-Wasserstein examples": [[50, null]], "Quickstart Guide": [[78, null]], "References": [[124, "references"], [127, "references"]], "References:": [[0, "references"], [118, "references"], [118, "id29"]], "Regularization path of l2-penalized unbalanced optimal transport": [[93, null]], "Regularized OT with Sinkhorn": [[72, "regularized-ot-with-sinkhorn"]], "Regularized OT with generic solver": [[77, null]], "Regularized Optimal Transport": [[127, "regularized-optimal-transport"]], "Releases": [[125, null]], "Rotation animation": [[22, "rotation-animation"]], "Row and column alignments with CO-Optimal Transport": [[62, null]], "Run oracle transport algorithm with known proportions": [[29, "run-oracle-transport-algorithm-with-known-proportions"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[92, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Sample two 2D Gaussian distributions and plot them": [[92, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Sample two Gaussian distributions (2D and 3D)": [[46, "sample-two-gaussian-distributions-2d-and-3d"]], "Scatter plot of colors": [[27, "scatter-plot-of-colors"]], "Scope": [[96, "scope"]], "Semi-Continuous Case": [[70, "semi-continuous-case"]], "Semi-continuous case": [[70, "id1"]], "Semi-relaxed (Fused) Gromov-Wasserstein Barycenter as Dictionary Learning": [[52, null]], "Semi-relaxed (Fused) Gromov-Wasserstein example": [[51, null]], "Set up parameters for solvers and solve": [[79, "set-up-parameters-for-solvers-and-solve"]], "Setting parameters": [[90, "setting-parameters"]], "Setup data and imports": [[83, "setup-data-and-imports"]], "Short examples": [[124, "short-examples"]], "Sinkhorn and Regularized OT": [[78, "sinkhorn-and-regularized-ot"]], "Sinkhorn vs Low Rank Sinkhorn": [[58, "sinkhorn-vs-low-rank-sinkhorn"]], "Sliced OT Plans": [[83, null]], "Sliced Wasserstein Distance on 2D distributions": [[84, null]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[6, null]], "Sliced Wasserstein distance for different seeds and number of projections": [[84, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Sliced Wasserstein gradient flow with Pytorch": [[6, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Smacof MDS": [[47, "smacof-mds"]], "Smooth and Strongly Convex Nearest Brenier Potentials": [[64, null]], "Solve EMD": [[77, "solve-emd"]], "Solve EMD with Frobenius norm + entropic regularization": [[77, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Solve EMD with Frobenius norm regularization": [[77, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[77, "solve-emd-with-entropic-regularization"]], "Solve Exact OT": [[73, "solve-exact-ot"]], "Solve Low rank sinkhorn": [[58, "solve-low-rank-sinkhorn"]], "Solve Sinkhorn": [[73, "solve-sinkhorn"]], "Solve Smooth OT": [[73, "solve-smooth-ot"]], "Solve Unbalanced Sinkhorn": [[88, "solve-unbalanced-sinkhorn"]], "Solve the Optimal Transport problem between the samples": [[78, "solve-the-optimal-transport-problem-between-the-samples"]], "Solve the Regularized OT problem with user-defined regularization": [[78, "solve-the-regularized-ot-problem-with-user-defined-regularization"]], "Solving Many Optimal Transport Problems in Parallel": [[5, null]], "Solving OT with Multiple backends on CPU/GPU": [[127, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "Solving exact Optimal Transport": [[78, "solving-exact-optimal-transport"]], "Solving optimal transport": [[127, "solving-optimal-transport"]], "Solving the OT problem with ot.emd": [[72, "solving-the-ot-problem-with-ot-emd"]], "Solving the Problems": [[5, "solving-the-problems"]], "Special cases": [[127, "special-cases"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[85, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Spherical Sliced Wasserstein on distributions in S^2": [[85, null]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[7, null]], "Stair Data": [[15, "stair-data"]], "Steps visualisation": [[38, "steps-visualisation"]], "Stochastic examples": [[70, null]], "Support": [[124, "support"]], "Supported loss functions:": [[100, "supported-loss-functions"]], "Time comparison of the Sinkhorn solver for different gradient options": [[2, "time-comparison-of-the-sinkhorn-solver-for-different-gradient-options"]], "Training the model": [[11, "training-the-model"]], "Translation Invariant Sinkhorn for Unbalanced Optimal Transport": [[90, null]], "Transport source samples onto target samples": [[34, "transport-source-samples-onto-target-samples"]], "Transportation plan visualization": [[72, "transportation-plan-visualization"]], "Unbalanced Barycenters": [[127, "unbalanced-barycenters"]], "Unbalanced Optimal Transport": [[78, "unbalanced-optimal-transport"]], "Unbalanced and Partial OT": [[54, "unbalanced-and-partial-ot"], [78, "unbalanced-and-partial-ot"], [87, null]], "Unbalanced and partial OT": [[127, "unbalanced-and-partial-ot"]], "Unbalanced optimal transport": [[127, "unbalanced-optimal-transport"]], "Use directly ot.bregman.empirical_sinkhorn_nystroem": [[59, "use-directly-ot-bregman-empirical-sinkhorn-nystroem"]], "User guide": [[127, null]], "Using and citing the toolbox": [[124, "using-and-citing-the-toolbox"]], "Utils for generation and visualization": [[49, "utils-for-generation-and-visualization"]], "V0.2": [[125, "v0-2"]], "Varying the regularization parameter in Sinkhorn": [[72, "varying-the-regularization-parameter-in-sinkhorn"]], "Visualization": [[47, "visualization"]], "Visualization of the Fused Gromov-Wasserstein matchings": [[44, "visualization-of-the-fused-gromov-wasserstein-matchings"]], "Visualization of the embedding space": [[48, "visualization-of-the-embedding-space"], [48, "id2"]], "Visualization of the entropic semi-relaxed Fused Gromov-Wasserstein matchings": [[42, "visualization-of-the-entropic-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Visualization of the entropic-regularized semi-relaxed Gromov-Wasserstein matchings": [[42, "visualization-of-the-entropic-regularized-semi-relaxed-gromov-wasserstein-matchings"]], "Visualization of the estimated dictionary atoms": [[48, "visualization-of-the-estimated-dictionary-atoms"], [48, "id1"]], "Visualization of the quantized Gromov-Wasserstein matching": [[50, "visualization-of-the-quantized-gromov-wasserstein-matching"]], "Visualization of the semi-relaxed Fused Gromov-Wasserstein matchings": [[51, "visualization-of-the-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Visualization of the semi-relaxed Gromov-Wasserstein matchings": [[51, "visualization-of-the-semi-relaxed-gromov-wasserstein-matchings"]], "Visualize partitioned attributed point clouds": [[50, "visualize-partitioned-attributed-point-clouds"]], "Visualize transport matrices": [[43, "visualize-transport-matrices"]], "Visualizing the row and column alignments learned by unbalanced Co-Optimal Transport.": [[69, "visualizing-the-row-and-column-alignments-learned-by-unbalanced-co-optimal-transport"]], "Visualizing the row and column alignments with the estimated sample marginal distribution": [[69, "visualizing-the-row-and-column-alignments-with-the-estimated-sample-marginal-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[10, null]], "Wasserstein 2 Minibatch GAN with PyTorch": [[11, null]], "Wasserstein Barycenters": [[127, "wasserstein-barycenters"]], "Wasserstein Discriminant Analysis": [[65, null], [127, "wasserstein-discriminant-analysis"]], "Wasserstein and (F)GW barycenters": [[54, "wasserstein-and-f-gw-barycenters"]], "Wasserstein barycenter": [[10, "wasserstein-barycenter"]], "Wasserstein barycenters": [[13, null]], "Wasserstein distance between distributions": [[127, "wasserstein-distance-between-distributions"]], "Wasserstein distance between von Mises and uniform for different kappa": [[82, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Wasserstein loss and computational time": [[72, "wasserstein-loss-and-computational-time"]], "Wasserstein unmixing with PyTorch": [[9, null]], "Weak Optimal Transport VS exact Optimal Transport": [[66, null]], "When not to use POT": [[127, "when-not-to-use-pot"]], "When to use OT": [[127, "when-to-use-ot"]], "When to use POT": [[127, "when-to-use-pot"]], "Why Optimal Transport ?": [[127, "why-optimal-transport"]], "ot.backend": [[99, null]], "ot.batch": [[100, null]], "ot.bregman": [[101, null]], "ot.coot": [[102, null]], "ot.da": [[103, null]], "ot.datasets": [[104, null]], "ot.dr": [[105, null]], "ot.factored": [[106, null]], "ot.gaussian": [[107, null]], "ot.gmm": [[108, null]], "ot.gnn": [[109, null]], "ot.gromov": [[110, null]], "ot.lowrank": [[111, null]], "ot.lp": [[112, null]], "ot.mapping": [[113, null]], "ot.optim": [[114, null]], "ot.partial": [[115, null]], "ot.plot": [[116, null]], "ot.regpath": [[117, null]], "ot.sliced": [[118, null]], "ot.smooth": [[119, null]], "ot.stochastic": [[120, null]], "ot.unbalanced": [[121, null]], "ot.utils": [[122, null]], "ot.weak": [[123, null]], "plot the transported mass": [[88, "plot-the-transported-mass"]]}, "docnames": ["all", "auto_examples/backends/index", "auto_examples/backends/plot_Sinkhorn_gradients", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_ot_batch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/index", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_barycenter_generic_cost", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_gaussian_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/plot_gmm_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/index", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gaussian_gmm/index", "auto_examples/gaussian_gmm/plot_GMMOT_plan", "auto_examples/gaussian_gmm/plot_GMM_flow", "auto_examples/gaussian_gmm/sg_execution_times", "auto_examples/gromov/index", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_entropic_semirelaxed_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_fgw_solvers", "auto_examples/gromov/plot_gnn_TFGW", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/plot_partial_fgw", "auto_examples/gromov/plot_quantized_gromov_wasserstein", "auto_examples/gromov/plot_semirelaxed_fgw", "auto_examples/gromov/plot_semirelaxed_gromov_wasserstein_barycenter", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/lowrank/index", "auto_examples/lowrank/plot_factored_coupling", "auto_examples/lowrank/plot_lowrank_GW", "auto_examples/lowrank/plot_lowrank_sinkhorn", "auto_examples/lowrank/plot_nystroem_approximation", "auto_examples/lowrank/sg_execution_times", "auto_examples/others/index", "auto_examples/others/plot_COOT", "auto_examples/others/plot_EWCA", "auto_examples/others/plot_SSNB", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_dmmot", "auto_examples/others/plot_logo", "auto_examples/others/plot_outlier_detection_with_COOT_and_unbalanced_COOT", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_optim_OTreg", "auto_examples/plot_quickstart_guide", "auto_examples/plot_solve_variants", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/index", "auto_examples/sliced-wasserstein/plot_compute_wasserstein_circle", "auto_examples/sliced-wasserstein/plot_sliced_plans", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/index", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_conv_sinkhorn_ti", "auto_examples/unbalanced-partial/plot_partial_1d", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "code_of_conduct", "contributing", "contributors", "gen_modules/ot.backend", "gen_modules/ot.batch", "gen_modules/ot.bregman", "gen_modules/ot.coot", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gmm", "gen_modules/ot.gnn", "gen_modules/ot.gromov", "gen_modules/ot.lowrank", "gen_modules/ot.lp", "gen_modules/ot.mapping", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "releases", "sg_execution_times", "user_guide"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["all.rst", "auto_examples/backends/index.rst", "auto_examples/backends/plot_Sinkhorn_gradients.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_ot_batch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/index.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter_generic_cost.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_gaussian_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/plot_gmm_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/index.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gaussian_gmm/index.rst", "auto_examples/gaussian_gmm/plot_GMMOT_plan.rst", "auto_examples/gaussian_gmm/plot_GMM_flow.rst", "auto_examples/gaussian_gmm/sg_execution_times.rst", "auto_examples/gromov/index.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_entropic_semirelaxed_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_fgw_solvers.rst", "auto_examples/gromov/plot_gnn_TFGW.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/plot_partial_fgw.rst", "auto_examples/gromov/plot_quantized_gromov_wasserstein.rst", "auto_examples/gromov/plot_semirelaxed_fgw.rst", "auto_examples/gromov/plot_semirelaxed_gromov_wasserstein_barycenter.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/lowrank/index.rst", "auto_examples/lowrank/plot_factored_coupling.rst", "auto_examples/lowrank/plot_lowrank_GW.rst", "auto_examples/lowrank/plot_lowrank_sinkhorn.rst", "auto_examples/lowrank/plot_nystroem_approximation.rst", "auto_examples/lowrank/sg_execution_times.rst", "auto_examples/others/index.rst", "auto_examples/others/plot_COOT.rst", "auto_examples/others/plot_EWCA.rst", "auto_examples/others/plot_SSNB.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_dmmot.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_outlier_detection_with_COOT_and_unbalanced_COOT.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/plot_quickstart_guide.rst", "auto_examples/plot_solve_variants.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/index.rst", "auto_examples/sliced-wasserstein/plot_compute_wasserstein_circle.rst", "auto_examples/sliced-wasserstein/plot_sliced_plans.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/index.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_conv_sinkhorn_ti.rst", "auto_examples/unbalanced-partial/plot_partial_1d.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "code_of_conduct.rst", "contributing.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.batch.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.coot.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gmm.rst", "gen_modules/ot.gnn.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lowrank.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.mapping.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "releases.rst", "sg_execution_times.rst", "user_guide.rst"], "indexentries": {"a_to_b (ot.utils.otresult property)": [[122, "id30", false], [122, "ot.utils.OTResult.a_to_b", false]], "abs() (ot.backend.backend method)": [[99, "id1", false], [99, "ot.backend.Backend.abs", false]], "abs() (ot.backend.cupybackend method)": [[99, "id90", false], [99, "ot.backend.CupyBackend.abs", false]], "abs() (ot.backend.jaxbackend method)": [[99, "id175", false], [99, "ot.backend.JaxBackend.abs", false]], "abs() (ot.backend.numpybackend method)": [[99, "id261", false], [99, "ot.backend.NumpyBackend.abs", false]], "abs() (ot.backend.tensorflowbackend method)": [[99, "id347", false], [99, "ot.backend.TensorflowBackend.abs", false]], "abs() (ot.backend.torchbackend method)": [[99, "id433", false], [99, "ot.backend.TorchBackend.abs", false]], "allclose() (ot.backend.backend method)": [[99, "id2", false], [99, "ot.backend.Backend.allclose", false]], "allclose() (ot.backend.cupybackend method)": [[99, "id91", false], [99, "ot.backend.CupyBackend.allclose", false]], "allclose() (ot.backend.jaxbackend method)": [[99, "id176", false], [99, "ot.backend.JaxBackend.allclose", false]], "allclose() (ot.backend.numpybackend method)": [[99, "id262", false], [99, "ot.backend.NumpyBackend.allclose", false]], "allclose() (ot.backend.tensorflowbackend method)": [[99, "id348", false], [99, "ot.backend.TensorflowBackend.allclose", false]], "allclose() (ot.backend.torchbackend method)": [[99, "id434", false], [99, "ot.backend.TorchBackend.allclose", false]], "any() (ot.backend.backend method)": [[99, "id3", false], [99, "ot.backend.Backend.any", false]], "any() (ot.backend.cupybackend method)": [[99, "id92", false], [99, "ot.backend.CupyBackend.any", false]], "any() (ot.backend.jaxbackend method)": [[99, "id177", false], [99, "ot.backend.JaxBackend.any", false]], "any() (ot.backend.numpybackend method)": [[99, "id263", false], [99, "ot.backend.NumpyBackend.any", false]], "any() (ot.backend.tensorflowbackend method)": [[99, "id349", false], [99, "ot.backend.TensorflowBackend.any", false]], "any() (ot.backend.torchbackend method)": [[99, "id435", false], [99, "ot.backend.TorchBackend.any", false]], "arange() (ot.backend.backend method)": [[99, "id4", false], [99, "ot.backend.Backend.arange", false]], "arange() (ot.backend.cupybackend method)": [[99, "id93", false], [99, "ot.backend.CupyBackend.arange", false]], "arange() (ot.backend.jaxbackend method)": [[99, "id178", false], [99, "ot.backend.JaxBackend.arange", false]], "arange() (ot.backend.numpybackend method)": [[99, "id264", false], [99, "ot.backend.NumpyBackend.arange", false]], "arange() (ot.backend.tensorflowbackend method)": [[99, "id350", false], [99, "ot.backend.TensorflowBackend.arange", false]], "arange() (ot.backend.torchbackend method)": [[99, "id436", false], [99, "ot.backend.TorchBackend.arange", false]], "argmax() (ot.backend.backend method)": [[99, "id5", false], [99, "ot.backend.Backend.argmax", false]], "argmax() (ot.backend.cupybackend method)": [[99, "id94", false], [99, "ot.backend.CupyBackend.argmax", false]], "argmax() (ot.backend.jaxbackend method)": [[99, "id179", false], [99, "ot.backend.JaxBackend.argmax", false]], "argmax() (ot.backend.numpybackend method)": [[99, "id265", false], [99, "ot.backend.NumpyBackend.argmax", false]], "argmax() (ot.backend.tensorflowbackend method)": [[99, "id351", false], [99, "ot.backend.TensorflowBackend.argmax", false]], "argmax() (ot.backend.torchbackend method)": [[99, "id437", false], [99, "ot.backend.TorchBackend.argmax", false]], "argmin() (ot.backend.backend method)": [[99, "id6", false], [99, "ot.backend.Backend.argmin", false]], "argmin() (ot.backend.cupybackend method)": [[99, "id95", false], [99, "ot.backend.CupyBackend.argmin", false]], "argmin() (ot.backend.jaxbackend method)": [[99, "id180", false], [99, "ot.backend.JaxBackend.argmin", false]], "argmin() (ot.backend.numpybackend method)": [[99, "id266", false], [99, "ot.backend.NumpyBackend.argmin", false]], "argmin() (ot.backend.tensorflowbackend method)": [[99, "id352", false], [99, "ot.backend.TensorflowBackend.argmin", false]], "argmin() (ot.backend.torchbackend method)": [[99, "id438", false], [99, "ot.backend.TorchBackend.argmin", false]], "argsort() (ot.backend.backend method)": [[99, "id7", false], [99, "ot.backend.Backend.argsort", false]], "argsort() (ot.backend.cupybackend method)": [[99, "id96", false], [99, "ot.backend.CupyBackend.argsort", false]], "argsort() (ot.backend.jaxbackend method)": [[99, "id181", false], [99, "ot.backend.JaxBackend.argsort", false]], "argsort() (ot.backend.numpybackend method)": [[99, "id267", false], [99, "ot.backend.NumpyBackend.argsort", false]], "argsort() (ot.backend.tensorflowbackend method)": [[99, "id353", false], [99, "ot.backend.TensorflowBackend.argsort", false]], "argsort() (ot.backend.torchbackend method)": [[99, "id439", false], [99, "ot.backend.TorchBackend.argsort", false]], "array_equal() (ot.backend.backend method)": [[99, "id8", false], [99, "ot.backend.Backend.array_equal", false]], "array_equal() (ot.backend.cupybackend method)": [[99, "id97", false], [99, "ot.backend.CupyBackend.array_equal", false]], "array_equal() (ot.backend.jaxbackend method)": [[99, "id182", false], [99, "ot.backend.JaxBackend.array_equal", false]], "array_equal() (ot.backend.numpybackend method)": [[99, "id268", false], [99, "ot.backend.NumpyBackend.array_equal", false]], "array_equal() (ot.backend.tensorflowbackend method)": [[99, "id354", false], [99, "ot.backend.TensorflowBackend.array_equal", false]], "array_equal() (ot.backend.torchbackend method)": [[99, "id440", false], [99, "ot.backend.TorchBackend.array_equal", false]], "assert_same_dtype_device() (ot.backend.backend method)": [[99, "id9", false], [99, "ot.backend.Backend.assert_same_dtype_device", false]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[99, "id98", false], [99, "ot.backend.CupyBackend.assert_same_dtype_device", false]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[99, "id183", false], [99, "ot.backend.JaxBackend.assert_same_dtype_device", false]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[99, "id269", false], [99, "ot.backend.NumpyBackend.assert_same_dtype_device", false]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[99, "id355", false], [99, "ot.backend.TensorflowBackend.assert_same_dtype_device", false]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[99, "id441", false], [99, "ot.backend.TorchBackend.assert_same_dtype_device", false]], "atan2() (ot.backend.backend method)": [[99, "id10", false], [99, "ot.backend.Backend.atan2", false]], "atan2() (ot.backend.cupybackend method)": [[99, "id99", false], [99, "ot.backend.CupyBackend.atan2", false]], "atan2() (ot.backend.jaxbackend method)": [[99, "id184", false], [99, "ot.backend.JaxBackend.atan2", false]], "atan2() (ot.backend.numpybackend method)": [[99, "id270", false], [99, "ot.backend.NumpyBackend.atan2", false]], "atan2() (ot.backend.tensorflowbackend method)": [[99, "id356", false], [99, "ot.backend.TensorflowBackend.atan2", false]], "atan2() (ot.backend.torchbackend method)": [[99, "id442", false], [99, "ot.backend.TorchBackend.atan2", false]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[120, "id0", false], [120, "ot.stochastic.averaged_sgd_entropic_transport", false]], "b_to_a (ot.utils.otresult property)": [[122, "id31", false], [122, "ot.utils.OTResult.b_to_a", false]], "backend (class in ot.backend)": [[99, "id0", false], [99, "ot.backend.Backend", false]], "bapg_fused_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.BAPG_fused_gromov_wasserstein", false]], "bapg_fused_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.BAPG_fused_gromov_wasserstein2", false]], "bapg_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.BAPG_gromov_wasserstein", false]], "bapg_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.BAPG_gromov_wasserstein2", false]], "barycenter() (in module ot)": [[0, "ot.barycenter", false]], "barycenter() (in module ot.bregman)": [[101, "ot.bregman.barycenter", false]], "barycenter() (in module ot.lp)": [[112, "ot.lp.barycenter", false]], "barycenter_debiased() (in module ot.bregman)": [[101, "ot.bregman.barycenter_debiased", false]], "barycenter_sinkhorn() (in module ot.bregman)": [[101, "ot.bregman.barycenter_sinkhorn", false]], "barycenter_stabilized() (in module ot.bregman)": [[101, "ot.bregman.barycenter_stabilized", false]], "barycenter_unbalanced() (in module ot)": [[0, "ot.barycenter_unbalanced", false]], "barycenter_unbalanced() (in module ot.unbalanced)": [[121, "ot.unbalanced.barycenter_unbalanced", false]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[121, "ot.unbalanced.barycenter_unbalanced_sinkhorn", false]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[121, "ot.unbalanced.barycenter_unbalanced_stabilized", false]], "baseestimator (class in ot.utils)": [[122, "id13", false], [122, "ot.utils.BaseEstimator", false]], "basetransport (class in ot.da)": [[103, "id0", false], [103, "ot.da.BaseTransport", false]], "batch_grad_dual() (in module ot.stochastic)": [[120, "id15", false], [120, "ot.stochastic.batch_grad_dual", false]], "binary_search_circle() (in module ot)": [[0, "ot.binary_search_circle", false]], "binary_search_circle() (in module ot.lp)": [[112, "ot.lp.binary_search_circle", false]], "bitsize() (ot.backend.backend method)": [[99, "id11", false], [99, "ot.backend.Backend.bitsize", false]], "bitsize() (ot.backend.cupybackend method)": [[99, "id100", false], [99, "ot.backend.CupyBackend.bitsize", false]], "bitsize() (ot.backend.jaxbackend method)": [[99, "id185", false], [99, "ot.backend.JaxBackend.bitsize", false]], "bitsize() (ot.backend.numpybackend method)": [[99, "id271", false], [99, "ot.backend.NumpyBackend.bitsize", false]], "bitsize() (ot.backend.tensorflowbackend method)": [[99, "id357", false], [99, "ot.backend.TensorflowBackend.bitsize", false]], "bitsize() (ot.backend.torchbackend method)": [[99, "id443", false], [99, "ot.backend.TorchBackend.bitsize", false]], "bregman_log_projection_batch() (in module ot.batch)": [[100, "ot.batch.bregman_log_projection_batch", false]], "bregman_projection_batch() (in module ot.batch)": [[100, "ot.batch.bregman_projection_batch", false]], "bures_barycenter_fixpoint() (in module ot.gaussian)": [[107, "id0", false], [107, "ot.gaussian.bures_barycenter_fixpoint", false]], "bures_barycenter_gradient_descent() (in module ot.gaussian)": [[107, "id24", false], [107, "ot.gaussian.bures_barycenter_gradient_descent", false]], "bures_distance() (in module ot.gaussian)": [[107, "id28", false], [107, "ot.gaussian.bures_distance", false]], "bures_wasserstein_barycenter() (in module ot.gaussian)": [[107, "id31", false], [107, "ot.gaussian.bures_wasserstein_barycenter", false]], "bures_wasserstein_distance() (in module ot.gaussian)": [[107, "id36", false], [107, "ot.gaussian.bures_wasserstein_distance", false]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[107, "id39", false], [107, "ot.gaussian.bures_wasserstein_mapping", false]], "c_transform_entropic() (in module ot.stochastic)": [[120, "id18", false], [120, "ot.stochastic.c_transform_entropic", false]], "cg() (in module ot.optim)": [[114, "id0", false], [114, "ot.optim.cg", false]], "check_number_threads() (in module ot.lp)": [[112, "ot.lp.check_number_threads", false]], "check_number_threads() (in module ot.utils)": [[122, "id47", false], [122, "ot.utils.check_number_threads", false]], "check_params() (in module ot.utils)": [[122, "id48", false], [122, "ot.utils.check_params", false]], "check_random_state() (in module ot.utils)": [[122, "id49", false], [122, "ot.utils.check_random_state", false]], "citation (ot.utils.otresult property)": [[122, "id32", false], [122, "ot.utils.OTResult.citation", false]], "clean_zeros() (in module ot.utils)": [[122, "id50", false], [122, "ot.utils.clean_zeros", false]], "clip() (ot.backend.backend method)": [[99, "id12", false], [99, "ot.backend.Backend.clip", false]], "clip() (ot.backend.cupybackend method)": [[99, "id101", false], [99, "ot.backend.CupyBackend.clip", false]], "clip() (ot.backend.jaxbackend method)": [[99, "id186", false], [99, "ot.backend.JaxBackend.clip", false]], "clip() (ot.backend.numpybackend method)": [[99, "id272", false], [99, "ot.backend.NumpyBackend.clip", false]], "clip() (ot.backend.tensorflowbackend method)": [[99, "id358", false], [99, "ot.backend.TensorflowBackend.clip", false]], "clip() (ot.backend.torchbackend method)": [[99, "id444", false], [99, "ot.backend.TorchBackend.clip", false]], "co_optimal_transport() (in module ot.coot)": [[102, "id0", false], [102, "ot.coot.co_optimal_transport", false]], "co_optimal_transport2() (in module ot.coot)": [[102, "id4", false], [102, "ot.coot.co_optimal_transport2", false]], "complement_schur() (in module ot.regpath)": [[117, "id0", false], [117, "ot.regpath.complement_schur", false]], "compute_lr_sqeuclidean_matrix() (in module ot.lowrank)": [[111, "id0", false], [111, "ot.lowrank.compute_lr_sqeuclidean_matrix", false]], "compute_next_removal() (in module ot.regpath)": [[117, "id12", false], [117, "ot.regpath.compute_next_removal", false]], "compute_transport_plan() (in module ot.regpath)": [[117, "id15", false], [117, "ot.regpath.compute_transport_plan", false]], "concatenate() (ot.backend.backend method)": [[99, "id13", false], [99, "ot.backend.Backend.concatenate", false]], "concatenate() (ot.backend.cupybackend method)": [[99, "id102", false], [99, "ot.backend.CupyBackend.concatenate", false]], "concatenate() (ot.backend.jaxbackend method)": [[99, "id187", false], [99, "ot.backend.JaxBackend.concatenate", false]], "concatenate() (ot.backend.numpybackend method)": [[99, "id273", false], [99, "ot.backend.NumpyBackend.concatenate", false]], "concatenate() (ot.backend.tensorflowbackend method)": [[99, "id359", false], [99, "ot.backend.TensorflowBackend.concatenate", false]], "concatenate() (ot.backend.torchbackend method)": [[99, "id445", false], [99, "ot.backend.TorchBackend.concatenate", false]], "construct_augmented_h() (in module ot.regpath)": [[117, "id18", false], [117, "ot.regpath.construct_augmented_H", false]], "convolutional_barycenter2d() (in module ot.bregman)": [[101, "ot.bregman.convolutional_barycenter2d", false]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[101, "ot.bregman.convolutional_barycenter2d_debiased", false]], "coo_matrix() (ot.backend.backend method)": [[99, "id14", false], [99, "ot.backend.Backend.coo_matrix", false]], "coo_matrix() (ot.backend.cupybackend method)": [[99, "id103", false], [99, "ot.backend.CupyBackend.coo_matrix", false]], "coo_matrix() (ot.backend.jaxbackend method)": [[99, "id188", false], [99, "ot.backend.JaxBackend.coo_matrix", false]], "coo_matrix() (ot.backend.numpybackend method)": [[99, "id274", false], [99, "ot.backend.NumpyBackend.coo_matrix", false]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[99, "id360", false], [99, "ot.backend.TensorflowBackend.coo_matrix", false]], "coo_matrix() (ot.backend.torchbackend method)": [[99, "id446", false], [99, "ot.backend.TorchBackend.coo_matrix", false]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[120, "id21", false], [120, "ot.stochastic.coordinate_grad_semi_dual", false]], "copy() (ot.backend.backend method)": [[99, "id15", false], [99, "ot.backend.Backend.copy", false]], "copy() (ot.backend.cupybackend method)": [[99, "id104", false], [99, "ot.backend.CupyBackend.copy", false]], "copy() (ot.backend.jaxbackend method)": [[99, "id189", false], [99, "ot.backend.JaxBackend.copy", false]], "copy() (ot.backend.numpybackend method)": [[99, "id275", false], [99, "ot.backend.NumpyBackend.copy", false]], "copy() (ot.backend.tensorflowbackend method)": [[99, "id361", false], [99, "ot.backend.TensorflowBackend.copy", false]], "copy() (ot.backend.torchbackend method)": [[99, "id447", false], [99, "ot.backend.TorchBackend.copy", false]], "cost_normalization() (in module ot.utils)": [[122, "id51", false], [122, "ot.utils.cost_normalization", false]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[103, "id47", false], [103, "ot.da.EMDLaplaceTransport.coupling_", false]], "coupling_ (ot.da.emdtransport attribute)": [[103, "id54", false], [103, "ot.da.EMDTransport.coupling_", false]], "coupling_ (ot.da.jcpottransport attribute)": [[103, "id60", false], [103, "ot.da.JCPOTTransport.coupling_", false]], "coupling_ (ot.da.mappingtransport attribute)": [[103, "id84", false], [103, "ot.da.MappingTransport.coupling_", false]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[103, "id99", false], [103, "ot.da.SinkhornL1l2Transport.coupling_", false]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[103, "id107", false], [103, "ot.da.SinkhornLpl1Transport.coupling_", false]], "coupling_ (ot.da.sinkhorntransport attribute)": [[103, "id114", false], [103, "ot.da.SinkhornTransport.coupling_", false]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[103, "id126", false], [103, "ot.da.UnbalancedSinkhornTransport.coupling_", false]], "cumsum() (ot.backend.backend method)": [[99, "id16", false], [99, "ot.backend.Backend.cumsum", false]], "cumsum() (ot.backend.cupybackend method)": [[99, "id105", false], [99, "ot.backend.CupyBackend.cumsum", false]], "cumsum() (ot.backend.jaxbackend method)": [[99, "id190", false], [99, "ot.backend.JaxBackend.cumsum", false]], "cumsum() (ot.backend.numpybackend method)": [[99, "id276", false], [99, "ot.backend.NumpyBackend.cumsum", false]], "cumsum() (ot.backend.tensorflowbackend method)": [[99, "id362", false], [99, "ot.backend.TensorflowBackend.cumsum", false]], "cumsum() (ot.backend.torchbackend method)": [[99, "id448", false], [99, "ot.backend.TorchBackend.cumsum", false]], "cupybackend (class in ot.backend)": [[99, "id89", false], [99, "ot.backend.CupyBackend", false]], "delta_omega() (ot.smooth.negentropy method)": [[119, "id8", false], [119, "ot.smooth.NegEntropy.delta_Omega", false]], "delta_omega() (ot.smooth.regularization method)": [[119, "id12", false], [119, "ot.smooth.Regularization.delta_Omega", false]], "delta_omega() (ot.smooth.sparsityconstrained method)": [[119, "id16", false], [119, "ot.smooth.SparsityConstrained.delta_Omega", false]], "delta_omega() (ot.smooth.squaredl2 method)": [[119, "id20", false], [119, "ot.smooth.SquaredL2.delta_Omega", false]], "deprecated (class in ot.utils)": [[122, "id52", false], [122, "ot.utils.deprecated", false]], "det() (ot.backend.backend method)": [[99, "id17", false], [99, "ot.backend.Backend.det", false]], "det() (ot.backend.cupybackend method)": [[99, "id106", false], [99, "ot.backend.CupyBackend.det", false]], "det() (ot.backend.jaxbackend method)": [[99, "id191", false], [99, "ot.backend.JaxBackend.det", false]], "det() (ot.backend.numpybackend method)": [[99, "id277", false], [99, "ot.backend.NumpyBackend.det", false]], "det() (ot.backend.tensorflowbackend method)": [[99, "id363", false], [99, "ot.backend.TensorflowBackend.det", false]], "det() (ot.backend.torchbackend method)": [[99, "id449", false], [99, "ot.backend.TorchBackend.det", false]], "detach() (ot.backend.backend method)": [[99, "id18", false], [99, "ot.backend.Backend.detach", false]], "device_type() (ot.backend.backend method)": [[99, "id19", false], [99, "ot.backend.Backend.device_type", false]], "device_type() (ot.backend.cupybackend method)": [[99, "id107", false], [99, "ot.backend.CupyBackend.device_type", false]], "device_type() (ot.backend.jaxbackend method)": [[99, "id192", false], [99, "ot.backend.JaxBackend.device_type", false]], "device_type() (ot.backend.numpybackend method)": [[99, "id278", false], [99, "ot.backend.NumpyBackend.device_type", false]], "device_type() (ot.backend.tensorflowbackend method)": [[99, "id364", false], [99, "ot.backend.TensorflowBackend.device_type", false]], "device_type() (ot.backend.torchbackend method)": [[99, "id450", false], [99, "ot.backend.TorchBackend.device_type", false]], "diag() (ot.backend.backend method)": [[99, "id20", false], [99, "ot.backend.Backend.diag", false]], "diag() (ot.backend.cupybackend method)": [[99, "id108", false], [99, "ot.backend.CupyBackend.diag", false]], "diag() (ot.backend.jaxbackend method)": [[99, "id193", false], [99, "ot.backend.JaxBackend.diag", false]], "diag() (ot.backend.numpybackend method)": [[99, "id279", false], [99, "ot.backend.NumpyBackend.diag", false]], "diag() (ot.backend.tensorflowbackend method)": [[99, "id365", false], [99, "ot.backend.TensorflowBackend.diag", false]], "diag() (ot.backend.torchbackend method)": [[99, "id451", false], [99, "ot.backend.TorchBackend.diag", false]], "dist() (in module ot)": [[0, "ot.dist", false]], "dist() (in module ot.dr)": [[105, "id0", false], [105, "ot.dr.dist", false]], "dist() (in module ot.utils)": [[122, "id53", false], [122, "ot.utils.dist", false]], "dist0() (in module ot.utils)": [[122, "id54", false], [122, "ot.utils.dist0", false]], "dist_batch() (in module ot)": [[0, "ot.dist_batch", false]], "dist_batch() (in module ot.batch)": [[100, "ot.batch.dist_batch", false]], "dist_bures_squared() (in module ot.gmm)": [[108, "id0", false], [108, "ot.gmm.dist_bures_squared", false]], "distribution_estimation_uniform() (in module ot.da)": [[103, "id132", false], [103, "ot.da.distribution_estimation_uniform", false]], "div_between_product() (in module ot.gromov)": [[110, "ot.gromov.div_between_product", false]], "div_to_product() (in module ot.gromov)": [[110, "ot.gromov.div_to_product", false]], "dmmot_monge_1dgrid_loss() (in module ot.lp)": [[112, "ot.lp.dmmot_monge_1dgrid_loss", false]], "dmmot_monge_1dgrid_optimize() (in module ot.lp)": [[112, "ot.lp.dmmot_monge_1dgrid_optimize", false]], "dot() (ot.backend.backend method)": [[99, "id21", false], [99, "ot.backend.Backend.dot", false]], "dot() (ot.backend.cupybackend method)": [[99, "id109", false], [99, "ot.backend.CupyBackend.dot", false]], "dot() (ot.backend.jaxbackend method)": [[99, "id194", false], [99, "ot.backend.JaxBackend.dot", false]], "dot() (ot.backend.numpybackend method)": [[99, "id280", false], [99, "ot.backend.NumpyBackend.dot", false]], "dot() (ot.backend.tensorflowbackend method)": [[99, "id366", false], [99, "ot.backend.TensorflowBackend.dot", false]], "dot() (ot.backend.torchbackend method)": [[99, "id452", false], [99, "ot.backend.TorchBackend.dot", false]], "dots() (in module ot.utils)": [[122, "id55", false], [122, "ot.utils.dots", false]], "dtype_device() (ot.backend.backend method)": [[99, "id22", false], [99, "ot.backend.Backend.dtype_device", false]], "dtype_device() (ot.backend.cupybackend method)": [[99, "id110", false], [99, "ot.backend.CupyBackend.dtype_device", false]], "dtype_device() (ot.backend.jaxbackend method)": [[99, "id195", false], [99, "ot.backend.JaxBackend.dtype_device", false]], "dtype_device() (ot.backend.numpybackend method)": [[99, "id281", false], [99, "ot.backend.NumpyBackend.dtype_device", false]], "dtype_device() (ot.backend.tensorflowbackend method)": [[99, "id367", false], [99, "ot.backend.TensorflowBackend.dtype_device", false]], "dtype_device() (ot.backend.torchbackend method)": [[99, "id453", false], [99, "ot.backend.TorchBackend.dtype_device", false]], "dual_obj_grad() (in module ot.smooth)": [[119, "id22", false], [119, "ot.smooth.dual_obj_grad", false]], "eigh() (ot.backend.backend method)": [[99, "id23", false], [99, "ot.backend.Backend.eigh", false]], "eigh() (ot.backend.cupybackend method)": [[99, "id111", false], [99, "ot.backend.CupyBackend.eigh", false]], "eigh() (ot.backend.jaxbackend method)": [[99, "id196", false], [99, "ot.backend.JaxBackend.eigh", false]], "eigh() (ot.backend.numpybackend method)": [[99, "id282", false], [99, "ot.backend.NumpyBackend.eigh", false]], "eigh() (ot.backend.tensorflowbackend method)": [[99, "id368", false], [99, "ot.backend.TensorflowBackend.eigh", false]], "eigh() (ot.backend.torchbackend method)": [[99, "id454", false], [99, "ot.backend.TorchBackend.eigh", false]], "einsum() (ot.backend.backend method)": [[99, "id24", false], [99, "ot.backend.Backend.einsum", false]], "einsum() (ot.backend.cupybackend method)": [[99, "id112", false], [99, "ot.backend.CupyBackend.einsum", false]], "einsum() (ot.backend.jaxbackend method)": [[99, "id197", false], [99, "ot.backend.JaxBackend.einsum", false]], "einsum() (ot.backend.numpybackend method)": [[99, "id283", false], [99, "ot.backend.NumpyBackend.einsum", false]], "einsum() (ot.backend.tensorflowbackend method)": [[99, "id369", false], [99, "ot.backend.TensorflowBackend.einsum", false]], "einsum() (ot.backend.torchbackend method)": [[99, "id455", false], [99, "ot.backend.TorchBackend.einsum", false]], "eliminate_zeros() (ot.backend.backend method)": [[99, "id25", false], [99, "ot.backend.Backend.eliminate_zeros", false]], "eliminate_zeros() (ot.backend.cupybackend method)": [[99, "id113", false], [99, "ot.backend.CupyBackend.eliminate_zeros", false]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[99, "id198", false], [99, "ot.backend.JaxBackend.eliminate_zeros", false]], "eliminate_zeros() (ot.backend.numpybackend method)": [[99, "id284", false], [99, "ot.backend.NumpyBackend.eliminate_zeros", false]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[99, "id370", false], [99, "ot.backend.TensorflowBackend.eliminate_zeros", false]], "eliminate_zeros() (ot.backend.torchbackend method)": [[99, "id456", false], [99, "ot.backend.TorchBackend.eliminate_zeros", false]], "emd() (in module ot)": [[0, "ot.emd", false]], "emd() (in module ot.lp)": [[112, "ot.lp.emd", false]], "emd2() (in module ot)": [[0, "ot.emd2", false]], "emd2() (in module ot.lp)": [[112, "ot.lp.emd2", false]], "emd2_1d() (in module ot)": [[0, "ot.emd2_1d", false]], "emd2_1d() (in module ot.lp)": [[112, "ot.lp.emd2_1d", false]], "emd_1d() (in module ot)": [[0, "ot.emd_1d", false]], "emd_1d() (in module ot.lp)": [[112, "ot.lp.emd_1d", false]], "emd_1d_sorted() (in module ot.lp)": [[112, "ot.lp.emd_1d_sorted", false]], "emd_laplace() (in module ot.da)": [[103, "id133", false], [103, "ot.da.emd_laplace", false]], "emdlaplacetransport (class in ot.da)": [[103, "id46", false], [103, "ot.da.EMDLaplaceTransport", false]], "emdtransport (class in ot.da)": [[103, "id53", false], [103, "ot.da.EMDTransport", false]], "empirical_bures_wasserstein_barycenter() (in module ot.gaussian)": [[107, "id43", false], [107, "ot.gaussian.empirical_bures_wasserstein_barycenter", false]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[107, "id46", false], [107, "ot.gaussian.empirical_bures_wasserstein_distance", false]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[107, "id49", false], [107, "ot.gaussian.empirical_bures_wasserstein_mapping", false]], "empirical_gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[107, "id53", false], [107, "ot.gaussian.empirical_gaussian_gromov_wasserstein_distance", false]], "empirical_gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[107, "id56", false], [107, "ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping", false]], "empirical_sinkhorn() (in module ot.bregman)": [[101, "ot.bregman.empirical_sinkhorn", false]], "empirical_sinkhorn2() (in module ot.bregman)": [[101, "ot.bregman.empirical_sinkhorn2", false]], "empirical_sinkhorn2_geomloss() (in module ot.bregman)": [[101, "ot.bregman.empirical_sinkhorn2_geomloss", false]], "empirical_sinkhorn_divergence() (in module ot.bregman)": [[101, "ot.bregman.empirical_sinkhorn_divergence", false]], "empirical_sinkhorn_nystroem() (in module ot.bregman)": [[101, "ot.bregman.empirical_sinkhorn_nystroem", false]], "empirical_sinkhorn_nystroem2() (in module ot.bregman)": [[101, "ot.bregman.empirical_sinkhorn_nystroem2", false]], "entropic_fused_gromov_barycenters() (in module ot.gromov)": [[110, "ot.gromov.entropic_fused_gromov_barycenters", false]], "entropic_fused_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.entropic_fused_gromov_wasserstein", false]], "entropic_fused_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.entropic_fused_gromov_wasserstein2", false]], "entropic_gromov_barycenters() (in module ot.gromov)": [[110, "ot.gromov.entropic_gromov_barycenters", false]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.entropic_gromov_wasserstein", false]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.entropic_gromov_wasserstein2", false]], "entropic_partial_fused_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.entropic_partial_fused_gromov_wasserstein", false]], "entropic_partial_fused_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.entropic_partial_fused_gromov_wasserstein2", false]], "entropic_partial_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.entropic_partial_gromov_wasserstein", false]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[115, "ot.partial.entropic_partial_gromov_wasserstein", false]], "entropic_partial_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.entropic_partial_gromov_wasserstein2", false]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[115, "ot.partial.entropic_partial_gromov_wasserstein2", false]], "entropic_partial_wasserstein() (in module ot.partial)": [[115, "ot.partial.entropic_partial_wasserstein", false]], "entropic_semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein", false]], "entropic_semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein2", false]], "entropic_semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.entropic_semirelaxed_gromov_wasserstein", false]], "entropic_semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.entropic_semirelaxed_gromov_wasserstein2", false]], "entropy_batch() (in module ot.batch)": [[100, "ot.batch.entropy_batch", false]], "euclidean_distances() (in module ot.utils)": [[122, "id56", false], [122, "ot.utils.euclidean_distances", false]], "ewca() (in module ot.dr)": [[105, "id4", false], [105, "ot.dr.ewca", false]], "exp() (ot.backend.backend method)": [[99, "id26", false], [99, "ot.backend.Backend.exp", false]], "exp() (ot.backend.cupybackend method)": [[99, "id114", false], [99, "ot.backend.CupyBackend.exp", false]], "exp() (ot.backend.jaxbackend method)": [[99, "id199", false], [99, "ot.backend.JaxBackend.exp", false]], "exp() (ot.backend.numpybackend method)": [[99, "id285", false], [99, "ot.backend.NumpyBackend.exp", false]], "exp() (ot.backend.tensorflowbackend method)": [[99, "id371", false], [99, "ot.backend.TensorflowBackend.exp", false]], "exp() (ot.backend.torchbackend method)": [[99, "id457", false], [99, "ot.backend.TorchBackend.exp", false]], "exp_bures() (in module ot.utils)": [[122, "id57", false], [122, "ot.utils.exp_bures", false]], "expected_sliced() (in module ot)": [[0, "ot.expected_sliced", false]], "expected_sliced() (in module ot.sliced)": [[118, "id0", false], [118, "ot.sliced.expected_sliced", false]], "eye() (ot.backend.backend method)": [[99, "id27", false], [99, "ot.backend.Backend.eye", false]], "eye() (ot.backend.cupybackend method)": [[99, "id115", false], [99, "ot.backend.CupyBackend.eye", false]], "eye() (ot.backend.jaxbackend method)": [[99, "id200", false], [99, "ot.backend.JaxBackend.eye", false]], "eye() (ot.backend.numpybackend method)": [[99, "id286", false], [99, "ot.backend.NumpyBackend.eye", false]], "eye() (ot.backend.tensorflowbackend method)": [[99, "id372", false], [99, "ot.backend.TensorflowBackend.eye", false]], "eye() (ot.backend.torchbackend method)": [[99, "id458", false], [99, "ot.backend.TorchBackend.eye", false]], "factored_optimal_transport() (in module ot)": [[0, "ot.factored_optimal_transport", false]], "factored_optimal_transport() (in module ot.factored)": [[106, "id0", false], [106, "ot.factored.factored_optimal_transport", false]], "fda() (in module ot.dr)": [[105, "id7", false], [105, "ot.dr.fda", false]], "fgw_barycenters() (in module ot.gromov)": [[110, "ot.gromov.fgw_barycenters", false]], "fgw_distance_to_templates() (in module ot.gnn)": [[109, "ot.gnn.FGW_distance_to_templates", false]], "fit() (ot.da.basetransport method)": [[103, "id38", false], [103, "ot.da.BaseTransport.fit", false]], "fit() (ot.da.emdlaplacetransport method)": [[103, "id52", false], [103, "ot.da.EMDLaplaceTransport.fit", false]], "fit() (ot.da.emdtransport method)": [[103, "id58", false], [103, "ot.da.EMDTransport.fit", false]], "fit() (ot.da.jcpottransport method)": [[103, "id66", false], [103, "ot.da.JCPOTTransport.fit", false]], "fit() (ot.da.lineargwtransport method)": [[103, "id75", false], [103, "ot.da.LinearGWTransport.fit", false]], "fit() (ot.da.lineartransport method)": [[103, "id80", false], [103, "ot.da.LinearTransport.fit", false]], "fit() (ot.da.mappingtransport method)": [[103, "id88", false], [103, "ot.da.MappingTransport.fit", false]], "fit() (ot.da.nearestbrenierpotential method)": [[103, "id93", false], [103, "ot.da.NearestBrenierPotential.fit", false]], "fit() (ot.da.sinkhornl1l2transport method)": [[103, "id105", false], [103, "ot.da.SinkhornL1l2Transport.fit", false]], "fit() (ot.da.sinkhornlpl1transport method)": [[103, "id112", false], [103, "ot.da.SinkhornLpl1Transport.fit", false]], "fit() (ot.da.sinkhorntransport method)": [[103, "id122", false], [103, "ot.da.SinkhornTransport.fit", false]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[103, "id131", false], [103, "ot.da.UnbalancedSinkhornTransport.fit", false]], "fit_transform() (ot.da.basetransport method)": [[103, "id39", false], [103, "ot.da.BaseTransport.fit_transform", false]], "flip() (ot.backend.backend method)": [[99, "id28", false], [99, "ot.backend.Backend.flip", false]], "flip() (ot.backend.cupybackend method)": [[99, "id116", false], [99, "ot.backend.CupyBackend.flip", false]], "flip() (ot.backend.jaxbackend method)": [[99, "id201", false], [99, "ot.backend.JaxBackend.flip", false]], "flip() (ot.backend.numpybackend method)": [[99, "id287", false], [99, "ot.backend.NumpyBackend.flip", false]], "flip() (ot.backend.tensorflowbackend method)": [[99, "id373", false], [99, "ot.backend.TensorflowBackend.flip", false]], "flip() (ot.backend.torchbackend method)": [[99, "id459", false], [99, "ot.backend.TorchBackend.flip", false]], "floor() (ot.backend.backend method)": [[99, "id29", false], [99, "ot.backend.Backend.floor", false]], "floor() (ot.backend.cupybackend method)": [[99, "id117", false], [99, "ot.backend.CupyBackend.floor", false]], "floor() (ot.backend.jaxbackend method)": [[99, "id202", false], [99, "ot.backend.JaxBackend.floor", false]], "floor() (ot.backend.numpybackend method)": [[99, "id288", false], [99, "ot.backend.NumpyBackend.floor", false]], "floor() (ot.backend.tensorflowbackend method)": [[99, "id374", false], [99, "ot.backend.TensorflowBackend.floor", false]], "floor() (ot.backend.torchbackend method)": [[99, "id460", false], [99, "ot.backend.TorchBackend.floor", false]], "format_partitioned_graph() (in module ot.gromov)": [[110, "ot.gromov.format_partitioned_graph", false]], "format_partitioned_samples() (in module ot.gromov)": [[110, "ot.gromov.format_partitioned_samples", false]], "forward() (ot.gnn.tfgwpooling method)": [[109, "ot.gnn.TFGWPooling.forward", false]], "forward() (ot.gnn.twpooling method)": [[109, "ot.gnn.TWPooling.forward", false]], "free_support_barycenter() (in module ot.lp)": [[112, "ot.lp.free_support_barycenter", false]], "free_support_barycenter_generic_costs() (in module ot.lp)": [[112, "ot.lp.free_support_barycenter_generic_costs", false]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[101, "ot.bregman.free_support_sinkhorn_barycenter", false]], "from_numpy() (ot.backend.backend method)": [[99, "id30", false], [99, "ot.backend.Backend.from_numpy", false]], "full() (ot.backend.backend method)": [[99, "id31", false], [99, "ot.backend.Backend.full", false]], "full() (ot.backend.cupybackend method)": [[99, "id118", false], [99, "ot.backend.CupyBackend.full", false]], "full() (ot.backend.jaxbackend method)": [[99, "id203", false], [99, "ot.backend.JaxBackend.full", false]], "full() (ot.backend.numpybackend method)": [[99, "id289", false], [99, "ot.backend.NumpyBackend.full", false]], "full() (ot.backend.tensorflowbackend method)": [[99, "id375", false], [99, "ot.backend.TensorflowBackend.full", false]], "full() (ot.backend.torchbackend method)": [[99, "id461", false], [99, "ot.backend.TorchBackend.full", false]], "fully_relaxed_path() (in module ot.regpath)": [[117, "id19", false], [117, "ot.regpath.fully_relaxed_path", false]], "fun_to_numpy() (in module ot.utils)": [[122, "id58", false], [122, "ot.utils.fun_to_numpy", false]], "fused_gromov_wasserstein() (in module ot)": [[0, "ot.fused_gromov_wasserstein", false]], "fused_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.fused_gromov_wasserstein", false]], "fused_gromov_wasserstein2() (in module ot)": [[0, "ot.fused_gromov_wasserstein2", false]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.fused_gromov_wasserstein2", false]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[110, "ot.gromov.fused_gromov_wasserstein_dictionary_learning", false]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[110, "ot.gromov.fused_gromov_wasserstein_linear_unmixing", false]], "fused_unbalanced_across_spaces_cost() (in module ot.gromov)": [[110, "ot.gromov.fused_unbalanced_across_spaces_cost", false]], "fused_unbalanced_across_spaces_divergence() (in module ot.gromov)": [[110, "ot.gromov.fused_unbalanced_across_spaces_divergence", false]], "fused_unbalanced_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.fused_unbalanced_gromov_wasserstein", false]], "fused_unbalanced_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.fused_unbalanced_gromov_wasserstein2", false]], "gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[107, "id59", false], [107, "ot.gaussian.gaussian_gromov_wasserstein_distance", false]], "gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[107, "id62", false], [107, "ot.gaussian.gaussian_gromov_wasserstein_mapping", false]], "gaussian_logpdf() (in module ot.gmm)": [[108, "id9", false], [108, "ot.gmm.gaussian_logpdf", false]], "gaussian_pdf() (in module ot.gmm)": [[108, "id10", false], [108, "ot.gmm.gaussian_pdf", false]], "gcg() (in module ot.optim)": [[114, "id22", false], [114, "ot.optim.gcg", false]], "generalized_free_support_barycenter() (in module ot.lp)": [[112, "ot.lp.generalized_free_support_barycenter", false]], "generic_conditional_gradient() (in module ot.optim)": [[114, "id26", false], [114, "ot.optim.generic_conditional_gradient", false]], "geometricbar() (in module ot.bregman)": [[101, "ot.bregman.geometricBar", false]], "geometricmean() (in module ot.bregman)": [[101, "ot.bregman.geometricMean", false]], "get_available_backend_implementations() (in module ot.backend)": [[99, "id518", false], [99, "ot.backend.get_available_backend_implementations", false]], "get_backend() (in module ot.backend)": [[99, "id519", false], [99, "ot.backend.get_backend", false]], "get_backend_list() (in module ot.backend)": [[99, "id520", false], [99, "ot.backend.get_backend_list", false]], "get_coordinate_circle() (in module ot.utils)": [[122, "id59", false], [122, "ot.utils.get_coordinate_circle", false]], "get_graph_partition() (in module ot.gromov)": [[110, "ot.gromov.get_graph_partition", false]], "get_graph_representants() (in module ot.gromov)": [[110, "ot.gromov.get_graph_representants", false]], "get_lowrank_lazytensor() (in module ot.utils)": [[122, "id60", false], [122, "ot.utils.get_lowrank_lazytensor", false]], "get_parameter_pair() (in module ot.utils)": [[122, "id61", false], [122, "ot.utils.get_parameter_pair", false]], "get_params() (ot.utils.baseestimator method)": [[122, "id14", false], [122, "ot.utils.BaseEstimator.get_params", false]], "get_partition_and_representants_samples() (in module ot.gromov)": [[110, "ot.gromov.get_partition_and_representants_samples", false]], "get_plan_from_dual() (in module ot.smooth)": [[119, "id23", false], [119, "ot.smooth.get_plan_from_dual", false]], "get_plan_from_semi_dual() (in module ot.smooth)": [[119, "id24", false], [119, "ot.smooth.get_plan_from_semi_dual", false]], "get_projections_sphere() (in module ot.sliced)": [[118, "id12", false], [118, "ot.sliced.get_projections_sphere", false]], "get_random_projections() (in module ot.sliced)": [[118, "id13", false], [118, "ot.sliced.get_random_projections", false]], "gmm_barycenter_fixed_point() (in module ot.gmm)": [[108, "id11", false], [108, "ot.gmm.gmm_barycenter_fixed_point", false]], "gmm_ot_apply_map() (in module ot.gmm)": [[108, "id14", false], [108, "ot.gmm.gmm_ot_apply_map", false]], "gmm_ot_loss() (in module ot.gmm)": [[108, "id16", false], [108, "ot.gmm.gmm_ot_loss", false]], "gmm_ot_plan() (in module ot.gmm)": [[108, "id18", false], [108, "ot.gmm.gmm_ot_plan", false]], "gmm_ot_plan_density() (in module ot.gmm)": [[108, "id20", false], [108, "ot.gmm.gmm_ot_plan_density", false]], "gmm_pdf() (in module ot.gmm)": [[108, "id22", false], [108, "ot.gmm.gmm_pdf", false]], "greenkhorn() (in module ot.bregman)": [[101, "ot.bregman.greenkhorn", false]], "gromov_barycenters() (in module ot)": [[0, "ot.gromov_barycenters", false]], "gromov_barycenters() (in module ot.gromov)": [[110, "ot.gromov.gromov_barycenters", false]], "gromov_wasserstein() (in module ot)": [[0, "ot.gromov_wasserstein", false]], "gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.gromov_wasserstein", false]], "gromov_wasserstein2() (in module ot)": [[0, "ot.gromov_wasserstein2", false]], "gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.gromov_wasserstein2", false]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[110, "ot.gromov.gromov_wasserstein_dictionary_learning", false]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[110, "ot.gromov.gromov_wasserstein_linear_unmixing", false]], "gw_distance_estimation() (in module ot.gromov)": [[110, "ot.gromov.GW_distance_estimation", false]], "gwggrad() (in module ot.gromov)": [[110, "ot.gromov.gwggrad", false]], "gwgrad_partial() (in module ot.partial)": [[115, "ot.partial.gwgrad_partial", false]], "gwloss() (in module ot.gromov)": [[110, "ot.gromov.gwloss", false]], "gwloss_partial() (in module ot.partial)": [[115, "ot.partial.gwloss_partial", false]], "init_matrix() (in module ot.gromov)": [[110, "ot.gromov.init_matrix", false]], "init_matrix_semirelaxed() (in module ot.gromov)": [[110, "ot.gromov.init_matrix_semirelaxed", false]], "inv() (ot.backend.backend method)": [[99, "id32", false], [99, "ot.backend.Backend.inv", false]], "inv() (ot.backend.cupybackend method)": [[99, "id119", false], [99, "ot.backend.CupyBackend.inv", false]], "inv() (ot.backend.jaxbackend method)": [[99, "id204", false], [99, "ot.backend.JaxBackend.inv", false]], "inv() (ot.backend.numpybackend method)": [[99, "id290", false], [99, "ot.backend.NumpyBackend.inv", false]], "inv() (ot.backend.tensorflowbackend method)": [[99, "id376", false], [99, "ot.backend.TensorflowBackend.inv", false]], "inv() (ot.backend.torchbackend method)": [[99, "id462", false], [99, "ot.backend.TorchBackend.inv", false]], "inverse_transform() (ot.da.basetransport method)": [[103, "id40", false], [103, "ot.da.BaseTransport.inverse_transform", false]], "inverse_transform() (ot.da.lineartransport method)": [[103, "id81", false], [103, "ot.da.LinearTransport.inverse_transform", false]], "inverse_transform() (ot.da.sinkhorntransport method)": [[103, "id123", false], [103, "ot.da.SinkhornTransport.inverse_transform", false]], "inverse_transform_labels() (ot.da.basetransport method)": [[103, "id41", false], [103, "ot.da.BaseTransport.inverse_transform_labels", false]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[103, "id67", false], [103, "ot.da.JCPOTTransport.inverse_transform_labels", false]], "is_all_finite() (in module ot.utils)": [[122, "id62", false], [122, "ot.utils.is_all_finite", false]], "is_floating_point() (ot.backend.backend method)": [[99, "id33", false], [99, "ot.backend.Backend.is_floating_point", false]], "is_floating_point() (ot.backend.cupybackend method)": [[99, "id120", false], [99, "ot.backend.CupyBackend.is_floating_point", false]], "is_floating_point() (ot.backend.jaxbackend method)": [[99, "id205", false], [99, "ot.backend.JaxBackend.is_floating_point", false]], "is_floating_point() (ot.backend.numpybackend method)": [[99, "id291", false], [99, "ot.backend.NumpyBackend.is_floating_point", false]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[99, "id377", false], [99, "ot.backend.TensorflowBackend.is_floating_point", false]], "is_floating_point() (ot.backend.torchbackend method)": [[99, "id463", false], [99, "ot.backend.TorchBackend.is_floating_point", false]], "isfinite() (ot.backend.backend method)": [[99, "id34", false], [99, "ot.backend.Backend.isfinite", false]], "isfinite() (ot.backend.cupybackend method)": [[99, "id121", false], [99, "ot.backend.CupyBackend.isfinite", false]], "isfinite() (ot.backend.jaxbackend method)": [[99, "id206", false], [99, "ot.backend.JaxBackend.isfinite", false]], "isfinite() (ot.backend.numpybackend method)": [[99, "id292", false], [99, "ot.backend.NumpyBackend.isfinite", false]], "isfinite() (ot.backend.tensorflowbackend method)": [[99, "id378", false], [99, "ot.backend.TensorflowBackend.isfinite", false]], "isfinite() (ot.backend.torchbackend method)": [[99, "id464", false], [99, "ot.backend.TorchBackend.isfinite", false]], "isinf() (ot.backend.backend method)": [[99, "id35", false], [99, "ot.backend.Backend.isinf", false]], "isinf() (ot.backend.cupybackend method)": [[99, "id122", false], [99, "ot.backend.CupyBackend.isinf", false]], "isinf() (ot.backend.jaxbackend method)": [[99, "id207", false], [99, "ot.backend.JaxBackend.isinf", false]], "isinf() (ot.backend.numpybackend method)": [[99, "id293", false], [99, "ot.backend.NumpyBackend.isinf", false]], "isinf() (ot.backend.tensorflowbackend method)": [[99, "id379", false], [99, "ot.backend.TensorflowBackend.isinf", false]], "isinf() (ot.backend.torchbackend method)": [[99, "id465", false], [99, "ot.backend.TorchBackend.isinf", false]], "isnan() (ot.backend.backend method)": [[99, "id36", false], [99, "ot.backend.Backend.isnan", false]], "isnan() (ot.backend.cupybackend method)": [[99, "id123", false], [99, "ot.backend.CupyBackend.isnan", false]], "isnan() (ot.backend.jaxbackend method)": [[99, "id208", false], [99, "ot.backend.JaxBackend.isnan", false]], "isnan() (ot.backend.numpybackend method)": [[99, "id294", false], [99, "ot.backend.NumpyBackend.isnan", false]], "isnan() (ot.backend.tensorflowbackend method)": [[99, "id380", false], [99, "ot.backend.TensorflowBackend.isnan", false]], "isnan() (ot.backend.torchbackend method)": [[99, "id466", false], [99, "ot.backend.TorchBackend.isnan", false]], "issparse() (ot.backend.backend method)": [[99, "id37", false], [99, "ot.backend.Backend.issparse", false]], "issparse() (ot.backend.cupybackend method)": [[99, "id124", false], [99, "ot.backend.CupyBackend.issparse", false]], "issparse() (ot.backend.jaxbackend method)": [[99, "id209", false], [99, "ot.backend.JaxBackend.issparse", false]], "issparse() (ot.backend.numpybackend method)": [[99, "id295", false], [99, "ot.backend.NumpyBackend.issparse", false]], "issparse() (ot.backend.tensorflowbackend method)": [[99, "id381", false], [99, "ot.backend.TensorflowBackend.issparse", false]], "issparse() (ot.backend.torchbackend method)": [[99, "id467", false], [99, "ot.backend.TorchBackend.issparse", false]], "jaxbackend (class in ot.backend)": [[99, "id174", false], [99, "ot.backend.JaxBackend", false]], "jcpot_barycenter() (in module ot.bregman)": [[101, "ot.bregman.jcpot_barycenter", false]], "jcpottransport (class in ot.da)": [[103, "id59", false], [103, "ot.da.JCPOTTransport", false]], "joint_ot_mapping_kernel() (in module ot.mapping)": [[113, "id0", false], [113, "ot.mapping.joint_OT_mapping_kernel", false]], "joint_ot_mapping_linear() (in module ot.mapping)": [[113, "id8", false], [113, "ot.mapping.joint_OT_mapping_linear", false]], "kernel() (in module ot.utils)": [[122, "id63", false], [122, "ot.utils.kernel", false]], "kernel_nystroem() (in module ot.lowrank)": [[111, "id4", false], [111, "ot.lowrank.kernel_nystroem", false]], "kl_div() (ot.backend.backend method)": [[99, "id38", false], [99, "ot.backend.Backend.kl_div", false]], "kl_div() (ot.backend.cupybackend method)": [[99, "id125", false], [99, "ot.backend.CupyBackend.kl_div", false]], "kl_div() (ot.backend.jaxbackend method)": [[99, "id210", false], [99, "ot.backend.JaxBackend.kl_div", false]], "kl_div() (ot.backend.numpybackend method)": [[99, "id296", false], [99, "ot.backend.NumpyBackend.kl_div", false]], "kl_div() (ot.backend.tensorflowbackend method)": [[99, "id382", false], [99, "ot.backend.TensorflowBackend.kl_div", false]], "kl_div() (ot.backend.torchbackend method)": [[99, "id468", false], [99, "ot.backend.TorchBackend.kl_div", false]], "label_normalization() (in module ot.utils)": [[122, "id64", false], [122, "ot.utils.label_normalization", false]], "labels_to_masks() (in module ot.utils)": [[122, "id65", false], [122, "ot.utils.labels_to_masks", false]], "laplacian() (in module ot.utils)": [[122, "id66", false], [122, "ot.utils.laplacian", false]], "lazy_plan (ot.utils.otresult attribute)": [[122, "id26", false], [122, "ot.utils.OTResult.lazy_plan", false]], "lazy_plan (ot.utils.otresult property)": [[122, "id0", false], [122, "id33", false]], "lazytensor (class in ot.utils)": [[122, "id16", false], [122, "ot.utils.LazyTensor", false]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[121, "ot.unbalanced.lbfgsb_unbalanced", false]], "lbfgsb_unbalanced2() (in module ot.unbalanced)": [[121, "ot.unbalanced.lbfgsb_unbalanced2", false]], "line_search_armijo() (in module ot.optim)": [[114, "id40", false], [114, "ot.optim.line_search_armijo", false]], "linear_circular_ot() (in module ot)": [[0, "ot.linear_circular_ot", false]], "linear_circular_ot() (in module ot.lp)": [[112, "ot.lp.linear_circular_ot", false]], "linear_sliced_wasserstein_sphere() (in module ot)": [[0, "ot.linear_sliced_wasserstein_sphere", false]], "linear_sliced_wasserstein_sphere() (in module ot.sliced)": [[118, "id14", false], [118, "ot.sliced.linear_sliced_wasserstein_sphere", false]], "lineargwtransport (class in ot.da)": [[103, "id72", false], [103, "ot.da.LinearGWTransport", false]], "lineartransport (class in ot.da)": [[103, "id76", false], [103, "ot.da.LinearTransport", false]], "linspace() (ot.backend.backend method)": [[99, "id39", false], [99, "ot.backend.Backend.linspace", false]], "linspace() (ot.backend.cupybackend method)": [[99, "id126", false], [99, "ot.backend.CupyBackend.linspace", false]], "linspace() (ot.backend.jaxbackend method)": [[99, "id211", false], [99, "ot.backend.JaxBackend.linspace", false]], "linspace() (ot.backend.numpybackend method)": [[99, "id297", false], [99, "ot.backend.NumpyBackend.linspace", false]], "linspace() (ot.backend.tensorflowbackend method)": [[99, "id383", false], [99, "ot.backend.TensorflowBackend.linspace", false]], "linspace() (ot.backend.torchbackend method)": [[99, "id469", false], [99, "ot.backend.TorchBackend.linspace", false]], "list_to_array() (in module ot.utils)": [[122, "id67", false], [122, "ot.utils.list_to_array", false]], "log (ot.utils.otresult property)": [[122, "id34", false], [122, "ot.utils.OTResult.log", false]], "log() (ot.backend.backend method)": [[99, "id40", false], [99, "ot.backend.Backend.log", false]], "log() (ot.backend.cupybackend method)": [[99, "id127", false], [99, "ot.backend.CupyBackend.log", false]], "log() (ot.backend.jaxbackend method)": [[99, "id212", false], [99, "ot.backend.JaxBackend.log", false]], "log() (ot.backend.numpybackend method)": [[99, "id298", false], [99, "ot.backend.NumpyBackend.log", false]], "log() (ot.backend.tensorflowbackend method)": [[99, "id384", false], [99, "ot.backend.TensorflowBackend.log", false]], "log() (ot.backend.torchbackend method)": [[99, "id470", false], [99, "ot.backend.TorchBackend.log", false]], "log_ (ot.da.jcpottransport attribute)": [[103, "id62", false], [103, "ot.da.JCPOTTransport.log_", false]], "log_ (ot.da.mappingtransport attribute)": [[103, "id86", false], [103, "ot.da.MappingTransport.log_", false]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[103, "id100", false], [103, "ot.da.SinkhornL1l2Transport.log_", false]], "log_ (ot.da.sinkhorntransport attribute)": [[103, "id115", false], [103, "ot.da.SinkhornTransport.log_", false]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[103, "id127", false], [103, "ot.da.UnbalancedSinkhornTransport.log_", false]], "logsumexp() (in module ot.dr)": [[105, "id8", false], [105, "ot.dr.logsumexp", false]], "logsumexp() (ot.backend.backend method)": [[99, "id41", false], [99, "ot.backend.Backend.logsumexp", false]], "logsumexp() (ot.backend.cupybackend method)": [[99, "id128", false], [99, "ot.backend.CupyBackend.logsumexp", false]], "logsumexp() (ot.backend.jaxbackend method)": [[99, "id213", false], [99, "ot.backend.JaxBackend.logsumexp", false]], "logsumexp() (ot.backend.numpybackend method)": [[99, "id299", false], [99, "ot.backend.NumpyBackend.logsumexp", false]], "logsumexp() (ot.backend.tensorflowbackend method)": [[99, "id385", false], [99, "ot.backend.TensorflowBackend.logsumexp", false]], "logsumexp() (ot.backend.torchbackend method)": [[99, "id471", false], [99, "ot.backend.TorchBackend.logsumexp", false]], "loss_dual_entropic() (in module ot.stochastic)": [[120, "id24", false], [120, "ot.stochastic.loss_dual_entropic", false]], "loss_dual_quadratic() (in module ot.stochastic)": [[120, "id26", false], [120, "ot.stochastic.loss_dual_quadratic", false]], "loss_linear_batch() (in module ot.batch)": [[100, "ot.batch.loss_linear_batch", false]], "loss_linear_samples_batch() (in module ot.batch)": [[100, "ot.batch.loss_linear_samples_batch", false]], "loss_quadratic_batch() (in module ot.batch)": [[100, "ot.batch.loss_quadratic_batch", false]], "loss_quadratic_samples_batch() (in module ot.batch)": [[100, "ot.batch.loss_quadratic_samples_batch", false]], "lowrank_gromov_wasserstein_samples() (in module ot)": [[0, "ot.lowrank_gromov_wasserstein_samples", false]], "lowrank_gromov_wasserstein_samples() (in module ot.gromov)": [[110, "ot.gromov.lowrank_gromov_wasserstein_samples", false]], "lowrank_sinkhorn() (in module ot)": [[0, "ot.lowrank_sinkhorn", false]], "lowrank_sinkhorn() (in module ot.lowrank)": [[111, "id5", false], [111, "ot.lowrank.lowrank_sinkhorn", false]], "make_1d_gauss() (in module ot.datasets)": [[104, "id0", false], [104, "ot.datasets.make_1D_gauss", false]], "make_2d_samples_gauss() (in module ot.datasets)": [[104, "id1", false], [104, "ot.datasets.make_2D_samples_gauss", false]], "make_data_classif() (in module ot.datasets)": [[104, "id2", false], [104, "ot.datasets.make_data_classif", false]], "mapping_ (ot.da.mappingtransport attribute)": [[103, "id85", false], [103, "ot.da.MappingTransport.mapping_", false]], "mappingtransport (class in ot.da)": [[103, "id83", false], [103, "ot.da.MappingTransport", false]], "marginal_a (ot.utils.otresult attribute)": [[122, "id28", false], [122, "ot.utils.OTResult.marginal_a", false]], "marginal_a (ot.utils.otresult property)": [[122, "id2", false], [122, "id35", false]], "marginal_b (ot.utils.otresult attribute)": [[122, "id29", false], [122, "ot.utils.OTResult.marginal_b", false]], "marginal_b (ot.utils.otresult property)": [[122, "id3", false], [122, "id36", false]], "marginals (ot.utils.otresult attribute)": [[122, "id27", false], [122, "ot.utils.OTResult.marginals", false]], "marginals (ot.utils.otresult property)": [[122, "id37", false], [122, "id4", false]], "matmul() (ot.backend.backend method)": [[99, "id42", false], [99, "ot.backend.Backend.matmul", false]], "matmul() (ot.backend.cupybackend method)": [[99, "id129", false], [99, "ot.backend.CupyBackend.matmul", false]], "matmul() (ot.backend.jaxbackend method)": [[99, "id214", false], [99, "ot.backend.JaxBackend.matmul", false]], "matmul() (ot.backend.numpybackend method)": [[99, "id300", false], [99, "ot.backend.NumpyBackend.matmul", false]], "matmul() (ot.backend.tensorflowbackend method)": [[99, "id386", false], [99, "ot.backend.TensorflowBackend.matmul", false]], "matmul() (ot.backend.torchbackend method)": [[99, "id472", false], [99, "ot.backend.TorchBackend.matmul", false]], "max() (ot.backend.backend method)": [[99, "id43", false], [99, "ot.backend.Backend.max", false]], "max() (ot.backend.cupybackend method)": [[99, "id130", false], [99, "ot.backend.CupyBackend.max", false]], "max() (ot.backend.jaxbackend method)": [[99, "id215", false], [99, "ot.backend.JaxBackend.max", false]], "max() (ot.backend.numpybackend method)": [[99, "id301", false], [99, "ot.backend.NumpyBackend.max", false]], "max() (ot.backend.tensorflowbackend method)": [[99, "id387", false], [99, "ot.backend.TensorflowBackend.max", false]], "max() (ot.backend.torchbackend method)": [[99, "id473", false], [99, "ot.backend.TorchBackend.max", false]], "max_omega() (ot.smooth.negentropy method)": [[119, "id9", false], [119, "ot.smooth.NegEntropy.max_Omega", false]], "max_omega() (ot.smooth.regularization method)": [[119, "id13", false], [119, "ot.smooth.Regularization.max_Omega", false]], "max_omega() (ot.smooth.sparsityconstrained method)": [[119, "id17", false], [119, "ot.smooth.SparsityConstrained.max_Omega", false]], "max_omega() (ot.smooth.squaredl2 method)": [[119, "id21", false], [119, "ot.smooth.SquaredL2.max_Omega", false]], "max_sliced_wasserstein_distance() (in module ot)": [[0, "ot.max_sliced_wasserstein_distance", false]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[118, "id17", false], [118, "ot.sliced.max_sliced_wasserstein_distance", false]], "maximum() (ot.backend.backend method)": [[99, "id44", false], [99, "ot.backend.Backend.maximum", false]], "maximum() (ot.backend.cupybackend method)": [[99, "id131", false], [99, "ot.backend.CupyBackend.maximum", false]], "maximum() (ot.backend.jaxbackend method)": [[99, "id216", false], [99, "ot.backend.JaxBackend.maximum", false]], "maximum() (ot.backend.numpybackend method)": [[99, "id302", false], [99, "ot.backend.NumpyBackend.maximum", false]], "maximum() (ot.backend.tensorflowbackend method)": [[99, "id388", false], [99, "ot.backend.TensorflowBackend.maximum", false]], "maximum() (ot.backend.torchbackend method)": [[99, "id474", false], [99, "ot.backend.TorchBackend.maximum", false]], "mean() (ot.backend.backend method)": [[99, "id45", false], [99, "ot.backend.Backend.mean", false]], "mean() (ot.backend.cupybackend method)": [[99, "id132", false], [99, "ot.backend.CupyBackend.mean", false]], "mean() (ot.backend.jaxbackend method)": [[99, "id217", false], [99, "ot.backend.JaxBackend.mean", false]], "mean() (ot.backend.numpybackend method)": [[99, "id303", false], [99, "ot.backend.NumpyBackend.mean", false]], "mean() (ot.backend.tensorflowbackend method)": [[99, "id389", false], [99, "ot.backend.TensorflowBackend.mean", false]], "mean() (ot.backend.torchbackend method)": [[99, "id475", false], [99, "ot.backend.TorchBackend.mean", false]], "median() (ot.backend.backend method)": [[99, "id46", false], [99, "ot.backend.Backend.median", false]], "median() (ot.backend.cupybackend method)": [[99, "id133", false], [99, "ot.backend.CupyBackend.median", false]], "median() (ot.backend.jaxbackend method)": [[99, "id218", false], [99, "ot.backend.JaxBackend.median", false]], "median() (ot.backend.numpybackend method)": [[99, "id304", false], [99, "ot.backend.NumpyBackend.median", false]], "median() (ot.backend.tensorflowbackend method)": [[99, "id390", false], [99, "ot.backend.TensorflowBackend.median", false]], "median() (ot.backend.torchbackend method)": [[99, "id476", false], [99, "ot.backend.TorchBackend.median", false]], "meshgrid() (ot.backend.backend method)": [[99, "id47", false], [99, "ot.backend.Backend.meshgrid", false]], "meshgrid() (ot.backend.cupybackend method)": [[99, "id134", false], [99, "ot.backend.CupyBackend.meshgrid", false]], "meshgrid() (ot.backend.jaxbackend method)": [[99, "id219", false], [99, "ot.backend.JaxBackend.meshgrid", false]], "meshgrid() (ot.backend.numpybackend method)": [[99, "id305", false], [99, "ot.backend.NumpyBackend.meshgrid", false]], "meshgrid() (ot.backend.tensorflowbackend method)": [[99, "id391", false], [99, "ot.backend.TensorflowBackend.meshgrid", false]], "meshgrid() (ot.backend.torchbackend method)": [[99, "id477", false], [99, "ot.backend.TorchBackend.meshgrid", false]], "min() (ot.backend.backend method)": [[99, "id48", false], [99, "ot.backend.Backend.min", false]], "min() (ot.backend.cupybackend method)": [[99, "id135", false], [99, "ot.backend.CupyBackend.min", false]], "min() (ot.backend.jaxbackend method)": [[99, "id220", false], [99, "ot.backend.JaxBackend.min", false]], "min() (ot.backend.numpybackend method)": [[99, "id306", false], [99, "ot.backend.NumpyBackend.min", false]], "min() (ot.backend.tensorflowbackend method)": [[99, "id392", false], [99, "ot.backend.TensorflowBackend.min", false]], "min() (ot.backend.torchbackend method)": [[99, "id478", false], [99, "ot.backend.TorchBackend.min", false]], "min_pivot_sliced() (in module ot)": [[0, "ot.min_pivot_sliced", false]], "min_pivot_sliced() (in module ot.sliced)": [[118, "id19", false], [118, "ot.sliced.min_pivot_sliced", false]], "minimum() (ot.backend.backend method)": [[99, "id49", false], [99, "ot.backend.Backend.minimum", false]], "minimum() (ot.backend.cupybackend method)": [[99, "id136", false], [99, "ot.backend.CupyBackend.minimum", false]], "minimum() (ot.backend.jaxbackend method)": [[99, "id221", false], [99, "ot.backend.JaxBackend.minimum", false]], "minimum() (ot.backend.numpybackend method)": [[99, "id307", false], [99, "ot.backend.NumpyBackend.minimum", false]], "minimum() (ot.backend.tensorflowbackend method)": [[99, "id393", false], [99, "ot.backend.TensorflowBackend.minimum", false]], "minimum() (ot.backend.torchbackend method)": [[99, "id479", false], [99, "ot.backend.TorchBackend.minimum", false]], "mm_unbalanced() (in module ot.unbalanced)": [[121, "ot.unbalanced.mm_unbalanced", false]], "mm_unbalanced2() (in module ot.unbalanced)": [[121, "ot.unbalanced.mm_unbalanced2", false]], "module": [[0, "module-ot", false], [99, "module-ot.backend", false], [100, "module-ot.batch", false], [101, "module-ot.bregman", false], [102, "module-ot.coot", false], [103, "module-ot.da", false], [104, "module-ot.datasets", false], [105, "module-ot.dr", false], [106, "module-ot.factored", false], [107, "module-ot.gaussian", false], [108, "module-ot.gmm", false], [109, "module-ot.gnn", false], [110, "module-ot.gromov", false], [111, "module-ot.lowrank", false], [112, "module-ot.lp", false], [113, "module-ot.mapping", false], [114, "module-ot.optim", false], [115, "module-ot.partial", false], [116, "module-ot.plot", false], [117, "module-ot.regpath", false], [118, "module-ot.sliced", false], [119, "module-ot.smooth", false], [120, "module-ot.stochastic", false], [121, "module-ot.unbalanced", false], [122, "module-ot.utils", false], [123, "module-ot.weak", false]], "nan_to_num() (ot.backend.backend method)": [[99, "id50", false], [99, "ot.backend.Backend.nan_to_num", false]], "nan_to_num() (ot.backend.cupybackend method)": [[99, "id137", false], [99, "ot.backend.CupyBackend.nan_to_num", false]], "nan_to_num() (ot.backend.jaxbackend method)": [[99, "id222", false], [99, "ot.backend.JaxBackend.nan_to_num", false]], "nan_to_num() (ot.backend.numpybackend method)": [[99, "id308", false], [99, "ot.backend.NumpyBackend.nan_to_num", false]], "nan_to_num() (ot.backend.tensorflowbackend method)": [[99, "id394", false], [99, "ot.backend.TensorflowBackend.nan_to_num", false]], "nan_to_num() (ot.backend.torchbackend method)": [[99, "id480", false], [99, "ot.backend.TorchBackend.nan_to_num", false]], "nearest_brenier_potential_fit() (in module ot.mapping)": [[113, "id11", false], [113, "ot.mapping.nearest_brenier_potential_fit", false]], "nearest_brenier_potential_predict_bounds() (in module ot.mapping)": [[113, "id13", false], [113, "ot.mapping.nearest_brenier_potential_predict_bounds", false]], "nearestbrenierpotential (class in ot.da)": [[103, "id90", false], [103, "ot.da.NearestBrenierPotential", false]], "negentropy (class in ot.smooth)": [[119, "id0", false], [119, "ot.smooth.NegEntropy", false]], "norm() (ot.backend.backend method)": [[99, "id51", false], [99, "ot.backend.Backend.norm", false]], "norm() (ot.backend.cupybackend method)": [[99, "id138", false], [99, "ot.backend.CupyBackend.norm", false]], "norm() (ot.backend.jaxbackend method)": [[99, "id223", false], [99, "ot.backend.JaxBackend.norm", false]], "norm() (ot.backend.numpybackend method)": [[99, "id309", false], [99, "ot.backend.NumpyBackend.norm", false]], "norm() (ot.backend.tensorflowbackend method)": [[99, "id395", false], [99, "ot.backend.TensorflowBackend.norm", false]], "norm() (ot.backend.torchbackend method)": [[99, "id481", false], [99, "ot.backend.TorchBackend.norm", false]], "northwestmmgluing() (in module ot.lp)": [[112, "ot.lp.NorthWestMMGluing", false]], "numpybackend (class in ot.backend)": [[99, "id260", false], [99, "ot.backend.NumpyBackend", false]], "omega() (ot.smooth.negentropy method)": [[119, "id7", false], [119, "ot.smooth.NegEntropy.Omega", false]], "omega() (ot.smooth.regularization method)": [[119, "id11", false], [119, "ot.smooth.Regularization.Omega", false]], "omega() (ot.smooth.sparsityconstrained method)": [[119, "id15", false], [119, "ot.smooth.SparsityConstrained.Omega", false]], "omega() (ot.smooth.squaredl2 method)": [[119, "id19", false], [119, "ot.smooth.SquaredL2.Omega", false]], "ones() (ot.backend.backend method)": [[99, "id52", false], [99, "ot.backend.Backend.ones", false]], "ones() (ot.backend.cupybackend method)": [[99, "id139", false], [99, "ot.backend.CupyBackend.ones", false]], "ones() (ot.backend.jaxbackend method)": [[99, "id224", false], [99, "ot.backend.JaxBackend.ones", false]], "ones() (ot.backend.numpybackend method)": [[99, "id310", false], [99, "ot.backend.NumpyBackend.ones", false]], "ones() (ot.backend.tensorflowbackend method)": [[99, "id396", false], [99, "ot.backend.TensorflowBackend.ones", false]], "ones() (ot.backend.torchbackend method)": [[99, "id482", false], [99, "ot.backend.TorchBackend.ones", false]], "ot": [[0, "module-ot", false]], "ot.backend": [[99, "module-ot.backend", false]], "ot.batch": [[100, "module-ot.batch", false]], "ot.bregman": [[101, "module-ot.bregman", false]], "ot.coot": [[102, "module-ot.coot", false]], "ot.da": [[103, "module-ot.da", false]], "ot.datasets": [[104, "module-ot.datasets", false]], "ot.dr": [[105, "module-ot.dr", false]], "ot.factored": [[106, "module-ot.factored", false]], "ot.gaussian": [[107, "module-ot.gaussian", false]], "ot.gmm": [[108, "module-ot.gmm", false]], "ot.gnn": [[109, "module-ot.gnn", false]], "ot.gromov": [[110, "module-ot.gromov", false]], "ot.lowrank": [[111, "module-ot.lowrank", false]], "ot.lp": [[112, "module-ot.lp", false]], "ot.mapping": [[113, "module-ot.mapping", false]], "ot.optim": [[114, "module-ot.optim", false]], "ot.partial": [[115, "module-ot.partial", false]], "ot.plot": [[116, "module-ot.plot", false]], "ot.regpath": [[117, "module-ot.regpath", false]], "ot.sliced": [[118, "module-ot.sliced", false]], "ot.smooth": [[119, "module-ot.smooth", false]], "ot.stochastic": [[120, "module-ot.stochastic", false]], "ot.unbalanced": [[121, "module-ot.unbalanced", false]], "ot.utils": [[122, "module-ot.utils", false]], "ot.weak": [[123, "module-ot.weak", false]], "ot_barycenter_energy() (in module ot.lp)": [[112, "ot.lp.ot_barycenter_energy", false]], "ot_next_gamma() (in module ot.regpath)": [[117, "id21", false], [117, "ot.regpath.ot_next_gamma", false]], "otresult (class in ot.utils)": [[122, "id17", false], [122, "ot.utils.OTResult", false]], "outer() (ot.backend.backend method)": [[99, "id53", false], [99, "ot.backend.Backend.outer", false]], "outer() (ot.backend.cupybackend method)": [[99, "id140", false], [99, "ot.backend.CupyBackend.outer", false]], "outer() (ot.backend.jaxbackend method)": [[99, "id225", false], [99, "ot.backend.JaxBackend.outer", false]], "outer() (ot.backend.numpybackend method)": [[99, "id311", false], [99, "ot.backend.NumpyBackend.outer", false]], "outer() (ot.backend.tensorflowbackend method)": [[99, "id397", false], [99, "ot.backend.TensorflowBackend.outer", false]], "outer() (ot.backend.torchbackend method)": [[99, "id483", false], [99, "ot.backend.TorchBackend.outer", false]], "parmap() (in module ot.utils)": [[122, "id68", false], [122, "ot.utils.parmap", false]], "partial_cg() (in module ot.optim)": [[114, "id41", false], [114, "ot.optim.partial_cg", false]], "partial_fused_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.partial_fused_gromov_wasserstein", false]], "partial_fused_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.partial_fused_gromov_wasserstein2", false]], "partial_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.partial_gromov_wasserstein", false]], "partial_gromov_wasserstein() (in module ot.partial)": [[115, "ot.partial.partial_gromov_wasserstein", false]], "partial_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.partial_gromov_wasserstein2", false]], "partial_gromov_wasserstein2() (in module ot.partial)": [[115, "ot.partial.partial_gromov_wasserstein2", false]], "partial_wasserstein() (in module ot.partial)": [[115, "ot.partial.partial_wasserstein", false]], "partial_wasserstein2() (in module ot.partial)": [[115, "ot.partial.partial_wasserstein2", false]], "partial_wasserstein_1d() (in module ot.partial)": [[115, "ot.partial.partial_wasserstein_1d", false]], "partial_wasserstein_lagrange() (in module ot.partial)": [[115, "ot.partial.partial_wasserstein_lagrange", false]], "pinv() (ot.backend.backend method)": [[99, "id54", false], [99, "ot.backend.Backend.pinv", false]], "pinv() (ot.backend.cupybackend method)": [[99, "id141", false], [99, "ot.backend.CupyBackend.pinv", false]], "pinv() (ot.backend.jaxbackend method)": [[99, "id226", false], [99, "ot.backend.JaxBackend.pinv", false]], "pinv() (ot.backend.numpybackend method)": [[99, "id312", false], [99, "ot.backend.NumpyBackend.pinv", false]], "pinv() (ot.backend.tensorflowbackend method)": [[99, "id398", false], [99, "ot.backend.TensorflowBackend.pinv", false]], "pinv() (ot.backend.torchbackend method)": [[99, "id484", false], [99, "ot.backend.TorchBackend.pinv", false]], "plan (ot.utils.otresult attribute)": [[122, "id24", false], [122, "ot.utils.OTResult.plan", false]], "plan (ot.utils.otresult property)": [[122, "id38", false], [122, "id5", false]], "plan_dual_entropic() (in module ot.stochastic)": [[120, "id28", false], [120, "ot.stochastic.plan_dual_entropic", false]], "plan_dual_quadratic() (in module ot.stochastic)": [[120, "id30", false], [120, "ot.stochastic.plan_dual_quadratic", false]], "plot1d_mat() (in module ot.plot)": [[116, "id0", false], [116, "ot.plot.plot1D_mat", false]], "plot2d_samples_mat() (in module ot.plot)": [[116, "id1", false], [116, "ot.plot.plot2D_samples_mat", false]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.pointwise_gromov_wasserstein", false]], "potential_a (ot.utils.otresult attribute)": [[122, "id19", false], [122, "ot.utils.OTResult.potential_a", false]], "potential_a (ot.utils.otresult property)": [[122, "id39", false], [122, "id6", false]], "potential_b (ot.utils.otresult attribute)": [[122, "id20", false], [122, "ot.utils.OTResult.potential_b", false]], "potential_b (ot.utils.otresult property)": [[122, "id40", false], [122, "id7", false]], "potentials (ot.utils.otresult attribute)": [[122, "id18", false], [122, "ot.utils.OTResult.potentials", false]], "potentials (ot.utils.otresult property)": [[122, "id41", false], [122, "id8", false]], "power() (ot.backend.backend method)": [[99, "id55", false], [99, "ot.backend.Backend.power", false]], "power() (ot.backend.cupybackend method)": [[99, "id142", false], [99, "ot.backend.CupyBackend.power", false]], "power() (ot.backend.jaxbackend method)": [[99, "id227", false], [99, "ot.backend.JaxBackend.power", false]], "power() (ot.backend.numpybackend method)": [[99, "id313", false], [99, "ot.backend.NumpyBackend.power", false]], "power() (ot.backend.tensorflowbackend method)": [[99, "id399", false], [99, "ot.backend.TensorflowBackend.power", false]], "power() (ot.backend.torchbackend method)": [[99, "id485", false], [99, "ot.backend.TorchBackend.power", false]], "prod() (ot.backend.backend method)": [[99, "id56", false], [99, "ot.backend.Backend.prod", false]], "prod() (ot.backend.cupybackend method)": [[99, "id143", false], [99, "ot.backend.CupyBackend.prod", false]], "prod() (ot.backend.jaxbackend method)": [[99, "id228", false], [99, "ot.backend.JaxBackend.prod", false]], "prod() (ot.backend.numpybackend method)": [[99, "id314", false], [99, "ot.backend.NumpyBackend.prod", false]], "prod() (ot.backend.tensorflowbackend method)": [[99, "id400", false], [99, "ot.backend.TensorflowBackend.prod", false]], "prod() (ot.backend.torchbackend method)": [[99, "id486", false], [99, "ot.backend.TorchBackend.prod", false]], "proj_sdp() (in module ot.utils)": [[122, "id69", false], [122, "ot.utils.proj_SDP", false]], "proj_simplex() (in module ot.utils)": [[122, "id70", false], [122, "ot.utils.proj_simplex", false]], "projc() (in module ot.bregman)": [[101, "ot.bregman.projC", false]], "projection_robust_wasserstein() (in module ot.dr)": [[105, "id9", false], [105, "ot.dr.projection_robust_wasserstein", false]], "projection_simplex() (in module ot.smooth)": [[119, "id25", false], [119, "ot.smooth.projection_simplex", false]], "projection_sparse_simplex() (in module ot.utils)": [[122, "id71", false], [122, "ot.utils.projection_sparse_simplex", false]], "projection_sphere_to_circle() (in module ot.sliced)": [[118, "id22", false], [118, "ot.sliced.projection_sphere_to_circle", false]], "projr() (in module ot.bregman)": [[101, "ot.bregman.projR", false]], "proportions_ (ot.da.jcpottransport attribute)": [[103, "id61", false], [103, "ot.da.JCPOTTransport.proportions_", false]], "qr() (ot.backend.backend method)": [[99, "id57", false], [99, "ot.backend.Backend.qr", false]], "qr() (ot.backend.cupybackend method)": [[99, "id144", false], [99, "ot.backend.CupyBackend.qr", false]], "qr() (ot.backend.jaxbackend method)": [[99, "id229", false], [99, "ot.backend.JaxBackend.qr", false]], "qr() (ot.backend.numpybackend method)": [[99, "id315", false], [99, "ot.backend.NumpyBackend.qr", false]], "qr() (ot.backend.tensorflowbackend method)": [[99, "id401", false], [99, "ot.backend.TensorflowBackend.qr", false]], "qr() (ot.backend.torchbackend method)": [[99, "id487", false], [99, "ot.backend.TorchBackend.qr", false]], "quantized_fused_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.quantized_fused_gromov_wasserstein", false]], "quantized_fused_gromov_wasserstein_partitioned() (in module ot.gromov)": [[110, "ot.gromov.quantized_fused_gromov_wasserstein_partitioned", false]], "quantized_fused_gromov_wasserstein_samples() (in module ot.gromov)": [[110, "ot.gromov.quantized_fused_gromov_wasserstein_samples", false]], "rand() (ot.backend.backend method)": [[99, "id58", false], [99, "ot.backend.Backend.rand", false]], "rand() (ot.backend.cupybackend method)": [[99, "id145", false], [99, "ot.backend.CupyBackend.rand", false]], "rand() (ot.backend.jaxbackend method)": [[99, "id230", false], [99, "ot.backend.JaxBackend.rand", false]], "rand() (ot.backend.numpybackend method)": [[99, "id316", false], [99, "ot.backend.NumpyBackend.rand", false]], "rand() (ot.backend.tensorflowbackend method)": [[99, "id402", false], [99, "ot.backend.TensorflowBackend.rand", false]], "rand() (ot.backend.torchbackend method)": [[99, "id488", false], [99, "ot.backend.TorchBackend.rand", false]], "randn() (ot.backend.backend method)": [[99, "id59", false], [99, "ot.backend.Backend.randn", false]], "randn() (ot.backend.cupybackend method)": [[99, "id146", false], [99, "ot.backend.CupyBackend.randn", false]], "randn() (ot.backend.jaxbackend method)": [[99, "id231", false], [99, "ot.backend.JaxBackend.randn", false]], "randn() (ot.backend.numpybackend method)": [[99, "id317", false], [99, "ot.backend.NumpyBackend.randn", false]], "randn() (ot.backend.tensorflowbackend method)": [[99, "id403", false], [99, "ot.backend.TensorflowBackend.randn", false]], "randn() (ot.backend.torchbackend method)": [[99, "id489", false], [99, "ot.backend.TorchBackend.randn", false]], "randperm() (ot.backend.backend method)": [[99, "id60", false], [99, "ot.backend.Backend.randperm", false]], "randperm() (ot.backend.cupybackend method)": [[99, "id147", false], [99, "ot.backend.CupyBackend.randperm", false]], "randperm() (ot.backend.jaxbackend method)": [[99, "id232", false], [99, "ot.backend.JaxBackend.randperm", false]], "randperm() (ot.backend.numpybackend method)": [[99, "id318", false], [99, "ot.backend.NumpyBackend.randperm", false]], "randperm() (ot.backend.tensorflowbackend method)": [[99, "id404", false], [99, "ot.backend.TensorflowBackend.randperm", false]], "randperm() (ot.backend.torchbackend method)": [[99, "id490", false], [99, "ot.backend.TorchBackend.randperm", false]], "recast_ot_as_lasso() (in module ot.regpath)": [[117, "id23", false], [117, "ot.regpath.recast_ot_as_lasso", false]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[117, "id25", false], [117, "ot.regpath.recast_semi_relaxed_as_lasso", false]], "reduce_lazytensor() (in module ot.utils)": [[122, "id73", false], [122, "ot.utils.reduce_lazytensor", false]], "regularization (class in ot.smooth)": [[119, "id10", false], [119, "ot.smooth.Regularization", false]], "regularization_path() (in module ot.regpath)": [[117, "id26", false], [117, "ot.regpath.regularization_path", false]], "repeat() (ot.backend.backend method)": [[99, "id61", false], [99, "ot.backend.Backend.repeat", false]], "repeat() (ot.backend.cupybackend method)": [[99, "id148", false], [99, "ot.backend.CupyBackend.repeat", false]], "repeat() (ot.backend.jaxbackend method)": [[99, "id233", false], [99, "ot.backend.JaxBackend.repeat", false]], "repeat() (ot.backend.numpybackend method)": [[99, "id319", false], [99, "ot.backend.NumpyBackend.repeat", false]], "repeat() (ot.backend.tensorflowbackend method)": [[99, "id405", false], [99, "ot.backend.TensorflowBackend.repeat", false]], "repeat() (ot.backend.torchbackend method)": [[99, "id491", false], [99, "ot.backend.TorchBackend.repeat", false]], "rescale_for_imshow_plot() (in module ot.plot)": [[116, "id2", false], [116, "ot.plot.rescale_for_imshow_plot", false]], "reshape() (ot.backend.backend method)": [[99, "id62", false], [99, "ot.backend.Backend.reshape", false]], "reshape() (ot.backend.cupybackend method)": [[99, "id149", false], [99, "ot.backend.CupyBackend.reshape", false]], "reshape() (ot.backend.jaxbackend method)": [[99, "id234", false], [99, "ot.backend.JaxBackend.reshape", false]], "reshape() (ot.backend.numpybackend method)": [[99, "id320", false], [99, "ot.backend.NumpyBackend.reshape", false]], "reshape() (ot.backend.tensorflowbackend method)": [[99, "id406", false], [99, "ot.backend.TensorflowBackend.reshape", false]], "reshape() (ot.backend.torchbackend method)": [[99, "id492", false], [99, "ot.backend.TorchBackend.reshape", false]], "sag_entropic_transport() (in module ot.stochastic)": [[120, "id32", false], [120, "ot.stochastic.sag_entropic_transport", false]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.sampled_gromov_wasserstein", false]], "screenkhorn() (in module ot.bregman)": [[101, "ot.bregman.screenkhorn", false]], "searchsorted() (ot.backend.backend method)": [[99, "id63", false], [99, "ot.backend.Backend.searchsorted", false]], "searchsorted() (ot.backend.cupybackend method)": [[99, "id150", false], [99, "ot.backend.CupyBackend.searchsorted", false]], "searchsorted() (ot.backend.jaxbackend method)": [[99, "id235", false], [99, "ot.backend.JaxBackend.searchsorted", false]], "searchsorted() (ot.backend.numpybackend method)": [[99, "id321", false], [99, "ot.backend.NumpyBackend.searchsorted", false]], "searchsorted() (ot.backend.tensorflowbackend method)": [[99, "id407", false], [99, "ot.backend.TensorflowBackend.searchsorted", false]], "searchsorted() (ot.backend.torchbackend method)": [[99, "id493", false], [99, "ot.backend.TorchBackend.searchsorted", false]], "seed() (ot.backend.backend method)": [[99, "id64", false], [99, "ot.backend.Backend.seed", false]], "seed() (ot.backend.cupybackend method)": [[99, "id151", false], [99, "ot.backend.CupyBackend.seed", false]], "seed() (ot.backend.jaxbackend method)": [[99, "id236", false], [99, "ot.backend.JaxBackend.seed", false]], "seed() (ot.backend.numpybackend method)": [[99, "id322", false], [99, "ot.backend.NumpyBackend.seed", false]], "seed() (ot.backend.tensorflowbackend method)": [[99, "id408", false], [99, "ot.backend.TensorflowBackend.seed", false]], "seed() (ot.backend.torchbackend method)": [[99, "id494", false], [99, "ot.backend.TorchBackend.seed", false]], "semi_dual_obj_grad() (in module ot.smooth)": [[119, "id26", false], [119, "ot.smooth.semi_dual_obj_grad", false]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[117, "id28", false], [117, "ot.regpath.semi_relaxed_next_gamma", false]], "semi_relaxed_path() (in module ot.regpath)": [[117, "id30", false], [117, "ot.regpath.semi_relaxed_path", false]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[0, "ot.semidiscrete_wasserstein2_unif_circle", false]], "semidiscrete_wasserstein2_unif_circle() (in module ot.lp)": [[112, "ot.lp.semidiscrete_wasserstein2_unif_circle", false]], "semirelaxed_cg() (in module ot.optim)": [[114, "id44", false], [114, "ot.optim.semirelaxed_cg", false]], "semirelaxed_fgw_barycenters() (in module ot.gromov)": [[110, "ot.gromov.semirelaxed_fgw_barycenters", false]], "semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.semirelaxed_fused_gromov_wasserstein", false]], "semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.semirelaxed_fused_gromov_wasserstein2", false]], "semirelaxed_gromov_barycenters() (in module ot.gromov)": [[110, "ot.gromov.semirelaxed_gromov_barycenters", false]], "semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[110, "ot.gromov.semirelaxed_gromov_wasserstein", false]], "semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[110, "ot.gromov.semirelaxed_gromov_wasserstein2", false]], "semirelaxed_init_plan() (in module ot.gromov)": [[110, "ot.gromov.semirelaxed_init_plan", false]], "set_gradients() (ot.backend.backend method)": [[99, "id65", false], [99, "ot.backend.Backend.set_gradients", false]], "set_gradients() (ot.backend.cupybackend method)": [[99, "id152", false], [99, "ot.backend.CupyBackend.set_gradients", false]], "set_gradients() (ot.backend.jaxbackend method)": [[99, "id237", false], [99, "ot.backend.JaxBackend.set_gradients", false]], "set_gradients() (ot.backend.numpybackend method)": [[99, "id323", false], [99, "ot.backend.NumpyBackend.set_gradients", false]], "set_gradients() (ot.backend.tensorflowbackend method)": [[99, "id409", false], [99, "ot.backend.TensorflowBackend.set_gradients", false]], "set_gradients() (ot.backend.torchbackend method)": [[99, "id495", false], [99, "ot.backend.TorchBackend.set_gradients", false]], "set_params() (ot.utils.baseestimator method)": [[122, "id15", false], [122, "ot.utils.BaseEstimator.set_params", false]], "sgd_entropic_regularization() (in module ot.stochastic)": [[120, "id35", false], [120, "ot.stochastic.sgd_entropic_regularization", false]], "sign() (ot.backend.backend method)": [[99, "id66", false], [99, "ot.backend.Backend.sign", false]], "sign() (ot.backend.cupybackend method)": [[99, "id153", false], [99, "ot.backend.CupyBackend.sign", false]], "sign() (ot.backend.jaxbackend method)": [[99, "id238", false], [99, "ot.backend.JaxBackend.sign", false]], "sign() (ot.backend.numpybackend method)": [[99, "id324", false], [99, "ot.backend.NumpyBackend.sign", false]], "sign() (ot.backend.tensorflowbackend method)": [[99, "id410", false], [99, "ot.backend.TensorflowBackend.sign", false]], "sign() (ot.backend.torchbackend method)": [[99, "id496", false], [99, "ot.backend.TorchBackend.sign", false]], "sinkhorn() (in module ot)": [[0, "ot.sinkhorn", false]], "sinkhorn() (in module ot.bregman)": [[101, "ot.bregman.sinkhorn", false]], "sinkhorn() (in module ot.dr)": [[105, "id12", false], [105, "ot.dr.sinkhorn", false]], "sinkhorn2() (in module ot)": [[0, "ot.sinkhorn2", false]], "sinkhorn2() (in module ot.bregman)": [[101, "ot.bregman.sinkhorn2", false]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[101, "ot.bregman.sinkhorn_epsilon_scaling", false]], "sinkhorn_knopp() (in module ot.bregman)": [[101, "ot.bregman.sinkhorn_knopp", false]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[121, "ot.unbalanced.sinkhorn_knopp_unbalanced", false]], "sinkhorn_l1l2_gl() (in module ot.da)": [[103, "id137", false], [103, "ot.da.sinkhorn_l1l2_gl", false]], "sinkhorn_log() (in module ot.bregman)": [[101, "ot.bregman.sinkhorn_log", false]], "sinkhorn_log() (in module ot.dr)": [[105, "id13", false], [105, "ot.dr.sinkhorn_log", false]], "sinkhorn_low_rank_kernel() (in module ot.lowrank)": [[111, "id7", false], [111, "ot.lowrank.sinkhorn_low_rank_kernel", false]], "sinkhorn_lpl1_mm() (in module ot)": [[0, "ot.sinkhorn_lpl1_mm", false]], "sinkhorn_lpl1_mm() (in module ot.da)": [[103, "id141", false], [103, "ot.da.sinkhorn_lpl1_mm", false]], "sinkhorn_stabilized() (in module ot.bregman)": [[101, "ot.bregman.sinkhorn_stabilized", false]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[121, "ot.unbalanced.sinkhorn_stabilized_unbalanced", false]], "sinkhorn_unbalanced() (in module ot)": [[0, "ot.sinkhorn_unbalanced", false]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[121, "ot.unbalanced.sinkhorn_unbalanced", false]], "sinkhorn_unbalanced2() (in module ot)": [[0, "ot.sinkhorn_unbalanced2", false]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[121, "ot.unbalanced.sinkhorn_unbalanced2", false]], "sinkhorn_unbalanced_translation_invariant() (in module ot.unbalanced)": [[121, "ot.unbalanced.sinkhorn_unbalanced_translation_invariant", false]], "sinkhornl1l2transport (class in ot.da)": [[103, "id98", false], [103, "ot.da.SinkhornL1l2Transport", false]], "sinkhornlpl1transport (class in ot.da)": [[103, "id106", false], [103, "ot.da.SinkhornLpl1Transport", false]], "sinkhorntransport (class in ot.da)": [[103, "id113", false], [103, "ot.da.SinkhornTransport", false]], "sliced_permutations() (in module ot.sliced)": [[118, "id23", false], [118, "ot.sliced.sliced_permutations", false]], "sliced_wasserstein_distance() (in module ot)": [[0, "ot.sliced_wasserstein_distance", false]], "sliced_wasserstein_distance() (in module ot.sliced)": [[118, "id24", false], [118, "ot.sliced.sliced_wasserstein_distance", false]], "sliced_wasserstein_sphere() (in module ot)": [[0, "ot.sliced_wasserstein_sphere", false]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[118, "id26", false], [118, "ot.sliced.sliced_wasserstein_sphere", false]], "sliced_wasserstein_sphere_unif() (in module ot)": [[0, "ot.sliced_wasserstein_sphere_unif", false]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[118, "id28", false], [118, "ot.sliced.sliced_wasserstein_sphere_unif", false]], "slogdet() (ot.backend.backend method)": [[99, "id67", false], [99, "ot.backend.Backend.slogdet", false]], "slogdet() (ot.backend.cupybackend method)": [[99, "id154", false], [99, "ot.backend.CupyBackend.slogdet", false]], "slogdet() (ot.backend.jaxbackend method)": [[99, "id239", false], [99, "ot.backend.JaxBackend.slogdet", false]], "slogdet() (ot.backend.numpybackend method)": [[99, "id325", false], [99, "ot.backend.NumpyBackend.slogdet", false]], "slogdet() (ot.backend.tensorflowbackend method)": [[99, "id411", false], [99, "ot.backend.TensorflowBackend.slogdet", false]], "slogdet() (ot.backend.torchbackend method)": [[99, "id497", false], [99, "ot.backend.TorchBackend.slogdet", false]], "smooth_ot_dual() (in module ot.smooth)": [[119, "id27", false], [119, "ot.smooth.smooth_ot_dual", false]], "smooth_ot_semi_dual() (in module ot.smooth)": [[119, "id32", false], [119, "ot.smooth.smooth_ot_semi_dual", false]], "solve() (in module ot)": [[0, "ot.solve", false]], "solve() (ot.backend.backend method)": [[99, "id68", false], [99, "ot.backend.Backend.solve", false]], "solve() (ot.backend.cupybackend method)": [[99, "id155", false], [99, "ot.backend.CupyBackend.solve", false]], "solve() (ot.backend.jaxbackend method)": [[99, "id240", false], [99, "ot.backend.JaxBackend.solve", false]], "solve() (ot.backend.numpybackend method)": [[99, "id326", false], [99, "ot.backend.NumpyBackend.solve", false]], "solve() (ot.backend.tensorflowbackend method)": [[99, "id412", false], [99, "ot.backend.TensorflowBackend.solve", false]], "solve() (ot.backend.torchbackend method)": [[99, "id498", false], [99, "ot.backend.TorchBackend.solve", false]], "solve_1d_linesearch_quad() (in module ot.optim)": [[114, "id47", false], [114, "ot.optim.solve_1d_linesearch_quad", false]], "solve_batch() (in module ot)": [[0, "ot.solve_batch", false]], "solve_batch() (in module ot.batch)": [[100, "ot.batch.solve_batch", false]], "solve_dual() (in module ot.smooth)": [[119, "id37", false], [119, "ot.smooth.solve_dual", false]], "solve_dual_entropic() (in module ot.stochastic)": [[120, "id37", false], [120, "ot.stochastic.solve_dual_entropic", false]], "solve_gromov() (in module ot)": [[0, "ot.solve_gromov", false]], "solve_gromov_batch() (in module ot)": [[0, "ot.solve_gromov_batch", false]], "solve_gromov_batch() (in module ot.batch)": [[100, "ot.batch.solve_gromov_batch", false]], "solve_gromov_linesearch() (in module ot.gromov)": [[110, "ot.gromov.solve_gromov_linesearch", false]], "solve_partial_gromov_linesearch() (in module ot.gromov)": [[110, "ot.gromov.solve_partial_gromov_linesearch", false]], "solve_sample() (in module ot)": [[0, "ot.solve_sample", false]], "solve_sample_batch() (in module ot)": [[0, "ot.solve_sample_batch", false]], "solve_sample_batch() (in module ot.batch)": [[100, "ot.batch.solve_sample_batch", false]], "solve_semi_dual() (in module ot.smooth)": [[119, "id38", false], [119, "ot.smooth.solve_semi_dual", false]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[120, "id39", false], [120, "ot.stochastic.solve_semi_dual_entropic", false]], "solve_semirelaxed_gromov_linesearch() (in module ot.gromov)": [[110, "ot.gromov.solve_semirelaxed_gromov_linesearch", false]], "sort() (ot.backend.backend method)": [[99, "id69", false], [99, "ot.backend.Backend.sort", false]], "sort() (ot.backend.cupybackend method)": [[99, "id156", false], [99, "ot.backend.CupyBackend.sort", false]], "sort() (ot.backend.jaxbackend method)": [[99, "id241", false], [99, "ot.backend.JaxBackend.sort", false]], "sort() (ot.backend.numpybackend method)": [[99, "id327", false], [99, "ot.backend.NumpyBackend.sort", false]], "sort() (ot.backend.tensorflowbackend method)": [[99, "id413", false], [99, "ot.backend.TensorflowBackend.sort", false]], "sort() (ot.backend.torchbackend method)": [[99, "id499", false], [99, "ot.backend.TorchBackend.sort", false]], "sort2() (ot.backend.backend method)": [[99, "id70", false], [99, "ot.backend.Backend.sort2", false]], "sort2() (ot.backend.cupybackend method)": [[99, "id157", false], [99, "ot.backend.CupyBackend.sort2", false]], "sort2() (ot.backend.jaxbackend method)": [[99, "id242", false], [99, "ot.backend.JaxBackend.sort2", false]], "sort2() (ot.backend.numpybackend method)": [[99, "id328", false], [99, "ot.backend.NumpyBackend.sort2", false]], "sort2() (ot.backend.tensorflowbackend method)": [[99, "id414", false], [99, "ot.backend.TensorflowBackend.sort2", false]], "sort2() (ot.backend.torchbackend method)": [[99, "id500", false], [99, "ot.backend.TorchBackend.sort2", false]], "sparse_plan (ot.utils.otresult attribute)": [[122, "id25", false], [122, "ot.utils.OTResult.sparse_plan", false]], "sparse_plan (ot.utils.otresult property)": [[122, "id42", false], [122, "id9", false]], "sparsityconstrained (class in ot.smooth)": [[119, "id14", false], [119, "ot.smooth.SparsityConstrained", false]], "split_classes() (in module ot.dr)": [[105, "id14", false], [105, "ot.dr.split_classes", false]], "sqrt() (ot.backend.backend method)": [[99, "id71", false], [99, "ot.backend.Backend.sqrt", false]], "sqrt() (ot.backend.cupybackend method)": [[99, "id158", false], [99, "ot.backend.CupyBackend.sqrt", false]], "sqrt() (ot.backend.jaxbackend method)": [[99, "id243", false], [99, "ot.backend.JaxBackend.sqrt", false]], "sqrt() (ot.backend.numpybackend method)": [[99, "id329", false], [99, "ot.backend.NumpyBackend.sqrt", false]], "sqrt() (ot.backend.tensorflowbackend method)": [[99, "id415", false], [99, "ot.backend.TensorflowBackend.sqrt", false]], "sqrt() (ot.backend.torchbackend method)": [[99, "id501", false], [99, "ot.backend.TorchBackend.sqrt", false]], "sqrtm() (ot.backend.backend method)": [[99, "id72", false], [99, "ot.backend.Backend.sqrtm", false]], "sqrtm() (ot.backend.cupybackend method)": [[99, "id159", false], [99, "ot.backend.CupyBackend.sqrtm", false]], "sqrtm() (ot.backend.jaxbackend method)": [[99, "id244", false], [99, "ot.backend.JaxBackend.sqrtm", false]], "sqrtm() (ot.backend.numpybackend method)": [[99, "id330", false], [99, "ot.backend.NumpyBackend.sqrtm", false]], "sqrtm() (ot.backend.tensorflowbackend method)": [[99, "id416", false], [99, "ot.backend.TensorflowBackend.sqrtm", false]], "sqrtm() (ot.backend.torchbackend method)": [[99, "id502", false], [99, "ot.backend.TorchBackend.sqrtm", false]], "squaredl2 (class in ot.smooth)": [[119, "id18", false], [119, "ot.smooth.SquaredL2", false]], "squeeze() (ot.backend.backend method)": [[99, "id73", false], [99, "ot.backend.Backend.squeeze", false]], "squeeze() (ot.backend.cupybackend method)": [[99, "id160", false], [99, "ot.backend.CupyBackend.squeeze", false]], "squeeze() (ot.backend.jaxbackend method)": [[99, "id245", false], [99, "ot.backend.JaxBackend.squeeze", false]], "squeeze() (ot.backend.numpybackend method)": [[99, "id331", false], [99, "ot.backend.NumpyBackend.squeeze", false]], "squeeze() (ot.backend.tensorflowbackend method)": [[99, "id417", false], [99, "ot.backend.TensorflowBackend.squeeze", false]], "squeeze() (ot.backend.torchbackend method)": [[99, "id503", false], [99, "ot.backend.TorchBackend.squeeze", false]], "stack() (ot.backend.backend method)": [[99, "id74", false], [99, "ot.backend.Backend.stack", false]], "stack() (ot.backend.cupybackend method)": [[99, "id161", false], [99, "ot.backend.CupyBackend.stack", false]], "stack() (ot.backend.jaxbackend method)": [[99, "id246", false], [99, "ot.backend.JaxBackend.stack", false]], "stack() (ot.backend.numpybackend method)": [[99, "id332", false], [99, "ot.backend.NumpyBackend.stack", false]], "stack() (ot.backend.tensorflowbackend method)": [[99, "id418", false], [99, "ot.backend.TensorflowBackend.stack", false]], "stack() (ot.backend.torchbackend method)": [[99, "id504", false], [99, "ot.backend.TorchBackend.stack", false]], "status (ot.utils.otresult property)": [[122, "id43", false], [122, "ot.utils.OTResult.status", false]], "std() (ot.backend.backend method)": [[99, "id75", false], [99, "ot.backend.Backend.std", false]], "std() (ot.backend.cupybackend method)": [[99, "id162", false], [99, "ot.backend.CupyBackend.std", false]], "std() (ot.backend.jaxbackend method)": [[99, "id247", false], [99, "ot.backend.JaxBackend.std", false]], "std() (ot.backend.numpybackend method)": [[99, "id333", false], [99, "ot.backend.NumpyBackend.std", false]], "std() (ot.backend.tensorflowbackend method)": [[99, "id419", false], [99, "ot.backend.TensorflowBackend.std", false]], "std() (ot.backend.torchbackend method)": [[99, "id505", false], [99, "ot.backend.TorchBackend.std", false]], "sum() (ot.backend.backend method)": [[99, "id76", false], [99, "ot.backend.Backend.sum", false]], "sum() (ot.backend.cupybackend method)": [[99, "id163", false], [99, "ot.backend.CupyBackend.sum", false]], "sum() (ot.backend.jaxbackend method)": [[99, "id248", false], [99, "ot.backend.JaxBackend.sum", false]], "sum() (ot.backend.numpybackend method)": [[99, "id334", false], [99, "ot.backend.NumpyBackend.sum", false]], "sum() (ot.backend.tensorflowbackend method)": [[99, "id420", false], [99, "ot.backend.TensorflowBackend.sum", false]], "sum() (ot.backend.torchbackend method)": [[99, "id506", false], [99, "ot.backend.TorchBackend.sum", false]], "take_along_axis() (ot.backend.backend method)": [[99, "id77", false], [99, "ot.backend.Backend.take_along_axis", false]], "take_along_axis() (ot.backend.cupybackend method)": [[99, "id164", false], [99, "ot.backend.CupyBackend.take_along_axis", false]], "take_along_axis() (ot.backend.jaxbackend method)": [[99, "id249", false], [99, "ot.backend.JaxBackend.take_along_axis", false]], "take_along_axis() (ot.backend.numpybackend method)": [[99, "id335", false], [99, "ot.backend.NumpyBackend.take_along_axis", false]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[99, "id421", false], [99, "ot.backend.TensorflowBackend.take_along_axis", false]], "take_along_axis() (ot.backend.torchbackend method)": [[99, "id507", false], [99, "ot.backend.TorchBackend.take_along_axis", false]], "tensor_batch() (in module ot.batch)": [[100, "ot.batch.tensor_batch", false]], "tensor_product() (in module ot.gromov)": [[110, "ot.gromov.tensor_product", false]], "tensorflowbackend (class in ot.backend)": [[99, "id346", false], [99, "ot.backend.TensorflowBackend", false]], "tfgwpooling (class in ot.gnn)": [[109, "ot.gnn.TFGWPooling", false]], "tic() (in module ot)": [[0, "ot.tic", false]], "tic() (in module ot.utils)": [[122, "id74", false], [122, "ot.utils.tic", false]], "tile() (ot.backend.backend method)": [[99, "id78", false], [99, "ot.backend.Backend.tile", false]], "tile() (ot.backend.cupybackend method)": [[99, "id165", false], [99, "ot.backend.CupyBackend.tile", false]], "tile() (ot.backend.jaxbackend method)": [[99, "id250", false], [99, "ot.backend.JaxBackend.tile", false]], "tile() (ot.backend.numpybackend method)": [[99, "id336", false], [99, "ot.backend.NumpyBackend.tile", false]], "tile() (ot.backend.tensorflowbackend method)": [[99, "id422", false], [99, "ot.backend.TensorflowBackend.tile", false]], "tile() (ot.backend.torchbackend method)": [[99, "id508", false], [99, "ot.backend.TorchBackend.tile", false]], "to_numpy() (in module ot.backend)": [[99, "id521", false], [99, "ot.backend.to_numpy", false]], "to_numpy() (ot.backend.backend method)": [[99, "id79", false], [99, "ot.backend.Backend.to_numpy", false]], "toc() (in module ot)": [[0, "ot.toc", false]], "toc() (in module ot.utils)": [[122, "id75", false], [122, "ot.utils.toc", false]], "tocsr() (ot.backend.backend method)": [[99, "id80", false], [99, "ot.backend.Backend.tocsr", false]], "tocsr() (ot.backend.cupybackend method)": [[99, "id166", false], [99, "ot.backend.CupyBackend.tocsr", false]], "tocsr() (ot.backend.jaxbackend method)": [[99, "id251", false], [99, "ot.backend.JaxBackend.tocsr", false]], "tocsr() (ot.backend.numpybackend method)": [[99, "id337", false], [99, "ot.backend.NumpyBackend.tocsr", false]], "tocsr() (ot.backend.tensorflowbackend method)": [[99, "id423", false], [99, "ot.backend.TensorflowBackend.tocsr", false]], "tocsr() (ot.backend.torchbackend method)": [[99, "id509", false], [99, "ot.backend.TorchBackend.tocsr", false]], "todense() (ot.backend.backend method)": [[99, "id81", false], [99, "ot.backend.Backend.todense", false]], "todense() (ot.backend.cupybackend method)": [[99, "id167", false], [99, "ot.backend.CupyBackend.todense", false]], "todense() (ot.backend.jaxbackend method)": [[99, "id252", false], [99, "ot.backend.JaxBackend.todense", false]], "todense() (ot.backend.numpybackend method)": [[99, "id338", false], [99, "ot.backend.NumpyBackend.todense", false]], "todense() (ot.backend.tensorflowbackend method)": [[99, "id424", false], [99, "ot.backend.TensorflowBackend.todense", false]], "todense() (ot.backend.torchbackend method)": [[99, "id510", false], [99, "ot.backend.TorchBackend.todense", false]], "toq() (in module ot)": [[0, "ot.toq", false]], "toq() (in module ot.utils)": [[122, "id76", false], [122, "ot.utils.toq", false]], "torchbackend (class in ot.backend)": [[99, "id432", false], [99, "ot.backend.TorchBackend", false]], "trace() (ot.backend.backend method)": [[99, "id82", false], [99, "ot.backend.Backend.trace", false]], "trace() (ot.backend.cupybackend method)": [[99, "id168", false], [99, "ot.backend.CupyBackend.trace", false]], "trace() (ot.backend.jaxbackend method)": [[99, "id253", false], [99, "ot.backend.JaxBackend.trace", false]], "trace() (ot.backend.numpybackend method)": [[99, "id339", false], [99, "ot.backend.NumpyBackend.trace", false]], "trace() (ot.backend.tensorflowbackend method)": [[99, "id425", false], [99, "ot.backend.TensorflowBackend.trace", false]], "trace() (ot.backend.torchbackend method)": [[99, "id511", false], [99, "ot.backend.TorchBackend.trace", false]], "transform() (ot.da.basetransport method)": [[103, "id42", false], [103, "ot.da.BaseTransport.transform", false]], "transform() (ot.da.jcpottransport method)": [[103, "id68", false], [103, "ot.da.JCPOTTransport.transform", false]], "transform() (ot.da.lineartransport method)": [[103, "id82", false], [103, "ot.da.LinearTransport.transform", false]], "transform() (ot.da.mappingtransport method)": [[103, "id89", false], [103, "ot.da.MappingTransport.transform", false]], "transform() (ot.da.nearestbrenierpotential method)": [[103, "id95", false], [103, "ot.da.NearestBrenierPotential.transform", false]], "transform() (ot.da.sinkhorntransport method)": [[103, "id124", false], [103, "ot.da.SinkhornTransport.transform", false]], "transform_labels() (ot.da.basetransport method)": [[103, "id43", false], [103, "ot.da.BaseTransport.transform_labels", false]], "transform_labels() (ot.da.jcpottransport method)": [[103, "id69", false], [103, "ot.da.JCPOTTransport.transform_labels", false]], "transpose() (ot.backend.backend method)": [[99, "id83", false], [99, "ot.backend.Backend.transpose", false]], "transpose() (ot.backend.cupybackend method)": [[99, "id169", false], [99, "ot.backend.CupyBackend.transpose", false]], "transpose() (ot.backend.jaxbackend method)": [[99, "id254", false], [99, "ot.backend.JaxBackend.transpose", false]], "transpose() (ot.backend.numpybackend method)": [[99, "id340", false], [99, "ot.backend.NumpyBackend.transpose", false]], "transpose() (ot.backend.tensorflowbackend method)": [[99, "id426", false], [99, "ot.backend.TensorflowBackend.transpose", false]], "transpose() (ot.backend.torchbackend method)": [[99, "id512", false], [99, "ot.backend.TorchBackend.transpose", false]], "twpooling (class in ot.gnn)": [[109, "ot.gnn.TWPooling", false]], "unbalanced_co_optimal_transport() (in module ot.gromov)": [[110, "ot.gromov.unbalanced_co_optimal_transport", false]], "unbalanced_co_optimal_transport2() (in module ot.gromov)": [[110, "ot.gromov.unbalanced_co_optimal_transport2", false]], "unbalancedsinkhorntransport (class in ot.da)": [[103, "id125", false], [103, "ot.da.UnbalancedSinkhornTransport", false]], "undefinedparameter": [[122, "ot.utils.UndefinedParameter", false]], "unif() (in module ot)": [[0, "ot.unif", false]], "unif() (in module ot.utils)": [[122, "id77", false], [122, "ot.utils.unif", false]], "unique() (ot.backend.backend method)": [[99, "id84", false], [99, "ot.backend.Backend.unique", false]], "unique() (ot.backend.cupybackend method)": [[99, "id170", false], [99, "ot.backend.CupyBackend.unique", false]], "unique() (ot.backend.jaxbackend method)": [[99, "id255", false], [99, "ot.backend.JaxBackend.unique", false]], "unique() (ot.backend.numpybackend method)": [[99, "id341", false], [99, "ot.backend.NumpyBackend.unique", false]], "unique() (ot.backend.tensorflowbackend method)": [[99, "id427", false], [99, "ot.backend.TensorflowBackend.unique", false]], "unique() (ot.backend.torchbackend method)": [[99, "id513", false], [99, "ot.backend.TorchBackend.unique", false]], "unmix() (in module ot.bregman)": [[101, "ot.bregman.unmix", false]], "unsqueeze() (ot.backend.backend method)": [[99, "id85", false], [99, "ot.backend.Backend.unsqueeze", false]], "unsqueeze() (ot.backend.jaxbackend method)": [[99, "id256", false], [99, "ot.backend.JaxBackend.unsqueeze", false]], "unsqueeze() (ot.backend.numpybackend method)": [[99, "id342", false], [99, "ot.backend.NumpyBackend.unsqueeze", false]], "unsqueeze() (ot.backend.tensorflowbackend method)": [[99, "id428", false], [99, "ot.backend.TensorflowBackend.unsqueeze", false]], "unsqueeze() (ot.backend.torchbackend method)": [[99, "id514", false], [99, "ot.backend.TorchBackend.unsqueeze", false]], "uot_cost_matrix() (in module ot.gromov)": [[110, "ot.gromov.uot_cost_matrix", false]], "uot_parameters_and_measures() (in module ot.gromov)": [[110, "ot.gromov.uot_parameters_and_measures", false]], "update_barycenter_feature() (in module ot.gromov)": [[110, "ot.gromov.update_barycenter_feature", false]], "update_barycenter_structure() (in module ot.gromov)": [[110, "ot.gromov.update_barycenter_structure", false]], "value (ot.utils.otresult attribute)": [[122, "id21", false], [122, "ot.utils.OTResult.value", false]], "value (ot.utils.otresult property)": [[122, "id10", false], [122, "id44", false]], "value_linear (ot.utils.otresult attribute)": [[122, "id22", false], [122, "ot.utils.OTResult.value_linear", false]], "value_linear (ot.utils.otresult property)": [[122, "id11", false], [122, "id45", false]], "value_quad (ot.utils.otresult attribute)": [[122, "id23", false], [122, "ot.utils.OTResult.value_quad", false]], "value_quad (ot.utils.otresult property)": [[122, "id12", false], [122, "id46", false]], "wasserstein_1d() (in module ot)": [[0, "ot.wasserstein_1d", false]], "wasserstein_1d() (in module ot.lp)": [[112, "ot.lp.wasserstein_1d", false]], "wasserstein_circle() (in module ot)": [[0, "ot.wasserstein_circle", false]], "wasserstein_circle() (in module ot.lp)": [[112, "ot.lp.wasserstein_circle", false]], "wasserstein_distance_to_templates() (in module ot.gnn)": [[109, "ot.gnn.wasserstein_distance_to_templates", false]], "wda() (in module ot.dr)": [[105, "id15", false], [105, "ot.dr.wda", false]], "weak_optimal_transport() (in module ot)": [[0, "ot.weak_optimal_transport", false]], "weak_optimal_transport() (in module ot.weak)": [[123, "id0", false], [123, "ot.weak.weak_optimal_transport", false]], "where() (ot.backend.backend method)": [[99, "id86", false], [99, "ot.backend.Backend.where", false]], "where() (ot.backend.cupybackend method)": [[99, "id171", false], [99, "ot.backend.CupyBackend.where", false]], "where() (ot.backend.jaxbackend method)": [[99, "id257", false], [99, "ot.backend.JaxBackend.where", false]], "where() (ot.backend.numpybackend method)": [[99, "id343", false], [99, "ot.backend.NumpyBackend.where", false]], "where() (ot.backend.tensorflowbackend method)": [[99, "id429", false], [99, "ot.backend.TensorflowBackend.where", false]], "where() (ot.backend.torchbackend method)": [[99, "id515", false], [99, "ot.backend.TorchBackend.where", false]], "zero_pad() (ot.backend.backend method)": [[99, "id87", false], [99, "ot.backend.Backend.zero_pad", false]], "zero_pad() (ot.backend.cupybackend method)": [[99, "id172", false], [99, "ot.backend.CupyBackend.zero_pad", false]], "zero_pad() (ot.backend.jaxbackend method)": [[99, "id258", false], [99, "ot.backend.JaxBackend.zero_pad", false]], "zero_pad() (ot.backend.numpybackend method)": [[99, "id344", false], [99, "ot.backend.NumpyBackend.zero_pad", false]], "zero_pad() (ot.backend.tensorflowbackend method)": [[99, "id430", false], [99, "ot.backend.TensorflowBackend.zero_pad", false]], "zero_pad() (ot.backend.torchbackend method)": [[99, "id516", false], [99, "ot.backend.TorchBackend.zero_pad", false]], "zeros() (ot.backend.backend method)": [[99, "id88", false], [99, "ot.backend.Backend.zeros", false]], "zeros() (ot.backend.cupybackend method)": [[99, "id173", false], [99, "ot.backend.CupyBackend.zeros", false]], "zeros() (ot.backend.jaxbackend method)": [[99, "id259", false], [99, "ot.backend.JaxBackend.zeros", false]], "zeros() (ot.backend.numpybackend method)": [[99, "id345", false], [99, "ot.backend.NumpyBackend.zeros", false]], "zeros() (ot.backend.tensorflowbackend method)": [[99, "id431", false], [99, "ot.backend.TensorflowBackend.zeros", false]], "zeros() (ot.backend.torchbackend method)": [[99, "id517", false], [99, "ot.backend.TorchBackend.zeros", false]]}, "objects": {"": [[0, 0, 0, "-", "ot"]], "ot": [[99, 0, 0, "-", "backend"], [0, 3, 1, "", "barycenter"], [0, 3, 1, "", "barycenter_unbalanced"], [100, 0, 0, "-", "batch"], [0, 3, 1, "", "binary_search_circle"], [101, 0, 0, "-", "bregman"], [102, 0, 0, "-", "coot"], [103, 0, 0, "-", "da"], [104, 0, 0, "-", "datasets"], [0, 3, 1, "", "dist"], [0, 3, 1, "", "dist_batch"], [105, 0, 0, "-", "dr"], [0, 3, 1, "", "emd"], [0, 3, 1, "", "emd2"], [0, 3, 1, "", "emd2_1d"], [0, 3, 1, "", "emd_1d"], [0, 3, 1, "", "expected_sliced"], [106, 0, 0, "-", "factored"], [0, 3, 1, "", "factored_optimal_transport"], [0, 3, 1, "", "fused_gromov_wasserstein"], [0, 3, 1, "", "fused_gromov_wasserstein2"], [107, 0, 0, "-", "gaussian"], [108, 0, 0, "-", "gmm"], [109, 0, 0, "-", "gnn"], [110, 0, 0, "-", "gromov"], [0, 3, 1, "", "gromov_barycenters"], [0, 3, 1, "", "gromov_wasserstein"], [0, 3, 1, "", "gromov_wasserstein2"], [0, 3, 1, "", "linear_circular_ot"], [0, 3, 1, "", "linear_sliced_wasserstein_sphere"], [111, 0, 0, "-", "lowrank"], [0, 3, 1, "", "lowrank_gromov_wasserstein_samples"], [0, 3, 1, "", "lowrank_sinkhorn"], [112, 0, 0, "-", "lp"], [113, 0, 0, "-", "mapping"], [0, 3, 1, "", "max_sliced_wasserstein_distance"], [0, 3, 1, "", "min_pivot_sliced"], [114, 0, 0, "-", "optim"], [115, 0, 0, "-", "partial"], [116, 0, 0, "-", "plot"], [117, 0, 0, "-", "regpath"], [0, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [0, 3, 1, "", "sinkhorn"], [0, 3, 1, "", "sinkhorn2"], [0, 3, 1, "", "sinkhorn_lpl1_mm"], [0, 3, 1, "", "sinkhorn_unbalanced"], [0, 3, 1, "", "sinkhorn_unbalanced2"], [118, 0, 0, "-", "sliced"], [0, 3, 1, "", "sliced_wasserstein_distance"], [0, 3, 1, "", "sliced_wasserstein_sphere"], [0, 3, 1, "", "sliced_wasserstein_sphere_unif"], [119, 0, 0, "-", "smooth"], [0, 3, 1, "", "solve"], [0, 3, 1, "", "solve_batch"], [0, 3, 1, "", "solve_gromov"], [0, 3, 1, "", "solve_gromov_batch"], [0, 3, 1, "", "solve_sample"], [0, 3, 1, "", "solve_sample_batch"], [120, 0, 0, "-", "stochastic"], [0, 3, 1, "", "tic"], [0, 3, 1, "", "toc"], [0, 3, 1, "", "toq"], [121, 0, 0, "-", "unbalanced"], [0, 3, 1, "", "unif"], [122, 0, 0, "-", "utils"], [0, 3, 1, "", "wasserstein_1d"], [0, 3, 1, "", "wasserstein_circle"], [123, 0, 0, "-", "weak"], [0, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[99, 1, 1, "id0", "Backend"], [99, 1, 1, "id89", "CupyBackend"], [99, 1, 1, "id174", "JaxBackend"], [99, 1, 1, "id260", "NumpyBackend"], [99, 1, 1, "id346", "TensorflowBackend"], [99, 1, 1, "id432", "TorchBackend"], [99, 3, 1, "id518", "get_available_backend_implementations"], [99, 3, 1, "id519", "get_backend"], [99, 3, 1, "id520", "get_backend_list"], [99, 3, 1, "id521", "to_numpy"]], "ot.backend.Backend": [[99, 2, 1, "id1", "abs"], [99, 2, 1, "id2", "allclose"], [99, 2, 1, "id3", "any"], [99, 2, 1, "id4", "arange"], [99, 2, 1, "id5", "argmax"], [99, 2, 1, "id6", "argmin"], [99, 2, 1, "id7", "argsort"], [99, 2, 1, "id8", "array_equal"], [99, 2, 1, "id9", "assert_same_dtype_device"], [99, 2, 1, "id10", "atan2"], [99, 2, 1, "id11", "bitsize"], [99, 2, 1, "id12", "clip"], [99, 2, 1, "id13", "concatenate"], [99, 2, 1, "id14", "coo_matrix"], [99, 2, 1, "id15", "copy"], [99, 2, 1, "id16", "cumsum"], [99, 2, 1, "id17", "det"], [99, 2, 1, "id18", "detach"], [99, 2, 1, "id19", "device_type"], [99, 2, 1, "id20", "diag"], [99, 2, 1, "id21", "dot"], [99, 2, 1, "id22", "dtype_device"], [99, 2, 1, "id23", "eigh"], [99, 2, 1, "id24", "einsum"], [99, 2, 1, "id25", "eliminate_zeros"], [99, 2, 1, "id26", "exp"], [99, 2, 1, "id27", "eye"], [99, 2, 1, "id28", "flip"], [99, 2, 1, "id29", "floor"], [99, 2, 1, "id30", "from_numpy"], [99, 2, 1, "id31", "full"], [99, 2, 1, "id32", "inv"], [99, 2, 1, "id33", "is_floating_point"], [99, 2, 1, "id34", "isfinite"], [99, 2, 1, "id35", "isinf"], [99, 2, 1, "id36", "isnan"], [99, 2, 1, "id37", "issparse"], [99, 2, 1, "id38", "kl_div"], [99, 2, 1, "id39", "linspace"], [99, 2, 1, "id40", "log"], [99, 2, 1, "id41", "logsumexp"], [99, 2, 1, "id42", "matmul"], [99, 2, 1, "id43", "max"], [99, 2, 1, "id44", "maximum"], [99, 2, 1, "id45", "mean"], [99, 2, 1, "id46", "median"], [99, 2, 1, "id47", "meshgrid"], [99, 2, 1, "id48", "min"], [99, 2, 1, "id49", "minimum"], [99, 2, 1, "id50", "nan_to_num"], [99, 2, 1, "id51", "norm"], [99, 2, 1, "id52", "ones"], [99, 2, 1, "id53", "outer"], [99, 2, 1, "id54", "pinv"], [99, 2, 1, "id55", "power"], [99, 2, 1, "id56", "prod"], [99, 2, 1, "id57", "qr"], [99, 2, 1, "id58", "rand"], [99, 2, 1, "id59", "randn"], [99, 2, 1, "id60", "randperm"], [99, 2, 1, "id61", "repeat"], [99, 2, 1, "id62", "reshape"], [99, 2, 1, "id63", "searchsorted"], [99, 2, 1, "id64", "seed"], [99, 2, 1, "id65", "set_gradients"], [99, 2, 1, "id66", "sign"], [99, 2, 1, "id67", "slogdet"], [99, 2, 1, "id68", "solve"], [99, 2, 1, "id69", "sort"], [99, 2, 1, "id70", "sort2"], [99, 2, 1, "id71", "sqrt"], [99, 2, 1, "id72", "sqrtm"], [99, 2, 1, "id73", "squeeze"], [99, 2, 1, "id74", "stack"], [99, 2, 1, "id75", "std"], [99, 2, 1, "id76", "sum"], [99, 2, 1, "id77", "take_along_axis"], [99, 2, 1, "id78", "tile"], [99, 2, 1, "id79", "to_numpy"], [99, 2, 1, "id80", "tocsr"], [99, 2, 1, "id81", "todense"], [99, 2, 1, "id82", "trace"], [99, 2, 1, "id83", "transpose"], [99, 2, 1, "id84", "unique"], [99, 2, 1, "id85", "unsqueeze"], [99, 2, 1, "id86", "where"], [99, 2, 1, "id87", "zero_pad"], [99, 2, 1, "id88", "zeros"]], "ot.backend.CupyBackend": [[99, 2, 1, "id90", "abs"], [99, 2, 1, "id91", "allclose"], [99, 2, 1, "id92", "any"], [99, 2, 1, "id93", "arange"], [99, 2, 1, "id94", "argmax"], [99, 2, 1, "id95", "argmin"], [99, 2, 1, "id96", "argsort"], [99, 2, 1, "id97", "array_equal"], [99, 2, 1, "id98", "assert_same_dtype_device"], [99, 2, 1, "id99", "atan2"], [99, 2, 1, "id100", "bitsize"], [99, 2, 1, "id101", "clip"], [99, 2, 1, "id102", "concatenate"], [99, 2, 1, "id103", "coo_matrix"], [99, 2, 1, "id104", "copy"], [99, 2, 1, "id105", "cumsum"], [99, 2, 1, "id106", "det"], [99, 2, 1, "id107", "device_type"], [99, 2, 1, "id108", "diag"], [99, 2, 1, "id109", "dot"], [99, 2, 1, "id110", "dtype_device"], [99, 2, 1, "id111", "eigh"], [99, 2, 1, "id112", "einsum"], [99, 2, 1, "id113", "eliminate_zeros"], [99, 2, 1, "id114", "exp"], [99, 2, 1, "id115", "eye"], [99, 2, 1, "id116", "flip"], [99, 2, 1, "id117", "floor"], [99, 2, 1, "id118", "full"], [99, 2, 1, "id119", "inv"], [99, 2, 1, "id120", "is_floating_point"], [99, 2, 1, "id121", "isfinite"], [99, 2, 1, "id122", "isinf"], [99, 2, 1, "id123", "isnan"], [99, 2, 1, "id124", "issparse"], [99, 2, 1, "id125", "kl_div"], [99, 2, 1, "id126", "linspace"], [99, 2, 1, "id127", "log"], [99, 2, 1, "id128", "logsumexp"], [99, 2, 1, "id129", "matmul"], [99, 2, 1, "id130", "max"], [99, 2, 1, "id131", "maximum"], [99, 2, 1, "id132", "mean"], [99, 2, 1, "id133", "median"], [99, 2, 1, "id134", "meshgrid"], [99, 2, 1, "id135", "min"], [99, 2, 1, "id136", "minimum"], [99, 2, 1, "id137", "nan_to_num"], [99, 2, 1, "id138", "norm"], [99, 2, 1, "id139", "ones"], [99, 2, 1, "id140", "outer"], [99, 2, 1, "id141", "pinv"], [99, 2, 1, "id142", "power"], [99, 2, 1, "id143", "prod"], [99, 2, 1, "id144", "qr"], [99, 2, 1, "id145", "rand"], [99, 2, 1, "id146", "randn"], [99, 2, 1, "id147", "randperm"], [99, 2, 1, "id148", "repeat"], [99, 2, 1, "id149", "reshape"], [99, 2, 1, "id150", "searchsorted"], [99, 2, 1, "id151", "seed"], [99, 2, 1, "id152", "set_gradients"], [99, 2, 1, "id153", "sign"], [99, 2, 1, "id154", "slogdet"], [99, 2, 1, "id155", "solve"], [99, 2, 1, "id156", "sort"], [99, 2, 1, "id157", "sort2"], [99, 2, 1, "id158", "sqrt"], [99, 2, 1, "id159", "sqrtm"], [99, 2, 1, "id160", "squeeze"], [99, 2, 1, "id161", "stack"], [99, 2, 1, "id162", "std"], [99, 2, 1, "id163", "sum"], [99, 2, 1, "id164", "take_along_axis"], [99, 2, 1, "id165", "tile"], [99, 2, 1, "id166", "tocsr"], [99, 2, 1, "id167", "todense"], [99, 2, 1, "id168", "trace"], [99, 2, 1, "id169", "transpose"], [99, 2, 1, "id170", "unique"], [99, 2, 1, "id171", "where"], [99, 2, 1, "id172", "zero_pad"], [99, 2, 1, "id173", "zeros"]], "ot.backend.JaxBackend": [[99, 2, 1, "id175", "abs"], [99, 2, 1, "id176", "allclose"], [99, 2, 1, "id177", "any"], [99, 2, 1, "id178", "arange"], [99, 2, 1, "id179", "argmax"], [99, 2, 1, "id180", "argmin"], [99, 2, 1, "id181", "argsort"], [99, 2, 1, "id182", "array_equal"], [99, 2, 1, "id183", "assert_same_dtype_device"], [99, 2, 1, "id184", "atan2"], [99, 2, 1, "id185", "bitsize"], [99, 2, 1, "id186", "clip"], [99, 2, 1, "id187", "concatenate"], [99, 2, 1, "id188", "coo_matrix"], [99, 2, 1, "id189", "copy"], [99, 2, 1, "id190", "cumsum"], [99, 2, 1, "id191", "det"], [99, 2, 1, "id192", "device_type"], [99, 2, 1, "id193", "diag"], [99, 2, 1, "id194", "dot"], [99, 2, 1, "id195", "dtype_device"], [99, 2, 1, "id196", "eigh"], [99, 2, 1, "id197", "einsum"], [99, 2, 1, "id198", "eliminate_zeros"], [99, 2, 1, "id199", "exp"], [99, 2, 1, "id200", "eye"], [99, 2, 1, "id201", "flip"], [99, 2, 1, "id202", "floor"], [99, 2, 1, "id203", "full"], [99, 2, 1, "id204", "inv"], [99, 2, 1, "id205", "is_floating_point"], [99, 2, 1, "id206", "isfinite"], [99, 2, 1, "id207", "isinf"], [99, 2, 1, "id208", "isnan"], [99, 2, 1, "id209", "issparse"], [99, 2, 1, "id210", "kl_div"], [99, 2, 1, "id211", "linspace"], [99, 2, 1, "id212", "log"], [99, 2, 1, "id213", "logsumexp"], [99, 2, 1, "id214", "matmul"], [99, 2, 1, "id215", "max"], [99, 2, 1, "id216", "maximum"], [99, 2, 1, "id217", "mean"], [99, 2, 1, "id218", "median"], [99, 2, 1, "id219", "meshgrid"], [99, 2, 1, "id220", "min"], [99, 2, 1, "id221", "minimum"], [99, 2, 1, "id222", "nan_to_num"], [99, 2, 1, "id223", "norm"], [99, 2, 1, "id224", "ones"], [99, 2, 1, "id225", "outer"], [99, 2, 1, "id226", "pinv"], [99, 2, 1, "id227", "power"], [99, 2, 1, "id228", "prod"], [99, 2, 1, "id229", "qr"], [99, 2, 1, "id230", "rand"], [99, 2, 1, "id231", "randn"], [99, 2, 1, "id232", "randperm"], [99, 2, 1, "id233", "repeat"], [99, 2, 1, "id234", "reshape"], [99, 2, 1, "id235", "searchsorted"], [99, 2, 1, "id236", "seed"], [99, 2, 1, "id237", "set_gradients"], [99, 2, 1, "id238", "sign"], [99, 2, 1, "id239", "slogdet"], [99, 2, 1, "id240", "solve"], [99, 2, 1, "id241", "sort"], [99, 2, 1, "id242", "sort2"], [99, 2, 1, "id243", "sqrt"], [99, 2, 1, "id244", "sqrtm"], [99, 2, 1, "id245", "squeeze"], [99, 2, 1, "id246", "stack"], [99, 2, 1, "id247", "std"], [99, 2, 1, "id248", "sum"], [99, 2, 1, "id249", "take_along_axis"], [99, 2, 1, "id250", "tile"], [99, 2, 1, "id251", "tocsr"], [99, 2, 1, "id252", "todense"], [99, 2, 1, "id253", "trace"], [99, 2, 1, "id254", "transpose"], [99, 2, 1, "id255", "unique"], [99, 2, 1, "id256", "unsqueeze"], [99, 2, 1, "id257", "where"], [99, 2, 1, "id258", "zero_pad"], [99, 2, 1, "id259", "zeros"]], "ot.backend.NumpyBackend": [[99, 2, 1, "id261", "abs"], [99, 2, 1, "id262", "allclose"], [99, 2, 1, "id263", "any"], [99, 2, 1, "id264", "arange"], [99, 2, 1, "id265", "argmax"], [99, 2, 1, "id266", "argmin"], [99, 2, 1, "id267", "argsort"], [99, 2, 1, "id268", "array_equal"], [99, 2, 1, "id269", "assert_same_dtype_device"], [99, 2, 1, "id270", "atan2"], [99, 2, 1, "id271", "bitsize"], [99, 2, 1, "id272", "clip"], [99, 2, 1, "id273", "concatenate"], [99, 2, 1, "id274", "coo_matrix"], [99, 2, 1, "id275", "copy"], [99, 2, 1, "id276", "cumsum"], [99, 2, 1, "id277", "det"], [99, 2, 1, "id278", "device_type"], [99, 2, 1, "id279", "diag"], [99, 2, 1, "id280", "dot"], [99, 2, 1, "id281", "dtype_device"], [99, 2, 1, "id282", "eigh"], [99, 2, 1, "id283", "einsum"], [99, 2, 1, "id284", "eliminate_zeros"], [99, 2, 1, "id285", "exp"], [99, 2, 1, "id286", "eye"], [99, 2, 1, "id287", "flip"], [99, 2, 1, "id288", "floor"], [99, 2, 1, "id289", "full"], [99, 2, 1, "id290", "inv"], [99, 2, 1, "id291", "is_floating_point"], [99, 2, 1, "id292", "isfinite"], [99, 2, 1, "id293", "isinf"], [99, 2, 1, "id294", "isnan"], [99, 2, 1, "id295", "issparse"], [99, 2, 1, "id296", "kl_div"], [99, 2, 1, "id297", "linspace"], [99, 2, 1, "id298", "log"], [99, 2, 1, "id299", "logsumexp"], [99, 2, 1, "id300", "matmul"], [99, 2, 1, "id301", "max"], [99, 2, 1, "id302", "maximum"], [99, 2, 1, "id303", "mean"], [99, 2, 1, "id304", "median"], [99, 2, 1, "id305", "meshgrid"], [99, 2, 1, "id306", "min"], [99, 2, 1, "id307", "minimum"], [99, 2, 1, "id308", "nan_to_num"], [99, 2, 1, "id309", "norm"], [99, 2, 1, "id310", "ones"], [99, 2, 1, "id311", "outer"], [99, 2, 1, "id312", "pinv"], [99, 2, 1, "id313", "power"], [99, 2, 1, "id314", "prod"], [99, 2, 1, "id315", "qr"], [99, 2, 1, "id316", "rand"], [99, 2, 1, "id317", "randn"], [99, 2, 1, "id318", "randperm"], [99, 2, 1, "id319", "repeat"], [99, 2, 1, "id320", "reshape"], [99, 2, 1, "id321", "searchsorted"], [99, 2, 1, "id322", "seed"], [99, 2, 1, "id323", "set_gradients"], [99, 2, 1, "id324", "sign"], [99, 2, 1, "id325", "slogdet"], [99, 2, 1, "id326", "solve"], [99, 2, 1, "id327", "sort"], [99, 2, 1, "id328", "sort2"], [99, 2, 1, "id329", "sqrt"], [99, 2, 1, "id330", "sqrtm"], [99, 2, 1, "id331", "squeeze"], [99, 2, 1, "id332", "stack"], [99, 2, 1, "id333", "std"], [99, 2, 1, "id334", "sum"], [99, 2, 1, "id335", "take_along_axis"], [99, 2, 1, "id336", "tile"], [99, 2, 1, "id337", "tocsr"], [99, 2, 1, "id338", "todense"], [99, 2, 1, "id339", "trace"], [99, 2, 1, "id340", "transpose"], [99, 2, 1, "id341", "unique"], [99, 2, 1, "id342", "unsqueeze"], [99, 2, 1, "id343", "where"], [99, 2, 1, "id344", "zero_pad"], [99, 2, 1, "id345", "zeros"]], "ot.backend.TensorflowBackend": [[99, 2, 1, "id347", "abs"], [99, 2, 1, "id348", "allclose"], [99, 2, 1, "id349", "any"], [99, 2, 1, "id350", "arange"], [99, 2, 1, "id351", "argmax"], [99, 2, 1, "id352", "argmin"], [99, 2, 1, "id353", "argsort"], [99, 2, 1, "id354", "array_equal"], [99, 2, 1, "id355", "assert_same_dtype_device"], [99, 2, 1, "id356", "atan2"], [99, 2, 1, "id357", "bitsize"], [99, 2, 1, "id358", "clip"], [99, 2, 1, "id359", "concatenate"], [99, 2, 1, "id360", "coo_matrix"], [99, 2, 1, "id361", "copy"], [99, 2, 1, "id362", "cumsum"], [99, 2, 1, "id363", "det"], [99, 2, 1, "id364", "device_type"], [99, 2, 1, "id365", "diag"], [99, 2, 1, "id366", "dot"], [99, 2, 1, "id367", "dtype_device"], [99, 2, 1, "id368", "eigh"], [99, 2, 1, "id369", "einsum"], [99, 2, 1, "id370", "eliminate_zeros"], [99, 2, 1, "id371", "exp"], [99, 2, 1, "id372", "eye"], [99, 2, 1, "id373", "flip"], [99, 2, 1, "id374", "floor"], [99, 2, 1, "id375", "full"], [99, 2, 1, "id376", "inv"], [99, 2, 1, "id377", "is_floating_point"], [99, 2, 1, "id378", "isfinite"], [99, 2, 1, "id379", "isinf"], [99, 2, 1, "id380", "isnan"], [99, 2, 1, "id381", "issparse"], [99, 2, 1, "id382", "kl_div"], [99, 2, 1, "id383", "linspace"], [99, 2, 1, "id384", "log"], [99, 2, 1, "id385", "logsumexp"], [99, 2, 1, "id386", "matmul"], [99, 2, 1, "id387", "max"], [99, 2, 1, "id388", "maximum"], [99, 2, 1, "id389", "mean"], [99, 2, 1, "id390", "median"], [99, 2, 1, "id391", "meshgrid"], [99, 2, 1, "id392", "min"], [99, 2, 1, "id393", "minimum"], [99, 2, 1, "id394", "nan_to_num"], [99, 2, 1, "id395", "norm"], [99, 2, 1, "id396", "ones"], [99, 2, 1, "id397", "outer"], [99, 2, 1, "id398", "pinv"], [99, 2, 1, "id399", "power"], [99, 2, 1, "id400", "prod"], [99, 2, 1, "id401", "qr"], [99, 2, 1, "id402", "rand"], [99, 2, 1, "id403", "randn"], [99, 2, 1, "id404", "randperm"], [99, 2, 1, "id405", "repeat"], [99, 2, 1, "id406", "reshape"], [99, 2, 1, "id407", "searchsorted"], [99, 2, 1, "id408", "seed"], [99, 2, 1, "id409", "set_gradients"], [99, 2, 1, "id410", "sign"], [99, 2, 1, "id411", "slogdet"], [99, 2, 1, "id412", "solve"], [99, 2, 1, "id413", "sort"], [99, 2, 1, "id414", "sort2"], [99, 2, 1, "id415", "sqrt"], [99, 2, 1, "id416", "sqrtm"], [99, 2, 1, "id417", "squeeze"], [99, 2, 1, "id418", "stack"], [99, 2, 1, "id419", "std"], [99, 2, 1, "id420", "sum"], [99, 2, 1, "id421", "take_along_axis"], [99, 2, 1, "id422", "tile"], [99, 2, 1, "id423", "tocsr"], [99, 2, 1, "id424", "todense"], [99, 2, 1, "id425", "trace"], [99, 2, 1, "id426", "transpose"], [99, 2, 1, "id427", "unique"], [99, 2, 1, "id428", "unsqueeze"], [99, 2, 1, "id429", "where"], [99, 2, 1, "id430", "zero_pad"], [99, 2, 1, "id431", "zeros"]], "ot.backend.TorchBackend": [[99, 2, 1, "id433", "abs"], [99, 2, 1, "id434", "allclose"], [99, 2, 1, "id435", "any"], [99, 2, 1, "id436", "arange"], [99, 2, 1, "id437", "argmax"], [99, 2, 1, "id438", "argmin"], [99, 2, 1, "id439", "argsort"], [99, 2, 1, "id440", "array_equal"], [99, 2, 1, "id441", "assert_same_dtype_device"], [99, 2, 1, "id442", "atan2"], [99, 2, 1, "id443", "bitsize"], [99, 2, 1, "id444", "clip"], [99, 2, 1, "id445", "concatenate"], [99, 2, 1, "id446", "coo_matrix"], [99, 2, 1, "id447", "copy"], [99, 2, 1, "id448", "cumsum"], [99, 2, 1, "id449", "det"], [99, 2, 1, "id450", "device_type"], [99, 2, 1, "id451", "diag"], [99, 2, 1, "id452", "dot"], [99, 2, 1, "id453", "dtype_device"], [99, 2, 1, "id454", "eigh"], [99, 2, 1, "id455", "einsum"], [99, 2, 1, "id456", "eliminate_zeros"], [99, 2, 1, "id457", "exp"], [99, 2, 1, "id458", "eye"], [99, 2, 1, "id459", "flip"], [99, 2, 1, "id460", "floor"], [99, 2, 1, "id461", "full"], [99, 2, 1, "id462", "inv"], [99, 2, 1, "id463", "is_floating_point"], [99, 2, 1, "id464", "isfinite"], [99, 2, 1, "id465", "isinf"], [99, 2, 1, "id466", "isnan"], [99, 2, 1, "id467", "issparse"], [99, 2, 1, "id468", "kl_div"], [99, 2, 1, "id469", "linspace"], [99, 2, 1, "id470", "log"], [99, 2, 1, "id471", "logsumexp"], [99, 2, 1, "id472", "matmul"], [99, 2, 1, "id473", "max"], [99, 2, 1, "id474", "maximum"], [99, 2, 1, "id475", "mean"], [99, 2, 1, "id476", "median"], [99, 2, 1, "id477", "meshgrid"], [99, 2, 1, "id478", "min"], [99, 2, 1, "id479", "minimum"], [99, 2, 1, "id480", "nan_to_num"], [99, 2, 1, "id481", "norm"], [99, 2, 1, "id482", "ones"], [99, 2, 1, "id483", "outer"], [99, 2, 1, "id484", "pinv"], [99, 2, 1, "id485", "power"], [99, 2, 1, "id486", "prod"], [99, 2, 1, "id487", "qr"], [99, 2, 1, "id488", "rand"], [99, 2, 1, "id489", "randn"], [99, 2, 1, "id490", "randperm"], [99, 2, 1, "id491", "repeat"], [99, 2, 1, "id492", "reshape"], [99, 2, 1, "id493", "searchsorted"], [99, 2, 1, "id494", "seed"], [99, 2, 1, "id495", "set_gradients"], [99, 2, 1, "id496", "sign"], [99, 2, 1, "id497", "slogdet"], [99, 2, 1, "id498", "solve"], [99, 2, 1, "id499", "sort"], [99, 2, 1, "id500", "sort2"], [99, 2, 1, "id501", "sqrt"], [99, 2, 1, "id502", "sqrtm"], [99, 2, 1, "id503", "squeeze"], [99, 2, 1, "id504", "stack"], [99, 2, 1, "id505", "std"], [99, 2, 1, "id506", "sum"], [99, 2, 1, "id507", "take_along_axis"], [99, 2, 1, "id508", "tile"], [99, 2, 1, "id509", "tocsr"], [99, 2, 1, "id510", "todense"], [99, 2, 1, "id511", "trace"], [99, 2, 1, "id512", "transpose"], [99, 2, 1, "id513", "unique"], [99, 2, 1, "id514", "unsqueeze"], [99, 2, 1, "id515", "where"], [99, 2, 1, "id516", "zero_pad"], [99, 2, 1, "id517", "zeros"]], "ot.batch": [[100, 3, 1, "", "bregman_log_projection_batch"], [100, 3, 1, "", "bregman_projection_batch"], [100, 3, 1, "", "dist_batch"], [100, 3, 1, "", "entropy_batch"], [100, 3, 1, "", "loss_linear_batch"], [100, 3, 1, "", "loss_linear_samples_batch"], [100, 3, 1, "", "loss_quadratic_batch"], [100, 3, 1, "", "loss_quadratic_samples_batch"], [100, 3, 1, "", "solve_batch"], [100, 3, 1, "", "solve_gromov_batch"], [100, 3, 1, "", "solve_sample_batch"], [100, 3, 1, "", "tensor_batch"]], "ot.bregman": [[101, 3, 1, "", "barycenter"], [101, 3, 1, "", "barycenter_debiased"], [101, 3, 1, "", "barycenter_sinkhorn"], [101, 3, 1, "", "barycenter_stabilized"], [101, 3, 1, "", "convolutional_barycenter2d"], [101, 3, 1, "", "convolutional_barycenter2d_debiased"], [101, 3, 1, "", "empirical_sinkhorn"], [101, 3, 1, "", "empirical_sinkhorn2"], [101, 3, 1, "", "empirical_sinkhorn2_geomloss"], [101, 3, 1, "", "empirical_sinkhorn_divergence"], [101, 3, 1, "", "empirical_sinkhorn_nystroem"], [101, 3, 1, "", "empirical_sinkhorn_nystroem2"], [101, 3, 1, "", "free_support_sinkhorn_barycenter"], [101, 3, 1, "", "geometricBar"], [101, 3, 1, "", "geometricMean"], [101, 3, 1, "", "greenkhorn"], [101, 3, 1, "", "jcpot_barycenter"], [101, 3, 1, "", "projC"], [101, 3, 1, "", "projR"], [101, 3, 1, "", "screenkhorn"], [101, 3, 1, "", "sinkhorn"], [101, 3, 1, "", "sinkhorn2"], [101, 3, 1, "", "sinkhorn_epsilon_scaling"], [101, 3, 1, "", "sinkhorn_knopp"], [101, 3, 1, "", "sinkhorn_log"], [101, 3, 1, "", "sinkhorn_stabilized"], [101, 3, 1, "", "unmix"]], "ot.coot": [[102, 3, 1, "id0", "co_optimal_transport"], [102, 3, 1, "id4", "co_optimal_transport2"]], "ot.da": [[103, 1, 1, "id0", "BaseTransport"], [103, 1, 1, "id46", "EMDLaplaceTransport"], [103, 1, 1, "id53", "EMDTransport"], [103, 1, 1, "id59", "JCPOTTransport"], [103, 1, 1, "id72", "LinearGWTransport"], [103, 1, 1, "id76", "LinearTransport"], [103, 1, 1, "id83", "MappingTransport"], [103, 1, 1, "id90", "NearestBrenierPotential"], [103, 1, 1, "id98", "SinkhornL1l2Transport"], [103, 1, 1, "id106", "SinkhornLpl1Transport"], [103, 1, 1, "id113", "SinkhornTransport"], [103, 1, 1, "id125", "UnbalancedSinkhornTransport"], [103, 3, 1, "id132", "distribution_estimation_uniform"], [103, 3, 1, "id133", "emd_laplace"], [103, 3, 1, "id137", "sinkhorn_l1l2_gl"], [103, 3, 1, "id141", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[103, 2, 1, "id38", "fit"], [103, 2, 1, "id39", "fit_transform"], [103, 2, 1, "id40", "inverse_transform"], [103, 2, 1, "id41", "inverse_transform_labels"], [103, 2, 1, "id42", "transform"], [103, 2, 1, "id43", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[103, 4, 1, "id47", "coupling_"], [103, 2, 1, "id52", "fit"]], "ot.da.EMDTransport": [[103, 4, 1, "id54", "coupling_"], [103, 2, 1, "id58", "fit"]], "ot.da.JCPOTTransport": [[103, 4, 1, "id60", "coupling_"], [103, 2, 1, "id66", "fit"], [103, 2, 1, "id67", "inverse_transform_labels"], [103, 4, 1, "id62", "log_"], [103, 4, 1, "id61", "proportions_"], [103, 2, 1, "id68", "transform"], [103, 2, 1, "id69", "transform_labels"]], "ot.da.LinearGWTransport": [[103, 2, 1, "id75", "fit"]], "ot.da.LinearTransport": [[103, 2, 1, "id80", "fit"], [103, 2, 1, "id81", "inverse_transform"], [103, 2, 1, "id82", "transform"]], "ot.da.MappingTransport": [[103, 4, 1, "id84", "coupling_"], [103, 2, 1, "id88", "fit"], [103, 4, 1, "id86", "log_"], [103, 4, 1, "id85", "mapping_"], [103, 2, 1, "id89", "transform"]], "ot.da.NearestBrenierPotential": [[103, 2, 1, "id93", "fit"], [103, 2, 1, "id95", "transform"]], "ot.da.SinkhornL1l2Transport": [[103, 4, 1, "id99", "coupling_"], [103, 2, 1, "id105", "fit"], [103, 4, 1, "id100", "log_"]], "ot.da.SinkhornLpl1Transport": [[103, 4, 1, "id107", "coupling_"], [103, 2, 1, "id112", "fit"]], "ot.da.SinkhornTransport": [[103, 4, 1, "id114", "coupling_"], [103, 2, 1, "id122", "fit"], [103, 2, 1, "id123", "inverse_transform"], [103, 4, 1, "id115", "log_"], [103, 2, 1, "id124", "transform"]], "ot.da.UnbalancedSinkhornTransport": [[103, 4, 1, "id126", "coupling_"], [103, 2, 1, "id131", "fit"], [103, 4, 1, "id127", "log_"]], "ot.datasets": [[104, 3, 1, "id0", "make_1D_gauss"], [104, 3, 1, "id1", "make_2D_samples_gauss"], [104, 3, 1, "id2", "make_data_classif"]], "ot.dr": [[105, 3, 1, "id0", "dist"], [105, 3, 1, "id4", "ewca"], [105, 3, 1, "id7", "fda"], [105, 3, 1, "id8", "logsumexp"], [105, 3, 1, "id9", "projection_robust_wasserstein"], [105, 3, 1, "id12", "sinkhorn"], [105, 3, 1, "id13", "sinkhorn_log"], [105, 3, 1, "id14", "split_classes"], [105, 3, 1, "id15", "wda"]], "ot.factored": [[106, 3, 1, "id0", "factored_optimal_transport"]], "ot.gaussian": [[107, 3, 1, "id0", "bures_barycenter_fixpoint"], [107, 3, 1, "id24", "bures_barycenter_gradient_descent"], [107, 3, 1, "id28", "bures_distance"], [107, 3, 1, "id31", "bures_wasserstein_barycenter"], [107, 3, 1, "id36", "bures_wasserstein_distance"], [107, 3, 1, "id39", "bures_wasserstein_mapping"], [107, 3, 1, "id43", "empirical_bures_wasserstein_barycenter"], [107, 3, 1, "id46", "empirical_bures_wasserstein_distance"], [107, 3, 1, "id49", "empirical_bures_wasserstein_mapping"], [107, 3, 1, "id53", "empirical_gaussian_gromov_wasserstein_distance"], [107, 3, 1, "id56", "empirical_gaussian_gromov_wasserstein_mapping"], [107, 3, 1, "id59", "gaussian_gromov_wasserstein_distance"], [107, 3, 1, "id62", "gaussian_gromov_wasserstein_mapping"]], "ot.gmm": [[108, 3, 1, "id0", "dist_bures_squared"], [108, 3, 1, "id9", "gaussian_logpdf"], [108, 3, 1, "id10", "gaussian_pdf"], [108, 3, 1, "id11", "gmm_barycenter_fixed_point"], [108, 3, 1, "id14", "gmm_ot_apply_map"], [108, 3, 1, "id16", "gmm_ot_loss"], [108, 3, 1, "id18", "gmm_ot_plan"], [108, 3, 1, "id20", "gmm_ot_plan_density"], [108, 3, 1, "id22", "gmm_pdf"]], "ot.gnn": [[109, 3, 1, "", "FGW_distance_to_templates"], [109, 1, 1, "", "TFGWPooling"], [109, 1, 1, "", "TWPooling"], [109, 3, 1, "", "wasserstein_distance_to_templates"]], "ot.gnn.TFGWPooling": [[109, 2, 1, "", "forward"]], "ot.gnn.TWPooling": [[109, 2, 1, "", "forward"]], "ot.gromov": [[110, 3, 1, "", "BAPG_fused_gromov_wasserstein"], [110, 3, 1, "", "BAPG_fused_gromov_wasserstein2"], [110, 3, 1, "", "BAPG_gromov_wasserstein"], [110, 3, 1, "", "BAPG_gromov_wasserstein2"], [110, 3, 1, "", "GW_distance_estimation"], [110, 3, 1, "", "div_between_product"], [110, 3, 1, "", "div_to_product"], [110, 3, 1, "", "entropic_fused_gromov_barycenters"], [110, 3, 1, "", "entropic_fused_gromov_wasserstein"], [110, 3, 1, "", "entropic_fused_gromov_wasserstein2"], [110, 3, 1, "", "entropic_gromov_barycenters"], [110, 3, 1, "", "entropic_gromov_wasserstein"], [110, 3, 1, "", "entropic_gromov_wasserstein2"], [110, 3, 1, "", "entropic_partial_fused_gromov_wasserstein"], [110, 3, 1, "", "entropic_partial_fused_gromov_wasserstein2"], [110, 3, 1, "", "entropic_partial_gromov_wasserstein"], [110, 3, 1, "", "entropic_partial_gromov_wasserstein2"], [110, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein"], [110, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein2"], [110, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein"], [110, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein2"], [110, 3, 1, "", "fgw_barycenters"], [110, 3, 1, "", "format_partitioned_graph"], [110, 3, 1, "", "format_partitioned_samples"], [110, 3, 1, "", "fused_gromov_wasserstein"], [110, 3, 1, "", "fused_gromov_wasserstein2"], [110, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [110, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [110, 3, 1, "", "fused_unbalanced_across_spaces_cost"], [110, 3, 1, "", "fused_unbalanced_across_spaces_divergence"], [110, 3, 1, "", "fused_unbalanced_gromov_wasserstein"], [110, 3, 1, "", "fused_unbalanced_gromov_wasserstein2"], [110, 3, 1, "", "get_graph_partition"], [110, 3, 1, "", "get_graph_representants"], [110, 3, 1, "", "get_partition_and_representants_samples"], [110, 3, 1, "", "gromov_barycenters"], [110, 3, 1, "", "gromov_wasserstein"], [110, 3, 1, "", "gromov_wasserstein2"], [110, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [110, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [110, 3, 1, "", "gwggrad"], [110, 3, 1, "", "gwloss"], [110, 3, 1, "", "init_matrix"], [110, 3, 1, "", "init_matrix_semirelaxed"], [110, 3, 1, "", "lowrank_gromov_wasserstein_samples"], [110, 3, 1, "", "partial_fused_gromov_wasserstein"], [110, 3, 1, "", "partial_fused_gromov_wasserstein2"], [110, 3, 1, "", "partial_gromov_wasserstein"], [110, 3, 1, "", "partial_gromov_wasserstein2"], [110, 3, 1, "", "pointwise_gromov_wasserstein"], [110, 3, 1, "", "quantized_fused_gromov_wasserstein"], [110, 3, 1, "", "quantized_fused_gromov_wasserstein_partitioned"], [110, 3, 1, "", "quantized_fused_gromov_wasserstein_samples"], [110, 3, 1, "", "sampled_gromov_wasserstein"], [110, 3, 1, "", "semirelaxed_fgw_barycenters"], [110, 3, 1, "", "semirelaxed_fused_gromov_wasserstein"], [110, 3, 1, "", "semirelaxed_fused_gromov_wasserstein2"], [110, 3, 1, "", "semirelaxed_gromov_barycenters"], [110, 3, 1, "", "semirelaxed_gromov_wasserstein"], [110, 3, 1, "", "semirelaxed_gromov_wasserstein2"], [110, 3, 1, "", "semirelaxed_init_plan"], [110, 3, 1, "", "solve_gromov_linesearch"], [110, 3, 1, "", "solve_partial_gromov_linesearch"], [110, 3, 1, "", "solve_semirelaxed_gromov_linesearch"], [110, 3, 1, "", "tensor_product"], [110, 3, 1, "", "unbalanced_co_optimal_transport"], [110, 3, 1, "", "unbalanced_co_optimal_transport2"], [110, 3, 1, "", "uot_cost_matrix"], [110, 3, 1, "", "uot_parameters_and_measures"], [110, 3, 1, "", "update_barycenter_feature"], [110, 3, 1, "", "update_barycenter_structure"]], "ot.lowrank": [[111, 3, 1, "id0", "compute_lr_sqeuclidean_matrix"], [111, 3, 1, "id4", "kernel_nystroem"], [111, 3, 1, "id5", "lowrank_sinkhorn"], [111, 3, 1, "id7", "sinkhorn_low_rank_kernel"]], "ot.lp": [[112, 3, 1, "", "NorthWestMMGluing"], [112, 3, 1, "", "barycenter"], [112, 3, 1, "", "binary_search_circle"], [112, 3, 1, "", "check_number_threads"], [112, 3, 1, "", "dmmot_monge_1dgrid_loss"], [112, 3, 1, "", "dmmot_monge_1dgrid_optimize"], [112, 3, 1, "", "emd"], [112, 3, 1, "", "emd2"], [112, 3, 1, "", "emd2_1d"], [112, 3, 1, "", "emd_1d"], [112, 3, 1, "", "emd_1d_sorted"], [112, 3, 1, "", "free_support_barycenter"], [112, 3, 1, "", "free_support_barycenter_generic_costs"], [112, 3, 1, "", "generalized_free_support_barycenter"], [112, 3, 1, "", "linear_circular_ot"], [112, 3, 1, "", "ot_barycenter_energy"], [112, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [112, 3, 1, "", "wasserstein_1d"], [112, 3, 1, "", "wasserstein_circle"]], "ot.mapping": [[113, 3, 1, "id0", "joint_OT_mapping_kernel"], [113, 3, 1, "id8", "joint_OT_mapping_linear"], [113, 3, 1, "id11", "nearest_brenier_potential_fit"], [113, 3, 1, "id13", "nearest_brenier_potential_predict_bounds"]], "ot.optim": [[114, 3, 1, "id0", "cg"], [114, 3, 1, "id22", "gcg"], [114, 3, 1, "id26", "generic_conditional_gradient"], [114, 3, 1, "id40", "line_search_armijo"], [114, 3, 1, "id41", "partial_cg"], [114, 3, 1, "id44", "semirelaxed_cg"], [114, 3, 1, "id47", "solve_1d_linesearch_quad"]], "ot.partial": [[115, 3, 1, "", "entropic_partial_gromov_wasserstein"], [115, 3, 1, "", "entropic_partial_gromov_wasserstein2"], [115, 3, 1, "", "entropic_partial_wasserstein"], [115, 3, 1, "", "gwgrad_partial"], [115, 3, 1, "", "gwloss_partial"], [115, 3, 1, "", "partial_gromov_wasserstein"], [115, 3, 1, "", "partial_gromov_wasserstein2"], [115, 3, 1, "", "partial_wasserstein"], [115, 3, 1, "", "partial_wasserstein2"], [115, 3, 1, "", "partial_wasserstein_1d"], [115, 3, 1, "", "partial_wasserstein_lagrange"]], "ot.plot": [[116, 3, 1, "id0", "plot1D_mat"], [116, 3, 1, "id1", "plot2D_samples_mat"], [116, 3, 1, "id2", "rescale_for_imshow_plot"]], "ot.regpath": [[117, 3, 1, "id0", "complement_schur"], [117, 3, 1, "id12", "compute_next_removal"], [117, 3, 1, "id15", "compute_transport_plan"], [117, 3, 1, "id18", "construct_augmented_H"], [117, 3, 1, "id19", "fully_relaxed_path"], [117, 3, 1, "id21", "ot_next_gamma"], [117, 3, 1, "id23", "recast_ot_as_lasso"], [117, 3, 1, "id25", "recast_semi_relaxed_as_lasso"], [117, 3, 1, "id26", "regularization_path"], [117, 3, 1, "id28", "semi_relaxed_next_gamma"], [117, 3, 1, "id30", "semi_relaxed_path"]], "ot.sliced": [[118, 3, 1, "id0", "expected_sliced"], [118, 3, 1, "id12", "get_projections_sphere"], [118, 3, 1, "id13", "get_random_projections"], [118, 3, 1, "id14", "linear_sliced_wasserstein_sphere"], [118, 3, 1, "id17", "max_sliced_wasserstein_distance"], [118, 3, 1, "id19", "min_pivot_sliced"], [118, 3, 1, "id22", "projection_sphere_to_circle"], [118, 3, 1, "id23", "sliced_permutations"], [118, 3, 1, "id24", "sliced_wasserstein_distance"], [118, 3, 1, "id26", "sliced_wasserstein_sphere"], [118, 3, 1, "id28", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[119, 1, 1, "id0", "NegEntropy"], [119, 1, 1, "id10", "Regularization"], [119, 1, 1, "id14", "SparsityConstrained"], [119, 1, 1, "id18", "SquaredL2"], [119, 3, 1, "id22", "dual_obj_grad"], [119, 3, 1, "id23", "get_plan_from_dual"], [119, 3, 1, "id24", "get_plan_from_semi_dual"], [119, 3, 1, "id25", "projection_simplex"], [119, 3, 1, "id26", "semi_dual_obj_grad"], [119, 3, 1, "id27", "smooth_ot_dual"], [119, 3, 1, "id32", "smooth_ot_semi_dual"], [119, 3, 1, "id37", "solve_dual"], [119, 3, 1, "id38", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[119, 2, 1, "id7", "Omega"], [119, 2, 1, "id8", "delta_Omega"], [119, 2, 1, "id9", "max_Omega"]], "ot.smooth.Regularization": [[119, 2, 1, "id11", "Omega"], [119, 2, 1, "id12", "delta_Omega"], [119, 2, 1, "id13", "max_Omega"]], "ot.smooth.SparsityConstrained": [[119, 2, 1, "id15", "Omega"], [119, 2, 1, "id16", "delta_Omega"], [119, 2, 1, "id17", "max_Omega"]], "ot.smooth.SquaredL2": [[119, 2, 1, "id19", "Omega"], [119, 2, 1, "id20", "delta_Omega"], [119, 2, 1, "id21", "max_Omega"]], "ot.stochastic": [[120, 3, 1, "id0", "averaged_sgd_entropic_transport"], [120, 3, 1, "id15", "batch_grad_dual"], [120, 3, 1, "id18", "c_transform_entropic"], [120, 3, 1, "id21", "coordinate_grad_semi_dual"], [120, 3, 1, "id24", "loss_dual_entropic"], [120, 3, 1, "id26", "loss_dual_quadratic"], [120, 3, 1, "id28", "plan_dual_entropic"], [120, 3, 1, "id30", "plan_dual_quadratic"], [120, 3, 1, "id32", "sag_entropic_transport"], [120, 3, 1, "id35", "sgd_entropic_regularization"], [120, 3, 1, "id37", "solve_dual_entropic"], [120, 3, 1, "id39", "solve_semi_dual_entropic"]], "ot.unbalanced": [[121, 3, 1, "", "barycenter_unbalanced"], [121, 3, 1, "", "barycenter_unbalanced_sinkhorn"], [121, 3, 1, "", "barycenter_unbalanced_stabilized"], [121, 3, 1, "", "lbfgsb_unbalanced"], [121, 3, 1, "", "lbfgsb_unbalanced2"], [121, 3, 1, "", "mm_unbalanced"], [121, 3, 1, "", "mm_unbalanced2"], [121, 3, 1, "", "sinkhorn_knopp_unbalanced"], [121, 3, 1, "", "sinkhorn_stabilized_unbalanced"], [121, 3, 1, "", "sinkhorn_unbalanced"], [121, 3, 1, "", "sinkhorn_unbalanced2"], [121, 3, 1, "", "sinkhorn_unbalanced_translation_invariant"]], "ot.utils": [[122, 1, 1, "id13", "BaseEstimator"], [122, 1, 1, "id16", "LazyTensor"], [122, 1, 1, "id17", "OTResult"], [122, 6, 1, "", "UndefinedParameter"], [122, 3, 1, "id47", "check_number_threads"], [122, 3, 1, "id48", "check_params"], [122, 3, 1, "id49", "check_random_state"], [122, 3, 1, "id50", "clean_zeros"], [122, 3, 1, "id51", "cost_normalization"], [122, 1, 1, "id52", "deprecated"], [122, 3, 1, "id53", "dist"], [122, 3, 1, "id54", "dist0"], [122, 3, 1, "id55", "dots"], [122, 3, 1, "id56", "euclidean_distances"], [122, 3, 1, "id57", "exp_bures"], [122, 3, 1, "id58", "fun_to_numpy"], [122, 3, 1, "id59", "get_coordinate_circle"], [122, 3, 1, "id60", "get_lowrank_lazytensor"], [122, 3, 1, "id61", "get_parameter_pair"], [122, 3, 1, "id62", "is_all_finite"], [122, 3, 1, "id63", "kernel"], [122, 3, 1, "id64", "label_normalization"], [122, 3, 1, "id65", "labels_to_masks"], [122, 3, 1, "id66", "laplacian"], [122, 3, 1, "id67", "list_to_array"], [122, 3, 1, "id68", "parmap"], [122, 3, 1, "id69", "proj_SDP"], [122, 3, 1, "id70", "proj_simplex"], [122, 3, 1, "id71", "projection_sparse_simplex"], [122, 3, 1, "id73", "reduce_lazytensor"], [122, 3, 1, "id74", "tic"], [122, 3, 1, "id75", "toc"], [122, 3, 1, "id76", "toq"], [122, 3, 1, "id77", "unif"]], "ot.utils.BaseEstimator": [[122, 2, 1, "id14", "get_params"], [122, 2, 1, "id15", "set_params"]], "ot.utils.OTResult": [[122, 5, 1, "id30", "a_to_b"], [122, 5, 1, "id31", "b_to_a"], [122, 5, 1, "id32", "citation"], [122, 5, 1, "id33", "lazy_plan"], [122, 5, 1, "id34", "log"], [122, 5, 1, "id35", "marginal_a"], [122, 5, 1, "id36", "marginal_b"], [122, 5, 1, "id37", "marginals"], [122, 5, 1, "id38", "plan"], [122, 5, 1, "id39", "potential_a"], [122, 5, 1, "id40", "potential_b"], [122, 5, 1, "id41", "potentials"], [122, 5, 1, "id42", "sparse_plan"], [122, 5, 1, "id43", "status"], [122, 5, 1, "id44", "value"], [122, 5, 1, "id45", "value_linear"], [122, 5, 1, "id46", "value_quad"]], "ot.weak": [[123, 3, 1, "id0", "weak_optimal_transport"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "terms": {"": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 26, 27, 28, 29, 30, 33, 34, 37, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 54, 57, 58, 59, 63, 67, 69, 72, 73, 76, 77, 79, 81, 82, 83, 86, 88, 89, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127], "0": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127], "00": [12, 24, 26, 29, 32, 33, 35, 39, 43, 44, 46, 53, 60, 71, 77, 80, 86, 95, 117, 126], "000": 45, "0000": 45, "00000000e": 117, "000000e": [26, 32, 33, 43, 44, 46, 77], "0001": [0, 52, 101, 110, 114, 117], "00019": 11, "0005": [45, 79], "00050": 99, "000610e": 44, "0008": 72, "00080": 99, "0008750520000830875": 59, "0008940778156521405": 67, "0009": 67, "00090": 99, "0009949479999704636": 59, "001": [0, 45, 48, 58, 75, 79, 101, 103, 105, 110, 113, 119], "0010": 67, "0010664169994925032": 15, "0011": 67, "00130": 99, "001365e": 44, "0013724960658236956": 46, "0014": 67, "0015": 67, "0015689940000811475": 43, "0016": 67, "00160": 99, "0017": 67, "00170": 99, "0018": 67, "001810e": 44, "0018442196020623663": 3, "002": 45, "0020": 67, "00200": 99, "00210": 99, "00210228e": 70, "0022": 67, "00220": 99, "0024": 67, "002463e": 77, "00270": 99, "0028": 67, "00290": 99, "003": [35, 45], "00300": 99, "0031313109993789112": 59, "0032": 67, "00340": 99, "0035": 67, "00350": 99, "004": [16, 45], "0043": 67, "00430": 99, "0045": 67, "00450": 99, "004962e": 44, "005": [8, 45, 58, 79, 90, 94], "00510": 99, "0053": [45, 67], "005579259000114689": 15, "0056": 45, "00560": 99, "0057": 45, "00570": 99, "00580": 99, "005858444999830681": 15, "00590": 99, "006": 45, "006434e": 77, "0069": 67, "00690": 99, "007": 45, "007010e": 44, "007084e": 77, "00740": 99, "0075": 67, "00750": 99, "0077": 67, "00770": 99, "008": 45, "0086": 45, "009": 45, "009049e": 77, "0091": 67, "0093": 5, "00930": 99, "00940": 99, "00950": 99, "009637e": 77, "00970": 99, "01": [0, 3, 12, 14, 24, 26, 30, 35, 39, 42, 43, 44, 46, 49, 51, 53, 60, 65, 70, 71, 73, 76, 77, 79, 80, 86, 89, 92, 95, 100, 101, 108, 112, 115, 117, 126], "010": 45, "010127e": 77, "0103": 67, "010389716046318456": 69, "010577e": 77, "011": 45, "01100": 99, "01140": 99, "01150": 99, "01160": 99, "011779e": 77, "01180": 99, "012": 45, "01200": 99, "01201187700007722": 59, "012384e": 77, "01250": 99, "012621e": 44, "0127": [0, 112], "012700e": 77, "01278968196741": 8, "013": 45, "0132": 67, "013847e": 77, "014": 45, "01450": 99, "01460": 99, "015": 45, "015066e": 77, "01510": 99, "0152": 45, "01540": 99, "016": 45, "0161": 67, "016132136000123865": 59, "016301e": 44, "0165": 99, "0166": 99, "0167": 99, "0168": 99, "0169": 99, "017": 45, "0173": 99, "01734": [0, 118], "01770": 99, "01770568e": 65, "018": 45, "018080e": 77, "018197e": 44, "0182": 67, "0183218329658610e": 65, "018997e": 46, "019": 45, "01910": 99, "01930": 99, "019320e": 77, "019666e": 26, "0198": 99, "02": [24, 26, 32, 33, 35, 44, 46, 53, 60, 65, 70, 71, 73, 77, 79, 80, 92, 110, 115, 126], "020": [45, 74, 80, 126], "0200": 67, "0204": 99, "020473e": 77, "0209": 67, "020937e": 77, "021": 45, "02111111": [0, 112], "02120131": 70, "021806e": 77, "022": 45, "022440e": 77, "022552e": 46, "022607704624533653": 11, "023": 45, "023292e": 77, "023674e": 46, "023737e": 44, "023891e": 77, "024": 45, "024487e": 77, "024660e": 44, "025066673141778524": 51, "02563876e": 70, "025834e": 77, "0264": 67, "0271888262078476e": 65, "027228e": 46, "02780": 99, "0279": 45, "027911e": 77, "028438e": 77, "028566e": 44, "028656e": 77, "029127e": 77, "0292": 67, "0292344208896491e": 65, "029242e": 44, "0293": 99, "029326e": 26, "029337508603930473": 11, "029873e": 44, "029916e": 77, "03": [2, 12, 26, 32, 37, 43, 44, 46, 53, 65, 68, 70, 73, 77, 80, 85, 86, 95, 110, 115, 126], "0301476218564236e": 65, "030196e": 77, "0303977567984017e": 65, "031197285279631615": 11, "03140": 99, "031587667901338": 3, "03168988972902298": 11, "03183251e": 65, "03191560e": 65, "03203669e": 70, "032379165291786194": 11, "032574166354708264": 42, "032642e": 77, "03272819146513939": 11, "0328": 99, "033105e": 44, "0338": 67, "034152e": 77, "034711e": 44, "0348": 67, "034939464181661606": 11, "034974e": 44, "03516071289777756": 11, "035645e": 77, "03596879169344902": 11, "036": [78, 80, 126], "0364189450997889e": 65, "03651803e": 65, "03661": [0, 83, 118, 124], "03730057179927826": 11, "03761294147832006": 46, "03823623173438275": 46, "03825797e": 70, "03825804e": 70, "03959248960018158": 11, "039776e": 77, "03d": [4, 45], "04": [26, 32, 33, 37, 38, 43, 44, 46, 53, 59, 65, 70, 71, 73, 77, 126], "040056e": 46, "040145e": 44, "04016": [19, 23, 108, 112, 124], "040627e": 92, "04171676188707352": 11, "042086e": 44, "042609e": 77, "04347885772585869": 11, "04360": 99, "044052e": 77, "0445628466113015e": 65, "0450": 67, "0450183690192505": 46, "045221e": 77, "045361e": 77, "045543e": 44, "04564394801855087": 11, "046": 59, "0464": 45, "046431138906241": 29, "046784647314674": 48, "0470236926315406e": 65, "047880e": 77, "048017e": 77, "049564e": 77, "05": [0, 4, 8, 12, 24, 26, 32, 33, 37, 44, 46, 49, 53, 58, 59, 65, 70, 73, 77, 79, 80, 90, 94, 99, 100, 101, 103, 110, 112, 113, 117, 126], "05013977363705635": 11, "050210e": 77, "050905e": 44, "052335e": 77, "052346e": 77, "052475e": 77, "052519e": 77, "053": [68, 71, 126], "0539": 67, "0543140912490133e": 65, "05555556": 117, "056231e": 44, "056248e": 77, "056738e": 26, "05680": 99, "057021e": 77, "0572": 67, "0575": 67, "0577080390746961e": 65, "05796702206134796": 11, "05816": [0, 89, 101, 103, 121, 124, 127], "0583": 67, "05848772529333": 3, "058588504791259766": 11, "058755e": 77, "059240e": 77, "059322e": 33, "059879e": 44, "06": [0, 12, 32, 37, 44, 53, 70, 71, 73, 77, 101, 102, 103, 105, 107, 112, 113, 115, 121, 126], "060000000480860946": 42, "060184e": 44, "061523e": 44, "0621337155460657e": 65, "062747e": 77, "06276": 119, "063176e": 77, "063453e": 46, "064022e": 77, "064438e": 77, "06463543": 52, "06519": [0, 101, 121, 124, 127], "065503e": 77, "065525e": 77, "06567": [0, 77, 103, 114, 124, 127], "0662": 67, "0664": 45, "066779e": 44, "067772e": 77, "0678766065260413e": 65, "06822819": 70, "069425e": 77, "069551e": 29, "07": [0, 33, 37, 46, 53, 65, 70, 73, 77, 101, 102, 106, 107, 110, 111, 112, 115, 126], "07000000000000006": 51, "070647347170436": 8, "07070": 99, "071067e": 33, "071597e": 77, "072003e": 44, "072764e": 77, "0747229322240486e": 65, "07507868": 69, "075230e": 44, "07550425e": 70, "07550428e": 70, "076024e": 77, "076149e": 77, "076331e": 46, "076454e": 77, "07650": 75, "077194e": 44, "077789e": 77, "078": 53, "078011e": 77, "07907676e": 70, "07918271200014715": 15, "0792": 67, "079401e": 77, "079606e": 77, "079948e": 77, "08": [24, 35, 70, 73, 77, 99, 103, 110, 116, 126], "08001347": 69, "080617e": 44, "08063": [105, 124, 127], "08114235e": 70, "0815": 67, "081681e": 77, "081861e": 26, "081892e": 77, "082355e": 44, "08262628e": 70, "08262629e": 70, "08276": 127, "0853": 67, "0859243846661483e": 65, "0860": 45, "086064e": 77, "0862213476138876e": 65, "086303e": 77, "0869": 67, "086938e": 77, "087": 24, "087246e": 77, "087492e": 44, "088418e": 77, "088545e": 46, "09": [0, 46, 70, 73, 77, 101, 103, 110, 111, 114, 119], "0901": 67, "090911e": 77, "09098220e": 70, "0914": 67, "092609e": 44, "092896e": 77, "093438": 52, "09381731": 52, "09442286": 52, "09469872": 69, "094853e": 44, "095678e": 44, "095821e": 77, "09599610821598674": 62, "09600": 62, "0967564": 52, "09755": [22, 112, 124], "097715e": 44, "098033e": 46, "09837964": 52, "099326e": 44, "09957092": 52, "09963309": 52, "09979829": 69, "09980706": 9, "09999904": 69, "0x7f595f5c34f0": 59, "0x7f5975bdcac0": 6, "0x7f5976ce49d0": 67, "0x7f59772a3eb0": 38, "0x7f597c876fe0": 82, "0x7f597c988fd0": 11, "0x7f597cbaba90": 38, "0x7f59839ea7d0": 4, "0x7f5983a3d7e0": 7, "0x7f59a01150c0": 11, "0x7f59a02086d0": 67, "0x7f59a026ada0": 37, "0x7f59a026b2e0": 9, "0x7f59a3c55ae0": 67, "0x7f59a3e64400": 79, "0x7f59a40b0100": 47, "0x7f59a41e8580": 76, "0x7f59a4704730": 9, "0x7f59a47054e0": 73, "0x7f59a4896530": 67, "1": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 31, 32, 33, 37, 38, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127], "10": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 20, 24, 26, 28, 30, 31, 32, 33, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 62, 64, 65, 69, 73, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 105, 110, 111, 112, 113, 114, 119, 121, 124, 127], "100": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 19, 30, 32, 38, 41, 44, 46, 47, 48, 49, 50, 52, 56, 58, 63, 65, 67, 68, 72, 73, 76, 77, 82, 88, 89, 90, 92, 93, 99, 101, 102, 103, 105, 106, 108, 110, 112, 113, 115, 118, 122, 125], "1000": [0, 5, 8, 11, 18, 29, 31, 44, 57, 59, 65, 67, 69, 70, 82, 99, 100, 101, 103, 105, 107, 110, 111, 115, 121], "10000": [0, 99, 100, 101, 110, 120], "100000": [0, 70, 103, 112, 114, 121], "10000000000": 101, "10001527": 69, "10001687": 69, "1001999": 69, "100843e": 77, "101": 77, "10123674": 52, "101506e": 44, "101798e": 77, "101983e": 77, "102": 77, "1021": 67, "1022": 5, "1023": 67, "102825e": 44, "103": 77, "10316289599995798": 15, "103701e": 77, "104": 77, "10469915": 52, "105": 77, "105028e": 77, "106": [48, 77, 125], "106010e": 77, "1064": 45, "10648": [0, 118, 124, 127], "10656": [0, 118, 124, 127], "106686e": 44, "106799e": 77, "107": [77, 125], "107797e": 77, "107960e": 44, "108": [11, 77, 125], "10838179": 72, "108397e": 77, "10879755e": 70, "109": 77, "10964284837245941": 11, "10e": 103, "10x15": 100, "11": [0, 8, 14, 26, 33, 44, 46, 48, 52, 65, 77, 89, 92, 93, 105, 107, 110, 123, 124, 127], "110": [3, 8, 11, 44, 73, 77], "1100": 67, "110670e": 77, "110756e": 44, "111": [52, 77], "111116e": 77, "112": 77, "11278947": 70, "113": [77, 125], "113149e": 44, "11320882e": 65, "114": [23, 24, 77, 125, 126], "11466591": 69, "114761e": 77, "114904e": 77, "115": 77, "115348e": 77, "116": [67, 77, 125], "1164197325706482": 11, "116981378881717": 48, "117": 77, "117618e": 77, "1177409528991366e": 65, "1178": [103, 107, 124], "117891e": 77, "118": [77, 125], "118440e": 44, "11847689": 121, "1184769": [0, 121], "118543e": 77, "118744e": 77, "119": [17, 77, 101, 124, 127], "11939332e": 70, "1198": [103, 107, 124], "12": [0, 3, 8, 12, 17, 18, 19, 26, 33, 44, 46, 48, 52, 53, 65, 69, 77, 83, 92, 100, 101, 103, 110, 112, 115, 124, 125, 126, 127], "120": [3, 8, 11, 44, 58, 73, 77, 85], "1200": 67, "12004": [103, 124], "1203": 30, "1206": [44, 46, 122], "121": [42, 45, 46, 51, 57, 67, 72, 77, 92, 125], "122": [42, 45, 46, 51, 57, 72, 77, 92, 125], "1222": [64, 103, 113, 124], "12269228e": 70, "123": 77, "123055e": 77, "1232": [64, 103, 113, 124], "123508e": 77, "123553e": 46, "123902e": 44, "124": [77, 125], "125": [11, 68, 77, 101], "125684e": 44, "126": [77, 125], "12608610815788": 8, "126583681704034": 8, "127": [9, 77, 125], "127228618478725": 8, "127278e": 77, "127355e": 77, "1276": [107, 124], "127725e": 26, "128": [5, 77, 103, 112, 124], "128205680449874": 8, "12894119": 52, "129": 77, "12920968279601": 8, "129328026719429": 48, "129455496299416": 29, "129637e": 44, "129779e": 44, "13": [0, 17, 23, 26, 33, 37, 43, 44, 65, 72, 76, 77, 101, 108, 110, 115, 124, 125, 127], "130": [3, 8, 11, 44, 73, 77, 92, 125], "1300": 67, "130143e": 73, "1304": [107, 124], "1308": 45, "131": [46, 77, 92], "132": [46, 67, 77, 92, 125], "13233727e": 70, "13249603e": 70, "133": [46, 77, 92], "133700e": 77, "133875e": 77, "134": [77, 125], "1343": 67, "134468e": 43, "13447071": [0, 101], "134797e": 44, "134810e": 77, "135": 77, "13551386": 69, "13564527e": 70, "1357": 67, "135798e": 44, "135983e": 44, "136": [19, 22, 77], "137": [77, 89, 95, 125, 126], "138": [77, 125], "138329e": 77, "138746e": 77, "139": [77, 125], "13950": 99, "139916e": 44, "14": [26, 31, 33, 45, 48, 49, 52, 53, 56, 64, 65, 72, 77, 79, 91, 99, 103, 110, 113, 124, 125, 126, 127], "140": [3, 8, 11, 44, 73, 77, 125], "1400": 67, "140465e": 46, "140754e": 77, "140922e": 44, "141": [44, 77, 112, 124, 125], "141766e": 32, "141907e": 44, "142": [44, 77, 125], "142583e": 44, "142611e": 44, "142905e": 77, "143": [44, 67, 77, 125], "143080e": 77, "144": [44, 67, 77, 125], "144001e": 77, "144099e": 77, "144168e": 44, "144529e": 73, "145": [77, 125], "14514820e": 70, "145409e": 77, "145770e": 32, "145989e": 32, "146": [77, 125], "146269e": 32, "146607e": 32, "14670": 99, "14673091868494": 8, "147": [67, 77], "147001e": 32, "147342e": 77, "147508e": 32, "148": [77, 125], "148198e": 32, "149": [8, 12, 19, 24, 77, 126], "149197e": 32, "149450e": 44, "14981263716330115": 46, "15": [0, 5, 8, 11, 12, 17, 18, 26, 30, 33, 38, 41, 43, 44, 49, 57, 58, 63, 65, 69, 77, 78, 79, 100, 103, 107, 112, 121, 124, 125, 126, 127], "150": [3, 7, 8, 11, 19, 22, 26, 28, 30, 34, 44, 67, 68, 73, 77, 82, 125], "1500": 67, "150412e": 44, "150590e": 32, "15070615": 52, "150926e": 44, "151": 77, "1510": [0, 77, 103, 114, 124, 127], "15106071": 52, "151311e": 44, "152": 77, "152819e": 44, "1529": 122, "153": [77, 80, 126], "1533": 67, "153553e": 33, "153604e": 32, "153816351532946": 8, "154": 77, "154166e": 77, "15462212e": 70, "15466": 119, "155": [77, 125], "155041e": 77, "155365e": 44, "156": [77, 125], "1562": 67, "157": [67, 77, 125], "157560505651844": 8, "15797713e": 65, "158": [0, 77, 112, 124, 127], "158952e": 44, "159": 77, "159374e": 44, "159648e": 44, "159695e": 44, "159715e": 44, "159728e": 44, "159732e": 44, "159733e": 44, "16": [6, 10, 20, 23, 26, 33, 43, 48, 49, 62, 65, 69, 77, 83, 91, 99, 100, 102, 105, 107, 112, 117, 124, 126, 127], "160": [3, 5, 8, 11, 44, 73, 77, 125], "1600": 67, "16000000078748583": 42, "160242e": 77, "1607": [0, 89, 101, 103, 121, 124, 127], "160707e": 77, "1608": [105, 124, 127], "1609": 69, "160914e": 77, "161": [67, 77], "1610": [0, 101, 121, 124, 127], "162": [67, 77], "162297e": 77, "1627": 45, "163": 77, "163497e": 77, "164": [67, 77], "164296e": 77, "165": [67, 77], "165490e": 77, "166": 77, "1666": 89, "166739e": 77, "167": 77, "167083e": 77, "1671": 89, "16760501e": 65, "168": [67, 77], "1682": 89, "169": [67, 77, 125], "16904253e": 70, "16904255e": 70, "169442e": 44, "169453e": 32, "169490e": 32, "169558e": 32, "169664e": 32, "169845e": 32, "17": [0, 26, 33, 65, 77, 101, 112, 119, 124, 127], "170": [3, 8, 11, 44, 73, 77, 125], "1700": 67, "170411e": 32, "1706": 75, "171": [8, 77], "1710": 119, "17111111111111116": 51, "171195e": 44, "171723e": 77, "1719": 65, "172": [77, 125], "172093e": 77, "172942e": 77, "173": 77, "17381811e": 70, "174": [77, 125], "174595e": 77, "17467500e": 65, "175": [11, 77, 125], "1755": 67, "175881e": 44, "176": [77, 125], "176966e": 44, "177": 77, "177453e": 44, "177744e": 44, "178": [77, 125], "1781": 127, "178815e": 73, "179": 77, "179100e": 26, "1794": 67, "18": [8, 26, 33, 35, 41, 49, 53, 58, 60, 65, 70, 77, 78, 115, 120, 124, 126, 127], "180": [3, 8, 11, 44, 67, 73, 77], "1800": 67, "181": [22, 24, 77, 125, 126], "181249e": 77, "182": [69, 77], "182154e": 77, "182822e": 33, "182948e": 43, "183": 77, "18391107e": 70, "184": [67, 77, 125], "184075e": 33, "184451e": 46, "185": [67, 77], "1853": [27, 33, 77, 103, 114, 124, 127], "18551015414186553": 46, "185991e": 44, "186": [67, 77], "186767e": 77, "187": 77, "187777e": 26, "188": 77, "1882": [27, 33, 77, 103, 114, 124, 127], "188762e": 77, "18880498e": 70, "189": [75, 77, 80, 125, 126], "189063e": 77, "189212e": 44, "189279e": 43, "189327e": 43, "189863e": 77, "19": [3, 26, 33, 65, 67, 70, 77, 103, 120, 124, 125, 127], "190": [3, 8, 11, 44, 73, 77], "1900": 67, "190105e": 32, "190456e": 26, "190590e": 77, "191": [77, 125], "191147e": 46, "191339e": 44, "192": 77, "1922": 67, "1924746118060852e": 65, "192695e": 44, "19289693e": 65, "193": [67, 77], "193632e": 73, "193888e": 44, "1939": 67, "194": 77, "1942": 112, "19467692e": 65, "19499225e": 65, "195": [67, 77, 125], "195771e": 77, "195813e": 26, "196": [8, 77], "19600125": [0, 121], "1964": 67, "196582e": 77, "197": 77, "19722222": 117, "1973": 67, "19762224e": 70, "197885e": 33, "1979": 112, "197994e": 77, "198": [77, 125], "1984": [103, 107, 124, 127], "1985": 29, "199": [11, 77, 110, 115, 125], "1991": 112, "199151e": 77, "19965944": 4, "1_": [0, 121], "1_m": 117, "1_n": 117, "1d": [0, 12, 24, 39, 43, 67, 73, 95, 98, 104, 108, 110, 112, 114, 115, 116, 118, 122, 124, 125, 126, 127], "1e": [0, 4, 5, 10, 11, 14, 15, 17, 19, 20, 23, 26, 27, 28, 29, 32, 33, 34, 38, 43, 44, 47, 52, 57, 58, 59, 67, 68, 69, 72, 73, 74, 76, 77, 78, 79, 89, 93, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 125], "1e0": [26, 28, 32, 33, 65], "1e2": 110, "1e3": 6, "1f": 29, "2": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 31, 32, 33, 37, 38, 39, 41, 43, 45, 46, 47, 49, 50, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 81, 82, 84, 86, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127], "20": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 26, 32, 33, 37, 38, 41, 42, 43, 44, 45, 46, 49, 50, 51, 62, 63, 65, 67, 69, 72, 73, 75, 76, 77, 78, 80, 82, 83, 84, 85, 88, 89, 92, 93, 97, 100, 101, 110, 112, 118, 124, 125, 126, 127], "200": [0, 3, 7, 8, 11, 18, 20, 44, 57, 65, 67, 73, 77, 82, 84, 85, 103, 110, 114, 115, 125], "2000": [0, 6, 7, 10, 11, 22, 58, 67, 93, 110, 111], "20000": 99, "2002": 127, "201": 125, "2010": [0, 112, 115, 124], "2011": [0, 107, 110, 112, 124, 127], "20112337": 4, "2013": [0, 101, 103, 119, 121, 122, 124, 127], "2014": [19, 27, 33, 77, 101, 103, 112, 114, 124, 127], "201470e": 77, "2015": [0, 6, 14, 15, 77, 84, 101, 103, 114, 115, 118, 121, 124, 127], "2016": [0, 15, 19, 32, 33, 44, 46, 65, 70, 89, 100, 101, 103, 105, 110, 112, 113, 115, 120, 121, 124, 125, 127], "2017": [0, 11, 64, 101, 103, 107, 112, 113, 123, 124, 125, 127], "2018": [0, 11, 70, 73, 101, 103, 107, 112, 115, 119, 120, 124, 125, 127], "2019": [0, 6, 41, 43, 44, 46, 49, 100, 101, 103, 106, 107, 110, 112, 118, 124, 125, 127], "202": 125, "2020": [0, 11, 17, 23, 37, 49, 62, 64, 69, 92, 101, 102, 103, 107, 108, 109, 110, 113, 114, 115, 124, 125, 127], "20204949002247385": 3, "2021": [0, 4, 22, 42, 46, 48, 50, 51, 58, 93, 99, 101, 103, 105, 107, 110, 111, 112, 114, 117, 121, 124, 125, 127], "2022": [0, 45, 52, 57, 90, 103, 107, 110, 112, 121, 124], "2023": [0, 44, 63, 69, 83, 85, 105, 110, 112, 118, 119, 124, 125], "2024": [0, 19, 23, 83, 108, 112, 118, 124, 125], "202445e": 77, "2025": [0, 83, 115, 118, 124, 125], "202882711135615": 8, "203": 125, "203033e": 77, "20306258e": 70, "203845e": 44, "2041": 45, "20468056e": 70, "204723e": 77, "205038e": 46, "205670e": 44, "206": [67, 71, 126], "206000e": 33, "206184e": 77, "20626649e": 65, "206415e": 77, "206694e": 77, "207": 125, "207356e": 32, "207534e": 77, "208": [28, 35, 125, 126], "208291e": 77, "208638e": 44, "209223e": 46, "209694e": 77, "21": [0, 16, 24, 48, 53, 65, 77, 83, 101, 124, 126, 127], "210": [8, 44, 125], "2100": 67, "210344e": 77, "2105": [22, 112, 124], "2109": [103, 124], "211": 67, "211305e": 44, "211369e": 77, "211501e": 26, "2116": 67, "212": 67, "2130688726902008": 7, "213120e": 77, "2132": 67, "213739e": 77, "214": 11, "21423583e": 70, "215": [91, 95, 125, 126], "215131e": 77, "21640234e": 70, "216608e": 26, "2169879996364512e": 65, "217": 125, "217013e": 44, "21736592892258025": 44, "217366e": 77, "217780e": 77, "218": 67, "218588e": 26, "218969e": 77, "22": [0, 6, 8, 65, 77, 83, 84, 101, 118, 124, 125, 127], "220": [8, 44, 125], "2200": 67, "2209": 119, "221": 8, "22107416e": 70, "221188e": 77, "22132": [107, 124], "22145": [107, 124], "22154699e": 70, "221805e": 77, "221950448334646": 8, "222": [33, 35, 126], "222711e": 77, "223": 11, "2234351238819923e": 65, "223502e": 32, "2239": [0, 112, 124], "224327e": 77, "224681e": 77, "2258": [0, 112, 124], "226": 67, "226158e": 43, "226484e": 77, "226810e": 77, "227": 112, "227167e": 44, "228": [64, 71, 126], "2281": 67, "229": 112, "2292": [124, 127], "22940946e": 65, "229430e": 44, "229432e": 77, "22nd": [0, 101, 106, 124, 127], "23": [7, 8, 9, 11, 60, 65, 76, 77, 101, 112, 124, 125, 127], "230": [8, 44], "2300": [67, 124, 127], "231": [67, 125], "231320e": 77, "2317": 67, "23177216e": 70, "23177217e": 70, "232": 125, "232558e": 44, "233": 67, "233110e": 73, "233754e": 77, "2338": 67, "233818e": 77, "234": 125, "234502e": 44, "234582e": 33, "2348794356788732": 92, "235": 67, "23518788e": 65, "235363e": 77, "235791e": 73, "236": [65, 71, 125, 126], "23617788e": 65, "236970e": 44, "237": [20, 24, 126], "23710741e": 70, "237390e": 77, "237579e": 77, "237597e": 77, "238": 125, "239175e": 43, "239567e": 77, "23nd": 11, "24": [0, 43, 44, 46, 65, 77, 102, 110, 124, 125, 127], "240": [8, 44, 125], "2400": 67, "241": 125, "24103327e": 70, "24179586715084828": 42, "242": 125, "242264e": 44, "242762e": 44, "243": [16, 24, 126], "243555e": 44, "24412455339648": 3, "2442": 67, "244899e": 44, "2454": [0, 106, 124, 127], "246": 67, "2465": [0, 106, 124, 127], "2467": 67, "24680": 99, "24722222": 117, "24722222222222215": [42, 51], "247758e": 26, "248": [82, 86, 126], "2485": 45, "249": 125, "249094e": 77, "249817e": 77, "25": [0, 8, 11, 15, 23, 41, 43, 45, 58, 65, 77, 78, 79, 82, 85, 110, 115, 117, 121, 124, 125, 127], "250": [8, 44], "2500": 67, "2501": [19, 23, 108, 112, 124], "2506": [0, 83, 118, 124], "252": 67, "252492e": 77, "253": [67, 125], "253345e": 77, "253384e": 77, "25357448e": 70, "25387848e": 65, "254": 125, "254840e": 44, "2552516366391106": 51, "256": [27, 31, 33], "256196e": 77, "2570": 67, "257329928299894": 8, "257392e": 44, "257432e": 32, "2576635020911173": 44, "258": [67, 125], "258231e": 77, "258253e": 77, "259": [78, 88, 95, 125, 126], "259349e": 77, "25971567e": 70, "26": [0, 58, 65, 77, 101, 103, 119, 121, 124, 125, 127], "260": [8, 44, 125], "2600": 67, "260396e": 77, "261541e": 77, "26193": 69, "261945704106836": 8, "262": [67, 125], "2628": 67, "262867e": 77, "26293461300065246": 15, "263": [67, 112], "2634": 67, "264402e": 77, "26486645931444": 48, "265": [112, 124], "267": 125, "2681": [0, 101, 124, 127], "268827591939186": 8, "26894142136999516": [0, 101], "2690": [0, 101, 124, 127], "26989344e": 101, "27": [8, 48, 65, 77, 101, 103, 124, 125], "270": [8, 44], "2700": 67, "270041e": 44, "27069736487666": 8, "270902e": 77, "271184e": 44, "272349e": 77, "273": [0, 112, 123, 124, 127], "273358e": 92, "273670e": 44, "274": 125, "275": 125, "27590340578239": 8, "276": 67, "276036e": 46, "276486e": 77, "277552e": 32, "277767e": 77, "278": 125, "279017e": 44, "27931720e": 70, "279398e": 77, "28": [33, 35, 65, 77, 93, 95, 115, 117, 124, 125, 126, 127], "280": [8, 44, 67, 125], "2800": 67, "280509e": 77, "281": 125, "281229e": 26, "282": 125, "282043e": 77, "282614e": 77, "283163e": 32, "28321242161009": 8, "283286e": 77, "283767e": 44, "284": [67, 125], "286": 125, "286832e": 77, "287": [67, 125], "28734709e": 70, "288": 125, "288193e": 77, "288260e": 77, "288742e": 77, "28883715e": 65, "289": 67, "29": [0, 8, 49, 65, 77, 92, 103, 107, 110, 114, 115, 124, 125, 127], "290": [8, 44, 125], "2900": 67, "290460e": 77, "291": 125, "2914": 5, "291730e": 77, "292": 78, "292424e": 26, "292497e": 77, "292634e": 77, "29296540e": 70, "293": 125, "293340e": 73, "294": 125, "294505e": 73, "294698e": 26, "295447e": 77, "296": 125, "296544e": 33, "2968": 67, "297098e": 44, "29750588": 4, "298": 125, "2980": 45, "2981": 67, "298130e": 77, "298576e": 77, "299": 67, "2_": 113, "2_f": 113, "2b": 110, "2d": [4, 22, 24, 26, 28, 29, 30, 34, 48, 49, 50, 52, 54, 56, 57, 59, 66, 72, 74, 75, 81, 83, 86, 93, 95, 101, 104, 116, 122, 124, 125, 126, 127], "2e": [9, 37, 73, 93], "2e0": 26, "2f": [29, 57, 72, 83, 91], "2g": 72, "2gauss_prop": 29, "3": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 26, 27, 29, 30, 31, 32, 33, 37, 38, 41, 43, 45, 46, 47, 49, 50, 56, 57, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 92, 93, 94, 100, 101, 103, 110, 111, 112, 113, 114, 115, 117, 118, 121, 122, 124, 127], "30": [0, 3, 6, 7, 8, 11, 15, 26, 27, 28, 30, 34, 35, 41, 42, 43, 44, 46, 47, 48, 50, 51, 52, 58, 63, 64, 65, 72, 73, 77, 103, 112, 124, 125, 126, 127], "300": [2, 8, 44, 48, 67], "3000": [47, 67], "300000": 120, "301122e": 92, "30128899": 70, "301317e": 77, "3018": 125, "302": [3, 12, 125, 126], "30225078e": 70, "30225079e": 70, "30274241": 4, "303": 125, "304": 125, "304213e": 77, "3042776946697494e": 65, "305": 125, "305436e": 26, "30555049e": 65, "305693e": 77, "306": 125, "3060442707611048e": 65, "3060442727858727e": 65, "3060442737731426e": 65, "3060442740443740e": 65, "3060442741136428e": 65, "3060442741310502e": 65, "3060442741354079e": 65, "3060444900856542e": 65, "3060454740611516e": 65, "3060471854906608e": 65, "3060852373964541e": 65, "3061003105938882e": 65, "3061519732125807e": 65, "3061669948481955e": 65, "3061708734620151e": 65, "307154e": 33, "308": 125, "309": 125, "30j": 85, "31": [0, 3, 6, 8, 17, 24, 65, 67, 71, 72, 77, 84, 101, 107, 118, 124, 125, 126, 127], "310": [8, 44, 58, 125], "3100": 67, "31006491e": 65, "310793e": 44, "3109": 67, "311": 125, "31178193e": 70, "31178196e": 70, "312306e": 44, "312936705667057": 48, "313": 125, "3132": 67, "314610e": 44, "315": 125, "31505947e": 70, "315190e": 77, "315219e": 77, "316": [99, 125], "316379e": 77, "317": 125, "318292e": 26, "3184": 67, "31875285406105": 3, "319": 125, "32": [6, 8, 18, 57, 65, 77, 105, 110, 124, 127], "320": [8, 15, 44, 67], "3200": 67, "320635e": 77, "321288e": 77, "322": 125, "32205357": 121, "3220536": [0, 121], "323025e": 44, "323543e": 77, "32409360e": 70, "32427691564021": 8, "324561e": 92, "325603e": 77, "326": 125, "326191e": 77, "326755e": 77, "328651e": 77, "329589e": 77, "329722e": 77, "3299": 67, "32gb": 99, "33": [8, 46, 57, 62, 65, 69, 77, 101, 102, 124, 127], "330": [8, 44], "3300": 67, "330020e": 46, "331": 125, "332": 125, "33264368175991": 3, "3327": [0, 123, 124, 127], "333": 125, "333798e": 77, "3339": 5, "334": 125, "334102e": 77, "334121e": 44, "334506e": 46, "335": [31, 35, 126], "335304e": 26, "336": [37, 39, 125, 126], "336538e": 26, "337": 125, "337741e": 44, "338": 125, "3380401875457987e": 65, "33831455e": 70, "33831456e": 70, "338395e": 77, "338514e": 77, "338932e": 73, "33918268": 70, "34": [0, 7, 8, 12, 65, 77, 101, 107, 110, 121, 124, 126, 127], "340": [8, 44, 125], "3400": 67, "34039510e": 70, "3405": [0, 123, 124, 127], "340916e": 44, "341": 125, "3413": 67, "34167509988665": 3, "34246014e": 70, "3429": 67, "343": [15, 125], "343153e": 77, "3445": 45, "344581e": 32, "345": 125, "3457": [101, 124], "346": 125, "3462": [101, 124], "346394e": 77, "348": [21, 24, 126], "348118e": 33, "34839063e": 70, "348538e": 77, "349": 125, "34923131e": 65, "349251e": 77, "349865e": 44, "35": [0, 3, 8, 29, 45, 58, 65, 77, 79, 80, 110, 118, 124, 125, 127], "350": [8, 44, 125], "3500": 67, "350146e": 77, "3507": 67, "351": 125, "351982e": 77, "352": 125, "352083e": 77, "35308774e": 70, "35350": [0, 83, 118, 124], "353586e": 77, "3536699": 52, "353809e": 77, "35385": [0, 83, 118, 124], "354539e": 77, "355": [67, 107], "356410e": 77, "356453e": 32, "356805e": 32, "357": 125, "358": 125, "358084e": 33, "359": 125, "35962578e": 65, "36": [0, 6, 8, 65, 77, 83, 117, 118, 121, 124, 127], "360": [8, 44, 50, 53, 125, 126], "3600": 67, "360245e": 77, "361": [34, 35, 89, 125, 126], "361187e": 77, "361708e": 77, "361733e": 77, "362": 125, "363": 125, "36337600e": 70, "3635": 67, "364": 125, "364311e": 44, "364492e": 77, "36552929": [0, 101], "365715e": 77, "366209e": 77, "366410e": 77, "366487e": 77, "36658434e": 70, "3671471715862438": 44, "367159e": 77, "367836e": 77, "367864e": 33, "368455e": 44, "369414e": 44, "369491e": 77, "369707e": 77, "36th": [0, 124, 127], "37": [0, 6, 8, 12, 14, 15, 17, 65, 67, 77, 95, 101, 112, 115, 121, 124, 125, 126, 127], "370": [8, 44], "3700": 67, "3703": 67, "3708342026018231e": 65, "371": 125, "372": 125, "372136e": 77, "372351e": 44, "373": 125, "373540e": 77, "374": 125, "375": [68, 125], "376": [7, 12, 125, 126], "376049e": 77, "3761179313933098": 44, "377": 125, "3777": 67, "378": [86, 125], "3789": 67, "37891333e": 70, "37891338e": 70, "379": [52, 53, 125, 126], "37954834561228107": 42, "379844e": 44, "37th": [17, 101, 124, 127], "38": [0, 3, 4, 48, 65, 77, 83, 110, 124, 127], "380": [8, 44, 125], "3800": 67, "381": [66, 71, 125, 126], "3812043286676665": 51, "382": 67, "382386e": 77, "382526768389072": 48, "382735e": 77, "383515e": 77, "384": 67, "385291e": 44, "38544380e": 70, "385888946321474": 48, "386": 125, "386258e": 77, "386414e": 77, "387": [62, 71, 125, 126], "3871": 45, "387158e": 77, "387670e": 77, "388": 125, "389": [46, 53, 125, 126], "389046e": 44, "38th": [124, 127], "39": [0, 65, 67, 77, 106, 123, 124, 127], "390": [8, 44], "3900": 67, "390504e": 77, "391": [11, 12, 125, 126], "39115407e": 65, "39135941e": 70, "392407e": 77, "393": 125, "3930": 67, "394": 125, "394035e": 77, "394153e": 77, "39440105e": 70, "39440107e": 70, "395": 125, "396351e": 26, "396466e": 77, "396935e": 77, "396951e": 77, "396988e": 33, "397436e": 77, "398538e": 44, "39885389e": 65, "39946687e": 70, "399809e": 77, "3d": [0, 3, 7, 8, 11, 14, 15, 22, 50, 57, 85, 89, 100], "3e": 38, "3f": [17, 29, 78, 93], "3gauss": [26, 28, 30, 34], "3gauss2": [26, 28, 30, 34], "4": [0, 3, 4, 5, 6, 7, 8, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 83, 84, 86, 88, 89, 90, 92, 93, 94, 96, 100, 101, 102, 103, 107, 110, 112, 113, 115, 117, 121, 122, 124, 127], "40": [0, 3, 7, 8, 11, 42, 44, 46, 48, 50, 51, 65, 72, 73, 77, 90, 94, 106, 117, 124, 127], "400": [8, 44, 67, 125], "4000": 67, "400714e": 77, "401053e": 77, "401870e": 77, "402": 125, "403": 125, "4032555710632": 8, "403398e": 77, "404": 125, "4044": 67, "40472984e": 70, "4054": 5, "405506e": 77, "406304e": 77, "406954e": 44, "408": [71, 125], "408251e": 32, "408669e": 77, "409": 125, "41": [0, 3, 65, 72, 77, 117, 121, 124, 125, 127], "410": [8, 44, 125], "410259e": 77, "4104": [6, 124, 127], "4113": [6, 124, 127], "412": 125, "413": 125, "413388e": 77, "413843e": 77, "413884e": 44, "415": 95, "415348e": 44, "416497e": 77, "416792e": 77, "417": [0, 110, 124, 125, 127], "417109e": 44, "419505e": 77, "42": [0, 4, 6, 8, 19, 22, 27, 31, 33, 48, 52, 56, 59, 63, 77, 101, 112, 118, 124, 125], "420": [8, 44], "420712e": 77, "421": 125, "422": 125, "4220": 67, "422836731254962": 48, "42317354": 70, "42326698": 52, "423360e": 77, "4234": 67, "4237": 67, "424": 125, "425": [26, 35, 125, 126], "4255": 45, "426078e": 73, "4271": 67, "427166e": 44, "428": 125, "4285": 67, "428734e": 77, "43": [19, 68, 71, 77, 101, 103, 107, 112, 124, 125, 127], "430": [8, 44], "431951e": 77, "433353e": 44, "434": 67, "4350": 67, "435945e": 77, "43596310348252": 8, "436877e": 44, "437": 125, "438312e": 44, "439446e": 77, "439790e": 77, "44": [0, 77, 110, 112, 115, 124, 125], "440": [8, 44], "4401037686381051e": 65, "440242e": 44, "440781e": 77, "440996850749865": 8, "441": [19, 72, 101, 112, 124], "442": 67, "4421": 10, "44254776e": 65, "44369039e": 70, "445": [93, 95, 126], "44684454e": 70, "44779183": 52, "447826e": 77, "448996e": 77, "449": [85, 86, 126], "449812e": 73, "45": [0, 6, 22, 50, 57, 77, 84, 112, 118, 121, 124, 125, 127], "450": [8, 44], "450071e": 73, "450250e": 77, "450691e": 77, "451": 124, "452161e": 77, "452203e": 77, "45275877977004": 3, "452791e": 77, "453459e": 77, "455": [89, 94, 95, 126], "456": [44, 53, 126], "4560947951444": 92, "4563": 67, "456740e": 43, "456995e": 77, "457": 49, "457501e": 77, "457933e": 44, "458518e": 26, "45865441165184": 8, "458840e": 77, "4590": 45, "45908742e": 70, "45973891e": 65, "46": [0, 10, 77, 85, 86, 112, 118, 124, 125, 126], "460": [8, 44], "460343e": 77, "4605918": 70, "461179e": 92, "463000e": 77, "464": 67, "464513e": 77, "465400e": 77, "465712e": 44, "4660": 67, "466407e": 77, "467075e": 77, "467159e": 77, "467885e": 44, "468402e": 77, "469": [58, 60, 126], "4692": [17, 101, 124, 127], "46949401889149": 8, "46k": 125, "47": [0, 62, 77, 102, 110, 124, 125], "470": [8, 44], "4701": [17, 101, 124, 127], "470297e": 77, "472502e": 44, "473216e": 44, "47528039e": 65, "47789947": 70, "478250e": 26, "479": 67, "47910182636916243": 92, "48": [0, 42, 51, 52, 72, 77, 110, 114, 124, 125], "480": [8, 44], "480216e": 44, "480784e": 77, "481358e": 77, "481860e": 77, "482235e": 59, "482693753355026": 3, "483013e": 77, "487": [0, 110, 124, 127], "48790516e": 70, "489527e": 77, "489908e": 44, "49": [0, 19, 57, 62, 69, 77, 102, 110, 111, 124, 125], "490": [8, 44], "490171121877912": 48, "490397e": 77, "491257e": 77, "491601e": 77, "49162020216744": 48, "493878e": 44, "4939": 45, "49526939": 52, "495884e": 77, "495981244000177": 67, "496771e": 77, "496936e": 77, "4975": 67, "49759815": 4, "498": [18, 24, 126], "498203806732256": 3, "4995": [0, 90, 121, 124], "499887176049052": 101, "4a90e2": 23, "4d": 100, "4f": [5, 19, 45], "4x4": 100, "5": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 107, 109, 110, 111, 112, 114, 115, 117, 118, 121, 122, 124, 127], "50": [0, 3, 5, 6, 7, 8, 9, 11, 12, 15, 19, 20, 22, 29, 44, 45, 46, 48, 49, 52, 57, 58, 63, 64, 66, 67, 73, 74, 77, 78, 79, 83, 90, 93, 100, 101, 111, 112, 115, 118, 119, 124, 125, 126], "500": [0, 6, 7, 8, 9, 11, 27, 33, 37, 44, 59, 67, 82, 99, 102, 110, 118, 119], "5000": 99, "50000": [99, 117], "500538e": 77, "50137075": 4, "501837e": 46, "502": 125, "5021": [0, 90, 121, 124], "5034205945081645": 92, "504": [42, 53, 125, 126], "505381e": 44, "505787072896766": 8, "506358e": 32, "506527e": 44, "506710e": 44, "507": 125, "508254e": 43, "50856086e": 70, "50ghz": 99, "51": [0, 6, 19, 44, 46, 64, 71, 77, 84, 110, 112, 118, 124, 126, 127], "510": 44, "51095472212391": 8, "511958e": 77, "513222e": 44, "513799e": 77, "513893e": 77, "514784e": 77, "515613e": 33, "516": 125, "517": [41, 53, 126], "517180e": 59, "518282e": 77, "519": [70, 71, 126], "52": [45, 63, 77, 86, 105, 124, 125], "520": [44, 125], "5200": 45, "520091e": 77, "520224e": 77, "5202571647214724": 48, "520585380642636": 8, "522": [73, 80, 126], "52222222222222": [7, 8, 9, 11], "522281e": 77, "52288517e": 70, "52288523e": 70, "5233": 45, "523409e": 77, "523528e": 77, "524214e": 77, "525": [125, 126], "525192e": 77, "525425411846459": 48, "526": 125, "526353e": 77, "526708e": 77, "52716830e": 65, "527236e": 77, "527425475361845": 8, "527755e": 77, "527976e": 44, "528875e": 77, "528923e": 77, "529356e": 73, "529811e": 77, "53": [45, 77, 109, 124], "530": [44, 125], "531979e": 44, "532": [4, 12, 126], "532462e": 77, "532647e": 77, "532951451211367": 48, "533": 125, "5335287322441005": 48, "533873e": 44, "534": 125, "534028e": 44, "535": 125, "5355": 67, "536": 125, "536791e": 77, "536990e": 44, "537": 125, "537206e": 77, "539": 125, "53978687e": 101, "54": [77, 109, 124], "540": 44, "540097202879465": 8, "540149e": 77, "541112e": 77, "543": 125, "543889e": 77, "544": 125, "544857e": 77, "545262551431136": 8, "545590e": 44, "546680e": 77, "547": 125, "547154649280394": 8, "547220e": 77, "548413e": 77, "549048e": 32, "55": [38, 77, 112, 124, 125], "550": 44, "550021e": 77, "550537e": 77, "550627e": 44, "551": 125, "551478e": 77, "552714e": 43, "554877e": 44, "555170e": 77, "55553508e": 70, "55553509e": 70, "55564856024449": 3, "555826e": 77, "5559": 67, "556": [67, 125], "5570": 45, "5571464161218": 8, "557516e": 77, "557834e": 44, "557935e": 77, "558": 78, "558020e": 77, "558368e": 44, "55838411": 70, "559": 125, "559817e": 44, "56": [77, 112, 124, 125], "560": 44, "560349e": 77, "560750e": 77, "560795e": 44, "56119589e": 65, "56123974e": 70, "56123975e": 70, "56209042e": 70, "562652e": 26, "562760e": 77, "563": 125, "563722e": 77, "564": [38, 39, 126], "564338e": 44, "5650": 67, "565024e": 77, "566": [79, 80, 125, 126], "56664149963812": 8, "566666e": 77, "567": 125, "5674723897958": 48, "568": 125, "569": [63, 71, 125, 126], "569222e": 77, "569794e": 77, "57": [0, 77, 103, 107, 112, 124, 125], "570": [44, 125], "571": 125, "5719": 67, "5719034": 70, "572": 125, "572776e": 77, "573": 125, "573214e": 44, "574": 125, "575938e": 77, "576": 125, "576082e": 77, "576219e": 77, "576367e": 77, "576771e": 77, "577581e": 77, "578": 125, "578909e": 77, "579": 67, "58": [64, 65, 77, 103, 112, 113, 124, 125], "580": [12, 44, 76, 80, 126], "580081e": 44, "580337e": 77, "58037947236615": 8, "580415e": 44, "581": 125, "582": 125, "583631e": 77, "584": 125, "584459e": 77, "58461053e": 70, "5847": 67, "584755e": 77, "585": [10, 12, 126], "585715e": 44, "5858": 45, "587": 125, "587988e": 26, "588453e": 77, "588499e": 77, "5890820430362781": 4, "589522e": 77, "59": [64, 77, 103, 107, 112, 113, 124, 125, 127], "590": 44, "590018e": 77, "590932e": 44, "592": [14, 24, 125, 126], "593": 125, "594984e": 77, "595": 89, "596": 125, "59605592e": 65, "596126e": 44, "598840195117187": 3, "599": [49, 53, 126], "599432e": 77, "5e": [4, 17, 29, 46, 47, 78, 93], "5e1": 6, "5f": 62, "5x5": 100, "6": [0, 2, 4, 8, 10, 15, 17, 19, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 37, 38, 42, 44, 45, 46, 48, 49, 50, 52, 56, 57, 58, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 79, 88, 89, 90, 91, 93, 94, 102, 103, 107, 110, 112, 113, 117, 120, 122, 124, 127], "60": [3, 6, 7, 8, 10, 11, 14, 15, 17, 44, 45, 46, 48, 52, 67, 73, 77, 88, 89, 101, 112, 124], "600": [44, 67], "601": 125, "601472e": 26, "602": 125, "602434e": 77, "603": 125, "604506e": 77, "604616e": 77, "604783e": 77, "605": 125, "606": 125, "606056e": 46, "606377e": 77, "606772e": 77, "607": [107, 125], "607049e": 77, "607424e": 77, "607426e": 77, "607435e": 77, "607445e": 77, "607460e": 77, "607470e": 77, "607475e": 77, "607478e": 77, "607484e": 77, "607485e": 77, "607491e": 77, "607493e": 77, "607503e": 77, "607513e": 77, "607514e": 77, "607524e": 77, "607525e": 77, "607537e": 77, "607541e": 77, "607551e": 77, "607554e": 77, "607556e": 77, "607558e": 77, "607566e": 77, "607579e": 77, "607580e": 77, "607595e": 77, "607609e": 77, "607627e": 77, "607635e": 77, "607645e": 77, "607671e": 77, "607680e": 77, "607698e": 77, "607714e": 77, "607737e": 77, "607764e": 77, "607793e": 77, "607832e": 77, "607874e": 77, "607889e": 77, "607963e": 77, "607966e": 77, "607999e": 77, "608023e": 77, "608024e": 77, "608059e": 77, "608073e": 77, "608076e": 77, "608088e": 77, "608089e": 77, "608117e": 77, "608165e": 77, "608215e": 77, "608224e": 77, "608237e": 77, "608243e": 77, "608300e": 77, "608313e": 77, "608329e": 77, "608330e": 77, "608364e": 77, "608433e": 77, "608600e": 77, "608632e": 77, "608636e": 77, "608637e": 77, "608664e": 77, "608673e": 77, "608707e": 77, "608734e": 77, "608761e": 77, "608774e": 77, "608805e": 77, "608860e": 77, "609013e": 77, "609031e": 77, "609087e": 77, "609163e": 77, "609281e": 77, "609691e": 77, "609805e": 77, "609818e": 77, "609889e": 77, "609900e": 77, "609932e": 77, "609963e": 77, "61": [67, 77, 101, 124], "610": [44, 125], "610030e": 77, "610088e": 77, "610174e": 77, "610179e": 77, "610190e": 77, "610202e": 77, "6104371268816835": 48, "610479e": 77, "610790e": 77, "611": 125, "611033e": 77, "611082e": 77, "611295e": 44, "612633e": 77, "6126745": 70, "613": 125, "614": 125, "614437e": 77, "61451746e": 70, "615": 89, "61515201e": 70, "61515202e": 70, "616177419309466": 3, "617012e": 26, "617643e": 77, "618007e": 77, "618865e": 44, "618871e": 44, "619": 125, "619328e": 44, "619816e": 33, "619901e": 32, "62": [77, 110, 124, 125], "620": [44, 125], "620752e": 33, "621": 67, "622121e": 77, "6222": 45, "622743e": 43, "6238992011604663": 48, "624087e": 77, "624135e": 77, "6248": 99, "625002e": 77, "625455e": 77, "62747246e": 70, "628": 125, "628015e": 77, "629": 125, "63": [44, 77, 110, 124], "630": 44, "630037e": 77, "63066822": 70, "6322": 67, "632479e": 77, "63341399e": 70, "634542e": 77, "63488731570214": 8, "635561e": 77, "635978662861795": 8, "636": [43, 53, 101, 124, 126], "63628461e": 70, "6365": 67, "637176e": 73, "63722430960618": 8, "637504e": 77, "637523e": 44, "638": 67, "638946e": 77, "638947e": 44, "639430e": 77, "639787e": 44, "64": [44, 77, 110, 124, 125], "640": 44, "640431e": 44, "641": 125, "641123e": 77, "642": 125, "64206913098603": 8, "643": 125, "643416e": 77, "644": [101, 124], "644049e": 77, "644308e": 77, "645179e": 77, "645410e": 77, "646051e": 77, "646093e": 77, "647": 67, "648": 125, "648141e": 77, "648247e": 33, "649": 125, "649076e": 77, "64bit": 125, "65": [0, 58, 67, 77, 111, 124], "650": 44, "6504588509575427": 4, "650678e": 26, "651129e": 77, "65147154e": 65, "6519": 45, "652001e": 77, "652715e": 77, "653393e": 77, "654": 125, "654959166703776": 3, "655145e": 77, "656824e": 77, "658": 125, "658655e": 44, "658928e": 77, "659": 125, "659266219020246": 8, "65987989e": 70, "66": [77, 101, 103, 124, 125, 127], "660": 44, "660689e": 44, "660790e": 44, "660812e": 44, "661047e": 73, "661834e": 32, "662507e": 77, "662611e": 77, "662643e": 77, "663": 125, "663543e": 77, "663544e": 77, "663545e": 77, "663546e": 77, "663547e": 77, "663548e": 77, "663549e": 77, "663550e": 77, "663551e": 77, "663552e": 77, "663553e": 77, "663554e": 77, "663555e": 77, "663556e": 77, "663557e": 77, "663558e": 77, "663559e": 77, "663560e": 77, "663561e": 77, "663562e": 77, "663563e": 77, "663564e": 77, "663565e": 77, "663566e": 77, "663567e": 77, "663568e": 77, "663569e": 77, "663570e": 77, "663571e": 77, "663572e": 77, "663573e": 77, "663574e": 77, "663575e": 77, "663576e": 77, "663577e": 77, "663578e": 77, "663579e": 77, "663580e": 77, "663581e": 77, "663582e": 77, "663583e": 77, "663584e": 77, "663585e": 77, "663586e": 77, "663587e": 77, "663588e": 77, "663589e": 77, "663590e": 77, "663591e": 77, "663592e": 77, "663593e": 77, "663594e": 77, "663595e": 77, "663596e": 77, "663598e": 77, "663599e": 77, "663600e": 77, "663601e": 77, "663602e": 77, "663603e": 77, "663604e": 77, "663605e": 77, "663607e": 77, "663608e": 77, "663609e": 77, "663610e": 77, "663612e": 77, "663613e": 77, "663615e": 77, "663616e": 77, "663618e": 77, "663619e": 77, "663621e": 77, "663623e": 77, "663625e": 77, "663627e": 77, "663628e": 77, "663630e": 77, "663632e": 77, "663634e": 77, "663637e": 77, "663639e": 77, "663641e": 77, "663643e": 77, "663645e": 77, "663648e": 77, "663651e": 77, "663653e": 77, "663657e": 77, "663660e": 77, "663663e": 77, "663666e": 77, "663670e": 77, "663673e": 77, "663678e": 77, "663682e": 77, "663687e": 77, "663692e": 77, "663697e": 77, "663702e": 77, "663707e": 77, "663713e": 77, "663720e": 77, "663727e": 77, "663737e": 77, "663751e": 77, "663767e": 77, "663785e": 77, "663814e": 77, "663852e": 77, "663912e": 77, "664077e": 77, "664378e": 77, "665211e": 77, "665639e": 77, "666": [20, 26, 28, 29, 44, 46, 72, 74, 77, 78], "667641e": 77, "668": 125, "669": 125, "669467e": 77, "669924e": 77, "67": [0, 57, 77, 110, 124, 125], "670": [44, 125], "670555e": 77, "67237379e": 70, "672410e": 77, "672789e": 33, "673": [115, 124, 127], "673221e": 77, "673523e": 77, "67435169e": 70, "675": [2, 12, 126], "6758": 67, "676": 125, "67609658732353": 8, "677": [4, 48, 52, 125], "677113e": 43, "677151e": 77, "6787": 67, "679": [57, 60, 126], "6790": 67, "6796": 67, "67965100682904": 3, "68": [50, 77, 110, 124], "680": [44, 125], "680885e": 77, "681": 125, "681058e": 77, "681200e": 26, "681217e": 77, "682787e": 43, "683": [51, 53, 126], "683119e": 77, "683978e": 43, "684324e": 46, "685294e": 77, "687": 125, "689": 125, "689135e": 77, "689557e": 77, "689583e": 26, "69": [23, 37, 77, 108, 115, 124], "690": [44, 125], "691": 125, "6912": 67, "691644e": 77, "69191648": 70, "692": 125, "692289e": 77, "693": 125, "693084e": 77, "694245e": 77, "694297e": 77, "695056e": 33, "695521e": 77, "696": 125, "6964": 67, "696522621311644": 8, "698532e": 77, "698774e": 77, "699820e": 77, "6f": 19, "7": [0, 14, 16, 17, 22, 23, 26, 27, 29, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 59, 62, 65, 67, 68, 69, 70, 72, 74, 75, 76, 77, 79, 89, 91, 92, 94, 95, 102, 103, 110, 111, 112, 114, 117, 119, 120, 121, 122, 124, 127], "70": [0, 3, 7, 8, 11, 42, 43, 44, 49, 50, 51, 73, 77, 110, 112, 124], "700": [44, 67, 125], "700201e": 32, "701": 125, "7012331965002": 8, "701438e": 77, "701762e": 77, "701770668580316": 3, "702": 125, "702796e": 44, "704": 125, "704097e": 77, "704189e": 77, "704365e": 77, "705361e": 44, "7070": 5, "707527e": 77, "708771e": 77, "709": 125, "709292e": 26, "709310e": 77, "709643e": 44, "70993539e": 65, "71": [69, 77, 110, 124], "710": [44, 125], "710197e": 44, "711216e": 77, "713289e": 92, "714": 125, "714107e": 77, "715": 125, "715953e": 92, "715960e": 33, "716": 125, "716049e": 44, "716426e": 77, "718": 125, "72": [77, 110, 124, 125], "720": 44, "720212e": 44, "721217e": 77, "722": 125, "722040e": 77, "722091e": 44, "7232359468853795": 4, "724086e": 44, "724554e": 44, "724600e": 77, "725224e": 33, "725769e": 77, "725951e": 77, "726": 125, "726166721298926": 48, "726958e": 44, "727032e": 26, "727141e": 77, "728955e": 77, "729": [72, 80, 126], "73": [0, 72, 77, 90, 121, 124], "730": [44, 115, 124, 127], "730250e": 77, "7304": 67, "731": 125, "732": [30, 35, 125, 126], "732018e": 77, "73278562e": 65, "733572e": 77, "734": 125, "734384e": 26, "734412e": 43, "735399e": 77, "735871196038296": 8, "736": 125, "73647620e": 65, "737": 125, "737134e": 77, "737346e": 77, "738": 125, "739": [67, 83, 86, 125, 126], "74": [67, 77, 107, 124], "740": 44, "7400": 45, "740051e": 73, "74029183e": 65, "740559e": 44, "741": [67, 125], "741118e": 77, "742": 125, "743": 125, "743277e": 77, "744": [19, 101, 112, 124, 125], "745": [112, 125], "746": 125, "746137e": 77, "747071e": 77, "747973e": 44, "75": [11, 50, 77, 107, 110, 124, 125, 126], "750": 44, "750100e": 32, "751148e": 77, "7515193321185": 8, "752": 112, "753162e": 26, "753548e": 77, "753747e": 26, "754": 125, "75436312339336": 8, "754377e": 26, "754405e": 44, "755303e": 33, "755305e": 33, "755324e": 33, "755345e": 33, "755369e": 33, "755395e": 33, "755426e": 33, "755460e": 33, "755500e": 33, "755547e": 33, "755571e": 44, "755604e": 33, "755673e": 33, "755759e": 33, "755868e": 33, "756015e": 33, "756218e": 33, "756521e": 33, "756624e": 26, "757": [0, 110, 124, 125], "757026e": 33, "757601e": 26, "75788169087051": 3, "758014e": 33, "758374e": 26, "759": 125, "759123e": 77, "759833e": 26, "76": [0, 77, 101, 115, 124, 125], "760": [15, 24, 44, 125, 126], "76039982": 70, "760450e": 77, "760578e": 77, "760911e": 77, "761": 125, "761179e": 44, "7614207044578": 92, "761794e": 77, "761838e": 44, "762": [19, 101, 112, 124], "762434e": 26, "762450e": 77, "763": 125, "763061e": 26, "764": 67, "764565e": [44, 77], "765": 67, "765491e": 26, "76579142e": 70, "767482e": 26, "767810e": 77, "767925e": 77, "768310e": 77, "768700e": 26, "768734e": 26, "7698291830273734": 4, "77": [19, 23, 77, 108, 112, 124], "770": 44, "770049e": 77, "770321e": 44, "770820e": 77, "771489e": 26, "77176512": 70, "772225e": 44, "772608e": 26, "775370e": 77, "776532e": 77, "776627e": 73, "776827e": 33, "776880e": 33, "776945e": 33, "777027e": 33, "777135e": 33, "777284e": 33, "777495e": 33, "777841e": 33, "778259e": 26, "778490e": 33, "77891909e": 70, "779038e": 77, "77974690e": 70, "78": [0, 77, 112, 124], "780": 44, "780133e": 44, "780145e": 33, "78057873e": 70, "781": [9, 12, 126], "7830": 67, "7831": 67, "784264e": 44, "78465842": 52, "785186e": 44, "785968e": 26, "786": 67, "787": [0, 110, 124], "787466e": 77, "787738e": 77, "788548e": 77, "78912743553177": 3, "789776e": 44, "79": [0, 77, 118, 121, 124, 125], "790": 44, "790030e": 77, "79159074243252": 8, "792762e": 26, "793559e": 77, "794": 80, "794348e": 26, "795703e": 77, "796061e": 77, "797194e": 44, "797245e": 33, "7991859633835015e": 65, "79947889e": 65, "79959416e": 65, "7e": 17, "7e1": 78, "7ed321": 23, "8": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 21, 22, 26, 27, 28, 30, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 58, 62, 63, 65, 66, 67, 68, 69, 70, 73, 74, 75, 77, 79, 80, 84, 85, 89, 90, 91, 92, 93, 94, 102, 103, 110, 112, 113, 120, 121, 122, 124, 127], "80": [0, 3, 7, 8, 11, 15, 18, 19, 44, 48, 52, 73, 77, 101, 124, 125], "800": [10, 44, 67], "801524e": 77, "8016": 67, "801713792987716": 48, "80275113616942": 3, "804295e": 26, "805235e": 44, "806103347964239": 48, "807113e": 77, "808727e": 44, "808932e": 26, "81": [0, 77, 100, 124], "810": [44, 67], "810673e": 77, "81127971513494": 3, "811855e": 77, "813048e": 77, "813711e": 77, "816": [48, 53, 126], "81620688759422": 3, "81742118": 52, "81827650e": 70, "81919900711129": 3, "819396e": 44, "819859e": 77, "82": [0, 72, 77, 83, 112, 118, 124, 125], "820": 44, "820952e": 46, "82131280293244": 3, "821800e": 77, "821987e": 26, "8226926897284630e": 65, "822723e": 73, "82282129129657": 3, "823407e": 77, "823502e": 77, "823959203849064": 3, "824": [56, 60, 126], "8241": 67, "82423613": 70, "82483864631298": 3, "825524003745045": 3, "826": [47, 53, 126], "827855e": 77, "82794938e": 65, "828492e": 92, "829": [69, 71, 126], "82958224": 70, "83": [0, 77, 83, 118, 124], "830": 44, "830771e": 77, "831410e": 44, "831589e": 77, "832892e": 77, "8329": 67, "83297687600043": 67, "833572391120526": 8, "833813e": 77, "835": 9, "836245e": 77, "839356e": 77, "84": [0, 4, 77, 83, 118, 124, 125], "840": 44, "840590e": 44, "841819e": 44, "842": [32, 35, 126], "842001e": 33, "84251959": 52, "842636e": 77, "842721e": 77, "84334084": 52, "843436e": 77, "843492e": 77, "844073e": 44, "84579013e": 70, "84681561": 52, "846976e": 44, "847222222222214": 38, "84802459": 70, "849": 103, "849064e": 77, "849492e": 26, "85": [29, 77, 125], "850": 44, "850574e": 44, "851305e": 77, "851507e": 77, "85201684e": 70, "852583e": 44, "852991e": 77, "85312522": 52, "85368833": 52, "854116e": 77, "854134e": 44, "854694e": 77, "85500870e": 70, "85500876e": 70, "855388e": 44, "855431e": 77, "85734724064163": 8, "857493e": 73, "858": 103, "858590e": 44, "858901e": 44, "859006e": 44, "86": [77, 125], "860": 44, "860061e": 43, "860154e": 73, "861463e": 73, "86193441": 52, "862195e": 77, "862280e": 26, "8625": 67, "863339e": 77, "86400199": 52, "866445e": 44, "8668": 67, "86719084": 52, "867807e": 77, "868347e": 77, "868519e": 77, "8687": 67, "869261766871475": 3, "8698": 67, "87": [77, 115, 125], "870": 44, "870728e": 44, "87178503e": 70, "87178504e": 70, "872081e": 77, "87401169938976": 8, "874332e": 26, "875326e": 43, "875691e": 33, "876119e": 26, "876462e": 46, "879008e": 77, "8797226679525343": 48, "88": [30, 72, 77, 125], "880": 44, "880145e": 44, "880265e": 77, "881179e": 77, "882": 60, "882375e": 77, "8828491877294617": 92, "884": [6, 12, 126], "88798203": 70, "88888889e": 117, "89": [72, 77, 103, 125], "890": 44, "890456785604675": 8, "890667e": 44, "890771e": 77, "891614e": 44, "893582e": 33, "89418541": 70, "894485e": 26, "896260e": 77, "89765631e": 70, "897697e": 77, "898122e": 33, "8th": 99, "9": [0, 2, 4, 7, 11, 15, 20, 21, 22, 26, 27, 28, 29, 31, 32, 33, 34, 35, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 62, 63, 64, 65, 67, 68, 69, 70, 71, 73, 77, 79, 90, 101, 103, 117, 119, 121, 124, 127], "90": [3, 8, 11, 22, 44, 72, 73, 76, 77, 125], "900": [39, 44, 67], "90013973873414": 3, "90019294": 9, "9009847640991211": 11, "9013fe": 23, "902": [26, 28, 30, 78], "902662e": 77, "903": [29, 35, 126], "904": [107, 112, 124, 127], "906": [5, 12, 126], "906371e": 44, "909627e": 44, "91": [72, 77, 125], "910": 44, "911": [59, 60, 126], "911509e": 77, "91165603": 70, "912468e": 44, "912579e": 44, "913": [45, 53, 126], "915955e": 77, "916369e": 77, "916691e": 44, "918731e": 44, "92": [72, 77, 125], "920": 44, "920917e": 77, "922568e": 77, "922750e": 77, "924": [107, 112, 124, 127], "924361e": 77, "924851e": 44, "926406e": 77, "9269": 67, "92704550e": 65, "927442e": 77, "92852235e": 65, "929009e": 77, "93": [77, 125], "930": 44, "930189e": 77, "930890e": 77, "930938e": 44, "931950e": 77, "932317369414754": 3, "9335652": 70, "935449e": 77, "9355": 67, "936": [23, 37, 108, 124], "936118e": 44, "936334e": 77, "936346e": 44, "936418e": 44, "936787e": 77, "936859e": 77, "936992e": 44, "937777e": 77, "937884e": 77, "9386": 127, "94": 77, "940": 44, "941497e": 77, "9417": 67, "941833e": 77, "942": [84, 86, 126], "94220449340273": 3, "942296e": 77, "942604e": 44, "942771e": 33, "9430": 67, "943013e": 44, "944014e": 77, "94410083e": 65, "944208e": 33, "94444444e": 117, "946": [92, 95, 126], "948338e": 77, "948458e": 77, "948732e": 77, "948923e": 33, "949001e": 44, "949356e": 77, "949549e": 77, "949922e": 77, "95": [0, 41, 42, 44, 47, 51, 77, 83, 84, 85, 101, 125], "950": 44, "950364300815394": 3, "951247e": 77, "952959e": 77, "9534d93517": 78, "953795308746166": 3, "95469897e": 70, "954955e": 44, "95599677401932": 3, "957237e": 77, "95751817e": 70, "957543840951914": 3, "95855874663437": 3, "959": [90, 95, 126], "959284820103846": 3, "959815373763206": 3, "96": 77, "960": 44, "960175e": 44, "960213442186": 3, "960875e": 44, "961099e": 77, "9619": 67, "96395660e": 70, "96395661e": 70, "965": [17, 24, 126], "966762e": 44, "967414e": 77, "967647041787599": 48, "968279e": 77, "969683e": 77, "97": 77, "970": [23, 37, 44, 108, 124], "971315e": 77, "971430e": 33, "972222222222223": 72, "972309e": 44, "972615e": 44, "974": 89, "974174e": 44, "974381e": 77, "976": [27, 35, 126], "9762891544683304e": 65, "976633e": 77, "977516e": 77, "977559e": 77, "978434e": 44, "98": [77, 110, 115], "980": 44, "9800": 45, "980603e": 77, "980812e": 44, "981055e": 44, "981309e": 77, "982881e": 32, "98336127e": 65, "983702e": 77, "984020e": 44, "984218e": 44, "984492e": 77, "985796e": 77, "9858": 67, "986679e": 77, "987255e": 77, "989585e": 77, "989968e": 44, "99": [0, 4, 77, 103, 114, 124, 125, 127], "990": 44, "990989e": 26, "992512e": 77, "992842e": 77, "992882e": 44, "993772e": 77, "994645e": 77, "995": 112, "995684e": 44, "996929e": 77, "997": 67, "998215e": 77, "999120e": 44, "99938889e": 117, "9995": 67, "99958333e": 117, "99977301e": 101, "999774737592773": 67, "99980556e": 117, "9999": 52, "A": [0, 5, 6, 14, 15, 16, 17, 19, 22, 23, 31, 32, 33, 34, 37, 41, 44, 63, 65, 67, 70, 72, 73, 77, 78, 83, 89, 97, 101, 103, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 127], "AND": 5, "And": [0, 106, 107, 125], "As": [5, 83, 99, 112, 125, 127], "At": [97, 127], "Be": [72, 99], "Being": 96, "But": [0, 78, 106, 110, 112, 123, 125, 127], "By": [0, 100, 101, 105, 110, 117, 121, 127], "For": [0, 5, 34, 44, 46, 48, 52, 70, 72, 78, 92, 97, 100, 101, 102, 110, 112, 113, 114, 117, 120, 121, 122, 125, 127], "If": [0, 5, 72, 78, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 121, 122, 123, 124, 125, 127], "In": [0, 4, 6, 9, 10, 11, 44, 46, 48, 50, 52, 57, 58, 62, 64, 68, 69, 72, 78, 90, 96, 97, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 116, 118, 119, 121, 124, 125, 127], "It": [0, 4, 15, 26, 28, 29, 32, 33, 34, 43, 44, 46, 59, 73, 77, 78, 92, 97, 98, 110, 112, 114, 120, 124, 125, 127], "Near": [0, 101, 124, 127], "No": [0, 4, 48, 52, 67, 79, 112, 124, 127], "Not": [0, 99, 100], "On": [0, 50, 72, 103, 107, 112, 122, 124, 125, 127], "One": [0, 5, 113, 115, 121, 124, 125, 127], "Or": 72, "Such": 110, "The": [0, 4, 5, 10, 16, 19, 23, 34, 41, 46, 47, 48, 49, 52, 57, 64, 66, 67, 69, 72, 74, 78, 79, 82, 83, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127], "Then": [46, 48, 49, 50, 52, 82, 110, 112, 118, 127], "There": [101, 112, 127], "These": [42, 50, 51, 97, 114, 125], "To": [0, 5, 11, 99, 101, 110, 115, 118, 122, 124, 127], "With": [107, 124], "_": [0, 19, 23, 32, 38, 48, 50, 52, 62, 64, 90, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 127], "_0": [101, 110, 122], "_1": [0, 63, 100, 101, 103, 110, 111, 112, 114, 115, 127], "_2": [0, 19, 64, 100, 101, 103, 107, 110, 111, 112, 113, 117, 118, 122], "__": 122, "__file__": [16, 17, 27, 31, 33, 47], "__init__": [8, 11, 45, 103, 122, 125], "__name__": 99, "__type__": 99, "__version__": 97, "_a": [101, 117], "_b": [100, 101], "_barycenter_solv": 67, "_c": [0, 103], "_convolut": 125, "_d": 110, "_empir": 78, "_f": [94, 101, 127], "_gw": 125, "_h": 117, "_i": [0, 63, 101, 105, 110, 112, 117, 119, 120, 121, 122, 123], "_in": [0, 118], "_init": 22, "_iter": 110, "_j": [0, 105, 119, 120, 123], "_k": [0, 100, 109], "_m": 110, "_md": [4, 48, 52], "_n": [63, 101], "_p": [0, 118, 127], "_partial": 125, "_q": 127, "_refer": [110, 112], "_sinkhorn": [20, 26, 28, 29, 30, 44, 46, 72, 74, 77, 78, 89], "_t": [0, 107], "_type_": 0, "_unbalanc": 69, "_update_plot": [6, 7, 11, 22, 93], "a0": 4, "a0_est": 4, "a0_est2": 4, "a1": [0, 4, 14, 15, 17, 20, 57, 67, 89, 110], "a1111": [0, 14, 15, 101, 115, 121, 124, 127], "a1138": [0, 14, 15, 101, 115, 121, 124, 127], "a1_torch": 4, "a2": [0, 4, 14, 15, 17, 20, 57, 67, 89, 110], "a2_torch": 4, "a3": 20, "a4": 20, "a_": 112, "a_1": 112, "a_2": 112, "a_bar": 19, "a_d": 112, "a_extend": 114, "a_i": [37, 43, 100, 101, 110, 112, 116, 127], "a_j": 112, "a_label": [37, 116], "a_list": [22, 112], "a_max": [50, 99], "a_min": [50, 99], "a_t": 112, "a_to_b": 122, "a_torch": 10, "a_x": 37, "aaai": [69, 110, 124], "aalto": 84, "aarch64": 125, "ab": [11, 43, 46, 76, 99, 115, 119, 122, 127], "abi": 125, "abil": 127, "abl": [69, 121, 124], "abort": 97, "about": [97, 101, 122, 125, 127], "abov": [78, 97, 110, 112, 116, 117, 125, 127], "absc": 90, "absolut": [0, 26, 43, 44, 46, 77, 99, 102, 108, 110, 114, 123], "absorpt": 121, "abstract": 99, "abus": 96, "ac": 18, "acc": 45, "acceler": [59, 78], "accept": [0, 72, 96, 97, 99, 101, 103, 112, 113, 122, 125], "access": [11, 72, 124, 127], "accord": [37, 110, 122], "account": [0, 82, 96, 97, 101, 110, 113, 125], "accur": [4, 108], "accuraci": [45, 101], "achiev": [50, 99], "acknoledg": 125, "acknowledg": 125, "acm": [0, 69, 101, 112, 124, 127], "across": [0, 42, 44, 49, 50, 110, 120, 125], "act": 96, "action": [96, 125], "activ": [42, 44, 49, 51, 99, 101, 117], "active_index": 117, "actual": [4, 127], "ad": [2, 3, 4, 6, 8, 9, 11, 17, 20, 21, 22, 26, 27, 28, 29, 30, 32, 33, 34, 41, 42, 44, 45, 46, 48, 49, 50, 52, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 78, 84, 85, 90, 92, 93, 94, 97, 99, 103, 107, 114, 115, 117, 122, 125, 127], "adam": [3, 8, 19, 38, 45, 110, 112], "adapt": [0, 34, 35, 64, 77, 96, 101, 103, 104, 110, 112, 114, 116, 122, 124, 125, 126], "add": [0, 44, 48, 49, 50, 52, 78, 92, 97, 99, 110, 114, 115, 118, 122, 125], "add_artist": [21, 23, 38, 62, 69], "add_collection3d": [14, 89], "add_edg": [41, 42, 44, 49, 50, 51], "add_nod": [41, 42, 44, 49, 50, 51], "add_nodes_from": [41, 49], "add_patch": 63, "add_subplot": [7, 14, 22, 46, 50, 57, 89, 92], "addit": [0, 50, 97, 102, 110, 117, 118, 124, 127], "address": [96, 97, 125, 127], "adequ": 41, "adequatli": 125, "adjac": [4, 41, 49, 50, 109, 110], "adjacency_matrix": [41, 49], "adjust": [42, 44], "admiss": [110, 114], "adrien": [64, 84, 98, 103, 113, 124], "advanc": [0, 45, 62, 69, 70, 83, 96, 100, 101, 102, 103, 107, 110, 118, 119, 120, 121, 124, 127], "advantag": 114, "adversari": [11, 127], "ae": 31, "affin": [0, 100, 127], "aforement": [48, 52], "after": [45, 65, 67, 108, 124], "ag": 96, "against": [0, 112, 118], "agnost": 99, "agueh": [107, 112, 124, 127], "agw": 31, "ai": [116, 125], "aim": [0, 7, 11, 94, 101, 103, 122, 125, 127], "aistat": [0, 73, 101, 103, 119, 124, 127], "akad": 112, "al": [0, 6, 19, 84, 93, 101, 112, 118, 124, 127], "alain": [98, 124], "alaya": [0, 49, 92, 98, 101, 110, 114, 115, 124, 127], "aldroubi": [0, 83, 118, 124], "alessandro": 101, "alexand": 124, "alexandr": [64, 98, 103, 113, 124], "alg": 120, "algo": [19, 46, 72, 101], "algorithm": [0, 2, 5, 19, 20, 44, 46, 47, 50, 52, 59, 67, 89, 90, 97, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 119, 120, 121, 123, 124, 125], "align": [0, 54, 71, 96, 100, 102, 103, 107, 110, 112, 124, 126, 127], "all": [0, 2, 5, 14, 15, 17, 34, 38, 41, 44, 47, 48, 49, 54, 68, 69, 72, 89, 91, 96, 97, 99, 100, 101, 103, 106, 107, 110, 112, 115, 117, 118, 121, 122, 123, 124, 125, 126, 127], "all_accuraci": 45, "all_bar": 17, "all_loss": 45, "all_xr": 29, "all_yr": 29, "allclos": [0, 5, 99, 118], "alldistribt": 101, "alloc": [99, 125, 127], "allow": [4, 9, 46, 47, 62, 64, 69, 78, 92, 97, 99, 102, 110, 115, 125, 127], "along": [0, 4, 9, 10, 99, 101, 102, 103, 105, 106, 110, 111, 112, 113, 114, 115, 117, 119, 121, 122, 123], "alpha": [0, 3, 4, 6, 7, 8, 9, 11, 14, 15, 17, 18, 19, 21, 22, 23, 26, 28, 29, 30, 32, 34, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 56, 63, 64, 68, 70, 72, 76, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 93, 94, 100, 101, 102, 103, 109, 110, 111, 114, 116, 119, 120, 125], "alpha0": 114, "alpha_": [102, 110], "alpha_1": 102, "alpha_2": 102, "alpha_edg": [42, 44, 49, 50, 51], "alpha_f": [102, 110], "alpha_i": [0, 112, 118], "alpha_k": [0, 112], "alpha_list": 14, "alpha_max": [110, 114], "alpha_min": [110, 114], "alreadi": [30, 122, 125, 127], "also": [0, 4, 5, 50, 52, 69, 72, 78, 97, 99, 101, 107, 109, 110, 112, 113, 122, 124, 125, 127], "altern": [44, 72, 97, 110, 113, 124, 125, 127], "although": [72, 112], "altschul": [0, 101, 107, 124, 127], "alwai": [0, 72, 97, 100, 103, 110, 125, 127], "amari": [0, 101, 124, 127], "amax": 99, "ambient": [64, 103, 122], "ambigu": [0, 118], "amin": 99, "among": [110, 125], "amount": [64, 78, 110, 112, 114, 115, 125, 127], "amper": [115, 124, 127], "an": [0, 4, 5, 10, 11, 19, 27, 31, 33, 41, 47, 49, 50, 52, 64, 67, 72, 73, 78, 96, 97, 99, 101, 103, 106, 110, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125], "analog": 52, "analysi": [0, 19, 52, 54, 71, 77, 97, 101, 103, 105, 107, 112, 114, 123, 124, 125, 126], "anastasio": 122, "anchor": [59, 101, 111], "andrei": [0, 112, 124], "android": 125, "angl": [11, 21, 23, 31, 38, 82], "anglet": 31, "ani": [6, 7, 11, 22, 64, 67, 93, 96, 97, 99, 102, 103, 110, 112, 113, 114, 115, 117, 122, 124, 125, 127], "annal": [115, 124, 127], "annals2010": 127, "anoth": [78, 97, 103, 107, 127], "antipod": 82, "antoin": [63, 98, 119, 124], "antoni": 124, "anymor": 110, "anywai": 112, "api": [78, 97, 99, 109, 124, 125, 127], "appar": 119, "appear": [96, 101, 115], "append": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 19, 23, 38, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 58, 59, 67, 69, 79, 89, 92, 122], "appli": [0, 5, 32, 50, 96, 100, 102, 103, 107, 108, 110, 112, 118, 121, 122, 124], "applic": [0, 19, 34, 41, 42, 43, 44, 46, 49, 51, 52, 69, 77, 92, 101, 103, 107, 110, 112, 114, 115, 123, 124], "appoint": 96, "appreci": 97, "approach": [0, 5, 15, 19, 26, 28, 30, 34, 67, 83, 101, 103, 110, 112, 124, 127], "appropri": [96, 97, 122], "approv": [97, 125], "approx": [0, 64, 103, 113, 118], "approxim": [0, 11, 15, 32, 50, 54, 60, 64, 78, 101, 102, 110, 111, 112, 113, 114, 118, 124, 125, 126, 127], "apr": 125, "april": [0, 101, 106, 124, 127], "aqua": 37, "ar": [0, 5, 10, 16, 18, 19, 21, 23, 28, 34, 41, 42, 44, 47, 48, 49, 50, 51, 52, 64, 66, 67, 69, 70, 72, 73, 74, 78, 79, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "aram": [103, 124], "arang": [6, 10, 14, 15, 17, 18, 22, 43, 49, 52, 58, 62, 63, 65, 67, 69, 73, 75, 76, 77, 79, 83, 88, 89, 99, 101, 122], "araya": [0, 121, 124, 127], "arbitrari": [0, 62, 100, 110], "arbitrarili": [0, 110], "arch": 125, "archiv": 124, "arctan2": [21, 23, 38, 99], "arctang": 99, "area": [97, 127], "arg": [0, 99, 100, 101, 102, 103, 105, 106, 110, 112, 114, 115, 119, 120, 121, 122, 123, 127], "argmax": [4, 42, 44, 45, 48, 51, 62, 69, 99, 113], "argmin": [19, 41, 42, 44, 51, 64, 99, 103, 107, 112, 113], "argsort": [21, 23, 38, 99], "argument": [30, 49, 67, 78, 99, 103, 113, 114, 122, 125], "argwher": 50, "aris": 117, "arithmet": 99, "arjovski": 11, "arjovsky2017": 11, "arm": 125, "armijo": [0, 110, 114, 125], "arnaud": [101, 112], "around": [78, 125], "arr": [99, 122], "arrai": [0, 4, 5, 9, 10, 14, 15, 16, 17, 19, 20, 21, 22, 23, 29, 31, 37, 41, 46, 47, 48, 49, 52, 59, 63, 66, 68, 72, 74, 83, 84, 89, 90, 92, 93, 94, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "array_equ": 99, "array_lik": [103, 113, 122], "articl": 124, "artifici": [0, 11, 64, 69, 73, 90, 101, 103, 106, 110, 113, 119, 121, 124, 127], "artist": 67, "arxiv": [0, 19, 22, 23, 75, 77, 83, 89, 101, 103, 105, 108, 112, 114, 118, 119, 121, 122, 124, 127], "asanyarrai": 65, "asarrai": 17, "ascii": 125, "asgd": [70, 120], "asgd_pi": 70, "ask": [97, 124, 125], "aspect": [50, 57, 63, 127], "aspremont": [64, 103, 113, 124], "assel": [110, 124], "assert": 5, "assert_same_dtype_devic": 99, "assign": [0, 42, 44, 48, 50, 51, 52, 101, 102, 109, 110, 118], "assist": [97, 101, 124], "associ": [0, 50, 69, 103, 110, 112, 115, 118, 122], "assum": [0, 78, 100, 107, 110, 125], "assume_inner_converg": [0, 100], "astyp": [4, 6, 18, 20, 22, 27, 31, 33, 44, 46, 47, 48, 49, 50, 52, 64], "asymmetr": [0, 100, 110, 125], "asymptot": 11, "atan2": [0, 99, 112, 122], "aten": 10, "atleast_2d": 72, "atol": [0, 5, 37, 99, 108, 118], "atom": [0, 101, 110, 112, 118], "attack": 96, "attain": [82, 115], "attent": 96, "attr_nam": 41, "attribut": [44, 78, 99, 103, 110, 122, 125], "aud": [11, 101, 124], "augment": [50, 110, 117], "august": 125, "aujol": [27, 33, 77, 103, 114, 124, 127], "aur": 124, "aureli": 72, "aur\u00e9li": 124, "author": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 124], "auto": [0, 43, 50, 57, 63, 72, 101, 112, 122, 125], "auto_exampl": [12, 24, 35, 39, 53, 60, 71, 80, 86, 95], "autodiff": [0, 2, 100, 101, 124, 125], "autograd": [0, 7, 9, 105, 124, 125, 127], "automat": [0, 9, 10, 69, 72, 97, 112, 122, 125, 127], "auxiliari": [50, 110, 117], "avail": [0, 34, 78, 96, 97, 99, 110, 124, 125, 127], "ave_v": 120, "averag": [0, 44, 46, 99, 100, 103, 105, 107, 110, 115, 118, 124, 127], "averaged_sgd_entropic_transport": 120, "averaged_stochastic_gradient_desc": 107, "avg": 5, "avg_valu": 5, "avg_value_batch_gw": 5, "avg_value_naive_gw": 5, "avoid": [0, 49, 78, 97, 99, 100, 101, 103, 105, 110, 112, 115, 118, 125, 127], "awai": 72, "ax": [5, 6, 7, 14, 16, 17, 19, 20, 22, 23, 37, 49, 57, 58, 59, 63, 69, 72, 73, 77, 79, 83, 85, 88, 89, 91, 99, 114, 116, 127], "ax1": [14, 43, 46, 47, 50, 62, 69, 92, 116], "ax10": 47, "ax11": 47, "ax12": 47, "ax2": [14, 43, 46, 47, 50, 57, 62, 69, 92, 116], "ax3": [43, 47, 50, 92, 116], "ax4": [47, 50], "ax5": [47, 50], "ax6": [47, 50], "ax7": 47, "ax8": 47, "ax9": 47, "ax_": 37, "ax_bound": 8, "ax_m": 37, "ax_row": 17, "ax_t": 37, "axel": [0, 112, 124], "axes3d": [14, 15, 46, 89, 92], "axi": [0, 2, 4, 5, 6, 7, 8, 16, 17, 19, 20, 21, 22, 23, 27, 29, 31, 33, 38, 42, 44, 45, 48, 49, 50, 51, 52, 57, 58, 63, 64, 68, 75, 77, 79, 82, 84, 85, 90, 91, 92, 94, 99, 105, 116, 118, 119, 122], "azim": 22, "b": [0, 2, 9, 10, 15, 18, 19, 23, 29, 31, 34, 37, 43, 46, 47, 50, 56, 58, 59, 64, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 88, 89, 90, 92, 93, 94, 97, 99, 100, 101, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "b1": [0, 57, 110], "b2": [0, 57, 110], "b_": 120, "b_extend": 114, "b_i": [100, 121], "b_j": [43, 101, 110, 127], "b_k": [112, 127], "b_l": 112, "b_l2": [14, 89], "b_label": [37, 116], "b_list": 19, "b_to_a": 122, "b_torch": 10, "b_u": 120, "b_v": 120, "b_wass": [14, 89], "b_x": 37, "b_y": [37, 116], "ba": 124, "bach": [0, 70, 101, 120, 124, 127], "back": [27, 31, 33, 97, 103, 113], "backend": [0, 2, 4, 6, 8, 9, 10, 12, 30, 44, 46, 69, 72, 98, 100, 101, 103, 106, 107, 110, 111, 112, 113, 114, 118, 120, 121, 122, 123, 124, 125, 126], "background": 125, "backpropag": 125, "backslash": 117, "backward": [0, 2, 3, 4, 6, 8, 9, 10, 11, 19, 38, 45, 69], "bad": 125, "bai": [0, 83, 112, 118, 124], "bakery_po": 72, "bakery_prod": 72, "balanc": [0, 79, 121, 122, 127], "ban": 96, "bandwidth": [103, 113], "bapg": [44, 125], "bapg_fused_gromov_wasserstein": [44, 110], "bapg_fused_gromov_wasserstein2": 110, "bapg_gromov_wasserstein": 110, "bapg_gromov_wasserstein2": 110, "bar": [17, 117], "bar_debias": 17, "bari": [32, 37, 41, 52, 67, 108, 112], "bars_debias": 17, "bars_sinkhorn": 17, "bary_l2": [14, 15, 89], "bary_log": 67, "bary_torch": 10, "bary_wass": [14, 15, 89], "bary_wass2": 15, "barycent": [0, 12, 24, 53, 71, 84, 95, 98, 101, 103, 104, 107, 108, 110, 112, 118, 121, 122, 124, 125, 126], "barycenter_debias": [17, 101], "barycenter_sinkhorn": 101, "barycenter_stabil": 101, "barycenter_unbalanc": [0, 89, 121, 127], "barycenter_unbalanced_sinkhorn": 121, "barycenter_unbalanced_sinkhorn_unbalanc": 127, "barycenter_unbalanced_stabil": [121, 127], "barycentr": [0, 19, 23, 32, 37, 64, 101, 103, 107, 108, 112, 113, 121, 124, 127], "barycentric_proj_method": 108, "barzilai": [109, 124], "base": [0, 42, 44, 46, 50, 51, 53, 54, 72, 97, 98, 101, 103, 107, 109, 110, 119, 122, 124, 125, 126, 127], "basetransport": [113, 125, 127], "basi": 21, "batch": [0, 5, 10, 11, 19, 45, 99, 101, 103, 107, 109, 110, 112, 120, 122, 125], "batch_alpha": 120, "batch_beta": 120, "batch_grad_du": 120, "batch_siz": [0, 45, 48, 70, 103, 107, 110, 120, 122], "batchsiz": 101, "bbox_inch": 68, "bcd": [52, 102, 103, 105, 110, 113], "beauti": 125, "becam": 127, "becaus": [3, 8, 30, 125, 127], "becker": 122, "becom": [83, 100, 101], "been": [0, 11, 98, 110, 112, 115, 121, 122, 124, 125, 127], "befor": [0, 50, 97, 99, 103, 112, 125], "begin": [0, 41, 100, 103, 112, 113, 117], "behavior": [9, 96, 97, 125], "behaviour": [0, 110, 112], "behind": 23, "being": [0, 67, 72, 97, 103, 112, 125, 127], "belgium": [64, 103, 113, 124], "belong": [9, 46, 92, 113, 117], "below": [73, 78, 100, 122, 124, 125], "benam": [0, 14, 15, 101, 115, 121, 124, 127], "benchmark": [97, 99, 125], "benchmark_batch": 5, "benchmark_batch_gw": 5, "benchmark_na": 5, "benchmark_naive_gw": 5, "benefit": [97, 98, 124, 125], "berg": [0, 85, 112, 118, 124], "best": [19, 96, 97, 110, 127], "beta": [0, 70, 78, 83, 101, 110, 118, 119, 120, 125], "beta_idx": 83, "beta_j": 119, "better": [0, 5, 11, 49, 78, 90, 101, 119, 125, 127], "between": [0, 2, 4, 6, 9, 19, 20, 22, 23, 27, 39, 41, 42, 44, 47, 48, 49, 51, 52, 54, 56, 60, 62, 66, 67, 68, 69, 72, 80, 83, 91, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 116, 118, 121, 122, 123, 124, 125, 126], "betwen": 125, "bewar": 120, "beyond": 125, "bfg": [101, 119, 121, 125, 127], "bgw": 31, "bhushan": [70, 103, 120, 124, 127], "bia": [29, 32, 33, 103, 107, 113], "bibtex": [122, 124], "bicentenni": [0, 112, 124], "big": [0, 107, 110, 112, 125], "bilinear": [16, 21, 72], "bin": [0, 10, 14, 15, 17, 67, 73, 76, 77, 79, 88, 89, 104, 112, 122, 127], "binari": [0, 48, 52, 104, 112], "binary_search_circl": [0, 112, 125], "bit": 99, "bitsiz": 99, "bitsize32": 99, "bitsize64": 99, "black": [14, 19, 42, 44, 48, 49, 50, 51, 52, 62, 64, 69, 83, 116], "blanchet": [44, 110, 124], "blit": 22, "blob": [59, 122], "blob_point": 59, "block": [0, 4, 34, 45, 50, 97, 101, 102, 105, 110, 113, 124, 127], "block_sizes1": 45, "block_sizes2": 45, "blondel": [0, 70, 73, 98, 103, 119, 120, 124, 125, 127], "blue": [10, 16, 19, 27, 33, 43, 45, 46, 57, 62, 63, 64, 69, 72, 83], "bmatrix": 117, "bname": 79, "bodi": 96, "boisbunon": [72, 124], "bold": 72, "bonet": [0, 7, 82, 83, 85, 90, 98, 112, 118, 124], "bonneel": [0, 6, 84, 98, 112, 118, 124, 127], "bonu": 97, "book": 127, "bool": [0, 72, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "boolean": [0, 99, 101, 103, 107, 110, 112, 122], "both": [0, 4, 10, 19, 32, 49, 50, 57, 72, 83, 93, 96, 100, 101, 102, 110, 111, 112, 113, 114, 117, 121, 125, 127], "bottleneck": 101, "bottom": [17, 57, 72, 79, 116], "bottou": 11, "bound": [0, 50, 64, 103, 110, 111, 112, 113, 116, 124, 125], "boundari": [115, 124, 127], "boxplot": 2, "bo\u00eft\u00e9": 98, "brain": [101, 110, 124], "branch": [97, 125], "brand": 125, "braycurti": [0, 72, 122], "break": 19, "bregman": [0, 14, 15, 16, 17, 18, 20, 26, 28, 29, 30, 44, 46, 72, 74, 77, 78, 100, 103, 105, 106, 110, 112, 114, 115, 121, 123, 124, 125], "bregman_log_projection_batch": [0, 100], "bregman_projection_batch": 100, "breloi": [63, 105, 124], "brenier": [54, 71, 103, 113, 124, 125, 126, 127], "bring": 125, "broad": 97, "broadcast": [112, 125], "brought": 127, "browser": 97, "budget": 101, "bug": [124, 125], "build": [0, 11, 41, 49, 97, 103, 110, 112, 124, 125, 127], "build_noisy_circular_graph": [41, 49], "build_ot": [50, 110], "built": [50, 125], "bure": [0, 23, 24, 54, 107, 108, 122, 124, 125, 126], "bures_barycenter_fixpoint": 107, "bures_barycenter_gradient_desc": [107, 125], "bures_dist": 107, "bures_wasserstein_barycent": 21, "bures_wasserstein_dist": [107, 125], "bures_wasserstein_map": [107, 127], "butscher": [101, 124, 127], "button": 97, "bw_dist": 0, "bw_valu": 78, "bx": 114, "b\u00e9cigneul": [109, 124], "b\u00e9rar": [101, 124, 127], "c": [0, 4, 10, 11, 19, 20, 21, 23, 26, 27, 28, 29, 30, 32, 33, 34, 38, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 56, 57, 63, 64, 65, 66, 67, 70, 72, 74, 75, 78, 82, 83, 85, 93, 94, 98, 99, 100, 101, 103, 106, 107, 108, 109, 110, 111, 112, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "c0": [4, 8, 19, 21, 38, 48, 49, 50, 52, 63, 91, 93, 94], "c0_est2": 4, "c1": [0, 4, 5, 19, 21, 38, 42, 43, 44, 46, 49, 50, 51, 57, 78, 91, 92, 93, 94, 100, 110, 114, 115, 127], "c1_": 127, "c1_aux": [50, 110], "c1_batch": 5, "c1_torch": 4, "c2": [0, 4, 5, 19, 21, 38, 42, 43, 44, 46, 49, 50, 51, 57, 78, 92, 93, 94, 100, 110, 115, 127], "c2_": 127, "c2_aux": [50, 110], "c2_batch": 5, "c2_torch": 4, "c3": [9, 19, 21, 42, 44, 51, 68], "c4": [19, 21], "c_": [37, 38, 48, 52, 72, 100, 101, 108, 110], "c_1": [0, 43, 49, 100, 110, 113, 114, 115], "c_2": [0, 42, 43, 49, 51, 100, 110, 113, 115], "c_3": [42, 51, 113], "c_bar": 23, "c_citi": 78, "c_k": [19, 112], "c_list": [23, 38], "c_t": [37, 38, 108], "c_transform_entrop": 120, "ca": 0, "cafe": 72, "cafe_po": 72, "cafe_prod": 72, "caffarelli": [115, 124, 127], "caf\u00e9": 72, "calcul": [20, 62, 99, 101, 102, 110], "call": [5, 16, 30, 50, 67, 70, 94, 100, 101, 103, 108, 110, 113, 114, 120, 122, 125, 127], "callabl": [0, 72, 103, 105, 110, 112, 114, 120, 121, 122, 125], "callback": 125, "camil": 98, "can": [0, 4, 5, 9, 50, 59, 64, 67, 69, 72, 78, 94, 97, 100, 101, 103, 105, 106, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127], "canberra": [0, 72, 122], "candid": 19, "cannot": [11, 34, 67, 103, 121, 124, 125, 127], "cardin": [101, 122], "care": [72, 99], "carin": [0, 44, 46, 100, 110, 124, 127], "carlier": [0, 14, 15, 101, 107, 112, 115, 121, 124, 127], "carlo": [0, 118], "case": [0, 5, 34, 49, 72, 93, 97, 99, 102, 108, 110, 112, 117, 118, 119, 121, 124, 125], "cassereau": [98, 124, 125], "cast": [0, 65, 110, 112, 127], "cat": 11, "cathol": [64, 103, 113, 124], "catom": 48, "caus": [0, 72, 122], "cb": [0, 21, 63, 107], "cbar": [59, 72], "cbook": 65, "cc": 127, "cd": [97, 107], "cdf": [0, 112], "cdf_u": [0, 112], "cdf_v": [0, 112], "cdict": 110, "cdict_best_st": 110, "cdict_fgw": 48, "cdict_gw": 48, "cdict_init": 110, "cdist": [0, 46, 47, 72, 92, 110, 115, 122], "cdot": [0, 63, 94, 101, 103, 105, 110, 111, 112, 113, 114, 115, 120, 121, 127], "cedric": [48, 52], "cedvincentcuaz": [42, 44, 46, 49, 50, 51], "celebr": 125, "cell": 72, "cembed": [48, 110], "center": [0, 5, 37, 59, 63, 72, 105, 107, 110, 112, 125], "center_du": [0, 112], "center_ot_du": [0, 112], "central": 125, "centroid": 110, "cerr": 125, "certain": [112, 125], "cevher": 122, "cg": [0, 44, 46, 77, 78, 101, 103, 106, 110, 112, 113, 119, 121, 123, 125, 127], "chambon": [26, 27, 28, 32, 33, 34, 98, 124], "chang": [0, 3, 4, 8, 32, 48, 52, 97, 99, 100, 101, 112, 118, 121, 124, 127], "channel": 124, "chap": [0, 112], "chapel": [0, 41, 43, 44, 46, 49, 83, 92, 93, 94, 98, 110, 114, 115, 117, 118, 121, 124, 127], "character": 109, "charlier": [101, 124], "chebyshev": [0, 72, 122], "check": [0, 97, 99, 101, 110, 112, 122, 125, 127], "check_margin": [0, 112], "check_number_thread": [112, 122], "check_param": 122, "check_random_st": 122, "check_zero": 110, "checkout": 97, "chen": [109, 124], "chewi": [107, 124], "china": [101, 124], "chintala": 11, "chizat": [0, 89, 101, 103, 115, 121, 124, 127], "choic": [49, 78, 125, 127], "choos": [0, 41, 82, 101, 105, 112, 127], "chosen": [99, 122, 127], "chowdhuri": [0, 50, 110, 124], "christoph": 122, "chu": [44, 110, 124], "ci": [98, 125], "circl": [0, 19, 49, 54, 65, 72, 78, 81, 86, 98, 112, 118, 122, 124, 126], "circleci": [4, 8, 9, 10, 20, 26, 28, 29, 30, 44, 46, 48, 49, 52, 58, 65, 67, 72, 74, 77, 78, 89, 125], "circular": [0, 41, 49, 112, 118, 124, 125], "circumst": 96, "citat": 122, "cite": 125, "citybloc": 78, "cityblock": [0, 72, 75, 78, 112, 122], "ck": 127, "cl": 124, "clamp": 4, "clarifi": 96, "class": [0, 4, 8, 11, 29, 34, 45, 59, 63, 64, 98, 101, 104, 105, 109, 113, 125], "class_": 63, "class_0": 45, "class_1": 45, "classic": [0, 67, 78, 90, 101, 113, 121, 125, 127], "classif": [44, 53, 54, 104, 110, 124, 125, 126], "classifi": [125, 127], "clean": [49, 69, 112, 125], "clean_graph": 49, "clean_measur": [19, 112], "clean_zero": [122, 125], "cleanup": 125, "clear": 4, "clearli": [69, 127], "clement": [7, 82, 85, 90], "clf": [3, 4, 6, 7, 8, 11, 15, 21, 29, 31, 32, 38, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 62, 64, 68, 69, 72, 75, 76, 89, 93], "click": 97, "clip": [27, 31, 33, 50, 99, 122], "clone": [2, 4, 6, 7, 10, 19, 97, 99], "close": [0, 41, 72, 101, 103, 107, 110, 112, 122, 127], "closest": [110, 122], "cloud": [20, 47, 69, 83, 110], "cluster": [50, 110, 124], "cluster_std": 63, "cl\u00e9ment": [7, 82, 85, 90, 98], "cm": [16, 38, 41, 49, 63], "cmap": [4, 8, 14, 16, 17, 26, 28, 29, 30, 34, 41, 43, 46, 48, 49, 52, 57, 58, 59, 63, 72, 74, 77, 79, 83, 89, 92, 94], "cmp": 38, "cnorm": [41, 49], "cnr": [19, 22, 23, 37, 38, 64, 83], "co": [7, 11, 19, 31, 50, 54, 57, 65, 71, 75, 82, 85, 102, 110, 122, 124, 125, 126], "co_optimal_transport": [62, 69], "co_optimal_transport2": [62, 69], "code": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 101, 104, 112, 119, 122, 125, 127], "code_of_conduct": 125, "codecov": 125, "codespel": 125, "coefffici": 110, "coeffici": [23, 28, 34, 48, 101, 102, 108, 110, 112, 114, 117], "coin": 127, "col": 99, "colla": [63, 105, 124], "collabor": 97, "collect": [6, 14, 15, 47, 65, 82, 89, 101], "collin": [101, 124], "color": [4, 5, 7, 8, 9, 10, 14, 17, 19, 20, 21, 23, 35, 37, 38, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 54, 57, 59, 62, 63, 64, 67, 68, 69, 72, 74, 78, 82, 83, 85, 91, 92, 93, 94, 103, 116, 122, 125, 126, 127], "color_featur": 49, "color_sourc": 116, "color_target": 116, "colorbar": [4, 48, 50, 59, 63, 72], "colormap": [4, 38, 48, 52, 63, 116], "column": [0, 9, 42, 44, 51, 54, 71, 73, 79, 101, 102, 110, 112, 117, 119, 121, 126], "com": [5, 17, 26, 27, 28, 32, 33, 34, 42, 44, 46, 47, 49, 50, 51, 70, 97, 99, 119, 122, 124, 125], "combin": [23, 48, 108, 114, 127], "combinatori": [0, 118], "come": [41, 97, 113, 125, 127], "command": 97, "comment": 96, "commit": [96, 97, 99, 125], "committ": 97, "common": [78, 97, 112, 125, 127], "commun": [42, 44, 48, 50, 51, 52, 96, 127], "compar": [0, 19, 23, 46, 49, 57, 58, 64, 72, 83, 90, 97, 103, 118, 124, 125, 127], "comparison": [53, 54, 57, 72, 77, 80, 83, 104, 116, 126, 127], "compat": [0, 72, 99, 101, 105, 106, 109, 110, 112, 113, 119, 120, 121, 122, 123, 125], "compil": [0, 78, 112, 124, 125, 127], "complaint": 96, "complement": 117, "complement_schur": 117, "complet": [69, 97, 125, 127], "complex": [0, 65, 110, 127], "complexwarn": 65, "compli": 97, "compliant": 125, "compon": [0, 23, 37, 54, 64, 71, 101, 103, 105, 108, 111, 122, 124, 125, 126, 127], "compos": 110, "compress": 99, "compromis": 97, "compt": 11, "comput": [0, 4, 7, 9, 10, 11, 15, 19, 23, 48, 52, 54, 57, 58, 64, 69, 73, 78, 82, 84, 85, 88, 91, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125], "computation": [64, 112], "compute_lr_sqeuclidean_matrix": [57, 111], "compute_next_remov": 117, "compute_transport_plan": 93, "con": [62, 69], "concaten": [8, 9, 20, 31, 50, 57, 59, 65, 68, 79, 82, 90, 92, 94, 99, 117, 122], "concentr": 97, "concern": 125, "concret": 127, "concurr": 112, "conda": [72, 125, 127], "condit": [0, 5, 43, 44, 46, 77, 78, 98, 99, 100, 103, 106, 110, 112, 113, 114, 123, 124, 125, 127], "conduct": [0, 52, 100, 110, 114], "confer": [0, 4, 6, 11, 17, 41, 42, 43, 44, 46, 48, 49, 51, 52, 57, 58, 64, 69, 70, 73, 83, 85, 90, 100, 101, 103, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 127], "confid": [84, 85], "confidenti": 96, "configur": 127, "cong": [0, 112], "conic": [110, 124], "conjug": [110, 119], "connect": [41, 42, 44, 48, 49, 51, 52], "connectionpatch": [62, 69], "consecut": 110, "consid": [0, 9, 10, 34, 41, 48, 50, 52, 57, 62, 64, 69, 96, 97, 101, 110, 111, 112, 115, 122, 127], "consist": [0, 47, 97, 99, 101, 112, 113, 121, 127], "const": 114, "constant": [0, 100, 103, 110, 111, 113, 121], "constc": [100, 110], "constitut": 117, "constrain": [73, 103, 119, 124, 125, 127], "constrained_layout": 59, "constraint": [0, 44, 46, 67, 78, 100, 101, 110, 111, 112, 113, 114, 119, 122, 125, 127], "construct": [16, 21, 47, 96, 99, 103, 117], "construct_augmented_h": 117, "consum": 78, "contact": 96, "contain": [0, 14, 15, 17, 50, 78, 89, 100, 101, 102, 106, 108, 110, 112, 113, 117, 118, 122, 123, 124, 125, 127], "contamin": 69, "context": 127, "continu": [12, 48, 54, 67, 101, 103, 112, 120, 125, 126, 127], "contrari": 82, "contribut": [0, 96, 101, 118, 125, 127], "contributor": [96, 124, 125], "control": [78, 101, 103, 110, 112], "conv": 45, "conveni": 78, "convent": [99, 103, 112], "converg": [0, 4, 19, 20, 26, 28, 29, 30, 44, 46, 47, 58, 72, 74, 77, 78, 90, 100, 101, 103, 107, 110, 111, 112, 114, 124, 125, 127], "convers": [0, 112, 122], "convert": [0, 9, 27, 31, 33, 47, 78, 99, 103, 112, 113, 121, 122, 125], "convex": [0, 48, 54, 71, 75, 103, 108, 112, 113, 114, 119, 124, 126, 127], "convolut": [24, 54, 98, 101, 124, 125, 126], "convolutional_barycenter2d": [16, 17, 101, 125], "convolutional_barycenter2d_debias": [17, 101, 125], "coo_matrix": [0, 99, 112], "coolwarm": [59, 72], "coordin": [0, 7, 16, 43, 47, 52, 99, 101, 102, 105, 110, 112, 113, 116, 118, 120, 121, 122, 124, 127], "coordinate_grad_semi_du": 120, "coordsa": [62, 69], "coordsb": [62, 69], "coot": [62, 110, 122], "coot2": [62, 69], "coot_dist": 62, "copi": [0, 10, 14, 23, 38, 42, 44, 51, 52, 89, 97, 99, 106, 110, 112, 123, 127], "core": [97, 125], "corenflo": [84, 98, 124], "corn": [0, 4, 42, 45, 48, 51, 52, 109, 110, 114, 124, 127], "corner": [16, 112, 127], "corpetti": [101, 124], "correct": [96, 97, 112, 122, 124, 125], "correctli": [110, 125], "correl": [0, 49, 72, 122], "correspond": [0, 5, 9, 10, 34, 49, 52, 72, 100, 101, 103, 105, 108, 110, 111, 112, 113, 115, 117, 118, 121, 124, 125, 127], "cosin": [0, 72, 122], "cost": [0, 23, 24, 28, 34, 46, 54, 58, 62, 65, 66, 67, 69, 70, 73, 74, 75, 79, 83, 88, 91, 98, 100, 101, 102, 103, 105, 106, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "cost_": [34, 103], "cost_factorized_x": [0, 57, 110], "cost_factorized_xt": [0, 57, 110], "cost_g": [110, 114, 125], "cost_list": [19, 112], "cost_norm": 122, "costfr": [110, 115], "costli": [72, 112], "cot": 82, "could": [96, 125], "counterpart": 49, "coupl": [0, 32, 37, 54, 57, 60, 69, 101, 102, 103, 106, 108, 110, 111, 116, 124, 125, 126, 127], "coupling_": [26, 28, 29, 30, 34, 103], "coupling_cmap": 116, "courti": [0, 4, 10, 11, 16, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 62, 65, 69, 70, 72, 77, 83, 85, 98, 101, 102, 103, 105, 109, 110, 112, 113, 114, 118, 120, 124, 127], "cov": [21, 23, 38, 92, 108], "cov_": [46, 66, 74, 84, 90, 92, 93, 94, 107], "cov_scal": 23, "cov_t": [46, 66, 74, 84, 90, 92, 93, 94, 107], "covari": [0, 23, 78, 103, 104, 107, 108, 127], "coven": 96, "coverag": [97, 125], "covs_bar": 23, "covs_init": 108, "covs_list": [23, 108], "coz": 98, "cp": 99, "cpick": [41, 49], "cpp": [9, 10, 78], "cprime": 41, "cpu": [0, 4, 5, 6, 10, 99, 106, 110, 112, 123, 124, 125], "cr": [50, 110], "cr1": [50, 110], "cr2": [50, 110], "cr_1": [50, 110], "cr_2": 50, "creat": [5, 7, 14, 15, 17, 41, 45, 49, 50, 89, 96, 97, 98, 99, 100, 116, 124, 125], "criterion": [0, 45, 110, 111, 127], "critic": 96, "croissant": 72, "cross": [47, 107, 110], "crossentropyloss": 45, "csgraph": [41, 49, 50], "csr": 110, "csr_matrix": 99, "csrc": 9, "ct": [107, 125], "ct01": 47, "ct02": 47, "ct13": 47, "ct23": 47, "cuaz": [0, 4, 42, 44, 45, 46, 48, 49, 50, 51, 52, 98, 109, 110, 114, 124, 127], "cuda": [0, 6, 10, 98, 125], "cudamat": 125, "cumsum": [91, 99, 115], "cumul": [48, 91, 99], "cumulative_cost": 91, "cupi": [99, 124, 125, 127], "cupybackend": 99, "current": [26, 97, 98, 102, 103, 110, 112, 114, 117, 119, 124, 125], "current_gamma": 117, "current_loss": 110, "curv": [10, 50, 57, 69], "custom": [8, 125], "cuturi": [0, 11, 14, 15, 17, 19, 44, 46, 57, 58, 64, 65, 70, 98, 100, 101, 103, 105, 107, 110, 111, 112, 113, 115, 119, 120, 121, 124, 127], "cvf": [0, 118, 124, 127], "cvx": 15, "cvxopt": [112, 124, 125, 127], "cvxpy": [64, 103, 113, 125], "cw": 10, "cx": 110, "cy": 110, "cython": [124, 125, 127], "c\u00e9dric": [0, 42, 44, 46, 48, 49, 50, 51, 52, 98, 109, 110, 114, 124], "d": [0, 5, 7, 14, 15, 18, 19, 23, 31, 37, 38, 41, 44, 46, 48, 50, 54, 64, 71, 72, 77, 78, 83, 90, 92, 100, 101, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127], "d0021b": 23, "d1": [62, 69], "d2": [29, 62, 69], "d_": [0, 110, 112], "d_1": [50, 62, 69, 112], "d_2": [50, 62, 69], "d_emd": 76, "d_emd2": 76, "d_i": 112, "d_k": [19, 112], "d_sinkhorn": 76, "d_sinkhorn2": 76, "d_tv": 76, "da": [26, 27, 28, 29, 30, 31, 32, 33, 34, 98, 113, 125, 127], "daigon": 103, "daili": 34, "damodaran": [70, 103, 120, 124, 127], "danica": 124, "dark": [48, 125], "darkgrai": 68, "data": [0, 4, 5, 6, 10, 17, 19, 23, 44, 46, 48, 50, 52, 64, 67, 72, 75, 97, 99, 101, 102, 103, 107, 108, 110, 112, 113, 118, 122, 124, 125, 127], "data_path": [16, 17, 27, 31, 33, 47], "dataload": 45, "dataset": [0, 3, 10, 11, 14, 15, 17, 26, 28, 29, 30, 32, 34, 41, 46, 50, 58, 63, 64, 65, 66, 67, 72, 73, 74, 76, 77, 79, 84, 88, 89, 90, 92, 93, 94, 105, 110, 118, 120, 122, 125, 127], "dataset_featur": [48, 52], "date": [99, 125], "david": [57, 58, 98, 124], "dc": [0, 112], "de": [0, 101, 112, 124, 127], "deactiv": 125, "deal": [82, 110, 115], "debia": 101, "debias": [24, 54, 98, 101, 104, 122, 124, 125, 126, 127], "debug": [98, 112, 125], "dec": 29, "dec1": 29, "dec2": 29, "decai": 112, "decemb": [0, 99, 112, 124, 125, 127], "decent": 119, "declar": 47, "decompos": 110, "decomposit": [0, 47, 57, 110, 111], "decor": 122, "decreas": [83, 101, 103, 112, 113], "dect": 29, "deduc": [52, 110, 114], "deem": 96, "deep": 122, "def": [4, 5, 6, 7, 8, 9, 11, 19, 21, 22, 23, 27, 29, 31, 33, 38, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 77, 78, 79, 82, 91, 93, 99, 114, 122], "default": [0, 4, 19, 48, 52, 64, 72, 78, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 125, 127], "defin": [0, 8, 11, 19, 23, 47, 62, 70, 72, 96, 99, 100, 101, 103, 108, 110, 112, 113, 117, 119, 122, 125, 127], "definit": [64, 99, 122, 127], "degre": [21, 23, 38], "dehaen": [110, 124], "del": 11, "delet": [110, 117], "deliv": 72, "delon": [0, 19, 22, 23, 37, 38, 83, 98, 103, 107, 108, 112, 118, 124], "delta": [32, 33, 69, 117], "delta_": [0, 7, 43, 112, 118, 119, 127], "delta_j": 117, "delta_k": 9, "delta_omega": 119, "delta_u": 117, "deltag": [110, 114, 125], "demetci": [69, 110, 124], "demo": [24, 54, 95, 104, 122, 126, 127], "demonstr": [46, 91, 92, 97, 125], "denot": [48, 52, 72, 100, 101, 103, 110, 112, 113], "dens": [0, 49, 50, 78, 99, 110, 112, 122], "densifi": 127, "densiti": [0, 108, 114, 123], "depend": [0, 48, 52, 99, 109, 110, 113, 114, 125, 127], "depict": 110, "deprec": [0, 10, 112, 115, 122], "depreci": 125, "depriv": 117, "deriv": [50, 121], "derogatori": 96, "descent": [0, 4, 9, 10, 19, 44, 52, 67, 69, 100, 102, 105, 107, 110, 111, 112, 113, 114, 124, 125, 127], "describ": [50, 72, 97, 101, 110], "descript": 97, "deshpand": [0, 118, 124, 127], "design": [16, 42, 46, 47, 51, 62, 64, 70, 77, 92, 94, 110, 117, 125, 127], "desir": [23, 97, 101, 110, 112, 113, 122], "desolneux": [23, 37, 103, 107, 108, 124], "det": [99, 125], "detach": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 19, 38, 45, 69, 72, 99, 100, 122], "detail": [0, 37, 50, 78, 96, 97, 99, 105, 107, 112, 125, 127], "detect": [54, 67, 71, 99, 102, 122, 126, 127], "determin": [96, 99, 101, 105, 108, 110, 120], "determinist": [0, 111], "devdoc": 99, "develop": [97, 124, 125, 127], "devi": [101, 103], "devias": 125, "deviat": [59, 99, 104, 109, 110, 111], "devic": [6, 10, 83, 99, 125, 127], "device_typ": 99, "devicecpugpu": 99, "df": [77, 78, 114, 127], "df_g": [110, 114, 125], "df_gc": 110, "dh": 101, "diag": [0, 72, 99, 100, 101, 110, 111, 122, 127], "diagon": [4, 34, 41, 99, 107, 122], "diaz": [0, 83, 118, 124], "dice": [0, 72, 122], "dict": [0, 48, 79, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123], "dict_log": 59, "dictionari": [0, 4, 53, 54, 78, 98, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "did": [20, 26, 28, 29, 30, 44, 46, 58, 72, 74, 77, 78, 110, 114, 125], "diff": 19, "differ": [0, 4, 5, 12, 19, 22, 44, 50, 54, 57, 58, 67, 69, 72, 78, 79, 80, 83, 96, 100, 101, 102, 103, 110, 112, 116, 118, 121, 122, 124, 125, 126, 127], "differenti": [0, 9, 10, 69, 78, 110, 124, 125, 127], "difficult": 127, "diffus": [6, 124, 127], "dim": [0, 5, 7, 19, 45, 47, 101, 111, 112, 118, 121, 122], "dim0": 99, "dim1": 99, "dim_a": [0, 100, 101, 110, 111, 115, 117, 121], "dim_b": [0, 100, 101, 110, 111, 115, 117, 121], "dim_prior": 101, "dim_r": 111, "dim_x": [0, 110], "dim_xt": [0, 110], "dimens": [0, 5, 10, 19, 23, 47, 65, 99, 101, 105, 107, 109, 110, 112, 115, 117, 118, 121, 124, 125], "dimension": [0, 46, 54, 71, 78, 92, 101, 104, 105, 110, 112, 124, 125, 126, 127], "dimensionali": 50, "dirac": [0, 18, 23, 66, 74, 112, 115], "direct": [0, 48, 52, 69, 76, 112, 114, 118, 119, 124, 125], "directli": [0, 5, 72, 78, 110, 115, 127], "directori": 97, "disabl": [96, 127], "discard": [49, 65, 110], "discrep": [0, 85, 110, 115, 118], "discret": [0, 23, 27, 32, 33, 48, 52, 67, 77, 91, 98, 101, 103, 112, 113, 114, 118, 120, 124, 125, 127], "discrimin": [54, 71, 105, 124, 125, 126], "discuss": [78, 103, 107, 110, 114, 124, 125, 127], "disjoint": 127, "disk": 97, "disp": 103, "displac": [0, 76, 112, 122, 124, 127], "displai": [17, 28, 34, 72, 101], "dissimilar": [4, 47, 48, 52], "dist": [0, 2, 5, 9, 11, 19, 28, 41, 43, 49, 50, 56, 57, 58, 59, 66, 67, 68, 70, 72, 73, 74, 75, 76, 77, 78, 79, 83, 88, 89, 90, 93, 94, 100, 105, 108, 110, 117, 122, 125, 127], "dist0": [14, 15, 17, 89], "dist_batch": [0, 5, 100], "dist_bures_squar": 108, "distanc": [0, 6, 11, 12, 23, 37, 39, 41, 42, 45, 47, 48, 49, 51, 54, 57, 62, 72, 78, 80, 81, 85, 86, 91, 98, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 115, 118, 119, 121, 122, 124, 125, 126], "distribut": [0, 2, 3, 4, 6, 7, 8, 10, 11, 14, 15, 16, 17, 23, 24, 31, 32, 35, 37, 43, 47, 50, 54, 56, 57, 58, 64, 66, 71, 72, 75, 76, 77, 78, 80, 81, 82, 86, 90, 91, 93, 94, 95, 98, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126], "distribution_estim": 103, "distribution_estimation_uniform": 103, "div": [94, 110, 121], "div_between_product": 110, "div_m": 121, "div_to_product": 110, "diverg": [0, 11, 49, 52, 69, 76, 94, 99, 100, 101, 110, 114, 121, 124, 125, 127], "divid": [44, 46, 72, 89], "divis": [72, 103], "dizier": [22, 112, 124], "dl": 69, "dmmot": 67, "dmmot_monge_1dgrid_loss": 112, "dmmot_monge_1dgrid_optim": [67, 112], "dmmot_obj": 67, "do": [0, 5, 11, 28, 34, 46, 72, 92, 96, 97, 99, 101, 112, 122, 125, 127], "doc": [11, 97, 99, 125], "docstr": [97, 122, 125], "doctest": [97, 125], "document": [72, 98, 99, 124, 125, 127], "dodgerblu": 64, "doe": [0, 8, 72, 78, 97, 99, 100, 110, 111, 112, 125, 127], "doesn": [0, 101, 110, 111], "doi": 69, "dokl": 112, "domain": [0, 34, 35, 42, 44, 77, 78, 100, 101, 103, 104, 105, 107, 110, 111, 112, 113, 114, 116, 118, 119, 121, 122, 124, 125, 126], "don": 112, "done": [0, 9, 23, 68, 69, 72, 78, 110, 112, 122, 125, 127], "dot": [9, 14, 15, 21, 29, 31, 42, 44, 46, 51, 56, 67, 72, 89, 92, 99, 122], "doubl": [8, 69, 72], "doucet": [19, 101, 112, 124, 127], "down": 116, "download": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94], "dpi": 68, "dr": [0, 63, 65, 124, 125, 127], "draw": [23, 49, 83], "draw_cov": [21, 23, 38], "draw_gmm": [23, 38], "draw_graph": [42, 44, 49, 50, 51], "draw_networkx": [41, 45, 49], "draw_networkx_edg": [42, 44, 49, 50, 51], "draw_networkx_nod": [42, 44, 49, 50, 51], "draw_transp_color": 49, "draw_transp_colored_gw": 44, "draw_transp_colored_qgw": 50, "draw_transp_colored_srgw": [42, 51], "drawn": [11, 104, 116], "dric": 124, "drumetz": [0, 85, 112, 118, 124], "dt": [107, 110], "dt_barycentr": 19, "dt_true_fixed_point": 19, "dtype": [10, 14, 15, 17, 67, 73, 76, 77, 79, 84, 85, 88, 89, 99, 101, 125], "dtype_devic": 99, "du": 125, "dual": [0, 11, 12, 15, 54, 67, 78, 100, 101, 102, 104, 106, 108, 110, 111, 112, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127], "dual_loss": 120, "dual_obj_grad": 119, "dualiti": [0, 123, 124, 127], "duals_featur": [102, 110], "duals_sampl": [102, 110], "duck": [16, 17, 18], "due": [0, 103, 112, 116, 118, 125, 127], "dummi": [110, 114, 115, 125], "duplic": [97, 112], "durat": 97, "dure": [110, 112], "durif": [101, 124], "durmu": [6, 124, 127], "dykstra": [0, 58, 110, 111], "e": [0, 50, 69, 83, 96, 100, 101, 107, 109, 110, 112, 113, 114, 118, 122, 124, 127], "e_k": [64, 103, 113], "each": [0, 5, 9, 11, 23, 41, 44, 45, 48, 50, 52, 59, 72, 78, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 124, 125, 127], "earli": [102, 125], "early_stopping_tol": 102, "earth": [0, 103, 112, 124, 125], "eas": 52, "easi": [97, 124, 127], "easier": [124, 127], "easili": [72, 112, 127], "eather": 105, "ec": 72, "ecml": [50, 110, 124], "eco": [113, 125], "edg": [42, 44, 45, 50, 51, 100, 109], "edge_color": [42, 44, 49, 50, 51], "edge_index": [45, 109], "edgecolor": [4, 20, 21, 23, 38, 48, 52, 63], "edgelist": [42, 44, 49, 50, 51], "edgelist_activ": [42, 44, 49, 51], "edgelist_deactiv": [42, 44, 49, 51], "edit": [96, 97], "editor": 97, "edu": [2, 3, 4, 6, 8, 9, 10, 11, 18, 21, 37, 38, 56, 66, 67, 68, 127], "eduardo": [18, 20, 98, 124], "effect": [99, 127], "effici": [0, 5, 78, 98, 100, 101, 112, 115, 124, 125, 127], "eigenvalu": [99, 103, 107, 122], "eigenvector": 99, "eigh": [21, 23, 38, 99], "eigsort": [21, 23, 38], "einstein": [99, 112], "einsum": [23, 99, 118], "either": [0, 32, 94, 100, 101, 103, 105, 107, 108, 110, 112, 121, 122], "elaps": [0, 15, 43, 59, 122], "electron": 96, "elem": 50, "element": [34, 41, 72, 78, 99, 100, 101, 103, 110, 112, 115, 116, 117, 122], "elev": [0, 22, 118], "eleventh": [112, 119, 124], "elif": [16, 42, 44, 48, 49, 51], "elig": 97, "eliminate_zero": 99, "ell": [21, 23, 38, 100], "ell_1": 94, "ell_2": [93, 94, 121], "ellips": [21, 23, 38], "eloi": [19, 22, 23, 37, 38, 64, 83, 98, 108, 112, 124], "els": [0, 4, 6, 10, 16, 22, 23, 29, 41, 42, 44, 48, 49, 50, 51, 52, 59, 63, 67, 82, 83, 91, 100, 103, 105, 107, 109, 110, 121], "email": 97, "emb": 110, "embed": [12, 44, 45, 46, 47, 54, 110, 124, 126, 127], "embedding_": 47, "embeddings_for_tsn": 45, "emd": [0, 5, 26, 28, 30, 43, 56, 66, 68, 73, 75, 78, 83, 98, 101, 102, 103, 110, 112, 113, 114, 115, 118, 119, 121, 123, 124, 125], "emd2": [0, 9, 11, 76, 78, 83, 98, 112, 121, 124, 125], "emd2_1d": [0, 112, 125, 127], "emd_1d": [0, 73, 112, 125, 127], "emd_1d_sort": 112, "emd_laplac": 103, "emdlaplacetransport": 30, "emdtransport": [26, 27, 28, 30, 33, 125, 127], "emonet": [46, 110, 124, 127], "empathi": 96, "emphas": 52, "empir": [0, 4, 6, 35, 54, 56, 75, 78, 80, 98, 101, 103, 104, 106, 107, 112, 116, 122, 123, 124, 125, 126, 127], "empirical_bures_wasserstein_barycent": 107, "empirical_bures_wasserstein_dist": 78, "empirical_bures_wasserstein_map": 31, "empirical_gaussian_gromov_wasserstein_dist": 107, "empirical_gaussian_gromov_wasserstein_map": 31, "empirical_sinkhorn": [59, 74, 78, 101, 127], "empirical_sinkhorn2": [101, 127], "empirical_sinkhorn2_geomloss": [78, 101], "empirical_sinkhorn_diverg": [101, 125, 127], "empirical_sinkhorn_nystroem": 101, "empirical_sinkhorn_nystroem2": 101, "emploi": 103, "empti": [0, 84, 85, 90, 103, 106, 112, 121, 122, 123, 125], "en": [45, 127], "enabl": [0, 100, 125], "enable_numpy_behavior": 99, "encod": [48, 50, 52, 103, 110, 122], "encount": [30, 44, 46, 89], "encourag": 125, "end": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 100, 103, 112, 113, 117, 127], "end_bapg": 44, "end_cg": 44, "end_pgd": 44, "end_ppa": 44, "endow": [42, 44, 50, 51, 110], "endpoint": 82, "energi": [19, 112], "enforc": [10, 64, 103, 112, 125, 127], "enhanc": [97, 125], "enough": [0, 41, 69, 101, 105, 127], "ensa": 90, "ensur": [10, 97, 127], "entri": [73, 99, 100, 108, 112], "entrop": [0, 5, 12, 20, 24, 44, 46, 53, 54, 71, 79, 92, 95, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126], "entropi": [0, 5, 78, 88, 99, 100, 101, 105, 110, 111, 119, 121, 124, 127], "entropic_fused_gromov_barycent": [110, 125], "entropic_fused_gromov_wasserstein": [44, 78, 110], "entropic_fused_gromov_wasserstein2": [78, 110], "entropic_gromov_barycent": [110, 127], "entropic_gromov_wasserstein": [46, 57, 78, 110, 127], "entropic_gromov_wasserstein2": [78, 110], "entropic_gw_loss": 57, "entropic_kl_uot": [90, 94], "entropic_kl_uot_ti": 90, "entropic_partial_fused_gromov_wasserstein": [49, 110], "entropic_partial_fused_gromov_wasserstein2": 110, "entropic_partial_gromov_wasserstein": [49, 92, 110, 115, 127], "entropic_partial_gromov_wasserstein2": [110, 115], "entropic_partial_wasserstein": [92, 115, 127], "entropic_semirelaxed_fused_gromov_wasserstein": [42, 110], "entropic_semirelaxed_fused_gromov_wasserstein2": 110, "entropic_semirelaxed_gromov_wasserstein": [42, 110], "entropic_semirelaxed_gromov_wasserstein2": 110, "entropy_batch": 100, "enumer": [14, 17, 41, 42, 44, 48, 49, 50, 51, 52, 59, 63, 76, 79, 82, 83, 84, 85, 89], "envelop": [0, 2, 100, 125], "environ": [96, 125, 127], "ep": [0, 11, 17, 37, 38, 47, 78, 99, 100, 103, 107, 112], "epoch": [45, 48, 110], "eponym": 127, "epsilon": [0, 17, 42, 44, 46, 57, 69, 78, 88, 100, 101, 102, 110, 121, 125, 127], "epsilon0": 101, "eq": [110, 119], "equal": [0, 19, 29, 64, 68, 75, 83, 99, 110, 112, 117, 122], "equal_nan": 99, "equat": [99, 101, 110, 113, 120, 127], "equip": 110, "equival": [0, 5, 23, 72, 73, 78, 100, 103, 107, 110, 113, 115, 121, 122], "err": [29, 44, 46, 59, 73, 90, 92], "err0": 46, "err_bapg": 44, "err_cg": 44, "err_pgd": 44, "err_ppa": 44, "err_sinkhorn_uot": 90, "err_sinkhorn_uot_ti": 90, "error": [0, 10, 41, 44, 46, 48, 89, 97, 99, 101, 103, 105, 110, 111, 112, 113, 115, 119, 121, 124, 125, 127], "erwan": [46, 47, 98], "esp": 63, "especi": [110, 115, 127], "est": 4, "esteban": [19, 101, 112, 124], "estim": [0, 12, 29, 35, 43, 44, 46, 54, 64, 67, 70, 78, 97, 98, 101, 103, 104, 107, 110, 113, 114, 120, 122, 124, 125, 126], "et": [0, 6, 19, 84, 93, 101, 112, 118, 124, 127], "eta": [0, 10, 32, 33, 103, 112, 113], "etc": [5, 97, 102], "ethnic": 96, "etienn": [29, 30], "euclidean": [0, 15, 41, 42, 44, 49, 50, 51, 68, 69, 72, 75, 76, 78, 100, 101, 103, 105, 108, 110, 111, 112, 113, 119, 122, 124, 125, 127], "euclidean_dist": 122, "eval_bcd": [102, 110], "evalu": [0, 99, 101, 102, 108, 110, 111, 112, 125], "even": [0, 5, 14, 15, 89, 92, 99, 101, 125, 127], "evenli": 99, "event": 96, "everi": [10, 48, 52, 64, 97, 102, 103, 110, 124], "everyon": 96, "evolut": [10, 48, 82, 101, 110, 124], "exact": [0, 5, 24, 49, 54, 71, 77, 79, 95, 101, 104, 110, 115, 116, 122, 124, 125, 126, 127], "exactli": [0, 100, 127], "exampl": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 43, 44, 45, 48, 49, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 95, 96, 97, 99, 100, 101, 110, 112, 115, 121, 125, 126], "except": 97, "execut": [12, 24, 35, 39, 53, 60, 71, 80, 86, 95, 112, 125, 126, 127], "exempl": 125, "exhibit": [34, 103], "exist": [30, 99, 101, 112, 125, 127], "exit": [0, 106, 108, 112, 123, 125], "exp": [8, 30, 72, 82, 99, 100, 105, 111, 120, 127], "exp_": 122, "exp_bur": 122, "expand_dim": 99, "expect": [0, 11, 69, 96, 97, 101, 118, 122, 124, 127], "expected_cost": 83, "expected_plan": 83, "expected_sl": [0, 83, 118], "expens": [64, 112], "experi": 96, "experienc": 97, "explan": 97, "explicit": [28, 34, 96, 103, 122], "explicitli": [0, 100, 105, 109, 112, 113, 116, 121, 125], "explos": [0, 118], "expon": 99, "exponenti": [99, 101, 122], "export": 127, "express": [4, 9, 96, 100, 127], "extend": [125, 127], "extens": [48, 52, 124, 125], "extra": 122, "extract": [72, 99, 122], "extrem": [48, 52, 112], "ey": [4, 23, 38, 48, 49, 52, 99, 118], "f": [0, 5, 6, 7, 14, 17, 19, 27, 33, 42, 43, 45, 48, 49, 50, 51, 52, 63, 64, 69, 70, 72, 77, 78, 83, 85, 89, 90, 91, 99, 100, 101, 102, 103, 105, 109, 110, 112, 114, 115, 118, 120, 121, 122, 124, 125, 127], "f1": [16, 17, 50, 110], "f2": [16, 17, 42, 44, 50, 51, 110], "f3": [16, 42, 44, 51], "f4": 16, "f5a623": 23, "f_": [0, 112], "f_1": [50, 100, 110], "f_2": [42, 50, 51, 100, 110], "f_3": [42, 51], "f_u": [0, 112], "f_v": [0, 112], "fa": 114, "face": [96, 110, 115], "facecolor": [14, 21, 23, 38, 63, 68, 89], "fact": 113, "factor": [0, 58, 60, 99, 100, 101, 110, 111, 116, 122, 124, 125, 126, 127], "factored_optimal_transport": [0, 56, 78, 106], "factored_solut": 0, "factored_solution_lazi": 0, "facundo": [0, 110, 124, 127], "fail": [97, 112, 125, 127], "fair": 96, "faith": 96, "fals": [0, 2, 17, 33, 41, 42, 44, 45, 48, 49, 50, 51, 52, 57, 58, 63, 67, 69, 72, 79, 82, 85, 93, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 127], "far": 127, "fast": [0, 19, 73, 83, 101, 108, 110, 112, 118, 124, 125, 127], "faster": [0, 5, 78, 90, 100, 112, 121, 124, 125], "fastest": [0, 100], "fatom": 48, "fatra": [11, 70, 74, 98, 124], "fatras2019": 11, "favor": 127, "fc": [110, 114], "fc1": [8, 11, 100], "fc2": [8, 11, 100], "fc2t": 110, "fc3": 11, "fda": [65, 127], "feasibl": [44, 46], "featur": [0, 41, 44, 45, 49, 50, 69, 97, 100, 101, 102, 109, 110], "feature_init_mean": [45, 109], "feature_init_std": [45, 109], "feed": 125, "feel": 97, "feickert": 124, "fernand": [18, 20, 98, 124], "ferradan": [27, 33, 77, 103, 114, 124, 127], "ferri": 112, "fetch": [107, 122], "few": [64, 72, 78, 125], "feydi": [0, 101, 124, 127], "fgw": [0, 42, 44, 51, 53, 54, 78, 98, 109, 110, 114, 124, 125, 126], "fgw_": [109, 110], "fgw_alpha": [42, 51], "fgw_barycent": [41, 110, 125, 127], "fgw_dist": [42, 44, 51, 110], "fgw_distance_to_templ": 109, "fi": [84, 89], "fiction": 72, "fig": [5, 7, 16, 17, 19, 20, 22, 23, 46, 47, 50, 57, 59, 62, 63, 69, 75, 83, 85, 92], "figsiz": [2, 5, 10, 15, 16, 17, 19, 20, 22, 23, 26, 27, 28, 30, 31, 33, 34, 37, 41, 42, 44, 45, 47, 49, 50, 51, 57, 58, 59, 63, 65, 67, 69, 70, 73, 75, 77, 79, 83, 85, 88, 89, 91], "figur": [2, 3, 4, 6, 7, 8, 9, 10, 11, 14, 18, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 88, 89, 91, 92, 93, 94, 97], "file": [12, 24, 35, 39, 53, 54, 60, 68, 71, 78, 80, 86, 95, 125, 126, 127], "fill": [21, 23, 34, 38, 88, 99, 103], "fill_between": [82, 84, 85, 90], "fill_diagon": [41, 48, 52], "fill_valu": 99, "filter": [69, 127], "final": [101, 112, 114, 125, 127], "final_gamma": 93, "financ": [98, 124], "find": [0, 41, 47, 70, 99, 100, 112, 113, 114, 124, 125, 127], "find_thresh": 41, "finit": [0, 23, 99, 101, 112, 122, 127], "first": [0, 4, 5, 6, 9, 19, 42, 43, 45, 46, 48, 49, 50, 51, 52, 64, 69, 73, 78, 79, 97, 99, 101, 102, 103, 110, 111, 112, 113, 117, 118, 119, 121, 122, 124, 127], "fisher": [105, 115, 127], "fit": [11, 31, 33, 34, 47, 64, 101, 103, 112, 113, 122, 125, 127], "fit_transform": [4, 45, 47, 48, 52, 103], "fiw": 125, "fix": [0, 19, 23, 38, 48, 52, 54, 69, 80, 97, 101, 104, 105, 107, 108, 109, 110, 112, 115, 116, 119, 124, 125, 126], "fixed_featur": [110, 125], "fixed_point": 107, "fixed_point_it": 19, "fixed_structur": [110, 125], "fixedloc": 63, "flag": 125, "flake8": 125, "flamari": [0, 3, 4, 6, 8, 9, 10, 11, 14, 15, 18, 21, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 56, 62, 63, 65, 66, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 93, 98, 101, 102, 103, 105, 109, 110, 113, 114, 117, 120, 121, 124, 127], "flamary2021pot": 124, "flamary2024pot": 124, "flatten": [83, 117], "flexibl": [78, 125], "flip": 99, "float": [0, 3, 8, 9, 10, 11, 16, 21, 41, 47, 65, 67, 69, 72, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123], "float32": 20, "float64": [0, 4, 6, 10, 14, 15, 17, 18, 22, 23, 27, 29, 31, 33, 44, 46, 47, 49, 67, 68, 73, 76, 77, 79, 88, 89, 101, 112, 115], "floor": [65, 99], "florenc": [0, 112, 124], "flow": [12, 39, 54, 104, 108, 122, 124, 125, 126, 127], "fluid": [52, 110], "fluid_fus": 110, "fluid_soft": 110, "fly": 122, "fn": [8, 11], "focus": 96, "folder": [97, 124, 125], "follow": [0, 9, 10, 11, 15, 47, 50, 69, 72, 78, 94, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 127], "fontsiz": [5, 10, 17, 23, 37, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 63, 72, 79, 83, 85, 91, 93], "fontweight": 72, "foral": [0, 101, 110, 112, 113, 118, 122], "forc": [0, 99, 127], "forg": [72, 127], "fork": 97, "form": [0, 9, 11, 50, 72, 78, 100, 103, 107, 110, 112, 114, 117, 122, 125, 127], "formal": [0, 101, 112], "format": [0, 3, 4, 6, 7, 8, 11, 29, 50, 57, 62, 72, 93, 97, 99, 109, 110, 112, 122, 124, 125], "format_partitioned_graph": [50, 110], "format_partitioned_sampl": 110, "formul": [0, 49, 110, 115, 119, 124, 127], "formula": [78, 118], "forrow": [0, 106, 124, 127], "forward": [8, 11, 45, 109, 127], "foster": [96, 127], "found": [0, 41, 67, 78, 97, 100, 103, 110, 113, 127], "foundat": [0, 107, 110, 115, 124, 125, 127], "four": [16, 47, 110], "fournier": 124, "fp": 19, "fr": [7, 10, 14, 15, 16, 18, 19, 20, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 43, 45, 46, 47, 48, 52, 57, 58, 59, 62, 63, 64, 65, 69, 73, 74, 75, 76, 79, 82, 83, 85, 88, 89, 90, 92, 93, 94, 110], "fr_1": 110, "frac": [0, 7, 62, 69, 100, 101, 103, 105, 110, 112, 115, 117, 118, 119, 120, 122, 123, 127], "frac12": [0, 112, 118], "fraction": [59, 72], "frame": 22, "framework": [10, 48, 52, 125], "franci": 101, "frank": [0, 90, 110, 121, 124], "fran\u00e7oi": [64, 103, 110, 113, 124], "frechet": [101, 112], "free": [23, 24, 54, 96, 97, 98, 101, 107, 108, 112, 115, 124, 125, 126], "free_support_barycent": [18, 101, 112, 125, 127], "free_support_barycenter_generic_cost": [19, 108, 112], "free_support_sinkhorn_barycent": [18, 20, 101], "friend": 97, "frob": 77, "frobeniu": 99, "frogner": [0, 121, 124, 127], "from": [0, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 19, 21, 23, 24, 27, 29, 31, 33, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 53, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 86, 88, 89, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "from_numpi": 99, "from_numpy_arrai": 41, "front": 125, "fr\u00e9chet": 127, "fugw": 110, "fugw_cost": 110, "full": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 99, 101, 112, 120, 122, 124, 125], "fulli": 69, "fully_relaxed_path": 117, "fun": [67, 72, 122], "fun_numpi": 122, "fun_to_numpi": [122, 125], "func": [99, 122], "funcanim": [6, 7, 11, 22, 93], "function": [5, 7, 10, 16, 19, 23, 47, 50, 64, 72, 78, 79, 93, 97, 101, 109, 110, 112, 115, 121, 124, 125, 127], "fundament": 125, "fung": [112, 124], "further": [0, 44, 50, 72, 83, 96, 97, 110, 118, 125], "fuse": [0, 53, 98, 100, 109, 110, 124, 125, 126, 127], "fused_gromov_wasserstein": [0, 42, 43, 44, 51, 78, 110, 125, 127], "fused_gromov_wasserstein2": [0, 78, 110, 125], "fused_gromov_wasserstein_dictionary_learn": [48, 110], "fused_gromov_wasserstein_linear_unmix": [48, 110], "fused_unbalanced_across_spaces_cost": 110, "fused_unbalanced_across_spaces_diverg": 110, "fused_unbalanced_gromov_wasserstein": 110, "fused_unbalanced_gromov_wasserstein2": 110, "fusion": 127, "futur": [10, 101, 115, 125], "futurewarn": [4, 48, 52], "fw": 110, "fx": 50, "fy": 50, "f\u00e9vott": [0, 93, 117, 121, 124], "g": [0, 7, 11, 14, 15, 27, 29, 33, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 57, 58, 59, 64, 67, 70, 72, 73, 74, 77, 78, 79, 83, 88, 89, 90, 92, 93, 100, 101, 103, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125], "g0": [0, 42, 49, 51, 52, 56, 66, 73, 74, 77, 110, 114, 115, 121, 123, 125], "g1": [42, 44, 49, 50, 51, 75, 79], "g2": [42, 44, 49, 50, 51, 75, 79], "g3": [42, 44, 51], "g_": 11, "g_1": 113, "g_edg": 109, "g_featur": 109, "g_i": 113, "g_j": 113, "g_list": [93, 117], "g_list2": 93, "g_list_v": 93, "g_lu": [64, 103, 113], "g_n": 113, "g_ny": 59, "g_sinkh": 59, "g_unb_kl": 78, "ga": [0, 56, 106], "gabriel": [0, 11, 44, 46, 98, 100, 101, 110, 115, 124, 127], "gain": [101, 110], "galleri": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 124, 125, 126], "gamma": [0, 72, 93, 94, 101, 103, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 127], "gamma_": [0, 72, 101, 103, 111, 112, 114, 115, 120, 121, 123, 127], "gamma_a": 101, "gamma_b": 101, "gamma_init": [0, 58, 110, 111], "gamma_k": 101, "gamma_list": 117, "gan": [0, 12, 54, 118, 124, 125, 126, 127], "ganea": [109, 124], "gaspard": 127, "gasso": [0, 49, 83, 92, 93, 101, 110, 114, 115, 117, 118, 121, 124, 127], "gather": [99, 103, 113], "gauss": [10, 58, 73, 76, 79, 88, 103], "gaussian": [0, 2, 10, 11, 14, 24, 31, 32, 33, 37, 38, 41, 58, 67, 73, 76, 77, 79, 88, 89, 98, 99, 103, 104, 108, 111, 113, 122, 124, 125, 126, 127], "gaussian_gmm": [39, 126], "gaussian_gromov_wasserstein_dist": 107, "gaussian_gromov_wasserstein_map": 107, "gaussian_logpdf": 108, "gaussian_pdf": 108, "gaussien": 107, "gaussrot": [3, 32], "gautheron": [98, 124], "gayraud": [98, 124], "gb": [0, 56, 106], "gc": 110, "gca": [21, 23, 38, 63, 91], "gcf": [6, 7, 11, 14, 89, 93], "gcg": [77, 103, 127], "gcg_linesearch": 114, "gcnconv": 45, "ge": [3, 74, 77], "gel2": 77, "gen": 6, "gender": 96, "gener": [0, 2, 5, 6, 10, 15, 16, 17, 21, 23, 24, 46, 47, 54, 62, 64, 68, 70, 72, 75, 78, 80, 82, 83, 90, 91, 92, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 110, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 125, 126], "generalis": [19, 112], "generalized_free_support_barycent": [22, 112], "generic_conditional_gradi": [114, 125], "genevai": [11, 70, 101, 120, 124, 127], "genevay2018": 11, "geodes": [0, 83, 118, 124], "geoloss": 78, "geometr": [101, 109, 124, 125, 127], "geometri": [50, 54, 80, 81, 104, 110, 126, 127], "geometricbar": 101, "geometricmean": 101, "geomloss": [0, 78, 101, 124, 125, 127], "geomloss_multiscal": 0, "geomloss_onlin": 0, "geomloss_tensor": 0, "geq": [0, 94, 100, 101, 103, 110, 112, 113, 114, 115, 117, 120, 121, 122, 123, 127], "gerber": [107, 124], "get": [0, 4, 42, 44, 47, 48, 50, 51, 52, 78, 101, 103, 105, 110, 112, 118, 122, 124, 125, 127], "get_available_backend_implement": 99, "get_backend": [99, 125], "get_backend_list": 99, "get_cmap": [14, 63, 89], "get_coordinate_circl": [0, 112, 118, 122], "get_data": 11, "get_graph_partit": [50, 110], "get_graph_represent": [50, 110], "get_loss": 9, "get_lowrank_lazytensor": 122, "get_node_attribut": [41, 49], "get_param": 122, "get_parameter_pair": 122, "get_partition_and_representants_sampl": [50, 110], "get_plan_from_du": 119, "get_plan_from_semi_du": 119, "get_projections_spher": 118, "get_random_gmm": 23, "get_random_project": 83, "get_sbm": 4, "get_tick": 63, "get_ytick": 63, "getitem": 122, "gfk": 114, "gg": [8, 43], "gist": 97, "git": 97, "github": [72, 97, 99, 119, 122, 124, 125, 127], "gitter": 124, "give": [0, 28, 34, 72, 94, 97, 99, 100, 110, 115, 116, 117, 125], "given": [0, 4, 42, 44, 47, 48, 51, 52, 64, 69, 72, 78, 99, 100, 101, 103, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127], "gl1": 79, "gl2": [77, 79], "glad": 97, "glaun": [101, 124], "glenn": [112, 124], "global": [50, 64, 103, 110, 122, 125], "glpk": 112, "glu": 112, "glue": 112, "gmail": [5, 17, 26, 27, 28, 32, 33, 34, 42, 44, 46, 47, 49, 50, 51, 70], "gmm": [23, 39, 54, 98, 116, 122, 124, 125, 126], "gmm_barycenter_fixed_point": 23, "gmm_ot_apply_map": 37, "gmm_ot_loss": 38, "gmm_ot_plan": 108, "gmm_ot_plan_dens": 37, "gmm_pdf": 37, "gmmot": 98, "gnassoun": [98, 124], "gnn": [45, 98, 124, 125], "go": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 125], "goal": [99, 120], "goe": [0, 101, 118, 124, 127], "gold": [17, 99], "good": [50, 72, 96, 97, 127], "googl": 72, "gori": [101, 124], "got": 43, "gozlan": [0, 19, 22, 23, 108, 112, 123, 124, 127], "gp": 75, "gpl": 124, "gpu": [0, 5, 98, 99, 101, 106, 110, 112, 123, 124, 125], "gq": 3, "gracefulli": 96, "grad": [0, 2, 4, 6, 7, 9, 10, 65, 69, 99, 100, 110, 119, 120, 125], "grad_alpha": 119, "grad_beta": 119, "grad_gl": 79, "grad_x": 7, "gradient": [0, 4, 5, 9, 10, 11, 12, 19, 39, 43, 44, 46, 54, 64, 65, 67, 69, 72, 77, 78, 98, 99, 100, 101, 103, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 119, 120, 122, 123, 124, 125, 126, 127], "gradient_desc": 107, "gradient_lipschitz_const": [64, 103, 113], "gradnorm": 67, "grai": [7, 85], "gramfort": [17, 98, 101, 124, 127], "grant": 97, "graph": [0, 43, 46, 49, 53, 54, 72, 98, 99, 100, 109, 110, 114, 124, 125, 126, 127], "graph_color": [41, 49], "graph_compression_gw": 4, "graphdata": 45, "graphic": [0, 101, 112, 124, 125, 127], "graphs1": 45, "graphs2": 45, "gray_r": [26, 28, 30, 34, 57, 58, 74, 77, 92, 116], "great": 97, "greater": [28, 34, 125], "greatli": [97, 125, 127], "greedi": [0, 101, 124, 125, 127], "green": [8, 10], "greenkhorn": [0, 98, 101, 125, 127], "grei": [17, 48, 63, 67, 79], "gribonv": 11, "grid": [3, 7, 8, 9, 11, 85, 90], "gridspec": 43, "gromov": [0, 12, 41, 53, 60, 69, 95, 98, 100, 103, 104, 107, 109, 114, 115, 122, 124, 125, 126], "gromov_barycent": [0, 47, 110, 125, 127], "gromov_wasserstein": [0, 4, 42, 43, 46, 51, 78, 110, 125, 127], "gromov_wasserstein2": [0, 4, 78, 110, 125, 127], "gromov_wasserstein_dictionary_learn": [48, 110], "gromov_wasserstein_linear_unmix": [48, 110], "gromovwasserstein": [0, 57, 110], "ground": [0, 19, 23, 54, 57, 76, 80, 101, 103, 112, 116, 119, 120, 121, 124, 126, 127], "ground_bari": 112, "ground_bary_lr": 112, "ground_bary_numitermax": 112, "ground_bary_solv": 112, "ground_bary_stopthr": 112, "group": [0, 26, 28, 103, 124, 125], "grow": 127, "gsc": 73, "gsm": 73, "guarante": [19, 112], "guerda": 125, "guess": [0, 114, 123], "guiba": [101, 124, 127], "guid": [54, 80, 97, 107, 114, 116, 119, 122, 124, 125, 126], "guidelin": [97, 124], "gw": [0, 5, 31, 42, 49, 50, 51, 57, 100, 110, 114, 115, 124, 125], "gw0": 46, "gw0_sparsiti": 46, "gw_2": 110, "gw_dist": [0, 42, 46, 51, 57, 110], "gw_dist_estim": 46, "gw_dist_std": 46, "gw_distance_estim": 110, "gw_e": 49, "gw_sparsiti": 46, "gwe": 46, "gwe_spars": 46, "gweak": 66, "gweight": [42, 44, 49, 51], "gwg": 43, "gwggrad": [110, 115], "gwgrad_parti": 115, "gwloss": [110, 115], "gwloss_parti": 115, "h": [0, 9, 17, 21, 23, 38, 41, 44, 46, 69, 93, 100, 101, 104, 105, 109, 110, 111, 113, 117, 121, 122, 124, 127], "h0": 101, "h1": [50, 110], "h2": [9, 42, 44, 50, 51, 110], "h3": [42, 44, 51], "h_": 117, "h_1": [100, 110], "h_2": [42, 51, 100, 110], "h_3": [42, 51], "h_a": 117, "h_augment": 117, "h_c": 117, "h_r": 117, "h_re": 29, "ha": [0, 4, 5, 9, 11, 19, 72, 98, 100, 101, 103, 110, 112, 113, 115, 121, 122, 124, 125, 127], "habrard": [32, 33, 103, 113, 124, 127], "half": [79, 110, 121], "ham": [0, 72, 122, 125], "hand": 97, "handl": [8, 10, 97, 121, 122, 125, 127], "handler": 8, "haoran": 93, "happen": 125, "happi": 125, "harass": 96, "hard": [125, 127], "harm": 96, "hat": [0, 112], "have": [0, 11, 34, 48, 49, 50, 52, 72, 78, 96, 97, 99, 101, 110, 112, 116, 118, 121, 122, 125, 127], "hbar2": [42, 51], "hbar3": [42, 51], "hc": 117, "hc1": [100, 110], "hc2": [100, 110], "heart": [16, 17, 22], "heavisid": [8, 11], "heidrich": [0, 112, 124, 127], "height": [21, 23, 38, 101], "help": [47, 97, 125, 127], "henc": [50, 110], "here": [4, 7, 52, 78, 93, 110, 112, 124, 125, 127], "hermitian": 99, "heur": 19, "heurist": [19, 110, 112, 125], "hi": 127, "hicham": [17, 88, 89, 98, 124], "hidden": 78, "high": [0, 48, 52, 97, 100, 112, 125], "higher": [72, 101, 110, 115, 119, 125], "highest": [0, 112], "highlight": [97, 125], "highlight_rep": 50, "histogram": [0, 69, 101, 102, 104, 106, 110, 111, 112, 115, 117, 119, 121, 122, 123, 124, 125, 127], "hit": 125, "hold": 97, "home": [4, 8, 9, 10, 20, 26, 28, 29, 30, 44, 46, 48, 49, 52, 58, 65, 67, 72, 74, 77, 78, 89], "hook": 97, "hopefulli": 125, "horizont": 68, "host": 125, "hot": [48, 52], "how": [5, 16, 32, 42, 45, 46, 47, 48, 49, 50, 51, 52, 59, 62, 64, 70, 72, 76, 78, 82, 91, 92, 94, 101, 125], "howev": [5, 110, 127], "hr": 117, "hra": 117, "hrhr": 117, "hstack": [45, 65], "hth": 117, "html": [8, 72, 97, 99, 124], "http": [8, 69, 72, 75, 96, 99, 101, 119, 122, 124, 125, 127], "hty": 117, "hu": [0, 118, 124, 127], "huang": [98, 105, 124, 127], "huge": 125, "hui": [62, 69, 124], "hundries": [0, 112, 124], "hx": 50, "hy": 50, "hyperparam": 110, "hyperparamet": [0, 110, 121], "hyperspectr": [101, 124], "h\u00fctter": [0, 106, 124, 127], "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 18, 19, 21, 22, 23, 29, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 57, 59, 62, 63, 64, 66, 67, 68, 69, 70, 72, 74, 76, 78, 79, 82, 83, 84, 85, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "i1": [6, 18, 22, 27, 31, 33], "i1t": [27, 31], "i1tgw": 31, "i2": [6, 18, 22, 27, 31, 33], "i2t": [27, 31], "i2tgw": 31, "i3": 22, "i686": 125, "i_": 112, "i_1": 112, "i_2": [112, 118], "i_d": [112, 122], "i_i": 112, "i_j": 112, "i_k": 113, "ialpha": 52, "iclr": [0, 42, 44, 51, 52, 110, 114, 115, 119, 124], "icml": [0, 4, 41, 43, 44, 46, 48, 49, 57, 100, 105, 110, 115, 122, 124, 127], "id1": 50, "id2": 50, "id_pop": 117, "idea": [23, 75, 127], "ident": [96, 99, 113], "identif": 52, "identifi": [49, 110], "idri": 125, "idx": [10, 50], "idx1": [27, 33], "idx2": [27, 33], "idx_atom": 48, "idx_c": [48, 52], "idx_max": 63, "idx_min": 63, "ieee": [0, 77, 103, 114, 118, 124, 127], "ievgen": [29, 30, 98, 101, 103, 124], "ignor": [0, 4, 30, 48, 52, 67, 69, 99, 103, 110, 114, 118, 125], "ii": [17, 50, 110], "iii": [101, 124], "iip": 18, "ij": [0, 63, 100, 110, 112, 115, 123], "ijkl": 100, "ik": 100, "ill": 112, "illustr": [2, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 56, 58, 63, 65, 66, 69, 72, 73, 74, 77, 79, 82, 84, 85, 88, 89, 90, 91, 93, 97, 125], "im": [22, 31, 33, 63, 72], "im0": 59, "im1": 59, "im2mat": [27, 31, 33, 47], "ima": [0, 110, 124], "imag": [0, 6, 15, 16, 23, 35, 37, 47, 54, 64, 72, 77, 84, 101, 103, 108, 113, 114, 118, 122, 124, 125, 126, 127], "image_emd": 33, "image_mapping_gaussian": 33, "image_mapping_linear": 33, "image_sinkhorn": 33, "imageri": 96, "imaginari": 65, "imap": 72, "img": [17, 27, 31, 33, 47], "imit": 99, "impact": [72, 127], "implement": [0, 5, 8, 50, 52, 72, 78, 97, 98, 99, 100, 101, 105, 110, 111, 112, 119, 122, 125, 127], "impli": 23, "implicitli": 100, "import": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 103, 105, 109, 110, 112, 113, 115, 116, 117, 121, 122, 124, 125, 127], "importerror": 127, "impos": [19, 64, 103], "improv": 125, "imread": [6, 16, 17, 18, 22, 27, 31, 33, 47], "imshow": [4, 16, 17, 26, 27, 28, 30, 31, 33, 34, 43, 46, 48, 50, 52, 57, 58, 59, 62, 63, 66, 69, 72, 74, 75, 77, 79, 83, 92, 94, 116], "inaccur": [0, 100], "inact": 117, "inappropri": 96, "incid": 96, "incl": 78, "includ": [0, 96, 97, 102, 105, 110, 112, 115, 121, 122, 124, 125, 127], "inclus": [96, 97, 115], "incomplet": [97, 125], "incorrectli": 125, "increas": [19, 20, 26, 28, 29, 30, 44, 46, 58, 72, 74, 77, 78, 110, 112, 115, 125], "incur": 127, "ind_i": 115, "ind_x": 115, "indep": [0, 114, 123], "independ": [0, 29, 110, 112, 125, 127], "index": [0, 4, 102, 103, 110, 117, 120, 121, 122, 124], "index_to_color": 38, "indianr": 17, "indic": [41, 45, 63, 97, 99, 109, 110, 112, 115, 116, 117, 122], "indices_a": 91, "indices_b": 91, "indices_i": 115, "indices_x": 115, "indistinguish": 11, "individu": [0, 52, 96, 110, 112, 124, 125], "ineffici": [5, 112], "inf": [0, 41, 83, 103, 121], "inf_": [0, 111, 112], "infeas": 125, "infer": [0, 99, 110, 118, 124], "infin": [99, 121], "infinit": [34, 103], "inform": [0, 32, 33, 44, 45, 48, 49, 62, 69, 70, 83, 96, 97, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 124, 125, 127], "infti": 90, "inherit": 127, "init": [0, 47, 52, 58, 110, 111, 125], "init_c": [0, 110, 125], "init_cov": 23, "init_du": 110, "init_func": 22, "init_i": 110, "init_matrix": 110, "init_matrix_semirelax": 110, "init_mean": 23, "init_method": [64, 113], "init_pi": 110, "init_plan": 52, "init_x": [110, 125], "initi": [0, 18, 49, 52, 67, 98, 100, 101, 102, 105, 108, 109, 110, 111, 112, 114, 115, 121, 123, 125, 127], "initialis": [19, 103, 112, 113], "initl": 52, "inject": 69, "inlin": 72, "inner": [0, 5, 100, 101, 103, 110, 113, 125], "inner_tol": 103, "innov": [0, 112, 124], "input": [0, 17, 22, 50, 52, 69, 72, 89, 99, 100, 101, 102, 103, 106, 107, 108, 110, 112, 113, 114, 118, 119, 121, 122, 123, 125, 127], "inria": [48, 52, 59, 63, 88, 89], "insert": 99, "inspir": 97, "instabl": [110, 115], "instal": [97, 101, 112, 125, 127], "instanc": [0, 8, 96, 99, 100, 104, 105, 110, 114, 120, 122, 125, 127], "instant": 10, "instanti": [99, 122, 125, 127], "instead": [0, 5, 8, 11, 48, 59, 99, 101, 102, 110, 112, 113, 114, 115, 121, 122, 124, 125, 127], "instruct": 97, "insult": 96, "int": [0, 4, 38, 45, 47, 48, 52, 58, 63, 64, 84, 85, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127], "int32": [48, 50, 52], "int64": 112, "int_": [0, 118], "int_0": [0, 112], "integ": [0, 19, 41, 99, 110, 112, 122, 125], "integr": [0, 112, 125], "intel": 99, "intellig": [0, 11, 64, 69, 73, 77, 90, 101, 103, 106, 110, 113, 114, 119, 121, 124, 127], "intend": [49, 119], "intens": [42, 44, 48, 49, 50, 52, 78], "inter": [48, 52], "intercept": 117, "interchang": 110, "interest": [96, 127], "interestingli": 127, "interfac": 127, "interior": [67, 112, 125, 127], "intermedi": [0, 8, 67, 91, 106, 115, 118], "intern": [0, 4, 6, 9, 10, 11, 17, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 57, 58, 64, 70, 73, 83, 85, 90, 100, 101, 103, 106, 108, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 124, 127], "internationalconfer": 19, "interpol": [0, 4, 10, 16, 21, 26, 28, 30, 34, 43, 47, 48, 50, 52, 57, 58, 64, 66, 72, 74, 75, 83, 101, 103, 110, 112, 113, 115, 124, 125, 127], "interpret": [72, 110], "interv": [6, 7, 11, 22, 84, 85, 93, 99], "intervent": [101, 124], "intra": [42, 44, 48, 51, 52, 115], "introduc": [0, 19, 26, 27, 28, 29, 30, 32, 34, 83, 101, 108, 118, 125, 127], "introduct": [54, 80, 126, 127], "introductori": 125, "intuit": [69, 97], "inv": 99, "invalid": 89, "invari": [0, 54, 95, 104, 110, 121, 124, 125, 126, 127], "invers": [0, 31, 42, 44, 51, 83, 93, 99, 103, 112, 117, 118], "inverse_transform": [27, 31, 103, 127], "inverse_transform_label": 103, "investig": [96, 127], "involv": [34, 97], "io": [72, 124, 125], "ip": [57, 58], "iperm": 8, "ipermt": 8, "ipm": 112, "ipynb": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94], "irisa": [10, 16, 41, 43, 46, 47, 74, 92], "is_all_finit": 122, "is_avail": [6, 10], "is_floating_point": 99, "is_tensor": 38, "isfinit": [65, 99], "isinf": 99, "islazi": 101, "isn": 101, "isnan": 99, "isometri": 47, "isspars": 99, "issu": [0, 50, 72, 96, 97, 100, 101, 110, 122, 124, 127], "ist": 18, "item": [7, 19, 38, 41, 42, 44, 45, 49, 50, 51, 83, 97], "iter": [0, 2, 3, 4, 5, 8, 9, 10, 14, 15, 19, 20, 23, 26, 28, 29, 30, 44, 46, 47, 52, 58, 62, 64, 65, 67, 69, 72, 74, 77, 78, 89, 90, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 123, 124, 125, 127], "ith": 117, "itmax": 117, "its": [0, 3, 4, 8, 19, 32, 38, 42, 44, 48, 49, 51, 64, 72, 78, 82, 96, 99, 100, 101, 103, 109, 110, 112, 113, 114, 115, 116, 118, 121, 122, 124, 125, 127], "its_to_show": 38, "itself": 127, "iv": [8, 82, 93], "ivisu": [7, 11], "j": [0, 4, 14, 15, 16, 21, 22, 23, 27, 29, 33, 37, 42, 43, 44, 47, 48, 49, 50, 51, 52, 62, 63, 68, 69, 72, 77, 78, 79, 83, 93, 94, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 127], "j_1": 112, "j_k": 112, "jaakkola": [109, 124], "jaccard": [0, 72, 122], "jan": 125, "janati": [17, 69, 88, 89, 98, 101, 110, 124, 127], "janati100": 17, "januari": 125, "jason": 101, "jax": [0, 99, 112, 118, 122, 124, 125, 127], "jaxbackend": 99, "jcpot": [98, 124, 125], "jcpot_barycent": 101, "jcpottransport": 29, "jefferi": [112, 124], "jensen": 127, "jet": 94, "jin": 112, "jj": 17, "jl": 100, "jmlr": [124, 125], "join": [16, 17, 27, 31, 33, 47, 99, 124], "joint": [0, 48, 101, 110, 113, 114, 123, 124, 125, 127], "joint_ot_mapping_kernel": [113, 127], "joint_ot_mapping_linear": [113, 127], "jointli": [50, 103, 113], "jonathan": [101, 103, 124], "journal": [0, 6, 14, 15, 19, 23, 27, 33, 37, 46, 77, 84, 101, 103, 107, 108, 110, 112, 114, 115, 118, 121, 123, 124, 125, 127], "jp": 18, "jpg": [27, 31, 33], "jul": 125, "juli": [0, 11, 19, 23, 37, 38, 98, 108, 112, 124, 125], "julia": [0, 122], "julien": [0, 112, 124], "jump": 125, "june": [11, 125], "jupyt": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 125], "just": 78, "justin": [0, 44, 46, 100, 110, 115, 124, 127], "k": [0, 4, 9, 11, 17, 18, 19, 20, 23, 29, 37, 38, 41, 42, 43, 44, 48, 49, 50, 51, 52, 63, 64, 65, 67, 68, 72, 73, 82, 91, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 124, 127], "k1": [42, 44, 49, 50, 51, 59, 111], "k2": [42, 44, 49, 50, 51, 59, 111], "k_": 108, "k_1": [59, 111], "k_2": [59, 111], "k_i": [101, 112], "k_t": 108, "kab": 23, "kac": 23, "kachaiev": 124, "kamada_kawai_layout": [41, 49], "kamel": 125, "kantorovich": [0, 112, 123, 124, 127], "kantorovitch": 127, "kappa": 101, "kappa1": 82, "kappa2": 82, "kcb": 23, "keed": 125, "keep": [97, 125, 127], "keepdim": [0, 65, 78, 79, 85, 99, 118], "kei": [0, 5, 102, 110, 112], "keop": [78, 101, 122], "kept": [101, 125], "kerdoncuff": [46, 98, 110, 124, 127], "kernel": [0, 32, 44, 100, 101, 103, 110, 111, 113, 115, 122, 124, 125, 127], "kernel_nystroem": 59, "kerneltyp": 113, "keyword": [49, 103, 122], "kilian": [70, 74, 98, 124], "kind": [103, 127], "kl": [0, 69, 73, 78, 79, 88, 99, 100, 101, 102, 110, 119, 121, 124, 125, 127], "kl_div": [99, 125], "kl_loss": [0, 110, 125], "kl_uot": 94, "klatt": [0, 112, 124], "kline": [112, 124], "kmean": [0, 50, 110, 111], "kmeans_fus": 110, "kmeans_soft": 110, "knn": 103, "knopp": [0, 98, 99, 101, 111, 121, 124, 125, 127], "knott": [103, 107, 124, 127], "know": [49, 52, 99], "knowledg": [97, 127], "known": [109, 110, 127], "koch": 122, "kolouri": [0, 83, 112, 118, 124], "kong": [44, 110, 124], "koyejo": [0, 118, 124, 127], "krzakala": [5, 124], "kt": [37, 38], "ktu": 89, "kulczynski1": [0, 72, 122], "kullback": [0, 44, 46, 88, 94, 99, 110, 119, 121, 127], "kv": [59, 89], "kwarg": [0, 101, 103, 104, 106, 110, 113, 114, 115, 116, 121, 122, 123, 125], "kwargs_solv": 110, "kyoto": 18, "kyrillidi": 122, "l": [0, 11, 14, 15, 17, 43, 44, 46, 49, 64, 83, 85, 89, 92, 93, 100, 101, 102, 103, 105, 107, 110, 112, 113, 114, 115, 117, 118, 119, 121, 124, 127], "l1": [75, 79, 102, 110], "l1l2": [26, 103], "l2": [0, 14, 15, 54, 67, 73, 78, 79, 89, 95, 100, 104, 110, 112, 117, 119, 121, 124, 125, 126, 127], "l2_bari": 67, "l2_barycentric_proj": [19, 112], "l2_uot": 94, "l2bari": [14, 15, 89], "l_2": 93, "l_lcot": 82, "l_u": 120, "l_v": 120, "l_w2": 82, "l_w2_circl": 82, "l_x": 43, "l_y": 43, "la": [64, 103, 113, 124], "label": [0, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 21, 23, 26, 28, 29, 30, 32, 34, 37, 38, 45, 46, 48, 52, 53, 54, 56, 59, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 101, 103, 104, 105, 116, 122, 125, 126, 127], "label_est": 4, "label_norm": 122, "label_unif": 4, "labelbottom": [57, 79], "labeld": 125, "labelleft": [57, 79], "labels": 63, "labels_a": [0, 103], "labels_to_mask": 122, "laetitia": [0, 41, 43, 44, 46, 49, 92, 94, 98, 110, 124], "lagrang": [117, 122], "lagrangian": [0, 112, 115, 117, 124, 127], "lai": [105, 124, 127], "lambd": [73, 74], "lambda": [0, 19, 41, 52, 110, 115, 117, 127], "lambda_": [0, 110, 127], "lambda_1": 0, "lambda_2": 0, "lambda_k": [19, 101, 112], "lambda_r": 0, "lambda_u": 0, "lambdast": 47, "landman": [0, 118, 124], "langl": [0, 99, 100, 101, 103, 110, 111, 112, 113, 114, 115, 118, 120, 121], "languag": [96, 98, 127], "laplac": 125, "laplacian": [35, 54, 98, 103, 104, 122, 124, 126, 127], "lapost": 46, "larg": [0, 5, 11, 34, 70, 72, 99, 103, 105, 110, 115, 120, 122, 124, 125, 127], "larger": [5, 122], "largest": 117, "lasso": [0, 26, 28, 103, 117, 124, 125], "last": [0, 2, 45, 72, 100, 101, 102, 117, 125, 127], "last_step": [0, 2, 100, 125], "latent": 45, "latent_embed": 45, "later": [42, 44, 50, 51, 103], "latest": [124, 125], "latter": [110, 122], "lauren": [57, 58], "laur\u00e8n": [57, 58, 98, 124], "law": 109, "layer": [98, 109, 124, 125], "lazi": [0, 78, 101, 122, 124, 125, 127], "lazili": [125, 127], "lazy_plan": [0, 57, 58, 78, 110, 111, 122], "lazytensor": [78, 101, 125], "lbfg": 101, "lbfgsb": 110, "lbfgsb_unbalanc": [121, 125], "lbfgsb_unbalanced2": [121, 125], "lbrace": 64, "lceil": 111, "lcot": [0, 82, 112, 118, 124], "ldot": [101, 112], "le": [98, 122], "lead": [0, 9, 49, 72, 99, 101, 106, 110, 112, 114, 121, 123, 125, 127], "leadership": 96, "leak": 125, "learn": [0, 4, 6, 9, 11, 17, 19, 32, 41, 42, 43, 44, 46, 49, 51, 53, 54, 57, 58, 70, 71, 83, 85, 92, 97, 98, 100, 101, 102, 103, 107, 109, 110, 111, 112, 114, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127], "learning_r": [48, 110], "learning_rate_c": [48, 110], "learning_rate_i": [48, 110], "least": [0, 97, 112, 113, 125], "left": [0, 9, 17, 26, 30, 37, 57, 63, 69, 79, 99, 100, 101, 103, 107, 110, 111, 112, 116, 118, 119, 120, 122, 123], "left_factor": [59, 111], "legend": [3, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 26, 28, 29, 30, 31, 32, 34, 37, 38, 45, 48, 52, 56, 59, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 79, 82, 84, 85, 88, 89, 90, 91, 93], "legend_guid": 8, "leibler": [0, 44, 46, 88, 94, 99, 110, 119, 121, 127], "len": [15, 17, 19, 20, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 63, 67, 72, 79, 83, 91, 119, 122], "length": [0, 49, 99, 102, 110, 112, 115, 117, 120, 121, 122], "leonid": 112, "leq": [0, 110, 112, 114, 115, 127], "less": [112, 116, 125], "let": [0, 50, 69, 100, 110, 112, 114], "letter": 68, "level": [44, 46, 96, 101, 103, 104, 110, 122, 124, 127], "leverag": 125, "levm": [0, 112], "li": [44, 110, 124], "lib": [4, 48, 49, 52, 65, 99], "librari": [70, 78, 98, 101, 103, 113, 124, 125, 127], "licens": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 124], "lie": [124, 127], "lightspe": [0, 101, 103, 119, 121, 124, 127], "like": [0, 4, 49, 72, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 110, 111, 112, 113, 114, 118, 120, 121, 122, 123, 125], "limit": [0, 83, 99, 110, 125], "limit_max": 103, "limits_": 105, "limits_i": 105, "lin": [44, 110, 124], "lin_squar": 122, "linalg": [20, 21, 23, 38, 41, 44, 46, 92, 99], "line": [0, 27, 31, 33, 47, 72, 91, 101, 110, 112, 114, 115, 116, 124, 125, 127], "line_search": [114, 125], "line_search_armijo": 114, "linear": [0, 3, 8, 11, 19, 32, 33, 35, 45, 53, 54, 57, 59, 78, 82, 93, 98, 99, 100, 101, 102, 103, 105, 107, 110, 112, 113, 114, 117, 118, 121, 122, 124, 125, 126, 127], "linear_circular_ot": [0, 82, 112, 125], "linear_sliced_wasserstein_spher": [0, 118, 125], "lineargwtransport": 31, "linearli": 127, "lineartransport": [31, 127], "linesearch": [41, 110, 114, 125], "linestyl": [63, 82], "linewidth": [5, 37, 48, 52, 57, 63, 68, 85], "link": [4, 42, 44, 49, 97, 125], "linprog": [67, 127], "linspac": [7, 8, 14, 20, 37, 38, 41, 50, 57, 76, 82, 89, 99, 125], "lint": 97, "linter": 125, "linux": [124, 125], "lipschitz": [64, 103, 113, 127], "list": [0, 5, 8, 14, 19, 23, 41, 89, 90, 97, 99, 101, 102, 103, 106, 107, 108, 109, 110, 112, 115, 117, 118, 120, 121, 122, 123, 124, 125], "list_alpha": 52, "list_dist": 49, "list_dist_str": 49, "list_h": 50, "list_h1": 50, "list_h2": 50, "list_loss_gw": 57, "list_marginal_cost": 115, "list_p": 110, "list_p1": 110, "list_p2": 110, "list_p_gw": 57, "list_p_lr": 58, "list_p_sin": 58, "list_po": 49, "list_r": [50, 110], "list_r1": [50, 110], "list_r2": [50, 110], "list_rank": [57, 58], "list_reg": 58, "list_t": 49, "list_time_gw": 57, "list_to_arrai": [99, 122], "list_unmixings2d": 52, "literatur": [0, 97, 101, 121, 127], "littl": [72, 112], "liu": [0, 44, 83, 110, 112, 118, 119, 124], "liutku": [6, 124, 127], "live": [22, 48, 52, 69, 97, 112, 124], "lm": [0, 112], "load": [6, 27, 33, 72, 127], "loader": 45, "loc": [3, 8, 18, 19, 26, 28, 30, 31, 32, 34, 37, 42, 44, 51, 56, 63, 64, 65, 66, 74, 75, 84, 85, 88, 91, 93], "local": [4, 48, 49, 52, 65, 97, 110, 125, 127], "local_node_s": [49, 50], "local_node_shap": 50, "locat": [0, 18, 22, 78, 99, 101, 112, 115], "log": [0, 17, 19, 23, 29, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 57, 58, 59, 62, 67, 69, 70, 77, 78, 83, 84, 85, 90, 92, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 125, 127], "log0": [46, 92], "log_": [29, 50, 59, 103], "log_23": [42, 51], "log_32": [42, 51], "log_asgd": 70, "log_bapg": 44, "log_cg": 44, "log_dict": [0, 19, 108, 112, 118], "log_dict2": 19, "log_expect": 83, "log_min": 83, "log_pgd": 44, "log_ppa": 44, "log_sgd": 70, "log_sinkhorn": [0, 100], "log_t": 100, "log_uot": 90, "log_uot_ti": 90, "logarithm": [0, 99, 100, 101, 111, 121], "loge": 46, "logent": 49, "logit": [0, 100], "loglog": [103, 122], "lognorm": 59, "logo": [54, 71, 125, 126], "logo_dark": 68, "logspac": [72, 82, 84, 85, 93], "logsumexp": [99, 105, 127], "logw": 43, "lokhand": [112, 124], "long": 127, "longrightarrow": 112, "look": [49, 97, 117], "loop": [6, 7, 11, 22, 44, 72, 93, 103, 110, 124], "loss": [0, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 17, 19, 26, 32, 33, 38, 43, 44, 45, 48, 52, 57, 66, 69, 74, 75, 77, 78, 89, 90, 92, 93, 94, 101, 103, 108, 110, 112, 113, 114, 115, 118, 119, 120, 121, 122, 124, 125, 127], "loss_citi": 78, "loss_dual_entrop": [3, 8], "loss_dual_quadrat": 3, "loss_efgw": 78, "loss_egw": 78, "loss_epoch": 48, "loss_fgw": 78, "loss_fgw_linear": 78, "loss_fgw_quad": 78, "loss_fun": [0, 43, 52, 110, 125], "loss_gw": 78, "loss_gw_quad": 78, "loss_it": [4, 6, 10], "loss_iter0": 4, "loss_iter2": 4, "loss_linear_batch": 100, "loss_linear_samples_batch": 100, "loss_linear_term": 0, "loss_list": 38, "loss_quad": 78, "loss_quad_term": 0, "loss_quadratic_batch": 100, "loss_quadratic_samples_batch": 100, "loss_sink": 78, "loss_sink_linear": 78, "lost": 127, "lot": [98, 125], "louvain": [50, 64, 103, 110, 113, 124], "louvain_fus": 110, "low": [0, 48, 50, 52, 56, 59, 60, 64, 72, 98, 100, 101, 104, 106, 110, 111, 116, 122, 124, 125, 126], "lower": [0, 18, 26, 30, 46, 64, 72, 103, 110, 111, 112, 113, 116], "lowest": [0, 118], "lowrank": [57, 58, 59, 60, 78, 122, 125, 126], "lowrank_gromov_wasserstein_sampl": [0, 57, 110, 125], "lowrank_sinkhorn": [0, 58, 78, 111], "lp": [0, 10, 18, 19, 22, 24, 54, 67, 101, 102, 103, 104, 108, 113, 114, 119, 121, 122, 124, 125, 126, 127], "lp_bari": 67, "lp_log": 67, "lp_solver": 114, "lpl1": 103, "lr": [3, 4, 6, 7, 8, 9, 10, 11, 19, 38, 45, 69, 70, 120], "lr_decai": [67, 112], "lr_init": [67, 112], "lse": 100, "lssot": [0, 118], "lst": 122, "lst_m": 76, "lst_plan": 79, "lst_reg": 79, "lst_solver": 79, "lst_unbalanc": 79, "luo": [0, 44, 46, 100, 110, 124, 127], "lvert": [0, 107], "lw": [10, 17, 19, 42, 44, 49, 50, 51, 63, 72, 91], "l\u00e9o": [98, 124], "m": [0, 2, 4, 5, 9, 10, 11, 14, 15, 17, 19, 21, 23, 28, 29, 32, 33, 38, 42, 43, 44, 45, 48, 49, 50, 51, 56, 57, 58, 59, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 83, 85, 88, 89, 90, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "m0": 101, "m1": [0, 21, 75, 79, 111, 121], "m2": [0, 9, 21, 75, 76, 79, 111, 121], "m3": 21, "m4": 21, "m_": [0, 37, 38, 43, 100, 107, 108, 117, 127], "m_0": 101, "m_1": 21, "m_2": 21, "m_3": 21, "m_4": 21, "m_a": 101, "m_b": [100, 101], "m_batch": 5, "m_current": 117, "m_feat": [102, 110], "m_k": [108, 112, 117], "m_ktime": 112, "m_lcot": 82, "m_linear": 110, "m_list": [5, 19, 23, 38], "m_samp": [102, 110], "m_t": [37, 38, 107, 108], "m_w2": 82, "m_w2_circl": 82, "m_w2_lcot": 82, "ma": [44, 105, 110, 124, 127], "machin": [0, 4, 6, 11, 17, 19, 41, 43, 44, 46, 48, 49, 57, 58, 77, 100, 101, 103, 107, 110, 111, 112, 114, 115, 124, 125, 127], "maco": 125, "macosx": [124, 125], "made": 125, "magic": 97, "mahalanobi": [0, 72, 122], "mahei": [0, 83, 118, 124], "mai": [5, 6, 9, 19, 96, 97, 110, 112, 115, 116, 117, 124, 125, 127], "mail": [96, 97, 124], "main": [28, 97, 124, 125, 127], "maintain": [96, 99, 124, 125], "mainten": 125, "majewski": [6, 124, 127], "major": [105, 125, 127], "make": [0, 42, 44, 49, 51, 72, 75, 88, 89, 96, 97, 99, 104, 110, 112, 121, 124, 125, 127], "make_1d_gauss": [10, 14, 15, 17, 58, 67, 73, 76, 77, 79, 88, 89], "make_2d_samples_gauss": [46, 66, 74, 84, 90, 92, 93, 94], "make_blob": 63, "make_data_classif": [3, 26, 28, 29, 30, 32, 34], "manag": 125, "mangasarian": 112, "manhattan": 72, "mani": [0, 12, 54, 100, 121, 122, 124, 125, 126, 127], "manifest": 125, "manifold": [4, 23, 45, 47, 48, 52, 105, 107, 118, 124, 127], "manner": 97, "manpow": [98, 124], "manual_se": [3, 6, 7, 8, 11, 19, 38, 45], "manylinux": 125, "map": [0, 3, 8, 19, 35, 39, 49, 54, 64, 70, 94, 98, 103, 104, 107, 108, 110, 112, 116, 120, 122, 124, 125, 126], "mapping_": 103, "mappingtransport": [32, 33, 127], "mapsto": [0, 110, 118], "marc": [46, 110, 124, 127], "marcel": [0, 112, 124], "marco": [0, 11, 42, 44, 46, 51, 52, 64, 98, 100, 101, 103, 109, 110, 112, 113, 114, 115, 124, 127], "marg": 44, "margin": [0, 44, 46, 52, 54, 71, 78, 93, 98, 100, 101, 102, 110, 112, 113, 115, 117, 121, 122, 124, 125, 126, 127], "marginal_a": 122, "marginal_b": [0, 122], "marginal_cost": [91, 115], "marginal_loss": [44, 110], "mark": 122, "markdown": 125, "marker": [3, 8, 18, 21, 22, 26, 28, 29, 30, 32, 34, 45, 48, 50, 52, 63, 65], "markeredgecolor": 68, "markerfacecolor": 68, "markers": 91, "martin": [0, 83, 112, 118, 124], "mart\u00edn": [0, 118, 124], "mask": 122, "mass": [0, 4, 29, 42, 44, 49, 72, 78, 92, 94, 99, 103, 110, 112, 114, 115, 124, 125, 127], "massiv": [0, 101, 124], "mast": 101, "master": [97, 122, 124, 125], "mat2im": [27, 31, 33], "match": [0, 46, 53, 54, 72, 100, 103, 110, 118, 122, 124, 125, 126, 127], "materi": 113, "math": [19, 22, 23, 37, 38, 41, 49, 59, 64, 65, 72, 83, 112, 115, 118, 119, 127], "mathbb": [0, 19, 64, 99, 101, 107, 110, 112, 113, 118, 120, 122, 127], "mathbf": [0, 9, 42, 48, 49, 50, 51, 52, 63, 72, 94, 99, 100, 101, 102, 103, 105, 107, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123], "mathcal": [0, 19, 21, 23, 62, 64, 100, 103, 104, 107, 109, 110, 111, 112, 113, 118, 122, 127], "mathemat": [0, 6, 19, 84, 97, 101, 107, 110, 112, 115, 118, 124, 125, 127], "mathieu": [98, 119, 125], "mathop": [0, 100, 101, 102, 103, 105, 106, 110, 111, 112, 114, 115, 119, 120, 121, 122, 123], "mathrm": [0, 7, 19, 64, 82, 94, 101, 103, 105, 107, 110, 111, 112, 114, 115, 118, 119, 120, 121, 122], "matlab": [0, 98, 122], "matmul": [38, 99], "matplotlib": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 125], "matric": [0, 10, 44, 46, 47, 49, 50, 62, 69, 72, 77, 78, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 122, 123, 124, 125, 127], "matrix": [0, 4, 9, 11, 14, 15, 17, 19, 27, 31, 33, 41, 47, 48, 52, 58, 59, 66, 67, 69, 74, 75, 76, 77, 89, 90, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "matthew": 124, "matur": 97, "maunu": [107, 124], "max": [0, 14, 15, 17, 19, 42, 44, 46, 47, 48, 49, 50, 51, 57, 58, 59, 63, 66, 72, 73, 75, 76, 77, 78, 79, 82, 88, 89, 90, 91, 93, 94, 99, 100, 101, 103, 106, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "max_": [105, 117, 119, 120], "max_featur": 48, "max_inner_it": 103, "max_it": [0, 5, 26, 29, 32, 33, 46, 47, 58, 69, 100, 103, 110, 119, 125], "max_iter_inn": [0, 5, 48, 100, 110], "max_iter_ot": [69, 110], "max_iter_out": [48, 110], "max_max": 91, "max_nz": [73, 119, 122], "max_omega": 119, "max_ot": 72, "max_sliced_wasserstein_dist": [0, 118], "max_sumshiftexpweight_reduct": 78, "max_tk1": [42, 44, 50], "maxfun": 101, "maxim": [3, 8, 110, 112, 120, 121, 125], "maximum": [0, 20, 41, 47, 72, 82, 99, 100, 101, 103, 105, 110, 112, 114, 117, 119, 122], "maxit": [65, 101, 105], "maxiter_mm": 105, "maxiter_sink": 105, "maxnloc": 19, "mazelet": [2, 45, 98, 124], "mb": [12, 21, 24, 35, 39, 53, 60, 71, 80, 86, 95, 107, 126], "mblondel": 119, "mccann": [115, 124, 127], "mcol": [41, 49], "md": [4, 48, 52, 107, 125], "mean": [0, 5, 10, 14, 15, 17, 23, 42, 44, 45, 50, 51, 63, 67, 73, 76, 77, 79, 82, 84, 85, 88, 89, 90, 99, 101, 104, 105, 107, 108, 109, 110, 112, 125, 127], "mean_sinkh": 90, "mean_sinkh_ti": 90, "meaning": 127, "means_bar": 23, "means_init": 108, "means_list": [23, 108], "meantim": 50, "measur": [0, 6, 10, 18, 19, 22, 23, 43, 64, 70, 78, 84, 101, 102, 103, 105, 108, 110, 112, 115, 118, 120, 121, 122, 124, 125, 127], "measure_loc": 112, "measure_weight": [101, 112], "measures_loc": [18, 20, 101, 112], "measures_weight": [18, 20, 101, 112], "mechan": 125, "media": 96, "median": [99, 103, 122], "medic": [101, 124], "medri": [0, 112, 124], "mehta": [67, 98, 112, 124], "mem": [12, 24, 35, 39, 53, 60, 71, 80, 86, 95, 126], "member": [96, 124], "memori": [0, 72, 78, 99, 100, 101, 110, 112, 120, 122, 124, 125, 127], "ment": 124, "mention": 97, "merg": [97, 125], "meshgrid": [6, 7, 8, 18, 22, 99], "messag": [0, 97, 101, 122, 125], "method": [0, 5, 10, 17, 19, 23, 37, 41, 44, 50, 52, 58, 64, 69, 70, 78, 90, 97, 101, 102, 103, 105, 107, 108, 110, 111, 112, 113, 119, 120, 121, 122, 124, 125, 127], "method_sinkhorn": 102, "metric": [0, 28, 29, 46, 54, 57, 67, 68, 72, 76, 78, 80, 92, 100, 101, 103, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 124, 125, 126, 127], "meyer": 112, "mgrid": 85, "mi": [114, 124, 125], "miccai": [101, 124], "michael": [98, 112], "might": [0, 20, 26, 28, 29, 30, 34, 44, 46, 58, 72, 74, 77, 78, 99, 100, 101, 110, 112, 125, 127], "miller": [50, 110, 124], "million": 125, "min": [0, 42, 44, 48, 50, 59, 63, 65, 72, 91, 99, 100, 101, 102, 103, 105, 106, 107, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 127], "min_": [0, 7, 9, 10, 11, 69, 94, 100, 101, 105, 110, 112, 113, 115, 117, 118, 121, 127], "min_a": [4, 127], "min_cost": [0, 83, 118], "min_cov_eig": 23, "min_featur": 48, "min_min": 91, "min_p": 127, "min_perm": 83, "min_pivot_sl": [0, 83, 118], "min_plan": 83, "min_t": 117, "min_weight_gw": 4, "minhui": 98, "minibatch": [12, 54, 120, 126, 127], "minigalleri": 125, "minim": [0, 4, 6, 7, 9, 10, 41, 42, 44, 48, 51, 52, 69, 105, 110, 112, 114, 118, 119, 121, 122, 125, 127], "minimis": [19, 112], "minimum": [0, 41, 99, 103, 110, 112, 114, 118, 122, 125, 127], "minkowski": [0, 67, 72, 100, 112, 122], "minmax": [27, 31, 33], "minor": 125, "minp": 83, "minu": [3, 8], "minut": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94], "mirror": [0, 110, 111], "misc": 124, "misfit": [0, 110], "mismatch": 125, "miss": [122, 125], "mistak": 125, "mit": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 124], "mix": [9, 10, 69], "mixtur": [9, 24, 37, 38, 108, 124, 125, 126], "mixup": [44, 110, 124], "mjl": [46, 124, 127], "ml": [124, 127], "mlj": 110, "mlp": [8, 11], "mm": [69, 105, 110], "mm_unbalanc": [94, 121], "mm_unbalanced2": 121, "mmd": [0, 101, 124, 127], "mmot": [54, 71, 104, 112, 126, 127], "mobahi": [0, 121, 124, 127], "mode": [0, 3, 8, 32, 100, 103, 116], "model": [4, 6, 8, 24, 37, 45, 50, 101, 108, 124, 125, 126, 127], "modif": [97, 125], "modifi": [34, 110], "modified_fil": 97, "modul": [5, 8, 11, 45, 72, 78, 97, 100, 101, 105, 107, 109, 113, 116, 122, 124, 125, 127], "modulo": [0, 112], "mokhtar": [98, 124], "moment": 125, "mong": [0, 31, 67, 112, 115, 124, 125], "mont": [0, 118], "montesuma": [18, 20, 98, 124], "month": 125, "more": [0, 19, 42, 44, 49, 51, 69, 72, 78, 97, 99, 100, 101, 105, 107, 110, 112, 121, 125, 127], "mosek": 112, "most": [4, 101, 122, 125, 127], "move": [112, 125, 127], "mover": [0, 103, 112, 124, 125], "mp": 75, "mpl": 10, "mpl_toolkit": [14, 15, 46, 89, 92], "mplot3d": [14, 15, 46, 89, 92], "mr": [50, 110], "mrg": 97, "mt": [10, 107], "mticker": 63, "mu": [0, 6, 9, 10, 19, 21, 23, 32, 33, 38, 41, 43, 64, 82, 92, 103, 105, 106, 107, 110, 112, 113, 118, 127], "mu1": 82, "mu2": 82, "mu_": [0, 46, 64, 66, 74, 82, 84, 90, 92, 93, 94, 103, 107, 127], "mu_a": [0, 106], "mu_b": [0, 106, 107], "mu_d": 11, "mu_i": [69, 107, 127], "mu_j": 127, "mu_k": 127, "mu_n": [0, 7, 11, 112, 118], "mu_t": [0, 46, 64, 66, 74, 84, 90, 92, 93, 94, 103, 107, 127], "mu_target": 82, "mu_x": [64, 69], "much": [72, 97, 101, 125], "multi": [35, 54, 98, 99, 101, 103, 104, 112, 122, 124, 125, 126, 127], "multi_alpha": 109, "multidimension": [0, 47, 112], "multipl": [0, 2, 76, 101, 107, 110, 111, 112, 118, 119, 120, 121, 122, 125], "multipli": [102, 110, 122], "multiprocess": 122, "multiscal": [0, 101], "multivari": [0, 108], "multivariate_norm": 20, "munk": [0, 112, 124], "must": [0, 110, 114, 119, 121, 122, 125], "mv": 9, "my": 97, "m\u00e9moli": [0, 110, 124, 127], "n": [0, 4, 5, 7, 9, 10, 11, 14, 15, 17, 18, 19, 21, 22, 23, 27, 29, 31, 32, 33, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 58, 59, 62, 65, 66, 67, 69, 70, 73, 74, 75, 76, 77, 78, 79, 83, 84, 85, 88, 89, 90, 91, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 127], "n1": [0, 50, 62, 69, 72, 78, 100, 122], "n2": [0, 42, 43, 44, 50, 51, 62, 69, 72, 78, 100, 122], "n3": [42, 44, 51], "n_": [0, 103, 112, 113, 115, 118], "n_0": 112, "n_1": [50, 62, 69, 112], "n_2": [50, 62, 69], "n_alpha": 14, "n_atom": 101, "n_batch": 8, "n_class": [45, 103], "n_clean": 49, "n_cluster": [48, 52], "n_compon": [45, 47, 108], "n_dim": 11, "n_distribut": [14, 15, 17, 89], "n_edg": 109, "n_epoch": 45, "n_featur": [2, 11, 45, 63, 103, 109, 122, 124], "n_feature_i": [102, 110], "n_feature_x": [102, 110], "n_fitting_sampl": 64, "n_gd_it": 38, "n_graph": [45, 109], "n_hidden_lay": 45, "n_hist": [0, 101, 112, 121], "n_init": [4, 47, 48, 52], "n_iter": [3, 7, 8, 11, 90, 100], "n_k": [19, 101, 112], "n_l": 112, "n_label": 122, "n_node": [41, 45, 48, 52, 109], "n_node_class": 45, "n_nois": [49, 90, 92, 94], "n_p": 115, "n_plot": [19, 83], "n_predict_sampl": 64, "n_problem": 5, "n_proj": [0, 83, 118], "n_project": [0, 6, 7, 84, 85, 118], "n_projections_arr": [84, 85], "n_sampl": [5, 11, 20, 46, 47, 50, 52, 57, 63, 92, 103, 108, 118, 122, 124], "n_sample_i": [102, 110], "n_sample_x": [102, 110], "n_samples_": 2, "n_samples_1": 122, "n_samples_2": 122, "n_samples_a": [0, 101, 110, 111, 118], "n_samples_b": [0, 101, 110, 111, 118], "n_samples_bari": [22, 112], "n_samples_per_blob": 59, "n_samples_sourc": [28, 34], "n_samples_t": 2, "n_samples_target": [28, 34], "n_seed": [84, 85], "n_sourc": [70, 120], "n_source_sampl": [3, 8, 26, 30, 32, 103], "n_steps_visu": 38, "n_t": 103, "n_target": [70, 76, 120], "n_target_sampl": [3, 8, 26, 30, 32, 103], "n_templat": [45, 109], "n_template_nod": [45, 109], "n_templates_nod": 109, "n_thread": 0, "n_tplt": 109, "n_tplt_node": 109, "n_transported_sampl": 115, "n_trial": 2, "n_try": 82, "n_u": 115, "n_visu": 11, "n_weight": 89, "na": 116, "nabla": [64, 103, 112, 113, 119], "naiv": 5, "nakhostin": [101, 124], "name": [29, 50, 79, 99, 110, 122, 124, 127], "namespac": 125, "nan": 99, "nan_to_num": 99, "narr": 97, "nathali": [98, 124], "nathan": [98, 124, 125], "natha\u00ebl": [19, 23, 108, 112, 124], "nation": 96, "nativ": 10, "natur": [0, 99, 112, 124], "nauk": 112, "nb": [0, 5, 10, 14, 15, 17, 27, 33, 42, 44, 46, 47, 51, 56, 65, 66, 67, 73, 74, 75, 76, 77, 79, 84, 85, 88, 89, 90, 92, 93, 94, 110, 112, 114, 116], "nb_class": 103, "nb_dummi": [110, 114, 115], "nb_imag": 16, "nb_interp": 21, "nb_iter_max": [4, 6, 10], "nb_node": 4, "nb_samples_grad": 110, "nb_samples_p": 110, "nb_samples_q": 110, "nbb": 119, "nbm": 15, "nbm2": 15, "nbnois": 65, "nbpc": 4, "nbsp": 99, "nc": [4, 48, 52], "ncol": 69, "ncourti": [10, 16, 46, 47], "ndarrai": [0, 41, 47, 99, 101, 104, 105, 110, 112, 114, 115, 116, 117, 118, 119, 120, 122], "ndim": 10, "nearest": [4, 26, 28, 30, 34, 43, 48, 50, 52, 54, 57, 58, 66, 71, 74, 75, 83, 103, 113, 124, 125, 126], "nearest_brenier_potential_fit": [64, 103], "nearest_brenier_potential_predict_bound": [64, 103], "nearestbrenierpotenti": [103, 113], "nearli": [125, 127], "necessari": [14, 15, 78, 89, 92, 96, 97, 124, 125, 127], "necessarili": 110, "need": [0, 5, 64, 67, 69, 72, 78, 97, 99, 100, 101, 105, 109, 110, 112, 113, 116, 125, 127], "needham": [50, 110, 124], "neg": [0, 3, 8, 93, 99, 100, 101, 110, 112, 117, 119, 121, 124, 125], "negentropi": 119, "neginf": 99, "neighbor": 103, "neighborhood": 125, "nemdlaplacetransport": 30, "nemdtransport": [26, 28, 30, 34], "nemo": 124, "nenna": [0, 14, 15, 101, 115, 121, 124, 127], "neq": [105, 110, 112, 127], "nest": 122, "net": 46, "network": [0, 11, 45, 109, 110, 124, 125, 127], "networkx": [41, 42, 44, 45, 48, 49, 50, 51, 52, 110], "neural": [0, 11, 32, 33, 44, 45, 62, 69, 70, 83, 100, 101, 102, 103, 107, 109, 110, 113, 118, 119, 120, 121, 124, 125, 127], "neurip": [0, 44, 49, 92, 100, 101, 110, 114, 115, 117, 121, 124, 127], "neutral": 113, "neuv": [64, 103, 113, 124], "never": [97, 125], "new": [41, 64, 99, 103, 113, 122, 127], "next": [50, 72, 110, 114, 117, 125, 127], "next_active_index": 117, "next_gamma": 117, "next_removal_gamma": 117, "next_removal_index": 117, "nfeasibl": 46, "ngeativ": 99, "nguyen": [101, 124, 127], "ni": [0, 118], "nice": 125, "nicola": [0, 6, 10, 16, 41, 42, 43, 44, 46, 47, 49, 51, 52, 72, 84, 98, 101, 103, 109, 110, 114, 118, 124, 127], "nightingal": [0, 112, 124], "nij": 118, "nik": 118, "nile": [0, 101, 103, 124], "nip": [0, 32, 33, 101, 103, 113, 119, 121, 124, 127], "nit": 72, "niter": [9, 67, 69, 112], "nits_bcd": 102, "nits_ot": 102, "nitzan": [0, 106, 124, 127], "njk": 118, "nk_source_sampl": 103, "nlabel": [48, 52], "nmd": 47, "nn": [7, 8, 11, 45, 125], "no_grad": [4, 6, 9, 10, 38, 69], "node": [0, 4, 41, 44, 45, 46, 49, 50, 109, 110, 114, 124], "node_alpha": 50, "node_collect": 49, "node_color": [41, 42, 44, 45, 49, 50, 51], "node_id1": 50, "node_id2": 50, "node_label": 52, "node_s": [41, 42, 44, 49, 50, 51], "node_shap": 50, "nodelist": [42, 44, 45, 49, 50, 51], "nodes_color_part": [42, 44, 49, 50, 51], "nodes_color_part1": [42, 44, 49, 50, 51], "nodes_color_part2": [42, 44, 49, 50, 51], "nodes_s": [42, 44, 49, 51], "nois": [3, 8, 11, 41, 49, 92, 104], "noise_level": [3, 8, 32], "noisi": [41, 49, 69], "noisy_graph": 49, "noisy_nod": 49, "non": [0, 19, 64, 73, 78, 89, 93, 97, 98, 99, 100, 101, 103, 110, 112, 114, 117, 119, 121, 122, 124, 125, 127], "none": [0, 4, 8, 17, 19, 20, 21, 23, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 59, 62, 63, 69, 72, 82, 83, 91, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125], "nonetheless": 99, "nonlinear": [112, 113, 127], "nonneg": [0, 110, 111, 121], "nonnegative_symmetr": [48, 110], "nonparametr": [6, 124, 127], "nonumb": 112, "nonzero": 119, "noplot": 97, "noqa": [14, 15, 46, 89, 92], "norm": [0, 19, 20, 41, 44, 46, 49, 59, 63, 65, 72, 94, 99, 100, 102, 103, 110, 112, 118, 122, 125], "normal": [0, 7, 14, 15, 17, 18, 41, 42, 44, 49, 51, 76, 89, 99, 103, 105, 109, 118, 122, 125], "north": 112, "northwestmmglu": 112, "notabl": 125, "notat": 125, "note": [0, 23, 34, 67, 72, 78, 99, 100, 101, 103, 105, 109, 110, 112, 113, 115, 116, 119, 121, 122, 124, 125, 127], "notebook": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 125, 127], "noth": 116, "notic": [50, 52, 72], "nov": 125, "novel": [125, 127], "novemb": 125, "now": [4, 5, 49, 69, 72, 99, 125, 127], "np": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29, 30, 31, 32, 33, 37, 38, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 103, 104, 110, 112, 115, 117, 118, 119, 121, 122, 125, 127], "np_config": 99, "npart": [50, 110], "npart1": 110, "npart2": 110, "npart_1": 50, "npart_2": 50, "npo": 47, "npost01": 47, "npost02": 47, "npost13": 47, "npost23": 47, "nproc": 122, "npz": 72, "nr": 59, "nrow": 69, "ns1": 9, "ns_budget": 101, "nsemi": 34, "nsinkhornl1l2transport": 26, "nsinkhornlpl1transport": [26, 28], "nsinkhorntransport": [26, 28, 30, 34], "nsk": 101, "nstd": [21, 23, 38], "nt": [0, 9, 48, 100, 101, 103, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 123], "nt1": 9, "nt_budget": 101, "nterpol": 127, "ntime": 112, "nu": [0, 6, 7, 10, 43, 64, 103, 105, 110, 112, 113, 118], "nu_i": 112, "nu_k": 19, "num": [14, 17, 30, 99], "num_class": 45, "num_it": 107, "num_iter_max": 90, "number": [0, 3, 5, 8, 9, 11, 18, 19, 20, 22, 23, 26, 28, 29, 30, 41, 43, 44, 46, 47, 48, 52, 58, 59, 72, 74, 77, 78, 90, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "numer": [0, 46, 49, 50, 72, 89, 99, 100, 101, 103, 105, 107, 112, 115, 122, 125, 127], "numinneritermax": [0, 20, 101, 103, 113, 114], "numitermax": [0, 18, 19, 20, 26, 28, 29, 30, 44, 46, 57, 58, 59, 70, 72, 74, 77, 78, 90, 101, 103, 106, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123], "numitermax_dykstra": [0, 110], "numitermaxemd": [0, 114, 123], "numpi": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 29, 31, 32, 33, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 103, 105, 110, 112, 113, 115, 117, 118, 121, 122, 124, 125, 127], "numpy_op": 99, "numpybackend": 99, "numthread": [0, 112, 122, 125], "nunsupervis": 34, "nv": [8, 93], "nvisu": [8, 77], "nx": [0, 10, 41, 45, 49, 72, 99, 100, 107, 110, 111, 112, 114, 116, 122, 125], "nx_graph": [41, 49], "nx_pylab": 49, "ny_sampstem": 102, "nystroem": [0, 101, 111], "nystrom": 125, "nystr\u00f6m": [0, 54, 60, 101, 111, 124, 126, 127], "nz": [3, 29, 32, 65, 104], "o": [0, 3, 8, 16, 17, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 45, 47, 48, 50, 52, 59, 67, 68, 72, 91, 109, 110, 124, 125, 127], "o1": 68, "o2": 68, "obj": [67, 112, 119], "object": [0, 3, 4, 5, 6, 7, 8, 11, 37, 38, 47, 59, 67, 73, 76, 78, 79, 82, 99, 100, 101, 102, 103, 107, 110, 112, 114, 119, 121, 122, 124, 125, 127], "oblig": 96, "observ": [9, 101, 104], "obstacl": [115, 124, 127], "obtain": [0, 5, 78, 82, 100, 103, 117, 118, 122, 127], "obviou": [0, 112], "occur": [103, 127], "ocean_dai": [27, 31, 33], "ocean_sunset": [27, 31, 33], "oct": 125, "octob": [101, 124], "off": [0, 4, 5, 7, 16, 17, 19, 21, 23, 27, 29, 31, 33, 42, 44, 45, 48, 49, 50, 51, 52, 58, 68, 77, 79, 91, 92, 97, 109, 110], "offens": 96, "offer": 125, "offici": [96, 125], "offlin": 96, "offset": [23, 59, 65], "often": [97, 127], "og": 56, "ok": 78, "old": [124, 125], "old_fval": 114, "older": 125, "oleksii": 124, "olvi": 112, "omega": [0, 94, 101, 110, 111, 114, 115, 119, 120, 121, 127], "omega_": [0, 103, 127], "omega_g": [0, 103], "omit": [0, 49, 72, 100, 122], "omp": 0, "onc": [5, 6, 7, 11, 22, 93], "one": [0, 3, 5, 6, 8, 10, 27, 31, 32, 33, 41, 45, 47, 48, 49, 52, 70, 72, 78, 97, 99, 101, 103, 104, 107, 110, 112, 115, 117, 118, 124, 125, 127], "one_hot": 45, "ones": [4, 11, 18, 19, 20, 38, 41, 42, 43, 44, 48, 50, 51, 52, 67, 72, 74, 83, 84, 85, 90, 93, 94, 99, 100, 103, 110, 125], "ones_lik": 91, "ones_p": 110, "onli": [0, 2, 9, 18, 43, 50, 64, 72, 78, 99, 100, 101, 102, 103, 105, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 127], "onlin": [0, 4, 48, 72, 96, 101, 110, 124, 125, 127], "onto": [10, 19, 26, 28, 30, 103, 110, 119, 122, 127], "op": 99, "open": [96, 97, 98, 124, 125, 127], "openmp": [0, 112, 125], "oper": [44, 46, 50, 97, 100, 101, 103, 105, 107, 112, 113, 124, 127], "operand": 99, "opt": [19, 38], "optim": [0, 3, 6, 8, 11, 12, 18, 19, 27, 32, 33, 38, 41, 42, 43, 44, 45, 46, 49, 51, 54, 60, 64, 65, 67, 70, 71, 77, 80, 83, 92, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126], "optimis": [64, 103, 113], "optimizewarn": 67, "option": [0, 5, 50, 52, 72, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "orang": 37, "order": [0, 9, 21, 23, 28, 34, 38, 41, 64, 72, 99, 103, 105, 109, 112, 113, 115, 116, 118, 122, 124, 127], "org": [8, 69, 75, 96, 99, 101, 119, 122, 124, 125, 127], "organ": 125, "orient": [59, 63, 96], "origin": [0, 4, 19, 32, 41, 91, 97, 98, 112, 119, 125, 127], "origin1": 19, "origin2": 19, "origin3": 19, "origin4": 19, "orthogon": 122, "oslash": 72, "ot": [2, 4, 5, 6, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 24, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 60, 62, 63, 64, 65, 67, 68, 69, 70, 74, 79, 80, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98, 124, 125, 126], "ot_": [0, 50, 112, 127], "ot_23": [42, 51], "ot_32": [42, 51], "ot_barycenter_energi": 112, "ot_cost": [0, 121], "ot_dist": [0, 121], "ot_emd": [26, 27, 28, 30, 33, 72, 127], "ot_emd_laplac": 30, "ot_glob": 50, "ot_global_": 50, "ot_l1l2": 26, "ot_lpl1": [26, 28], "ot_mapping_gaussian": [32, 33], "ot_mapping_linear": [32, 33], "ot_next_gamma": 117, "ot_sink_algo": 72, "ot_sinkhorn": [26, 27, 28, 29, 30, 33, 72], "ot_sinkhorn_semi": 34, "ot_sinkhorn_un": 34, "otda": [26, 29, 30, 35, 54, 103, 104, 122, 125, 126], "other": [0, 4, 9, 10, 65, 67, 71, 72, 96, 97, 100, 110, 111, 112, 114, 119, 120, 121, 122, 124, 125, 126], "otherwis": [0, 96, 99, 107, 108, 110, 112, 121, 122], "otim": [0, 100, 110], "otml": [103, 110, 124, 127], "otresult": [0, 78, 100], "otresultlazi": 0, "ots_loc": 50, "ots_local_": 50, "ott": 125, "our": [4, 6, 10, 50, 124, 125, 127], "out": [19, 27, 32, 45, 49, 69, 103, 108, 118, 125], "out_of_sample_map": 103, "outer": [49, 99], "outlier": [54, 71, 102, 122, 125, 126], "output": [0, 2, 8, 11, 19, 47, 97, 100, 101, 103, 108, 110, 112, 114, 120, 122, 124, 125, 127], "outsid": 125, "over": [0, 2, 11, 19, 23, 48, 50, 99, 101, 110, 112, 113, 115, 116, 122], "overal": 127, "overcom": 127, "overflow": [30, 89, 101, 124, 125], "overhead": [0, 101, 106, 110, 112, 121, 123, 127], "overlap": 127, "overlin": 109, "own": 125, "p": [0, 4, 7, 10, 23, 29, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 57, 58, 65, 68, 69, 72, 78, 82, 85, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 114, 115, 118, 119, 122, 123, 124, 125, 127], "p0": [65, 105], "p1": [22, 29, 42, 44, 45, 49, 50, 51, 68], "p12": 78, "p1dot": 78, "p2": [22, 29, 42, 44, 45, 49, 50, 51, 68], "p3": [22, 42, 44, 51], "p_": [48, 52, 110], "p_1": [49, 110], "p_2": [49, 110], "p_citi": 78, "p_efgw": 78, "p_egw": 78, "p_fact": 78, "p_fgw": 78, "p_gw": 78, "p_i": 112, "p_inter": [48, 52], "p_intra": [48, 52], "p_ix_": 112, "p_k": [19, 112, 114], "p_kx": 112, "p_list": [19, 22, 112], "p_lowrank": 78, "p_p": 115, "p_part_const": 78, "p_part_pen": 78, "p_quad": 78, "p_reg": 78, "p_sink": 78, "p_sink_lazi": 78, "p_sink_lazy_dens": 78, "p_unb_kl": 78, "p_unb_kl_reg": 78, "p_unb_l2": 78, "packag": [4, 48, 49, 52, 65, 101, 122, 125, 127], "pad": [59, 99], "pad_width": 99, "page": [64, 97, 103, 113, 124, 125], "pagerank": [50, 110], "pagerank_fus": 110, "pair": [102, 107, 108, 110, 112, 121, 122], "pairwis": [0, 42, 44, 49, 51, 78, 103, 110, 112, 125], "pann": [0, 112, 124, 127], "papadaki": [27, 33, 77, 103, 114, 124, 127], "paper": [0, 15, 101, 124, 125, 127], "paragraph": 97, "paralel": 125, "parallel": [0, 12, 54, 100, 112, 122, 125, 126, 127], "param": [38, 79, 122], "param_1": 122, "param_2": 122, "param_img": [26, 30], "paramet": [0, 4, 8, 9, 10, 11, 16, 26, 28, 29, 30, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 56, 74, 77, 78, 82, 88, 89, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "parent": [16, 17, 27, 31, 33, 47], "parenthes": 122, "pari": [0, 18, 20, 45, 57, 58, 112, 124, 127], "parmap": 122, "part": [0, 4, 50, 52, 65, 78, 101, 110, 121, 122, 124, 125], "part1": [42, 44, 50, 51], "part1_": 50, "part2": 50, "part2_": 50, "part_g1": [42, 44, 50, 51], "part_g2": [42, 44, 50, 51], "part_g3": [42, 44, 51], "part_method": [50, 110], "partial": [0, 53, 79, 94, 95, 98, 104, 110, 114, 120, 124, 125, 126], "partial_": 120, "partial_cg": 114, "partial_fgw_dist": [49, 110], "partial_fused_gromov_wasserstein": [49, 110], "partial_fused_gromov_wasserstein2": 110, "partial_gromov_wasserstein": [49, 92, 110, 115, 127], "partial_gromov_wasserstein2": [110, 115], "partial_gw_dist": [49, 92, 110, 115], "partial_id": 49, "partial_ot": 94, "partial_w_dist": 92, "partial_wasserstein": [78, 92, 94, 115, 127], "partial_wasserstein2": [115, 127], "partial_wasserstein_1d": [91, 115], "partial_wasserstein_lagrang": 115, "particip": 96, "particular": [64, 110, 112, 125], "particularli": [117, 127], "partit": [0, 42, 44, 51, 52, 64, 100, 103, 110, 113, 124, 125, 127], "partli": 127, "partner": [98, 124], "pass": [0, 50, 78, 97, 110, 112, 115, 119, 120, 122], "past": 125, "patch": [21, 23, 38, 62, 63, 69], "path": [16, 17, 27, 31, 33, 47, 50, 54, 95, 104, 117, 124, 125, 126], "pathcollect": [6, 47, 82], "pathlib": [16, 17, 27, 31, 33, 47], "patholog": [0, 118], "pati": [64, 103, 113, 124], "pattern": [0, 77, 103, 114, 118, 124, 127], "paul": [5, 124], "pave": 125, "pca": [47, 125], "pcolormesh": 8, "pdf": [75, 82, 97, 108, 127], "pdf1": 82, "pdf_t": 82, "pdf_von_mis": 82, "pe": 125, "pedro": [19, 101, 112, 124], "penal": [0, 54, 78, 95, 104, 117, 121, 124, 126], "peopl": 125, "pep": 125, "pep8": [97, 125], "per": [27, 31, 33, 47, 73, 119, 124], "perf_count": 5, "perfectli": 52, "perform": [0, 4, 5, 6, 10, 50, 64, 67, 72, 97, 100, 103, 110, 112, 113, 122, 124, 125, 127], "period": 82, "perm": [0, 83, 118], "perman": 96, "permiss": 96, "permit": 73, "permut": [0, 4, 6, 10, 99, 110, 118], "perplex": 45, "perrot": [32, 33, 98, 103, 113, 124, 127], "person": [96, 98], "perturb": 112, "peyr": [27, 33], "peyr\u00e9": [0, 11, 14, 15, 44, 46, 57, 58, 70, 77, 89, 90, 98, 100, 101, 103, 107, 110, 111, 112, 114, 115, 120, 121, 124, 127], "pfda": 65, "pfgw": [49, 110], "pfgw_e": 49, "pgd": [44, 46, 110], "pgtol": 101, "pgw": [46, 49, 110], "pgw_e": 49, "pham": [0, 85, 112, 118, 124], "phd": [64, 103, 113, 124], "phi": [7, 43, 64, 103, 112, 113, 117], "phi2": 43, "phi_j": 117, "phi_lu": [64, 113], "phi_u": 117, "phone": 125, "physic": 96, "pi": [0, 3, 7, 8, 11, 19, 22, 31, 32, 41, 49, 50, 57, 62, 63, 65, 69, 75, 82, 85, 105, 110, 112, 113, 120, 122, 125], "pi1": 110, "pi2": 110, "pi_": [63, 105, 110, 113], "pi_1": [110, 112], "pi_2": 110, "pi_feat": [102, 110], "pi_featur": [62, 69, 102], "pi_k": 112, "pi_list": [112, 117], "pi_samp": [102, 110], "pi_samp2": 110, "pi_sampl": [62, 69, 102], "pick": [97, 120], "piecewis": 117, "pierr": [64, 103, 113], "pillow": 97, "pinv": 99, "pip": [72, 97, 125, 127], "pipelin": 122, "pipi": 125, "pivot": [0, 118], "pixel": [27, 31, 47], "pk": 114, "pkdd": [50, 110, 124], "pl": [2, 3, 4, 6, 7, 8, 9, 10, 11, 15, 18, 21, 22, 26, 28, 29, 30, 32, 34, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 56, 57, 58, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 88, 89, 90, 92, 93, 94], "place": [97, 116, 125], "plai": 0, "plain": 122, "plan": [0, 2, 4, 12, 39, 42, 44, 49, 51, 52, 54, 56, 58, 68, 69, 73, 74, 81, 86, 91, 93, 94, 100, 101, 102, 106, 107, 108, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127], "plan_dens": 37, "plan_dual_entrop": [3, 8], "plan_dual_quadrat": 3, "plan_init": 0, "plane": 72, "planetari": [101, 124], "plasma": 38, "platform": [97, 125], "pleas": [0, 49, 97, 99, 110, 112, 115, 121, 124], "plog": 46, "plot": [0, 4, 5, 10, 14, 15, 17, 19, 23, 42, 44, 48, 50, 51, 52, 53, 54, 58, 64, 67, 69, 77, 78, 91, 125, 126], "plot1d_mat": [37, 58, 70, 73, 77, 79, 88, 125], "plot2d_samples_mat": [3, 28, 56, 66, 74, 75], "plot_ax": 29, "plot_barycenter_1d": [14, 24, 126], "plot_barycenter_fgw": [41, 53, 126], "plot_barycenter_lp_vs_entrop": [15, 24, 126], "plot_compute_emd": [76, 80, 126], "plot_compute_wasserstein_circl": [82, 86, 126], "plot_conv_sinkhorn_ti": [90, 95, 126], "plot_convolutional_barycent": [16, 24, 126], "plot_coot": [62, 71, 126], "plot_debiased_barycent": [17, 24, 126], "plot_dmmot": [67, 71, 126], "plot_dual_ot_pytorch": [3, 12, 126], "plot_entropic_semirelaxed_fgw": [42, 53, 126], "plot_ewca": [63, 71, 126], "plot_factored_coupl": [56, 60, 126], "plot_fgw": [43, 53, 126], "plot_fgw_solv": [44, 53, 126], "plot_free_support_barycent": [18, 24, 126], "plot_free_support_barycenter_generic_cost": [19, 24, 126], "plot_free_support_sinkhorn_barycent": [20, 24, 126], "plot_gaussian_barycent": [21, 24, 126], "plot_generalized_free_support_barycent": [22, 24, 126], "plot_gmm_barycent": [23, 24, 126], "plot_gmm_flow": [38, 39, 126], "plot_gmmot_plan": [37, 39, 126], "plot_gnn_tfgw": [45, 53, 126], "plot_graph": [4, 48, 52], "plot_gromov": [46, 53, 126], "plot_gromov_barycent": [47, 53, 126], "plot_gromov_wasserstein_dictionary_learn": [48, 53, 126], "plot_intro_ot": [72, 80, 126], "plot_logo": [68, 71, 126], "plot_lowrank_gw": [57, 60, 126], "plot_lowrank_sinkhorn": [58, 60, 126], "plot_nystroem_approxim": [59, 60, 126], "plot_optim_gromov_pytorch": [4, 12, 126], "plot_optim_otreg": [77, 80, 126], "plot_ot_1d": [73, 80, 126], "plot_ot_2d_sampl": [74, 80, 126], "plot_ot_batch": [5, 12, 126], "plot_ot_l1_vs_l2": [75, 80, 126], "plot_otda_class": [26, 35, 126], "plot_otda_color_imag": [27, 35, 126], "plot_otda_d2": [28, 35, 126], "plot_otda_jcpot": [29, 35, 126], "plot_otda_laplacian": [30, 35, 126], "plot_otda_linear_map": [31, 35, 126], "plot_otda_map": [32, 35, 126], "plot_otda_mapping_colors_imag": [33, 35, 126], "plot_otda_semi_supervis": [34, 35, 126], "plot_outlier_detection_with_coot_and_unbalanced_coot": [69, 71, 126], "plot_partial_1d": [91, 95, 126], "plot_partial_fgw": [49, 53, 126], "plot_partial_transport": 91, "plot_partial_wass_and_gromov": [92, 95, 126], "plot_quantized_gromov_wasserstein": [50, 53, 126], "plot_quickstart_guid": [78, 80, 126], "plot_regpath": [93, 95, 126], "plot_semirelaxed_fgw": [51, 53, 126], "plot_semirelaxed_gromov_wasserstein_barycent": [52, 53, 126], "plot_sinkhorn_gradi": [2, 12, 126], "plot_sliced_plan": [83, 86, 126], "plot_sliced_wass_grad_flow_pytorch": [6, 12, 126], "plot_solve_vari": [79, 80, 126], "plot_spher": 7, "plot_ssnb": [64, 71, 126], "plot_ssw_unif_torch": [7, 12, 126], "plot_stoch_continuous_ot_pytorch": [8, 12, 126], "plot_stochast": [70, 71, 126], "plot_styl": [37, 116], "plot_surfac": 85, "plot_unbalanced_ot": [94, 95, 126], "plot_unmix_optim_torch": [9, 12, 126], "plot_uot_1d": [88, 95, 126], "plot_uot_barycenter_1d": [89, 95, 126], "plot_vari": [84, 86, 126], "plot_variance_ssw": [85, 86, 126], "plot_wass1d_torch": [10, 12, 126], "plot_wass2_gan_torch": [11, 12, 126], "plot_wda": [65, 71, 126], "plot_weakot_vs_ot": [66, 71, 126], "plot_wirefram": [7, 85], "plt": [5, 14, 16, 17, 19, 20, 22, 23, 27, 31, 33, 37, 41, 47, 50, 59, 64, 83, 91], "plug": 125, "pmlr": [0, 6, 11, 17, 64, 90, 101, 103, 106, 107, 113, 121, 124, 127], "pn": 110, "png": [6, 16, 17, 18, 22, 47, 68], "po": [41, 42, 44, 45, 47, 49, 50, 51, 103], "poggio": [0, 121, 124, 127], "point": [0, 19, 20, 22, 23, 43, 44, 46, 47, 49, 57, 59, 67, 68, 69, 70, 78, 82, 83, 91, 97, 101, 103, 105, 107, 108, 110, 111, 112, 113, 115, 118, 122, 124, 125, 127], "pointer": [78, 125, 127], "pointwis": [46, 125], "pointwise_gromov_wasserstein": [46, 110], "poli": [14, 89], "polici": 96, "polit": 96, "polo": [0, 121, 124, 127], "polycollect": [14, 15, 89], "polynomi": 125, "polytechniqu": [2, 3, 4, 6, 8, 9, 10, 11, 18, 21, 56, 66, 68], "polytehniqu": [37, 38], "polytop": 113, "pool": [109, 125], "pooladian": [103, 124], "pooling_tfgw": 45, "popul": [110, 115], "popular": 127, "pos1": [42, 44, 49, 50, 51], "pos2": [42, 44, 49, 50, 51], "posinf": 99, "posit": [0, 4, 10, 14, 15, 17, 48, 49, 52, 72, 73, 76, 77, 78, 79, 88, 89, 92, 96, 99, 101, 103, 107, 110, 112, 114, 115, 116, 122, 124, 127], "possibl": [0, 97, 101, 103, 112, 118, 122, 125, 127], "post": 96, "pot": [5, 9, 10, 16, 19, 23, 26, 46, 47, 50, 54, 62, 64, 69, 70, 71, 78, 92, 94, 98, 99, 102, 110, 111, 122, 125, 126], "pot_backend_disable_": 127, "pot_backend_disable_tensorflow": 127, "potenti": [0, 8, 11, 44, 50, 54, 71, 78, 100, 101, 103, 110, 111, 112, 113, 118, 119, 120, 121, 122, 124, 125, 126], "potential_a": 122, "potential_b": 122, "potentials_init": 0, "power": [0, 19, 72, 99, 112, 115, 118], "powernorm": 63, "pp": [0, 6, 11, 46, 77, 90, 101, 103, 106, 107, 114, 118, 121, 124, 127], "ppa": [44, 46, 110, 125], "pq": [0, 110], "pr": [97, 99, 125], "practic": [0, 11, 97, 100, 101, 103, 105, 110, 113, 125, 127], "pre": [0, 50, 72, 97, 99, 101, 110, 127], "preced": 49, "precis": [0, 69, 99, 101, 103, 110, 111, 112, 125], "precomput": [4, 47, 48, 52, 100, 110, 127], "pred": 45, "predict": [27, 64, 103, 110, 113], "prefer": [0, 97, 105, 112], "prefix": 97, "preprin": [0, 121], "preprint": [0, 19, 22, 23, 77, 83, 89, 101, 103, 105, 108, 112, 114, 118, 121, 124, 127], "preprocess": 50, "present": [27, 32, 34, 93, 97], "preserv": 78, "press": 125, "prevent": [125, 127], "previou": [102, 107, 110, 117], "previous": [4, 114], "primal": [67, 112, 120], "prime": 112, "print": [0, 3, 4, 5, 7, 8, 9, 11, 42, 44, 45, 46, 48, 51, 52, 57, 62, 67, 69, 70, 72, 78, 83, 92, 97, 101, 102, 103, 105, 106, 110, 111, 112, 113, 114, 115, 119, 121, 123, 125], "print_g": 29, "print_period": 101, "print_rat": 112, "prior": [0, 97, 101, 112, 127], "prioriti": [0, 112], "privat": 96, "probabl": [0, 4, 10, 22, 45, 48, 52, 69, 100, 103, 107, 108, 110, 112, 118, 124], "problem": [0, 9, 10, 11, 12, 14, 15, 28, 29, 34, 52, 64, 67, 68, 69, 89, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127], "proc": 119, "procedur": [107, 127], "proceed": [0, 17, 73, 101, 118, 119, 124, 127], "process": [0, 32, 33, 42, 44, 45, 50, 51, 62, 69, 70, 72, 83, 100, 101, 102, 103, 107, 110, 112, 113, 118, 119, 120, 121, 124, 125, 127], "processor": 125, "prod": 99, "produc": [44, 46, 110, 112], "product": [0, 59, 72, 78, 99, 100, 103, 107, 108, 110, 117, 121, 122, 127], "profession": 96, "profil": 97, "program": [97, 101, 103, 112, 114, 124, 125, 127], "progress": 97, "prohibit": 127, "proj": [0, 105, 118], "proj_circl": 19, "proj_sdp": 38, "proj_simplex": [4, 9, 10, 38, 69], "projc": 101, "project": [0, 4, 6, 7, 8, 9, 10, 14, 15, 19, 20, 26, 28, 29, 30, 37, 42, 44, 46, 48, 50, 51, 52, 57, 58, 67, 69, 72, 74, 77, 78, 89, 92, 96, 97, 98, 100, 101, 103, 105, 107, 108, 110, 112, 113, 115, 118, 119, 121, 122, 124, 125, 127], "projection_robust_wasserstein": 105, "projection_simplex": 119, "projection_sparse_simplex": 122, "projection_sphere_to_circl": 118, "projector": 127, "projfda": 65, "projr": 101, "projwda": 65, "promot": [48, 101, 110, 125, 127], "prop": [29, 52, 115], "propag": 103, "proper": [99, 110, 125], "properli": 97, "properti": [4, 11, 103, 110, 112, 113, 122, 124, 127], "proport": [4, 42, 44, 48, 49, 51, 52, 59, 72, 101, 103, 104, 116], "proportion": 49, "proportionali": [42, 44], "proportionn": 44, "proportions_": [29, 103], "propos": [0, 6, 9, 11, 14, 15, 17, 22, 45, 63, 65, 77, 84, 85, 89, 90, 101, 103, 106, 107, 108, 110, 111, 112, 113, 115, 120, 121, 123, 125, 127], "proposit": [110, 111, 119, 120], "proven": 127, "provid": [0, 2, 4, 5, 23, 48, 49, 50, 52, 72, 78, 97, 98, 99, 100, 101, 103, 107, 108, 110, 111, 112, 114, 116, 117, 121, 122, 124, 125, 127], "proxim": [0, 5, 44, 46, 100, 110, 125], "pseudo": [72, 99], "pseudorandom": 67, "pt": 29, "public": [96, 97, 125], "publish": [50, 96, 101, 110, 124], "puigcerv": [119, 124], "pull": [99, 125], "pure": 127, "purpos": [0, 46, 92, 118, 127], "push": [97, 125, 127], "pushforward": [0, 118], "put": [67, 82], "pwda": 65, "py": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 99, 122, 125, 126], "pykeop": [0, 78], "pylab": [2, 4, 6, 9, 10, 15, 18, 21, 22, 26, 28, 29, 30, 32, 34, 38, 42, 44, 46, 48, 49, 50, 51, 52, 56, 57, 58, 62, 63, 65, 66, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 84, 85, 88, 89, 90, 92, 93, 94], "pymanopt": [0, 105, 124, 127], "pypi": [101, 124, 125], "pyplot": [3, 5, 7, 8, 11, 14, 16, 17, 19, 20, 22, 23, 27, 31, 33, 37, 41, 43, 45, 47, 50, 59, 64, 67, 68, 69, 83, 91], "pyproject": 125, "pyrro": [0, 118, 124, 127], "pytest": [97, 125], "python": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 99, 122, 125, 126, 127], "python3": [4, 48, 49, 52, 65], "python3stat": 125, "python_variable_method": 9, "pythonot": [72, 99, 124, 125], "pytorch": [0, 12, 19, 69, 98, 99, 104, 109, 112, 116, 120, 122, 124, 125, 126, 127], "q": [0, 10, 43, 46, 48, 50, 57, 58, 89, 92, 99, 101, 102, 110, 111, 112, 114, 115, 117, 122, 127], "qcqp": 113, "qfgw": 50, "qfgw_dist": 50, "qgw": [50, 110], "qgw_dist": 50, "qquad": 112, "qr": 99, "quad": [0, 9, 100, 101, 102, 103, 105, 106, 110, 112, 113, 114, 115, 119, 120, 121, 122, 123, 127], "quadmesh": 8, "quadrat": [0, 12, 54, 94, 100, 103, 104, 110, 114, 115, 116, 120, 122, 124, 125, 126], "quadraticmetr": [0, 100], "qualiti": [67, 125], "quang": [62, 69, 124], "quantifi": 121, "quantil": [0, 110, 112, 115], "quantiti": [28, 34, 48], "quantiz": [53, 54, 98, 110, 124, 125, 126], "quantized_fused_gromov_wasserstein": [50, 110, 125], "quantized_fused_gromov_wasserstein_partit": [50, 110, 125], "quantized_fused_gromov_wasserstein_sampl": [50, 110, 125], "question": 124, "quick": [72, 125], "quicker": [125, 127], "quickli": [67, 72, 97, 125], "quickstart": [54, 80, 107, 114, 116, 119, 122, 124, 125, 126, 127], "quit": [64, 125, 127], "r": [0, 6, 10, 11, 14, 15, 17, 19, 29, 32, 33, 42, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 62, 63, 64, 65, 67, 69, 70, 72, 73, 76, 77, 79, 82, 83, 85, 88, 89, 90, 92, 93, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127], "r1": 57, "r2": 57, "r_": [110, 117], "ra": 117, "race": 96, "radiu": 19, "radon": [0, 6, 84, 118, 124, 127], "rais": [0, 97, 99, 101, 110, 111, 112, 114, 115, 122, 125], "rak": 125, "rakotomamonji": [0, 65, 77, 98, 101, 103, 105, 114, 124, 127], "rand": [2, 4, 7, 11, 19, 31, 37, 56, 65, 67, 90, 92, 94, 99, 100, 108], "randint": [8, 27, 33, 41, 45, 67], "randn": [0, 3, 5, 6, 8, 9, 11, 19, 20, 23, 31, 38, 43, 46, 59, 62, 65, 69, 70, 78, 83, 85, 92, 99, 100, 118, 125], "random": [0, 4, 5, 6, 8, 9, 11, 18, 19, 20, 23, 27, 29, 31, 33, 37, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 56, 58, 59, 62, 63, 64, 65, 67, 69, 70, 78, 82, 83, 85, 90, 91, 92, 93, 94, 99, 100, 101, 103, 104, 105, 108, 109, 110, 111, 118, 120, 122, 125], "random_init": 4, "random_product": 110, "random_se": 49, "random_split": 45, "random_st": [0, 4, 45, 47, 48, 52, 59, 63, 101, 104, 105, 110, 111, 120], "randomint": 41, "randomli": 110, "randomst": [0, 4, 9, 23, 27, 31, 33, 47, 63, 64, 70, 103, 104, 105, 110, 118, 120, 122], "randperm": 99, "rang": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 19, 20, 21, 23, 29, 38, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 62, 63, 64, 67, 68, 69, 72, 76, 78, 82, 83, 84, 85, 89, 90, 91, 93, 94, 125], "rangl": [0, 99, 100, 101, 110, 111, 113, 118], "rangle_f": [0, 100, 101, 103, 110, 112, 113, 114, 115, 120, 121], "rank": [0, 50, 56, 59, 60, 72, 98, 104, 106, 110, 111, 116, 119, 122, 124, 125, 126], "ransport": 123, "rao": 115, "rapidli": 127, "raspberri": 125, "rate": [9, 110, 112, 120], "ratio": 4, "ravel": [8, 41, 93, 94, 119, 122], "rbrace": 64, "rceil": 111, "re": [0, 5, 84, 85, 92, 93, 99, 100, 112, 122], "reach": [65, 125], "read": [110, 114, 124], "readabl": [78, 125], "reader": [97, 127], "readi": 97, "readm": [125, 127], "readthedoc": 125, "real": [0, 65, 112, 115], "realign": 127, "realist": 11, "realli": 125, "realpath": [16, 17, 27, 31, 33, 47], "reamd": 125, "reason": [0, 96, 101, 125, 127], "recal": [34, 117], "recast": 117, "recast_ot_as_lasso": 117, "recast_semi_relaxed_as_lasso": 117, "receiv": [4, 97], "recent": [125, 127], "recognit": [0, 118, 124, 127], "recommend": [0, 97, 101, 110, 125, 127], "recomput": 100, "recompute_const": 100, "reconstruct": [41, 48, 110, 115, 119, 125], "reconstruction_error": 48, "record": [0, 10, 97, 101, 102, 103, 106, 107, 110, 111, 112, 113, 114, 115, 119, 120, 121, 123], "recov": [0, 4, 11, 69, 78, 110, 112, 120, 121, 125, 127], "rect": 63, "rectangl": 63, "red": [5, 10, 19, 27, 33, 43, 45, 57, 64, 72], "redcross": [6, 16, 18, 22], "redko": [29, 30, 62, 69, 98, 101, 102, 103, 110, 124], "reduc": [0, 122], "reduce_lazytensor": 122, "reduct": [78, 105, 110, 122, 124, 125], "refactor": 125, "refer": [10, 42, 44, 51, 73, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 119, 120, 121, 122, 123, 125], "reflect": [6, 7, 11, 22, 93, 125], "reformul": 117, "reg": [0, 2, 3, 5, 8, 14, 15, 16, 17, 20, 26, 27, 28, 29, 30, 44, 46, 48, 49, 57, 58, 59, 63, 65, 70, 72, 73, 74, 76, 77, 78, 79, 89, 90, 92, 93, 94, 100, 101, 103, 105, 106, 107, 110, 111, 112, 114, 115, 117, 119, 120, 121, 124, 125, 127], "reg0": 101, "reg1": [77, 114], "reg2": [77, 114], "reg_": [0, 26, 27, 28, 29, 30, 33, 34, 103, 121], "reg_1": 114, "reg_2": 114, "reg_cl": [26, 28, 103], "reg_div": [121, 125], "reg_gl": 79, "reg_init": [0, 111], "reg_lap": [30, 103], "reg_m": [0, 94, 103, 115, 121, 127], "reg_m_kl": [90, 94], "reg_m_l2": 94, "reg_margin": [69, 110], "reg_mi": [0, 121], "reg_paramet": 72, "reg_src": [30, 103], "reg_typ": [0, 5, 73, 78, 79, 90, 100, 103, 110, 119, 121, 127], "reg_type_gl": 79, "regard": [96, 125], "regardless": [96, 125], "region": 105, "regm_div": 121, "regpath": 0, "regress": [0, 93, 97, 117, 121, 124], "regul": 119, "regular": [0, 5, 12, 14, 16, 20, 24, 26, 27, 28, 29, 33, 35, 44, 46, 48, 49, 53, 58, 64, 74, 80, 89, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126], "regularis": 101, "regularization_path": 93, "reject": 96, "rel": [0, 26, 43, 44, 46, 47, 50, 52, 77, 101, 103, 106, 110, 113, 114, 123], "relat": [50, 101, 110, 121, 124, 125, 127], "relax": [0, 44, 53, 54, 64, 78, 88, 98, 103, 110, 114, 117, 119, 121, 124, 125, 126, 127], "releas": [2, 3, 4, 6, 8, 9, 10, 11, 17, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 45, 46, 48, 49, 50, 52, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 84, 85, 90, 92, 93, 94, 101, 124], "relev": 125, "reli": [0, 5, 101, 110, 124, 127], "religion": 96, "reload_ext": 43, "reloc": 125, "relu": [8, 11], "remain": [10, 125], "remark": [103, 107, 127], "remi": [3, 4, 6, 8, 9, 10, 11, 14, 15, 18, 21, 26, 27, 28, 29, 31, 32, 33, 34, 37, 38, 45, 56, 62, 65, 66, 68, 69, 72, 73, 74, 75, 76, 78, 79], "remot": [101, 124], "remov": [96, 99, 112, 117, 122, 125], "removimg": 125, "renam": 125, "render": 125, "reorgan": 125, "rep": 99, "rep_idx": 50, "rep_indic": [50, 110], "rep_indices1": 50, "rep_indices2": 50, "rep_method": [50, 110], "repartit": [110, 115], "repeat": 99, "repeat_delai": [6, 7, 11, 22, 93], "repeatedli": 5, "repercuss": 96, "replac": [99, 110, 125, 127], "repo": [97, 125], "report": [96, 97, 124, 125], "repositori": [97, 125], "repres": [0, 28, 34, 41, 50, 64, 78, 96, 101, 110, 112, 118, 127], "represent": [0, 42, 44, 48, 50, 51, 52, 70, 83, 85, 96, 103, 110, 112, 114, 118, 119, 120, 124, 127], "reproduc": [0, 15, 97, 110, 120, 127], "request": [110, 112, 118, 122, 124], "requir": [0, 2, 19, 41, 50, 64, 69, 78, 99, 103, 110, 112, 113, 115, 118, 122, 124, 125, 127], "require_sort": [0, 112], "requires_grad": [2, 3, 9, 69], "requires_grad_": [2, 4, 6, 7, 10, 19, 38], "res0": 92, "res_autodiff": 2, "res_batch": 5, "res_envelop": 2, "res_last_step": 2, "res_mean": [84, 85], "res_std": [84, 85], "resampl": 38, "rescal": [0, 58, 110, 111, 116], "rescale_cost": [0, 57, 58, 110, 111], "rescale_for_imshow_plot": 37, "rescale_plan": 110, "research": [0, 98, 101, 110, 124, 125, 127], "reservoir": [115, 127], "reshap": [8, 27, 31, 33, 41, 45, 47, 49, 50, 57, 58, 65, 67, 73, 76, 77, 79, 88, 92, 93, 99, 101, 110, 115, 117], "resolut": 127, "resolv": [97, 107], "resourc": 19, "resp": [0, 100, 101, 110, 114], "respect": [0, 9, 22, 23, 38, 45, 48, 50, 72, 78, 96, 99, 101, 102, 103, 105, 109, 110, 111, 112, 113, 121, 124, 125, 127], "rest": 110, "restrict": 101, "restructur": 125, "restructuredtext": 97, "result": [0, 4, 5, 23, 72, 78, 96, 97, 99, 100, 110, 112, 122, 125, 127], "results_batch": 5, "results_values_batch": 5, "results_values_list": 5, "retain": [0, 118], "retriev": 119, "return": [0, 4, 5, 6, 7, 8, 9, 11, 19, 21, 22, 23, 27, 30, 31, 33, 38, 41, 42, 44, 45, 46, 47, 49, 50, 51, 65, 72, 77, 78, 79, 82, 93, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "return_invers": 99, "return_matrix": [0, 112, 127], "return_valu": 122, "returncost": [0, 121], "revers": [10, 99], "review": [96, 97], "reweigh": [42, 51, 52], "rewrit": 125, "rewritten": [0, 100], "rgb": 49, "rgba": 49, "rho": 112, "rho_": [110, 112], "rho_1": 110, "rho_2": 110, "rho_f": 110, "ri": 117, "ridg": 105, "riemannian": [105, 124, 127], "right": [0, 9, 17, 18, 42, 44, 50, 51, 57, 64, 69, 72, 79, 88, 91, 96, 97, 100, 101, 103, 107, 110, 111, 112, 118, 119, 120, 122, 123, 125], "right_factor": [59, 111], "right_margin": 0, "rightarrow": 112, "rigollet": [0, 101, 106, 107, 124, 127], "rmsprop": 11, "rname": 79, "rng": [4, 9, 23, 27, 31, 33, 47, 63, 64, 70], "roberto": [0, 123, 124, 127], "robust": [98, 105, 124, 125, 127], "rogerstanimoto": [0, 72, 122], "rohd": [0, 112, 124], "rolet": [0, 70, 73, 98, 103, 119, 120, 124, 127], "romain": [0, 41, 43, 44, 46, 49, 98, 110, 124], "ronak": [67, 98, 112, 124], "ronakrm": 67, "root": [99, 124, 127], "rotat": [47, 72], "roughli": 125, "round": [0, 4, 42, 44, 46, 48, 49, 50, 51, 52, 57, 72, 110, 115, 121], "roussillon": [101, 124], "row": [49, 54, 71, 99, 101, 102, 110, 117, 122, 126], "rr": 112, "rtol": 99, "rudi": [0, 101, 124], "ruff": 125, "rule": [97, 114], "run": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 99, 101, 112, 118, 124, 125], "runner": 125, "runtim": [5, 44], "runtimewarn": [30, 44, 46, 89], "russellrao": [0, 72, 122], "rvert": [0, 107], "r\u00e9mi": [0, 4, 6, 10, 18, 21, 41, 42, 43, 44, 45, 46, 49, 51, 52, 98, 101, 103, 109, 110, 114, 124, 127], "s_": 101, "s_1": 9, "s_2": 9, "s_d": 107, "s_i": [103, 111], "s_j": 103, "s_k": 9, "saclai": [18, 20, 45], "sag": [70, 120], "sag_entropic_transport": 120, "sag_pi": 70, "sai": 41, "saint": [22, 112, 124], "sale": 72, "salmona": [103, 107, 124], "salomon": [0, 112, 124], "same": [0, 5, 32, 42, 46, 49, 50, 51, 72, 78, 92, 99, 100, 102, 108, 110, 112, 118, 121, 122, 125, 127], "sampl": [0, 3, 5, 9, 27, 33, 48, 49, 52, 54, 56, 60, 64, 65, 66, 68, 70, 71, 72, 74, 82, 84, 85, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127], "sampled_gromov_wasserstein": [46, 110], "samples_sourc": 5, "samples_target": 5, "samson": [0, 123, 124, 127], "samuel": 98, "satisfi": [0, 100, 110, 114], "save": [0, 45, 68, 100, 101, 110], "savefig": 68, "sbm": [4, 42, 44, 45, 48, 50, 51, 52], "sc": 41, "scalabl": [0, 100, 101, 124, 127], "scalar": [0, 9, 99, 100, 101, 102, 110, 121, 122], "scalarmapp": [41, 49], "scale": [0, 42, 44, 47, 50, 51, 57, 63, 68, 70, 89, 100, 101, 103, 110, 111, 112, 113, 119, 120, 121, 122, 124, 125, 127], "scaled_atom": 48, "scaled_f": 48, "scaled_gweight": [42, 44, 49, 51], "scatter": [3, 4, 6, 7, 8, 9, 11, 18, 19, 20, 21, 22, 26, 28, 29, 30, 32, 33, 34, 37, 38, 43, 45, 46, 47, 48, 49, 50, 52, 59, 63, 64, 65, 72, 82, 83, 85, 92, 93, 94], "scetbon": [0, 57, 58, 110, 111, 124], "scheme": [0, 102, 110, 111, 125], "schiebing": [0, 106, 124, 127], "schmitzer": [0, 89, 101, 103, 115, 121, 124, 127], "schur": 117, "schutz": 124, "schwing": [0, 118, 124, 127], "sci": 2, "scienc": [15, 23, 27, 33, 37, 77, 103, 107, 108, 114, 124, 127], "scientif": [0, 14, 15, 101, 115, 121, 124, 125, 127], "scikit": [97, 110, 122, 125, 127], "scilimit": 2, "scipi": [0, 41, 46, 47, 49, 50, 72, 82, 92, 97, 99, 110, 112, 115, 119, 121, 122, 124, 125, 127], "screen": [0, 101, 124, 127], "screenkhorn": [0, 98, 101, 125, 127], "script": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 125], "seamlessli": [125, 127], "search": [0, 41, 42, 51, 72, 101, 110, 112, 114, 124, 125, 127], "searchsort": [10, 99], "sebban": 110, "second": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 99, 102, 110, 111, 112, 114, 118, 119, 122, 124, 125, 127], "section": [72, 111, 125, 127], "see": [0, 4, 8, 11, 23, 37, 69, 72, 78, 97, 99, 100, 101, 103, 104, 105, 107, 110, 111, 112, 113, 115, 117, 119, 120, 121, 125, 127], "seed": [0, 5, 6, 8, 23, 29, 37, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 59, 64, 65, 67, 69, 78, 83, 90, 91, 93, 94, 99, 103, 104, 108, 110, 118, 122], "seed_g1": [42, 44, 50, 51], "seed_g2": [42, 44, 50, 51], "seed_g3": [42, 44, 51], "seed_init": [0, 57, 110, 111], "seek": [97, 127], "seem": 97, "seen": [4, 101, 110, 112, 127], "segui": [0, 18, 70, 73, 103, 119, 120, 124, 127], "select": [0, 45, 50, 72, 103, 107, 110, 112, 122, 127], "selected_gamma": 93, "self": [8, 11, 45, 103, 122], "semi": [0, 35, 53, 54, 98, 99, 103, 104, 110, 114, 117, 119, 120, 121, 122, 124, 125, 126, 127], "semi_dual_obj_grad": 119, "semi_relax": [93, 117], "semi_relaxed_next_gamma": 117, "semi_relaxed_path": 117, "semicontinu": 70, "semidiscrete_wasserstein2_unif_circl": [0, 82, 112], "semilogi": [7, 9, 11], "semin": 127, "semirelax": 0, "semirelaxed_cg": 114, "semirelaxed_fgw_barycent": [52, 110, 125], "semirelaxed_fused_gromov_wasserstein": [51, 110], "semirelaxed_fused_gromov_wasserstein2": 110, "semirelaxed_gromov_barycent": [52, 110], "semirelaxed_gromov_wasserstein": [51, 110], "semirelaxed_gromov_wasserstein2": 110, "semirelaxed_init_plan": [52, 110, 125], "send": [22, 97], "sens": [23, 64, 72, 101, 112, 124, 127], "sent": [42, 44, 127], "sep": 125, "separ": [96, 125, 127], "septemb": 125, "septier": [0, 85, 112, 118, 124], "sequenc": [49, 99], "sequenti": 5, "seri": 72, "set": [0, 11, 23, 26, 28, 30, 35, 41, 45, 49, 50, 52, 54, 64, 67, 72, 78, 96, 99, 100, 101, 103, 104, 109, 110, 112, 114, 117, 118, 121, 122, 124, 126, 127], "set1": 29, "set_alpha": [14, 89], "set_arrai": [41, 49], "set_aspect": [43, 83], "set_gradi": [99, 125], "set_major_loc": [19, 63], "set_param": 122, "set_titl": [7, 14, 17, 19, 20, 23, 50, 57, 59, 69, 83, 91], "set_vis": 17, "set_xlabel": [14, 19, 85, 89], "set_xlim": [7, 20, 85, 91], "set_xlim3d": [14, 89], "set_xtick": [17, 22, 59, 83, 85, 91], "set_ylabel": [14, 17, 19, 72, 85, 89], "set_ylim": [7, 20, 85, 91], "set_ylim3d": [14, 89], "set_yscal": 19, "set_ytick": [17, 22, 59, 83, 85, 91], "set_yticklabel": 63, "set_zlabel": [14, 85, 89], "set_zlim": 85, "set_zlim3d": [14, 89], "set_ztick": [22, 85], "setup": [50, 125], "setuptool": 125, "seuclidean": [0, 72, 122], "seventh": [44, 110, 124], "sever": [52, 124, 125, 127], "sexual": 96, "sgd": [70, 110, 112, 120], "sgd_dual_pi": 70, "sgd_entropic_regular": 120, "sgw": 46, "shade": 48, "shahbazi": [0, 83, 118, 124], "shannon": 127, "shape": [0, 4, 6, 7, 10, 14, 15, 17, 18, 19, 22, 23, 27, 29, 31, 33, 34, 38, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 65, 68, 72, 89, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "share": [125, 127], "sharei": [17, 43], "sharex": 43, "sharper": [0, 101, 127], "shayan": [0, 112, 124], "shenzhen": [101, 124], "shi": [0, 118, 124], "shift": [35, 54, 101, 103, 104, 122, 124, 125, 126, 127], "shiftx": [42, 44, 49, 50, 51], "shop": 72, "shortest": 50, "shortest_path": [41, 49, 50], "shortli": 127, "should": [0, 34, 49, 52, 69, 78, 94, 97, 99, 100, 101, 103, 105, 110, 111, 112, 117, 119, 121, 122, 124, 125, 127], "show": [2, 4, 5, 10, 14, 16, 17, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 58, 59, 62, 63, 64, 65, 67, 70, 72, 73, 74, 75, 76, 77, 78, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 112], "showcas": 125, "showflier": 2, "shown": [23, 78, 116, 127], "shrink": [63, 72], "shuffl": [45, 63], "siam": [0, 14, 15, 23, 27, 33, 37, 77, 101, 103, 107, 108, 112, 114, 115, 121, 124, 127], "siddiqui": [0, 118, 124, 127], "side": [99, 117], "sig": 43, "sig2": 43, "sigma": [0, 11, 29, 31, 32, 33, 41, 59, 62, 103, 104, 107, 111, 113, 118, 122], "sigma_": [0, 103, 107], "sigma_1": 21, "sigma_2": 21, "sigma_3": 21, "sigma_4": 21, "sigma_b": 107, "sigma_d": 48, "sigma_i": 107, "sigma_k": [0, 118], "sigma_n": [52, 110], "sigma_t": [0, 103, 107], "sign": [56, 64, 99, 103, 107, 125], "sign_eig": [103, 107], "signal": [101, 124, 127], "signatur": 125, "signific": [5, 125], "significantli": 5, "sim": [0, 103, 113, 118], "sim_param": 103, "similar": [0, 11, 34, 69, 72, 78, 103, 110, 117, 127], "similarity_param": 103, "similarli": [78, 127], "simpl": [0, 4, 5, 9, 16, 47, 69, 72, 104, 112, 122, 125, 127], "simpler": [103, 125], "simplex": [0, 4, 9, 10, 48, 52, 69, 101, 110, 112, 119, 122, 124, 125, 127], "simpli": [50, 69, 112], "simplif": 112, "simplifi": [19, 125], "simsekli": [6, 124, 127], "simul": 91, "simultan": 4, "sin": [7, 11, 19, 31, 41, 49, 50, 57, 65, 75, 82, 85, 122], "sinc": [59, 64, 125, 127], "singapor": [0, 112, 124], "singh": [69, 110, 112, 124], "singl": [44, 47, 49, 103, 110, 112, 113, 124], "singleton": 122, "sinhorn": 119, "sinkhoorn": 78, "sinkhorn": [0, 11, 18, 24, 26, 28, 30, 44, 46, 54, 60, 77, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 114, 116, 119, 121, 122, 123, 124, 125, 126], "sinkhorn2": [0, 76, 78, 101, 124, 125, 127], "sinkhorn_epsilon_sc": [0, 101, 103, 127], "sinkhorn_knopp": [0, 101, 121, 127], "sinkhorn_knopp_unbalanc": [0, 121, 127], "sinkhorn_l1l2_gl": [103, 125, 127], "sinkhorn_log": [0, 101, 102, 103, 105, 110, 125, 127], "sinkhorn_low_rank_kernel": 59, "sinkhorn_lpl1_mm": [0, 103, 125, 127], "sinkhorn_method": 105, "sinkhorn_pi": 70, "sinkhorn_reg_sc": [0, 121], "sinkhorn_reg_scaling_unbalanc": [0, 121], "sinkhorn_stabil": [0, 101, 103, 121, 127], "sinkhorn_stabilized_unbalanc": [0, 121, 127], "sinkhorn_translation_invari": [0, 90, 121], "sinkhorn_unbalanc": [0, 78, 88, 90, 94, 121, 127], "sinkhorn_unbalanced2": [0, 121, 127], "sinkhorn_unbalanced_translation_invari": [0, 121, 125], "sinkhornl1l2": 125, "sinkhornl1l2transport": [26, 125, 127], "sinkhornlpl1transport": [26, 28, 125, 127], "sinkhorntransport": [26, 27, 28, 29, 30, 33, 34, 127], "sinkorn": 125, "site": [4, 48, 49, 52, 65], "situat": 5, "size": [0, 5, 7, 9, 11, 19, 20, 27, 33, 42, 44, 45, 48, 49, 50, 51, 52, 62, 64, 72, 78, 82, 83, 91, 96, 99, 100, 101, 102, 103, 104, 105, 107, 109, 110, 112, 116, 117, 120, 122, 125, 127], "size_batch": 11, "sizebari": 41, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 99, "skew": [103, 107], "skip": [0, 112], "sklearn": [4, 45, 47, 48, 52, 63, 110, 122, 125], "slack": 124, "slice": [0, 12, 86, 98, 104, 112, 116, 122, 124, 125, 126, 127], "sliced_permut": 118, "sliced_wasserstein_dist": [0, 6, 84, 118, 125], "sliced_wasserstein_spher": [0, 85, 118], "sliced_wasserstein_sphere_unif": [0, 7, 118], "slightli": 125, "slog": [46, 101], "slogdet": 99, "slope": 117, "slow": [0, 101, 105, 108, 125, 127], "slower": [5, 101, 127], "smacof_md": 47, "small": [0, 4, 10, 72, 79, 97, 100, 101, 103, 105, 110, 124, 125, 127], "smaller": [99, 110, 125], "smallest": 122, "smapl": 125, "smartphon": 125, "smith": [103, 107, 124, 127], "smooth": [0, 15, 54, 71, 78, 98, 103, 113, 124, 125, 126, 127], "smooth_ot_du": [73, 78, 127], "smooth_ot_semi_du": [119, 127], "smoother": [110, 115], "snippet": 97, "so": [0, 4, 11, 44, 67, 78, 94, 110, 112, 122, 124, 125, 127], "sobolevski": [0, 112, 124], "social": 96, "soft": 103, "softmax": 38, "softwar": [124, 125], "sokalmichen": [0, 72, 122], "sokalsneath": [0, 72, 122], "sol": [67, 78, 125], "sol_geo": 78, "sol_gw": 78, "sold": 72, "soler": 0, "solomon": [0, 44, 46, 100, 101, 110, 115, 124, 127], "solut": [0, 67, 68, 72, 78, 79, 100, 101, 103, 107, 110, 112, 115, 117, 122, 125, 127], "solv": [0, 2, 4, 12, 28, 34, 54, 57, 64, 68, 69, 74, 94, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 123, 124, 125, 126], "solve_1d_linesearch_quad": 114, "solve_batch": [0, 5, 100], "solve_du": 119, "solve_dual_entrop": 70, "solve_gromov": [0, 5, 78, 100, 125], "solve_gromov_batch": [0, 5, 100], "solve_gromov_linesearch": [110, 114, 125], "solve_partial_gromov_linesearch": [110, 114], "solve_sampl": [0, 58, 78, 124, 125, 127], "solve_sample_batch": [0, 100], "solve_semi_du": 119, "solve_semi_dual_entrop": 70, "solve_semirelaxed_gromov_linesearch": [110, 114], "solver": [0, 5, 12, 15, 19, 23, 43, 46, 50, 53, 54, 67, 68, 73, 78, 80, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126], "solver_1d": [10, 125], "some": [5, 28, 34, 52, 92, 98, 103, 110, 115, 122, 124, 125, 127], "some_funct": 122, "someth": [72, 97], "sometim": [0, 101, 127], "sonia": [2, 45, 98, 124], "soon": 127, "sort": [0, 63, 91, 97, 99, 110, 112, 115, 118, 127], "sort2": 99, "sourc": [0, 2, 3, 4, 5, 6, 7, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 27, 31, 32, 33, 35, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "sp": [46, 47, 67, 92, 110, 115], "sp_to_adjac": 41, "space": [0, 19, 22, 23, 37, 45, 46, 47, 50, 52, 64, 69, 78, 92, 96, 99, 101, 102, 103, 107, 108, 110, 112, 115, 118, 122, 124, 125, 127], "span": [110, 112], "spars": [0, 41, 49, 50, 67, 72, 73, 78, 99, 101, 105, 110, 112, 119, 121, 122, 124, 125, 127], "sparse_plan": 122, "sparser": 83, "sparsiti": [44, 46, 48, 73, 78, 110, 119, 124, 125, 127], "sparsity_constrain": [73, 119], "sparsityconstrain": 119, "spatial": [0, 46, 47, 72, 92, 110, 115, 122], "spc1": 50, "spc2": 50, "spc3": 50, "spc_1": 50, "spc_2": 50, "spd": 122, "special": [82, 99, 108], "specif": [0, 23, 47, 96, 97, 99, 101, 103, 110, 121, 124, 125, 127], "specifi": [30, 49, 50, 99, 103, 110, 119, 122, 125], "spectra": 127, "spectral": 110, "spectral_fus": 110, "spectral_soft": 110, "speed": [0, 101, 125, 127], "speedup": [0, 5, 101, 125, 127], "sphere": [0, 12, 54, 64, 118, 126], "spheric": [0, 12, 54, 81, 86, 98, 112, 118, 124, 126], "sphinx": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 125], "sphinx_gallery_thumbnail_numb": [2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 27, 28, 31, 32, 33, 34, 37, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 91, 92, 93], "spine": 17, "split": [45, 64, 105, 125], "split_class": 105, "spring_layout": [42, 44, 45, 50, 51], "springer": [0, 50, 101, 110, 112, 124], "sqeuclidean": [0, 28, 29, 57, 72, 75, 76, 78, 100, 101, 103, 110, 111, 112, 120, 122], "sqrt": [0, 7, 19, 21, 23, 38, 48, 52, 57, 58, 59, 65, 78, 79, 85, 99, 107, 110, 115, 118], "sqrtm": [46, 92, 99, 125], "squar": [0, 9, 23, 47, 50, 64, 72, 75, 76, 78, 99, 100, 101, 103, 105, 108, 110, 111, 113, 118, 119, 121, 122, 124, 125, 127], "square_loss": [0, 43, 44, 46, 47, 52, 110], "squaredl2": 119, "squeez": 99, "sr": [42, 51, 110, 125], "src": 10, "srfgw": [42, 51, 110, 114], "srfgw_23": [42, 51], "srfgw_32": [42, 51], "srfgw_dist": [42, 51], "srfgw_e": 42, "srgw": [42, 51, 110], "srgw_23": [42, 51], "srgw_32": [42, 51], "srgw_dist": [42, 51], "srgw_e": 42, "ssnb": [64, 103, 113, 125], "sssr": 112, "ssw": [0, 7, 118], "ssw_1": 85, "ssw_2": [0, 7, 118], "ssw_p": [0, 118], "st": [29, 30, 105], "stabil": [0, 101, 112, 121, 124, 125, 127], "stabl": [0, 8, 99, 100, 110, 124, 125, 127], "stabthr": 101, "stack": [6, 18, 19, 21, 22, 48, 52, 64, 99], "stai": [108, 116, 125], "stan": [26, 27, 28, 32, 33, 34], "stand": [0, 118], "standard": [15, 59, 99, 100, 104, 109, 110, 111, 113, 122, 125], "stanisla": [26, 27, 28, 32, 33, 34, 98, 124], "star": [47, 49], "start": [0, 5, 48, 52, 57, 67, 72, 97, 99, 101, 105, 117, 121, 122, 125, 127], "start_bapg": 44, "start_cg": 44, "start_color": 50, "start_pgd": 44, "start_ppa": 44, "starting_color": [42, 44, 50, 51], "stat": 99, "state": [0, 101, 110, 111, 112, 125], "statement": 113, "stati": 11, "statist": [0, 11, 64, 73, 90, 101, 103, 106, 112, 113, 119, 121, 124, 127], "statu": [0, 106, 108, 112, 122, 123, 125], "std": [10, 14, 15, 17, 43, 59, 67, 73, 76, 77, 79, 82, 84, 85, 88, 89, 90, 99, 104, 110, 125], "std_lcot": 82, "std_sinkh": 90, "std_sinkh_ti": 90, "std_w2": 82, "std_w2_circl": 82, "std_w2_lcot": 82, "stderr": 125, "steelblu": 20, "steepest": 105, "step": [0, 3, 4, 6, 8, 9, 10, 11, 19, 41, 45, 50, 69, 97, 99, 101, 107, 110, 112, 114], "step_siz": 107, "stephen": 122, "stepsiz": 105, "stiefel": [105, 118, 127], "still": [78, 107, 125, 127], "stochast": [0, 3, 4, 8, 45, 50, 54, 71, 98, 101, 107, 110, 116, 124, 125, 126, 127], "stochastic_block_model": [42, 44, 48, 50, 51, 52], "stochastic_blockmodel_graph": 45, "stochastic_gradient_desc": 107, "stole": 75, "stop": [0, 19, 99, 100, 101, 102, 103, 105, 106, 110, 111, 112, 113, 114, 115, 119, 121, 123], "stop_criterion": [0, 52, 110, 125], "stop_threshold": 19, "stopinnerthr": [0, 103, 113], "stopthr": [0, 19, 57, 59, 90, 101, 103, 105, 106, 110, 111, 112, 113, 114, 115, 119, 121, 123, 125], "stopthr2": [0, 114, 123], "stopthr_dykstra": [0, 110], "store": [45, 103, 112, 122], "str": [0, 44, 46, 48, 52, 72, 92, 94, 100, 101, 103, 104, 105, 107, 108, 110, 111, 112, 113, 116, 119, 120, 121, 122], "strai": [0, 118], "straightforward": 5, "strategi": [0, 52, 78, 110, 111], "stream": 125, "streamlin": 125, "strength": [78, 101], "stress": 47, "strictli": [75, 112, 122, 127], "string": [0, 101, 102, 103, 107, 110, 112, 120, 121, 122], "stromm": [107, 124], "strong": [103, 113, 127], "strongli": [0, 54, 71, 97, 101, 103, 110, 113, 124, 125, 126, 127], "strongly_convex_const": [103, 113], "structur": [0, 5, 41, 44, 46, 48, 49, 50, 52, 99, 109, 110, 124, 125, 127], "structure_nois": 41, "studi": [0, 11, 83, 118], "stuff": 125, "style": [2, 64, 116], "st\u00f6ter": [6, 124, 127], "sub": [0, 117, 124, 125, 127], "sub_sample_factor": 22, "subcal": 125, "subgraph": [52, 53, 54, 126], "subject": [112, 125], "submit": 97, "submodul": [124, 125], "subobject": 122, "subplot": [4, 5, 7, 8, 11, 14, 15, 16, 17, 19, 20, 21, 23, 26, 27, 28, 30, 31, 32, 33, 34, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 65, 66, 69, 72, 75, 76, 77, 79, 83, 89, 92, 93, 94, 116], "subplot2grid": [20, 47], "subroutin": 110, "subscript": 99, "subset": [0, 45, 112, 113, 122], "subset_a": 91, "subset_b": 91, "subspac": [22, 105, 112, 124, 127], "substack": [110, 119, 122], "substanti": 112, "success": [0, 110], "successfulli": 69, "suffici": [0, 100], "suggest": 110, "sum": [0, 4, 8, 9, 10, 15, 16, 17, 18, 19, 23, 42, 44, 45, 46, 48, 49, 51, 52, 58, 65, 66, 72, 74, 76, 77, 78, 79, 85, 88, 91, 93, 94, 99, 100, 101, 103, 105, 110, 111, 112, 114, 115, 117, 118, 119, 120, 122, 124, 127], "sum_": [0, 7, 9, 72, 100, 101, 102, 103, 105, 107, 110, 111, 112, 113, 114, 115, 118, 120, 121, 127], "sum_d": [48, 110], "sum_i": [0, 43, 100, 101, 110, 112, 119, 120, 121, 122, 123, 127], "sum_j": [0, 43, 110, 112, 119, 120, 123], "sum_k": [19, 112], "summat": [99, 112], "sun": [0, 118, 124, 127], "sup": 41, "sup_": 119, "super": [8, 11, 45], "supervis": [35, 54, 101, 103, 104, 122, 124, 125, 126, 127], "supplementari": 113, "support": [0, 6, 8, 10, 19, 23, 24, 26, 54, 80, 98, 101, 102, 104, 106, 108, 110, 112, 114, 116, 118, 119, 125, 126], "support_s": 19, "support_sizes2": 19, "suppos": [9, 101, 127], "suptitl": [16, 41, 52, 83], "sure": [0, 97, 110, 112, 124], "suresh": [112, 124], "surplu": 127, "sutherland": 124, "svg": 68, "sw": 7, "swap": 99, "swd": [0, 84, 118], "swgg": [0, 118], "switchx": [42, 44, 49, 50, 51], "sx": 68, "sxm2": 99, "sy": [68, 97], "symbol": 122, "symmetr": [0, 42, 49, 51, 99, 100, 101, 110, 122, 125, 127], "symmetri": [0, 100, 110, 125], "synthet": 50, "system": [0, 32, 33, 44, 45, 62, 69, 70, 83, 97, 99, 100, 101, 103, 107, 110, 113, 118, 119, 120, 121, 124, 127], "sz": [6, 18, 22], "s\u00e9journ\u00e9": [0, 90, 101, 110, 121, 124, 127], "t": [0, 9, 10, 14, 15, 17, 19, 21, 23, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 62, 63, 64, 65, 67, 68, 69, 72, 82, 83, 85, 89, 90, 93, 94, 100, 101, 102, 103, 105, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "t0": 19, "t1": 68, "t2": [68, 93, 117], "t_": [0, 52, 100, 110], "t_b": 100, "t_bapg": 44, "t_bapg_spars": 44, "t_bari": 108, "t_cg": 44, "t_cg_sparsiti": 44, "t_est": 4, "t_global": [50, 110], "t_i": 103, "t_init": [0, 100], "t_j": [103, 111], "t_list": [93, 117], "t_list2": 93, "t_max": 49, "t_mean": 37, "t_mean_resc": 37, "t_pgd": 44, "t_pgd_sparsiti": 44, "t_ppa": 44, "t_ppa_spars": 44, "t_rand": [37, 108], "t_rand_resc": 37, "t_reg": [124, 127], "t_unif": 4, "tab": 45, "tab10": [4, 48, 52, 63], "tabl": 101, "tag": 125, "take": [0, 19, 37, 50, 78, 82, 96, 108, 110, 112, 113, 114, 117, 120, 121, 125, 127], "take_along_axi": 99, "taken": [0, 48, 52, 78, 110, 122, 127], "tang": [44, 110, 124], "tangui": [0, 19, 22, 23, 37, 38, 46, 64, 83, 98, 108, 110, 112, 118, 124], "target": [0, 3, 9, 10, 11, 19, 31, 32, 35, 37, 38, 47, 49, 50, 54, 56, 57, 58, 59, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 76, 78, 79, 82, 84, 85, 88, 93, 100, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127], "tarnsport": 125, "task": [49, 97], "tau": [101, 105, 121], "tavenard": [0, 41, 43, 44, 46, 49, 98, 110, 115, 124, 127], "taylor": [64, 103, 113, 124], "team": [96, 97, 125], "temperatur": [0, 83, 118], "templat": [53, 54, 56, 98, 109, 124, 125, 126], "temporari": 96, "temporarili": 96, "ten": 110, "tend": [44, 46, 50, 72], "tensor": [0, 2, 4, 6, 9, 10, 19, 38, 45, 69, 72, 99, 100, 101, 109, 110, 112, 114, 118, 121, 122, 125, 127], "tensor_batch": [0, 100], "tensor_product": 110, "tensorflow": [0, 99, 112, 118, 124, 125, 127], "tensorflowbackend": 99, "tensorshap": 10, "tent": 49, "term": [0, 2, 11, 64, 74, 77, 100, 101, 102, 103, 105, 110, 111, 112, 113, 114, 115, 119, 120, 121, 122, 125, 127], "termin": [65, 112], "tesla": 99, "test": [0, 41, 45, 65, 97, 99, 100, 110, 114, 122, 124, 125], "test_acc": 45, "test_correct": 45, "test_graph": 45, "test_gromov": 125, "test_load": 45, "tetali": [0, 123, 124, 127], "text": [0, 3, 5, 7, 8, 9, 11, 18, 21, 27, 29, 31, 32, 38, 56, 66, 69, 72, 74, 77, 78, 84, 85, 88, 97, 100, 101, 103, 107, 110, 112, 113, 115, 117, 118, 121, 122, 127], "textrm": 112, "texttt": [0, 121], "tf": [124, 125], "tfgw": [109, 124], "tfgw_": 109, "tfgwpool": [45, 109], "th": [52, 101, 102, 110, 112, 117, 119, 124], "th_a": 117, "than": [10, 72, 78, 99, 110, 112, 115, 116, 122, 125, 127], "thank": [97, 98, 117, 125], "thei": [0, 50, 96, 109, 110, 112, 125, 127], "them": [0, 5, 42, 49, 50, 51, 99, 103, 110, 112, 115, 125], "theo": 98, "theorem": [0, 64, 103, 107, 113, 125, 127], "theoret": 83, "theori": [0, 103, 107, 110, 111, 118, 124, 127], "thesi": [64, 103, 113, 124], "theta": [0, 3, 7, 8, 11, 21, 23, 32, 38, 50, 57, 82, 83, 101, 104, 112, 118], "theta_": [0, 118], "thi": [0, 2, 4, 5, 6, 9, 10, 11, 14, 15, 16, 17, 19, 22, 23, 26, 27, 28, 29, 30, 32, 34, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 58, 59, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 78, 79, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "thibault": [110, 124], "thing": 72, "thirion": [110, 124], "thirti": [44, 110, 124], "this_fil": [16, 17, 27, 31, 33, 47], "thorp": [0, 83, 118, 124], "those": [0, 16, 72, 101, 103, 110, 121, 122, 127], "thr": 116, "thre": [110, 115], "thread": [0, 112, 122], "threaten": 96, "three": [0, 110, 111, 121], "thresh": 41, "threshinf": 41, "threshold": [0, 19, 41, 99, 101, 102, 103, 105, 106, 110, 111, 112, 113, 114, 115, 116, 119, 121, 123, 127], "threshold_plan": 110, "threshsup": 41, "through": [0, 83, 93, 108, 112, 117, 118, 121, 124, 127], "throw": [10, 125], "thu": [0, 19, 72, 100, 122], "thual": [110, 124], "tianlin": 124, "tic": [0, 2, 15, 43, 59, 67, 122, 125], "tick": 85, "tick_label": 2, "tick_param": [57, 63, 79], "tick_right": [62, 69], "tick_top": [62, 69], "ticker": 63, "ticklabel_format": 2, "ticks_loc": 63, "tight": 68, "tight_layout": [14, 15, 16, 17, 19, 20, 21, 22, 26, 27, 28, 30, 32, 33, 34, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 62, 63, 65, 69, 72, 75, 76, 83, 89], "tile": 99, "time": [0, 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 99, 100, 101, 103, 110, 112, 113, 118, 120, 122, 124, 125, 127], "time_bapg": 44, "time_batch": 5, "time_batch_gw": 5, "time_cg": 44, "time_emd": 72, "time_entrop": 57, "time_na": 5, "time_naive_gw": 5, "time_pgd": 44, "time_ppa": 44, "time_sinkhorn_reg": 72, "timeout": 125, "times_autodiff": 2, "times_envelop": 2, "times_last_step": 2, "timesmathbb": 112, "titl": [3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 21, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 56, 57, 58, 62, 63, 64, 65, 66, 67, 69, 72, 74, 75, 76, 77, 79, 82, 84, 85, 88, 89, 92, 93, 94, 97, 116, 124], "titouan": [0, 41, 42, 43, 44, 46, 49, 51, 52, 59, 98, 109, 110, 114, 124], "tk": 112, "tm": [0, 112], "tmp1": [16, 21], "tmp2": [16, 21], "to_networkx": 45, "to_numpi": 99, "to_numpy_arrai": [42, 44, 48, 50, 51, 52], "to_rgb": [10, 21], "to_rgba": [41, 49], "to_undirect": 45, "toarrai": [41, 46, 49, 99, 117], "toc": [0, 15, 43, 59, 67, 122, 125], "tocsr": 99, "todens": 99, "tog": [0, 101, 112, 124, 127], "togeth": 73, "tol": [0, 5, 29, 44, 47, 52, 57, 58, 69, 100, 103, 110, 115, 119], "tol_ab": [0, 110], "tol_bcd": 102, "tol_inn": [0, 48, 100, 110], "tol_ot": [69, 110], "tol_out": [48, 110], "tol_rel": [0, 44, 110], "tol_sinkhorn": 102, "toler": [0, 47, 99, 100, 102, 107, 108, 110, 115, 119], "tolist": 63, "toml": 125, "tong": 124, "too": [0, 101, 105, 127], "tool": [97, 127], "toolbox": [54, 71, 78, 98, 125, 126, 127], "tooth": [6, 16, 22], "top": [0, 17, 50, 52, 59, 63, 97, 110, 111, 116], "toq": [0, 2, 122], "torch": [0, 2, 4, 6, 7, 9, 10, 11, 19, 38, 45, 69, 99, 109, 112, 118, 124, 125, 127], "torch_geometr": 45, "torchbackend": [99, 125], "toronto": 127, "total": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 101, 110, 111, 112, 115, 121, 126, 127], "toward": 96, "tp": [0, 93, 112], "tplt_adjac": 109, "tplt_featur": 109, "tplt_weight": 109, "tr": [0, 107], "trace": 99, "traceback": 97, "track": [97, 110, 125], "tracker": 97, "tractogram": [101, 124], "trade": [0, 48, 49, 50, 52, 109, 110], "train": [0, 27, 33, 65, 69, 101, 103, 104, 105, 109, 112, 121, 125, 127], "train_acc": 45, "train_correct": 45, "train_graph": 45, "train_load": 45, "train_node_weight": 109, "tran": [62, 69, 110, 124], "transact": [0, 77, 101, 103, 112, 114, 124, 127], "transdata": [62, 69], "transfer": [27, 127], "transform": [7, 26, 27, 28, 30, 32, 34, 103, 110, 120, 122, 127], "transform_label": 103, "translat": [0, 54, 68, 95, 104, 121, 124, 125, 126, 127], "transloc": 112, "transp": [26, 28, 30, 31, 34, 94], "transp_i": 103, "transp_x": 103, "transp_xs_emd": [26, 27, 28, 30, 33], "transp_xs_emd_laplac": 30, "transp_xs_gaussian": 32, "transp_xs_gaussian_new": 32, "transp_xs_l1l2": 26, "transp_xs_linear": 32, "transp_xs_linear_new": 32, "transp_xs_lpl1": [26, 28], "transp_xs_sinkhorn": [26, 27, 28, 30, 33], "transp_xs_sinkhorn_semi": 34, "transp_xs_sinkhorn_un": 34, "transp_xt": 103, "transp_xt_emd": 27, "transp_xt_sinkhorn": 27, "transpar": 68, "transport": [0, 6, 8, 12, 14, 15, 19, 23, 33, 41, 42, 44, 45, 46, 49, 51, 52, 54, 60, 64, 71, 77, 80, 83, 89, 91, 92, 95, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126], "transpos": [10, 38, 62, 69, 99, 125], "travi": 125, "treat": 100, "trend": 107, "tri": [125, 127], "triangl": 47, "tribut": [0, 112, 124], "trick": [41, 100, 115, 127], "trigger": [9, 10, 102], "troll": 96, "trouv\u00e9": [0, 101, 124, 127], "true": [0, 2, 3, 4, 6, 7, 9, 10, 11, 14, 17, 19, 21, 22, 23, 26, 29, 32, 33, 38, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 57, 58, 59, 62, 65, 67, 68, 69, 70, 72, 73, 77, 78, 79, 83, 85, 88, 90, 92, 93, 99, 100, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 127], "true_fixed_point": [19, 112], "trust": [101, 105], "trustregion": 105, "try": 125, "ts_local": [50, 110], "tsne": 45, "tsne_embed": 45, "tsne_embeddings_0": 45, "tsne_embeddings_1": 45, "tuia": [0, 77, 101, 103, 114, 124, 127], "tune": 115, "tupl": [0, 100, 101, 102, 110, 111, 112, 114, 121, 122], "tuple_p": 110, "tuple_pxy_feat": 110, "tuple_pxy_samp": 110, "tuple_weight": 110, "turn": 122, "tutori": [8, 97, 127], "tv": [0, 76, 78, 79, 121], "tw": [10, 109, 124], "tw_": 109, "tweak": 125, "twenti": [0, 73, 101, 119, 124, 127], "two": [0, 4, 5, 6, 19, 23, 27, 29, 37, 43, 49, 50, 57, 62, 69, 70, 72, 73, 76, 78, 83, 91, 97, 99, 101, 102, 103, 106, 107, 108, 110, 112, 114, 117, 118, 121, 122, 123, 124, 125, 127], "twpool": 109, "tx": [0, 16, 21, 118], "ty": [16, 21], "type": [0, 23, 37, 50, 78, 97, 99, 100, 101, 103, 104, 107, 108, 109, 110, 112, 114, 115, 117, 118, 119, 120, 122, 124, 125, 127], "type_a": [0, 99, 118, 122, 125], "typeerror": 99, "typo": 113, "u": [0, 3, 4, 6, 8, 9, 18, 59, 63, 69, 72, 85, 89, 90, 97, 100, 101, 105, 110, 111, 112, 113, 115, 118, 120, 121, 122, 124, 125, 127], "u0": 105, "u_": [0, 118, 121], "u_i": 101, "u_valu": [0, 112], "u_weight": [0, 112], "ub": [7, 62, 69, 82, 85, 93, 94], "ucoot": [69, 110], "un": 125, "unaccept": 96, "unattribut": [48, 52], "unb": 79, "unbalanc": [0, 71, 79, 95, 98, 101, 102, 103, 104, 110, 115, 116, 117, 122, 124, 125, 126], "unbalanced_co_optimal_transport": [69, 110], "unbalanced_co_optimal_transport2": 110, "unbalanced_method": 110, "unbalanced_solv": [69, 110], "unbalanced_typ": [0, 78, 79], "unbalancedsinkhorntransport": 103, "unbias": 110, "undefin": 122, "undefinedparamet": 122, "under": [0, 97, 101, 102, 103, 110, 111, 112, 124], "underscor": 67, "underset": [0, 112, 118], "understand": [28, 34], "understood": 20, "unexpect": 9, "unic": [14, 15, 26, 27, 28, 29, 31, 32, 33, 34, 45, 62, 65, 69, 73, 74, 75, 76, 79], "unicodedecodeerror": 125, "unif": [0, 2, 4, 7, 9, 18, 20, 22, 23, 38, 43, 46, 47, 48, 49, 52, 56, 66, 67, 69, 70, 75, 78, 82, 92, 112, 118, 120, 122], "unifi": [78, 124, 125, 127], "uniform": [0, 7, 9, 19, 48, 52, 56, 64, 66, 69, 72, 74, 78, 84, 85, 90, 91, 93, 94, 99, 100, 101, 102, 103, 106, 108, 109, 110, 112, 113, 118, 121, 122, 123, 125, 127], "uniformli": [48, 52], "uniqu": [42, 44, 50, 51, 63, 99, 127], "unique_color": [42, 44, 50, 51], "unique_colors1": 50, "unique_colors2": 50, "unit": [49, 64, 118, 127], "univ": [7, 29, 30, 62, 69, 82, 85, 93, 94], "univers": [64, 103, 113, 124], "universit": [18, 20], "unknown": 101, "unlabel": [0, 49, 92, 103, 110, 114, 115, 124, 127], "unmaintain": 125, "unmix": [12, 48, 52, 54, 101, 110, 122, 124, 125, 126], "unmixings2d": [48, 52], "unnecessari": 125, "unnorm": [0, 100, 110, 115, 121], "unregist": 125, "unregular": [0, 101, 103, 113, 114, 117, 119, 121], "unsqueez": 99, "unsupervis": [35, 54, 103, 104, 122, 126, 127], "until": 125, "unus": 125, "unwant": [0, 110, 112], "unwarr": 127, "unwelcom": 96, "uot": [88, 110, 117, 124, 125, 127], "uot2": 117, "uot_cost_matrix": 110, "uot_parameters_and_measur": 110, "up": [0, 4, 97, 115, 121, 125], "upart1": 50, "upart2": 50, "updat": [31, 101, 110, 112, 113, 117, 120, 122, 125], "update_barycenter_featur": [110, 125], "update_barycenter_structur": [110, 125], "upgrad": 125, "upper": [0, 37, 50, 63, 64, 88, 91, 103, 112, 113, 116], "upsid": 116, "url": 124, "us": [0, 4, 5, 6, 7, 9, 10, 11, 14, 15, 23, 27, 32, 33, 34, 41, 42, 43, 44, 46, 47, 48, 49, 51, 52, 54, 57, 58, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 77, 78, 88, 89, 91, 92, 94, 96, 97, 99, 100, 101, 106, 109, 110, 112, 115, 121, 123, 125, 126], "usag": 97, "use_adam_optim": [48, 110], "use_gridspec": 72, "use_log": [48, 110], "use_target": 110, "use_tensor": [0, 72, 122], "useless": [110, 125], "user": [0, 50, 77, 97, 99, 110, 124, 125], "userwarn": [4, 8, 9, 10, 20, 26, 28, 29, 30, 44, 46, 48, 49, 52, 58, 67, 72, 74, 77, 78, 89], "uss": 125, "usual": [5, 110, 125], "util": [0, 2, 4, 9, 10, 14, 15, 17, 19, 38, 45, 67, 69, 70, 72, 78, 89, 99, 112, 113, 125], "uu": 22, "v": [0, 3, 8, 19, 24, 35, 41, 42, 44, 49, 50, 51, 54, 59, 63, 70, 71, 72, 73, 85, 89, 90, 97, 99, 100, 101, 103, 104, 111, 112, 113, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127], "v1": [16, 21, 42, 44, 49, 50, 51], "v100": 99, "v2": [16, 21, 42, 44, 49, 50, 51], "v22": 124, "v3": [16, 21], "v37i8": 69, "v4": [16, 21], "v_": 19, "v_1": 113, "v_j": [101, 113], "v_list": 19, "v_list2": 19, "v_n": 113, "v_valu": [0, 112], "v_weight": [0, 112], "va": [5, 72], "val": [21, 23, 38, 65, 99], "val_map": [41, 49], "valfunct": 125, "valid": [112, 122], "valu": [0, 2, 4, 5, 10, 23, 34, 41, 43, 48, 49, 52, 57, 65, 67, 72, 76, 78, 89, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 124, 125, 127], "value_bw": 125, "value_linear": [0, 2, 5, 78, 100, 110, 111, 122, 125], "value_quad": [0, 78, 100, 122, 125], "valueerror": 122, "van": [0, 110, 112, 124, 127], "vanish": [117, 127], "var": 78, "varepsilon": [17, 102, 110], "varepsilon_": [102, 110], "varepsilon_1": 102, "varepsilon_2": 102, "varepsilon_f": [102, 110], "vari": [48, 52, 83], "variabl": [0, 48, 52, 100, 101, 103, 106, 108, 110, 111, 112, 113, 117, 119, 120, 123, 125, 127], "varianc": [3, 8, 32, 46], "variant": [5, 79, 110, 113, 124, 125, 127], "variat": [0, 15, 76, 106, 110, 114, 121, 123, 127], "variou": [50, 98, 100, 122, 125], "varphi": [64, 103, 113], "varphi_": 113, "varphi_1": 113, "varphi_i": 113, "varphi_j": 113, "varphi_l": [64, 113], "varphi_n": 113, "varphi_u": [64, 113], "vautier": [46, 47, 98], "vayer": [0, 4, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 59, 62, 63, 69, 98, 102, 105, 109, 110, 114, 124, 127], "vdot": 112, "vec": [21, 23, 38], "vecsiz": [67, 112], "vector": [0, 9, 50, 59, 99, 100, 101, 102, 103, 108, 109, 110, 111, 112, 117, 118, 121, 122, 124, 125, 127], "verbos": [0, 26, 29, 32, 33, 43, 44, 46, 48, 52, 57, 59, 62, 67, 69, 73, 77, 88, 92, 101, 102, 103, 105, 106, 110, 111, 112, 113, 114, 115, 119, 121, 123], "verbose2": [103, 113], "veri": [0, 34, 72, 78, 101, 110, 122, 124, 125, 127], "verifi": 97, "version": [0, 49, 78, 82, 96, 97, 99, 100, 101, 114, 117, 121, 124, 125, 127], "vert": [14, 89], "vertic": [59, 63, 68], "via": [0, 4, 6, 48, 50, 52, 54, 71, 96, 101, 103, 104, 106, 110, 114, 124, 125, 126, 127], "vialard": [0, 89, 90, 101, 103, 110, 115, 121, 124, 127], "view": 125, "view_init": [22, 57, 85], "viewabl": 97, "viewpoint": 96, "vika": [112, 124], "vincent": [0, 4, 42, 44, 45, 46, 48, 49, 50, 51, 52, 98, 109, 110, 114, 124, 127], "violat": [110, 127], "viridi": [14, 41, 49, 89], "vishnu": [112, 124], "visibl": [42, 44, 49, 51, 125], "vision": [0, 6, 84, 118, 124, 127], "visu": 43, "visual": [22, 28, 34, 45, 62, 73, 91], "vivien": [18, 119, 124], "vline": 82, "vm": 82, "vmax": [4, 29, 41, 48, 49, 52, 59, 63, 69, 72], "vmin": [4, 38, 41, 49, 59, 63, 69, 72, 122], "vol": [0, 11, 77, 103, 107, 112, 114, 124, 127], "volkan": 122, "volum": 124, "vonmis": 82, "vstack": [14, 15, 17, 43, 45, 59, 67, 89], "vv": 22, "w": [0, 9, 10, 11, 21, 23, 38, 44, 47, 48, 52, 64, 68, 72, 83, 92, 94, 101, 102, 103, 105, 107, 108, 109, 110, 112, 118, 119, 120, 121, 122, 124, 125, 127], "w0": 92, "w1": [43, 105], "w2": [43, 82, 83, 105], "w2_circl": 82, "w2_plan": 83, "w_": [0, 37, 38, 48, 52, 101, 108, 110, 112, 121], "w_1": [0, 112, 127], "w_2": [0, 82, 106, 107, 112, 127], "w_a": 101, "w_b": 101, "w_bar": 108, "w_d": 110, "w_dist": 0, "w_i": [101, 107, 112], "w_k": [9, 112, 127], "w_kw": 127, "w_kw_u": 127, "w_lcot": 82, "w_list": [23, 38, 108], "w_p": [0, 112, 118, 127], "w_sinkhorn_reg": 72, "w_t": [37, 38, 108], "w_u": 127, "w_x": 110, "w_y": 110, "wa": [0, 72, 83, 99, 118, 125, 127], "wai": [0, 27, 78, 97, 101, 112, 125, 127], "wang": [44, 110, 124], "want": [0, 4, 5, 11, 20, 26, 28, 29, 30, 44, 46, 58, 69, 72, 74, 77, 78, 121, 125, 127], "warm": [0, 101, 125, 127], "warm_perm": [0, 118], "warmstart": [0, 44, 52, 59, 101, 102, 110, 111, 121, 125], "warmstartt": [0, 52, 110], "warn": [0, 4, 20, 26, 28, 29, 30, 34, 44, 46, 48, 52, 58, 59, 72, 74, 77, 78, 89, 101, 103, 110, 111, 114, 121, 122, 125], "warn_dykstra": [0, 110], "wass": [0, 100], "wass_1": 124, "wass_2": 124, "wassersein": 125, "wasserstaiun": 105, "wasserstein": [0, 12, 19, 23, 24, 37, 53, 67, 71, 76, 86, 95, 98, 100, 101, 103, 104, 105, 107, 108, 109, 110, 112, 114, 115, 118, 121, 122, 124, 125, 126], "wasserstein2": 110, "wasserstein_1d": [0, 10, 82, 112, 125, 127], "wasserstein_2": 124, "wasserstein_circl": [0, 82, 112, 125], "wasserstein_distance_to_templ": 109, "wassertein": 125, "wasterstein": [54, 60, 126], "wave": 97, "wb": 125, "wd": 124, "wd_reg": 124, "wda": [65, 98, 125], "we": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 19, 34, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 59, 62, 64, 68, 69, 72, 73, 78, 82, 91, 92, 93, 96, 97, 98, 99, 101, 103, 107, 110, 112, 115, 117, 118, 125, 127], "weak": [0, 54, 71, 98, 104, 116, 124, 125, 126], "weak_optimal_transport": [0, 66, 123], "web": 97, "websit": 124, "weed": [0, 101, 103, 106, 124, 127], "weight": [0, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 42, 44, 48, 49, 50, 51, 52, 66, 67, 69, 72, 74, 78, 89, 93, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 119, 120, 121, 122, 123, 125, 127], "weight_decai": 45, "weight_inter_g1": 50, "weight_inter_g2": [42, 44, 50, 51], "weight_inter_g3": [42, 44, 51], "weight_intra_g1": 50, "weight_intra_g2": [42, 44, 50, 51], "weight_intra_g3": [42, 44, 51], "weight_list": 89, "weightedg1": 50, "weightedg2": [42, 44, 50, 51], "weightedg3": [42, 44, 51], "welcom": [96, 124], "well": [37, 64, 97, 99, 110, 112, 113, 122, 127], "were": [83, 125], "west": 112, "wgw": 43, "what": [28, 34, 96, 97, 127], "wheel": 125, "when": [0, 4, 5, 67, 78, 82, 83, 94, 96, 97, 100, 101, 102, 105, 107, 108, 110, 112, 114, 115, 117, 118, 122, 124, 125], "whenev": [0, 112], "where": [0, 5, 7, 9, 10, 19, 23, 41, 48, 49, 52, 64, 69, 70, 72, 78, 91, 94, 97, 99, 100, 101, 102, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 123, 125, 127], "whether": [0, 99, 100, 108, 110, 112, 114, 122], "which": [0, 4, 5, 19, 23, 41, 49, 50, 64, 69, 72, 78, 96, 97, 99, 100, 101, 102, 103, 106, 109, 110, 112, 113, 114, 116, 117, 118, 122, 123, 124, 125, 127], "while": [50, 72, 101, 103, 108, 110, 113, 125, 127], "whisper": [101, 124], "white": 48, "who": [96, 125], "whose": [50, 67, 102, 107, 110, 112, 117], "why": [0, 97, 101, 125], "wider": 78, "width": [21, 23, 38, 42, 44, 49, 50, 51, 63, 101], "width_edg": [42, 44, 49, 50, 51], "wiki": 96, "wild": 125, "window": [124, 125], "wip": 97, "wirefram": 7, "wisc": 67, "wise": [72, 78, 99, 112, 122, 127], "wish": [64, 97], "with_label": [41, 45, 49], "with_nois": 41, "within": [10, 50, 52, 96, 99, 110], "without": [0, 67, 69, 96, 97, 99, 100, 101, 110, 117, 124, 125], "wminkowski": [0, 72, 122], "wolf": [0, 90, 110, 121, 124], "won": 111, "word": [9, 112, 127], "work": [0, 5, 16, 72, 97, 99, 101, 106, 110, 111, 112, 114, 121, 122, 123, 125], "workflow": 97, "workshop": [101, 103, 110, 124, 127], "would": [5, 98, 99, 125], "wrapper": [78, 98, 103, 113, 114, 125, 127], "write": [0, 97, 99, 100, 112], "written": [101, 111, 112], "wrt": [0, 4, 78, 99, 100, 103, 110, 122], "ws1": 29, "ws2": 29, "wt": [8, 107, 120], "wu": [0, 93, 117, 121, 124], "www": 127, "wx": 110, "wx_feat": [102, 110], "wx_samp": [102, 110], "wxg": 8, "wy": 110, "wy_feat": [102, 110], "wy_samp": [69, 102, 110], "x": [0, 2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 63, 64, 65, 66, 67, 69, 73, 74, 75, 76, 77, 79, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127], "x0": [0, 7, 41, 106, 112, 118], "x1": [0, 4, 6, 18, 20, 27, 31, 33, 45, 62, 63, 68, 72, 78, 82, 100, 105, 110, 122], "x10": 125, "x100": 125, "x1_torch": 6, "x1tl": 33, "x1tn": 33, "x2": [0, 6, 18, 20, 27, 31, 33, 45, 62, 68, 72, 78, 82, 100, 105, 110, 122, 125], "x2_torch": 6, "x3": [6, 18, 20], "x3_torch": 6, "x4": 20, "x_": [0, 69, 101, 103, 110, 111, 112, 113, 118], "x_1": [0, 50, 62, 64, 72, 100, 110, 112, 113, 122], "x_2": [0, 50, 62, 64, 72, 100, 110, 112, 122], "x_a": [0, 91, 100, 112, 115], "x_a_i": 91, "x_all": 6, "x_b": [0, 91, 100, 112, 115], "x_b_j": 91, "x_bar": 19, "x_bar2": 19, "x_class": 113, "x_i": [0, 7, 43, 100, 101, 112, 113, 118, 127], "x_init": [0, 18, 19, 20, 101, 112], "x_j": [101, 113], "x_k": 114, "x_label": 63, "x_latent": 45, "x_list": [19, 22, 59, 112], "x_n": 113, "x_prev": 19, "x_rescal": 37, "x_sourc": 70, "x_t": [0, 101, 103, 110, 111, 112, 113, 118, 122], "x_temp": 19, "x_torch": 10, "x_visu": 22, "x_y_lim": 63, "xa": [0, 106, 123], "xavier": [110, 124], "xaxi": [19, 62, 69], "xb": [0, 6, 20, 56, 106, 123], "xb_init": 20, "xbary_torch": 6, "xbinit": 6, "xd": 11, "xeon": 99, "xf": [102, 110], "xg": [8, 11], "xi": [19, 22], "xizheng": [67, 98, 124], "xk": 114, "xl": 8, "xlabel": [3, 7, 8, 9, 11, 27, 33, 38, 43, 45, 48, 62, 63, 69, 72, 76, 82, 84, 85, 90], "xlim": [11, 47, 63, 72, 76, 82], "xn": 11, "xnvisu": 11, "xp_coord": 118, "xr": [56, 66, 74, 75, 84, 116], "xs1": [9, 29], "xs2": [9, 29, 82], "xs_class": 64, "xs_map": 127, "xs_new": 32, "xscale": [84, 85], "xsi": 8, "xsp": 65, "xspw": 65, "xst": 31, "xstgw": 31, "xt": [3, 8, 9, 26, 27, 28, 29, 30, 31, 32, 33, 34, 43, 46, 56, 59, 64, 65, 66, 74, 75, 82, 84, 85, 90, 92, 93, 94, 101, 103, 107, 113, 116, 117, 120, 125, 127], "xti": 8, "xtick": [11, 15, 26, 28, 30, 34, 43, 63, 76, 93, 94], "xtot": 75, "xtp": 65, "xtpw": 65, "xts2": 82, "xtsgw": 31, "xu": [0, 44, 46, 100, 110, 124, 127], "xvisu": [7, 11], "xx": [6, 8, 18], "xy": [21, 23, 37, 38, 116], "xya": [62, 69], "xyb": [62, 69], "xyu354": 67, "y": [0, 2, 3, 7, 11, 14, 19, 20, 22, 26, 28, 29, 30, 32, 34, 37, 41, 43, 44, 45, 46, 48, 49, 50, 52, 57, 58, 59, 63, 64, 65, 69, 83, 85, 89, 99, 100, 101, 102, 103, 104, 105, 108, 110, 112, 113, 115, 116, 117, 118, 119, 122, 124, 127], "y1": 122, "y_": [0, 69, 103, 110, 118], "y_1": [0, 19, 110, 112], "y_2": [0, 110], "y_a": 91, "y_b": 91, "y_class": 113, "y_i": 100, "y_init": 112, "y_j": [0, 43, 127], "y_k": [19, 112], "y_l": 112, "y_list": [19, 59], "y_noisi": 69, "y_t": 103, "y_target": 70, "yamllint": 125, "yan": [0, 112, 124], "yaxi": [62, 63, 69], "ydict": 110, "ydict_best_st": 110, "ydict_fgw": 48, "ydict_init": 110, "year": [124, 125, 127], "yembed": [48, 110], "yet": [0, 110, 125, 127], "yf": [102, 110], "yield": [0, 103, 118], "yl": 8, "ylabel": [2, 27, 33, 38, 43, 48, 63, 72, 79, 84, 85, 90, 94], "ylim": [11, 47, 63, 76, 82], "ymax": 82, "ymin": 82, "you": [0, 5, 20, 26, 28, 29, 30, 44, 46, 49, 58, 72, 74, 77, 78, 97, 99, 101, 105, 109, 113, 116, 121, 124, 125, 127], "your": [5, 97, 124, 127], "yourlogin": 97, "yr": 116, "ys1": 29, "ys2": 29, "ys_class": 64, "yscale": 90, "yt": [3, 26, 28, 29, 30, 32, 34, 43, 65, 103], "ytick": [11, 15, 26, 28, 30, 34, 43, 63, 94], "yu": [67, 98, 124], "yule": [0, 72, 122], "yx": 116, "yy": [6, 8, 18], "z": [0, 7, 14, 48, 50, 52, 57, 85, 89, 98, 101, 112, 119, 122, 124, 127], "z_": 112, "z_1": 112, "z_i": [119, 122], "z_j": [112, 119, 122], "zdir": [14, 89], "zemskova": [110, 124], "zero": [2, 4, 6, 7, 9, 11, 14, 15, 19, 42, 44, 46, 48, 49, 51, 52, 69, 72, 73, 75, 76, 82, 83, 89, 99, 101, 102, 103, 110, 122, 125], "zero_": [4, 6, 9, 10, 69], "zero_grad": [3, 8, 11, 19, 38], "zero_pad": 99, "zeros_lik": 41, "zha": [44, 46, 110, 124], "zhang": [0, 121, 124, 127], "zhao": [44, 110, 124], "zhu": [44, 110, 124], "zine": 11, "zip": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 124], "zorder": [3, 4, 5, 8, 48, 52, 63, 68], "\u00e1lvarez": [19, 101, 112, 124]}, "titles": ["API and modules", "Differentiable OT with PyTorch", "Different gradient computations for regularized optimal transport", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Solving Many Optimal Transport Problems in Parallel", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "Wasserstein barycenters", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "OT Barycenter with Generic Costs Demo", "2D free support Sinkhorn barycenters of distributions", "Gaussian Bures-Wasserstein barycenters", "Generalized Wasserstein Barycenter Demo", "Gaussian Mixture Model OT Barycenters", "Computation times", "Domain adaptation with OT", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "OT on Gaussian and Gaussian Mixture Models", "OT between GMM : plan and maps in 1D", "Gradient Flow for GMM-OT distance", "Computation times", "Gromov-Wasserstein (GW) and Fused GW", "Barycenter of labeled graphs with FGW", "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example", "Plot Fused-Gromov-Wasserstein", "Comparison of Fused Gromov-Wasserstein solvers", "Graph classification with Template Based Fused Gromov Wasserstein", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Plot partial FGW for subgraph matching", "Quantized Fused Gromov-Wasserstein examples", "Semi-relaxed (Fused) Gromov-Wasserstein example", "Semi-relaxed (Fused) Gromov-Wasserstein Barycenter as Dictionary Learning", "Computation times", "Examples gallery", "Factored an Low-Rank OT", "Optimal transport with factored couplings", "Low rank Gromov-Wasterstein between samples", "Low rank Sinkhorn", "Nystr\u00f6m approximation for OT", "Computation times", "Other OT problems", "Row and column alignments with CO-Optimal Transport", "Entropic Wasserstein Component Analysis", "Smooth and Strongly Convex Nearest Brenier Potentials", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Computing 1-dimensional Barycenters via d-MMOT", "Logo of the POT toolbox", "Detecting outliers by learning sample marginal distribution with CO-Optimal Transport and by using unbalanced Co-Optimal Transport", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for fixed support", "Optimal Transport between empirical distributions", "Optimal Transport with different ground metrics", "Geometry of OT distances", "Regularized OT with generic solver", "Quickstart Guide", "Optimal Transport solvers comparison", "Computation times", "OT in 1D and Sliced Wasserstein", "OT distance on the Circle", "Sliced OT Plans", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "Unbalanced and Partial OT", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Translation Invariant Sinkhorn for Unbalanced Optimal Transport", "Partial Wasserstein in 1D", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Code of conduct", "Contributing to POT", "Contributors", "ot.backend", "ot.batch", "ot.bregman", "ot.coot", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gmm", "ot.gnn", "ot.gromov", "ot.lowrank", "ot.lp", "ot.mapping", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Releases", "Computation times", "User guide"], "titleterms": {"": 85, "0": 125, "1": [26, 28, 29, 30, 34, 48, 52, 67, 75, 125], "10": 125, "11": 125, "1d": [10, 14, 15, 17, 37, 54, 81, 88, 89, 91], "2": [11, 26, 28, 29, 30, 34, 42, 44, 48, 51, 52, 67, 75, 83, 85, 125], "2d": [17, 18, 20, 46, 65, 78, 84, 92, 94], "3": [28, 34, 42, 44, 48, 51, 52, 125], "3d": [46, 92], "4": 125, "5": 125, "6": 125, "7": 125, "7dev": 125, "8": 125, "9": 125, "In": 5, "acceler": 127, "acknowledg": [98, 124], "across": 43, "adapt": [25, 26, 27, 28, 29, 30, 31, 32, 33, 54, 127], "add": [42, 51], "algorithm": [26, 27, 28, 29, 30, 32, 70, 72, 78, 127], "align": [62, 69], "all": [29, 78], "along": [6, 7, 11], "among": 67, "an": [54, 55, 56, 66, 127], "anaconda": 124, "analysi": [63, 65, 127], "ani": 46, "anim": [6, 7, 11, 22, 93], "api": 0, "applic": 127, "approxim": 59, "architectur": 45, "assign": 83, "atom": 48, "attribut": [48, 50, 52, 96], "backend": [99, 127], "background": 68, "bakeri": 72, "barycent": [6, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 41, 47, 52, 54, 67, 89, 127], "barycentr": [14, 89], "base": 45, "baseestim": 122, "basetransport": 103, "batch": 100, "between": [37, 50, 57, 74, 78, 82, 127], "block": [42, 44, 48, 51, 52], "both": 67, "break": 125, "bregman": [59, 101, 127], "brenier": 64, "bug": 97, "bure": [21, 78], "bures_wasserstein_barycent": 107, "case": [70, 127], "cg": 114, "chang": 125, "check": 124, "checklist": 97, "circl": [75, 82], "cite": 124, "citi": 72, "class": [99, 103, 119, 122, 127], "classif": 45, "clear": 68, "close": 125, "cloud": 50, "cluster": [4, 42, 44, 48, 51, 52], "co": [62, 69], "co_optimal_transport": 102, "co_optimal_transport2": 102, "code": [96, 124], "color": [27, 33], "column": [62, 69], "commun": 4, "compar": [5, 59, 67, 70, 78, 82], "comparison": [2, 44, 79], "compat": 127, "compon": 63, "compos": [48, 52], "compress": 4, "comput": [2, 5, 6, 12, 14, 16, 17, 18, 21, 22, 24, 35, 39, 41, 42, 43, 44, 46, 47, 49, 50, 51, 53, 56, 59, 60, 63, 65, 66, 67, 70, 71, 72, 74, 76, 80, 83, 86, 89, 90, 92, 93, 94, 95, 126, 127], "compute_transport_plan": 117, "conda": 124, "conduct": [96, 124], "content": 124, "continu": [8, 70], "contribut": [97, 124], "contributor": [97, 98], "converg": 9, "convert": [3, 8], "convex": 64, "convolut": [16, 127], "convolutional_barycenter2d": 127, "coot": [69, 102], "cost": [5, 19, 57, 72, 78], "coupl": [26, 28, 29, 30, 34, 56], "covari": 21, "cpu": 127, "creat": 43, "creator": 98, "custom": 78, "d": 67, "da": 103, "dark": 68, "data": [3, 7, 8, 9, 11, 14, 15, 16, 18, 20, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 41, 43, 45, 47, 49, 56, 57, 58, 59, 63, 65, 66, 68, 69, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 93, 94], "dataset": [48, 52, 75, 104], "debias": 17, "deep": 8, "defin": [21, 78, 79], "demo": [14, 17, 19, 22, 89], "densiti": 8, "depend": [101, 124], "deprec": 125, "descent": [6, 7, 38], "detect": 69, "dictionari": [48, 52], "differ": [2, 26, 27, 28, 30, 32, 34, 75, 76, 82, 84, 85], "differenti": [1, 54], "dimension": 67, "dirac": 15, "directli": 59, "discret": 70, "discrimin": [65, 127], "displai": 46, "dist0": 122, "distanc": [4, 9, 28, 34, 38, 43, 44, 46, 50, 67, 69, 76, 82, 84, 92, 127], "distribut": [9, 18, 20, 21, 28, 33, 46, 67, 69, 73, 74, 79, 84, 85, 88, 89, 92, 127], "diverg": [42, 51], "document": 97, "domain": [25, 26, 28, 29, 30, 32, 33, 54, 127], "dr": 105, "dual": [3, 8, 70, 72], "embed": [7, 48, 52], "emd": [72, 74, 76, 77, 127], "emd2": 127, "emdlaplacetransport": 103, "emdtransport": 103, "empir": [20, 28, 74], "empirical_bures_wasserstein_dist": 107, "empirical_bures_wasserstein_map": 107, "empirical_gaussian_gromov_wasserstein_map": 107, "empirical_sinkhorn_nystroem": 59, "endow": [48, 52], "enforc": 96, "entrop": [3, 8, 15, 42, 49, 57, 63, 77, 78, 90, 94, 127], "estim": [3, 4, 8, 9, 31, 32, 33, 48, 52, 69, 127], "euclidean": [57, 82], "ewca": [63, 105], "exact": [15, 56, 66, 73, 78, 94], "exampl": [16, 42, 46, 47, 50, 51, 54, 70, 78, 92, 94, 102, 103, 104, 105, 107, 108, 111, 113, 114, 116, 117, 118, 119, 120, 122, 124, 127], "except": 122, "expect": 83, "extens": 127, "f": 54, "factor": [54, 55, 56, 78, 106], "faq": 127, "fda": 105, "featur": [42, 43, 48, 51, 52, 124, 125], "fgw": [41, 43, 49, 127], "fig": [26, 28, 29, 30, 34], "figur": 15, "file": 97, "final": 15, "first": [63, 72, 125], "fisher": 65, "fit": [26, 27, 28, 29, 30, 32], "fix": [73, 127], "flow": [6, 10, 38], "follow": [42, 44, 48, 51, 52], "forg": 124, "free": [18, 20, 127], "frobeniu": 77, "from": [48, 52], "fulli": 93, "function": [0, 46, 99, 100, 102, 103, 104, 105, 106, 107, 108, 111, 113, 114, 116, 117, 118, 119, 120, 122, 123], "fuse": [40, 42, 43, 44, 45, 48, 49, 50, 51, 52, 54, 78], "g": 127, "galleri": 54, "gan": 11, "gaussian": [15, 17, 21, 23, 36, 46, 54, 59, 78, 92, 107], "gcg": 114, "gener": [3, 4, 7, 8, 9, 11, 14, 18, 19, 20, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 56, 57, 58, 59, 63, 65, 66, 67, 69, 73, 74, 76, 77, 79, 84, 85, 88, 89, 93, 94, 127], "geometri": 76, "get": 72, "get_random_project": 118, "given": 8, "gmm": [37, 38, 108], "gmm_barycenter_fixed_point": 108, "gmm_ot_apply_map": 108, "gmm_ot_loss": 108, "gmm_ot_plan_dens": 108, "gmm_pdf": 108, "gmmot": 37, "gnn": 109, "gpu": 127, "gradient": [2, 6, 7, 38, 79], "graph": [4, 41, 42, 44, 45, 48, 50, 51, 52], "gromov": [4, 5, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 57, 78, 92, 110, 127], "ground": 75, "group": [79, 127], "guid": [78, 127], "gw": [4, 40, 43, 46, 54, 78, 127], "help": 72, "how": [97, 127], "identifi": 67, "imag": [17, 27, 31, 33], "implement": 124, "import": [72, 83], "indic": 124, "inspect": 20, "instal": [72, 124], "instanti": [26, 27, 28, 29, 30, 32], "interpol": [14, 20, 89], "introduct": 72, "invari": 90, "issu": 125, "iter": [6, 7, 11], "jcpot": 29, "jcpottransport": 103, "kappa": 82, "kernel": [46, 59], "kernel_nystroem": 111, "kl": [90, 94], "known": 29, "l2": [93, 94], "label": 41, "laplacian": 30, "larg": 78, "lasso": [79, 127], "last": 38, "layer": 45, "lazytensor": 122, "learn": [48, 52, 69], "linear": [31, 48], "lineargwtransport": 103, "lineartransport": 103, "list": 127, "load": 31, "logo": 68, "loop": [5, 38], "loss": [46, 72, 73, 76, 79, 88, 100], "loss_dual_entrop": 120, "loss_dual_quadrat": 120, "low": [54, 55, 57, 58, 78], "lowrank": 111, "lp": [15, 112], "main": 0, "maintain": 98, "make_1d_gauss": 104, "make_2d_samples_gauss": 104, "make_data_classif": 104, "mani": [5, 67], "map": [31, 32, 33, 37, 72, 113, 127], "mappingtransport": 103, "margin": 69, "mass": 88, "match": [22, 42, 44, 49, 50, 51], "matric": [5, 43, 57, 70, 75], "matrix": [28, 34, 43, 70, 72, 73, 78, 79, 88], "md": 47, "method": [28, 34, 46, 67], "metric": 75, "min": 83, "minibatch": 11, "minim": 67, "mise": 82, "mixtur": [23, 36, 54], "mmot": 67, "model": [9, 11, 23, 36, 42, 44, 48, 51, 52, 54], "modul": 0, "mong": 127, "more": [5, 67], "multi": 29, "multipl": 127, "nearest": 64, "nearest_brenier_potential_fit": 113, "nearest_brenier_potential_predict_bound": 113, "new": [27, 97, 125], "node": [42, 48, 51, 52], "norm": 77, "normal": 46, "notebook": 124, "number": [84, 85], "nystr\u00f6m": 59, "object": 9, "one": 92, "onto": 34, "optim": [2, 4, 5, 9, 26, 28, 29, 30, 34, 56, 62, 66, 69, 72, 73, 74, 75, 78, 79, 88, 90, 93, 94, 114, 124, 127], "option": 2, "oracl": 29, "origin": [27, 33, 67], "ot": [0, 1, 3, 8, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 54, 55, 56, 59, 61, 66, 72, 73, 75, 76, 77, 78, 81, 82, 83, 87, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127], "otda": [34, 127], "other": [54, 61, 127], "otresult": 122, "our": 96, "outlier": 69, "over": 37, "pairwis": [28, 34], "parallel": 5, "paramet": [20, 72, 79, 90], "partial": [49, 54, 75, 78, 87, 91, 92, 115, 127], "partit": 50, "path": 93, "penal": 93, "perform": 99, "permut": 83, "pip": 124, "pivot": 83, "pixel": 33, "plan": [3, 8, 37, 46, 59, 63, 72, 78, 79, 83, 92], "plan_dual_entrop": 120, "plan_dual_quadrat": 120, "pledg": 96, "plot": [3, 7, 8, 9, 11, 18, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 41, 43, 45, 46, 49, 56, 57, 59, 63, 65, 66, 68, 70, 72, 73, 74, 75, 76, 79, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 116], "plot1d_mat": 116, "plot2d_samples_mat": 116, "point": 50, "pool": 45, "post": 124, "post1": 125, "pot": [68, 72, 97, 124, 127], "potenti": 64, "pre": 125, "prepar": [16, 47], "problem": [5, 54, 61, 70, 72, 78], "proj_sdp": 122, "proj_simplex": 122, "project": [22, 63, 65, 84, 85], "proport": 29, "pull": 97, "python": [72, 124], "pytorch": [1, 3, 4, 6, 8, 9, 10, 11, 54], "quadrat": [3, 78, 127], "quantiz": 50, "quickstart": 78, "r": 4, "rank": [54, 55, 57, 58, 78], "refer": [0, 118, 124, 127], "regpath": [93, 117], "regular": [2, 3, 15, 30, 42, 54, 72, 77, 78, 79, 90, 93, 94, 127], "regularization_path": 117, "relax": [42, 51, 52, 93], "releas": 125, "request": 97, "rescale_for_imshow_plot": 116, "respect": 69, "respons": 96, "result": [70, 83, 90, 94], "reweight": 9, "rotat": 22, "row": [62, 69], "run": 29, "sampl": [7, 8, 11, 26, 28, 29, 30, 31, 32, 34, 46, 50, 57, 69, 75, 78, 92], "scalabl": 46, "scale": 78, "scatter": 27, "scope": 96, "seed": [84, 85], "semi": [34, 42, 51, 52, 70, 93], "set": [34, 79, 90], "setup": 83, "shift": 29, "short": 124, "sinkhorn": [2, 17, 20, 29, 58, 59, 70, 72, 73, 74, 76, 78, 88, 90, 127], "sinkhorn_low_rank_kernel": 111, "sinkhornl1l2transport": 103, "sinkhornlpl1transport": 103, "sinkhorntransport": 103, "slice": [6, 7, 54, 81, 83, 84, 85, 118], "smacof": 47, "smooth": [64, 73, 119], "smooth_ot_du": 119, "solut": [56, 66], "solv": [5, 58, 72, 73, 77, 78, 79, 88, 127], "solve_dual_entrop": 120, "solve_semi_dual_entrop": 120, "solver": [2, 3, 44, 77, 79, 127], "sourc": [8, 9, 26, 28, 29, 30, 34], "space": 48, "special": 127, "sphere": 7, "spheric": [7, 85], "squar": 57, "srfgw": 52, "srgw": 52, "stair": 15, "standard": 96, "step": 38, "stochast": [42, 44, 46, 48, 51, 52, 70, 120], "strongli": 64, "structur": [4, 43], "subgraph": 49, "summari": 5, "supervis": 34, "support": [18, 20, 73, 100, 124, 127], "t": 4, "tabl": 124, "target": [8, 26, 28, 29, 30, 34], "templat": [4, 45], "tensor": [3, 8], "tfgw": 45, "than": 67, "them": [21, 26, 27, 28, 29, 30, 32, 37, 46, 92], "time": [2, 5, 12, 24, 35, 39, 53, 60, 71, 72, 80, 86, 95, 126], "tip": 97, "toolbox": [68, 72, 124], "torch": [3, 8], "train": [11, 45], "trajectori": [6, 7, 11], "transfer": 33, "transform": [31, 33], "translat": 90, "transport": [2, 5, 26, 27, 28, 29, 30, 31, 32, 34, 43, 56, 62, 63, 66, 69, 70, 72, 73, 74, 75, 78, 79, 88, 90, 93, 94, 124, 127], "two": [42, 44, 46, 51, 92], "unbalanc": [54, 69, 78, 87, 88, 89, 90, 93, 94, 121, 127], "uniform": [4, 75, 82], "unmix": 9, "unsupervis": 34, "uot": [90, 93, 94], "up": 79, "us": [45, 50, 59, 69, 102, 103, 104, 105, 107, 108, 111, 113, 114, 116, 117, 118, 119, 120, 122, 124, 127], "user": [78, 127], "util": [49, 122], "v": [15, 34, 58, 66], "v0": 125, "valu": 33, "vari": 72, "variabl": [3, 8, 72], "via": 67, "visual": [11, 16, 17, 42, 43, 44, 47, 48, 49, 50, 51, 52, 69, 72], "visualis": 38, "von": 82, "w": 4, "wasserstein": [4, 5, 6, 7, 9, 10, 11, 13, 14, 15, 16, 18, 21, 22, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 57, 63, 65, 72, 78, 81, 82, 83, 84, 85, 89, 91, 92, 127], "wasterstein": 57, "wda": [105, 127], "weak": [66, 123], "weight": [4, 9], "when": 127, "why": 127, "without": 50, "work": 127, "wrapper": 50, "wrt": 9}})