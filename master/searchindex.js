Search.setIndex({"docnames": ["all", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_entropic_semirelaxed_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_fgw_solvers", "auto_examples/gromov/plot_gnn_TFGW", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/plot_semirelaxed_fgw", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_COOT", "auto_examples/others/plot_EWCA", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_learning_weights_with_COOT", "auto_examples/others/plot_logo", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_compute_wasserstein_circle", "auto_examples/plot_optim_OTreg", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "code_of_conduct", "contributing", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.coot", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gnn", "gen_modules/ot.gromov", "gen_modules/ot.lp", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "quickstart", "releases"], "filenames": ["all.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_entropic_semirelaxed_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_fgw_solvers.rst", "auto_examples/gromov/plot_gnn_TFGW.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/plot_semirelaxed_fgw.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_COOT.rst", "auto_examples/others/plot_EWCA.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_learning_weights_with_COOT.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_compute_wasserstein_circle.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "code_of_conduct.rst", "contributing.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.coot.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gnn.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "quickstart.rst", "releases.rst"], "titles": ["API and modules", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example", "Plot Fused-Gromov-Wasserstein", "Comparison of Fused Gromov-Wasserstein solvers", "Graph classification with Tempate Based Fused Gromov Wasserstein", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Semi-relaxed (Fused) Gromov-Wasserstein example", "Computation times", "Examples gallery", "Row and column alignments with CO-Optimal Transport", "Entropic Wasserstein Component Analysis", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Optimal transport with factored couplings", "Learning sample marginal distribution with CO-Optimal Transport", "Logo of the POT toolbox", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth and sparse OT example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different ground metrics", "OT distances in 1D", "OT distance on the Circle", "Regularized OT with generic solver", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Code of conduct", "Contributing to POT", "Contributors", "ot.backend", "ot.bregman", "ot.coot", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gnn", "ot.gromov", "ot.lp", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Quick start guide", "Releases"], "terms": {"The": [0, 2, 7, 10, 12, 26, 28, 33, 34, 35, 42, 44, 49, 52, 55, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93], "list": [0, 5, 10, 28, 62, 68, 70, 71, 72, 73, 76, 78, 79, 80, 84, 87, 89, 90, 91, 93], "automat": [0, 6, 7, 44, 80, 92, 93], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 70, 71, 73, 75, 78, 80, 82, 83, 84, 88, 89, 91, 92, 93], "sub": [0, 84, 91, 92], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 47, 49, 52, 54, 55, 58, 59, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "follow": [0, 6, 7, 8, 11, 34, 44, 49, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 84, 86, 87, 88, 91, 92, 93], "lp": [0, 7, 14, 16, 17, 38, 55, 71, 72, 73, 74, 81, 86, 88, 89, 91, 92, 93], "bregman": [0, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 31, 33, 46, 49, 52, 56, 73, 75, 76, 80, 81, 82, 88, 90, 91, 93], "optim": [0, 1, 3, 5, 8, 9, 11, 14, 19, 24, 25, 28, 29, 30, 31, 32, 33, 36, 38, 41, 47, 48, 56, 57, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 93], "util": [0, 2, 6, 7, 10, 11, 13, 32, 44, 47, 49, 62, 70, 73, 80, 92, 93], "dataset": [0, 1, 7, 8, 10, 11, 13, 18, 20, 21, 22, 24, 26, 28, 33, 40, 41, 42, 46, 50, 51, 52, 54, 56, 58, 61, 62, 63, 64, 65, 75, 79, 87, 92, 93], "gromov": [0, 9, 28, 37, 66, 69, 74, 78, 81, 82, 89, 91, 93], "smooth": [0, 11, 38, 57, 69, 74, 83, 91, 92, 93], "stochast": [0, 1, 2, 5, 32, 38, 48, 69, 71, 79, 83, 91, 92, 93], "partial": [0, 62, 65, 66, 69, 74, 87, 91, 93], "regpath": 0, "unbalanc": [0, 63, 66, 69, 71, 73, 74, 82, 83, 84, 89, 91, 93], "ar": [0, 7, 12, 14, 20, 26, 28, 29, 31, 34, 35, 36, 42, 44, 47, 49, 51, 52, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "due": [0, 73, 80, 92, 93], "addit": [0, 68, 72, 80, 84, 91, 92, 93], "depend": [0, 35, 70, 78, 79, 81, 92, 93], "dr": [0, 40, 41, 91, 92, 93], "pymanopt": [0, 75, 91, 92, 93], "autograd": [0, 4, 75, 91, 92, 93], "plot": [0, 2, 7, 10, 11, 13, 29, 31, 35, 36, 37, 38, 44, 56, 92, 93], "matplotlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 93], "barycent": [0, 9, 17, 37, 58, 66, 69, 71, 73, 74, 79, 80, 85, 88, 89, 91, 93], "A": [0, 3, 10, 11, 12, 13, 16, 23, 24, 25, 26, 28, 40, 41, 46, 47, 49, 56, 62, 68, 71, 73, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 91, 92, 93], "m": [0, 2, 6, 7, 8, 10, 11, 13, 20, 21, 24, 25, 29, 30, 31, 32, 35, 36, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 54, 56, 59, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "reg": [0, 1, 5, 10, 11, 12, 13, 15, 18, 19, 20, 21, 31, 33, 35, 40, 41, 47, 49, 51, 52, 54, 56, 62, 63, 64, 65, 71, 73, 75, 76, 77, 79, 80, 81, 82, 84, 86, 87, 88, 91, 92, 93], "weight": [0, 10, 11, 12, 13, 14, 15, 16, 29, 31, 35, 36, 42, 44, 49, 52, 62, 64, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 92, 93], "none": [0, 2, 5, 13, 15, 28, 29, 30, 31, 32, 35, 36, 39, 40, 44, 49, 55, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 93], "method": [0, 7, 13, 28, 31, 47, 68, 71, 72, 73, 75, 79, 80, 86, 87, 88, 89, 91, 92, 93], "sinkhorn": [0, 8, 14, 17, 18, 20, 22, 31, 33, 38, 46, 56, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 86, 88, 89, 90, 91, 93], "numitermax": [0, 14, 15, 18, 20, 21, 31, 33, 47, 49, 56, 71, 73, 76, 79, 80, 81, 82, 86, 87, 88, 90], "10000": [0, 70, 71, 79, 87], "stopthr": [0, 71, 73, 75, 76, 79, 80, 81, 82, 86, 88, 90, 93], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92], "0001": [0, 71, 81, 84], "verbos": [0, 11, 18, 21, 24, 25, 30, 31, 33, 35, 39, 44, 46, 50, 56, 61, 63, 71, 72, 73, 75, 76, 79, 80, 81, 82, 86, 88, 90], "fals": [0, 13, 25, 28, 29, 31, 32, 35, 36, 40, 44, 46, 55, 59, 64, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90], "log": [0, 13, 21, 28, 29, 30, 31, 33, 35, 36, 39, 44, 47, 56, 58, 59, 63, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 90, 92, 93], "warn": [0, 2, 15, 18, 20, 21, 22, 26, 31, 33, 34, 35, 46, 49, 56, 62, 68, 71, 73, 89, 93], "true": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 13, 16, 18, 21, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 39, 41, 44, 45, 46, 47, 49, 50, 56, 59, 61, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93], "kwarg": [0, 71, 73, 74, 76, 79, 81, 82, 83, 88, 89, 90, 93], "sourc": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "comput": [0, 2, 6, 7, 8, 11, 35, 44, 46, 50, 51, 55, 58, 59, 61, 70, 71, 72, 73, 75, 77, 78, 79, 80, 82, 84, 85, 86, 87, 88, 89, 91, 93], "entrop": [0, 9, 15, 17, 31, 33, 37, 38, 48, 63, 66, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 86, 87, 88, 89, 90, 91, 93], "regular": [0, 9, 10, 12, 15, 17, 18, 19, 20, 21, 25, 27, 31, 33, 35, 37, 46, 57, 62, 66, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93], "wasserstein": [0, 9, 17, 37, 48, 54, 60, 66, 69, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 85, 88, 89, 91, 93], "distribut": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 17, 24, 27, 30, 34, 38, 42, 43, 48, 49, 53, 54, 55, 56, 57, 60, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 79, 80, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93], "mathbf": [0, 6, 29, 35, 36, 40, 49, 65, 71, 72, 73, 75, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90], "solv": [0, 2, 20, 26, 44, 45, 65, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 90, 93], "problem": [0, 6, 7, 8, 10, 11, 20, 21, 26, 44, 45, 62, 65, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93], "mathop": [0, 71, 72, 73, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 90], "arg": [0, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 90, 92], "min": [0, 29, 31, 35, 40, 41, 49, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 90, 92], "_": [0, 24, 35, 39, 44, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92], "quad": [0, 6, 71, 72, 73, 75, 76, 79, 80, 81, 82, 86, 87, 88, 89, 90, 92], "sum_i": [0, 30, 70, 71, 80, 86, 87, 88, 89, 90, 92], "w_": [0, 35, 71, 79, 80, 88], "_i": [0, 40, 71, 75, 80, 84, 86, 87, 88, 89, 90], "where": [0, 4, 6, 7, 28, 35, 44, 47, 49, 65, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 92, 93], "cdot": [0, 40, 65, 71, 73, 75, 80, 81, 82, 87, 88, 92], "distanc": [0, 3, 8, 9, 28, 29, 32, 34, 35, 36, 39, 49, 57, 59, 60, 69, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 85, 86, 88, 89, 91, 93], "see": [0, 2, 5, 8, 49, 68, 70, 71, 73, 74, 75, 79, 80, 82, 84, 86, 87, 88, 92, 93], "sinkhorn_stabil": [0, 71, 73, 88, 92], "sinkhorn_log": [0, 71, 72, 75, 92, 93], "train": [0, 19, 25, 41, 44, 71, 73, 74, 75, 78, 80, 88, 92, 93], "column": [0, 6, 29, 31, 36, 38, 48, 51, 71, 72, 80, 84, 86, 88], "matrix": [0, 2, 6, 8, 10, 11, 13, 19, 23, 25, 28, 34, 35, 42, 44, 52, 53, 54, 56, 62, 64, 65, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "respect": [0, 6, 16, 32, 35, 49, 67, 70, 71, 72, 73, 75, 78, 79, 80, 88, 91, 92, 93], "term": [0, 8, 52, 56, 71, 72, 73, 75, 79, 80, 81, 82, 86, 87, 88, 89, 92, 93], "cost": [0, 20, 26, 33, 39, 41, 42, 44, 46, 47, 50, 51, 52, 53, 61, 71, 72, 73, 75, 76, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "algorithm": [0, 15, 31, 33, 34, 46, 62, 68, 71, 72, 73, 75, 76, 79, 80, 81, 86, 87, 88, 90, 91, 92, 93], "us": [0, 2, 3, 6, 7, 8, 10, 11, 19, 24, 25, 26, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 49, 50, 56, 61, 62, 63, 65, 67, 68, 70, 76, 78, 79, 85, 90, 93], "knopp": [0, 69, 70, 71, 88, 91, 92, 93], "scale": [0, 29, 31, 34, 36, 40, 45, 47, 62, 71, 73, 80, 86, 87, 88, 89, 91, 92, 93], "propos": [0, 3, 6, 8, 10, 11, 13, 16, 32, 40, 41, 56, 58, 59, 62, 71, 73, 76, 77, 79, 80, 82, 87, 88, 90, 92, 93], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 28, 30, 32, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 64, 65, 71, 73, 80, 81, 82, 84, 85, 88, 91, 92], "paramet": [0, 2, 5, 6, 7, 8, 11, 12, 18, 20, 21, 28, 30, 31, 32, 33, 34, 35, 43, 46, 55, 56, 61, 62, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "arrai": [0, 2, 6, 7, 10, 11, 12, 13, 15, 16, 21, 23, 28, 33, 34, 35, 40, 42, 45, 49, 52, 58, 62, 63, 64, 65, 70, 71, 72, 73, 76, 77, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93], "like": [0, 2, 49, 68, 69, 71, 72, 73, 76, 77, 79, 80, 81, 87, 88, 89, 90, 93], "shape": [0, 2, 3, 4, 7, 10, 11, 13, 14, 16, 19, 21, 23, 25, 26, 28, 29, 30, 31, 34, 35, 36, 41, 45, 49, 62, 68, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93], "dim": [0, 4, 32, 34, 71, 85, 88, 89], "n_hist": [0, 71, 88], "size": [0, 4, 6, 8, 15, 19, 25, 29, 31, 32, 35, 36, 39, 49, 55, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 84, 87, 89, 93], "loss": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 18, 24, 25, 30, 31, 32, 35, 42, 44, 52, 53, 56, 62, 63, 64, 65, 71, 73, 79, 80, 81, 82, 86, 87, 88, 89, 91, 92, 93], "float": [0, 1, 5, 6, 7, 8, 12, 28, 34, 41, 44, 49, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "str": [0, 31, 33, 35, 49, 63, 65, 71, 73, 74, 75, 79, 80, 86, 87, 88, 89], "option": [0, 49, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93], "solver": [0, 9, 11, 30, 33, 37, 38, 45, 50, 57, 69, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93], "either": [0, 24, 65, 71, 73, 75, 79, 80, 88], "each": [0, 6, 8, 28, 31, 32, 35, 49, 71, 72, 73, 78, 79, 80, 86, 87, 88, 89, 91, 92, 93], "histogram": [0, 44, 71, 72, 74, 76, 80, 82, 84, 86, 88, 89, 90, 91, 92, 93], "simplex": [0, 2, 6, 7, 35, 44, 71, 80, 86, 89, 91, 92], "barycentr": [0, 24, 71, 73, 80, 88, 92], "coodin": [0, 71, 88], "int": [0, 2, 32, 34, 35, 40, 58, 59, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92], "max": [0, 10, 11, 13, 29, 31, 33, 34, 35, 36, 40, 42, 46, 49, 50, 51, 53, 54, 55, 56, 61, 62, 64, 65, 70, 71, 73, 76, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "number": [0, 1, 5, 6, 8, 14, 15, 16, 18, 20, 21, 28, 30, 31, 33, 34, 35, 46, 49, 56, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "iter": [0, 1, 2, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 31, 33, 34, 39, 41, 44, 49, 56, 62, 71, 72, 73, 75, 76, 79, 80, 81, 82, 84, 86, 87, 88, 90, 91, 92, 93], "stop": [0, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 86, 88, 90, 93], "threshold": [0, 28, 70, 71, 72, 73, 75, 76, 79, 80, 81, 82, 83, 86, 88, 90, 92], "error": [0, 7, 22, 28, 31, 33, 35, 62, 68, 70, 71, 73, 75, 79, 80, 82, 86, 88, 91, 92, 93], "bool": [0, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90], "print": [0, 1, 2, 4, 5, 6, 8, 29, 31, 32, 33, 35, 36, 39, 44, 47, 49, 63, 68, 71, 72, 73, 75, 76, 79, 80, 81, 82, 86, 88, 90, 93], "inform": [0, 24, 25, 32, 35, 39, 44, 46, 47, 67, 68, 71, 72, 73, 75, 76, 79, 80, 81, 82, 86, 87, 88, 90, 91, 92], "along": [0, 2, 6, 7, 70, 71, 73, 75, 76, 79, 80, 81, 82, 84, 86, 88, 90], "record": [0, 7, 68, 71, 72, 73, 76, 77, 79, 80, 81, 82, 86, 87, 88, 90], "rais": [0, 68, 70, 71, 79, 80, 82, 89, 93], "doesn": [0, 71], "t": [0, 6, 7, 10, 11, 13, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 44, 45, 49, 55, 59, 62, 64, 65, 71, 72, 73, 75, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "converg": [0, 2, 15, 18, 20, 21, 31, 33, 34, 49, 56, 71, 73, 79, 80, 81, 91, 92, 93], "return": [0, 2, 3, 4, 5, 6, 8, 16, 19, 23, 25, 28, 29, 31, 32, 33, 34, 36, 49, 55, 56, 64, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "dict": [0, 35, 71, 72, 73, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90], "dictionari": [0, 2, 37, 38, 69, 71, 72, 73, 76, 77, 79, 80, 81, 82, 85, 86, 87, 88, 90, 91, 92, 93], "onli": [0, 6, 14, 30, 49, 70, 71, 72, 73, 75, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93], "benam": [0, 10, 11, 71, 82, 88, 91, 92], "j": [0, 2, 10, 11, 12, 16, 19, 21, 25, 29, 30, 31, 34, 35, 36, 39, 40, 44, 45, 49, 56, 64, 65, 71, 72, 73, 75, 76, 79, 80, 81, 82, 84, 86, 87, 88, 89, 91, 92], "d": [0, 10, 11, 14, 22, 23, 28, 31, 33, 35, 49, 56, 63, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92], "carlier": [0, 10, 11, 71, 80, 82, 88, 91, 92], "g": [0, 4, 8, 10, 11, 19, 21, 25, 28, 29, 30, 31, 32, 35, 36, 46, 47, 49, 50, 52, 56, 61, 62, 64, 71, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93], "cuturi": [0, 8, 10, 11, 13, 31, 33, 41, 47, 69, 71, 73, 75, 77, 79, 80, 82, 86, 87, 88, 91, 92], "nenna": [0, 10, 11, 71, 82, 88, 91, 92], "l": [0, 8, 10, 11, 13, 30, 31, 33, 59, 62, 64, 71, 72, 73, 75, 79, 80, 82, 84, 85, 86, 88, 91, 92], "peyr\u00e9": [0, 8, 10, 11, 31, 33, 47, 56, 62, 69, 71, 73, 77, 79, 80, 81, 82, 87, 88, 91, 92], "2015": [0, 3, 10, 11, 56, 58, 71, 73, 81, 82, 85, 88, 91, 92], "project": [0, 2, 3, 4, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 29, 31, 33, 35, 36, 44, 46, 49, 55, 56, 62, 63, 67, 68, 69, 71, 75, 79, 80, 82, 85, 86, 88, 89, 91, 92, 93], "transport": [0, 3, 5, 10, 11, 25, 28, 29, 31, 32, 33, 36, 38, 48, 56, 57, 62, 63, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 93], "siam": [0, 10, 11, 19, 25, 56, 71, 73, 80, 81, 82, 88, 91, 92], "journal": [0, 3, 10, 11, 19, 25, 33, 56, 58, 71, 73, 77, 79, 80, 81, 82, 85, 88, 90, 91, 92, 93], "scientif": [0, 10, 11, 71, 82, 88, 91, 92, 93], "37": [0, 5, 10, 11, 13, 56, 71, 82, 88, 91, 92, 93], "2": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 30, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "a1111": [0, 10, 11, 71, 82, 88, 91, 92], "a1138": [0, 10, 11, 71, 82, 88, 91, 92], "barycenter_unbalanc": [0, 62, 88, 92], "reg_m": [0, 65, 73, 82, 88, 92], "1000": [0, 5, 8, 14, 21, 23, 41, 44, 47, 55, 70, 71, 73, 75, 79, 82, 88], "1e": [0, 2, 7, 8, 10, 11, 13, 15, 18, 19, 20, 21, 24, 25, 26, 30, 34, 44, 45, 49, 50, 51, 52, 54, 56, 62, 64, 70, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 88, 93], "06": [0, 11, 24, 31, 41, 47, 50, 56, 71, 72, 73, 75, 77, 80, 82, 88], "u_": [0, 85, 88], "sinkhorn_unbalanc": [0, 61, 65, 88, 92], "reg_mi": [0, 88], "margin": [0, 31, 33, 38, 48, 64, 71, 72, 79, 80, 82, 84, 88, 89, 92, 93], "relax": [0, 37, 38, 61, 69, 79, 81, 84, 86, 88, 91, 92, 93], "hyperparamet": [0, 88], "gener": [0, 3, 7, 11, 12, 13, 17, 33, 34, 38, 39, 45, 47, 49, 53, 55, 57, 63, 68, 69, 70, 71, 73, 74, 76, 80, 81, 83, 85, 86, 88, 89, 90, 91, 93], "10": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 18, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 50, 51, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 71, 73, 75, 79, 80, 81, 86, 88, 91, 92], "dimens": [0, 7, 34, 41, 70, 71, 75, 78, 79, 82, 84, 85, 88, 93], "ground": [0, 38, 54, 57, 71, 73, 80, 83, 86, 87, 88, 91, 92], "metric": [0, 20, 21, 33, 38, 45, 49, 54, 57, 63, 71, 73, 79, 80, 81, 82, 83, 84, 87, 88, 89, 91, 92, 93], "entropi": [0, 46, 61, 70, 71, 75, 79, 86, 88, 91, 92], "If": [0, 68, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 86, 88, 89, 90, 91, 92, 93], "uniform": [0, 4, 6, 35, 42, 43, 46, 49, 52, 58, 59, 64, 65, 70, 71, 72, 73, 76, 78, 79, 80, 85, 88, 89, 90, 92, 93], "chizat": [0, 62, 71, 73, 82, 88, 91, 92], "schmitzer": [0, 62, 71, 73, 82, 88, 91, 92], "b": [0, 6, 7, 11, 14, 21, 22, 23, 26, 30, 33, 34, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "vialard": [0, 62, 71, 73, 82, 88, 91, 92], "f": [0, 3, 4, 10, 13, 19, 25, 29, 30, 32, 35, 36, 40, 44, 47, 49, 56, 59, 62, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 85, 87, 88, 89, 91, 92, 93], "x": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 40, 41, 42, 43, 44, 46, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92], "2016": [0, 11, 24, 25, 31, 33, 41, 47, 62, 71, 73, 75, 79, 80, 82, 87, 88, 91, 92, 93], "arxiv": [0, 16, 53, 56, 62, 71, 73, 75, 80, 81, 86, 88, 89, 91, 92], "preprin": [0, 88], "1607": [0, 62, 71, 73, 88, 91, 92], "05816": [0, 62, 71, 73, 88, 91, 92], "binary_search_circl": [0, 80, 93], "u_valu": [0, 80], "v_valu": [0, 80], "u_weight": [0, 80], "v_weight": [0, 80], "p": [0, 2, 4, 7, 21, 28, 29, 30, 31, 33, 34, 35, 36, 41, 45, 49, 55, 59, 63, 64, 65, 70, 71, 72, 73, 74, 75, 76, 79, 80, 82, 85, 86, 89, 90, 91, 92, 93], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 73, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92], "lm": [0, 80], "tm": [0, 55, 80], "tp": [0, 55, 64, 80], "ep": [0, 8, 13, 34, 70, 80], "require_sort": [0, 80], "circl": [0, 38, 41, 49, 57, 69, 80, 89, 91, 93], "binari": [0, 35, 74, 80], "search": [0, 28, 29, 36, 49, 71, 79, 80, 81, 91, 92], "44": [0, 56, 80, 82, 91, 93], "sampl": [0, 1, 6, 19, 25, 35, 38, 41, 42, 43, 45, 47, 48, 49, 52, 55, 58, 59, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 92, 93], "need": [0, 49, 63, 68, 71, 75, 78, 80, 83, 92, 93], "": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 25, 26, 29, 30, 31, 33, 34, 35, 36, 38, 40, 44, 46, 49, 50, 51, 54, 55, 56, 60, 61, 62, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93], "cong": [0, 80], "thei": [0, 67, 78, 80, 92, 93], "mathbb": [0, 71, 79, 80, 85, 87, 89, 92], "r": [0, 3, 4, 7, 8, 10, 11, 13, 21, 24, 25, 29, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 46, 47, 49, 50, 51, 54, 55, 56, 59, 61, 62, 63, 64, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93], "take": [0, 55, 67, 80, 81, 84, 87, 88, 92], "valu": [0, 2, 7, 11, 26, 28, 30, 34, 35, 41, 49, 54, 55, 62, 70, 71, 72, 73, 74, 78, 79, 80, 81, 82, 83, 84, 86, 88, 89, 92, 93], "modulo": [0, 80], "subset": [0, 32, 80, 89], "requir": [0, 28, 70, 73, 79, 80, 91, 92, 93], "first": [0, 2, 3, 29, 30, 32, 33, 35, 36, 68, 70, 71, 72, 79, 80, 84, 86, 89, 91, 92], "find": [0, 28, 34, 47, 70, 80, 81, 91, 92, 93], "coordin": [0, 12, 30, 34, 70, 72, 73, 75, 79, 80, 87, 88, 89, 91, 92], "e": [0, 44, 67, 71, 78, 79, 80, 85, 89, 91], "atan2": [0, 70, 80, 89], "w_p": [0, 80, 85, 92], "u": [0, 1, 2, 3, 5, 6, 14, 40, 44, 49, 59, 62, 68, 71, 75, 80, 82, 85, 87, 88, 89, 91, 92, 93], "v": [0, 1, 5, 17, 22, 27, 28, 29, 31, 36, 38, 40, 47, 48, 49, 59, 62, 70, 71, 73, 74, 80, 83, 85, 86, 87, 88, 89, 91, 92, 93], "inf_": [0, 80], "theta": [0, 1, 5, 8, 24, 55, 71, 74, 80, 85], "int_0": [0, 80], "f_u": [0, 80], "q": [0, 30, 31, 33, 35, 62, 63, 70, 71, 72, 79, 80, 82, 84, 92], "f_v": [0, 80], "mathrm": [0, 4, 55, 65, 71, 73, 75, 79, 80, 81, 82, 85, 86, 87, 88, 89], "cdf": [0, 80], "For": [0, 26, 31, 33, 35, 47, 49, 63, 68, 71, 72, 80, 81, 84, 87, 89, 92, 93], "x_1": [0, 39, 49, 80, 89], "x_2": [0, 39, 49, 80, 89], "get": [0, 2, 29, 31, 34, 35, 36, 71, 73, 75, 79, 80, 89, 91, 92, 93], "frac": [0, 4, 39, 44, 70, 71, 73, 75, 79, 80, 82, 84, 85, 86, 87, 89, 90, 92], "pi": [0, 1, 5, 8, 16, 23, 24, 28, 39, 40, 41, 44, 53, 55, 59, 75, 80, 87, 89, 93], "get_coordinate_circl": [0, 80, 89], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 70, 80, 85, 91, 93], "backend": [0, 2, 3, 5, 6, 7, 31, 33, 44, 49, 69, 71, 76, 79, 80, 81, 85, 87, 89, 90, 91, 93], "tensorflow": [0, 70, 80, 85, 91, 92, 93], "jax": [0, 70, 80, 85, 89, 91, 92, 93], "support": [0, 3, 5, 7, 17, 18, 38, 69, 71, 72, 76, 80, 85, 93], "ndarrai": [0, 28, 34, 70, 71, 74, 75, 80, 81, 82, 83, 84, 85, 86, 87, 89], "n": [0, 2, 4, 6, 7, 8, 10, 11, 13, 14, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 46, 47, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 64, 65, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92], "domain": [0, 26, 27, 29, 31, 56, 71, 73, 74, 75, 77, 79, 80, 81, 83, 85, 86, 88, 89, 91, 93], "target": [0, 1, 6, 7, 8, 23, 24, 27, 34, 38, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 64, 71, 72, 73, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "default": [0, 2, 34, 35, 49, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 92, 93], "power": [0, 49, 70, 80, 85, 93], "lower": [0, 14, 18, 22, 33, 49, 80], "bound": [0, 80, 93], "dc": [0, 80], "upper": [0, 40, 61, 80], "condit": [0, 30, 31, 33, 56, 69, 70, 73, 76, 79, 80, 81, 90, 91, 92, 93], "sort": [0, 40, 68, 70, 80, 92], "also": [0, 2, 49, 68, 70, 71, 73, 78, 79, 80, 89, 91, 92, 93], "associ": [0, 44, 73, 79, 80, 82, 85, 89], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 66, 67, 68, 70, 85, 93], "np": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 70, 71, 73, 74, 80, 82, 84, 85, 86, 88, 89, 92, 93], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 71, 73, 74, 78, 79, 80, 81, 82, 84, 85, 88, 89, 91, 92], "8": [0, 3, 4, 7, 8, 10, 11, 13, 14, 16, 18, 19, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 45, 47, 50, 52, 53, 56, 58, 62, 63, 64, 65, 72, 73, 79, 80, 87, 89, 91, 92], "4": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 58, 61, 62, 63, 64, 65, 67, 71, 72, 79, 80, 82, 84, 88, 91, 92], "7": [0, 10, 11, 12, 13, 15, 16, 18, 19, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 39, 41, 44, 45, 47, 49, 52, 53, 54, 56, 59, 62, 65, 72, 73, 80, 81, 84, 86, 87, 91, 92], "delon": [0, 16, 80, 91], "juli": [0, 8, 80, 91, 93], "julien": [0, 80, 91], "salomon": [0, 80, 91], "andrei": [0, 80, 91], "sobolevski": [0, 80, 91], "fast": [0, 50, 71, 79, 80, 91, 92, 93], "mong": [0, 80, 82, 91], "appli": [0, 24, 67, 72, 73, 80, 89, 91], "mathemat": [0, 3, 58, 68, 71, 79, 80, 82, 85, 91, 92, 93], "70": [0, 1, 4, 5, 8, 29, 30, 31, 36, 50, 56, 80, 91], "2010": [0, 80, 82, 91], "2239": [0, 80, 91], "2258": [0, 80, 91], "dist": [0, 6, 8, 20, 28, 30, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 61, 62, 64, 65, 75, 79, 80, 84, 89, 92, 93], "x1": [0, 2, 3, 14, 15, 19, 23, 25, 32, 39, 40, 45, 49, 55, 75, 89], "x2": [0, 3, 14, 15, 19, 23, 25, 32, 39, 45, 49, 55, 75, 89], "sqeuclidean": [0, 20, 21, 49, 53, 54, 71, 73, 80, 87, 89], "w": [0, 6, 7, 8, 34, 35, 45, 49, 63, 65, 71, 72, 75, 77, 78, 79, 80, 85, 86, 87, 88, 89, 91, 92, 93], "between": [0, 2, 3, 6, 15, 16, 19, 28, 29, 31, 34, 35, 36, 38, 39, 42, 43, 44, 45, 49, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 88, 89, 90, 91, 93], "thi": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 49, 50, 51, 55, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 84, 85, 86, 87, 89, 90, 91, 92, 93], "compat": [0, 49, 70, 71, 75, 76, 78, 79, 80, 86, 87, 89, 90, 93], "work": [0, 12, 49, 68, 70, 71, 76, 79, 80, 81, 89, 90, 93], "from": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 19, 21, 23, 25, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 41, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "all": [0, 10, 11, 13, 26, 28, 31, 34, 35, 38, 45, 49, 62, 67, 68, 70, 71, 73, 76, 79, 80, 84, 88, 89, 90, 91, 92, 93], "n1": [0, 39, 44, 49, 89], "n2": [0, 29, 30, 31, 36, 39, 44, 49, 89], "callabl": [0, 49, 73, 75, 79, 81, 87, 89, 93], "euclidean": [0, 11, 28, 29, 31, 36, 45, 49, 53, 54, 73, 75, 80, 86, 89, 92, 93], "On": [0, 49, 73, 77, 89, 91, 92, 93], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 70, 71, 75, 79, 80, 82, 84, 85, 88, 89, 91, 92, 93], "accept": [0, 49, 67, 68, 80, 89, 93], "scipi": [0, 28, 33, 34, 49, 55, 63, 68, 70, 80, 82, 86, 88, 89, 91, 92, 93], "spatial": [0, 33, 34, 49, 63, 82, 89], "cdist": [0, 33, 34, 49, 63, 82, 89, 93], "braycurti": [0, 49, 89], "canberra": [0, 49, 89], "chebyshev": [0, 49, 89], "cityblock": [0, 49, 53, 80, 89], "correl": [0, 49, 89], "cosin": [0, 49, 89], "dice": [0, 49, 89], "ham": [0, 49, 89, 93], "jaccard": [0, 49, 89], "kulczynski1": [0, 49, 89], "mahalanobi": [0, 49, 89], "match": [0, 33, 49, 73, 79, 89, 91, 92], "minkowski": [0, 49, 80, 89], "rogerstanimoto": [0, 49, 89], "russellrao": [0, 49, 89], "seuclidean": [0, 49, 89], "sokalmichen": [0, 49, 89], "sokalsneath": [0, 49, 89], "wminkowski": [0, 49, 89], "yule": [0, 49, 89], "norm": [0, 15, 28, 31, 33, 40, 41, 49, 65, 70, 72, 73, 80, 89], "rank": [0, 43, 49, 76, 86, 89], "given": [0, 2, 29, 31, 34, 35, 36, 44, 49, 70, 71, 73, 75, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93], "type": [0, 68, 70, 71, 73, 74, 78, 79, 80, 81, 82, 84, 85, 86, 87, 89, 92, 93], "emd": [0, 18, 20, 22, 30, 42, 43, 45, 53, 69, 71, 72, 73, 80, 81, 82, 85, 86, 88, 90, 91, 93], "100000": [0, 47, 73, 80, 81, 88], "center_du": [0, 80], "numthread": [0, 80, 93], "earth": [0, 73, 80, 91, 93], "mover": [0, 73, 80, 91, 93], "gamma": [0, 49, 64, 65, 71, 73, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 92], "langl": [0, 71, 73, 79, 80, 81, 82, 85, 87, 88], "rangle_f": [0, 71, 73, 79, 80, 81, 82, 87, 88], "geq": [0, 65, 71, 73, 79, 80, 81, 82, 84, 87, 88, 89, 90, 92], "note": [0, 26, 49, 71, 73, 75, 78, 79, 80, 82, 83, 86, 89, 91, 92, 93], "c": [0, 2, 7, 8, 15, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 47, 49, 52, 53, 55, 59, 64, 65, 69, 70, 71, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93], "order": [0, 6, 20, 26, 28, 49, 70, 75, 78, 80, 83, 92], "float64": [0, 3, 7, 10, 11, 13, 14, 16, 19, 23, 25, 31, 33, 34, 46, 50, 51, 54, 56, 61, 62, 71, 80], "format": [0, 1, 2, 3, 4, 5, 8, 21, 39, 49, 64, 68, 70, 78, 80, 89, 91, 93], "It": [0, 2, 11, 18, 20, 21, 24, 25, 26, 30, 31, 33, 50, 56, 63, 68, 79, 80, 87, 91, 92, 93], "convert": [0, 6, 19, 23, 25, 34, 70, 80, 89], "But": [0, 76, 79, 80, 90, 92, 93], "cpu": [0, 2, 3, 7, 70, 76, 79, 80, 90, 93], "which": [0, 2, 28, 44, 49, 67, 70, 71, 72, 73, 76, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93], "can": [0, 2, 6, 49, 65, 68, 71, 73, 75, 76, 79, 80, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93], "lead": [0, 6, 49, 71, 76, 79, 80, 81, 90, 92, 93], "copi": [0, 7, 10, 29, 31, 36, 62, 68, 70, 76, 79, 80, 90, 92], "overhead": [0, 71, 76, 79, 80, 90, 92], "gpu": [0, 69, 70, 71, 76, 79, 80, 90, 93], "cast": [0, 41, 80, 92], "plan": [0, 2, 9, 29, 31, 36, 38, 43, 45, 50, 51, 64, 65, 71, 72, 76, 79, 80, 82, 84, 86, 87, 88, 89, 92, 93], "data": [0, 2, 3, 7, 13, 31, 33, 35, 49, 53, 68, 70, 71, 72, 73, 79, 80, 91, 92, 93], "provid": [0, 2, 35, 49, 68, 69, 70, 71, 73, 79, 80, 81, 84, 91, 92, 93], "input": [0, 13, 16, 62, 70, 71, 72, 73, 76, 79, 80, 86, 89, 90, 92], "prioriti": [0, 80], "an": [0, 2, 7, 8, 19, 23, 25, 28, 34, 49, 51, 67, 68, 70, 71, 73, 76, 79, 80, 81, 82, 84, 86, 87, 89, 93], "integ": [0, 28, 80, 93], "tensor": [0, 2, 3, 6, 7, 32, 44, 70, 78, 79, 80, 81, 92, 93], "might": [0, 15, 18, 20, 21, 26, 31, 33, 49, 56, 71, 80, 92, 93], "result": [0, 2, 49, 67, 68, 70, 79, 80, 89, 92, 93], "precis": [0, 44, 70, 71, 73, 79, 80], "behaviour": [0, 80], "unwant": [0, 80], "pleas": [0, 68, 70, 80, 91], "make": [0, 29, 31, 36, 49, 53, 61, 62, 67, 68, 70, 74, 80, 91, 92, 93], "sure": [0, 68, 80, 91], "point": [0, 11, 15, 16, 30, 31, 33, 34, 45, 46, 47, 55, 68, 71, 75, 79, 80, 82, 89, 91, 92, 93], "vector": [0, 6, 70, 71, 72, 78, 80, 84, 85, 89, 91, 92], "do": [0, 8, 20, 26, 33, 49, 63, 67, 68, 70, 71, 80, 89, 92, 93], "sum": [0, 2, 5, 6, 7, 11, 12, 13, 14, 29, 31, 32, 33, 35, 36, 41, 42, 49, 52, 54, 56, 59, 61, 64, 65, 70, 71, 73, 75, 79, 80, 81, 82, 84, 85, 86, 87, 89, 91, 92, 93], "same": [0, 24, 29, 33, 36, 49, 63, 70, 72, 80, 89, 92], "empti": [0, 58, 59, 73, 76, 80, 89, 90], "nt": [0, 6, 35, 71, 73, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 90], "maximum": [0, 4, 15, 28, 34, 49, 55, 70, 71, 73, 75, 79, 80, 81, 84, 86, 89], "befor": [0, 68, 73, 80, 93], "ha": [0, 2, 6, 8, 49, 69, 71, 73, 79, 80, 82, 89, 91, 92, 93], "contain": [0, 10, 11, 13, 62, 72, 76, 79, 80, 84, 89, 90, 91, 92, 93], "dual": [0, 8, 9, 11, 38, 71, 72, 74, 76, 79, 80, 83, 86, 87, 89, 90, 91, 92, 93], "variabl": [0, 35, 71, 73, 76, 79, 80, 84, 86, 87, 90, 92, 93], "otherwis": [0, 67, 70, 79, 80, 89], "boolean": [0, 70, 71, 73, 77, 80, 89], "center": [0, 40, 49, 75, 80, 93], "potenti": [0, 5, 8, 31, 71, 79, 80, 86, 87, 89, 93], "center_ot_du": [0, 80], "openmp": [0, 80, 93], "compil": [0, 80, 91, 92, 93], "choos": [0, 28, 55, 71, 75, 80, 92], "thread": [0, 80], "parallel": [0, 80, 89, 92, 93], "select": [0, 32, 46, 79, 80, 92], "highest": [0, 80], "possibl": [0, 68, 71, 73, 80, 89, 92, 93], "exit": [0, 76, 80, 90, 93], "statu": [0, 76, 80, 89, 90, 93], "simpl": [0, 2, 6, 12, 34, 44, 49, 74, 80, 89, 92, 93], "obviou": [0, 80], "solut": [0, 45, 49, 71, 80, 84, 92, 93], "perform": [0, 2, 3, 7, 46, 68, 79, 80, 89, 92, 93], "convers": [0, 80], "bonneel": [0, 3, 58, 69, 80, 85, 91, 92], "van": [0, 80, 91, 92], "de": [0, 71, 80, 91, 92], "pann": [0, 80, 91, 92], "pari": [0, 14, 15, 32, 80, 91, 92], "heidrich": [0, 80, 91, 92], "2011": [0, 79, 80, 91, 92], "decemb": [0, 70, 80, 91, 92, 93], "displac": [0, 54, 80, 89, 91, 92], "interpol": [0, 2, 7, 12, 18, 20, 22, 26, 30, 34, 35, 42, 49, 52, 53, 71, 80, 82, 91, 92], "lagrangian": [0, 80, 82, 84, 91, 92], "mass": [0, 2, 21, 29, 31, 49, 63, 65, 73, 79, 80, 82, 91, 92, 93], "In": [0, 2, 3, 6, 7, 8, 31, 33, 35, 39, 44, 45, 49, 67, 68, 71, 72, 75, 76, 78, 79, 80, 83, 85, 86, 91, 92, 93], "acm": [0, 71, 80, 91, 92], "transact": [0, 56, 71, 73, 80, 81, 91, 92], "graphic": [0, 71, 80, 91, 92, 93], "tog": [0, 71, 80, 91, 92], "vol": [0, 8, 56, 73, 77, 80, 81, 91, 92], "30": [0, 1, 3, 4, 5, 8, 11, 18, 20, 22, 26, 28, 29, 30, 31, 33, 34, 35, 36, 37, 40, 41, 46, 49, 50, 56, 73, 80, 91, 92, 93], "No": [0, 2, 35, 68, 80, 91, 92], "6": [0, 2, 5, 7, 11, 13, 16, 18, 19, 20, 22, 24, 25, 29, 31, 32, 33, 35, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 56, 61, 62, 63, 64, 65, 72, 73, 79, 80, 84, 87, 91, 92], "158": [0, 56, 80, 91, 92], "cg": [0, 31, 33, 56, 71, 73, 76, 79, 80, 86, 88, 90, 92, 93], "emd2": [0, 6, 8, 54, 69, 80, 88, 91, 93], "process": [0, 24, 25, 29, 32, 36, 39, 44, 46, 47, 49, 71, 72, 73, 80, 86, 87, 88, 91, 92, 93], "return_matrix": [0, 80], "min_": [0, 4, 6, 7, 8, 44, 65, 71, 73, 75, 79, 80, 82, 84, 88, 92], "nb": [0, 7, 10, 11, 13, 19, 25, 29, 31, 33, 34, 36, 41, 42, 43, 46, 50, 51, 52, 53, 54, 56, 58, 59, 61, 62, 63, 64, 65, 79, 80, 81, 83], "multipl": [0, 54, 71, 79, 80, 86, 88, 89, 93], "deprec": [0, 7, 10, 62, 63, 80, 89], "emd2_1d": [0, 80, 92], "x_a": [0, 80], "x_b": [0, 80], "dens": [0, 70, 79, 80, 89], "1d": [0, 9, 17, 30, 38, 57, 66, 69, 74, 79, 80, 81, 83, 89, 91, 92, 93], "measur": [0, 3, 7, 14, 16, 30, 47, 58, 71, 72, 75, 79, 80, 85, 87, 89, 91, 92], "sum_j": [0, 30, 80, 86, 87, 90], "gamma_": [0, 49, 71, 73, 80, 81, 82, 87, 88, 90, 92], "ij": [0, 40, 80, 90], "when": [0, 2, 55, 65, 67, 68, 71, 72, 75, 79, 80, 82, 84, 89, 91, 93], "y": [0, 1, 4, 8, 10, 15, 16, 18, 20, 21, 22, 24, 26, 28, 30, 32, 33, 35, 40, 41, 44, 59, 62, 70, 71, 72, 73, 74, 75, 79, 80, 82, 84, 85, 86, 89, 91, 92], "detail": [0, 67, 68, 75, 80, 92, 93], "dirac": [0, 14, 42, 52, 80], "locat": [0, 14, 16, 70, 71, 80], "real": [0, 41, 80], "line": [0, 19, 23, 25, 34, 49, 71, 79, 80, 81, 83, 92], "string": [0, 71, 72, 73, 79, 80, 87, 88, 89], "implement": [0, 5, 49, 68, 69, 70, 71, 75, 79, 80, 86, 89, 92, 93], "faster": [0, 80, 93], "math": [0, 28, 49, 80, 82, 86, 92], "spars": [0, 28, 38, 49, 57, 70, 71, 74, 75, 79, 80, 83, 86, 88, 89, 91, 92, 93], "represent": [0, 29, 35, 36, 47, 59, 67, 79, 80, 81, 85, 86, 87, 91, 92], "coo_matrix": [0, 70, 80], "set": [0, 2, 8, 18, 20, 22, 27, 28, 32, 34, 35, 38, 49, 67, 70, 71, 73, 74, 78, 79, 80, 81, 84, 89, 91, 92], "2017": [0, 8, 71, 73, 77, 80, 90, 91, 92, 93], "2018": [0, 8, 47, 71, 73, 77, 80, 82, 86, 87, 91, 92, 93], "multidimension": [0, 34, 80], "emd_1d": [0, 50, 80, 92, 93], "instead": [0, 5, 8, 10, 35, 62, 70, 71, 72, 80, 91, 92, 93], "factored_optimal_transport": [0, 43, 76], "xa": [0, 76, 90], "xb": [0, 3, 15, 43, 76, 90], "100": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 22, 24, 28, 31, 33, 34, 35, 40, 41, 43, 45, 46, 49, 50, 51, 54, 55, 56, 61, 62, 63, 64, 70, 71, 72, 73, 75, 76, 79, 80, 82, 85], "x0": [0, 4, 28, 76, 80, 85], "07": [0, 11, 17, 25, 33, 41, 47, 50, 56, 60, 63, 71, 72, 76, 80, 82, 88], "factor": [0, 38, 48, 70, 83, 91, 92, 93], "intermedi": [0, 5, 76], "40": [0, 1, 4, 5, 8, 29, 31, 33, 35, 36, 49, 50, 56, 65, 76, 84, 91, 92], "mu": [0, 3, 6, 7, 24, 25, 28, 30, 55, 63, 73, 75, 76, 85, 92], "w_2": [0, 55, 76, 80, 92], "mu_a": [0, 76], "mu_b": [0, 76], "empir": [0, 2, 3, 27, 38, 43, 53, 57, 69, 71, 73, 74, 76, 77, 80, 83, 89, 90, 91, 92, 93], "And": [0, 76], "two": [0, 2, 3, 10, 19, 21, 30, 39, 44, 47, 49, 51, 54, 62, 68, 70, 71, 72, 73, 76, 77, 79, 80, 84, 88, 90, 91, 92, 93], "gradient": [0, 2, 6, 7, 8, 9, 30, 31, 33, 38, 41, 44, 56, 69, 70, 71, 73, 75, 76, 79, 80, 81, 82, 84, 86, 87, 90, 91, 92, 93], "39": [0, 1, 56, 76, 90, 91, 92], "rel": [0, 18, 30, 31, 33, 34, 56, 71, 73, 76, 79, 81, 90, 93], "variat": [0, 11, 54, 76, 81, 90, 92, 93], "ga": [0, 43, 76], "gb": [0, 43, 76], "forrow": [0, 76, 91, 92], "h\u00fctter": [0, 76, 91, 92], "nitzan": [0, 76, 91, 92], "rigollet": [0, 71, 76, 91, 92], "schiebing": [0, 76, 91, 92], "weed": [0, 71, 76, 91, 92], "2019": [0, 3, 28, 30, 31, 33, 46, 71, 73, 76, 79, 85, 91, 92, 93], "april": [0, 71, 76, 91, 92, 93], "statist": [0, 8, 71, 73, 76, 80, 86, 91, 92], "via": [0, 2, 3, 35, 67, 71, 76, 79, 91, 92, 93], "coupl": [0, 24, 38, 48, 71, 72, 73, 76, 79, 83, 91, 92, 93], "22nd": [0, 71, 76, 91, 92], "intern": [0, 2, 3, 7, 8, 13, 28, 29, 30, 31, 33, 35, 36, 47, 59, 71, 73, 76, 79, 80, 81, 82, 85, 86, 87, 91, 92], "confer": [0, 2, 3, 8, 13, 28, 29, 30, 31, 33, 35, 36, 47, 59, 71, 73, 76, 79, 80, 81, 82, 85, 86, 87, 91, 92], "artifici": [0, 8, 71, 73, 76, 86, 91, 92], "intellig": [0, 8, 56, 71, 73, 76, 81, 86, 91, 92], "pp": [0, 3, 8, 31, 33, 56, 71, 73, 76, 81, 85, 91, 92], "2454": [0, 76, 91, 92], "2465": [0, 76, 91, 92], "pmlr": [0, 3, 8, 13, 71, 76, 91, 92], "fused_gromov_wasserstein": [0, 29, 30, 31, 36, 79, 92], "c1": [0, 2, 29, 30, 31, 33, 36, 63, 64, 65, 79, 81, 82, 92], "c2": [0, 2, 29, 30, 31, 33, 36, 63, 64, 65, 79, 82, 92], "loss_fun": [0, 30, 79], "square_loss": [0, 30, 31, 33, 34, 79], "symmetr": [0, 29, 36, 71, 79, 92, 93], "alpha": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 18, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 35, 36, 40, 43, 45, 47, 49, 54, 55, 58, 59, 61, 62, 64, 65, 71, 72, 73, 78, 79, 80, 81, 83, 86, 87, 93], "armijo": [0, 79, 81, 93], "g0": [0, 29, 36, 42, 43, 50, 52, 56, 79, 81, 82, 88, 90], "max_it": [0, 18, 21, 24, 25, 33, 34, 73, 79, 86, 93], "tol_rel": [0, 79], "09": [0, 9, 11, 17, 27, 33, 47, 48, 50, 56, 71, 73, 79, 81, 86], "tol_ab": [0, 79], "fgw": [0, 29, 31, 36, 37, 38, 69, 78, 79, 91, 93], "graph": [0, 30, 33, 37, 38, 49, 69, 70, 78, 79, 81, 91, 92, 93], "24": [0, 30, 31, 33, 41, 56, 72, 79, 91, 92, 93], "sum_": [0, 4, 6, 49, 71, 72, 73, 75, 79, 80, 81, 82, 85, 87, 88, 92], "k": [0, 2, 6, 8, 13, 14, 15, 21, 28, 29, 30, 31, 35, 36, 40, 41, 45, 49, 51, 55, 70, 71, 72, 73, 75, 78, 79, 80, 82, 84, 92], "c_1": [0, 30, 79, 81, 82], "c_2": [0, 29, 30, 36, 79, 82], "account": [0, 55, 67, 68, 71, 79], "misfit": [0, 79], "similar": [0, 8, 26, 49, 73, 79, 84, 92], "matric": [0, 7, 31, 33, 34, 39, 44, 49, 56, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 93], "conjug": [0, 79, 86], "done": [0, 6, 44, 45, 49, 79, 92, 93], "limit": [0, 70, 79, 93], "memori": [0, 71, 79, 80, 87, 92, 93], "discuss": [0, 73, 77, 79, 81, 91, 92, 93], "featur": [0, 28, 31, 32, 44, 68, 71, 72, 78, 79, 91], "across": [0, 29, 31, 79, 93], "repres": [0, 20, 26, 28, 67, 71, 79, 80, 92], "structur": [0, 28, 31, 33, 35, 70, 78, 79, 91, 92, 93], "space": [0, 16, 32, 33, 34, 63, 67, 70, 71, 72, 79, 80, 82, 85, 91, 92, 93], "let": [0, 79, 81], "its": [0, 1, 2, 5, 24, 29, 31, 35, 36, 49, 55, 67, 70, 71, 78, 79, 81, 82, 85, 91, 92, 93], "taken": [0, 35, 79, 92], "assum": [0, 79, 93], "symmetri": [0, 79], "test": [0, 28, 32, 41, 68, 70, 79, 81, 91, 93], "conduct": [0, 79, 81], "els": [0, 2, 3, 7, 12, 16, 21, 28, 29, 31, 35, 36, 40, 55, 73, 75, 77, 78, 79, 88], "resp": [0, 71, 79, 81], "asymmetr": [0, 79, 93], "trade": [0, 35, 78, 79], "off": [0, 2, 4, 12, 13, 19, 21, 23, 25, 29, 31, 32, 35, 36, 45, 56, 68, 78, 79], "step": [0, 1, 2, 3, 5, 6, 7, 8, 11, 28, 32, 44, 68, 70, 71, 79, 81, 93], "found": [0, 28, 68, 79, 92], "research": [0, 69, 79, 91, 92, 93], "close": [0, 28, 49, 73, 77, 79, 80, 89, 92], "form": [0, 6, 8, 49, 73, 77, 79, 80, 84, 89, 92, 93], "issu": [0, 67, 68, 71, 79, 89, 91, 92], "initi": [0, 14, 69, 71, 72, 75, 78, 79, 80, 81, 82, 88, 90, 92], "pq": [0, 79], "must": [0, 79, 86, 89], "satisfi": [0, 79, 81], "constraint": [0, 31, 33, 71, 79, 80, 81, 86, 89, 92], "absolut": [0, 18, 30, 31, 33, 56, 70, 72, 79, 81, 90, 93], "directli": [0, 49, 79, 82, 92], "pass": [0, 68, 79, 80, 82, 86, 89, 93], "vayer": [0, 2, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 44, 69, 72, 75, 78, 79, 81, 91, 92], "titouan": [0, 28, 29, 30, 31, 33, 36, 69, 78, 79, 81, 91], "chapel": [0, 28, 30, 31, 33, 63, 64, 65, 69, 79, 82, 84, 88, 91, 92], "laetitia": [0, 28, 30, 31, 33, 63, 65, 69, 79, 91], "flamari": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 47, 49, 50, 51, 52, 53, 54, 56, 64, 69, 71, 72, 73, 75, 78, 79, 81, 84, 87, 88, 91, 92], "r\u00e9mi": [0, 2, 3, 7, 14, 28, 29, 30, 31, 32, 33, 36, 69, 71, 73, 78, 79, 81, 91, 92], "tavenard": [0, 28, 30, 31, 33, 69, 79, 91, 92], "romain": [0, 28, 30, 31, 33, 69, 79, 91], "courti": [0, 2, 7, 8, 12, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 47, 49, 56, 59, 69, 71, 72, 73, 75, 78, 79, 80, 81, 85, 87, 91, 92], "nicola": [0, 3, 7, 12, 28, 29, 30, 31, 33, 34, 36, 49, 58, 69, 71, 73, 78, 79, 81, 85, 91, 92], "applic": [0, 26, 28, 29, 30, 31, 33, 36, 56, 71, 73, 77, 79, 80, 81, 82, 90, 91], "machin": [0, 2, 3, 8, 13, 28, 30, 31, 33, 35, 56, 71, 73, 79, 80, 81, 82, 91, 92, 93], "learn": [0, 2, 3, 6, 8, 13, 24, 28, 29, 30, 31, 33, 36, 37, 38, 47, 48, 59, 68, 69, 71, 72, 73, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 91, 92, 93], "icml": [0, 2, 28, 30, 31, 33, 35, 75, 79, 82, 89, 91, 92], "47": [0, 39, 44, 56, 64, 66, 72, 79, 91, 93], "chowdhuri": [0, 79, 91], "m\u00e9moli": [0, 79, 91, 92], "network": [0, 8, 32, 78, 79, 91, 92, 93], "stabl": [0, 5, 70, 79, 91, 92, 93], "invari": [0, 79, 91], "infer": [0, 70, 79, 91], "ima": [0, 79, 91], "757": [0, 79, 91], "787": [0, 79, 91], "fused_gromov_wasserstein2": [0, 79], "gw": [0, 29, 36, 79, 81, 82, 91, 93], "differenti": [0, 6, 7, 44, 79, 91, 92, 93], "wrt": [0, 2, 70, 79, 89], "quadrat": [0, 9, 38, 65, 74, 79, 81, 82, 83, 87, 88, 89, 91, 93], "38": [0, 1, 2, 25, 27, 35, 56, 79, 91, 92], "fuse": [0, 37, 69, 78, 79, 91, 92, 93], "vincent": [0, 2, 29, 31, 32, 33, 35, 36, 69, 78, 79, 81, 91, 92], "cuaz": [0, 2, 29, 31, 32, 33, 35, 36, 69, 78, 79, 81, 91, 92], "corn": [0, 2, 29, 32, 35, 36, 78, 79, 81, 91, 92], "onlin": [0, 2, 35, 49, 67, 79, 91, 92], "2021": [0, 2, 16, 29, 33, 35, 36, 64, 70, 75, 79, 80, 81, 84, 88, 91, 92, 93], "gromov_barycent": [0, 34, 79, 92, 93], "lambda": [0, 28, 79, 82, 84, 92], "tol": [0, 21, 34, 73, 79, 82, 86], "warmstartt": [0, 79, 93], "init_c": [0, 79], "random_st": [0, 2, 32, 34, 35, 40, 74, 79], "leq": [0, 79, 81, 82, 92], "block": [0, 2, 26, 32, 68, 71, 72, 73, 75, 79, 91, 92], "descent": [0, 2, 6, 7, 44, 72, 73, 75, 79, 81, 91, 92], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 70, 71, 73, 79, 80, 87, 89, 91, 92, 93], "lambda_": [0, 79, 92], "base": [0, 29, 31, 33, 36, 37, 38, 68, 69, 71, 73, 78, 79, 86, 89, 91, 92, 93], "specif": [0, 34, 67, 68, 71, 73, 79, 88, 92, 93], "updat": [0, 71, 73, 79, 80, 84, 87, 89, 93], "accord": [0, 79, 89], "kernel": [0, 24, 31, 73, 79, 82, 89, 91, 92], "calcul": [0, 15, 39, 70, 71, 72, 79], "warmstart": [0, 31, 71, 72, 79, 93], "success": [0, 79], "random": [0, 2, 3, 5, 6, 8, 14, 15, 19, 21, 23, 25, 28, 29, 30, 31, 33, 34, 35, 36, 39, 40, 41, 43, 44, 47, 55, 59, 63, 64, 65, 70, 74, 78, 79, 85, 89, 93], "user": [0, 56, 68, 79, 91, 92, 93], "randomst": [0, 2, 6, 19, 23, 25, 34, 40, 47, 74, 79, 85, 89], "instanc": [0, 5, 67, 74, 79, 81, 89, 92, 93], "fix": [0, 35, 44, 68, 71, 75, 78, 79, 80, 82, 86, 91, 93], "seed": [0, 3, 5, 21, 28, 29, 30, 31, 32, 33, 34, 35, 36, 41, 43, 44, 64, 65, 70, 74, 79, 85, 89], "reproduc": [0, 11, 68, 79, 92], "permut": [0, 2, 3, 7, 79], "arbitrarili": [0, 79], "dure": [0, 79], "12": [0, 5, 11, 13, 14, 18, 25, 31, 33, 35, 41, 44, 56, 79, 80, 82, 91, 92], "gabriel": [0, 8, 31, 33, 69, 71, 79, 82, 91, 92], "marco": [0, 8, 29, 31, 33, 36, 69, 71, 78, 79, 80, 81, 82, 91, 92], "justin": [0, 31, 33, 79, 82, 91, 92], "solomon": [0, 31, 33, 71, 79, 82, 91, 92], "averag": [0, 31, 33, 70, 73, 75, 79, 82, 87, 91, 92], "gromov_wasserstein": [0, 2, 29, 30, 33, 36, 79, 92], "kl_loss": [0, 79], "minim": [0, 2, 3, 4, 6, 7, 28, 29, 31, 35, 36, 44, 75, 79, 81, 86, 88, 89, 92, 93], "13": [0, 11, 13, 18, 25, 30, 31, 41, 49, 54, 56, 79, 82, 91, 92, 93], "facundo": [0, 79, 91, 92], "approach": [0, 11, 18, 20, 22, 26, 71, 79, 80, 91, 92], "object": [0, 1, 2, 3, 4, 5, 8, 11, 23, 34, 50, 51, 54, 55, 71, 72, 73, 79, 80, 86, 89, 91, 92, 93], "foundat": [0, 79, 82, 91, 92, 93], "11": [0, 5, 10, 11, 18, 25, 31, 33, 35, 41, 48, 56, 62, 64, 75, 79, 90, 91, 92], "417": [0, 79, 91, 92, 93], "487": [0, 79, 91, 92, 93], "gromov_wasserstein2": [0, 2, 79, 92, 93], "discrep": [0, 59, 79, 82, 85, 93], "gw_dist": [0, 29, 33, 36, 79], "max_sliced_wasserstein_dist": [0, 85], "x_": [0, 44, 71, 73, 80, 85], "x_t": [0, 71, 73, 85, 89], "n_project": [0, 3, 4, 58, 59, 85], "50": [0, 1, 3, 4, 5, 6, 8, 11, 15, 16, 21, 31, 32, 33, 35, 40, 42, 50, 52, 56, 64, 71, 82, 85, 86, 91, 93], "mont": [0, 85], "carlo": [0, 85], "approxim": [0, 8, 11, 24, 71, 72, 73, 79, 81, 85, 91, 92], "slice": [0, 9, 60, 69, 74, 80, 91, 92, 93], "mathcal": [0, 39, 73, 74, 77, 78, 79, 85, 89, 92], "swd": [0, 58, 85], "_p": [0, 85, 92], "nu": [0, 3, 4, 7, 30, 75, 80, 85], "underset": [0, 85], "_in": [0, 85], "theta_": [0, 85], "stand": [0, 85, 93], "pushforward": [0, 85], "ni": [0, 85], "mapsto": [0, 79, 85], "rangl": [0, 71, 85], "n_samples_a": [0, 71, 85], "n_samples_b": [0, 71, 85], "case": [0, 26, 49, 64, 68, 70, 72, 80, 84, 85, 86, 91], "sliced_wasserstein_dist": [0, 3, 58, 85, 93], "20": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 18, 24, 25, 28, 29, 30, 31, 32, 33, 36, 39, 40, 41, 44, 46, 49, 50, 51, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 71, 79, 80, 85, 91, 92, 93], "normal": [0, 4, 10, 11, 13, 14, 28, 29, 31, 36, 54, 62, 70, 73, 75, 78, 85, 89, 93], "35": [0, 1, 5, 21, 32, 41, 56, 85, 91, 92, 93], "deshpand": [0, 85, 91, 92], "hu": [0, 85, 91, 92], "sun": [0, 85, 91, 92], "pyrro": [0, 85, 91, 92], "siddiqui": [0, 85, 91, 92], "koyejo": [0, 85, 91, 92], "schwing": [0, 85, 91, 92], "gan": [0, 9, 38, 85, 91, 92, 93], "proceed": [0, 13, 71, 85, 86, 91, 92], "ieee": [0, 56, 73, 81, 85, 91, 92], "cvf": [0, 85, 91, 92], "vision": [0, 3, 58, 85, 91, 92], "pattern": [0, 56, 73, 81, 85, 91, 92], "recognit": [0, 85, 91, 92], "10648": [0, 85, 91, 92], "10656": [0, 85, 91, 92], "semidiscrete_wasserstein2_unif_circl": [0, 55, 80, 93], "mu_n": [0, 4, 8, 80, 85], "alpha_i": [0, 80, 85], "x_i": [0, 4, 30, 80, 85, 92], "left": [0, 6, 13, 18, 22, 40, 44, 70, 71, 73, 77, 79, 80, 83, 85, 86, 87, 89, 90], "right": [0, 6, 13, 14, 29, 31, 36, 44, 49, 61, 67, 68, 71, 73, 77, 79, 80, 85, 86, 87, 89, 90, 93], "alpha_k": [0, 80], "unif": [0, 2, 4, 6, 14, 15, 16, 30, 33, 34, 35, 42, 43, 44, 47, 53, 55, 63, 80, 85, 87, 89], "delta_": [0, 4, 30, 80, 85, 86, 92], "02111111": [0, 80], "46": [0, 56, 59, 80, 85, 91, 93], "bonet": [0, 4, 55, 59, 69, 80, 85, 91], "berg": [0, 59, 80, 85, 91], "septier": [0, 59, 80, 85, 91], "drumetz": [0, 59, 80, 85, 91], "pham": [0, 59, 80, 85, 91], "2023": [0, 40, 59, 75, 80, 85, 86, 91, 93], "spheric": [0, 9, 38, 60, 69, 80, 85, 91, 93], "omega": [0, 65, 71, 81, 82, 86, 87, 88, 92], "dim_a": [0, 71, 82, 84, 88], "dim_b": [0, 71, 82, 84, 88], "both": [0, 2, 7, 24, 49, 64, 67, 71, 72, 80, 84, 92, 93], "By": [0, 71, 75, 84, 92], "too": [0, 71, 75, 92], "small": [0, 2, 7, 49, 68, 71, 75, 79, 80, 91, 92, 93], "should": [0, 26, 44, 65, 68, 70, 71, 73, 75, 79, 80, 84, 86, 89, 91, 92, 93], "enough": [0, 28, 71, 75, 92], "you": [0, 15, 18, 20, 21, 31, 33, 49, 56, 68, 70, 71, 75, 78, 83, 91, 92, 93], "sharper": [0, 71, 92], "avoid": [0, 68, 70, 71, 73, 75, 82, 92], "numer": [0, 22, 33, 49, 62, 70, 71, 73, 75, 82, 89, 91, 92, 93], "last": [0, 32, 49, 71, 72, 84, 92, 93], "veri": [0, 26, 49, 71, 79, 89, 91, 92, 93], "slow": [0, 71, 75, 92, 93], "practic": [0, 8, 68, 71, 75, 92], "even": [0, 10, 11, 62, 63, 71, 92, 93], "reason": [0, 67, 71, 92, 93], "finit": [0, 70, 71, 92], "why": [0, 68, 71, 93], "sinkhorn_epsilon_sc": [0, 71, 73, 92], "reli": [0, 71, 79, 91, 92], "warm": [0, 71, 92], "start": [0, 35, 49, 68, 70, 71, 75, 84, 89, 91, 93], "sometim": [0, 71, 92], "better": [0, 8, 46, 71, 86, 92, 93], "greedi": [0, 71, 91, 92, 93], "version": [0, 2, 34, 35, 55, 67, 68, 70, 71, 81, 84, 91, 92, 93], "greenkhorn": [0, 69, 71, 92, 93], "speedup": [0, 71, 92, 93], "screen": [0, 38, 48, 71, 74, 83, 91, 92], "screenkhorn": [0, 38, 48, 69, 74, 83, 92, 93], "aim": [0, 4, 8, 65, 71, 73, 89, 92], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 44, 45, 49, 55, 63, 64, 67, 68, 69, 70, 71, 79, 80, 82, 84, 92, 93], "strongli": [0, 68, 71, 79, 92, 93], "recommend": [0, 68, 71, 92, 93], "check": [0, 31, 68, 70, 71, 80, 89, 92, 93], "those": [0, 12, 49, 71, 73, 79, 80, 88, 92, 93], "tupl": [0, 71, 72, 81], "logarithm": [0, 70, 71], "36552929": [0, 71, 92], "13447071": [0, 71, 92], "lightspe": [0, 71, 73, 86, 88, 91, 92], "advanc": [0, 32, 39, 44, 46, 47, 67, 71, 72, 73, 86, 87, 88, 91, 92], "neural": [0, 8, 24, 25, 32, 39, 44, 46, 47, 71, 72, 73, 78, 86, 87, 88, 91, 92, 93], "system": [0, 24, 25, 32, 39, 44, 46, 47, 68, 70, 71, 73, 86, 87, 88, 91, 92], "nip": [0, 24, 25, 71, 73, 86, 88, 91, 92], "26": [0, 19, 27, 41, 46, 56, 71, 73, 86, 88, 91, 92, 93], "2013": [0, 71, 73, 86, 88, 89, 91, 92], "9": [0, 2, 4, 8, 11, 16, 18, 20, 21, 24, 25, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 43, 44, 45, 47, 50, 56, 63, 71, 73, 84, 86, 88, 91, 92], "stabil": [0, 71, 80, 88, 91, 92, 93], "preprint": [0, 16, 56, 62, 71, 73, 75, 80, 81, 88, 91, 92], "1610": [0, 71, 88, 91, 92], "06519": [0, 71, 88, 91, 92], "34": [0, 5, 17, 41, 56, 71, 91, 92], "feydi": [0, 71, 91, 92], "s\u00e9journ\u00e9": [0, 71, 91, 92], "amari": [0, 71, 91, 92], "trouv\u00e9": [0, 71, 91, 92], "mmd": [0, 71, 91, 92], "diverg": [0, 8, 54, 65, 70, 71, 79, 81, 88, 91, 92, 93], "2681": [0, 71, 91, 92], "2690": [0, 71, 91, 92], "unregular": [0, 71, 73, 81, 84, 86, 88], "sinkhorn_knopp": [0, 71, 88, 92], "classic": [0, 71, 73, 88, 92, 93], "epsilon": [0, 13, 29, 31, 33, 46, 61, 70, 71, 72, 79, 88, 92, 93], "sinkhorn2": [0, 54, 71, 91, 93], "without": [0, 67, 68, 70, 71, 79, 84, 91, 93], "contribut": [0, 67, 71, 92, 93], "26894142136999516": [0, 71], "21": [0, 4, 9, 41, 56, 71, 91, 92], "altschul": [0, 71, 91, 92], "Near": [0, 71, 91, 92], "linear": [0, 1, 5, 8, 24, 25, 27, 32, 37, 38, 64, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 84, 88, 89, 91, 92, 93], "31": [0, 1, 3, 5, 9, 41, 48, 49, 56, 58, 71, 77, 85, 91, 92, 93], "sinkhorn_lpl1_mm": [0, 73, 92], "labels_a": [0, 73], "eta": [0, 7, 24, 25, 73], "numinneritermax": [0, 15, 71, 73, 81], "200": [0, 1, 4, 5, 8, 14, 15, 31, 50, 55, 56, 58, 59, 73, 79, 81, 82, 93], "stopinnerthr": [0, 73], "non": [0, 51, 62, 64, 68, 69, 70, 71, 73, 80, 81, 84, 86, 88, 89, 91, 92, 93], "convex": [0, 35, 53, 73, 81, 86, 92], "group": [0, 18, 20, 73, 91, 93], "lasso": [0, 18, 20, 73, 84, 91, 93], "omega_": [0, 73, 92], "omega_g": [0, 73], "_c": [0, 73], "_1": [0, 40, 71, 73, 82, 92], "index": [0, 2, 72, 73, 84, 87, 91], "class": [0, 2, 5, 8, 21, 26, 32, 40, 69, 71, 74, 75, 78, 93], "label": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 24, 26, 28, 32, 33, 35, 40, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 71, 73, 74, 75, 89, 92, 93], "inner": [0, 71, 73, 79], "tuia": [0, 56, 71, 73, 81, 91, 92], "rakotomamonji": [0, 41, 46, 56, 69, 71, 73, 75, 81, 91, 92], "adapt": [0, 26, 27, 56, 67, 71, 73, 74, 79, 81, 83, 89, 91, 93], "analysi": [0, 38, 48, 56, 68, 71, 73, 75, 80, 81, 90, 91, 93], "99": [0, 2, 56, 73, 81, 91, 92, 93], "1510": [0, 56, 73, 81, 91, 92], "06567": [0, 56, 73, 81, 91, 92], "kl": [0, 51, 61, 70, 71, 72, 79, 86, 88, 91, 92, 93], "kullback": [0, 31, 33, 61, 65, 70, 79, 86, 88, 92], "leibler": [0, 31, 33, 61, 65, 70, 79, 86, 88, 92], "25": [0, 5, 8, 11, 28, 30, 32, 41, 55, 56, 59, 82, 84, 88, 91, 92, 93], "unnorm": [0, 82, 88], "One": [0, 73, 88, 91, 92, 93], "mani": [0, 88, 93], "sinkhorn_reg_sc": [0, 88], "ot_dist": [0, 88], "51122823": [0, 88], "18807035": [0, 88], "frogner": [0, 88, 91, 92], "zhang": [0, 88, 91, 92], "mobahi": [0, 88, 91, 92], "h": [0, 6, 13, 28, 31, 33, 64, 71, 73, 74, 75, 78, 79, 84, 88, 89, 91, 92], "araya": [0, 88, 91, 92], "polo": [0, 88, 91, 92], "poggio": [0, 88, 91, 92], "sinkhorn_knopp_unbalanc": [0, 88, 92], "sinkhorn_stabilized_unbalanc": [0, 88, 92], "sinkhorn_reg_scaling_unbalanc": [0, 88], "sinkhorn_unbalanced2": [0, 88, 92], "31912866": [0, 88], "sim": [0, 73, 85], "et": [0, 3, 58, 64, 71, 80, 85, 91, 92], "al": [0, 3, 58, 64, 71, 80, 85, 91, 92], "radon": [0, 3, 58, 85, 91, 92], "imag": [0, 3, 11, 12, 27, 34, 38, 49, 56, 58, 71, 73, 81, 85, 89, 91, 92, 93], "51": [0, 3, 31, 33, 56, 58, 79, 85, 91, 92], "22": [0, 3, 5, 11, 41, 56, 58, 71, 85, 91, 92, 93], "45": [0, 3, 16, 17, 56, 58, 80, 85, 91, 92, 93], "sliced_wasserstein_spher": [0, 59, 85, 93], "ssw_p": [0, 85], "int_": [0, 28, 85], "sigma": [0, 8, 21, 23, 24, 25, 28, 39, 73, 74, 85, 89], "foral": [0, 71, 79, 85, 89], "tx": [0, 12, 85], "_2": [0, 71, 77, 79, 84, 85, 89], "sqrt": [0, 4, 35, 41, 59, 70, 77, 82, 85], "keepdim": [0, 41, 59, 70, 85], "sliced_wasserstein_sphere_unif": [0, 4, 85, 93], "ssw_2": [0, 4, 85], "42": [0, 2, 3, 5, 16, 19, 23, 25, 35, 40, 43, 56, 80, 85, 91, 93], "randn": [0, 1, 3, 5, 6, 8, 15, 23, 30, 33, 39, 41, 44, 47, 59, 63, 70, 85], "500": [0, 3, 4, 5, 6, 8, 19, 25, 31, 55, 70, 72, 79, 85, 86], "ssw": [0, 4, 85], "allclos": [0, 70, 85], "01734": [0, 85], "atol": [0, 70, 85], "reg_typ": [0, 51, 73, 86, 92, 93], "unbalanced_typ": [0, 93], "n_thread": 0, "plan_init": 0, "potentials_init": 0, "discret": [0, 19, 24, 25, 35, 56, 71, 73, 80, 81, 87, 91, 92, 93], "otresult": [0, 89, 93], "t_": [0, 79], "m_": [0, 30, 84, 92], "lambda_r": 0, "lambda_u": 0, "penal": [0, 38, 66, 74, 84, 88, 91], "exact": [0, 17, 38, 48, 56, 66, 71, 74, 80, 82, 83, 88, 89, 91, 92, 93], "array_lik": [0, 89], "l2": [0, 10, 11, 38, 51, 62, 66, 74, 79, 84, 86, 88, 91, 92, 93], "balanc": [0, 89, 92], "unction": 0, "tv": [0, 54], "omp": 0, "_type_": 0, "toler": [0, 34, 70, 72, 82, 86], "re": [0, 58, 59, 63, 64, 70, 80, 93], "obtain": [0, 55, 73, 84, 92], "value_linear": [0, 89, 93], "more": [0, 29, 31, 36, 44, 49, 68, 71, 75, 80, 92, 93], "avail": [0, 26, 67, 68, 70, 91, 92, 93], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 74, 80, 86, 89, 92, 93], "origin": [0, 2, 24, 28, 68, 69, 80, 86, 92, 93], "paper": [0, 11, 71, 91, 92, 93], "formul": [0, 82, 86, 91, 92], "17": [0, 18, 25, 41, 56, 86, 91, 92], "blondel": [0, 47, 69, 86, 87, 91, 92, 93], "segui": [0, 14, 47, 86, 87, 91, 92], "rolet": [0, 47, 69, 86, 87, 91, 92], "twenti": [0, 71, 86, 91, 92], "aistat": [0, 71, 73, 86, 91, 92], "tic": [0, 11, 30, 89, 93], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 68, 70, 89, 92, 93], "matlab": [0, 69, 89], "toc": [0, 11, 30, 89, 93], "messag": [0, 68, 71, 89, 93], "elaps": [0, 11, 30, 89], "toq": [0, 89], "julia": [0, 89], "type_a": [0, 70, 85, 89], "length": [0, 70, 72, 84, 87, 89], "bin": [0, 7, 10, 11, 13, 46, 50, 51, 54, 56, 61, 62, 74, 89, 92], "expect": [0, 8, 44, 67, 68, 71, 89, 91, 92], "output": [0, 5, 8, 34, 68, 71, 89, 91, 92, 93], "pytorch": [0, 9, 38, 44, 69, 70, 74, 78, 83, 87, 89, 91, 92, 93], "wasserstein_1d": [0, 7, 55, 80, 92, 93], "dimension": [0, 33, 63, 71, 75, 80, 91, 93], "15": [0, 5, 8, 13, 14, 18, 22, 25, 28, 30, 40, 41, 44, 56, 57, 63, 73, 80, 88, 91, 92, 93], "batch": [0, 7, 8, 32, 71, 73, 78, 79, 80, 87], "formal": [0, 71, 80], "so": [0, 2, 8, 65, 79, 80, 89, 92, 93], "wai": [0, 19, 68, 80, 92, 93], "build": [0, 8, 28, 68, 73, 80, 91, 92, 93], "individu": [0, 67, 80], "quantil": [0, 80, 82], "integr": [0, 80], "them": [0, 29, 36, 73, 80, 82, 93], "prefer": [0, 68, 75, 80, 93], "whenev": [0, 80], "differ": [0, 2, 16, 31, 38, 49, 57, 67, 71, 72, 73, 79, 80, 83, 88, 91, 92, 93], "over": [0, 8, 35, 70, 71, 79, 80, 82], "posit": [0, 2, 7, 10, 11, 13, 35, 46, 49, 50, 51, 54, 56, 61, 62, 67, 70, 80, 81, 82, 83, 91, 92], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 70, 72, 79, 80, 81, 86, 89, 91, 92, 93], "least": [0, 68, 73, 80], "chap": [0, 80], "atom": [0, 71, 79, 80], "consid": [0, 7, 26, 28, 35, 39, 67, 68, 71, 80, 82, 89, 92], "have": [0, 8, 26, 35, 49, 67, 68, 70, 79, 80, 89, 92, 93], "been": [0, 8, 69, 80, 82, 89, 91, 92, 93], "prior": [0, 68, 71, 80, 92], "being": [0, 49, 68, 73, 80, 92, 93], "wasserstein_circl": [0, 55, 80, 93], "ot_": [0, 80, 92], "cdf_u": [0, 80], "cdf_v": [0, 80], "w_1": [0, 80, 92], "levm": [0, 80], "hundries": [0, 80, 91], "shayan": [0, 80, 91], "marcel": [0, 80, 91], "klatt": [0, 80, 91], "axel": [0, 80, 91], "munk": [0, 80, 91], "circular": [0, 28, 80, 91], "direct": [0, 35, 54, 80, 81, 86, 91, 93], "innov": [0, 80, 91], "bicentenni": [0, 80, 91], "tribut": [0, 80, 91], "florenc": [0, 80, 91], "nightingal": [0, 80, 91], "singapor": [0, 80, 91], "springer": [0, 80, 91], "natur": [0, 70, 80, 91], "2022": [0, 32, 79, 80, 91], "57": [0, 56, 66, 80, 88, 91, 93], "82": [0, 49, 56, 80, 91, 93], "weak_optimal_transport": [0, 42, 90], "weak": [0, 38, 48, 69, 74, 83, 91, 92, 93], "_j": [0, 75, 80, 86, 87, 90], "guess": [0, 81, 90], "indep": [0, 81, 90], "joint": [0, 35, 71, 73, 79, 81, 90, 91, 92, 93], "densiti": [0, 81, 90], "numitermaxemd": [0, 81, 90], "stopthr2": [0, 81, 90], "gozlan": [0, 16, 80, 90, 91, 92], "roberto": [0, 90, 91, 92], "samson": [0, 90, 91, 92], "tetali": [0, 90, 91, 92], "kantorovich": [0, 90, 91, 92], "dualiti": [0, 11, 90, 91, 92], "273": [0, 90, 91, 92], "3327": [0, 90, 91, 92], "3405": [0, 90, 91, 92], "go": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 93], "end": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 80, 84, 92, 93], "download": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65], "full": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 70, 71, 87, 89, 91, 93], "author": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 91], "remi": [1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 32, 39, 41, 42, 43, 44, 45, 49, 50, 51, 52, 53, 54], "polytechniqu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 42, 43, 45], "edu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 42, 43, 45, 92], "licens": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65], "mit": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 91], "sphinx_gallery_thumbnail_numb": [1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 19, 20, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 40, 41, 42, 43, 45, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64], "pyplot": [1, 4, 5, 8, 10, 12, 13, 15, 16, 19, 23, 25, 28, 30, 32, 34, 44, 45], "pl": [1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 16, 18, 20, 21, 22, 24, 26, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65], "manual_se": [1, 3, 4, 5, 8, 32], "n_source_sampl": [1, 5, 18, 22, 24, 73], "n_target_sampl": [1, 5, 18, 22, 24, 73], "noise_level": [1, 5, 24], "make_data_classif": [1, 18, 20, 21, 22, 24, 26], "gaussrot": [1, 24], "nz": [1, 21, 24, 41, 74], "xt": [1, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 30, 33, 41, 42, 43, 52, 53, 55, 58, 59, 63, 64, 65, 71, 73, 77, 83, 84, 87, 92], "yt": [1, 18, 20, 21, 22, 24, 26, 30, 41, 73], "one": [1, 3, 5, 7, 19, 23, 24, 25, 28, 32, 34, 35, 47, 49, 68, 70, 71, 73, 74, 80, 84, 92, 93], "mode": [1, 5, 24, 73], "chang": [1, 2, 5, 24, 34, 35, 68, 70, 71, 80, 92, 93], "varianc": [1, 5, 24, 33], "map": [1, 5, 27, 38, 47, 65, 69, 73, 74, 77, 79, 80, 87, 89, 91, 93], "figur": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68], "clf": [1, 2, 3, 4, 5, 8, 11, 21, 23, 24, 29, 30, 31, 32, 34, 35, 36, 39, 44, 45, 49, 53, 54, 62, 64], "scatter": [1, 2, 3, 4, 5, 6, 8, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 30, 32, 33, 34, 35, 40, 41, 49, 55, 59, 63, 64, 65], "marker": [1, 5, 14, 16, 18, 20, 21, 22, 24, 26, 32, 35, 40, 41], "o": [1, 5, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 32, 34, 35, 45, 49, 78, 79, 91, 92, 93], "legend": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 24, 26, 32, 35, 40, 41, 42, 43, 46, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 64], "loc": [1, 5, 14, 18, 20, 22, 24, 26, 29, 31, 36, 40, 41, 42, 43, 52, 53, 58, 59, 61, 64], "titl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 42, 43, 44, 49, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 83, 91], "text": [1, 4, 5, 6, 8, 14, 19, 21, 23, 24, 42, 43, 44, 49, 52, 56, 58, 59, 61, 68, 71, 77, 79, 80, 84, 89, 92], "requires_grad": [1, 6, 44], "adam": [1, 5, 32, 79], "lr": [1, 2, 3, 4, 5, 6, 7, 8, 32, 44, 47, 87], "n_iter": [1, 4, 5, 8], "rang": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 21, 28, 29, 31, 32, 34, 35, 36, 39, 40, 44, 45, 49, 54, 55, 58, 59, 62, 64, 65], "nois": [1, 5, 8, 28, 63, 74], "minu": [1, 5], "becaus": [1, 5, 80, 92, 93], "maxim": [1, 5, 87, 88, 93], "te": [1, 5], "loss_dual_entrop": [1, 5], "append": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 28, 29, 31, 32, 34, 35, 36, 44, 62, 63, 89], "detach": [1, 2, 3, 4, 5, 6, 7, 8, 32, 44, 70], "3d": [1, 4, 5, 8, 10, 11, 16, 59, 62], "backward": [1, 2, 3, 5, 6, 7, 8, 32, 44], "zero_grad": [1, 5, 8], "grid": [1, 4, 5, 6, 8, 59, 93], "neg": [1, 5, 64, 70, 71, 79, 80, 84, 86, 88, 91], "xlabel": [1, 4, 5, 6, 8, 19, 25, 30, 32, 35, 39, 40, 44, 49, 54, 55, 58, 59], "ge": [1, 52, 56], "plan_dual_entrop": [1, 5], "20204949002248182": 1, "19": [1, 18, 25, 41, 47, 56, 87, 91, 92, 93], "58148034501573": 1, "07014058168637": 1, "905993729464036": 1, "11345792858895": 1, "67543728028365": 1, "60": [1, 3, 4, 5, 7, 8, 10, 11, 13, 31, 32, 33, 35, 46, 50, 51, 56, 61, 62], "41": [1, 7, 49, 56, 84, 88, 91, 93], "4355583327041": 1, "66472864809181": 1, "80": [1, 4, 5, 8, 11, 14, 31, 35, 50, 56, 93], "757880491409495": 1, "90": [1, 5, 8, 16, 31, 49, 50, 54, 56, 93], "793598902942755": 1, "807146085130604": 1, "110": [1, 5, 8, 31, 50, 56], "81759827741478": 1, "120": [1, 5, 8, 31, 50, 56, 59], "82400226324328": 1, "130": [1, 5, 8, 31, 50, 56, 93], "82811944321108": 1, "140": [1, 5, 8, 31, 50, 56, 93], "83151430865882": 1, "150": [1, 4, 5, 8, 16, 18, 20, 22, 26, 31, 45, 50, 55, 56, 93], "83440264730631": 1, "160": [1, 5, 8, 31, 50, 56, 93], "83690330257398": 1, "170": [1, 5, 8, 31, 50, 56, 93], "83912092879987": 1, "180": [1, 5, 8, 31, 50, 56], "841075456923264": 1, "190": [1, 5, 8, 31, 35, 37, 50, 56], "84276924356371": 1, "plot2d_samples_mat": [1, 20, 42, 43, 52, 53], "zorder": [1, 2, 5, 35, 40, 45], "01": [1, 9, 10, 17, 18, 22, 27, 29, 30, 31, 33, 36, 37, 41, 47, 50, 54, 56, 57, 62, 63, 66, 71, 82, 84], "loss_dual_quadrat": 1, "gq": 1, "plan_dual_quadrat": 1, "0018442196020623663": 1, "47733007041457": 1, "966960214870912": 1, "92988021320525": 1, "86299092023516": 1, "43330733728815": 1, "19218021632745": 1, "44549610208099": 1, "577659278993835": 1, "62933700189339": 1, "6517741593227": 1, "66411109013396": 1, "671069797670036": 1, "67616260013635": 1, "680572244930666": 1, "684218944876264": 1, "68728157922991": 1, "68992915595175": 1, "69229773740369": 1, "69447793138826": 1, "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 92], "script": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 93], "minut": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65], "16": [1, 3, 7, 9, 15, 18, 25, 30, 35, 39, 41, 44, 56, 70, 72, 75, 80, 84, 91, 92], "710": [1, 9, 31], "plot_dual_ot_pytorch": [1, 9], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 89, 93], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 93], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 92, 93], "ipynb": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 91, 93], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 68, 93], "express": [2, 6, 67, 92], "part": [2, 41, 93], "node": [2, 28, 31, 32, 33, 78, 79, 91], "model": [2, 3, 5, 32, 71, 91, 92], "actual": [2, 92], "recov": [2, 8, 87, 92, 93], "proport": [2, 29, 31, 35, 36, 49, 71, 73, 74, 83], "sbm": [2, 29, 31, 32, 35, 36], "allow": [2, 6, 33, 34, 39, 44, 63, 68, 72, 82, 92, 93], "accur": 2, "simultan": [2, 93], "other": [2, 6, 7, 41, 49, 67, 68, 79, 86, 87, 89, 91, 93], "properti": [2, 8, 79, 89, 92], "sklearn": [2, 32, 34, 35, 40, 89, 93], "manifold": [2, 32, 34, 35, 75, 92], "md": [2, 35, 93], "pylab": [2, 3, 6, 7, 11, 14, 16, 18, 20, 21, 22, 24, 26, 29, 31, 33, 35, 36, 39, 40, 41, 42, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65], "torch": [2, 3, 4, 6, 7, 8, 32, 44, 70, 78, 92, 93], "ot": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 44, 45, 46, 47, 50, 52, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 91, 93], "rng": [2, 6, 19, 23, 25, 34, 40, 47], "def": [2, 3, 4, 5, 6, 8, 16, 19, 21, 23, 25, 28, 29, 31, 32, 33, 34, 35, 36, 55, 56, 64, 70, 89], "get_sbm": 2, "nc": [2, 35], "ratio": 2, "nbpc": 2, "round": [2, 29, 31, 33, 35, 36, 49, 82, 88], "astyp": [2, 3, 14, 15, 16, 19, 23, 25, 31, 33, 34, 35], "zero": [2, 3, 4, 6, 8, 10, 11, 22, 29, 31, 33, 35, 36, 44, 49, 51, 53, 54, 55, 62, 70, 72, 79, 80, 89, 93], "rand": [2, 4, 8, 23, 41, 43, 63, 65, 70], "ey": [2, 35, 70], "05": [2, 5, 9, 11, 18, 24, 25, 31, 33, 37, 41, 47, 50, 56, 65, 70, 71, 73, 79, 84], "ones": [2, 8, 14, 15, 28, 29, 30, 31, 35, 36, 49, 52, 58, 59, 64, 65, 70, 73, 79], "2d": [2, 16, 17, 18, 20, 21, 22, 26, 35, 38, 42, 43, 49, 53, 57, 60, 64, 66, 71, 74, 80, 82, 83, 88, 89, 92, 93], "dissimilar": [2, 34, 35], "precomput": [2, 34, 35, 92], "fit_transform": [2, 32, 34, 35, 73], "plot_graph": [2, 35], "color": [2, 4, 5, 6, 7, 10, 13, 15, 27, 28, 29, 31, 33, 34, 35, 36, 38, 39, 40, 44, 45, 49, 52, 55, 59, 63, 64, 65, 73, 83, 89, 92, 93], "c0": [2, 5, 35, 40, 64, 65], "edgecolor": [2, 15, 35, 40], "cmap": [2, 5, 10, 12, 13, 21, 28, 30, 33, 35, 40, 49, 62, 63, 65], "tab10": [2, 35, 40], "vmax": [2, 21, 28, 35, 40, 44, 49], "subplot": [2, 4, 5, 8, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 39, 41, 42, 43, 44, 49, 53, 54, 56, 62, 63, 64, 65, 83], "axi": [2, 3, 4, 5, 12, 13, 15, 16, 19, 21, 23, 25, 29, 31, 32, 35, 36, 40, 45, 53, 55, 56, 58, 59, 63, 65, 70, 75, 86, 89], "imshow": [2, 12, 13, 18, 19, 20, 22, 23, 25, 26, 30, 33, 35, 39, 40, 42, 44, 49, 52, 53, 56, 63, 65], "nearest": [2, 18, 20, 22, 26, 30, 35, 42, 52, 53, 73], "adjac": [2, 28, 78], "home": [2, 5, 7, 10, 15, 18, 20, 21, 22, 31, 33, 34, 35, 41, 46, 49, 55, 56, 62, 63], "circleci": [2, 5, 7, 10, 15, 18, 20, 21, 22, 31, 33, 34, 35, 41, 46, 49, 55, 56, 62, 63, 93], "local": [2, 34, 35, 41, 68, 92], "lib": [2, 34, 35, 41, 70], "python3": [2, 34, 35, 41], "site": [2, 34, 35, 41], "packag": [2, 34, 35, 41, 71, 89, 92], "_md": [2, 34, 35], "298": [2, 34, 35, 93], "futurewarn": [2, 34, 35], "normalized_stress": [2, 34, 35], "auto": [2, 30, 34, 35, 40, 63], "To": [2, 8, 34, 35, 70, 71, 82, 89, 91, 92], "suppress": [2, 34, 35], "manual": [2, 34, 35], "plot_optim_gromov_pytorch": [2, 9], "81": [2, 56], "userwarn": [2, 5, 7, 15, 18, 20, 21, 22, 31, 33, 35, 46, 49, 56, 62], "colormap": [2, 10, 35, 40, 62], "ignor": [2, 35, 44, 81], "diagon": [2, 26, 28, 70, 77], "want": [2, 8, 15, 18, 20, 21, 31, 33, 44, 49, 56, 92, 93], "up": [2, 68, 93], "min_weight_gw": 2, "a2": [2, 10, 11, 13, 15, 62], "nb_iter_max": [2, 3, 7], "min_a": [2, 92], "our": [2, 3, 7, 91, 92, 93], "c1_torch": 2, "c2_torch": 2, "a0": 2, "random_init": 2, "a1_torch": 2, "requires_grad_": [2, 3, 4, 7], "a2_torch": 2, "loss_it": [2, 3, 7], "clone": [2, 3, 4, 7, 68, 70], "03d": [2, 32], "no_grad": [2, 3, 6, 7, 44], "grad": [2, 3, 4, 6, 7, 41, 44, 70, 79, 86, 87], "zero_": [2, 3, 6, 7, 44], "proj_simplex": [2, 6, 7, 44], "a1": [2, 10, 11, 13, 15, 62], "a0_est": 2, "loss_iter0": 2, "29850312": 2, "20157616": 2, "49992072": 2, "clear": 2, "noe": 2, "receiv": [2, 68], "most": [2, 71, 89, 92, 93], "show": [2, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 67, 80], "here": [2, 4, 64, 79, 91, 92, 93], "previous": 2, "t_unif": 2, "label_unif": 2, "argmax": [2, 29, 31, 32, 35, 36, 39, 44, 70], "t_est": 2, "label_est": 2, "est": 2, "7760154087783518": 2, "5785554952306606": 2, "7708789474385981": 2, "6510858680020267": 2, "now": [2, 4, 49, 70, 92, 93], "seen": [2, 71, 80, 92], "probabl": [2, 7, 16, 32, 35, 44, 79, 80, 91], "link": [2, 29, 31, 68, 91, 93], "graph_compression_gw": 2, "nb_node": 2, "clamp": 2, "a0_est2": 2, "c0_est2": 2, "loss_iter2": 2, "5e": [2, 13, 21, 33, 34, 64], "vmin": [2, 28, 40, 44, 49], "colorbar": [2, 35, 40, 49], "29985821": 2, "18926744": 2, "51087435": 2, "0x7ff73c1f9720": 2, "864": [2, 9], "36": [3, 5, 56, 84, 88, 91, 92], "liutku": [3, 91, 92], "simsekli": [3, 91, 92], "majewski": [3, 91, 92], "durmu": [3, 91, 92], "st\u00f6ter": [3, 91, 92], "mai": [3, 67, 68, 79, 80, 82, 84, 91, 92, 93], "nonparametr": [3, 91, 92], "diffus": [3, 91, 92], "4104": [3, 91, 92], "4113": [3, 91, 92], "load": [3, 19, 25, 49], "i1": [3, 14, 16, 19, 23, 25], "imread": [3, 12, 13, 14, 16, 19, 23, 25, 34], "redcross": [3, 12, 14, 16], "png": [3, 12, 13, 14, 16, 34, 45], "i2": [3, 14, 16, 19, 23, 25], "tooth": [3, 12, 16], "sz": [3, 14, 16], "xx": [3, 5, 14], "yy": [3, 5, 14], "meshgrid": [3, 4, 5, 14, 16, 70], "arang": [3, 7, 10, 11, 13, 14, 16, 30, 39, 40, 41, 44, 46, 50, 51, 53, 54, 56, 61, 62, 70, 71], "stack": [3, 14, 16, 35, 70], "32": [3, 5, 14, 32, 37, 41, 56, 75, 79, 91, 92], "x3": [3, 14, 15], "collect": [3, 10, 11, 34, 41, 55, 62, 71], "pathcollect": [3, 34, 55], "0x7ff74e02e080": 3, "devic": [3, 7, 70, 92, 93], "cuda": [3, 7, 69, 93], "is_avail": [3, 7], "x1_torch": 3, "x2_torch": 3, "1e3": 3, "x_all": 3, "gen": 3, "5e1": 3, "ax": [3, 4, 10, 12, 13, 15, 16, 40, 44, 49, 59, 62, 63, 70, 81, 92], "_update_plot": [3, 4, 8, 16, 64], "ani": [3, 4, 8, 16, 64, 67, 68, 70, 72, 81, 84, 89, 91, 92], "funcanim": [3, 4, 8, 16, 64], "gcf": [3, 4, 8, 10, 62, 64], "interv": [3, 4, 8, 16, 58, 59, 64, 70], "repeat_delai": [3, 4, 8, 16, 64], "2000": [3, 4, 7, 8, 16, 64], "onc": [3, 4, 8, 16, 64], "loop": [3, 4, 8, 16, 49, 64, 73], "reflect": [3, 4, 8, 16, 64], "x3_torch": 3, "xbinit": 3, "xbary_torch": 3, "43": [3, 9, 45, 56, 71, 73, 77, 80, 91, 92, 93], "275": [3, 9, 93], "plot_sliced_wass_grad_flow_pytorch": [3, 9], "transform": [4, 18, 19, 20, 22, 24, 26, 73, 87, 89, 92], "cl\u00e9ment": [4, 55, 59, 69], "clement": [4, 55, 59], "univ": [4, 21, 22, 39, 44, 55, 59, 64, 65], "ub": [4, 39, 44, 55, 59, 64, 65], "fr": [4, 7, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 34, 35, 39, 40, 41, 44, 50, 51, 52, 53, 54, 55, 59, 61, 62, 63, 64, 65], "nn": [4, 5, 8, 32, 93], "function": [4, 7, 10, 11, 12, 34, 49, 62, 64, 68, 78, 79, 91, 92, 93], "plot_spher": 4, "xlist": 4, "linspac": [4, 5, 10, 15, 28, 54, 55, 62, 70], "ylist": 4, "z": [4, 10, 35, 46, 59, 62, 69, 71, 86, 89, 91, 92], "plot_wirefram": [4, 59], "grai": [4, 59], "bottom": [4, 13, 49], "half": 4, "set_titl": [4, 10, 13, 15, 44], "0x7ff74d190820": 4, "xvisu": [4, 8], "sw": 4, "grad_x": 4, "item": [4, 28, 29, 31, 32, 36, 68], "semilogi": [4, 6, 8], "2091430276632309": 4, "23": [4, 5, 6, 8, 41, 54, 56, 71, 91, 92, 93], "52222222222222": [4, 5, 6, 8], "ivisu": [4, 8], "fig": [4, 12, 13, 15, 16, 33, 34, 39, 40, 44, 53, 59, 63], "add_subplot": [4, 10, 16, 33, 62, 63], "set_xlim": [4, 15, 59], "set_ylim": [4, 15, 59], "195": [4, 9, 56, 93], "plot_ssw_unif_torch": [4, 9], "nvisu": [5, 56], "300": [5, 31, 35], "ax_bound": 5, "defin": [5, 8, 34, 39, 47, 49, 67, 70, 71, 73, 80, 84, 86, 92, 93], "mlp": [5, 8], "modul": [5, 8, 32, 46, 49, 68, 71, 75, 78, 83, 91, 93], "__init__": [5, 8, 32, 73, 89], "self": [5, 8, 32, 73, 89], "super": [5, 8, 32], "fc1": [5, 8], "fc2": [5, 8], "relu": [5, 8], "heavisid": [5, 8], "fn": [5, 8], "forward": [5, 8, 32, 78, 92], "ravel": [5, 28, 64, 65, 86, 89], "doubl": [5, 44, 49], "005": [5, 32, 65], "n_batch": 5, "iperm": 5, "randint": [5, 19, 25, 28, 32], "ipermt": 5, "xsi": 5, "xti": 5, "257329928299894": 5, "890456785604675": 5, "58037947236615": 5, "18": [5, 18, 25, 28, 41, 47, 56, 82, 87, 91, 92], "440996850749862": 5, "12608610815788": 5, "275903405782387": 5, "27": [5, 27, 35, 41, 56, 71, 73, 91, 93], "268827591939186": 5, "29": [5, 37, 41, 56, 73, 77, 82, 91, 92, 93], "79159074243252": 5, "63488731570214": 5, "127228618478725": 5, "696522621311644": 5, "33": [5, 33, 39, 41, 44, 46, 56, 71, 72, 91, 92], "46949401889149": 5, "64206913098602": 5, "153816351532946": 5, "283212421610095": 5, "52058538064263": 5, "676096587323535": 5, "458654411651835": 5, "43596310348253": 5, "26194570410683": 5, "01278968196741": 5, "210": [5, 31, 93], "87401169938976": 5, "220": [5, 31, 93], "12820568044987": 5, "230": [5, 31], "63722430960618": 5, "240": [5, 31, 93], "65926621902025": 5, "250": [5, 31], "52742547536184": 5, "260": [5, 31, 93], "12658368170403": 5, "270": [5, 31], "735871196038282": 5, "280": [5, 31, 93], "15756050565185": 5, "290": [5, 31, 93], "070647347170436": 5, "27069736487665": 5, "310": [5, 31, 93], "4032555710632": 5, "320": [5, 11, 31], "751519332118505": 5, "330": [5, 31], "505787072896766": 5, "340": [5, 31, 93], "833572391120526": 5, "350": [5, 31, 93], "540097202879465": 5, "360": [5, 31, 93], "54715464928039": 5, "370": [5, 31], "635978662861795": 5, "380": [5, 31, 93], "85734724064163": 5, "390": [5, 31], "22195044833465": 5, "400": [5, 31, 93], "54526255143114": 5, "410": [5, 31, 93], "2028827111356": 5, "420": [5, 31], "146730918684945": 5, "430": [5, 31], "32427691564021": 5, "440": [5, 31, 93], "51095472212391": 5, "450": [5, 31], "56664149963812": 5, "460": [5, 31, 93], "5571464161218": 5, "470": [5, 31], "7012331965002": 5, "480": [5, 31], "754363123393354": 5, "490": [5, 31], "12920968279601": 5, "nv": [5, 64], "xl": 5, "yl": 5, "xg": [5, 8], "concaten": [5, 6, 15, 23, 41, 45, 55, 63, 65, 70, 84, 89], "wxg": 5, "exp": [5, 49, 55, 70, 75, 87, 92], "iv": [5, 55, 64], "gg": [5, 30], "wt": [5, 77, 87], "reshap": [5, 19, 23, 25, 28, 32, 34, 41, 46, 50, 51, 54, 56, 61, 63, 64, 70, 71, 82, 84], "pcolormesh": 5, "green": [5, 7], "plot_stoch_continuous_ot_pytorch": [5, 9], "159": [5, 56], "doe": [5, 49, 68, 70, 79, 92, 93], "handl": [5, 7, 92, 93], "quadmesh": 5, "http": [5, 46, 49, 53, 67, 70, 71, 86, 89, 91, 92, 93], "org": [5, 46, 53, 67, 70, 71, 86, 89, 91, 92, 93], "tutori": [5, 68, 92], "legend_guid": 5, "html": [5, 49, 68, 70, 91], "custom": 5, "handler": 5, "173": [5, 56], "187": [5, 56], "181": [5, 9, 56, 93], "mix": [6, 7, 44], "word": [6, 92], "suppos": [6, 71, 92], "s_k": 6, "w_k": [6, 92], "belong": [6, 33, 63, 84], "delta_k": 6, "observ": [6, 71, 74], "pot": [6, 7, 12, 18, 33, 34, 39, 44, 47, 48, 63, 65, 69, 70, 72, 89, 93], "nt1": 6, "ns1": 6, "xs1": [6, 21], "xs2": [6, 21, 55], "correspond": [6, 7, 26, 49, 75, 79, 84, 92, 93], "s_1": 6, "s_2": 6, "0x7ff74d030790": 6, "h2": [6, 29, 31, 36, 79], "m2": [6, 53, 54], "2e": [6, 46, 51, 64], "rate": [6, 79, 87], "niter": [6, 44], "get_loss": 6, "mv": 6, "squar": [6, 34, 49, 53, 54, 70, 73, 75, 79, 85, 86, 89, 91, 92, 93], "mixtur": 6, "09980706": 6, "90019294": 6, "dot": [6, 10, 11, 21, 23, 29, 31, 33, 36, 43, 49, 62, 63, 70, 89], "c3": [6, 29, 31, 36, 45], "0x7ff74d1917b0": 6, "610": [6, 9, 31], "plot_unmix_optim_torch": [6, 9], "refer": [7, 29, 31, 36, 68, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90], "ensur": [7, 68, 80, 92], "remain": 7, "illustr": [7, 10, 11, 12, 13, 14, 15, 16, 28, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 46, 49, 50, 51, 52, 55, 56, 58, 59, 61, 62, 64, 68, 93], "within": [7, 67, 70, 79], "framework": [7, 35, 93], "ncourti": [7, 12, 33, 34], "irisa": [7, 12, 28, 30, 33, 34, 52, 63], "mpl": 7, "make_1d_gauss": [7, 10, 11, 13, 46, 50, 51, 54, 56, 61, 62], "gauss": [7, 46, 50, 51, 54, 61, 73], "red": [7, 19, 25, 30, 32, 49], "to_rgb": 7, "blue": [7, 12, 19, 25, 30, 32, 33, 39, 40, 44, 49], "dtype": [7, 10, 11, 13, 28, 46, 50, 51, 54, 56, 58, 59, 61, 62, 70, 71], "gaussian": [7, 8, 10, 23, 24, 25, 28, 46, 50, 51, 54, 56, 61, 62, 69, 70, 73, 74, 89, 92, 93], "mean": [7, 10, 11, 13, 29, 31, 32, 36, 40, 46, 50, 51, 54, 55, 56, 58, 59, 61, 62, 70, 71, 74, 75, 77, 78, 80, 92, 93], "std": [7, 10, 11, 13, 30, 46, 50, 51, 54, 55, 56, 58, 59, 61, 62, 70, 74, 79, 93], "enforc": [7, 92], "x_torch": 7, "a_torch": 7, "b_torch": 7, "800": [7, 31], "figsiz": [7, 11, 12, 13, 15, 16, 18, 19, 20, 22, 23, 25, 26, 28, 29, 31, 32, 34, 36, 40, 41, 44, 46, 47, 50, 51, 53, 56, 59, 61, 62], "onto": [7, 18, 20, 22, 73, 79, 86, 89, 92], "curv": [7, 44], "everi": [7, 35, 72, 79, 91], "lw": [7, 13, 29, 31, 36, 40, 49], "evolut": [7, 35, 55, 71, 79, 91], "fontsiz": [7, 13, 28, 29, 30, 31, 32, 33, 35, 36, 40, 49, 59, 64], "solver_1d": [7, 55, 93], "than": [7, 49, 70, 79, 92, 93], "revers": [7, 70], "throw": [7, 93], "futur": [7, 71, 93], "releas": [7, 10, 62, 63, 71, 91, 92], "mt": [7, 77], "transpos": [7, 39, 44, 70, 93], "ndim": 7, "trigger": [7, 72], "aten": 7, "src": 7, "nativ": 7, "tensorshap": 7, "cpp": 7, "3571": 7, "cw": 7, "contigu": 7, "tw": [7, 78, 91], "bary_torch": 7, "instant": 7, "406": [7, 9], "plot_wass1d_torch": [7, 9], "fit": [8, 23, 25, 26, 34, 71, 73, 80, 92], "g_": 8, "realist": 8, "drawn": [8, 74, 83], "indistinguish": 8, "mu_d": 8, "arjovsky2017": 8, "access": [8, 49, 91], "cannot": [8, 26, 73, 92, 93], "larg": [8, 26, 47, 73, 75, 82, 87, 91, 92, 93], "genevay2018": 8, "studi": 8, "fatras2019": 8, "arjovski": 8, "chintala": 8, "bottou": 8, "adversari": [8, 92], "214": 8, "223": 8, "genevai": [8, 47, 71, 87, 91, 92], "aud": [8, 71, 91], "fatra": [8, 47, 52, 69, 91], "zine": 8, "gribonv": 8, "2020": [8, 13, 39, 44, 71, 72, 78, 82, 91, 92, 93], "june": 8, "asymptot": 8, "23nd": 8, "108": [8, 56, 93], "n_dim": 8, "n_featur": [8, 32, 40, 73, 78, 89], "get_data": 8, "n_sampl": [8, 15, 33, 34, 40, 63, 73], "angl": [8, 23, 55], "cat": 8, "co": [8, 23, 38, 41, 48, 53, 55, 59, 72, 89, 91, 93], "sin": [8, 23, 28, 41, 53, 55, 59, 89], "0x7ff730e77af0": 8, "fc3": 8, "rmsprop": 8, "00019": 8, "doc": [8, 68, 70, 93], "size_batch": 8, "stati": 8, "n_visu": 8, "xnvisu": 8, "ab": [8, 30, 33, 54, 70, 86, 89, 92, 93], "xn": 8, "xd": 8, "smapl": 8, "compt": 8, "del": 8, "9009847640991211": 8, "10964284837245941": 8, "04564394801855087": 8, "03516071289777756": 8, "05013977363705635": 8, "058588504791259766": 8, "03730057179927826": 8, "04171676188707352": 8, "03168988972902298": 8, "031197285279631615": 8, "03596879169344902": 8, "03272819146513939": 8, "032379165291786194": 8, "03959248960018158": 8, "029337508603930473": 8, "05796702206134796": 8, "034939464181661606": 8, "022607704624533653": 8, "04347885772585869": 8, "1164197325706482": 8, "75": [8, 56, 93], "125": [8, 10, 11, 45, 56], "175": [8, 56, 93], "199": [8, 56, 82, 93], "xtick": [8, 11, 18, 20, 22, 26, 30, 40, 54, 64, 65], "ytick": [8, 11, 18, 20, 22, 26, 30, 40, 65], "xlim": [8, 34, 40, 49, 54, 55], "ylim": [8, 34, 40, 54, 55], "0x7ff7549907f0": 8, "54": [8, 9, 56, 78, 91], "923": [8, 9], "plot_wass2_gan_torch": [8, 9], "04": [9, 18, 24, 25, 30, 31, 33, 37, 47, 48, 50, 56, 57, 66], "165": [9, 56], "execut": [9, 17, 27, 37, 48, 57, 60, 66, 92, 93], "auto_examples_backend": 9, "file": [9, 17, 27, 37, 38, 45, 48, 57, 60, 66, 92, 93], "minibatch": [9, 38, 87, 92, 93], "mb": [9, 17, 27, 37, 48, 57, 60, 66], "flow": [9, 38, 74, 89, 91, 92, 93], "00": [9, 17, 18, 21, 24, 25, 27, 30, 31, 33, 37, 48, 56, 57, 60, 63, 66, 84], "continu": [9, 35, 38, 71, 80, 87, 92], "estim": [9, 21, 27, 30, 31, 33, 38, 47, 68, 69, 71, 73, 74, 77, 79, 80, 81, 87, 89, 91, 93], "embed": [9, 31, 32, 33, 34, 38, 79, 91, 92], "sphere": [9, 38, 85, 93], "unmix": [9, 35, 38, 71, 79, 89, 91, 92, 93], "unic": [10, 11, 18, 19, 20, 21, 23, 24, 25, 26, 32, 39, 41, 44, 50, 51, 52, 53, 54, 80], "plt": [10, 12, 13, 15, 16, 19, 23, 25, 28, 34], "necessari": [10, 11, 62, 63, 67, 68, 80, 91, 93], "mpl_toolkit": [10, 11, 33, 62, 63], "mplot3d": [10, 11, 33, 62, 63], "axes3d": [10, 11, 33, 62, 63], "noqa": [10, 11, 33, 62, 63], "polycollect": [10, 11, 62], "creat": [10, 11, 13, 28, 32, 62, 67, 68, 69, 70, 83, 91, 93], "vstack": [10, 11, 13, 30, 32, 62], "n_distribut": [10, 11, 13, 62], "dist0": [10, 11, 13, 62], "l2bari": [10, 11, 62], "bary_l2": [10, 11, 62], "bary_wass": [10, 11, 62], "ax1": [10, 30, 33, 34, 39, 44, 63], "ax2": [10, 30, 33, 34, 39, 44, 63], "tight_layout": [10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 39, 40, 41, 44, 49, 53, 54, 62], "num": [10, 13, 70], "black": [10, 29, 31, 35, 36, 39, 44, 83], "n_alpha": 10, "alpha_list": 10, "b_l2": [10, 62], "b_wass": [10, 62], "cm": [10, 12, 28, 40, 62], "get_cmap": [10, 40, 62], "viridi": [10, 28, 62], "vert": [10, 62], "enumer": [10, 13, 28, 29, 31, 35, 36, 40, 54, 55, 58, 59, 62], "zip": [10, 13, 16, 35, 38, 62, 91], "poli": [10, 62], "facecolor": [10, 40, 45, 62], "set_alpha": [10, 62], "add_collection3d": [10, 62], "zdir": [10, 62], "set_xlabel": [10, 59, 62], "set_xlim3d": [10, 62], "set_ylabel": [10, 13, 49, 59, 62], "set_ylim3d": [10, 62], "set_zlabel": [10, 59, 62], "set_zlim3d": [10, 62], "plot_barycenter_1d": [10, 17], "103": [10, 56], "matplotlibdeprecationwarn": [10, 62, 63], "wa": [10, 49, 62, 92, 93], "remov": [10, 62, 63, 67, 70, 80, 84, 89, 93], "minor": [10, 62, 63, 93], "later": [10, 29, 31, 36, 62, 63, 73], "name": [10, 21, 62, 70, 79, 89, 91, 92], "obj": [10, 62, 86], "640": [10, 17, 31], "standard": [11, 70, 74, 78, 79, 89, 93], "scienc": [11, 19, 25, 56, 73, 81, 91, 92], "343": [11, 93], "cvx": 11, "bary_wass2": 11, "interior": [11, 80, 92], "0038328170776367188": 11, "primal": [11, 80, 87], "feasibl": [11, 31, 33, 80], "gap": 11, "path": [11, 12, 13, 19, 23, 25, 34, 38, 66, 68, 74, 84, 91, 93], "1700": 11, "336700337": 11, "006776453137633": 11, "006776453137634": 11, "9932238647293": 11, "6700527543": 11, "004018712867874": 11, "4301142633": 11, "26594150092": 11, "001172775061627": 11, "7599932455028": 11, "3378536968897": 11, "0004375137005385": 11, "6422331807989": 11, "1468420566358": 11, "000232669046734": 11, "0002326690467341": 11, "5016999460893": 11, "09381703231432": 11, "430121674303e": 11, "7035962305812": 11, "0577787025717": 11, "321227838882e": 11, "321227838879e": 11, "3087841864401": 11, "05266249477204": 11, "990900379202e": 11, "990900379201e": 11, "6520472013245": 11, "0452605440552": 11, "305442046817e": 11, "30544204679e": 11, "305442046812e": 11, "7073953304073": 11, "305442046809e": 11, "04237597591383": 11, "290148391578e": 11, "290148391587e": 11, "290148391592e": 11, "6941812711476": 11, "290148391602e": 11, "041522849321": 11, "182864875418e": 11, "182864875486e": 11, "182864875459e": 11, "508455204664": 11, "182864875475e": 11, "04129461872827": 11, "626786380237e": 11, "626786380498e": 11, "626786380591e": 11, "7101651574148": 11, "626786380499e": 11, "04113032448919": 11, "53975423377e": 11, "539754239097e": 11, "539754238957e": 11, "627932209399": 11, "539754244458e": 11, "04108867636364": 11, "193221588102e": 11, "08": [11, 37, 47, 50, 56, 70, 73, 83], "193221525716e": 11, "193221527893e": 11, "6843453372866": 11, "193221744194e": 11, "04106859618425": 11, "888204557375e": 11, "888204466916e": 11, "888204464386e": 11, "6673444754752": 11, "888205403e": 11, "04106214175154": 11, "676851456731e": 11, "676853754852e": 11, "676853775137e": 11, "7281705629265": 11, "676886118764e": 11, "04105958648699": 11, "50115020171e": 11, "501137125386e": 11, "501137136515e": 11, "4140221641718": 11, "501151490466e": 11, "04105916265115": 11, "110591805675e": 11, "110570750049e": 11, "110570733855e": 11, "699900032435": 11, "110619438659e": 11, "04105870073191": 11, "770990264961e": 11, "776274527894e": 11, "776273877079e": 11, "4996170321381": 11, "772744208187e": 11, "04105859774172": 11, "536197932746e": 11, "538885612866e": 11, "538885001653e": 11, "7515062666584": 11, "537834631178e": 11, "04105851682752": 11, "743041081423e": 11, "740002462354e": 11, "740001907827e": 11, "5949277749653": 11, "73465642858e": 11, "04105850033226": 11, "794231989236e": 11, "747423074042e": 11, "747429829833e": 11, "7557701998162": 11, "741755335329e": 11, "04105849090303": 11, "termin": [11, 41], "successfulli": [11, 44], "current": [11, 18, 68, 70, 72, 73, 79, 81, 84, 86, 93], "041058": 11, "9831182956695557": 11, "004796504974365234": 11, "006776466288967": 11, "9932238515788": 11, "006776466288968": 11, "6649255808": 11, "004036918865497": 11, "4272973099314": 11, "34716170111": 11, "001219232687069": 11, "7496986855994": 11, "3243835647407": 11, "0003837422984427": 11, "6926882608286": 11, "1361719397492": 11, "0001070128410182": 11, "7643889137854": 11, "07581952832515": 11, "0001001275033711": 11, "000100127503371": 11, "07058704837782": 11, "07347394936348": 11, "550897507833e": 11, "550897507832e": 11, "5761172484836": 11, "05555077655044": 11, "557124125502e": 11, "557124125495e": 11, "8535925441154": 11, "557124125503e": 11, "0443981466022": 11, "611995628362e": 11, "611995628359e": 11, "611995628375e": 11, "6002277331592": 11, "611995628377e": 11, "04283007762151": 11, "590393750322e": 11, "59039375014e": 11, "590393750355e": 11, "822148653339": 11, "590393750361e": 11, "04192322976247": 11, "299929287269e": 11, "299929283142e": 11, "299929287457e": 11, "9017467938803": 11, "299929287509e": 11, "04170825633295": 11, "117560215317e": 11, "117560474123e": 11, "117560204434e": 11, "9970399692198": 11, "117560202277e": 11, "04168179329766": 11, "559775055372e": 11, "14": [11, 12, 13, 17, 18, 25, 35, 41, 43, 49, 56, 63, 70, 73, 79, 91, 92], "561428379782e": 11, "559760203488e": 11, "9999499685222": 11, "559752674386e": 11, "04168169240444": 11, "041682": 11, "453845977783203": 11, "0017151832580566406": 11, "006774675520687": 11, "9932256422636": 11, "6956034733": 11, "002048208707529": 11, "7343095368176": 11, "213991622021": 11, "0002697365474824": 11, "8839403501148": 11, "5059383903968": 11, "832109993819e": 11, "832109993818e": 11, "7601171076044": 11, "2339657807265": 11, "437682932226e": 11, "6663448297416": 11, "1471256246326": 11, "134983216297e": 11, "134983216299e": 11, "5553643816468": 11, "1181584941169": 11, "342312725774e": 11, "342312725781e": 11, "723813357168": 11, "1006387519744": 11, "078561231268e": 11, "078561231235e": 11, "078561231266e": 11, "8033142552548": 11, "09474734646262": 11, "966870958108e": 11, "966870953918e": 11, "966870953989e": 11, "7525479178458": 11, "966870954248e": 11, "09354342735761": 11, "199895240123e": 11, "199895384126e": 11, "199895235332e": 11, "9984019849396": 11, "199895236104e": 11, "0931036778586": 11, "1017793609e": 11, "101768735229e": 11, "101780822184e": 11, "9999499563876": 11, "101780420221e": 11, "0931027446646": 11, "093103": 11, "3079605102539062": 11, "nbm": 11, "len": [11, 13, 15, 28, 29, 31, 32, 34, 35, 36, 40, 49, 86, 89], "nbm2": 11, "345": [11, 17, 93], "plot_barycenter_lp_vs_entrop": [11, 17], "design": [12, 29, 33, 34, 36, 39, 47, 56, 63, 65, 84, 92, 93], "how": [12, 24, 29, 32, 33, 34, 35, 36, 39, 44, 47, 49, 54, 55, 63, 65, 71, 93], "pathlib": [12, 13, 19, 23, 25, 34], "four": [12, 34], "construct": [12, 34, 67, 70, 73, 84], "this_fil": [12, 13, 19, 23, 25, 34], "realpath": [12, 13, 19, 23, 25, 34], "__file__": [12, 13, 19, 23, 25, 34], "data_path": [12, 13, 19, 23, 25, 34], "join": [12, 13, 19, 23, 25, 34, 70, 91], "parent": [12, 13, 19, 23, 25, 34], "f1": [12, 13], "f2": [12, 13, 29, 31, 36, 79], "f3": [12, 29, 31, 36], "heart": [12, 13, 16], "f4": 12, "duck": [12, 13, 14], "nb_imag": 12, "corner": [12, 92], "bilinear": [12, 49], "v1": [12, 29, 31, 36], "v2": [12, 29, 31, 36], "v3": 12, "v4": 12, "suptitl": [12, 28], "004": [12, 32], "ty": 12, "tmp1": 12, "tmp2": 12, "elif": [12, 29, 31, 35, 36], "call": [12, 47, 63, 65, 71, 73, 79, 80, 81, 89, 92, 93], "convolutional_barycenter2d": [12, 13], "870": [12, 17, 31, 52, 57], "plot_convolutional_barycent": [12, 17], "janati": [13, 61, 62, 69, 71, 91, 92], "gramfort": [13, 69, 71, 91, 92], "37th": [13, 71, 91, 92], "119": [13, 56, 71, 91, 92], "4692": [13, 71, 91, 92], "4701": [13, 71, 91, 92], "hicham": [13, 61, 62, 69, 91], "janati100": 13, "gmail": [13, 18, 19, 20, 24, 25, 26, 29, 31, 33, 34, 36, 46, 47], "com": [13, 18, 19, 20, 24, 25, 26, 29, 31, 33, 34, 36, 46, 47, 68, 70, 86, 89, 91, 93], "barycenter_debias": 13, "convolutional_barycenter2d_debias": 13, "bar": [13, 84], "bars_debias": 13, "indianr": 13, "gold": [13, 70], "sharei": [13, 30], "bar_debias": 13, "varepsilon": [13, 72], "3f": [13, 21, 64], "asarrai": 13, "displai": [13, 20, 26, 49, 71], "img": [13, 19, 23, 25, 34], "grei": [13, 35, 40], "bars_sinkhorn": 13, "7e": 13, "all_bar": 13, "jj": 13, "ax_row": 13, "ii": [13, 22], "set_xtick": [13, 16, 59], "set_ytick": [13, 16, 59], "spine": 13, "top": [13, 40, 68, 79, 83], "set_vis": 13, "079": [13, 17], "plot_debiased_barycent": [13, 17], "vivien": [14, 86, 91], "iip": 14, "ist": 14, "kyoto": 14, "ac": 14, "jp": 14, "eduardo": [14, 15, 69], "fernand": [14, 15, 69], "montesuma": [14, 15, 69], "universit": [14, 15], "saclai": [14, 15, 32], "measures_loc": [14, 15, 71, 80], "measures_weight": [14, 15, 71, 80], "x_init": [14, 15, 71, 80], "free_support_barycent": [14, 71, 92, 93], "free_support_sinkhorn_barycent": [14, 15], "817": [14, 17], "plot_free_support_barycent": [14, 17], "understood": 15, "cloud": [15, 34], "linalg": [15, 28, 31, 33, 63, 70], "x4": 15, "multivariate_norm": 15, "a3": 15, "a4": 15, "steelblu": 15, "float32": 15, "xb_init": 15, "subplot2grid": [15, 34], "536": [15, 18, 20, 21, 31, 33, 49, 56], "did": [15, 18, 20, 21, 31, 33, 49, 56, 79, 93], "increas": [15, 18, 20, 21, 31, 33, 49, 56, 82], "382": [15, 17], "plot_free_support_sinkhorn_barycent": [15, 17], "saint": [16, 80, 91], "dizier": [16, 80, 91], "live": [16, 35, 68, 80, 91], "subspac": [16, 75, 80, 91, 92], "2105": [16, 80, 91], "09755": [16, 80, 91], "eloi": [16, 69], "tangui": [16, 33, 69, 79], "sub_sample_factor": 16, "i3": 16, "uu": 16, "vv": 16, "x_list": [16, 80], "im": [16, 23, 25, 40, 49], "a_list": [16, 80], "p1": [16, 21, 29, 31, 32, 36, 45], "p2": [16, 21, 29, 31, 32, 36, 45], "p3": [16, 29, 31, 36], "p_list": [16, 80], "n_samples_bari": [16, 80], "send": [16, 68], "visual": [16, 20, 26, 32, 39, 50, 51], "x_visu": 16, "xi": 16, "view_init": [16, 59], "azim": 16, "set_ztick": [16, 59], "generalized_free_support_barycent": 16, "elev": 16, "_init": 16, "init_func": 16, "frame": 16, "136": [16, 56], "blit": 16, "953": [16, 17], "plot_generalized_free_support_barycent": [16, 17], "087": 17, "auto_examples_barycent": 17, "demo": [17, 38, 66, 71, 74, 80, 89, 92], "convolut": [17, 38, 69, 71, 91, 93], "debias": [17, 38, 69, 71, 74, 89, 91, 92, 93], "free": [17, 38, 67, 68, 69, 71, 80, 82, 91, 93], "introduc": [18, 19, 20, 21, 22, 24, 26, 71, 92, 93], "otda": [18, 21, 22, 27, 38, 73, 74, 89, 93], "stanisla": [18, 19, 20, 24, 25, 26, 69, 91], "chambon": [18, 19, 20, 24, 25, 26, 69, 91], "stan": [18, 19, 20, 24, 25, 26], "3gauss": [18, 20, 22, 26], "3gauss2": [18, 20, 22, 26], "ot_emd": [18, 19, 20, 22, 25, 49, 92], "da": [18, 19, 20, 21, 22, 23, 24, 25, 26, 69, 92, 93], "emdtransport": [18, 19, 20, 22, 25, 92, 93], "ot_sinkhorn": [18, 19, 20, 21, 22, 25, 49], "sinkhorntransport": [18, 19, 20, 21, 22, 25, 26, 92, 93], "reg_": [18, 19, 20, 21, 22, 25, 26, 73], "ot_lpl1": [18, 20], "sinkhornlpl1transport": [18, 20, 92, 93], "reg_cl": [18, 20, 73], "1e0": [18, 20, 24, 25, 41], "l1l2": [18, 73], "ot_l1l2": 18, "sinkhornl1l2transport": [18, 92], "2e0": 18, "transp_xs_emd": [18, 19, 20, 22, 25], "transp_xs_sinkhorn": [18, 19, 20, 22, 25], "transp_xs_lpl1": [18, 20], "transp_xs_l1l2": 18, "763061e": 18, "000000e": [18, 24, 25, 30, 31, 33, 56], "081861e": 18, "689583e": 18, "681200e": 18, "862280e": 18, "179100e": 18, "195813e": 18, "821987e": 18, "211501e": 18, "02": [18, 24, 25, 27, 31, 33, 41, 47, 48, 50, 56, 57, 63, 82], "029326e": 18, "808932e": 18, "216608e": 18, "03": [18, 24, 27, 30, 31, 33, 37, 41, 45, 46, 47, 50, 56, 59, 60, 66, 82], "305436e": 18, "792762e": 18, "019666e": 18, "617012e": 18, "785968e": 18, "804295e": 18, "794348e": 18, "778259e": 18, "335304e": 18, "709292e": 18, "772608e": 18, "187777e": 18, "650678e": 18, "768734e": 18, "190456e": 18, "874332e": 18, "768700e": 18, "876119e": 18, "318292e": 18, "767482e": 18, "894485e": 18, "218588e": 18, "765491e": 18, "127725e": 18, "990989e": 18, "762434e": 18, "734384e": 18, "056738e": 18, "759833e": 18, "478250e": 18, "601472e": 18, "758374e": 18, "294698e": 18, "458518e": 18, "757601e": 18, "396351e": 18, "727032e": 18, "756624e": 18, "562652e": 18, "771489e": 18, "754377e": 18, "281229e": 18, "247758e": 18, "753747e": 18, "587988e": 18, "292424e": 18, "753162e": 18, "336538e": 18, "849492e": 18, "param_img": [18, 22], "coupling_": [18, 20, 21, 22, 26, 73], "nemdtransport": [18, 20, 22, 26], "nsinkhorntransport": [18, 20, 22, 26], "nsinkhornlpl1transport": [18, 20], "nsinkhornl1l2transport": 18, "transp": [18, 20, 22, 26, 65], "740": [18, 27, 31], "plot_otda_class": [18, 27], "present": [19, 24, 26, 64, 68, 79, 93], "transfer": [19, 92], "ferradan": [19, 25, 56, 73, 81, 91, 92], "papadaki": [19, 25, 56, 73, 81, 91, 92], "peyr": [19, 25], "aujol": [19, 25, 56, 73, 81, 91, 92], "2014": [19, 25, 56, 71, 73, 80, 81, 91, 92], "1853": [19, 25, 56, 73, 81, 91, 92], "1882": [19, 25, 56, 73, 81, 91, 92], "im2mat": [19, 23, 25, 34], "pixel": [19, 23, 34], "per": [19, 23, 25, 34, 51, 80, 86], "mat2im": [19, 23, 25], "back": [19, 23, 25, 68], "minmax": [19, 23, 25], "clip": [19, 23, 25, 70], "ocean_dai": [19, 23, 25], "jpg": [19, 23, 25], "256": [19, 23, 25], "ocean_sunset": [19, 23, 25], "idx1": [19, 25], "idx2": [19, 25], "ylabel": [19, 25, 30, 35, 40, 49, 58, 59, 65], "predict": [19, 79], "out": [19, 24, 32, 73, 85], "transp_xt_emd": 19, "inverse_transform": [19, 23, 73, 92], "transp_xt_sinkhorn": 19, "i1t": [19, 23], "i2t": [19, 23], "993": [19, 27], "plot_otda_color_imag": [19, 27], "explicit": [20, 26, 67, 73, 89], "some": [20, 26, 63, 68, 69, 73, 80, 82, 89, 91, 92, 93], "quantiti": [20, 26, 35], "greater": [20, 26, 93], "coeffici": [20, 26, 35, 71, 72, 79, 80, 81, 84], "give": [20, 26, 49, 65, 68, 70, 79, 84, 93], "understand": [20, 26], "what": [20, 26, 67, 68, 92], "n_samples_sourc": [20, 26], "n_samples_target": [20, 26], "main": [20, 68, 80, 92, 93], "711": [20, 27], "plot_otda_d2": [20, 27], "ievgen": [21, 22, 69, 71, 73, 91], "redko": [21, 22, 39, 44, 69, 71, 72, 73, 91], "st": [21, 22, 75], "etienn": [21, 22], "1985": 21, "dec1": 21, "dec2": 21, "pt": 21, "dect": 21, "ys1": 21, "2gauss_prop": 21, "bia": [21, 24, 25, 73, 77], "ys2": 21, "all_xr": 21, "all_yr": 21, "plot_ax": 21, "dec": 21, "set1": 21, "2f": [21, 49], "equal": [21, 45, 53, 70, 84], "85": [21, 56, 93], "046431138906241": 21, "129455496299416": 21, "print_g": 21, "independ": [21, 92], "jcpottransport": 21, "ws1": 21, "proportions_": [21, 73], "log_": [21, 73], "d2": [21, 39, 44], "ws2": 21, "prop": [21, 82], "err": [21, 31, 33, 50, 63], "069551e": 21, "h_re": 21, "1f": 21, "268": [21, 27], "plot_otda_jcpot": [21, 27], "ot_emd_laplac": 22, "emdlaplacetransport": 22, "reg_lap": [22, 73], "reg_src": [22, 73], "transp_xs_emd_laplac": 22, "503": 22, "runtimewarn": [22, 31, 33, 55, 62], "divid": [22, 31, 33, 49, 55, 62], "encount": [22, 31, 33, 55, 62], "ktransposeu": 22, "511": 22, "nemdlaplacetransport": 22, "476": [22, 27], "plot_otda_laplacian": [22, 27], "anglet": 23, "line2d": 23, "0x7ff754adf880": 23, "ae": 23, "empirical_bures_wasserstein_map": 23, "xst": 23, "lineartransport": [23, 92], "invers": [23, 29, 31, 36, 64, 70, 73, 80, 84], "934": [23, 27], "plot_otda_linear_map": [23, 27], "mappingtransport": [24, 25, 92], "perrot": [24, 25, 69, 73, 91, 92], "habrard": [24, 25, 73, 91, 92], "xs_new": 24, "ot_mapping_linear": [24, 25], "transp_xs_linear": 24, "transp_xs_linear_new": 24, "ot_mapping_gaussian": [24, 25], "transp_xs_gaussian": 24, "transp_xs_gaussian_new": 24, "delta": [24, 25, 44, 84], "190105e": 24, "170411e": 24, "700201e": 24, "169845e": 24, "356805e": 24, "169664e": 24, "344581e": 24, "169558e": 24, "549048e": 24, "169490e": 24, "619901e": 24, "169453e": 24, "982881e": 24, "208325e": 24, "153391e": 24, "305359e": 24, "150638e": 24, "627997e": 24, "149220e": 24, "416816e": 24, "148278e": 24, "270431e": 24, "147579e": 24, "685273e": 24, "147070e": 24, "226112e": 24, "146654e": 24, "002934e": 24, "146340e": 24, "574136e": 24, "146055e": 24, "890732e": 24, "145822e": 24, "605142e": 24, "bari": [24, 28], "292": [24, 27], "plot_otda_map": [24, 27], "image_emd": 25, "image_sinkhorn": 25, "x1tl": 25, "image_mapping_linear": 25, "x1tn": 25, "image_mapping_gaussian": 25, "797245e": 25, "758014e": 25, "182822e": 25, "757026e": 25, "620752e": 25, "756521e": 25, "875691e": 25, "756218e": 25, "725224e": 25, "756015e": 25, "153553e": 25, "755868e": 25, "348118e": 25, "755759e": 25, "234582e": 25, "755673e": 25, "893582e": 25, "755604e": 25, "942771e": 25, "755547e": 25, "206000e": 25, "755500e": 25, "695056e": 25, "755460e": 25, "307154e": 25, "755426e": 25, "944208e": 25, "755395e": 25, "715960e": 25, "755369e": 25, "515613e": 25, "755345e": 25, "367864e": 25, "755324e": 25, "197885e": 25, "755305e": 25, "071067e": 25, "755303e": 25, "898122e": 25, "842001e": 25, "780145e": 25, "358084e": 25, "778490e": 25, "296544e": 25, "777841e": 25, "648247e": 25, "777495e": 25, "948923e": 25, "777284e": 25, "184075e": 25, "777135e": 25, "396988e": 25, "777027e": 25, "059322e": 25, "776945e": 25, "619816e": 25, "776880e": 25, "672789e": 25, "776827e": 25, "971430e": 25, "994": [25, 27], "plot_otda_mapping_colors_imag": [25, 27], "ot_sinkhorn_un": 26, "transp_xs_sinkhorn_un": 26, "ot_sinkhorn_semi": 26, "transp_xs_sinkhorn_semi": 26, "modifi": 26, "involv": [26, 68], "infinit": [26, 73], "daili": 26, "element": [26, 28, 49, 70, 71, 73, 79, 80, 84, 89], "fill": [26, 61, 70, 73], "recal": [26, 84], "cost_": [26, 73], "exhibit": [26, 73], "nunsupervis": 26, "nsemi": 26, "735": [26, 27], "plot_otda_semi_supervis": [26, 27], "144": [27, 56, 93], "auto_examples_domain": 27, "multi": [27, 38, 70, 71, 73, 74, 89, 91, 92, 93], "shift": [27, 38, 71, 73, 74, 89, 91, 92, 93], "laplacian": [27, 38, 69, 73, 74, 89, 91, 92], "unsupervis": [27, 38, 73, 74, 89, 92], "semi": [27, 37, 38, 69, 73, 74, 79, 81, 84, 86, 87, 89, 91, 92, 93], "supervis": [27, 38, 71, 73, 74, 89, 91, 92, 93], "networkx": [28, 29, 31, 32, 35, 36], "nx": [28, 32, 70, 79, 81, 89, 93], "csgraph": 28, "shortest_path": 28, "mcol": 28, "fgw_barycent": [28, 79, 92], "find_thresh": 28, "inf": [28, 73], "sup": 28, "trick": [28, 82, 92], "adequ": 28, "sai": 28, "connect": [28, 29, 31, 35, 36], "linesearch": [28, 79, 81, 93], "reconstruct": [28, 35, 79, 86, 93], "come": [28, 68, 92, 93], "n_node": [28, 32, 35, 78], "begin": [28, 84], "thresh": 28, "cprime": 28, "sp_to_adjac": 28, "sc": 28, "argmin": [28, 29, 31, 36, 70], "threshinf": 28, "threshsup": 28, "minimum": [28, 70, 73, 79, 81, 92, 93], "new": [28, 70, 89, 92], "zeros_lik": 28, "fill_diagon": [28, 35], "build_noisy_circular_graph": 28, "with_nois": 28, "structure_nois": 28, "noisi": [28, 44], "add_nodes_from": 28, "add_nod": [28, 29, 31, 36], "attr_nam": 28, "add_edg": [28, 29, 31, 36], "randomint": 28, "graph_color": 28, "nx_graph": 28, "cnorm": 28, "cpick": 28, "scalarmapp": 28, "set_arrai": 28, "val_map": 28, "get_node_attribut": 28, "to_rgba": 28, "ad": [28, 29, 31, 44, 68, 70, 73, 77, 80, 82, 84, 89, 92, 93], "po": [28, 29, 31, 32, 34, 36, 73], "kamada_kawai_layout": 28, "draw": 28, "node_color": [28, 29, 31, 32, 36], "with_label": [28, 32], "node_s": [28, 29, 31, 36], "indic": [28, 32, 40, 68, 70, 78, 84], "adjacency_matrix": 28, "sizebari": 28, "95": [28, 29, 31, 34, 36, 56, 58, 59], "from_numpy_arrai": 28, "000": [28, 32, 37], "plot_barycenter_fgw": [28, 37], "sr": [29, 36, 81], "g1": [29, 31, 36, 53], "g2": [29, 31, 36, 53], "reweigh": [29, 36], "srgw": [29, 36, 79], "These": [29, 36, 68], "endow": [29, 31, 36], "srfgw": [29, 36, 79], "48": [29, 36, 49, 56, 79, 81, 91, 93], "c\u00e9dric": [29, 31, 33, 35, 36, 69, 78, 79, 81, 91], "iclr": [29, 36, 79, 81, 86, 91], "cedvincentcuaz": [29, 31, 33, 36], "entropic_semirelaxed_gromov_wasserstein": [29, 79], "entropic_semirelaxed_fused_gromov_wasserstein": [29, 79], "commun": [29, 31, 35, 36, 67, 92], "stochastic_block_model": [29, 31, 35, 36], "n3": [29, 31, 36], "g3": [29, 31, 36], "to_numpy_arrai": [29, 31, 35, 36], "h3": [29, 31, 36], "edg": [29, 31, 32, 36, 78], "weight_intra_g2": [29, 31, 36], "weight_inter_g2": [29, 31, 36], "weight_intra_g3": [29, 31, 36], "weight_inter_g3": [29, 31, 36], "weightedg2": [29, 31, 36], "part_g2": [29, 31, 36], "weightedg3": [29, 31, 36], "part_g3": [29, 31, 36], "srgw_e": 29, "ot_23": [29, 36], "log_23": [29, 36], "srgw_23": [29, 36], "srgw_dist": [29, 36], "ot_32": [29, 36], "log_32": [29, 36], "srgw_32": [29, 36], "255": [29, 36], "06000000014822844": 29, "1577777782120945": 29, "adjust": [29, 31], "intens": [29, 31, 35], "proportionali": [29, 31], "sent": [29, 31, 92], "draw_graph": [29, 31, 36], "nodes_color_part": [29, 31, 36], "gweight": [29, 31, 36], "edge_color": [29, 31, 36], "shiftx": [29, 31, 36], "spring_layout": [29, 31, 32, 36], "alpha_edg": [29, 31, 36], "width_edg": [29, 31, 36], "draw_networkx_edg": [29, 31, 36], "width": [29, 31, 36, 40, 71], "visibl": [29, 31, 36, 93], "activ": [29, 31, 36, 70, 71, 84], "edgelist_activ": [29, 31, 36], "edgelist_deactiv": [29, 31, 36], "edgelist": [29, 31, 36], "draw_networkx_nod": [29, 31, 36], "nodelist": [29, 31, 32, 36], "scaled_gweight": [29, 31, 36], "nodes_s": [29, 31, 36], "draw_transp_colored_srgw": [29, 36], "part_g1": [29, 31, 36], "pos1": [29, 31, 36], "pos2": [29, 31, 36], "switchx": [29, 31, 36], "seed_g1": [29, 31, 36], "seed_g2": [29, 31, 36], "starting_color": [29, 31, 36], "partit": [29, 31, 36], "part1": [29, 31, 36], "unique_color": [29, 31, 36], "uniqu": [29, 31, 36, 40, 70, 80, 92], "nodes_color_part1": [29, 31, 36], "nodes_color_part2": [29, 31, 36], "assign": [29, 31, 35, 36, 71, 72, 78, 79], "k1": [29, 31, 36], "max_tk1": [29, 31], "k2": [29, 31, 36], "seed_g3": [29, 31, 36], "121": [29, 32, 33, 36, 49, 56, 63, 93], "h_2": [29, 36, 79], "c_3": [29, 36], "hbar2": [29, 36], "122": [29, 32, 33, 36, 49, 56, 63, 93], "hbar3": [29, 36], "h_3": [29, 36], "intra": [29, 31, 35, 36, 82], "pairwis": [29, 31, 36, 73, 79], "fgw_alpha": [29, 36], "fgw_dist": [29, 31, 36, 79], "srfgw_e": 29, "srfgw_23": [29, 36], "srfgw_dist": [29, 36], "srfgw_32": [29, 36], "3787614673384413": 29, "03505939173475108": 29, "2391152216506156": 29, "f_2": [29, 36, 79], "f_3": [29, 36], "614": [29, 37], "plot_entropic_semirelaxed_fgw": [29, 37], "sig": 30, "sig2": 30, "phi": [30, 84], "phi2": 30, "a_i": [30, 71, 80, 92], "y_j": [30, 92], "b_j": [30, 71, 80, 92], "w1": [30, 75], "w2": [30, 55, 75], "got": 30, "l_x": 30, "l_y": 30, "gridspec": 30, "set_aspect": 30, "ax3": [30, 34, 63], "sharex": 30, "gwg": 30, "logw": 30, "reload_ext": 30, "wgw": 30, "734412e": 30, "508254e": 30, "875326e": 30, "226158e": 30, "189327e": 30, "456740e": 30, "189279e": 30, "622743e": 30, "552714e": 30, "0019669532775878906": 30, "683978e": 30, "860061e": 30, "134468e": 30, "239175e": 30, "182948e": 30, "682787e": 30, "677113e": 30, "visu": 30, "024": [30, 32, 37], "plot_fgw": [30, 37], "attribut": [31, 70, 73, 79, 93], "further": [31, 49, 67, 68], "xu": [31, 33, 79, 91], "luo": [31, 33, 79, 91], "zha": [31, 33, 79, 91], "duke": [31, 33, 79, 91], "entropic_fused_gromov_wasserstein": [31, 79, 93], "add": [31, 35, 63, 68, 80, 82, 89, 93], "fgw0": 31, "log0": [31, 33, 63], "proxim": [31, 33, 79, 93], "oper": [31, 33, 68, 73, 75, 77, 92], "ppa": [31, 33, 79, 93], "fgwe": 31, "loge": [31, 33], "pgd": [31, 33, 79], "sparsiti": [31, 33, 35, 51, 79, 86, 91, 92, 93], "level": [31, 33, 67, 71, 73, 74, 89, 92], "fgw0_sparsiti": 31, "fgw_sparsiti": 31, "fgwe_spars": 31, "tend": [31, 33, 49], "produc": [31, 33], "err0": [31, 33], "271184e": 31, "211305e": 31, "640431e": 31, "059879e": 31, "024660e": 31, "637523e": 31, "866445e": 31, "936346e": 31, "243555e": 31, "831410e": 31, "891614e": 31, "149450e": 31, "473216e": 31, "854134e": 31, "724554e": 31, "747973e": 31, "850574e": 31, "244899e": 31, "559817e": 31, "841819e": 31, "279017e": 31, "755571e": 31, "819396e": 31, "870728e": 31, "242264e": 31, "784264e": 31, "283767e": 31, "513222e": 31, "772225e": 31, "191339e": 31, "203845e": 31, "764565e": [31, 56], "034974e": 31, "660790e": 31, "761179e": 31, "000610e": 31, "385291e": 31, "536990e": 31, "472502e": 31, "129779e": 31, "936118e": 31, "334121e": 31, "852583e": 31, "134797e": 31, "177453e": 31, "236970e": 31, "465712e": 31, "858590e": 31, "312306e": 31, "789776e": 31, "493878e": 31, "029873e": 31, "095678e": 31, "177744e": 31, "257392e": 31, "242762e": 31, "125684e": 31, "770321e": 31, "368455e": 31, "094853e": 31, "159374e": 31, "564338e": 31, "974174e": 31, "297098e": 31, "639787e": 31, "106686e": 31, "716049e": 31, "433353e": 31, "227167e": 31, "080617e": 31, "980812e": 31, "912468e": 31, "858901e": 31, "805235e": 31, "740559e": 31, "658655e": 31, "557834e": 31, "440242e": 31, "310793e": 31, "175881e": 31, "1066": [31, 33], "042086e": 31, "151311e": 31, "992882e": 31, "972309e": 31, "101506e": 31, "379844e": 31, "797194e": 31, "337741e": 31, "510": 31, "984020e": 31, "520": 31, "720212e": 31, "530": 31, "534028e": 31, "540": 31, "417109e": 31, "550": 31, "364311e": 31, "560": 31, "372351e": 31, "570": 31, "438312e": 31, "580": 31, "558368e": 31, "590": 31, "726958e": 31, "600": 31, "936418e": 31, "176966e": 31, "620": [31, 62, 66], "436877e": 31, "630": 31, "702796e": 31, "960175e": 31, "650": 31, "193888e": 31, "660": 31, "389046e": 31, "670": 31, "531979e": 31, "680": 31, "611295e": 31, "690": 31, "618871e": 31, "700": 31, "550627e": 31, "406954e": 31, "720": 31, "192695e": 31, "730": [31, 82, 91, 92], "916691e": 31, "590932e": 31, "750": 31, "229430e": 31, "760": 31, "846976e": 31, "770": 31, "457933e": 31, "780": 31, "075230e": 31, "790": 31, "709643e": 31, "369414e": 31, "810": 31, "060184e": 31, "820": 31, "785186e": 31, "830": 31, "545590e": 31, "840": 31, "340916e": 31, "850": 31, "169442e": 31, "860": 31, "028566e": 31, "150926e": 31, "880": 31, "254840e": 31, "890": 31, "560795e": 31, "900": 31, "033105e": 31, "910": [31, 62], "638947e": 31, "920": [31, 57], "349865e": 31, "930": 31, "142583e": 31, "940": 31, "999120e": 31, "950": 31, "906371e": 31, "960": 31, "855388e": 31, "970": 31, "840590e": 31, "980": 31, "859006e": 31, "990": 31, "909627e": 31, "981055e": 31, "110756e": 31, "139916e": 31, "158952e": 31, "159648e": 31, "159715e": 31, "159728e": 31, "159732e": 31, "159733e": 31, "37611793139330985": 31, "3671471715862439": 31, "21736592892258028": 31, "proportionn": 31, "draw_transp_colored_gw": 31, "131": [31, 33, 56, 63], "algo": [31, 33, 49, 71], "p0": [31, 41, 75], "q0": 31, "132": [31, 33, 56, 63, 93], "133": [31, 33, 56, 63], "pe": [31, 93], "qe": 31, "443": [31, 37, 93], "plot_fgw_solv": [31, 37], "gnn": [32, 69, 91, 93], "templat": [32, 43, 69, 78, 91, 93], "52": [32, 40, 56, 75, 91, 93], "53": [32, 56, 78, 91], "sonia": [32, 69], "mazelet": [32, 69], "en": [32, 92], "random_split": 32, "torch_geometr": 32, "loader": 32, "dataload": 32, "to_networkx": 32, "one_hot": 32, "stochastic_blockmodel_graph": 32, "graphdata": 32, "gcnconv": 32, "tfgwpool": [32, 78], "tsne": 32, "n_graph": [32, 78], "n_node_class": 32, "block_sizes1": 32, "block_sizes2": 32, "num_class": 32, "graphs1": 32, "edge_index": [32, 78], "graphs2": 32, "split": [32, 75], "train_graph": 32, "test_graph": 32, "train_load": 32, "batch_siz": [32, 35, 47, 73, 79, 87], "shuffl": [32, 40], "test_load": 32, "to_undirect": 32, "draw_networkx": 32, "tab": 32, "pooling_tfgw": 32, "n_templat": [32, 78], "n_template_nod": [32, 78], "n_class": [32, 73], "n_hidden_lay": 32, "feature_init_mean": [32, 78], "feature_init_std": [32, 78], "conv": 32, "x_latent": 32, "save": [32, 45, 71, 79], "latent": 32, "n_epoch": 32, "store": [32, 73], "embeddings_for_tsn": 32, "weight_decai": 32, "0005": 32, "criterion": [32, 92, 93], "crossentropyloss": 32, "all_accuraci": 32, "all_loss": 32, "epoch": [32, 35, 79], "acc": 32, "latent_embed": 32, "pred": 32, "train_correct": 32, "train_acc": 32, "4f": 32, "accuraci": [32, 71], "test_acc": 32, "test_correct": 32, "hstack": [32, 41], "6519": 32, "5200": 32, "001": [32, 35, 53, 71, 73, 75, 86], "6222": 32, "7400": 32, "002": 32, "5858": 32, "0000": 32, "003": 32, "5570": 32, "5235": 32, "9800": 32, "4944": 32, "9600": 32, "006": [32, 58, 60], "4595": 32, "007": 32, "4248": 32, "008": 32, "3867": 32, "009": 32, "3455": 32, "010": 32, "3008": 32, "011": 32, "2525": 32, "012": 32, "2050": 32, "013": 32, "1598": 32, "014": 32, "1277": 32, "015": 32, "1046": 32, "016": 32, "0875": 32, "017": 32, "0725": 32, "018": 32, "0554": 32, "019": 32, "0355": 32, "020": 32, "0194": 32, "021": 32, "0095": 32, "022": 32, "0052": 32, "023": 32, "0047": 32, "0054": 32, "tsne_embed": 32, "n_compon": [32, 34], "perplex": 32, "class_0": 32, "class_1": 32, "tsne_embeddings_0": 32, "tsne_embeddings_1": 32, "after": [32, 41, 91], "547": [32, 37], "plot_gnn_tfgw": [32, 37, 91], "compar": [33, 49, 68, 92], "Then": [33, 35, 55, 92], "kerdoncuff": [33, 69, 79, 91, 92], "emonet": [33, 79, 91, 92], "marc": [33, 79, 91, 92], "mjl": [33, 91, 92], "erwan": [33, 34, 69], "vautier": [33, 34, 69], "lapost": 33, "net": 33, "sp": [33, 34, 63, 82], "demonstr": [33, 63, 68, 93], "purpos": [33, 63, 92], "mu_": [33, 42, 52, 55, 58, 63, 64, 65, 73, 77, 92], "cov_": [33, 42, 52, 58, 63, 64, 65], "mu_t": [33, 42, 52, 58, 63, 64, 65, 73, 77, 92], "cov_t": [33, 42, 52, 58, 63, 64, 65], "make_2d_samples_gauss": [33, 42, 52, 58, 63, 64, 65], "sqrtm": [33, 63, 70], "gw0": 33, "entropic_gromov_wasserstein": [33, 79, 92, 93], "gwe": 33, "gw0_sparsiti": 33, "gw_sparsiti": 33, "gwe_spars": 33, "nfeasibl": 33, "606056e": 33, "330020e": 33, "022552e": 33, "276036e": 33, "023674e": 33, "098033e": 33, "063453e": 33, "820952e": 33, "205038e": 33, "027228e": 33, "501837e": 33, "088545e": 33, "191147e": 33, "684324e": 33, "209223e": 33, "076331e": 33, "140465e": 33, "876462e": 33, "040056e": 33, "334508e": 33, "018997e": 33, "123553e": 33, "184445e": 33, "04501836901925051": 33, "037612941478320075": 33, "03823623173438275": 33, "pgw": 33, "plog": 33, "pointwise_gromov_wasserstein": [33, 79], "sgw": 33, "slog": [33, 71], "sampled_gromov_wasserstein": [33, 79], "pointwis": [33, 93], "gw_dist_estim": 33, "gw_dist_std": 33, "toarrai": [33, 70, 84], "18551015414186553": 33, "14981263716330115": 33, "0013724960658236956": 33, "961": [33, 37], "plot_gromov": [33, 37], "decomposit": 34, "pca": 34, "smacof_md": 34, "3000": 34, "singl": 34, "stress": 34, "declar": 34, "npo": 34, "isometri": 34, "n_init": 34, "embedding_": 34, "nmd": 34, "init": [34, 79, 93], "cross": 34, "triangl": 34, "star": 34, "lambdast": 34, "ct01": 34, "ct02": 34, "ct13": 34, "ct23": 34, "help": [34, 68, 80, 92, 93], "consist": [34, 68, 70, 71, 73, 80, 92], "rotat": [34, 49], "npost01": 34, "npost02": 34, "npost13": 34, "npost23": 34, "ax4": 34, "ax5": 34, "ax6": 34, "ax7": 34, "ax8": 34, "ax9": 34, "ax10": 34, "ax11": 34, "ax12": 34, "0x7ff73c19d330": 34, "608": [34, 37], "plot_gromov_barycent": [34, 37], "denot": [35, 49, 71, 73, 80], "c_": [35, 49, 79], "p_": [35, 79], "combin": [35, 92], "sigma_d": 35, "sum_d": [35, 79], "vari": 35, "extens": 35, "aforement": 35, "unattribut": 35, "uniformli": 35, "cedric": 35, "inria": [35, 40, 61, 62], "gromov_wasserstein_linear_unmix": [35, 79], "gromov_wasserstein_dictionary_learn": [35, 79], "fused_gromov_wasserstein_linear_unmix": [35, 79], "fused_gromov_wasserstein_dictionary_learn": [35, 79], "inter": 35, "nlabel": 35, "p_inter": 35, "p_intra": 35, "n_cluster": 35, "low": [35, 43, 49, 76], "high": [35, 68], "int32": 35, "idx_c": 35, "plot_gromov_wasserstein_dictionary_learn": [35, 37], "93": [35, 56, 93], "promot": [35, 79, 92], "cdict_gw": 35, "learning_r": [35, 79], "nonnegative_symmetr": [35, 79], "tol_out": [35, 79], "tol_inn": [35, 79], "max_iter_out": [35, 79], "max_iter_inn": [35, 79], "use_log": [35, 79], "use_adam_optim": [35, 79], "loss_epoch": 35, "cumul": [35, 70], "928070954885737": 35, "528435380634622": 35, "481496257647932": 35, "7251645422089865": 35, "5896787585765": 35, "904249565820505": 35, "894474501829586": 35, "839762947251266": 35, "8357620167079265": 35, "57323879230497": 35, "shade": 35, "dark": [35, 93], "white": 35, "idx_atom": 35, "scaled_atom": 35, "reconstruction_error": 35, "cembed": [35, 79], "unmixings2d": 35, "extrem": 35, "linewidth": [35, 40, 45, 59], "876122061653427": 35, "hot": 35, "encod": [35, 89], "dataset_featur": 35, "cdict_fgw": 35, "ydict_fgw": 35, "learning_rate_c": [35, 79], "learning_rate_i": [35, 79], "488307468700953": 35, "409377567767253": 35, "7999724972950055": 35, "590157056733561": 35, "8883324021076806": 35, "6222694197786383": 35, "638584123604814": 35, "537256942676492": 35, "4127469295470614": 35, "315769238894676": 35, "max_featur": 35, "min_featur": 35, "catom": 35, "fatom": 35, "scaled_f": 35, "yembed": [35, 79], "1390622525410854": 35, "semirelaxed_gromov_wasserstein": [36, 79], "semirelaxed_fused_gromov_wasserstein": [36, 79], "105007529006411": 36, "1622222222222223": 36, "3831574076330344": 36, "04003492125155468": 36, "24488498486312954": 36, "971": [36, 37], "plot_semirelaxed_fgw": [36, 37], "358": [37, 93], "auto_examples_gromov": 37, "classif": [37, 38, 74], "tempat": [37, 38], "comparison": [37, 38, 49, 56, 92], "introduct": [38, 57, 92, 93], "row": [38, 48, 70, 71, 72, 79, 80, 84, 89], "align": [38, 48, 67, 72, 73, 77, 92], "discrimin": [38, 48, 75, 91, 93], "logo": [38, 48, 92, 93], "toolbox": [38, 48, 69, 92, 93], "compon": [38, 48, 75, 89, 91, 92, 93], "auto_examples_python": 38, "auto_examples_jupyt": 38, "arbitrari": 39, "n_1": [39, 44], "d_1": [39, 44], "n_2": [39, 44], "d_2": [39, 44], "49": [39, 44, 56, 72, 91, 93], "quang": [39, 44], "hui": [39, 44], "tran": [39, 44], "patch": [39, 40, 44], "connectionpatch": [39, 44], "coot": 39, "co_optimal_transport": [39, 44], "co_optimal_transport2": [39, 44], "coot2": [39, 44], "d1": [39, 44], "pi_sampl": [39, 44, 72], "pi_featur": [39, 44, 72], "coot_dist": 39, "5f": 39, "yaxi": [39, 40, 44], "tick_right": [39, 44], "xaxi": [39, 44], "tick_top": [39, 44], "xya": [39, 44], "xyb": [39, 44], "con": [39, 44], "coordsa": [39, 44], "transdata": [39, 44], "coordsb": [39, 44], "add_artist": [39, 44], "10903416567681642": 39, "09875680836922485": 39, "09685398028260431": 39, "09685": 39, "559": [39, 48], "plot_coot": [39, 48], "colla": [40, 75, 91], "breloi": [40, 75, 91], "antoin": [40, 69, 86, 91], "make_blob": 40, "ticker": 40, "mticker": 40, "esp": 40, "cluster_std": 40, "x_y_lim": 40, "linestyl": [40, 55], "pi_": [40, 75], "powernorm": 40, "aspect": [40, 92, 93], "cb": 40, "orient": [40, 67], "vertic": [40, 45], "shrink": [40, 49], "ticks_loc": 40, "get_ytick": 40, "tolist": 40, "set_major_loc": 40, "fixedloc": 40, "set_yticklabel": 40, "get_tick": 40, "tick_param": 40, "labels": 40, "class_": 40, "idx_min": 40, "idx_max": 40, "rect": 40, "rectangl": 40, "gca": 40, "add_patch": 40, "_n": [40, 71], "x_label": 40, "638": [40, 48], "plot_ewca": [40, 48], "wda": [41, 69, 93], "fda": [41, 92], "floor": [41, 70], "nbnois": 41, "pfda": 41, "projfda": 41, "maxit": [41, 71, 75], "pwda": 41, "projwda": 41, "3042776946697494e": 41, "65147154e": 41, "4401037686381040e": 41, "16760501e": 41, "2234351238819928e": 41, "30555049e": 41, "2169879996364462e": 41, "39115407e": 41, "1924746118060602e": 41, "25387848e": 41, "1177409528990749e": 41, "70993539e": 41, "0862213476139048e": 41, "52716830e": 41, "0747229322240269e": 41, "34923131e": 41, "0678766065261684e": 41, "74029183e": 41, "0621337155459647e": 41, "03651803e": 41, "0577080390746939e": 41, "59605592e": 41, "0543140912472148e": 41, "28883715e": 41, "0470236926310577e": 41, "47528039e": 41, "0445628467498224e": 41, "03183254e": 41, "0364189455866245e": 41, "31006504e": 41, "0303977563823823e": 41, "39885352e": 41, "0301476238242911e": 41, "17467624e": 41, "0292344306414324e": 41, "79959907e": 41, "0271888325518124e": 41, "94408237e": 41, "0183214741002155e": 41, "98322994e": 41, "9762636217090053e": 41, "03196875e": 41, "8225627240876070e": 41, "36012863e": 41, "0855506616050116e": 41, "92702943e": 41, "8001027160864295e": 41, "01920255e": 41, "3687486090807947e": 41, "01780640e": 41, "3431203993360381e": 41, "23716793e": 41, "3118645266923005e": 41, "90753137e": 41, "28": [41, 56, 82, 84, 91, 92, 93], "3067593392325469e": 41, "02767925e": 41, "3064856262240019e": 41, "07925279e": 41, "3060699763593800e": 41, "95215754e": 41, "3060442760754873e": 41, "77368118e": 41, "3060442709529139e": 41, "34108449e": 41, "3060442708435561e": 41, "52599061e": 41, "3060442707674844e": 41, "07742368e": 41, "3060442707600512e": 41, "36125504e": 41, "reach": [41, 93], "92": [41, 49, 56, 93], "xsp": 41, "xtp": 41, "xspw": 41, "xtpw": 41, "192": [41, 56], "complexwarn": 41, "complex": [41, 79, 92], "discard": [41, 80], "imaginari": 41, "offset": 41, "asanyarrai": 41, "882": [41, 48], "plot_wda": [41, 48], "xr": [42, 43, 52, 53, 58], "gweak": 42, "418": [42, 48], "plot_weakot_vs_ot": [42, 48], "sign": 43, "og": 43, "212": [43, 48], "plot_factored_coupl": [43, 48], "mu_x": 44, "mu_i": [44, 92], "clean": [44, 93], "y_": [44, 73, 79], "contamin": 44, "outlier": 44, "intuit": [44, 68], "182": [44, 56], "y_noisi": 44, "nrow": 44, "ncol": 44, "wy_samp": [44, 72], "07507868": 44, "08001347": 44, "09469872": 44, "1001999": 44, "10001527": 44, "10001687": 44, "09999904": 44, "09979829": 44, "11466591": 44, "13551386": 44, "clearli": [44, 92], "complet": [44, 68, 92, 93], "010389716046318498": 44, "508": [44, 48], "plot_learning_weights_with_coot": [44, 48], "letter": 45, "o1": 45, "o2": 45, "translat": 45, "t1": 45, "t2": [45, 64, 84], "horizont": 45, "sx": 45, "sy": [45, 68], "markerfacecolor": 45, "markeredgecolor": 45, "savefig": 45, "svg": 45, "dpi": 45, "transpar": 45, "bbox_inch": 45, "tight": 45, "375": [45, 93], "darkgrai": 45, "logo_dark": 45, "085": [45, 48], "plot_logo": [45, 48], "alaya": [46, 69, 71, 82, 91, 92], "b\u00e9rar": [46, 71, 91, 92], "gasso": [46, 64, 71, 82, 84, 88, 91, 92], "neurip": [46, 82, 84, 88, 91, 92], "mokhtar": [46, 69, 91], "mokhtarzahdi": 46, "plot1d_mat": [46, 47, 50, 51, 56, 61], "lambd": [46, 50, 51, 52], "ns_budget": [46, 71], "budget": [46, 71], "kept": [46, 71, 93], "nt_budget": [46, 71], "g_screen": 46, "restrict": [46, 71], "3524": 46, "bottleneck": [46, 71], "instal": [46, 68, 71, 80, 92, 93], "pypi": [46, 71, 91, 93], "020986042861303855": 46, "kappa": [46, 71], "7476531411890917": 46, "cardin": [46, 71, 89], "isel": 46, "jsel": 46, "392": [46, 48], "plot_screenkhorn_1d": [46, 48], "librari": [47, 69, 91, 92, 93], "bach": [47, 87, 91, 92], "bhushan": [47, 87, 91, 92], "damodaran": [47, 87, 91, 92], "kilian": [47, 52, 69, 91], "n_sourc": [47, 87], "n_target": [47, 54, 87], "x_sourc": 47, "y_target": 47, "sag": [47, 87], "sag_pi": 47, "solve_semi_dual_entrop": 47, "55553509e": 47, "96395660e": 47, "76579142e": 47, "31178196e": 47, "21640234e": 47, "25357448e": 47, "30225078e": 47, "37891338e": 47, "56123975e": 47, "61451746e": 47, "31505947e": 47, "33831456e": 47, "61515202e": 47, "34246014e": 47, "28734709e": 47, "07550428e": 47, "85500870e": 47, "52288517e": 47, "08262628e": 47, "21423583e": 47, "16904253e": 47, "03825797e": 47, "87178503e": 47, "18391107e": 47, "15462212e": 47, "65987989e": 47, "23177216e": 47, "39440107e": 47, "semicontinu": 47, "asgd": [47, 87], "asgd_pi": 47, "log_asgd": 47, "beta": [47, 71, 80, 86, 87, 93], "87919564": 47, "64972912": 47, "90370867": 47, "65425719": 47, "46885467": 47, "30171991": 47, "77560865": 47, "50927934": 47, "40235686": 47, "91006054": 47, "82169674": 47, "44871332e": 47, "00795848e": 47, "75697554e": 47, "40659699e": 47, "20593540e": 47, "31205385e": 47, "34063837e": 47, "80242597e": 47, "40238837e": 47, "68032820e": 47, "26513361e": 47, "36373920e": 47, "52546195e": 47, "40772739e": 47, "31054753e": 47, "19774150e": 47, "29902872e": 47, "49410422e": 47, "06078986e": 47, "22200805e": 47, "05396464e": 47, "03575289e": 47, "84056467e": 47, "19573357e": 47, "02994053e": 47, "72385417e": 47, "28420336e": 47, "47716225e": 47, "sinkhorn_pi": 47, "55553508e": 47, "96395661e": 47, "31178193e": 47, "30225079e": 47, "37891333e": 47, "56123974e": 47, "33831455e": 47, "61515201e": 47, "07550425e": 47, "85500876e": 47, "52288523e": 47, "08262629e": 47, "16904255e": 47, "03825804e": 47, "87178504e": 47, "23177217e": 47, "39440105e": 47, "sgd": [47, 79, 87], "sgd_dual_pi": 47, "log_sgd": 47, "solve_dual_entrop": 47, "92075753": 47, "80864372": 47, "07370578": 47, "0179414": 47, "60239916": 47, "8141425": 47, "11122763": 47, "346688": 47, "47228889": 47, "57636303": 47, "9534778": 47, "21021974e": 47, "26940978e": 47, "09590373e": 47, "59858662e": 47, "65652588e": 47, "83627521e": 47, "27260904e": 47, "58648690e": 47, "49188637e": 47, "03096858e": 47, "44340331e": 47, "37764488e": 47, "14582303e": 47, "32484188e": 47, "15372556e": 47, "26187284e": 47, "79941580e": 47, "58297483e": 47, "36009581e": 47, "15632652e": 47, "07006729e": 47, "61709962e": 47, "99740394e": 47, "13377026e": 47, "88094057e": 47, "36124884e": 47, "09671824e": 47, "24045368e": 47, "197": [47, 48, 56], "plot_stochast": [47, 48], "891": 48, "auto_examples_oth": 48, "aureli": 49, "boisbunon": [49, 91], "pip": [49, 68, 92, 93], "conda": [49, 92], "forg": [49, 92], "alwai": [49, 68, 73, 92, 93], "document": [49, 69, 91, 92, 93], "pythonot": [49, 70, 91, 93], "github": [49, 68, 70, 86, 89, 91, 92, 93], "io": [49, 91, 93], "Or": 49, "inlin": 49, "caf\u00e9": 49, "croissant": 49, "manhattan": 49, "quick": [49, 91, 93], "googl": 49, "extract": [49, 70], "fiction": 49, "product": [49, 70, 84, 89, 92], "sale": 49, "bakery_po": 49, "bakery_prod": 49, "describ": [49, 68, 71, 79], "sold": 49, "cafe_po": 49, "cafe_prod": 49, "fun": 49, "imap": 49, "shop": 49, "npz": 49, "cafe": 49, "89": [49, 56, 73, 93], "73": [49, 56], "88": [49, 56, 93], "91": [49, 56, 93], "441": [49, 71, 80, 91], "next": [49, 79, 80, 84, 92, 93], "ec": 49, "thing": 49, "fontweight": 49, "bold": 49, "va": 49, "coolwarm": 49, "cbar": 49, "use_gridspec": 49, "cell": 49, "awai": 49, "thu": [49, 89], "costli": 49, "while": [49, 80, 92, 93], "time_emd": 49, "section": [49, 92, 93], "good": [49, 67, 68, 92], "plane": 49, "easili": [49, 92], "interpret": 49, "10838179": 49, "pseudo": 49, "oslash": 49, "wise": [49, 70, 92], "divis": 49, "altern": [49, 68, 73, 92], "Be": 49, "care": 49, "pre": [49, 71, 92], "nit": 49, "ot_sink_algo": 49, "atleast_2d": 49, "equival": [49, 50, 73, 77, 82], "diag": [49, 70, 71, 92], "2g": 49, "0008": 49, "notic": 49, "deliv": 49, "fraction": 49, "sens": [49, 71, 80, 91, 92], "reg_paramet": 49, "logspac": [49, 55, 58, 59, 64], "w_sinkhorn_reg": 49, "time_sinkhorn_reg": 49, "max_ot": 49, "few": [49, 93], "seri": 49, "someth": [49, 68], "although": 49, "972222222222223": 49, "impact": [49, 92], "higher": [49, 79, 86], "much": [49, 68, 71], "littl": [49, 80], "quickli": [49, 68], "666": [49, 57], "plot_intro_ot": [49, 57], "0x7ff754b96920": 50, "861463e": 50, "860154e": 50, "144529e": 50, "130143e": 50, "178815e": 50, "426078e": 50, "661047e": 50, "233110e": 50, "338932e": 50, "776627e": 50, "293340e": 50, "235791e": 50, "637176e": 50, "740051e": 50, "529356e": 50, "450071e": 50, "193632e": 50, "449812e": 50, "294505e": 50, "857493e": 50, "822723e": 50, "791": [50, 57], "plot_ot_1d": [50, 57], "constrain": [51, 86, 91, 92, 93], "togeth": 51, "0x7ff75483d8d0": 51, "gsm": 51, "smooth_ot_du": [51, 92], "max_nz": [51, 86, 89], "entri": [51, 70], "permit": 51, "gsc": 51, "sparsity_constrain": [51, 86], "251": [51, 57], "plot_ot_1d_smooth": [51, 57], "empirical_sinkhorn": [52, 92], "plot_ot_2d_sampl": [52, 57], "stole": 53, "idea": [53, 80, 92, 93], "pdf": [53, 55, 68, 92], "1706": 53, "07650": 53, "strictli": [53, 80, 92], "m1": 53, "mp": 53, "l1": [53, 72], "gp": 53, "xtot": 53, "422": [53, 57, 93], "plot_ot_l1_vs_l2": [53, 57], "lst_m": 54, "d_emd": 54, "d_emd2": 54, "d_tv": 54, "0x7ff74e6007c0": 54, "d_sinkhorn": 54, "d_sinkhorn2": 54, "678": [54, 57], "plot_compute_emd": [54, 57], "special": [55, 70], "pdf_von_mis": 55, "endpoint": 55, "mu1": 55, "kappa1": 55, "mu_target": 55, "pdf1": 55, "pdf_t": 55, "mu2": 55, "kappa2": 55, "vonmis": 55, "0x7ff74d14e980": 55, "period": 55, "attain": [55, 82], "antipod": 55, "contrari": 55, "n_try": 55, "deal": [55, 82], "put": 55, "xts2": 55, "l_w2_circl": 55, "l_w2": 55, "w2_circl": 55, "m_w2_circl": 55, "std_w2_circl": 55, "m_w2": 55, "std_w2": 55, "fill_between": [55, 58, 59], "vline": 55, "ymin": 55, "ymax": 55, "728": 55, "tc": 55, "mask_end": 55, "ctp": 55, "ctm": 55, "dcptm": 55, "dcmtp": 55, "invalid": [55, 62], "vm": 55, "611": [55, 57], "plot_compute_wasserstein_circl": [55, 57], "df": [56, 81, 92], "gl2": 56, "frob": 56, "760578e": 56, "669467e": 56, "457501e": 56, "111116e": 56, "665639e": 56, "298130e": 56, "827855e": 56, "664378e": 56, "572776e": 56, "260396e": 56, "664077e": 56, "811855e": 56, "015066e": 56, "663912e": 56, "936787e": 56, "653393e": 56, "663852e": 56, "555826e": 56, "916369e": 56, "663814e": 56, "305693e": 56, "836245e": 56, "663785e": 56, "760450e": 56, "929009e": 56, "663767e": 56, "078011e": 56, "793559e": 56, "663751e": 56, "525192e": 56, "584755e": 56, "663737e": 56, "396466e": 56, "396951e": 56, "663727e": 56, "086938e": 56, "012700e": 56, "663720e": 56, "042609e": 56, "725769e": 56, "663713e": 56, "160914e": 56, "922568e": 56, "663707e": 56, "823502e": 56, "361187e": 56, "663702e": 56, "022440e": 56, "028438e": 56, "663697e": 56, "181249e": 56, "292634e": 56, "663692e": 56, "698532e": 56, "489527e": 56, "663687e": 56, "258253e": 56, "420712e": 56, "663682e": 56, "741118e": 56, "560349e": 56, "663678e": 56, "624135e": 56, "365715e": 56, "663673e": 56, "645179e": 56, "400714e": 56, "663670e": 56, "957237e": 56, "256196e": 56, "663666e": 56, "261541e": 56, "762450e": 56, "663663e": 56, "851305e": 56, "079948e": 56, "663660e": 56, "942296e": 56, "231320e": 56, "663657e": 56, "092896e": 56, "481860e": 56, "663653e": 56, "924361e": 56, "201470e": 56, "663651e": 56, "625455e": 56, "704189e": 56, "663648e": 56, "641123e": 56, "730250e": 56, "663645e": 56, "566666e": 56, "606377e": 56, "663643e": 56, "338514e": 56, "226810e": 56, "663641e": 56, "222711e": 56, "034152e": 56, "663639e": 56, "221805e": 56, "032642e": 56, "663637e": 56, "440781e": 56, "396935e": 56, "663634e": 56, "520091e": 56, "528875e": 56, "663632e": 56, "288193e": 56, "143080e": 56, "663630e": 56, "123055e": 56, "868347e": 56, "663628e": 56, "024487e": 56, "704365e": 56, "663627e": 56, "079606e": 56, "796061e": 56, "663625e": 56, "172093e": 56, "949922e": 56, "663623e": 56, "047880e": 56, "743277e": 56, "663621e": 56, "010577e": 56, "681217e": 56, "663619e": 56, "064438e": 56, "770820e": 56, "663618e": 56, "882375e": 56, "644049e": 56, "663616e": 56, "532647e": 56, "419505e": 56, "663615e": 56, "930189e": 56, "652001e": 56, "663613e": 56, "728955e": 56, "452161e": 56, "663612e": 56, "524214e": 56, "584459e": 56, "663610e": 56, "088418e": 56, "511958e": 56, "663609e": 56, "639430e": 56, "270902e": 56, "663608e": 56, "662611e": 56, "108397e": 56, "663607e": 56, "133700e": 56, "186767e": 56, "663605e": 56, "648141e": 56, "272349e": 56, "55": [56, 93], "663604e": 56, "557516e": 56, "090911e": 56, "56": [56, 93], "663603e": 56, "304213e": 56, "215131e": 56, "663602e": 56, "353809e": 56, "057021e": 56, "58": [56, 93], "663601e": 56, "968279e": 56, "325603e": 56, "59": [56, 92, 93], "663600e": 56, "367159e": 56, "059240e": 56, "663599e": 56, "610790e": 56, "334102e": 56, "61": 56, "663598e": 56, "787466e": 56, "628015e": 56, "62": [56, 93], "663596e": 56, "937777e": 56, "154166e": 56, "63": 56, "599432e": 56, "315190e": 56, "64": [56, 93], "663595e": 56, "813048e": 56, "670555e": 56, "65": [56, 63], "663594e": 56, "724600e": 56, "523409e": 56, "66": [56, 63, 71, 91, 92, 93], "663593e": 56, "081892e": 56, "011779e": 56, "67": [56, 93], "663592e": 56, "948732e": 56, "896260e": 56, "68": 56, "663591e": 56, "941833e": 56, "221188e": 56, "69": [56, 82], "663590e": 56, "213739e": 56, "673523e": 56, "663589e": 56, "127355e": 56, "529811e": 56, "71": 56, "663588e": 56, "349251e": 56, "235363e": 56, "72": [56, 93], "007084e": 56, "329722e": 56, "663587e": 56, "880265e": 56, "118744e": 56, "74": 56, "663586e": 56, "931950e": 56, "204723e": 56, "663585e": 56, "981309e": 56, "286832e": 56, "76": [56, 93], "663584e": 56, "952959e": 56, "576082e": 56, "77": 56, "544857e": 56, "560750e": 56, "78": [56, 91], "663583e": 56, "237579e": 56, "049564e": 56, "79": [56, 93], "663582e": 56, "382386e": 56, "290460e": 56, "646051e": 56, "065503e": 56, "663581e": 56, "197994e": 56, "983702e": 56, "663580e": 56, "072764e": 56, "775370e": 56, "83": 56, "994645e": 56, "645410e": 56, "84": [56, 93], "663579e": 56, "842721e": 56, "056248e": 56, "663578e": 56, "276486e": 56, "450691e": 56, "86": [56, 93], "737346e": 56, "217366e": 56, "87": [56, 82, 93], "663577e": 56, "282043e": 56, "123508e": 56, "663576e": 56, "020937e": 56, "689135e": 56, "431951e": 56, "709310e": 56, "663575e": 56, "052335e": 56, "077789e": 56, "500538e": 56, "823407e": 56, "663574e": 56, "063176e": 56, "095821e": 56, "663573e": 56, "576367e": 56, "949549e": 56, "94": 56, "224681e": 56, "364492e": 56, "663572e": 56, "673221e": 56, "110670e": 56, "96": 56, "635561e": 56, "048017e": 56, "97": 56, "663571e": 56, "527236e": 56, "867807e": 56, "98": [56, 82], "788548e": 56, "638946e": 56, "663570e": 56, "727141e": 56, "536791e": 56, "127278e": 56, "202445e": 56, "101": 56, "663569e": 56, "637504e": 56, "387670e": 56, "102": 56, "922750e": 56, "862195e": 56, "663568e": 56, "076454e": 56, "117891e": 56, "104": 56, "911509e": 56, "843492e": 56, "105": 56, "663567e": 56, "403398e": 56, "998215e": 56, "106": [56, 93], "439790e": 56, "058755e": 56, "107": [56, 93], "634542e": 56, "382735e": 56, "663566e": 56, "452203e": 56, "079401e": 56, "109": 56, "852991e": 56, "746137e": 56, "663565e": 56, "165490e": 56, "602434e": 56, "111": 56, "450250e": 56, "076149e": 56, "112": 56, "663564e": 56, "685294e": 56, "467159e": 56, "113": [56, 93], "821800e": 56, "694245e": 56, "114": [56, 93], "237390e": 56, "722040e": 56, "115": 56, "663563e": 56, "992842e": 56, "315219e": 56, "116": [56, 93], "166739e": 56, "604506e": 56, "117": 56, "086064e": 56, "470297e": 56, "118": [56, 93], "663562e": 56, "435945e": 56, "052346e": 56, "292497e": 56, "813711e": 56, "663561e": 56, "366209e": 56, "936334e": 56, "138746e": 56, "557935e": 56, "009637e": 56, "343153e": 56, "123": [56, 62], "663560e": 56, "386258e": 56, "969683e": 56, "124": [56, 93], "927442e": 56, "206415e": 56, "081681e": 56, "463000e": 56, "126": [56, 93], "663559e": 56, "759123e": 56, "926406e": 56, "127": [56, 93], "890771e": 56, "145409e": 56, "128": [56, 73], "971315e": 56, "279398e": 56, "129": 56, "663558e": 56, "101983e": 56, "496771e": 56, "035645e": 56, "386414e": 56, "984492e": 56, "301317e": 56, "663557e": 56, "849064e": 56, "076024e": 56, "795703e": 56, "987255e": 56, "134": [56, 93], "624087e": 56, "701762e": 56, "135": 56, "689557e": 56, "810673e": 56, "663556e": 56, "644308e": 56, "735399e": 56, "137": [56, 93], "618007e": 56, "691644e": 56, "138": [56, 63, 93], "483013e": 56, "467075e": 56, "139": [56, 93], "663555e": 56, "708771e": 56, "842636e": 56, "013847e": 56, "350146e": 56, "141": [56, 93], "721217e": 56, "863339e": 56, "142": [56, 93], "663554e": 56, "027911e": 56, "373540e": 56, "143": [56, 93], "935449e": 56, "677151e": 56, "790030e": 56, "145": [56, 62, 93], "351982e": 56, "249094e": 56, "146": [56, 93], "663553e": 56, "423360e": 56, "367836e": 56, "147": 56, "541112e": 56, "563722e": 56, "148": [56, 93], "491601e": 56, "481358e": 56, "149": 56, "466407e": 56, "439446e": 56, "663552e": 56, "801524e": 56, "996929e": 56, "151": 56, "714107e": 56, "851507e": 56, "152": 56, "491257e": 56, "480784e": 56, "153": 56, "513799e": 56, "518282e": 56, "154": 56, "663551e": 56, "354539e": 56, "253345e": 56, "155": [56, 93], "233818e": 56, "052519e": 56, "156": [56, 93], "576219e": 56, "622121e": 56, "157": [56, 93], "452791e": 56, "416792e": 56, "663550e": 56, "262867e": 56, "100843e": 56, "316379e": 56, "189863e": 56, "295447e": 56, "155041e": 56, "161": 56, "283286e": 56, "134810e": 56, "162": 56, "569222e": 56, "610479e": 56, "163": 56, "663549e": 56, "172942e": 56, "951247e": 56, "164": 56, "399809e": 56, "328651e": 56, "229432e": 56, "045221e": 56, "166": 56, "326191e": 56, "206184e": 56, "167": 56, "663548e": 56, "209694e": 56, "012384e": 56, "168": 56, "372136e": 56, "282614e": 56, "169": [56, 93], "338395e": 56, "226484e": 56, "416497e": 56, "356410e": 56, "171": 56, "298576e": 56, "160242e": 56, "172": [56, 93], "663547e": 56, "190590e": 56, "980603e": 56, "167083e": 56, "941497e": 56, "174": [56, 93], "069425e": 56, "779038e": 56, "217780e": 56, "025834e": 56, "176": [56, 93], "140754e": 56, "897697e": 56, "177": 56, "663546e": 56, "160707e": 56, "930890e": 56, "178": [56, 93], "101798e": 56, "832892e": 56, "179": 56, "114904e": 56, "854694e": 56, "064022e": 56, "770049e": 56, "258231e": 56, "540149e": 56, "213120e": 56, "018080e": 56, "183": 56, "663545e": 56, "164296e": 56, "936859e": 56, "184": [56, 93], "188762e": 56, "977559e": 56, "185": 56, "394153e": 56, "562760e": 56, "186": 56, "028656e": 56, "711216e": 56, "115348e": 56, "855431e": 56, "188": 56, "663544e": 56, "768310e": 56, "625002e": 56, "189": [56, 93], "021806e": 56, "699820e": 56, "086303e": 56, "807113e": 56, "191": [56, 93], "879008e": 56, "643416e": 56, "050210e": 56, "747071e": 56, "193": 56, "002463e": 56, "667641e": 56, "194": 56, "663543e": 56, "062747e": 56, "767925e": 56, "348538e": 56, "555170e": 56, "196": 56, "992512e": 56, "329589e": 56, "558020e": 56, "590018e": 56, "198": [56, 93], "993772e": 56, "662507e": 56, "588499e": 56, "428734e": 56, "737134e": 56, "453459e": 56, "692289e": 56, "617643e": 56, "614437e": 56, "464513e": 56, "612639e": 56, "102965e": 56, "003963e": 56, "611291e": 56, "371098e": 56, "348827e": 56, "610468e": 56, "110558e": 56, "230389e": 56, "610198e": 56, "672927e": 56, "693743e": 56, "610130e": 56, "232417e": 56, "814742e": 56, "610090e": 56, "513455e": 56, "046887e": 56, "610002e": 56, "443507e": 56, "764057e": 56, "609996e": 56, "657071e": 56, "887869e": 56, "609948e": 56, "998735e": 56, "827807e": 56, "609695e": 56, "569217e": 56, "525962e": 56, "609533e": 56, "010779e": 56, "626881e": 56, "609520e": 56, "043897e": 56, "294681e": 56, "609465e": 56, "415246e": 56, "496718e": 56, "609386e": 56, "898605e": 56, "883745e": 56, "609324e": 56, "837052e": 56, "175060e": 56, "609298e": 56, "617826e": 56, "603564e": 56, "609184e": 56, "080015e": 56, "139305e": 56, "609083e": 56, "273206e": 56, "009411e": 56, "608988e": 56, "940805e": 56, "558681e": 56, "608853e": 56, "380030e": 56, "348223e": 56, "608844e": 56, "185045e": 56, "341930e": 56, "608824e": 56, "279113e": 56, "057868e": 56, "608819e": 56, "156821e": 56, "078753e": 56, "608783e": 56, "205746e": 56, "548567e": 56, "608764e": 56, "189894e": 56, "914259e": 56, "608755e": 56, "474607e": 56, "807303e": 56, "608737e": 56, "144227e": 56, "840760e": 56, "608676e": 56, "775335e": 56, "073291e": 56, "608638e": 56, "348020e": 56, "777116e": 56, "608627e": 56, "863136e": 56, "104023e": 56, "608529e": 56, "110230e": 56, "828482e": 56, "608487e": 56, "641106e": 56, "248184e": 56, "608409e": 56, "823638e": 56, "758383e": 56, "608373e": 56, "256641e": 56, "629519e": 56, "608338e": 56, "132444e": 56, "429691e": 56, "608310e": 56, "786649e": 56, "873484e": 56, "608260e": 56, "103848e": 56, "991794e": 56, "608206e": 56, "321265e": 56, "341279e": 56, "608201e": 56, "054747e": 56, "912648e": 56, "608195e": 56, "198335e": 56, "751739e": 56, "608193e": 56, "458736e": 56, "360328e": 56, "608159e": 56, "153759e": 56, "463587e": 56, "608115e": 56, "738314e": 56, "403523e": 56, "608108e": 56, "960032e": 56, "368161e": 56, "608081e": 56, "675447e": 56, "694254e": 56, "608072e": 56, "976340e": 56, "610383e": 56, "608046e": 56, "604130e": 56, "579515e": 56, "608020e": 56, "617036e": 56, "600226e": 56, "608014e": 56, "957795e": 56, "364188e": 56, "608011e": 56, "292411e": 56, "078211e": 56, "607998e": 56, "431795e": 56, "355831e": 56, "607964e": 56, "127054e": 56, "420225e": 56, "607947e": 56, "021878e": 56, "643126e": 56, "560621e": 56, "725288e": 56, "607900e": 56, "929781e": 56, "710793e": 56, "607890e": 56, "740229e": 56, "229659e": 56, "607858e": 56, "039550e": 56, "279306e": 56, "607836e": 56, "319545e": 56, "121612e": 56, "607826e": 56, "378947e": 56, "025624e": 56, "607808e": 56, "145102e": 56, "841105e": 56, "607776e": 56, "941743e": 56, "121889e": 56, "607743e": 56, "087422e": 56, "356037e": 56, "607741e": 56, "310249e": 56, "106541e": 56, "607738e": 56, "682752e": 56, "705425e": 56, "607691e": 56, "913936e": 56, "684709e": 56, "607671e": 56, "288855e": 56, "072055e": 56, "607654e": 56, "002448e": 56, "611590e": 56, "607641e": 56, "209492e": 56, "319792e": 56, "607632e": 56, "588467e": 56, "984199e": 56, "607619e": 56, "050388e": 56, "294196e": 56, "607618e": 56, "417493e": 56, "513973e": 56, "607598e": 56, "210509e": 56, "946012e": 56, "607591e": 56, "392914e": 56, "062009e": 56, "607579e": 56, "759587e": 56, "247415e": 56, "607574e": 56, "760280e": 56, "437356e": 56, "607556e": 56, "146469e": 56, "843012e": 56, "607550e": 56, "689456e": 56, "930984e": 56, "065631e": 56, "535705e": 56, "607539e": 56, "555681e": 56, "053852e": 56, "607528e": 56, "177470e": 56, "153798e": 56, "607527e": 56, "306068e": 56, "529648e": 56, "607514e": 56, "816045e": 56, "256440e": 56, "607511e": 56, "301970e": 56, "700442e": 56, "607504e": 56, "281072e": 56, "881840e": 56, "607503e": 56, "821886e": 56, "257370e": 56, "607480e": 56, "403013e": 56, "255315e": 56, "169298e": 56, "879624e": 56, "607473e": 56, "235982e": 56, "809227e": 56, "607470e": 56, "717105e": 56, "760195e": 56, "148402e": 56, "883374e": 56, "reg1": [56, 81], "reg2": [56, 81], "gel2": 56, "gcg": [56, 73, 92], "693084e": 56, "610202e": 56, "147342e": 56, "288260e": 56, "610179e": 56, "406304e": 56, "264402e": 56, "610174e": 56, "352083e": 56, "397436e": 56, "715023e": 56, "371659e": 56, "154387e": 56, "474015e": 56, "631": [56, 57], "plot_optim_otreg": [56, 57], "auto_exampl": [57, 91], "adrien": [58, 69, 91], "corenflo": [58, 69, 91], "aalto": 58, "fi": [58, 62], "n_seed": [58, 59], "n_projections_arr": [58, 59], "res_mean": [58, 59], "res_std": [58, 59], "xscale": [58, 59], "confid": [58, 59], "plot_vari": [58, 60], "mgrid": 59, "30j": 59, "plot_surfac": 59, "set_zlim": 59, "tick": 59, "ssw_1": 59, "061": [59, 60], "plot_variance_ssw": [59, 60], "066": 60, "auto_examples_sl": 60, "uot": [61, 84, 91, 92], "565": [61, 66], "plot_uot_1d": [61, 66], "n_weight": 62, "weight_list": 62, "overflow": [62, 93], "kv": 62, "915": 62, "ktu": 62, "922": 62, "595": 62, "974": 62, "615": 62, "455": [62, 93], "361": [62, 93], "plot_uot_barycenter_1d": [62, 66], "n_nois": [63, 65], "cov": 63, "w0": 63, "partial_wasserstein": [63, 65, 92], "entropic_partial_wasserstein": [63, 92], "partial_w_dist": 63, "jet": [63, 65], "47910182636916243": 63, "5034205945081646": 63, "res0": 63, "partial_gromov_wasserstein": [63, 92], "entropic_partial_gromov_wasserstein": [63, 92], "partial_gw_dist": [63, 82], "611280e": 63, "345385e": 63, "584346e": 63, "659015e": 63, "38071035222889": 63, "59015303098326": 63, "plot_partial_wass_and_gromov": [63, 66], "overlap": [63, 92], "sinc": [63, 80, 92, 93], "explicitli": [63, 75, 78, 83, 93], "478237e": 63, "894947e": 63, "251769e": 63, "596705e": 63, "808371e": 63, "136110e": 63, "859072e": 63, "136043e": 63, "11743971783944865": 63, "9136043100219415": 63, "216": [63, 66], "wu": [64, 84, 88, 91], "f\u00e9vott": [64, 84, 88, 91], "through": [64, 84, 88, 91, 92], "regress": [64, 68, 84, 88, 91], "haoran": 64, "final_gamma": 64, "t_list": [64, 84], "g_list": [64, 84], "regularization_path": 64, "semi_relax": [64, 84], "t_list2": 64, "g_list2": 64, "selected_gamma": 64, "compute_transport_plan": 64, "ell_2": [64, 65, 88], "g_list_v": 64, "l_2": 64, "501": [64, 66], "plot_regpath": [64, 66], "_f": [65, 92], "div": [65, 88], "ell_1": 65, "reg_m_kl": 65, "reg_m_l2": 65, "entropic_kl_uot": 65, "kl_uot": 65, "mm_unbalanc": 65, "l2_uot": 65, "partial_ot": 65, "925": [65, 66], "plot_unbalanced_ot": [65, 66], "827": 66, "auto_examples_unbalanc": 66, "interest": [67, 92], "foster": [67, 92], "open": [67, 68, 69, 91, 92, 93], "welcom": [67, 91], "environ": 67, "contributor": [67, 91, 93], "maintain": [67, 70, 91, 93], "particip": 67, "harass": 67, "experi": 67, "everyon": 67, "regardless": [67, 93], "ag": 67, "bodi": 67, "disabl": 67, "ethnic": 67, "gender": 67, "ident": [67, 70, 73], "nation": 67, "person": [67, 69], "appear": [67, 71], "race": 67, "religion": 67, "sexual": 67, "behavior": [67, 68, 93], "includ": [67, 68, 72, 75, 89, 92, 93], "inclus": [67, 68], "languag": [67, 69, 92], "Being": 67, "viewpoint": 67, "gracefulli": 67, "critic": 67, "focus": 67, "best": [67, 68, 79, 92, 93], "empathi": 67, "toward": [67, 93], "member": [67, 91], "unaccept": 67, "imageri": 67, "unwelcom": 67, "attent": 67, "troll": 67, "insult": 67, "derogatori": 67, "comment": 67, "polit": 67, "attack": 67, "public": [67, 68, 93], "privat": 67, "publish": 67, "physic": 67, "electron": 67, "address": [67, 68, 92], "permiss": 67, "could": [67, 93], "inappropri": 67, "profession": 67, "clarifi": 67, "appropri": [67, 68, 89], "fair": [67, 80], "correct": [67, 68, 80, 91, 93], "action": [67, 93], "edit": [67, 68], "reject": 67, "commit": [67, 68, 70, 93], "wiki": 67, "ban": 67, "temporarili": 67, "perman": 67, "deem": 67, "threaten": 67, "offens": 67, "harm": 67, "offici": [67, 93], "mail": [67, 68, 91], "post": 67, "social": 67, "media": 67, "act": 67, "appoint": 67, "offlin": 67, "event": 67, "abus": 67, "report": [67, 68, 91, 93], "contact": 67, "team": [67, 68, 93], "complaint": 67, "review": [67, 68], "investig": [67, 92], "circumst": 67, "oblig": 67, "confidenti": 67, "regard": 67, "incid": 67, "polici": 67, "separ": [67, 92, 93], "who": [67, 93], "faith": 67, "face": [67, 82], "temporari": 67, "repercuss": 67, "determin": [67, 71], "leadership": 67, "coven": 67, "thank": [68, 69, 84, 93], "workflow": 68, "fork": 68, "repositori": [68, 93], "develop": [68, 91, 92, 93], "branch": [68, 93], "click": 68, "button": 68, "page": [68, 91, 93], "under": [68, 71, 72, 73, 91], "your": [68, 91, 92], "guid": [68, 91, 93], "repo": [68, 93], "disk": 68, "git": 68, "yourlogin": 68, "cd": 68, "hold": 68, "checkout": 68, "my": 68, "never": [68, 93], "master": [68, 89, 91, 93], "modified_fil": 68, "push": [68, 92, 93], "instruct": 68, "email": 68, "committ": 68, "abov": [68, 79, 83, 84, 92, 93], "seem": 68, "magic": 68, "look": [68, 84], "web": 68, "ask": [68, 91, 93], "friend": 68, "anoth": [68, 73, 80, 92, 93], "compli": 68, "rule": [68, 81], "submit": 68, "pep8": [68, 93], "guidelin": [68, 91], "mention": 68, "descript": 68, "docstr": [68, 89, 93], "usag": 68, "doctest": [68, 93], "prefix": 68, "mrg": 68, "readi": 68, "merg": [68, 93], "core": [68, 93], "approv": [68, 93], "elig": 68, "incomplet": [68, 93], "wip": 68, "progress": 68, "matur": 68, "duplic": 68, "broad": 68, "api": [68, 70, 78, 91, 93], "seek": [68, 92], "collabor": 68, "often": [68, 92], "benefit": [68, 69, 91], "task": 68, "pr": [68, 70, 93], "folder": [68, 91, 93], "coverag": [68, 93], "enhanc": 68, "verifi": 68, "manner": 68, "modif": 68, "grant": 68, "desir": [68, 71, 79, 80, 89], "fail": [68, 80, 92, 93], "At": [68, 92], "paragraph": 68, "narr": 68, "literatur": [68, 71, 92], "common": [68, 92], "program": [68, 71, 80, 81, 91, 92, 93], "tool": [68, 92], "pyflak": 68, "autopep8": 68, "easi": [68, 91, 92], "redund": [68, 93], "bonu": 68, "benchmark": [68, 70, 93], "profil": 68, "track": [68, 79, 93], "feel": 68, "wish": 68, "snippet": 68, "highlight": [68, 93], "well": [68, 70, 80, 89, 92], "platform": [68, 93], "__version__": 68, "about": [68, 71, 92, 93], "gist": 68, "except": 68, "traceback": 68, "great": 68, "pick": [68, 87], "tracker": 68, "resolv": 68, "knowledg": [68, 92], "assist": 68, "area": [68, 92], "greatli": [68, 92, 93], "appreci": 68, "experienc": 68, "concentr": 68, "glad": 68, "restructuredtext": 68, "etc": [68, 72], "directori": 68, "editor": 68, "noplot": 68, "place": [68, 93], "viewabl": 68, "browser": 68, "pillow": 68, "write": [68, 70], "keep": [68, 92, 93], "compromis": 68, "reader": [68, 92], "hand": 68, "wave": 68, "explan": 68, "inspir": 68, "scikit": [68, 89, 92, 93], "wrapper": [69, 92], "alexandr": [69, 91], "ci": [69, 93], "michael": 69, "l\u00e9o": [69, 91], "gautheron": [69, 91], "nathali": [69, 91], "gayraud": [69, 91], "debug": [69, 93], "alain": [69, 91], "jcpot": [69, 91, 93], "minhui": 69, "huang": [69, 75, 91, 92], "robust": [69, 75, 91, 92, 93], "nathan": [69, 93], "cassereau": [69, 93], "camil": 69, "le": [69, 89], "coz": 69, "theo": 69, "gnassoun": 69, "wassertstein": 69, "layer": [69, 78, 91, 93], "lot": [69, 93], "would": [69, 70, 93], "variou": [69, 89, 93], "mathieu": [69, 86, 93], "financ": [69, 91], "manpow": [69, 91], "partner": [69, 91], "goal": [70, 87], "agnost": 70, "whether": [70, 79, 80, 89], "cupi": [70, 91, 92, 93], "nonetheless": 70, "achiev": 70, "imit": 70, "As": [70, 80, 92, 93], "convent": [70, 73], "list_to_arrai": [70, 89], "get_backend": 70, "know": 70, "argument": [70, 73, 81, 89, 93], "op": 70, "numpy_op": 70, "np_config": 70, "enable_numpy_behavior": 70, "intel": 70, "xeon": 70, "6248": 70, "50ghz": 70, "tesla": 70, "v100": 70, "sxm2": 70, "32gb": 70, "date": [70, 93], "8th": 70, "316": [70, 93], "pull": [70, 93], "bitsize32": 70, "bit": 70, "devicecpugpu": 70, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 70, "00080": 70, "00220": 70, "01510": 70, "00950": 70, "01930": 70, "00510": 70, "0293": 70, "00050": 70, "00130": 70, "00970": 70, "00570": 70, "01150": 70, "00290": 70, "0173": 70, "5000": 70, "00090": 70, "00160": 70, "01100": 70, "00580": 70, "0166": 70, "00210": 70, "01450": 70, "00560": 70, "01180": 70, "0168": 70, "20000": 70, "00690": 70, "00430": 70, "02780": 70, "00590": 70, "00300": 70, "0165": 70, "50000": [70, 84], "07070": 70, "03140": 70, "13950": 70, "00740": 70, "01250": 70, "00350": 70, "0198": 70, "nbsp": 70, "bitsize64": 70, "00200": 70, "01540": 70, "00930": 70, "01910": 70, "0328": 70, "00940": 70, "01140": 70, "0169": 70, "00170": 70, "01200": 70, "01160": 70, "00340": 70, "00270": 70, "01770": 70, "0167": 70, "01460": 70, "00750": 70, "04360": 70, "14670": 70, "05680": 70, "24680": 70, "00770": 70, "00450": 70, "0204": 70, "proper": [70, 93], "typeerror": 70, "get_backend_list": 70, "to_numpi": 70, "abstract": 70, "jaxbackend": 70, "numpybackend": 70, "torchbackend": [70, 93], "cupybackend": 70, "tensorflowbackend": 70, "__name__": 70, "__type__": 70, "rtol": 70, "equal_nan": 70, "evalu": [70, 71, 72], "evenli": 70, "argsort": 70, "array_equ": 70, "assert_same_dtype_devic": 70, "arctang": 70, "arctan2": 70, "bitsiz": 70, "a_min": 70, "a_max": 70, "sequenc": 70, "exist": [70, 71, 92, 93], "col": 70, "cumsum": 70, "device_typ": 70, "dtype_devic": 70, "einsum": 70, "subscript": 70, "operand": 70, "einstein": 70, "summat": 70, "eliminate_zero": 70, "smaller": [70, 93], "csr_matrix": 70, "exponenti": [70, 71], "flip": 70, "from_numpi": 70, "fill_valu": 70, "inv": 70, "is_floating_point": 70, "isfinit": 70, "infin": 70, "Not": 70, "isinf": 70, "isnan": 70, "nan": 70, "isspars": 70, "kl_div": 70, "stat": 70, "specifi": [70, 73, 86, 89, 93], "logsumexp": [70, 75, 92], "matmul": 70, "amax": 70, "arithmet": 70, "median": [70, 89, 93], "amin": 70, "frobeniu": 70, "outer": 70, "expon": 70, "prod": 70, "qr": 70, "repeat": 70, "searchsort": 70, "side": [70, 84], "insert": 70, "set_gradi": [70, 93], "val": 70, "equat": [70, 71, 79, 87, 92], "scalar": [70, 71, 72], "sort2": 70, "ngeativ": 70, "root": [70, 91, 92], "definit": [70, 92], "squeez": 70, "deviat": [70, 74, 78, 79], "take_along_axi": 70, "arr": 70, "gather": 70, "tile": 70, "rep": 70, "tocsr": 70, "compress": 70, "todens": 70, "trace": 70, "dim0": 70, "dim1": 70, "swap": 70, "chosen": [70, 89, 92], "zero_pad": 70, "pad_width": 70, "pad": 70, "cp": 70, "s_": 71, "empirical_sinkhorn_diverg": [71, 92, 93], "barycenter_sinkhorn": 71, "barycenter_stabil": [71, 93], "tau": [71, 75, 88], "10000000000": 71, "mast": 71, "strength": 71, "height": 71, "stabthr": 71, "goe": [71, 91, 92], "butscher": [71, 91, 92], "nguyen": [71, 91, 92], "guiba": [71, 91, 92], "effici": [71, 80, 91, 92, 93], "geometr": [71, 78, 91, 92], "islazi": 71, "batchsiz": 71, "99977301e": 71, "26989344e": 71, "empirical_sinkhorn2": [71, 92], "53978687e": 71, "w_a": 71, "gamma_a": 71, "m_a": 71, "w_b": 71, "gamma_b": 71, "m_b": 71, "_a": [71, 84], "_b": 71, "499887176049052": 71, "frechet": [71, 80], "w_i": [71, 80], "measure_weight": [71, 80], "k_i": [71, 80], "There": [71, 80, 92], "arnaud": [71, 80], "doucet": [71, 80, 91, 92], "\u00e1lvarez": [71, 80, 91], "esteban": [71, 80, 91], "pedro": [71, 80, 91], "744": [71, 80, 91], "762": [71, 80, 91], "geometricbar": 71, "alldistribt": 71, "geometricmean": 71, "jcpot_barycent": 71, "lambda_k": 71, "gamma_k": 71, "th": [71, 72, 84, 86], "relat": [71, 79, 91, 92, 93], "n_k": 71, "unknown": 71, "nsk": 71, "control": [71, 73, 79], "devi": [71, 73], "projc": 71, "constrint": 71, "projr": 71, "maxfun": 71, "pgtol": 71, "written": [71, 80], "u_i": 71, "ldot": 71, "v_j": 71, "regularis": 71, "bfg": [71, 86, 88, 92], "lbfg": 71, "final": [71, 80, 92, 93], "gain": [71, 93], "isn": 71, "epsilon0": 71, "print_period": 71, "decreas": [71, 73], "tabl": 71, "m0": 71, "h0": 71, "reg0": 71, "dh": 71, "m_0": 71, "_0": [71, 89], "n_atom": 71, "dim_prior": 71, "trust": [71, 75], "nakhostin": [71, 91], "corpetti": [71, 91], "planetari": [71, 91], "workshop": [71, 73, 91, 92], "hyperspectr": [71, 91], "signal": [71, 91, 92], "remot": [71, 91], "whisper": [71, 91], "wx_samp": 72, "wx_feat": 72, "wy_feat": 72, "m_samp": 72, "m_feat": 72, "nits_bcd": 72, "tol_bcd": 72, "eval_bcd": 72, "nits_ot": 72, "tol_sinkhorn": 72, "method_sinkhorn": 72, "early_stopping_tol": 72, "xf": 72, "yf": 72, "alpha_": 72, "alpha_f": 72, "varepsilon_": 72, "varepsilon_f": 72, "n_sample_x": 72, "n_feature_x": 72, "n_sample_i": 72, "n_feature_i": 72, "kei": [72, 79], "duals_sampl": 72, "duals_featur": 72, "whose": [72, 79, 80, 84], "bcd": [72, 73, 75, 79], "scheme": 72, "previou": [72, 84], "multipli": [72, 89], "earli": [72, 93], "pi_samp": 72, "pi_feat": 72, "pair": [72, 89], "ny_sampstem": 72, "alpha_1": 72, "alpha_2": 72, "varepsilon_1": 72, "varepsilon_2": 72, "distribution_estimation_uniform": 73, "emd_laplac": 73, "knn": 73, "sim_param": 73, "n_": 73, "s_i": 73, "s_j": 73, "n_t": 73, "t_i": 73, "t_j": 73, "neighbor": 73, "bandwidth": 73, "otml": [73, 91, 92], "joint_ot_mapping_kernel": [73, 92], "kerneltyp": 73, "verbose2": 73, "nonlinear": [73, 92], "2_f": 73, "2_": 73, "jointli": 73, "constant": [73, 79, 80], "supplementari": 73, "materi": 73, "joint_ot_mapping_linear": [73, 92], "neutral": 73, "sinkhorn_l1l2_gl": [73, 92], "keyword": [73, 89], "transform_label": 73, "inverse_transform_label": 73, "y_t": 73, "unlabel": [73, 82, 91, 92], "transp_x": 73, "transp_xt": 73, "propag": 73, "transp_i": 73, "soft": 73, "nb_class": 73, "similarity_param": 73, "max_inner_it": 73, "inner_tol": 73, "distribution_estim": 73, "out_of_sample_map": 73, "disp": 73, "occur": [73, 92], "kind": [73, 80, 92], "emploi": 73, "limit_max": 73, "10e": 73, "849": 73, "858": 73, "nk_source_sampl": 73, "sigma_": [73, 77], "sigma_t": [73, 77], "remark": [73, 77, 92], "daigon": 73, "covari": [73, 74, 77, 92], "knott": [73, 77, 91, 92], "smith": [73, 77, 91, 92], "theori": [73, 77, 91, 92], "1984": [73, 77, 91, 92], "mapping_": 73, "lpl1": 73, "infti": 73, "unbalancedsinkhorntransport": 73, "reduct": [75, 91, 93], "u0": 75, "sinkhorn_method": 75, "maxiter_sink": 75, "maxiter_mm": 75, "stiefel": [75, 92], "eather": 75, "mm": 75, "major": [75, 92, 93], "fisher": [75, 82, 92], "ridg": 75, "proj": [75, 85], "projection_robust_wasserstein": 75, "max_": [75, 84, 86, 87], "stepsiz": 75, "riemannian": [75, 91, 92], "ma": [75, 91, 92], "lai": [75, 91, 92], "split_class": 75, "limits_i": 75, "limits_": 75, "neq": [75, 92], "steepest": 75, "trustregion": 75, "region": 75, "wasserstaiun": 75, "1608": [75, 91, 92], "08063": [75, 91, 92], "bures_wasserstein_dist": 77, "ct": 77, "bure": [77, 93], "lvert": 77, "_t": 77, "rvert": 77, "tr": 77, "bures_wasserstein_map": [77, 92], "empirical_bures_wasserstein_dist": 77, "fgw_distance_to_templ": 78, "g_edg": 78, "tplt_adjac": 78, "g_featur": 78, "tplt_featur": 78, "tplt_weight": 78, "multi_alpha": 78, "n_edg": 78, "n_templates_nod": 78, "n_tplt": 78, "n_tplt_node": 78, "train_node_weight": 78, "tfgw": [78, 91], "pool": 78, "tfgw_": 78, "overlin": 78, "fgw_": [78, 79], "_k": 78, "character": 78, "law": 78, "twpool": 78, "kown": 78, "tw_": 78, "charactersis": 78, "b\u00e9cigneul": [78, 91], "ganea": [78, 91], "chen": [78, 91], "barzilai": [78, 91], "jaakkola": [78, 91], "wasserstein_distance_to_templ": 78, "gw_distance_estim": 79, "nb_samples_p": 79, "nb_samples_q": 79, "unbias": 79, "csr": 79, "replac": [79, 92, 93], "sebban": 79, "mlj": 79, "entropic_fused_gromov_barycent": 79, "init_i": 79, "y_1": 79, "y_2": 79, "necessarili": 79, "asymetr": 79, "recommand": 79, "correcli": 79, "Such": 79, "suggest": 79, "entropic_fused_gromov_wasserstein2": 79, "entropic_gromov_barycent": [79, 92], "entropic_gromov_wasserstein2": 79, "howev": [79, 92], "yet": [79, 92, 93], "entropic_semirelaxed_fused_gromov_wasserstein2": 79, "mirror": 79, "geometri": 79, "entropic_semirelaxed_gromov_wasserstein2": 79, "fixed_structur": 79, "fixed_featur": 79, "init_x": 79, "eq": [79, 86], "cdict_init": 79, "ydict_init": 79, "_d": 79, "distibut": 79, "cdict": 79, "ydict": 79, "randomli": 79, "nonneg": 79, "strategi": 79, "consecut": 79, "cdict_best_st": 79, "compos": 79, "ydict_best_st": 79, "w_d": 79, "emb": 79, "depict": 79, "span": [79, 80], "current_loss": 79, "gw_2": 79, "gwggrad": 79, "constc": 79, "hc1": 79, "hc2": 79, "proposit": [79, 86, 87], "h1": 79, "gwloss": 79, "init_matrix": 79, "otim": 79, "read": [79, 91], "f_1": 79, "h_1": 79, "2b": 79, "init_matrix_semirelax": 79, "anymor": 79, "fc2t": 79, "threshold_plan": 79, "frank": 79, "wolf": 79, "_iter": 79, "pn": 79, "delet": [79, 84], "violat": [79, 80, 92], "nb_samples_grad": 79, "semirelaxed_fused_gromov_wasserstein2": 79, "semirelaxed_gromov_wasserstein2": 79, "solve_gromov_linesearch": [79, 81], "deltag": 79, "cost_g": 79, "alpha_min": [79, 81], "alpha_max": [79, 81], "fw": 79, "fc": [79, 81], "useless": [79, 93], "solve_semirelaxed_gromov_linesearch": [79, 81], "ones_p": 79, "tensor_product": 79, "ten": 79, "update_feature_matrix": 79, "update_kl_loss": 79, "update_square_loss": 79, "alpha0": [80, 81], "beta0": 80, "below": [80, 91, 93], "basic": 80, "alpha_0": 80, "beta_0": 80, "check_number_thread": 80, "request": [80, 85, 91], "valid": 80, "estimate_dual_null_weight": 80, "rather": 80, "coars": 80, "emd_c": 80, "amount": [80, 82, 92, 93], "max_j": 80, "max_i": 80, "beta_j": [80, 86], "y_init": 80, "nu_i": 80, "b_l": 80, "y_l": 80, "a_": 80, "d_i": 80, "p_i": 80, "p_ix_": 80, "rightarrow": 80, "don": 80, "ill": 80, "anywai": 80, "cvxopt": [80, 92, 93], "glpk": 80, "mosek": 80, "agueh": [80, 91, 92], "904": [80, 91, 92], "924": [80, 91, 92], "line_search": 81, "line_search_armijo": [81, 93], "reg_1": 81, "reg_2": 81, "generic_conditional_gradi": 81, "lp_solver": 81, "lp_semi_relaxed_ot": 81, "gcg_linesearch": 81, "xk": 81, "pk": 81, "gfk": 81, "old_fval": 81, "x_k": 81, "p_k": 81, "fa": 81, "const": 81, "semirelaxed_cg": 81, "solve_1d_linesearch_quad": 81, "bx": 81, "entropic_partial_gromov_wasserstein2": 82, "gwgrad_parti": 82, "n_p": 82, "n_u": 82, "nb_dummi": 82, "gwloss_parti": 82, "thre": 82, "costfr": 82, "dummi": [82, 93], "instabl": 82, "popul": 82, "partial_gromov_wasserstein2": 82, "especi": [82, 92], "smoother": 82, "repartit": 82, "reservoir": [82, 92], "caffarelli": [82, 91, 92], "mccann": [82, 91, 92], "boundari": [82, 91, 92], "amper": [82, 91, 92], "obstacl": [82, 91, 92], "annal": [82, 91, 92], "673": [82, 91, 92], "partial_wasserstein_lagrang": 82, "partial_wasserstein2": [82, 92], "rao": 82, "tune": 82, "shown": [83, 92], "na": 83, "thr": 83, "noth": 83, "complement_schur": 84, "m_current": 84, "id_pop": 84, "schur": 84, "complement": 84, "aris": 84, "bmatrix": 84, "m_k": 84, "h_a": 84, "th_a": 84, "backslash": 84, "r_": 84, "depriv": 84, "compute_next_remov": 84, "current_gamma": 84, "largest": 84, "vanish": [84, 92], "phi_j": 84, "delta_j": 84, "intercept": 84, "slope": 84, "next_removal_gamma": 84, "next_removal_index": 84, "gamma_list": 84, "pi_list": 84, "piecewis": 84, "flatten": 84, "19722222": 84, "05555556": 84, "24722222": 84, "construct_augmented_h": 84, "active_index": 84, "hc": 84, "hrhr": 84, "augment": 84, "_h": 84, "h_": 84, "h_r": 84, "h_c": 84, "h_augment": 84, "fully_relaxed_path": 84, "itmax": 84, "reformul": 84, "min_t": 84, "99958333e": 84, "00000000e": 84, "88888889e": 84, "99938889e": 84, "ot_next_gamma": 84, "hth": 84, "hty": 84, "inact": 84, "next_gamma": 84, "next_active_index": 84, "recast_ot_as_lasso": 84, "recast": 84, "1_m": 84, "1_n": 84, "particularli": [84, 92], "uot2": 84, "recast_semi_relaxed_as_lasso": 84, "hr": 84, "auxiliari": 84, "constitut": 84, "semi_relaxed_next_gamma": 84, "phi_u": 84, "delta_u": 84, "hra": 84, "ri": 84, "ra": 84, "ith": 84, "lagrang": [84, 89], "semi_relaxed_path": 84, "99980556e": 84, "94444444e": 84, "get_random_project": 85, "unit": [85, 92], "ue": 85, "proc": 86, "1710": 86, "06276": 86, "mblondel": 86, "liu": [86, 91], "puigcerv": [86, 91], "eleventh": [86, 91], "2209": 86, "15466": 86, "dual_obj_grad": 86, "regul": 86, "delta_omega": 86, "grad_alpha": 86, "grad_beta": 86, "get_plan_from_du": 86, "retriev": 86, "get_plan_from_semi_du": 86, "projection_simplex": 86, "substack": [86, 89], "z_i": [86, 89], "z_j": [86, 89], "semi_dual_obj_grad": 86, "max_omega": 86, "decent": 86, "nbb": 86, "nonzero": 86, "sinhorn": 86, "smooth_ot_semi_du": [86, 92], "solve_du": 86, "solve_semi_du": 86, "negentropi": 86, "sup_": 86, "nabla": 86, "intend": 86, "appar": 86, "sparsityconstrain": 86, "squaredl2": 86, "averaged_sgd_entropic_transport": 87, "300000": 87, "contin": 87, "alg": 87, "ave_v": 87, "_refer": 87, "batch_grad_du": 87, "batch_alpha": 87, "batch_beta": 87, "partial_": 87, "b_": 87, "l_v": 87, "b_v": 87, "l_u": 87, "b_u": 87, "c_transform_entrop": 87, "coordinate_grad_semi_du": 87, "bewar": 87, "dual_loss": 87, "sag_entropic_transport": 87, "sgd_entropic_regular": 87, "barycenter_unbalanced_sinkhorn": 88, "barycenter_unbalanced_stabil": [88, 92], "absorpt": 88, "lbfgsb_unbalanc": 88, "reg_div": 88, "regm_div": 88, "div_m": 88, "quantifi": 88, "mm_unbalanced2": 88, "b_i": 88, "check_param": 89, "miss": 89, "check_random_st": 89, "turn": 89, "singleton": 89, "alreadi": [89, 92, 93], "valueerror": 89, "clean_zero": [89, 93], "cost_norm": [89, 93], "loglog": 89, "lin_squar": 89, "euclidean_dist": 89, "n_samples_1": 89, "n_samples_2": 89, "ambient": 89, "y1": 89, "label_norm": 89, "smallest": 89, "lst": 89, "parmap": 89, "nproc": 89, "multiprocess": 89, "closest": 89, "orthogon": 89, "projection_sparse_simplex": [89, 93], "anastasio": 89, "kyrillidi": 89, "stephen": 89, "becker": 89, "volkan": 89, "cevher": 89, "christoph": 89, "koch": 89, "1206": 89, "1529": 89, "get_param": 89, "deep": 89, "subobject": 89, "param": 89, "set_param": 89, "nest": 89, "pipelin": 89, "latter": 89, "__": 89, "sparse_plan": 89, "lazy_plan": 89, "a_to_b": 89, "b_to_a": 89, "citat": 89, "plain": 89, "bibtex": [89, 91], "symbol": 89, "keop": 89, "lazytensor": 89, "marginal_a": 89, "marginal_b": 89, "potential_a": 89, "potential_b": 89, "extra": 89, "decor": 89, "mark": 89, "blob": 89, "instanti": [89, 93], "parenthes": 89, "some_funct": 89, "undefinedparamet": 89, "undefin": 89, "ransport": 90, "sever": [91, 92, 93], "websit": 91, "jmlr": [91, 93], "aur\u00e9li": 91, "nemo": 91, "fournier": 91, "antoni": 91, "schutz": 91, "danica": 91, "sutherland": 91, "alexand": 91, "tong": 91, "articl": 91, "flamary2021pot": 91, "mi": 91, "aur": 91, "lie": [91, 92], "year": [91, 92, 93], "volum": 91, "url": 91, "v22": 91, "451": 91, "linux": [91, 93], "macosx": [91, 93], "window": [91, 93], "cython": [91, 92, 93], "latest": 91, "archiv": 91, "abl": 91, "easier": [91, 92], "wd": 91, "wd_reg": 91, "t_reg": [91, 92], "ba": 91, "question": 91, "slack": 91, "channel": 91, "gitter": 91, "bug": [91, 93], "2292": [91, 92], "2300": [91, 92], "36th": [91, 92], "38th": [91, 92], "pointer": [92, 93], "concret": 92, "book": 92, "ml": 92, "gaspard": 92, "1781": 92, "move": [92, 93], "overal": 92, "difficult": 92, "kantorovitch": 92, "share": 92, "disjoint": 92, "favor": 92, "popular": 92, "jensen": 92, "shannon": 92, "meaning": 92, "becam": 92, "overcom": 92, "spectra": 92, "itself": 92, "context": 92, "recent": [92, 93], "rapidli": 92, "grow": 92, "novel": [92, 93], "abil": 92, "extend": 92, "proven": 92, "nearli": 92, "still": [92, 93], "geomloss": 92, "lipschitz": 92, "exactli": 92, "filter": 92, "quit": [92, 93], "known": 92, "affin": 92, "hi": 92, "semin": 92, "strong": 92, "procedur": 92, "slower": 92, "variant": [92, 93], "tu": 92, "kullbach": 92, "similarli": 92, "pure": 92, "speed": [92, 93], "effect": 92, "densifi": 92, "lost": 92, "soon": 92, "_q": 92, "forc": 92, "choic": [92, 93], "long": [92, 93], "w_kw": 92, "mu_k": 92, "b_k": 92, "linprog": 92, "brought": 92, "brenier": 92, "eponym": 92, "theorem": 92, "interfac": 92, "basetransport": [92, 93], "classifi": [92, 93], "xs_map": 92, "inherit": [92, 93], "w_u": 92, "interestingli": 92, "fr\u00e9chet": 92, "w_kw_u": 92, "barycenter_unbalanced_sinkhorn_unbalanc": 92, "surplu": 92, "resolut": 92, "c1_": 92, "c2_": 92, "realign": 92, "ck": 92, "fusion": 92, "coin": 92, "partli": 92, "linearli": 92, "projector": 92, "min_p": 92, "mu_j": 92, "hard": [92, 93], "seamlessli": [92, 93], "incur": 92, "far": 92, "longer": 92, "hopefulli": [92, 93], "disappear": 92, "becom": 92, "fulli": [92, 93], "importerror": 92, "shortli": 92, "readm": [92, 93], "tri": [92, 93], "quicker": [92, 93], "configur": 92, "nterpol": 92, "cc": 92, "9386": 92, "www": 92, "toronto": 92, "annals2010": 92, "2002": 92, "08276": 92, "488": 93, "483": 93, "463": 93, "459": 93, "473": 93, "472": 93, "maco": 93, "484": 93, "_gw": 93, "_bregman": 93, "_semirelax": 93, "ecwa": 93, "486": 93, "redirector": 93, "codecov": 93, "457": 93, "cleanup": 93, "462": 93, "467": 93, "475": 93, "wasserstein2": 93, "466": 93, "468": 93, "471": 93, "rp": 93, "474": 93, "decid": 93, "bring": 93, "431": 93, "happi": 93, "began": 93, "unifi": 93, "behind": 93, "facilit": 93, "explor": 93, "just": 93, "old": 93, "sol": 93, "ot_loss": 93, "ot_loss_linear": 93, "sol2": 93, "sol_rkl": 93, "sol_rl2": 93, "sol_ul2": 93, "sol_rkl_ukl": 93, "kickstart": 93, "encourag": 93, "plai": 93, "made": 93, "big": 93, "434": 93, "428": 93, "372": 93, "376": 93, "387": 93, "388": 93, "449": 93, "437": 93, "447": 93, "448": 93, "395": 93, "393": 93, "394": 93, "371": 93, "373": 93, "374": 93, "hit": 93, "stderr": 93, "cerr": 93, "stream": 93, "377": 93, "378": 93, "379": 93, "beyond": 93, "certain": 93, "slightli": 93, "46k": 93, "roughli": 93, "381": 93, "mismatch": 93, "386": 93, "389": 93, "391": 93, "around": 93, "402": 93, "built": 93, "403": 93, "setuptool": 93, "408": 93, "409": 93, "404": 93, "412": 93, "413": 93, "render": 93, "subcal": 93, "421": 93, "break": 93, "try": 93, "424": 93, "425": 93, "444": 93, "445": 93, "446": 93, "notabl": 93, "less": 93, "background": 93, "autodiff": 93, "front": 93, "submodul": 93, "359": 93, "brand": 93, "357": 93, "minigalleri": 93, "334": 93, "336": 93, "341": 93, "319": 93, "362": 93, "364": 93, "363": 93, "valfunct": 93, "337": 93, "338": 93, "abi": 93, "346": 93, "349": 93, "feed": 93, "backpropag": 93, "351": 93, "352": 93, "tag": 93, "332": 93, "global": 93, "namespac": 93, "331": 93, "333": 93, "enabl": 93, "wheel": 93, "older": 93, "realli": 93, "315": 93, "code_of_conduct": 93, "322": 93, "308": 93, "326": 93, "305": 93, "306": 93, "309": 93, "sinkhornl1l2": 93, "311": 93, "313": 93, "317": 93, "3018": 93, "novemb": 93, "nice": 93, "mechan": 93, "moment": 93, "ott": 93, "simplifi": 93, "pyproject": 93, "toml": 93, "aarch64": 93, "raspberri": 93, "android": 93, "phone": 93, "arm": 93, "processor": 93, "softwar": 93, "cite": 93, "improv": 93, "particular": 93, "usual": 93, "peopl": 93, "kamel": 93, "guerda": 93, "ai": 93, "idri": 93, "249": 93, "282": 93, "294": 93, "302": 93, "304": 93, "303": 93, "274": 93, "267": 93, "291": 93, "293": 93, "lazi": 93, "259": 93, "smartphon": 93, "238": 93, "236": 93, "253": 93, "202": 93, "203": 93, "262": 93, "introductori": 93, "leak": 93, "254": 93, "284": 93, "287": 93, "288": 93, "278": 93, "258": 93, "234": 93, "241": 93, "242": 93, "215": 93, "281": 93, "286": 93, "infeas": 93, "217": 93, "201": 93, "207": 93, "208": 93, "296": 93, "flake8": 93, "setup": 93, "flag": 93, "organ": 93, "own": 93, "host": 93, "offer": 93, "readthedoc": 93, "beauti": 93, "huge": 93, "correctli": 93, "travi": 93, "simpler": 93, "laplac": 93, "acknowledg": 93, "231": 93, "232": 93, "bad": 93, "jump": 93, "wild": 93, "state": 93, "fundament": 93, "month": 93, "until": 93, "python3stat": 93, "relev": 93, "64bit": 93, "past": 93, "manylinux": 93, "sep": 93, "among": 93, "rewrit": 93, "unmaintain": 93, "cudamat": 93, "were": 93, "stai": 93, "qualiti": 93, "stuff": 93, "markdown": 93, "pipi": 93, "renam": 93, "compliant": 93, "un": 93, "plug": 93, "unus": 93, "unicodedecodeerror": 93, "ascii": 93, "pytest": 93, "pep": 93, "du": 93, "jul": 93, "reloc": 93, "apr": 93, "jan": 93, "tweak": 93, "nov": 93, "oct": 93}, "objects": {"": [[0, 0, 0, "-", "ot"]], "ot": [[70, 0, 0, "-", "backend"], [0, 3, 1, "", "barycenter"], [0, 3, 1, "", "barycenter_unbalanced"], [0, 3, 1, "", "binary_search_circle"], [71, 0, 0, "-", "bregman"], [72, 0, 0, "-", "coot"], [73, 0, 0, "-", "da"], [74, 0, 0, "-", "datasets"], [0, 3, 1, "", "dist"], [75, 0, 0, "-", "dr"], [0, 3, 1, "", "emd"], [0, 3, 1, "", "emd2"], [0, 3, 1, "", "emd2_1d"], [0, 3, 1, "", "emd_1d"], [76, 0, 0, "-", "factored"], [0, 3, 1, "", "factored_optimal_transport"], [0, 3, 1, "", "fused_gromov_wasserstein"], [0, 3, 1, "", "fused_gromov_wasserstein2"], [77, 0, 0, "-", "gaussian"], [78, 0, 0, "-", "gnn"], [79, 0, 0, "-", "gromov"], [0, 3, 1, "", "gromov_barycenters"], [0, 3, 1, "", "gromov_wasserstein"], [0, 3, 1, "", "gromov_wasserstein2"], [80, 0, 0, "-", "lp"], [0, 3, 1, "", "max_sliced_wasserstein_distance"], [81, 0, 0, "-", "optim"], [82, 0, 0, "-", "partial"], [83, 0, 0, "-", "plot"], [84, 0, 0, "-", "regpath"], [0, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [0, 3, 1, "", "sinkhorn"], [0, 3, 1, "", "sinkhorn2"], [0, 3, 1, "", "sinkhorn_lpl1_mm"], [0, 3, 1, "", "sinkhorn_unbalanced"], [0, 3, 1, "", "sinkhorn_unbalanced2"], [85, 0, 0, "-", "sliced"], [0, 3, 1, "", "sliced_wasserstein_distance"], [0, 3, 1, "", "sliced_wasserstein_sphere"], [0, 3, 1, "", "sliced_wasserstein_sphere_unif"], [86, 0, 0, "-", "smooth"], [0, 3, 1, "", "solve"], [87, 0, 0, "-", "stochastic"], [0, 3, 1, "", "tic"], [0, 3, 1, "", "toc"], [0, 3, 1, "", "toq"], [88, 0, 0, "-", "unbalanced"], [0, 3, 1, "", "unif"], [89, 0, 0, "-", "utils"], [0, 3, 1, "", "wasserstein_1d"], [0, 3, 1, "", "wasserstein_circle"], [90, 0, 0, "-", "weak"], [0, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[70, 1, 1, "id0", "Backend"], [70, 1, 1, "id81", "CupyBackend"], [70, 1, 1, "id160", "JaxBackend"], [70, 1, 1, "id239", "NumpyBackend"], [70, 1, 1, "id318", "TensorflowBackend"], [70, 1, 1, "id397", "TorchBackend"], [70, 3, 1, "id476", "get_backend"], [70, 3, 1, "id477", "get_backend_list"], [70, 3, 1, "id478", "to_numpy"]], "ot.backend.Backend": [[70, 2, 1, "id1", "abs"], [70, 2, 1, "id2", "allclose"], [70, 2, 1, "id3", "any"], [70, 2, 1, "id4", "arange"], [70, 2, 1, "id5", "argmax"], [70, 2, 1, "id6", "argmin"], [70, 2, 1, "id7", "argsort"], [70, 2, 1, "id8", "array_equal"], [70, 2, 1, "id9", "assert_same_dtype_device"], [70, 2, 1, "id10", "atan2"], [70, 2, 1, "id11", "bitsize"], [70, 2, 1, "id12", "clip"], [70, 2, 1, "id13", "concatenate"], [70, 2, 1, "id14", "coo_matrix"], [70, 2, 1, "id15", "copy"], [70, 2, 1, "id16", "cumsum"], [70, 2, 1, "id17", "detach"], [70, 2, 1, "id18", "device_type"], [70, 2, 1, "id19", "diag"], [70, 2, 1, "id20", "dot"], [70, 2, 1, "id21", "dtype_device"], [70, 2, 1, "id22", "einsum"], [70, 2, 1, "id23", "eliminate_zeros"], [70, 2, 1, "id24", "exp"], [70, 2, 1, "id25", "eye"], [70, 2, 1, "id26", "flip"], [70, 2, 1, "id27", "floor"], [70, 2, 1, "id28", "from_numpy"], [70, 2, 1, "id29", "full"], [70, 2, 1, "id30", "inv"], [70, 2, 1, "id31", "is_floating_point"], [70, 2, 1, "id32", "isfinite"], [70, 2, 1, "id33", "isinf"], [70, 2, 1, "id34", "isnan"], [70, 2, 1, "id35", "issparse"], [70, 2, 1, "id36", "kl_div"], [70, 2, 1, "id37", "linspace"], [70, 2, 1, "id38", "log"], [70, 2, 1, "id39", "logsumexp"], [70, 2, 1, "id40", "matmul"], [70, 2, 1, "id41", "max"], [70, 2, 1, "id42", "maximum"], [70, 2, 1, "id43", "mean"], [70, 2, 1, "id44", "median"], [70, 2, 1, "id45", "meshgrid"], [70, 2, 1, "id46", "min"], [70, 2, 1, "id47", "minimum"], [70, 2, 1, "id48", "norm"], [70, 2, 1, "id49", "ones"], [70, 2, 1, "id50", "outer"], [70, 2, 1, "id51", "power"], [70, 2, 1, "id52", "prod"], [70, 2, 1, "id53", "qr"], [70, 2, 1, "id54", "rand"], [70, 2, 1, "id55", "randn"], [70, 2, 1, "id56", "repeat"], [70, 2, 1, "id57", "reshape"], [70, 2, 1, "id58", "searchsorted"], [70, 2, 1, "id59", "seed"], [70, 2, 1, "id60", "set_gradients"], [70, 2, 1, "id61", "solve"], [70, 2, 1, "id62", "sort"], [70, 2, 1, "id63", "sort2"], [70, 2, 1, "id64", "sqrt"], [70, 2, 1, "id65", "sqrtm"], [70, 2, 1, "id66", "squeeze"], [70, 2, 1, "id67", "stack"], [70, 2, 1, "id68", "std"], [70, 2, 1, "id69", "sum"], [70, 2, 1, "id70", "take_along_axis"], [70, 2, 1, "id71", "tile"], [70, 2, 1, "id72", "to_numpy"], [70, 2, 1, "id73", "tocsr"], [70, 2, 1, "id74", "todense"], [70, 2, 1, "id75", "trace"], [70, 2, 1, "id76", "transpose"], [70, 2, 1, "id77", "unique"], [70, 2, 1, "id78", "where"], [70, 2, 1, "id79", "zero_pad"], [70, 2, 1, "id80", "zeros"]], "ot.backend.CupyBackend": [[70, 2, 1, "id82", "abs"], [70, 2, 1, "id83", "allclose"], [70, 2, 1, "id84", "any"], [70, 2, 1, "id85", "arange"], [70, 2, 1, "id86", "argmax"], [70, 2, 1, "id87", "argmin"], [70, 2, 1, "id88", "argsort"], [70, 2, 1, "id89", "array_equal"], [70, 2, 1, "id90", "assert_same_dtype_device"], [70, 2, 1, "id91", "atan2"], [70, 2, 1, "id92", "bitsize"], [70, 2, 1, "id93", "clip"], [70, 2, 1, "id94", "concatenate"], [70, 2, 1, "id95", "coo_matrix"], [70, 2, 1, "id96", "copy"], [70, 2, 1, "id97", "cumsum"], [70, 2, 1, "id98", "detach"], [70, 2, 1, "id99", "device_type"], [70, 2, 1, "id100", "diag"], [70, 2, 1, "id101", "dot"], [70, 2, 1, "id102", "dtype_device"], [70, 2, 1, "id103", "einsum"], [70, 2, 1, "id104", "eliminate_zeros"], [70, 2, 1, "id105", "exp"], [70, 2, 1, "id106", "eye"], [70, 2, 1, "id107", "flip"], [70, 2, 1, "id108", "floor"], [70, 2, 1, "id109", "full"], [70, 2, 1, "id110", "inv"], [70, 2, 1, "id111", "is_floating_point"], [70, 2, 1, "id112", "isfinite"], [70, 2, 1, "id113", "isinf"], [70, 2, 1, "id114", "isnan"], [70, 2, 1, "id115", "issparse"], [70, 2, 1, "id116", "kl_div"], [70, 2, 1, "id117", "linspace"], [70, 2, 1, "id118", "log"], [70, 2, 1, "id119", "logsumexp"], [70, 2, 1, "id120", "matmul"], [70, 2, 1, "id121", "max"], [70, 2, 1, "id122", "maximum"], [70, 2, 1, "id123", "mean"], [70, 2, 1, "id124", "median"], [70, 2, 1, "id125", "meshgrid"], [70, 2, 1, "id126", "min"], [70, 2, 1, "id127", "minimum"], [70, 2, 1, "id128", "norm"], [70, 2, 1, "id129", "ones"], [70, 2, 1, "id130", "outer"], [70, 2, 1, "id131", "power"], [70, 2, 1, "id132", "prod"], [70, 2, 1, "id133", "qr"], [70, 2, 1, "id134", "rand"], [70, 2, 1, "id135", "randn"], [70, 2, 1, "id136", "repeat"], [70, 2, 1, "id137", "reshape"], [70, 2, 1, "id138", "searchsorted"], [70, 2, 1, "id139", "seed"], [70, 2, 1, "id140", "set_gradients"], [70, 2, 1, "id141", "solve"], [70, 2, 1, "id142", "sort"], [70, 2, 1, "id143", "sort2"], [70, 2, 1, "id144", "sqrt"], [70, 2, 1, "id145", "sqrtm"], [70, 2, 1, "id146", "squeeze"], [70, 2, 1, "id147", "stack"], [70, 2, 1, "id148", "std"], [70, 2, 1, "id149", "sum"], [70, 2, 1, "id150", "take_along_axis"], [70, 2, 1, "id151", "tile"], [70, 2, 1, "id152", "tocsr"], [70, 2, 1, "id153", "todense"], [70, 2, 1, "id154", "trace"], [70, 2, 1, "id155", "transpose"], [70, 2, 1, "id156", "unique"], [70, 2, 1, "id157", "where"], [70, 2, 1, "id158", "zero_pad"], [70, 2, 1, "id159", "zeros"]], "ot.backend.JaxBackend": [[70, 2, 1, "id161", "abs"], [70, 2, 1, "id162", "allclose"], [70, 2, 1, "id163", "any"], [70, 2, 1, "id164", "arange"], [70, 2, 1, "id165", "argmax"], [70, 2, 1, "id166", "argmin"], [70, 2, 1, "id167", "argsort"], [70, 2, 1, "id168", "array_equal"], [70, 2, 1, "id169", "assert_same_dtype_device"], [70, 2, 1, "id170", "atan2"], [70, 2, 1, "id171", "bitsize"], [70, 2, 1, "id172", "clip"], [70, 2, 1, "id173", "concatenate"], [70, 2, 1, "id174", "coo_matrix"], [70, 2, 1, "id175", "copy"], [70, 2, 1, "id176", "cumsum"], [70, 2, 1, "id177", "detach"], [70, 2, 1, "id178", "device_type"], [70, 2, 1, "id179", "diag"], [70, 2, 1, "id180", "dot"], [70, 2, 1, "id181", "dtype_device"], [70, 2, 1, "id182", "einsum"], [70, 2, 1, "id183", "eliminate_zeros"], [70, 2, 1, "id184", "exp"], [70, 2, 1, "id185", "eye"], [70, 2, 1, "id186", "flip"], [70, 2, 1, "id187", "floor"], [70, 2, 1, "id188", "full"], [70, 2, 1, "id189", "inv"], [70, 2, 1, "id190", "is_floating_point"], [70, 2, 1, "id191", "isfinite"], [70, 2, 1, "id192", "isinf"], [70, 2, 1, "id193", "isnan"], [70, 2, 1, "id194", "issparse"], [70, 2, 1, "id195", "kl_div"], [70, 2, 1, "id196", "linspace"], [70, 2, 1, "id197", "log"], [70, 2, 1, "id198", "logsumexp"], [70, 2, 1, "id199", "matmul"], [70, 2, 1, "id200", "max"], [70, 2, 1, "id201", "maximum"], [70, 2, 1, "id202", "mean"], [70, 2, 1, "id203", "median"], [70, 2, 1, "id204", "meshgrid"], [70, 2, 1, "id205", "min"], [70, 2, 1, "id206", "minimum"], [70, 2, 1, "id207", "norm"], [70, 2, 1, "id208", "ones"], [70, 2, 1, "id209", "outer"], [70, 2, 1, "id210", "power"], [70, 2, 1, "id211", "prod"], [70, 2, 1, "id212", "qr"], [70, 2, 1, "id213", "rand"], [70, 2, 1, "id214", "randn"], [70, 2, 1, "id215", "repeat"], [70, 2, 1, "id216", "reshape"], [70, 2, 1, "id217", "searchsorted"], [70, 2, 1, "id218", "seed"], [70, 2, 1, "id219", "set_gradients"], [70, 2, 1, "id220", "solve"], [70, 2, 1, "id221", "sort"], [70, 2, 1, "id222", "sort2"], [70, 2, 1, "id223", "sqrt"], [70, 2, 1, "id224", "sqrtm"], [70, 2, 1, "id225", "squeeze"], [70, 2, 1, "id226", "stack"], [70, 2, 1, "id227", "std"], [70, 2, 1, "id228", "sum"], [70, 2, 1, "id229", "take_along_axis"], [70, 2, 1, "id230", "tile"], [70, 2, 1, "id231", "tocsr"], [70, 2, 1, "id232", "todense"], [70, 2, 1, "id233", "trace"], [70, 2, 1, "id234", "transpose"], [70, 2, 1, "id235", "unique"], [70, 2, 1, "id236", "where"], [70, 2, 1, "id237", "zero_pad"], [70, 2, 1, "id238", "zeros"]], "ot.backend.NumpyBackend": [[70, 2, 1, "id240", "abs"], [70, 2, 1, "id241", "allclose"], [70, 2, 1, "id242", "any"], [70, 2, 1, "id243", "arange"], [70, 2, 1, "id244", "argmax"], [70, 2, 1, "id245", "argmin"], [70, 2, 1, "id246", "argsort"], [70, 2, 1, "id247", "array_equal"], [70, 2, 1, "id248", "assert_same_dtype_device"], [70, 2, 1, "id249", "atan2"], [70, 2, 1, "id250", "bitsize"], [70, 2, 1, "id251", "clip"], [70, 2, 1, "id252", "concatenate"], [70, 2, 1, "id253", "coo_matrix"], [70, 2, 1, "id254", "copy"], [70, 2, 1, "id255", "cumsum"], [70, 2, 1, "id256", "detach"], [70, 2, 1, "id257", "device_type"], [70, 2, 1, "id258", "diag"], [70, 2, 1, "id259", "dot"], [70, 2, 1, "id260", "dtype_device"], [70, 2, 1, "id261", "einsum"], [70, 2, 1, "id262", "eliminate_zeros"], [70, 2, 1, "id263", "exp"], [70, 2, 1, "id264", "eye"], [70, 2, 1, "id265", "flip"], [70, 2, 1, "id266", "floor"], [70, 2, 1, "id267", "full"], [70, 2, 1, "id268", "inv"], [70, 2, 1, "id269", "is_floating_point"], [70, 2, 1, "id270", "isfinite"], [70, 2, 1, "id271", "isinf"], [70, 2, 1, "id272", "isnan"], [70, 2, 1, "id273", "issparse"], [70, 2, 1, "id274", "kl_div"], [70, 2, 1, "id275", "linspace"], [70, 2, 1, "id276", "log"], [70, 2, 1, "id277", "logsumexp"], [70, 2, 1, "id278", "matmul"], [70, 2, 1, "id279", "max"], [70, 2, 1, "id280", "maximum"], [70, 2, 1, "id281", "mean"], [70, 2, 1, "id282", "median"], [70, 2, 1, "id283", "meshgrid"], [70, 2, 1, "id284", "min"], [70, 2, 1, "id285", "minimum"], [70, 2, 1, "id286", "norm"], [70, 2, 1, "id287", "ones"], [70, 2, 1, "id288", "outer"], [70, 2, 1, "id289", "power"], [70, 2, 1, "id290", "prod"], [70, 2, 1, "id291", "qr"], [70, 2, 1, "id292", "rand"], [70, 2, 1, "id293", "randn"], [70, 2, 1, "id294", "repeat"], [70, 2, 1, "id295", "reshape"], [70, 2, 1, "id296", "searchsorted"], [70, 2, 1, "id297", "seed"], [70, 2, 1, "id298", "set_gradients"], [70, 2, 1, "id299", "solve"], [70, 2, 1, "id300", "sort"], [70, 2, 1, "id301", "sort2"], [70, 2, 1, "id302", "sqrt"], [70, 2, 1, "id303", "sqrtm"], [70, 2, 1, "id304", "squeeze"], [70, 2, 1, "id305", "stack"], [70, 2, 1, "id306", "std"], [70, 2, 1, "id307", "sum"], [70, 2, 1, "id308", "take_along_axis"], [70, 2, 1, "id309", "tile"], [70, 2, 1, "id310", "tocsr"], [70, 2, 1, "id311", "todense"], [70, 2, 1, "id312", "trace"], [70, 2, 1, "id313", "transpose"], [70, 2, 1, "id314", "unique"], [70, 2, 1, "id315", "where"], [70, 2, 1, "id316", "zero_pad"], [70, 2, 1, "id317", "zeros"]], "ot.backend.TensorflowBackend": [[70, 2, 1, "id319", "abs"], [70, 2, 1, "id320", "allclose"], [70, 2, 1, "id321", "any"], [70, 2, 1, "id322", "arange"], [70, 2, 1, "id323", "argmax"], [70, 2, 1, "id324", "argmin"], [70, 2, 1, "id325", "argsort"], [70, 2, 1, "id326", "array_equal"], [70, 2, 1, "id327", "assert_same_dtype_device"], [70, 2, 1, "id328", "atan2"], [70, 2, 1, "id329", "bitsize"], [70, 2, 1, "id330", "clip"], [70, 2, 1, "id331", "concatenate"], [70, 2, 1, "id332", "coo_matrix"], [70, 2, 1, "id333", "copy"], [70, 2, 1, "id334", "cumsum"], [70, 2, 1, "id335", "detach"], [70, 2, 1, "id336", "device_type"], [70, 2, 1, "id337", "diag"], [70, 2, 1, "id338", "dot"], [70, 2, 1, "id339", "dtype_device"], [70, 2, 1, "id340", "einsum"], [70, 2, 1, "id341", "eliminate_zeros"], [70, 2, 1, "id342", "exp"], [70, 2, 1, "id343", "eye"], [70, 2, 1, "id344", "flip"], [70, 2, 1, "id345", "floor"], [70, 2, 1, "id346", "full"], [70, 2, 1, "id347", "inv"], [70, 2, 1, "id348", "is_floating_point"], [70, 2, 1, "id349", "isfinite"], [70, 2, 1, "id350", "isinf"], [70, 2, 1, "id351", "isnan"], [70, 2, 1, "id352", "issparse"], [70, 2, 1, "id353", "kl_div"], [70, 2, 1, "id354", "linspace"], [70, 2, 1, "id355", "log"], [70, 2, 1, "id356", "logsumexp"], [70, 2, 1, "id357", "matmul"], [70, 2, 1, "id358", "max"], [70, 2, 1, "id359", "maximum"], [70, 2, 1, "id360", "mean"], [70, 2, 1, "id361", "median"], [70, 2, 1, "id362", "meshgrid"], [70, 2, 1, "id363", "min"], [70, 2, 1, "id364", "minimum"], [70, 2, 1, "id365", "norm"], [70, 2, 1, "id366", "ones"], [70, 2, 1, "id367", "outer"], [70, 2, 1, "id368", "power"], [70, 2, 1, "id369", "prod"], [70, 2, 1, "id370", "qr"], [70, 2, 1, "id371", "rand"], [70, 2, 1, "id372", "randn"], [70, 2, 1, "id373", "repeat"], [70, 2, 1, "id374", "reshape"], [70, 2, 1, "id375", "searchsorted"], [70, 2, 1, "id376", "seed"], [70, 2, 1, "id377", "set_gradients"], [70, 2, 1, "id378", "solve"], [70, 2, 1, "id379", "sort"], [70, 2, 1, "id380", "sort2"], [70, 2, 1, "id381", "sqrt"], [70, 2, 1, "id382", "sqrtm"], [70, 2, 1, "id383", "squeeze"], [70, 2, 1, "id384", "stack"], [70, 2, 1, "id385", "std"], [70, 2, 1, "id386", "sum"], [70, 2, 1, "id387", "take_along_axis"], [70, 2, 1, "id388", "tile"], [70, 2, 1, "id389", "tocsr"], [70, 2, 1, "id390", "todense"], [70, 2, 1, "id391", "trace"], [70, 2, 1, "id392", "transpose"], [70, 2, 1, "id393", "unique"], [70, 2, 1, "id394", "where"], [70, 2, 1, "id395", "zero_pad"], [70, 2, 1, "id396", "zeros"]], "ot.backend.TorchBackend": [[70, 2, 1, "id398", "abs"], [70, 2, 1, "id399", "allclose"], [70, 2, 1, "id400", "any"], [70, 2, 1, "id401", "arange"], [70, 2, 1, "id402", "argmax"], [70, 2, 1, "id403", "argmin"], [70, 2, 1, "id404", "argsort"], [70, 2, 1, "id405", "array_equal"], [70, 2, 1, "id406", "assert_same_dtype_device"], [70, 2, 1, "id407", "atan2"], [70, 2, 1, "id408", "bitsize"], [70, 2, 1, "id409", "clip"], [70, 2, 1, "id410", "concatenate"], [70, 2, 1, "id411", "coo_matrix"], [70, 2, 1, "id412", "copy"], [70, 2, 1, "id413", "cumsum"], [70, 2, 1, "id414", "detach"], [70, 2, 1, "id415", "device_type"], [70, 2, 1, "id416", "diag"], [70, 2, 1, "id417", "dot"], [70, 2, 1, "id418", "dtype_device"], [70, 2, 1, "id419", "einsum"], [70, 2, 1, "id420", "eliminate_zeros"], [70, 2, 1, "id421", "exp"], [70, 2, 1, "id422", "eye"], [70, 2, 1, "id423", "flip"], [70, 2, 1, "id424", "floor"], [70, 2, 1, "id425", "full"], [70, 2, 1, "id426", "inv"], [70, 2, 1, "id427", "is_floating_point"], [70, 2, 1, "id428", "isfinite"], [70, 2, 1, "id429", "isinf"], [70, 2, 1, "id430", "isnan"], [70, 2, 1, "id431", "issparse"], [70, 2, 1, "id432", "kl_div"], [70, 2, 1, "id433", "linspace"], [70, 2, 1, "id434", "log"], [70, 2, 1, "id435", "logsumexp"], [70, 2, 1, "id436", "matmul"], [70, 2, 1, "id437", "max"], [70, 2, 1, "id438", "maximum"], [70, 2, 1, "id439", "mean"], [70, 2, 1, "id440", "median"], [70, 2, 1, "id441", "meshgrid"], [70, 2, 1, "id442", "min"], [70, 2, 1, "id443", "minimum"], [70, 2, 1, "id444", "norm"], [70, 2, 1, "id445", "ones"], [70, 2, 1, "id446", "outer"], [70, 2, 1, "id447", "power"], [70, 2, 1, "id448", "prod"], [70, 2, 1, "id449", "qr"], [70, 2, 1, "id450", "rand"], [70, 2, 1, "id451", "randn"], [70, 2, 1, "id452", "repeat"], [70, 2, 1, "id453", "reshape"], [70, 2, 1, "id454", "searchsorted"], [70, 2, 1, "id455", "seed"], [70, 2, 1, "id456", "set_gradients"], [70, 2, 1, "id457", "solve"], [70, 2, 1, "id458", "sort"], [70, 2, 1, "id459", "sort2"], [70, 2, 1, "id460", "sqrt"], [70, 2, 1, "id461", "sqrtm"], [70, 2, 1, "id462", "squeeze"], [70, 2, 1, "id463", "stack"], [70, 2, 1, "id464", "std"], [70, 2, 1, "id465", "sum"], [70, 2, 1, "id466", "take_along_axis"], [70, 2, 1, "id467", "tile"], [70, 2, 1, "id468", "tocsr"], [70, 2, 1, "id469", "todense"], [70, 2, 1, "id470", "trace"], [70, 2, 1, "id471", "transpose"], [70, 2, 1, "id472", "unique"], [70, 2, 1, "id473", "where"], [70, 2, 1, "id474", "zero_pad"], [70, 2, 1, "id475", "zeros"]], "ot.bregman": [[71, 3, 1, "id0", "barycenter"], [71, 3, 1, "id43", "barycenter_debiased"], [71, 3, 1, "id46", "barycenter_sinkhorn"], [71, 3, 1, "id49", "barycenter_stabilized"], [71, 3, 1, "id52", "convolutional_barycenter2d"], [71, 3, 1, "id56", "convolutional_barycenter2d_debiased"], [71, 3, 1, "id59", "empirical_sinkhorn"], [71, 3, 1, "id63", "empirical_sinkhorn2"], [71, 3, 1, "id67", "empirical_sinkhorn_divergence"], [71, 3, 1, "id69", "free_support_sinkhorn_barycenter"], [71, 3, 1, "id72", "geometricBar"], [71, 3, 1, "id73", "geometricMean"], [71, 3, 1, "id74", "greenkhorn"], [71, 3, 1, "id78", "jcpot_barycenter"], [71, 3, 1, "id81", "projC"], [71, 3, 1, "id82", "projR"], [71, 3, 1, "id83", "screenkhorn"], [71, 3, 1, "id87", "sinkhorn"], [71, 3, 1, "id93", "sinkhorn2"], [71, 3, 1, "id100", "sinkhorn_epsilon_scaling"], [71, 3, 1, "id105", "sinkhorn_knopp"], [71, 3, 1, "id108", "sinkhorn_log"], [71, 3, 1, "id112", "sinkhorn_stabilized"], [71, 3, 1, "id117", "unmix"]], "ot.coot": [[72, 3, 1, "id0", "co_optimal_transport"], [72, 3, 1, "id4", "co_optimal_transport2"]], "ot.da": [[73, 1, 1, "id0", "BaseTransport"], [73, 1, 1, "id40", "EMDLaplaceTransport"], [73, 1, 1, "id47", "EMDTransport"], [73, 1, 1, "id53", "JCPOTTransport"], [73, 1, 1, "id66", "LinearTransport"], [73, 1, 1, "id73", "MappingTransport"], [73, 1, 1, "id80", "SinkhornL1l2Transport"], [73, 1, 1, "id88", "SinkhornLpl1Transport"], [73, 1, 1, "id95", "SinkhornTransport"], [73, 1, 1, "id103", "UnbalancedSinkhornTransport"], [73, 3, 1, "id110", "distribution_estimation_uniform"], [73, 3, 1, "id111", "emd_laplace"], [73, 3, 1, "id115", "joint_OT_mapping_kernel"], [73, 3, 1, "id118", "joint_OT_mapping_linear"], [73, 3, 1, "id121", "sinkhorn_l1l2_gl"], [73, 3, 1, "id125", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[73, 2, 1, "id32", "fit"], [73, 2, 1, "id33", "fit_transform"], [73, 2, 1, "id34", "inverse_transform"], [73, 2, 1, "id35", "inverse_transform_labels"], [73, 2, 1, "id36", "transform"], [73, 2, 1, "id37", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[73, 4, 1, "id41", "coupling_"], [73, 2, 1, "id46", "fit"]], "ot.da.EMDTransport": [[73, 4, 1, "id48", "coupling_"], [73, 2, 1, "id52", "fit"]], "ot.da.JCPOTTransport": [[73, 4, 1, "id54", "coupling_"], [73, 2, 1, "id60", "fit"], [73, 2, 1, "id61", "inverse_transform_labels"], [73, 4, 1, "id56", "log_"], [73, 4, 1, "id55", "proportions_"], [73, 2, 1, "id62", "transform"], [73, 2, 1, "id63", "transform_labels"]], "ot.da.LinearTransport": [[73, 2, 1, "id70", "fit"], [73, 2, 1, "id71", "inverse_transform"], [73, 2, 1, "id72", "transform"]], "ot.da.MappingTransport": [[73, 4, 1, "id74", "coupling_"], [73, 2, 1, "id78", "fit"], [73, 4, 1, "id76", "log_"], [73, 4, 1, "id75", "mapping_"], [73, 2, 1, "id79", "transform"]], "ot.da.SinkhornL1l2Transport": [[73, 4, 1, "id81", "coupling_"], [73, 2, 1, "id87", "fit"], [73, 4, 1, "id82", "log_"]], "ot.da.SinkhornLpl1Transport": [[73, 4, 1, "id89", "coupling_"], [73, 2, 1, "id94", "fit"]], "ot.da.SinkhornTransport": [[73, 4, 1, "id96", "coupling_"], [73, 2, 1, "id102", "fit"], [73, 4, 1, "id97", "log_"]], "ot.da.UnbalancedSinkhornTransport": [[73, 4, 1, "id104", "coupling_"], [73, 2, 1, "id109", "fit"], [73, 4, 1, "id105", "log_"]], "ot.datasets": [[74, 3, 1, "id0", "make_1D_gauss"], [74, 3, 1, "id1", "make_2D_samples_gauss"], [74, 3, 1, "id2", "make_data_classif"]], "ot.dr": [[75, 3, 1, "id0", "dist"], [75, 3, 1, "id4", "ewca"], [75, 3, 1, "id7", "fda"], [75, 3, 1, "id8", "logsumexp"], [75, 3, 1, "id9", "projection_robust_wasserstein"], [75, 3, 1, "id12", "sinkhorn"], [75, 3, 1, "id13", "sinkhorn_log"], [75, 3, 1, "id14", "split_classes"], [75, 3, 1, "id15", "wda"]], "ot.factored": [[76, 3, 1, "id0", "factored_optimal_transport"]], "ot.gaussian": [[77, 3, 1, "id0", "bures_wasserstein_distance"], [77, 3, 1, "id11", "bures_wasserstein_mapping"], [77, 3, 1, "id15", "empirical_bures_wasserstein_distance"], [77, 3, 1, "id18", "empirical_bures_wasserstein_mapping"]], "ot.gnn": [[78, 3, 1, "", "FGW_distance_to_templates"], [78, 1, 1, "", "TFGWPooling"], [78, 1, 1, "", "TWPooling"], [78, 3, 1, "", "wasserstein_distance_to_templates"]], "ot.gnn.TFGWPooling": [[78, 2, 1, "", "forward"]], "ot.gnn.TWPooling": [[78, 2, 1, "", "forward"]], "ot.gromov": [[79, 3, 1, "", "GW_distance_estimation"], [79, 3, 1, "", "entropic_fused_gromov_barycenters"], [79, 3, 1, "", "entropic_fused_gromov_wasserstein"], [79, 3, 1, "", "entropic_fused_gromov_wasserstein2"], [79, 3, 1, "", "entropic_gromov_barycenters"], [79, 3, 1, "", "entropic_gromov_wasserstein"], [79, 3, 1, "", "entropic_gromov_wasserstein2"], [79, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein"], [79, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein2"], [79, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein"], [79, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein2"], [79, 3, 1, "", "fgw_barycenters"], [79, 3, 1, "", "fused_gromov_wasserstein"], [79, 3, 1, "", "fused_gromov_wasserstein2"], [79, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [79, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [79, 3, 1, "", "gromov_barycenters"], [79, 3, 1, "", "gromov_wasserstein"], [79, 3, 1, "", "gromov_wasserstein2"], [79, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [79, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [79, 3, 1, "", "gwggrad"], [79, 3, 1, "", "gwloss"], [79, 3, 1, "", "init_matrix"], [79, 3, 1, "", "init_matrix_semirelaxed"], [79, 3, 1, "", "pointwise_gromov_wasserstein"], [79, 3, 1, "", "sampled_gromov_wasserstein"], [79, 3, 1, "", "semirelaxed_fused_gromov_wasserstein"], [79, 3, 1, "", "semirelaxed_fused_gromov_wasserstein2"], [79, 3, 1, "", "semirelaxed_gromov_wasserstein"], [79, 3, 1, "", "semirelaxed_gromov_wasserstein2"], [79, 3, 1, "", "solve_gromov_linesearch"], [79, 3, 1, "", "solve_semirelaxed_gromov_linesearch"], [79, 3, 1, "", "tensor_product"], [79, 3, 1, "", "update_feature_matrix"], [79, 3, 1, "", "update_kl_loss"], [79, 3, 1, "", "update_square_loss"]], "ot.lp": [[80, 3, 1, "", "barycenter"], [80, 3, 1, "", "binary_search_circle"], [80, 3, 1, "", "center_ot_dual"], [80, 3, 1, "", "check_number_threads"], [80, 3, 1, "id0", "emd"], [80, 3, 1, "id11", "emd2"], [80, 3, 1, "", "emd2_1d"], [80, 3, 1, "", "emd_1d"], [80, 3, 1, "", "estimate_dual_null_weights"], [80, 3, 1, "id18", "free_support_barycenter"], [80, 3, 1, "id22", "generalized_free_support_barycenter"], [80, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [80, 3, 1, "", "wasserstein_1d"], [80, 3, 1, "", "wasserstein_circle"]], "ot.optim": [[81, 3, 1, "id0", "cg"], [81, 3, 1, "id13", "gcg"], [81, 3, 1, "id17", "generic_conditional_gradient"], [81, 3, 1, "id23", "line_search_armijo"], [81, 3, 1, "id24", "semirelaxed_cg"], [81, 3, 1, "id27", "solve_1d_linesearch_quad"]], "ot.partial": [[82, 3, 1, "id0", "entropic_partial_gromov_wasserstein"], [82, 3, 1, "id17", "entropic_partial_gromov_wasserstein2"], [82, 3, 1, "id21", "entropic_partial_wasserstein"], [82, 3, 1, "id24", "gwgrad_partial"], [82, 3, 1, "id27", "gwloss_partial"], [82, 3, 1, "id28", "partial_gromov_wasserstein"], [82, 3, 1, "id31", "partial_gromov_wasserstein2"], [82, 3, 1, "id34", "partial_wasserstein"], [82, 3, 1, "id37", "partial_wasserstein2"], [82, 3, 1, "id40", "partial_wasserstein_lagrange"]], "ot.plot": [[83, 3, 1, "id0", "plot1D_mat"], [83, 3, 1, "id1", "plot2D_samples_mat"]], "ot.regpath": [[84, 3, 1, "id0", "complement_schur"], [84, 3, 1, "id12", "compute_next_removal"], [84, 3, 1, "id15", "compute_transport_plan"], [84, 3, 1, "id18", "construct_augmented_H"], [84, 3, 1, "id19", "fully_relaxed_path"], [84, 3, 1, "id21", "ot_next_gamma"], [84, 3, 1, "id23", "recast_ot_as_lasso"], [84, 3, 1, "id25", "recast_semi_relaxed_as_lasso"], [84, 3, 1, "id26", "regularization_path"], [84, 3, 1, "id28", "semi_relaxed_next_gamma"], [84, 3, 1, "id30", "semi_relaxed_path"]], "ot.sliced": [[85, 3, 1, "id0", "get_random_projections"], [85, 3, 1, "id5", "max_sliced_wasserstein_distance"], [85, 3, 1, "id7", "sliced_wasserstein_distance"], [85, 3, 1, "id9", "sliced_wasserstein_sphere"], [85, 3, 1, "id11", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[86, 1, 1, "id0", "NegEntropy"], [86, 1, 1, "id10", "Regularization"], [86, 1, 1, "id14", "SparsityConstrained"], [86, 1, 1, "id18", "SquaredL2"], [86, 3, 1, "id22", "dual_obj_grad"], [86, 3, 1, "id23", "get_plan_from_dual"], [86, 3, 1, "id24", "get_plan_from_semi_dual"], [86, 3, 1, "id25", "projection_simplex"], [86, 3, 1, "id26", "semi_dual_obj_grad"], [86, 3, 1, "id27", "smooth_ot_dual"], [86, 3, 1, "id32", "smooth_ot_semi_dual"], [86, 3, 1, "id37", "solve_dual"], [86, 3, 1, "id38", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[86, 2, 1, "id7", "Omega"], [86, 2, 1, "id8", "delta_Omega"], [86, 2, 1, "id9", "max_Omega"]], "ot.smooth.Regularization": [[86, 2, 1, "id11", "Omega"], [86, 2, 1, "id12", "delta_Omega"], [86, 2, 1, "id13", "max_Omega"]], "ot.smooth.SparsityConstrained": [[86, 2, 1, "id15", "Omega"], [86, 2, 1, "id16", "delta_Omega"], [86, 2, 1, "id17", "max_Omega"]], "ot.smooth.SquaredL2": [[86, 2, 1, "id19", "Omega"], [86, 2, 1, "id20", "delta_Omega"], [86, 2, 1, "id21", "max_Omega"]], "ot.stochastic": [[87, 3, 1, "id0", "averaged_sgd_entropic_transport"], [87, 3, 1, "id14", "batch_grad_dual"], [87, 3, 1, "id16", "c_transform_entropic"], [87, 3, 1, "id18", "coordinate_grad_semi_dual"], [87, 3, 1, "id20", "loss_dual_entropic"], [87, 3, 1, "id22", "loss_dual_quadratic"], [87, 3, 1, "id24", "plan_dual_entropic"], [87, 3, 1, "id26", "plan_dual_quadratic"], [87, 3, 1, "id28", "sag_entropic_transport"], [87, 3, 1, "id30", "sgd_entropic_regularization"], [87, 3, 1, "id32", "solve_dual_entropic"], [87, 3, 1, "id34", "solve_semi_dual_entropic"]], "ot.unbalanced": [[88, 3, 1, "id0", "barycenter_unbalanced"], [88, 3, 1, "id25", "barycenter_unbalanced_sinkhorn"], [88, 3, 1, "id29", "barycenter_unbalanced_stabilized"], [88, 3, 1, "id33", "lbfgsb_unbalanced"], [88, 3, 1, "id35", "mm_unbalanced"], [88, 3, 1, "id38", "mm_unbalanced2"], [88, 3, 1, "id40", "sinkhorn_knopp_unbalanced"], [88, 3, 1, "id44", "sinkhorn_stabilized_unbalanced"], [88, 3, 1, "id48", "sinkhorn_unbalanced"], [88, 3, 1, "id54", "sinkhorn_unbalanced2"]], "ot.utils": [[89, 1, 1, "id0", "BaseEstimator"], [89, 1, 1, "", "OTResult"], [89, 6, 1, "", "UndefinedParameter"], [89, 3, 1, "id3", "check_params"], [89, 3, 1, "id4", "check_random_state"], [89, 3, 1, "id5", "clean_zeros"], [89, 3, 1, "id6", "cost_normalization"], [89, 1, 1, "id7", "deprecated"], [89, 3, 1, "id8", "dist"], [89, 3, 1, "id9", "dist0"], [89, 3, 1, "id10", "dots"], [89, 3, 1, "id11", "euclidean_distances"], [89, 3, 1, "id12", "get_coordinate_circle"], [89, 3, 1, "id13", "kernel"], [89, 3, 1, "id14", "label_normalization"], [89, 3, 1, "id15", "laplacian"], [89, 3, 1, "id16", "list_to_array"], [89, 3, 1, "id17", "parmap"], [89, 3, 1, "id18", "proj_simplex"], [89, 3, 1, "id19", "projection_sparse_simplex"], [89, 3, 1, "id20", "tic"], [89, 3, 1, "id21", "toc"], [89, 3, 1, "id22", "toq"], [89, 3, 1, "id23", "unif"]], "ot.utils.BaseEstimator": [[89, 2, 1, "id1", "get_params"], [89, 2, 1, "id2", "set_params"]], "ot.utils.OTResult": [[89, 5, 1, "", "a_to_b"], [89, 5, 1, "", "b_to_a"], [89, 5, 1, "", "citation"], [89, 5, 1, "", "lazy_plan"], [89, 5, 1, "", "marginal_a"], [89, 5, 1, "", "marginal_b"], [89, 5, 1, "", "marginals"], [89, 5, 1, "", "plan"], [89, 5, 1, "", "potential_a"], [89, 5, 1, "", "potential_b"], [89, 5, 1, "", "potentials"], [89, 5, 1, "", "sparse_plan"], [89, 5, 1, "", "status"], [89, 5, 1, "", "value"], [89, 5, 1, "", "value_linear"]], "ot.weak": [[90, 3, 1, "id0", "weak_optimal_transport"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "modul": [0, 92], "main": 0, "ot": [0, 1, 5, 18, 19, 20, 21, 22, 23, 24, 25, 38, 42, 43, 49, 51, 53, 54, 55, 56, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92], "function": [0, 33, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "refer": [0, 85, 91, 92], "dual": [1, 5, 47, 49], "solver": [1, 31, 56, 92], "entrop": [1, 5, 11, 29, 40, 56, 65, 92], "quadrat": [1, 92], "regular": [1, 11, 22, 29, 38, 49, 56, 64, 65, 92], "pytorch": [1, 2, 3, 5, 6, 7, 8], "data": [1, 4, 5, 6, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 34, 40, 41, 42, 43, 44, 45, 46, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 64, 65], "gener": [1, 2, 4, 5, 6, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 35, 36, 40, 41, 42, 43, 44, 46, 50, 51, 52, 54, 56, 58, 59, 61, 62, 64, 65, 92], "plot": [1, 4, 5, 6, 8, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 30, 32, 33, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 61, 62, 63, 64, 65, 83], "convert": [1, 5], "torch": [1, 5], "tensor": [1, 5], "estim": [1, 2, 5, 6, 23, 24, 25, 35, 44, 92], "variabl": [1, 5, 49], "plan": [1, 5, 33, 40, 49, 63], "optim": [2, 6, 18, 20, 21, 22, 26, 39, 42, 43, 44, 46, 49, 50, 52, 53, 61, 64, 65, 81, 91, 92], "gromov": [2, 29, 30, 31, 32, 33, 34, 35, 36, 38, 63, 79, 92], "wasserstein": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 41, 49, 55, 58, 59, 62, 63, 92], "distanc": [2, 6, 20, 26, 30, 31, 33, 38, 44, 54, 55, 58, 63, 92], "graph": [2, 28, 29, 31, 32, 35, 36], "gw": [2, 30, 33, 92], "w": 2, "r": 2, "t": 2, "weight": [2, 6], "templat": 2, "structur": [2, 30], "commun": 2, "cluster": [2, 29, 31, 35, 36], "uniform": [2, 53, 55], "compress": 2, "slice": [3, 4, 38, 58, 59, 85], "barycent": [3, 7, 10, 11, 12, 13, 14, 15, 16, 28, 34, 38, 62, 92], "gradient": [3, 4], "flow": [3, 7], "anim": [3, 4, 8, 16, 64], "trajectori": [3, 4, 8], "along": [3, 4, 8], "iter": [3, 4, 8], "comput": [3, 9, 10, 12, 13, 14, 16, 17, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 41, 42, 43, 47, 48, 49, 52, 54, 57, 60, 62, 63, 64, 65, 66, 92], "descent": [3, 4], "spheric": [4, 59], "embed": [4, 35], "sphere": 4, "sampl": [4, 5, 8, 18, 20, 21, 22, 23, 24, 26, 33, 44, 53, 63], "continu": [5, 47], "deep": 5, "densiti": 5, "target": [5, 18, 20, 21, 22, 26], "given": 5, "sourc": [5, 6, 18, 20, 21, 22, 26], "unmix": 6, "model": [6, 8, 29, 31, 35, 36], "wrt": 6, "converg": 6, "object": 6, "reweight": 6, "distribut": [6, 14, 15, 20, 25, 33, 44, 46, 50, 51, 52, 58, 59, 61, 62, 63, 92], "1d": [7, 10, 11, 13, 50, 54, 61, 62], "2": [8, 18, 20, 21, 22, 26, 29, 31, 35, 36, 53, 59, 93], "minibatch": 8, "gan": 8, "train": [8, 32], "visual": [8, 12, 13, 29, 30, 31, 34, 35, 36, 44, 49], "time": [9, 17, 27, 37, 48, 49, 57, 60, 66], "demo": [10, 13, 16, 62], "barycentr": [10, 62], "interpol": [10, 15, 62], "exact": [11, 42, 43, 65], "lp": [11, 80], "v": [11, 26, 42], "gaussian": [11, 13, 33, 63, 77], "stair": 11, "dirac": 11, "final": 11, "figur": 11, "convolut": [12, 92], "exampl": [12, 29, 33, 34, 36, 38, 47, 51, 63, 65, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92], "prepar": [12, 34], "debias": 13, "sinkhorn": [13, 15, 21, 47, 49, 50, 52, 54, 61, 92], "2d": [13, 14, 15, 33, 41, 52, 58, 63, 65], "imag": [13, 19, 23, 25], "free": [14, 15, 92], "support": [14, 15, 91, 92], "paramet": [15, 49], "inspect": 15, "empir": [15, 20, 52], "project": [16, 40, 41, 58, 59], "match": [16, 29, 31, 36], "rotat": 16, "domain": [18, 20, 21, 22, 24, 25, 38, 92], "adapt": [18, 19, 20, 21, 22, 23, 24, 25, 38, 92], "instanti": [18, 19, 20, 21, 22, 24], "differ": [18, 19, 20, 22, 24, 26, 53, 54, 55, 58, 59], "transport": [18, 19, 20, 21, 22, 23, 24, 26, 30, 39, 40, 42, 43, 44, 46, 47, 49, 50, 52, 53, 61, 64, 65, 91, 92], "algorithm": [18, 19, 20, 21, 22, 24, 47, 49], "fit": [18, 19, 20, 21, 22, 24], "them": [18, 19, 20, 21, 22, 24, 33, 63], "fig": [18, 20, 21, 22, 26], "1": [18, 20, 21, 22, 26, 35, 53, 93], "coupl": [18, 20, 21, 22, 26, 43], "color": [19, 25], "origin": [19, 25], "scatter": 19, "new": [19, 68, 93], "matrix": [20, 26, 30, 46, 47, 49, 50, 51, 61], "pairwis": [20, 26], "method": [20, 26, 33], "3": [20, 26, 29, 31, 35, 36, 93], "multi": 21, "shift": 21, "all": 21, "jcpot": 21, "run": 21, "oracl": 21, "known": 21, "proport": 21, "laplacian": 22, "linear": [23, 35], "map": [23, 24, 25, 49, 92], "load": 23, "transform": [23, 25], "pixel": 25, "transfer": 25, "valu": 25, "otda": [26, 92], "unsupervis": 26, "semi": [26, 29, 36, 47, 64], "supervis": 26, "set": 26, "onto": 26, "us": [28, 32, 71, 72, 73, 74, 75, 77, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92], "fgw": [28, 30, 92], "relax": [29, 36, 64], "fuse": [29, 30, 31, 32, 35, 36, 38], "two": [29, 31, 33, 36, 63], "follow": [29, 31, 35, 36], "stochast": [29, 31, 33, 35, 36, 47, 87], "block": [29, 31, 35, 36], "diverg": [29, 36], "add": [29, 36], "node": [29, 35, 36], "featur": [29, 30, 35, 36, 93], "creat": 30, "matric": [30, 47, 53], "across": 30, "comparison": 31, "classif": 32, "tempat": 32, "base": 32, "pool": 32, "architectur": 32, "tfgw": 32, "layer": 32, "3d": [33, 63], "kernel": 33, "normal": 33, "displai": 33, "scalabl": 33, "ani": 33, "loss": [33, 46, 49, 50, 51, 54, 61], "smacof": 34, "md": 34, "dictionari": 35, "learn": [35, 44], "dataset": [35, 53, 74], "compos": 35, "from": 35, "atom": 35, "space": 35, "endow": 35, "attribut": [35, 67], "galleri": 38, "pot": [38, 45, 49, 68, 91, 92], "backend": [38, 70, 92], "other": [38, 92], "problem": [38, 47, 49], "unbalanc": [38, 61, 62, 64, 65, 88, 92], "partial": [38, 53, 63, 82, 92], "row": [39, 44], "column": [39, 44], "align": [39, 44], "co": [39, 44], "compon": 40, "analysi": [40, 41, 92], "ewca": [40, 75], "first": [40, 49, 93], "discrimin": [41, 92], "fisher": 41, "weak": [42, 90], "an": [42, 43, 92], "solut": [42, 43], "factor": [43, 76], "margin": 44, "coot": [44, 72], "respect": 44, "logo": 45, "toolbox": [45, 49, 91], "clear": 45, "background": 45, "dark": 45, "screen": 46, "screenkhorn": [46, 71], "solv": [46, 49, 50, 51, 56, 61, 92], "discret": 47, "case": [47, 92], "compar": [47, 55], "result": [47, 65], "introduct": 49, "python": [49, 91], "instal": [49, 91], "import": 49, "get": 49, "help": 49, "bakeri": 49, "citi": 49, "cost": 49, "emd": [49, 50, 52, 54, 56, 92], "vari": 49, "smooth": [51, 86], "spars": 51, "between": [52, 55, 92], "ground": 53, "metric": 53, "circl": [53, 55], "euclidean": 55, "von": 55, "mise": 55, "kappa": 55, "frobeniu": 56, "norm": 56, "seed": [58, 59], "number": [58, 59], "": 59, "mass": 61, "one": 63, "path": 64, "l2": [64, 65], "penal": 64, "fulli": 64, "regpath": [64, 84], "uot": [64, 65], "kl": 65, "code": [67, 91], "conduct": [67, 91], "our": 67, "pledg": 67, "standard": 67, "respons": 67, "scope": 67, "enforc": 67, "contribut": [68, 91], "how": [68, 92], "pull": 68, "request": 68, "checklist": 68, "file": 68, "bug": 68, "contributor": [68, 69], "tip": 68, "document": 68, "creator": 69, "maintain": 69, "acknowledg": [69, 91], "perform": 70, "class": [70, 73, 86, 89, 92], "bregman": [71, 92], "barycenter_debias": 71, "convolutional_barycenter2d": [71, 92], "convolutional_barycenter2d_debias": 71, "empirical_sinkhorn": 71, "free_support_sinkhorn_barycent": 71, "depend": [71, 91], "co_optimal_transport": 72, "co_optimal_transport2": 72, "da": 73, "basetransport": 73, "emdlaplacetransport": 73, "emdtransport": 73, "jcpottransport": 73, "lineartransport": 73, "mappingtransport": 73, "sinkhornl1l2transport": 73, "sinkhornlpl1transport": 73, "sinkhorntransport": 73, "make_1d_gauss": 74, "make_2d_samples_gauss": 74, "make_data_classif": 74, "dr": 75, "fda": 75, "wda": [75, 92], "empirical_bures_wasserstein_map": 77, "gnn": 78, "free_support_barycent": 80, "generalized_free_support_barycent": 80, "cg": 81, "gcg": 81, "entropic_partial_gromov_wasserstein": 82, "entropic_partial_wasserstein": 82, "partial_gromov_wasserstein": 82, "partial_wasserstein": 82, "plot1d_mat": 83, "plot2d_samples_mat": 83, "compute_transport_plan": 84, "regularization_path": 84, "smooth_ot_du": 86, "loss_dual_entrop": 87, "loss_dual_quadrat": 87, "plan_dual_entrop": 87, "plan_dual_quadrat": 87, "solve_dual_entrop": 87, "solve_semi_dual_entrop": 87, "mm_unbalanc": 88, "util": 89, "dist0": 89, "proj_simplex": 89, "baseestim": 89, "except": 89, "content": 91, "cite": 91, "pip": 91, "anaconda": 91, "conda": 91, "forg": 91, "post": 91, "check": 91, "short": 91, "notebook": 91, "indic": 91, "tabl": 91, "quick": 92, "start": 92, "guid": 92, "why": 92, "when": 92, "emd2": 92, "special": 92, "sinkhorn2": 92, "group": 92, "lasso": 92, "fix": 92, "mong": 92, "extens": 92, "g": 92, "applic": 92, "multipl": 92, "cpu": 92, "gpu": 92, "work": 92, "acceler": 92, "list": 92, "compat": 92, "faq": 92, "releas": 93, "0": 93, "9": 93, "1dev": 93, "close": 93, "issu": 93, "8": 93, "7": 93, "6": 93, "5": 93, "deprec": 93, "4": 93, "v0": 93, "11": 93, "10": 93, "pre": 93}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API and modules": [[0, "api-and-modules"]], "Main ot functions": [[0, "module-ot"]], "References:": [[0, "references"], [85, "references"], [85, "id12"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[1, "dual-ot-solvers-for-entropic-and-quadratic-regularized-ot-with-pytorch"]], "Data generation": [[1, "data-generation"], [4, "data-generation"], [5, "data-generation"], [8, "data-generation"]], "Plot data": [[1, "plot-data"], [4, "plot-data"], [5, "plot-data"], [6, "plot-data"], [8, "plot-data"], [23, "plot-data"], [24, "plot-data"], [28, "plot-data"], [30, "plot-data"], [32, "plot-data"], [40, "plot-data"], [41, "plot-data"], [52, "plot-data"], [54, "plot-data"], [55, "plot-data"], [58, "plot-data"], [59, "plot-data"], [62, "plot-data"], [64, "plot-data"]], "Convert data to torch tensors": [[1, "convert-data-to-torch-tensors"], [5, "convert-data-to-torch-tensors"]], "Estimating dual variables for entropic OT": [[1, "estimating-dual-variables-for-entropic-ot"]], "Plot the estimated entropic OT plan": [[1, "plot-the-estimated-entropic-ot-plan"]], "Estimating dual variables for quadratic OT": [[1, "estimating-dual-variables-for-quadratic-ot"]], "Plot the estimated quadratic OT plan": [[1, "plot-the-estimated-quadratic-ot-plan"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[2, "optimizing-the-gromov-wasserstein-distance-with-pytorch"]], "Graph generation": [[2, "graph-generation"]], "Optimizing GW w.r.t. the weights on a template structure": [[2, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Community clustering with uniform and estimated weights": [[2, "community-clustering-with-uniform-and-estimated-weights"]], "Graph compression with GW": [[2, "graph-compression-with-gw"]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[3, "sliced-wasserstein-barycenter-and-gradient-flow-with-pytorch"]], "Sliced Wasserstein gradient flow with Pytorch": [[3, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Animate trajectories of the gradient flow along iteration": [[3, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Compute the Sliced Wasserstein Barycenter": [[3, "compute-the-sliced-wasserstein-barycenter"]], "Animate trajectories of the barycenter along gradient descent": [[3, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[4, "spherical-sliced-wasserstein-embedding-on-sphere"]], "Gradient descent": [[4, "gradient-descent"]], "Plot trajectories of generated samples along iterations": [[4, "plot-trajectories-of-generated-samples-along-iterations"], [8, "plot-trajectories-of-generated-samples-along-iterations"]], "Animate trajectories of generated samples along iteration": [[4, "animate-trajectories-of-generated-samples-along-iteration"], [8, "animate-trajectories-of-generated-samples-along-iteration"]], "Continuous OT plan estimation with Pytorch": [[5, "continuous-ot-plan-estimation-with-pytorch"]], "Estimating deep dual variables for entropic OT": [[5, "estimating-deep-dual-variables-for-entropic-ot"]], "Plot the density on target for a given source sample": [[5, "plot-the-density-on-target-for-a-given-source-sample"]], "Wasserstein unmixing with PyTorch": [[6, "wasserstein-unmixing-with-pytorch"]], "Generate data": [[6, "generate-data"], [10, "generate-data"], [14, "generate-data"], [18, "generate-data"], [19, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [28, "generate-data"], [30, "generate-data"], [32, "generate-data"], [40, "generate-data"], [41, "generate-data"], [44, "generate-data"], [46, "generate-data"], [50, "generate-data"], [51, "generate-data"], [52, "generate-data"], [54, "generate-data"], [56, "generate-data"], [58, "generate-data"], [59, "generate-data"], [61, "generate-data"], [62, "generate-data"], [64, "generate-data"], [65, "generate-data"]], "Optimization of the model wrt the Wasserstein distance": [[6, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Estimated weights and convergence of the objective": [[6, "estimated-weights-and-convergence-of-the-objective"]], "Plotting the reweighted source distribution": [[6, "plotting-the-reweighted-source-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[7, "wasserstein-1d-flow-and-barycenter-with-pytorch"]], "Wasserstein barycenter": [[7, "wasserstein-barycenter"]], "Wasserstein 2 Minibatch GAN with PyTorch": [[8, "wasserstein-2-minibatch-gan-with-pytorch"]], "Generator Model": [[8, "generator-model"]], "Training the model": [[8, "training-the-model"]], "Generate and visualize data": [[8, "generate-and-visualize-data"]], "Computation times": [[9, "computation-times"], [17, "computation-times"], [27, "computation-times"], [37, "computation-times"], [48, "computation-times"], [57, "computation-times"], [60, "computation-times"], [66, "computation-times"]], "1D Wasserstein barycenter demo": [[10, "d-wasserstein-barycenter-demo"]], "Barycenter computation": [[10, "barycenter-computation"], [28, "barycenter-computation"], [34, "barycenter-computation"], [62, "barycenter-computation"]], "Barycentric interpolation": [[10, "barycentric-interpolation"], [62, "barycentric-interpolation"]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[11, "d-wasserstein-barycenter-exact-lp-vs-entropic-regularization"]], "Gaussian Data": [[11, "gaussian-data"]], "Stair Data": [[11, "stair-data"]], "Dirac Data": [[11, "dirac-data"]], "Final figure": [[11, "final-figure"]], "Convolutional Wasserstein Barycenter example": [[12, "convolutional-wasserstein-barycenter-example"]], "Data preparation": [[12, "data-preparation"], [34, "data-preparation"]], "Barycenter computation and visualization": [[12, "barycenter-computation-and-visualization"], [13, "barycenter-computation-and-visualization"]], "Debiased Sinkhorn barycenter demo": [[13, "debiased-sinkhorn-barycenter-demo"]], "Debiased barycenter of 1D Gaussians": [[13, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[13, "debiased-barycenter-of-2d-images"]], "2D free support Wasserstein barycenters of distributions": [[14, "d-free-support-wasserstein-barycenters-of-distributions"]], "Compute free support Wasserstein barycenter": [[14, "compute-free-support-wasserstein-barycenter"]], "Plot the Wasserstein barycenter": [[14, "plot-the-wasserstein-barycenter"], [14, "id1"]], "2D free support Sinkhorn barycenters of distributions": [[15, "d-free-support-sinkhorn-barycenters-of-distributions"]], "General Parameters": [[15, "general-parameters"]], "Generate Data": [[15, "generate-data"]], "Inspect generated distributions": [[15, "inspect-generated-distributions"]], "Interpolating Empirical Distributions": [[15, "interpolating-empirical-distributions"]], "Generalized Wasserstein Barycenter Demo": [[16, "generalized-wasserstein-barycenter-demo"]], "Generate and plot data": [[16, "generate-and-plot-data"]], "Barycenter computation and plot": [[16, "barycenter-computation-and-plot"]], "Plotting projection matches": [[16, "plotting-projection-matches"]], "Rotation animation": [[16, "rotation-animation"]], "OT for domain adaptation": [[18, "ot-for-domain-adaptation"]], "Instantiate the different transport algorithms and fit them": [[18, "instantiate-the-different-transport-algorithms-and-fit-them"], [19, "instantiate-the-different-transport-algorithms-and-fit-them"], [20, "instantiate-the-different-transport-algorithms-and-fit-them"], [22, "instantiate-the-different-transport-algorithms-and-fit-them"], [24, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Fig 1 : plots source and target samples": [[18, "fig-1-plots-source-and-target-samples"], [21, "fig-1-plots-source-and-target-samples"], [22, "fig-1-plots-source-and-target-samples"]], "Fig 2 : plot optimal couplings and transported samples": [[18, "fig-2-plot-optimal-couplings-and-transported-samples"], [21, "fig-2-plot-optimal-couplings-and-transported-samples"], [22, "fig-2-plot-optimal-couplings-and-transported-samples"]], "OT for image color adaptation": [[19, "ot-for-image-color-adaptation"]], "Plot original image": [[19, "plot-original-image"]], "Scatter plot of colors": [[19, "scatter-plot-of-colors"]], "Plot new images": [[19, "plot-new-images"]], "OT for domain adaptation on empirical distributions": [[20, "ot-for-domain-adaptation-on-empirical-distributions"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[20, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [26, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plots optimal couplings for the different methods": [[20, "fig-2-plots-optimal-couplings-for-the-different-methods"], [26, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[20, "fig-3-plot-transported-samples"], [26, "fig-3-plot-transported-samples"]], "OT for multi-source target shift": [[21, "ot-for-multi-source-target-shift"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[21, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate JCPOT adaptation algorithm and fit it": [[21, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Run oracle transport algorithm with known proportions": [[21, "run-oracle-transport-algorithm-with-known-proportions"]], "OT with Laplacian regularization for domain adaptation": [[22, "ot-with-laplacian-regularization-for-domain-adaptation"]], "Linear OT mapping estimation": [[23, "linear-ot-mapping-estimation"]], "Estimate linear mapping and transport": [[23, "estimate-linear-mapping-and-transport"]], "Plot transported samples": [[23, "plot-transported-samples"], [24, "plot-transported-samples"]], "Load image data": [[23, "load-image-data"]], "Estimate mapping and adapt": [[23, "estimate-mapping-and-adapt"]], "Plot transformed images": [[23, "plot-transformed-images"], [25, "plot-transformed-images"]], "OT mapping estimation for domain adaptation": [[24, "ot-mapping-estimation-for-domain-adaptation"]], "OT for image color adaptation with mapping estimation": [[25, "ot-for-image-color-adaptation-with-mapping-estimation"]], "Domain adaptation for pixel distribution transfer": [[25, "domain-adaptation-for-pixel-distribution-transfer"]], "Plot original images": [[25, "plot-original-images"]], "Plot pixel values distribution": [[25, "plot-pixel-values-distribution"]], "OTDA unsupervised vs semi-supervised setting": [[26, "otda-unsupervised-vs-semi-supervised-setting"]], "Transport source samples onto target samples": [[26, "transport-source-samples-onto-target-samples"]], "Plot graphs barycenter using FGW": [[28, "plot-graphs-barycenter-using-fgw"]], "Plot Barycenter": [[28, "plot-barycenter"]], "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example": [[29, "entropic-regularized-semi-relaxed-fused-gromov-wasserstein-example"]], "Generate two graphs following Stochastic Block models of 2 and 3 clusters.": [[29, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [31, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [36, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"]], "Compute their entropic-regularized semi-relaxed Gromov-Wasserstein divergences": [[29, "compute-their-entropic-regularized-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the entropic-regularized semi-relaxed Gromov-Wasserstein matchings": [[29, "visualization-of-the-entropic-regularized-semi-relaxed-gromov-wasserstein-matchings"]], "Add node features": [[29, "add-node-features"], [36, "add-node-features"]], "Compute their semi-relaxed Fused Gromov-Wasserstein divergences": [[29, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"], [36, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"]], "Visualization of the entropic semi-relaxed Fused Gromov-Wasserstein matchings": [[29, "visualization-of-the-entropic-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Plot Fused-Gromov-Wasserstein": [[30, "plot-fused-gromov-wasserstein"]], "Create structure matrices and across-feature distance matrix": [[30, "create-structure-matrices-and-across-feature-distance-matrix"]], "Plot matrices": [[30, "plot-matrices"]], "Compute FGW/GW": [[30, "compute-fgw-gw"]], "Visualize transport matrices": [[30, "visualize-transport-matrices"]], "Comparison of Fused Gromov-Wasserstein solvers": [[31, "comparison-of-fused-gromov-wasserstein-solvers"]], "Compute their Fused Gromov-Wasserstein distances": [[31, "compute-their-fused-gromov-wasserstein-distances"]], "Visualization of the Fused Gromov-Wasserstein matchings": [[31, "visualization-of-the-fused-gromov-wasserstein-matchings"]], "Graph classification with Tempate Based Fused Gromov Wasserstein": [[32, "graph-classification-with-tempate-based-fused-gromov-wasserstein"]], "Pooling architecture using the TFGW layer": [[32, "pooling-architecture-using-the-tfgw-layer"]], "Graph classification training": [[32, "graph-classification-training"]], "Gromov-Wasserstein example": [[33, "gromov-wasserstein-example"]], "Sample two Gaussian distributions (2D and 3D)": [[33, "sample-two-gaussian-distributions-2d-and-3d"]], "Plotting the distributions": [[33, "plotting-the-distributions"]], "Compute distance kernels, normalize them and then display": [[33, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute Gromov-Wasserstein plans and distance": [[33, "compute-gromov-wasserstein-plans-and-distance"]], "Compute GW with scalable stochastic methods with any loss function": [[33, "compute-gw-with-scalable-stochastic-methods-with-any-loss-function"]], "Gromov-Wasserstein Barycenter example": [[34, "gromov-wasserstein-barycenter-example"]], "Smacof MDS": [[34, "smacof-mds"]], "Visualization": [[34, "visualization"]], "(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[35, "fused-gromov-wasserstein-linear-dictionary-learning"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[35, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Estimate the Gromov-Wasserstein dictionary from the dataset": [[35, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Visualization of the estimated dictionary atoms": [[35, "visualization-of-the-estimated-dictionary-atoms"], [35, "id1"]], "Visualization of the embedding space": [[35, "visualization-of-the-embedding-space"], [35, "id2"]], "Endow the dataset with node features": [[35, "endow-the-dataset-with-node-features"]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[35, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Semi-relaxed (Fused) Gromov-Wasserstein example": [[36, "semi-relaxed-fused-gromov-wasserstein-example"]], "Compute their semi-relaxed Gromov-Wasserstein divergences": [[36, "compute-their-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the semi-relaxed Gromov-Wasserstein matchings": [[36, "visualization-of-the-semi-relaxed-gromov-wasserstein-matchings"]], "Visualization of the semi-relaxed Fused Gromov-Wasserstein matchings": [[36, "visualization-of-the-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Examples gallery": [[38, "examples-gallery"]], "OT and regularized OT": [[38, "ot-and-regularized-ot"]], "POT backend examples": [[38, "pot-backend-examples"]], "Wasserstein barycenters": [[38, "wasserstein-barycenters"]], "Domain adaptation examples": [[38, "domain-adaptation-examples"]], "Gromov and Fused-Gromov-Wasserstein": [[38, "gromov-and-fused-gromov-wasserstein"]], "Other OT problems": [[38, "other-ot-problems"]], "Sliced Wasserstein Distance": [[38, "sliced-wasserstein-distance"]], "Unbalanced and Partial OT": [[38, "unbalanced-and-partial-ot"]], "Row and column alignments with CO-Optimal Transport": [[39, "row-and-column-alignments-with-co-optimal-transport"]], "Entropic Wasserstein Component Analysis": [[40, "entropic-wasserstein-component-analysis"]], "Compute EWCA": [[40, "compute-ewca"]], "Plot data, first component, and projected data": [[40, "plot-data-first-component-and-projected-data"]], "Plot transport plan": [[40, "plot-transport-plan"]], "Wasserstein Discriminant Analysis": [[41, "wasserstein-discriminant-analysis"], [92, "wasserstein-discriminant-analysis"]], "Compute Fisher Discriminant Analysis": [[41, "compute-fisher-discriminant-analysis"]], "Compute Wasserstein Discriminant Analysis": [[41, "compute-wasserstein-discriminant-analysis"]], "Plot 2D projections": [[41, "plot-2d-projections"]], "Weak Optimal Transport VS exact Optimal Transport": [[42, "weak-optimal-transport-vs-exact-optimal-transport"]], "Generate data an plot it": [[42, "generate-data-an-plot-it"], [43, "generate-data-an-plot-it"]], "Compute Weak OT and exact OT solutions": [[42, "compute-weak-ot-and-exact-ot-solutions"]], "Plot weak OT and exact OT solutions": [[42, "plot-weak-ot-and-exact-ot-solutions"]], "Optimal transport with factored couplings": [[43, "optimal-transport-with-factored-couplings"]], "Compute Factored OT and exact OT solutions": [[43, "compute-factored-ot-and-exact-ot-solutions"]], "Plot factored OT and exact OT solutions": [[43, "plot-factored-ot-and-exact-ot-solutions"]], "Learning sample marginal distribution with CO-Optimal Transport": [[44, "learning-sample-marginal-distribution-with-co-optimal-transport"]], "Optimize the COOT distance with respect to the sample marginal distribution": [[44, "optimize-the-coot-distance-with-respect-to-the-sample-marginal-distribution"]], "Visualizing the row and column alignments with the estimated sample marginal distribution": [[44, "visualizing-the-row-and-column-alignments-with-the-estimated-sample-marginal-distribution"]], "Logo of the POT toolbox": [[45, "logo-of-the-pot-toolbox"]], "Data for logo": [[45, "data-for-logo"]], "Plot the logo (clear background)": [[45, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[45, "plot-the-logo-dark-background"]], "Screened optimal transport (Screenkhorn)": [[46, "screened-optimal-transport-screenkhorn"]], "Plot distributions and loss matrix": [[46, "plot-distributions-and-loss-matrix"], [50, "plot-distributions-and-loss-matrix"], [51, "plot-distributions-and-loss-matrix"], [61, "plot-distributions-and-loss-matrix"]], "Solve Screenkhorn": [[46, "solve-screenkhorn"]], "Stochastic examples": [[47, "stochastic-examples"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[47, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Discrete case": [[47, "discrete-case"]], "Semi-Continuous Case": [[47, "semi-continuous-case"]], "Plot Transportation Matrices": [[47, "plot-transportation-matrices"], [47, "id2"]], "Compute the Transportation Matrix for the Dual Problem": [[47, "compute-the-transportation-matrix-for-the-dual-problem"]], "Semi-continuous case": [[47, "id1"]], "Compare the results with the Sinkhorn algorithm": [[47, "compare-the-results-with-the-sinkhorn-algorithm"]], "Introduction to Optimal Transport with Python": [[49, "introduction-to-optimal-transport-with-python"]], "POT Python Optimal Transport Toolbox": [[49, "pot-python-optimal-transport-toolbox"]], "POT installation": [[49, "pot-installation"]], "Import the toolbox": [[49, "import-the-toolbox"]], "Getting help": [[49, "getting-help"]], "First OT Problem": [[49, "first-ot-problem"]], "Plotting bakeries in the city": [[49, "plotting-bakeries-in-the-city"]], "Cost matrix": [[49, "cost-matrix"]], "Solving the OT problem with ot.emd": [[49, "solving-the-ot-problem-with-ot-emd"]], "Transportation plan visualization": [[49, "transportation-plan-visualization"]], "OT loss and dual variables": [[49, "ot-loss-and-dual-variables"]], "Regularized OT with Sinkhorn": [[49, "regularized-ot-with-sinkhorn"]], "Algorithm": [[49, "algorithm"]], "Plot the matrix and the map": [[49, "plot-the-matrix-and-the-map"]], "Varying the regularization parameter in Sinkhorn": [[49, "varying-the-regularization-parameter-in-sinkhorn"]], "Wasserstein loss and computational time": [[49, "wasserstein-loss-and-computational-time"]], "Optimal Transport for 1D distributions": [[50, "optimal-transport-for-1d-distributions"]], "Solve EMD": [[50, "solve-emd"], [56, "solve-emd"]], "Solve Sinkhorn": [[50, "solve-sinkhorn"]], "Smooth and sparse OT example": [[51, "smooth-and-sparse-ot-example"]], "Solve Smooth OT": [[51, "solve-smooth-ot"]], "Optimal Transport between 2D empirical distributions": [[52, "optimal-transport-between-2d-empirical-distributions"]], "Compute EMD": [[52, "compute-emd"]], "Compute Sinkhorn": [[52, "compute-sinkhorn"]], "Empirical Sinkhorn": [[52, "empirical-sinkhorn"]], "Optimal Transport with different ground metrics": [[53, "optimal-transport-with-different-ground-metrics"]], "Dataset 1 : uniform sampling": [[53, "dataset-1-uniform-sampling"]], "Dataset 1 : Plot OT Matrices": [[53, "dataset-1-plot-ot-matrices"]], "Dataset 2 : Partial circle": [[53, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[53, "dataset-2-plot-ot-matrices"]], "OT distances in 1D": [[54, "ot-distances-in-1d"]], "Compute EMD for the different losses": [[54, "compute-emd-for-the-different-losses"]], "Compute Sinkhorn for the different losses": [[54, "compute-sinkhorn-for-the-different-losses"]], "OT distance on the Circle": [[55, "ot-distance-on-the-circle"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[55, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Wasserstein distance between von Mises and uniform for different kappa": [[55, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Regularized OT with generic solver": [[56, "regularized-ot-with-generic-solver"]], "Solve EMD with Frobenius norm regularization": [[56, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[56, "solve-emd-with-entropic-regularization"]], "Solve EMD with Frobenius norm + entropic regularization": [[56, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Sliced Wasserstein Distance on 2D distributions": [[58, "sliced-wasserstein-distance-on-2d-distributions"]], "Sliced Wasserstein distance for different seeds and number of projections": [[58, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Plot Sliced Wasserstein Distance": [[58, "plot-sliced-wasserstein-distance"]], "Spherical Sliced Wasserstein on distributions in S^2": [[59, "spherical-sliced-wasserstein-on-distributions-in-s-2"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[59, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Plot Spherical Sliced Wasserstein": [[59, "plot-spherical-sliced-wasserstein"]], "1D Unbalanced optimal transport": [[61, "d-unbalanced-optimal-transport"]], "Solve Unbalanced Sinkhorn": [[61, "solve-unbalanced-sinkhorn"]], "plot the transported mass": [[61, "plot-the-transported-mass"]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[62, "d-wasserstein-barycenter-demo-for-unbalanced-distributions"]], "Partial Wasserstein and Gromov-Wasserstein example": [[63, "partial-wasserstein-and-gromov-wasserstein-example"]], "Sample two 2D Gaussian distributions and plot them": [[63, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Compute partial Wasserstein plans and distance": [[63, "compute-partial-wasserstein-plans-and-distance"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[63, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Compute partial Gromov-Wasserstein plans and distance": [[63, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Regularization path of l2-penalized unbalanced optimal transport": [[64, "regularization-path-of-l2-penalized-unbalanced-optimal-transport"]], "Compute semi-relaxed and fully relaxed regularization paths": [[64, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Plot the regularization path": [[64, "plot-the-regularization-path"]], "Animation of the regpath for UOT l2": [[64, "animation-of-the-regpath-for-uot-l2"]], "Plot the semi-relaxed regularization path": [[64, "plot-the-semi-relaxed-regularization-path"]], "Animation of the regpath for semi-relaxed UOT l2": [[64, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "2D examples of exact and entropic unbalanced optimal transport": [[65, "d-examples-of-exact-and-entropic-unbalanced-optimal-transport"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[65, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Plot the results": [[65, "plot-the-results"]], "Code of conduct": [[67, "code-of-conduct"]], "Our Pledge": [[67, "our-pledge"]], "Our Standards": [[67, "our-standards"]], "Our Responsibilities": [[67, "our-responsibilities"]], "Scope": [[67, "scope"]], "Enforcement": [[67, "enforcement"]], "Attribution": [[67, "attribution"]], "Contributing to POT": [[68, "contributing-to-pot"]], "How to contribute": [[68, "how-to-contribute"]], "Pull Request Checklist": [[68, "pull-request-checklist"]], "Filing bugs": [[68, "filing-bugs"]], "New contributor tips": [[68, "new-contributor-tips"]], "Documentation": [[68, "documentation"]], "Contributors": [[69, "contributors"], [69, "contributors"]], "Creators and Maintainers": [[69, "creators-and-maintainers"]], "Acknowledgments": [[69, "acknowledgments"]], "ot.backend": [[70, "module-ot.backend"]], "Performance": [[70, "performance"]], "Functions": [[70, "functions"], [71, "functions"], [72, "functions"], [73, "functions"], [74, "functions"], [75, "functions"], [76, "functions"], [77, "functions"], [80, "functions"], [81, "functions"], [82, "functions"], [83, "functions"], [84, "functions"], [85, "functions"], [86, "functions"], [87, "functions"], [88, "functions"], [89, "functions"], [90, "functions"]], "Classes": [[70, "classes"], [73, "classes"], [86, "classes"], [89, "classes"]], "ot.bregman": [[71, "module-ot.bregman"]], "Examples using ot.bregman.barycenter_debiased": [[71, "examples-using-ot-bregman-barycenter-debiased"]], "Examples using ot.bregman.convolutional_barycenter2d": [[71, "examples-using-ot-bregman-convolutional-barycenter2d"]], "Examples using ot.bregman.convolutional_barycenter2d_debiased": [[71, "examples-using-ot-bregman-convolutional-barycenter2d-debiased"]], "Examples using ot.bregman.empirical_sinkhorn": [[71, "examples-using-ot-bregman-empirical-sinkhorn"]], "Examples using ot.bregman.free_support_sinkhorn_barycenter": [[71, "examples-using-ot-bregman-free-support-sinkhorn-barycenter"]], "Dependency": [[71, null], [71, null]], "Examples using ot.bregman.screenkhorn": [[71, "examples-using-ot-bregman-screenkhorn"]], "ot.coot": [[72, "module-ot.coot"]], "Examples using ot.coot.co_optimal_transport": [[72, "examples-using-ot-coot-co-optimal-transport"]], "Examples using ot.coot.co_optimal_transport2": [[72, "examples-using-ot-coot-co-optimal-transport2"]], "ot.da": [[73, "module-ot.da"]], "Examples using ot.da.BaseTransport": [[73, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[73, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[73, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[73, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearTransport": [[73, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[73, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[73, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[73, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[73, "examples-using-ot-da-sinkhorntransport"]], "ot.datasets": [[74, "module-ot.datasets"]], "Examples using ot.datasets.make_1D_gauss": [[74, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[74, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[74, "examples-using-ot-datasets-make-data-classif"]], "ot.dr": [[75, "module-ot.dr"]], "Examples using ot.dr.ewca": [[75, "examples-using-ot-dr-ewca"]], "Examples using ot.dr.fda": [[75, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[75, "examples-using-ot-dr-wda"]], "ot.factored": [[76, "module-ot.factored"]], "ot.gaussian": [[77, "module-ot.gaussian"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[77, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "ot.gnn": [[78, "module-ot.gnn"]], "ot.gromov": [[79, "module-ot.gromov"]], "ot.lp": [[80, "module-ot.lp"]], "Examples using ot.lp.free_support_barycenter": [[80, "examples-using-ot-lp-free-support-barycenter"]], "Examples using ot.lp.generalized_free_support_barycenter": [[80, "examples-using-ot-lp-generalized-free-support-barycenter"]], "ot.optim": [[81, "module-ot.optim"]], "Examples using ot.optim.cg": [[81, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[81, "examples-using-ot-optim-gcg"]], "ot.partial": [[82, "module-ot.partial"]], "Examples using ot.partial.entropic_partial_gromov_wasserstein": [[82, "examples-using-ot-partial-entropic-partial-gromov-wasserstein"]], "Examples using ot.partial.entropic_partial_wasserstein": [[82, "examples-using-ot-partial-entropic-partial-wasserstein"]], "Examples using ot.partial.partial_gromov_wasserstein": [[82, "examples-using-ot-partial-partial-gromov-wasserstein"]], "Examples using ot.partial.partial_wasserstein": [[82, "examples-using-ot-partial-partial-wasserstein"]], "ot.plot": [[83, "module-ot.plot"]], "Examples using ot.plot.plot1D_mat": [[83, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[83, "examples-using-ot-plot-plot2d-samples-mat"]], "ot.regpath": [[84, "module-ot.regpath"]], "Examples using ot.regpath.compute_transport_plan": [[84, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[84, "examples-using-ot-regpath-regularization-path"]], "ot.sliced": [[85, "module-ot.sliced"]], "ot.smooth": [[86, "module-ot.smooth"]], "Examples using ot.smooth.smooth_ot_dual": [[86, "examples-using-ot-smooth-smooth-ot-dual"]], "ot.stochastic": [[87, "module-ot.stochastic"]], "Examples using ot.stochastic.loss_dual_entropic": [[87, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[87, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[87, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[87, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[87, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[87, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "ot.unbalanced": [[88, "module-ot.unbalanced"]], "Examples using ot.unbalanced.mm_unbalanced": [[88, "examples-using-ot-unbalanced-mm-unbalanced"]], "ot.utils": [[89, "module-ot.utils"]], "Examples using ot.utils.dist0": [[89, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_simplex": [[89, "examples-using-ot-utils-proj-simplex"]], "Examples using ot.utils.BaseEstimator": [[89, "examples-using-ot-utils-baseestimator"]], "Exceptions": [[89, "exceptions"]], "ot.weak": [[90, "module-ot.weak"]], "POT: Python Optimal Transport": [[91, "pot-python-optimal-transport"], [91, "pot-python-optimal-transport"]], "Contents": [[91, "contents"]], "Using and citing the toolbox": [[91, "using-and-citing-the-toolbox"]], "Installation": [[91, "installation"]], "Pip installation": [[91, "pip-installation"]], "Anaconda installation with conda-forge": [[91, "anaconda-installation-with-conda-forge"]], "Post installation check": [[91, "post-installation-check"]], "Dependencies": [[91, "dependencies"]], "Examples": [[91, "examples"]], "Short examples": [[91, "short-examples"]], "Examples and Notebooks": [[91, "examples-and-notebooks"]], "Acknowledgements": [[91, "acknowledgements"]], "Contributions and code of conduct": [[91, "contributions-and-code-of-conduct"]], "Support": [[91, "support"]], "References": [[91, "references"], [92, "references"]], "Indices and tables": [[91, "indices-and-tables"]], "Quick start guide": [[92, "quick-start-guide"]], "Why Optimal Transport ?": [[92, "why-optimal-transport"]], "When to use OT": [[92, "when-to-use-ot"]], "Wasserstein distance between distributions": [[92, "wasserstein-distance-between-distributions"]], "OT for mapping estimation": [[92, "ot-for-mapping-estimation"]], "When to use POT": [[92, "when-to-use-pot"]], "When not to use POT": [[92, "when-not-to-use-pot"]], "Optimal transport and Wasserstein distance": [[92, "optimal-transport-and-wasserstein-distance"]], "Solving optimal transport": [[92, "solving-optimal-transport"]], "Examples of use for ot.emd": [[92, "examples-of-use-for-ot-emd"]], "Computing Wasserstein distance": [[92, "computing-wasserstein-distance"]], "Examples of use for ot.emd2": [[92, "examples-of-use-for-ot-emd2"]], "Special cases": [[92, "special-cases"]], "Regularized Optimal Transport": [[92, "regularized-optimal-transport"]], "Entropic regularized OT": [[92, "entropic-regularized-ot"]], "Examples of use for ot.sinkhorn": [[92, "examples-of-use-for-ot-sinkhorn"]], "Examples of use for ot.sinkhorn2": [[92, "examples-of-use-for-ot-sinkhorn2"]], "Other regularizations": [[92, "other-regularizations"]], "Quadratic regularization": [[92, "quadratic-regularization"]], "Examples of use of quadratic regularization": [[92, "examples-of-use-of-quadratic-regularization"]], "Group Lasso regularization": [[92, "group-lasso-regularization"]], "Examples of group Lasso regularization": [[92, "examples-of-group-lasso-regularization"]], "Generic solvers": [[92, "generic-solvers"]], "Examples of the generic solvers": [[92, "examples-of-the-generic-solvers"]], "Wasserstein Barycenters": [[92, "wasserstein-barycenters"]], "Barycenters with fixed support": [[92, "barycenters-with-fixed-support"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[92, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[92, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Barycenters with free support": [[92, "barycenters-with-free-support"]], "Examples of free support barycenter estimation": [[92, "examples-of-free-support-barycenter-estimation"]], "Monge mapping and Domain adaptation": [[92, "monge-mapping-and-domain-adaptation"]], "Monge Mapping estimation": [[92, "monge-mapping-estimation"]], "Domain adaptation classes": [[92, "domain-adaptation-classes"]], "Examples of the use of OTDA classes": [[92, "examples-of-the-use-of-otda-classes"]], "Unbalanced and partial OT": [[92, "unbalanced-and-partial-ot"]], "Unbalanced optimal transport": [[92, "unbalanced-optimal-transport"]], "Examples of Unbalanced OT": [[92, "examples-of-unbalanced-ot"]], "Unbalanced Barycenters": [[92, "unbalanced-barycenters"]], "Examples of Unbalanced OT barycenters": [[92, "examples-of-unbalanced-ot-barycenters"]], "Partial optimal transport": [[92, "partial-optimal-transport"]], "Examples of Partial OT": [[92, "examples-of-partial-ot"]], "Gromov Wasserstein and extensions": [[92, "gromov-wasserstein-and-extensions"]], "Gromov Wasserstein(GW)": [[92, "gromov-wasserstein-gw"]], "Examples of computation of GW, regularized G and FGW": [[92, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Gromov Wasserstein barycenters": [[92, "gromov-wasserstein-barycenters"]], "Examples of GW, regularized G and FGW barycenters": [[92, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Other applications": [[92, "other-applications"]], "Examples of the use of WDA": [[92, "examples-of-the-use-of-wda"]], "Solving OT with Multiple backends on CPU/GPU": [[92, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "How it works": [[92, "how-it-works"]], "GPU acceleration": [[92, "gpu-acceleration"]], "List of compatible Backends": [[92, "list-of-compatible-backends"]], "List of compatible modules": [[92, "list-of-compatible-modules"]], "FAQ": [[92, "faq"]], "Releases": [[93, "releases"]], "0.9.1dev": [[93, "dev"]], "New features": [[93, "new-features"], [93, "id2"], [93, "id5"], [93, "id10"], [93, "id13"]], "Closed issues": [[93, "closed-issues"], [93, "id3"], [93, "id6"], [93, "id8"], [93, "id11"], [93, "id14"], [93, "id16"], [93, "id19"], [93, "id22"], [93, "id25"]], "0.9.0": [[93, "id1"]], "0.8.2": [[93, "id4"]], "0.8.1.0": [[93, "id7"]], "0.8.1": [[93, "id9"]], "0.8.0": [[93, "id12"]], "0.7.0": [[93, "id15"]], "Features": [[93, "features"], [93, "id18"], [93, "id21"], [93, "id24"]], "0.6.0": [[93, "id17"]], "0.5.0": [[93, "id20"]], "Deprecation": [[93, "deprecation"]], "0.4": [[93, "id23"]], "0.3.1": [[93, "id26"]], "0.3": [[93, "id27"]], "V0.2": [[93, "v0-2"]], "0.1.11": [[93, "id28"]], "0.1.10": [[93, "id29"]], "0.1.9": [[93, "id30"]], "0.1.7": [[93, "id31"]], "0.1.3": [[93, "id32"]], "First pre-release": [[93, "first-pre-release"]]}, "indexentries": {"barycenter() (in module ot)": [[0, "ot.barycenter"]], "barycenter_unbalanced() (in module ot)": [[0, "ot.barycenter_unbalanced"]], "binary_search_circle() (in module ot)": [[0, "ot.binary_search_circle"]], "dist() (in module ot)": [[0, "ot.dist"]], "emd() (in module ot)": [[0, "ot.emd"]], "emd2() (in module ot)": [[0, "ot.emd2"]], "emd2_1d() (in module ot)": [[0, "ot.emd2_1d"]], "emd_1d() (in module ot)": [[0, "ot.emd_1d"]], "factored_optimal_transport() (in module ot)": [[0, "ot.factored_optimal_transport"]], "fused_gromov_wasserstein() (in module ot)": [[0, "ot.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot)": [[0, "ot.fused_gromov_wasserstein2"]], "gromov_barycenters() (in module ot)": [[0, "ot.gromov_barycenters"]], "gromov_wasserstein() (in module ot)": [[0, "ot.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot)": [[0, "ot.gromov_wasserstein2"]], "max_sliced_wasserstein_distance() (in module ot)": [[0, "ot.max_sliced_wasserstein_distance"]], "module": [[0, "module-ot"], [70, "module-ot.backend"], [71, "module-ot.bregman"], [72, "module-ot.coot"], [73, "module-ot.da"], [74, "module-ot.datasets"], [75, "module-ot.dr"], [76, "module-ot.factored"], [77, "module-ot.gaussian"], [78, "module-ot.gnn"], [79, "module-ot.gromov"], [80, "module-ot.lp"], [81, "module-ot.optim"], [82, "module-ot.partial"], [83, "module-ot.plot"], [84, "module-ot.regpath"], [85, "module-ot.sliced"], [86, "module-ot.smooth"], [87, "module-ot.stochastic"], [88, "module-ot.unbalanced"], [89, "module-ot.utils"], [90, "module-ot.weak"]], "ot": [[0, "module-ot"]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[0, "ot.semidiscrete_wasserstein2_unif_circle"]], "sinkhorn() (in module ot)": [[0, "ot.sinkhorn"]], "sinkhorn2() (in module ot)": [[0, "ot.sinkhorn2"]], "sinkhorn_lpl1_mm() (in module ot)": [[0, "ot.sinkhorn_lpl1_mm"]], "sinkhorn_unbalanced() (in module ot)": [[0, "ot.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot)": [[0, "ot.sinkhorn_unbalanced2"]], "sliced_wasserstein_distance() (in module ot)": [[0, "ot.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot)": [[0, "ot.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot)": [[0, "ot.sliced_wasserstein_sphere_unif"]], "solve() (in module ot)": [[0, "ot.solve"]], "tic() (in module ot)": [[0, "ot.tic"]], "toc() (in module ot)": [[0, "ot.toc"]], "toq() (in module ot)": [[0, "ot.toq"]], "unif() (in module ot)": [[0, "ot.unif"]], "wasserstein_1d() (in module ot)": [[0, "ot.wasserstein_1d"]], "wasserstein_circle() (in module ot)": [[0, "ot.wasserstein_circle"]], "weak_optimal_transport() (in module ot)": [[0, "ot.weak_optimal_transport"]], "backend (class in ot.backend)": [[70, "id0"], [70, "ot.backend.Backend"]], "cupybackend (class in ot.backend)": [[70, "id81"], [70, "ot.backend.CupyBackend"]], "jaxbackend (class in ot.backend)": [[70, "id160"], [70, "ot.backend.JaxBackend"]], "numpybackend (class in ot.backend)": [[70, "id239"], [70, "ot.backend.NumpyBackend"]], "tensorflowbackend (class in ot.backend)": [[70, "id318"], [70, "ot.backend.TensorflowBackend"]], "torchbackend (class in ot.backend)": [[70, "id397"], [70, "ot.backend.TorchBackend"]], "abs() (ot.backend.backend method)": [[70, "id1"], [70, "ot.backend.Backend.abs"]], "abs() (ot.backend.cupybackend method)": [[70, "id82"], [70, "ot.backend.CupyBackend.abs"]], "abs() (ot.backend.jaxbackend method)": [[70, "id161"], [70, "ot.backend.JaxBackend.abs"]], "abs() (ot.backend.numpybackend method)": [[70, "id240"], [70, "ot.backend.NumpyBackend.abs"]], "abs() (ot.backend.tensorflowbackend method)": [[70, "id319"], [70, "ot.backend.TensorflowBackend.abs"]], "abs() (ot.backend.torchbackend method)": [[70, "id398"], [70, "ot.backend.TorchBackend.abs"]], "allclose() (ot.backend.backend method)": [[70, "id2"], [70, "ot.backend.Backend.allclose"]], "allclose() (ot.backend.cupybackend method)": [[70, "id83"], [70, "ot.backend.CupyBackend.allclose"]], "allclose() (ot.backend.jaxbackend method)": [[70, "id162"], [70, "ot.backend.JaxBackend.allclose"]], "allclose() (ot.backend.numpybackend method)": [[70, "id241"], [70, "ot.backend.NumpyBackend.allclose"]], "allclose() (ot.backend.tensorflowbackend method)": [[70, "id320"], [70, "ot.backend.TensorflowBackend.allclose"]], "allclose() (ot.backend.torchbackend method)": [[70, "id399"], [70, "ot.backend.TorchBackend.allclose"]], "any() (ot.backend.backend method)": [[70, "id3"], [70, "ot.backend.Backend.any"]], "any() (ot.backend.cupybackend method)": [[70, "id84"], [70, "ot.backend.CupyBackend.any"]], "any() (ot.backend.jaxbackend method)": [[70, "id163"], [70, "ot.backend.JaxBackend.any"]], "any() (ot.backend.numpybackend method)": [[70, "id242"], [70, "ot.backend.NumpyBackend.any"]], "any() (ot.backend.tensorflowbackend method)": [[70, "id321"], [70, "ot.backend.TensorflowBackend.any"]], "any() (ot.backend.torchbackend method)": [[70, "id400"], [70, "ot.backend.TorchBackend.any"]], "arange() (ot.backend.backend method)": [[70, "id4"], [70, "ot.backend.Backend.arange"]], "arange() (ot.backend.cupybackend method)": [[70, "id85"], [70, "ot.backend.CupyBackend.arange"]], "arange() (ot.backend.jaxbackend method)": [[70, "id164"], [70, "ot.backend.JaxBackend.arange"]], "arange() (ot.backend.numpybackend method)": [[70, "id243"], [70, "ot.backend.NumpyBackend.arange"]], "arange() (ot.backend.tensorflowbackend method)": [[70, "id322"], [70, "ot.backend.TensorflowBackend.arange"]], "arange() (ot.backend.torchbackend method)": [[70, "id401"], [70, "ot.backend.TorchBackend.arange"]], "argmax() (ot.backend.backend method)": [[70, "id5"], [70, "ot.backend.Backend.argmax"]], "argmax() (ot.backend.cupybackend method)": [[70, "id86"], [70, "ot.backend.CupyBackend.argmax"]], "argmax() (ot.backend.jaxbackend method)": [[70, "id165"], [70, "ot.backend.JaxBackend.argmax"]], "argmax() (ot.backend.numpybackend method)": [[70, "id244"], [70, "ot.backend.NumpyBackend.argmax"]], "argmax() (ot.backend.tensorflowbackend method)": [[70, "id323"], [70, "ot.backend.TensorflowBackend.argmax"]], "argmax() (ot.backend.torchbackend method)": [[70, "id402"], [70, "ot.backend.TorchBackend.argmax"]], "argmin() (ot.backend.backend method)": [[70, "id6"], [70, "ot.backend.Backend.argmin"]], "argmin() (ot.backend.cupybackend method)": [[70, "id87"], [70, "ot.backend.CupyBackend.argmin"]], "argmin() (ot.backend.jaxbackend method)": [[70, "id166"], [70, "ot.backend.JaxBackend.argmin"]], "argmin() (ot.backend.numpybackend method)": [[70, "id245"], [70, "ot.backend.NumpyBackend.argmin"]], "argmin() (ot.backend.tensorflowbackend method)": [[70, "id324"], [70, "ot.backend.TensorflowBackend.argmin"]], "argmin() (ot.backend.torchbackend method)": [[70, "id403"], [70, "ot.backend.TorchBackend.argmin"]], "argsort() (ot.backend.backend method)": [[70, "id7"], [70, "ot.backend.Backend.argsort"]], "argsort() (ot.backend.cupybackend method)": [[70, "id88"], [70, "ot.backend.CupyBackend.argsort"]], "argsort() (ot.backend.jaxbackend method)": [[70, "id167"], [70, "ot.backend.JaxBackend.argsort"]], "argsort() (ot.backend.numpybackend method)": [[70, "id246"], [70, "ot.backend.NumpyBackend.argsort"]], "argsort() (ot.backend.tensorflowbackend method)": [[70, "id325"], [70, "ot.backend.TensorflowBackend.argsort"]], "argsort() (ot.backend.torchbackend method)": [[70, "id404"], [70, "ot.backend.TorchBackend.argsort"]], "array_equal() (ot.backend.backend method)": [[70, "id8"], [70, "ot.backend.Backend.array_equal"]], "array_equal() (ot.backend.cupybackend method)": [[70, "id89"], [70, "ot.backend.CupyBackend.array_equal"]], "array_equal() (ot.backend.jaxbackend method)": [[70, "id168"], [70, "ot.backend.JaxBackend.array_equal"]], "array_equal() (ot.backend.numpybackend method)": [[70, "id247"], [70, "ot.backend.NumpyBackend.array_equal"]], "array_equal() (ot.backend.tensorflowbackend method)": [[70, "id326"], [70, "ot.backend.TensorflowBackend.array_equal"]], "array_equal() (ot.backend.torchbackend method)": [[70, "id405"], [70, "ot.backend.TorchBackend.array_equal"]], "assert_same_dtype_device() (ot.backend.backend method)": [[70, "id9"], [70, "ot.backend.Backend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[70, "id90"], [70, "ot.backend.CupyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[70, "id169"], [70, "ot.backend.JaxBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[70, "id248"], [70, "ot.backend.NumpyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[70, "id327"], [70, "ot.backend.TensorflowBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[70, "id406"], [70, "ot.backend.TorchBackend.assert_same_dtype_device"]], "atan2() (ot.backend.backend method)": [[70, "id10"], [70, "ot.backend.Backend.atan2"]], "atan2() (ot.backend.cupybackend method)": [[70, "id91"], [70, "ot.backend.CupyBackend.atan2"]], "atan2() (ot.backend.jaxbackend method)": [[70, "id170"], [70, "ot.backend.JaxBackend.atan2"]], "atan2() (ot.backend.numpybackend method)": [[70, "id249"], [70, "ot.backend.NumpyBackend.atan2"]], "atan2() (ot.backend.tensorflowbackend method)": [[70, "id328"], [70, "ot.backend.TensorflowBackend.atan2"]], "atan2() (ot.backend.torchbackend method)": [[70, "id407"], [70, "ot.backend.TorchBackend.atan2"]], "bitsize() (ot.backend.backend method)": [[70, "id11"], [70, "ot.backend.Backend.bitsize"]], "bitsize() (ot.backend.cupybackend method)": [[70, "id92"], [70, "ot.backend.CupyBackend.bitsize"]], "bitsize() (ot.backend.jaxbackend method)": [[70, "id171"], [70, "ot.backend.JaxBackend.bitsize"]], "bitsize() (ot.backend.numpybackend method)": [[70, "id250"], [70, "ot.backend.NumpyBackend.bitsize"]], "bitsize() (ot.backend.tensorflowbackend method)": [[70, "id329"], [70, "ot.backend.TensorflowBackend.bitsize"]], "bitsize() (ot.backend.torchbackend method)": [[70, "id408"], [70, "ot.backend.TorchBackend.bitsize"]], "clip() (ot.backend.backend method)": [[70, "id12"], [70, "ot.backend.Backend.clip"]], "clip() (ot.backend.cupybackend method)": [[70, "id93"], [70, "ot.backend.CupyBackend.clip"]], "clip() (ot.backend.jaxbackend method)": [[70, "id172"], [70, "ot.backend.JaxBackend.clip"]], "clip() (ot.backend.numpybackend method)": [[70, "id251"], [70, "ot.backend.NumpyBackend.clip"]], "clip() (ot.backend.tensorflowbackend method)": [[70, "id330"], [70, "ot.backend.TensorflowBackend.clip"]], "clip() (ot.backend.torchbackend method)": [[70, "id409"], [70, "ot.backend.TorchBackend.clip"]], "concatenate() (ot.backend.backend method)": [[70, "id13"], [70, "ot.backend.Backend.concatenate"]], "concatenate() (ot.backend.cupybackend method)": [[70, "id94"], [70, "ot.backend.CupyBackend.concatenate"]], "concatenate() (ot.backend.jaxbackend method)": [[70, "id173"], [70, "ot.backend.JaxBackend.concatenate"]], "concatenate() (ot.backend.numpybackend method)": [[70, "id252"], [70, "ot.backend.NumpyBackend.concatenate"]], "concatenate() (ot.backend.tensorflowbackend method)": [[70, "id331"], [70, "ot.backend.TensorflowBackend.concatenate"]], "concatenate() (ot.backend.torchbackend method)": [[70, "id410"], [70, "ot.backend.TorchBackend.concatenate"]], "coo_matrix() (ot.backend.backend method)": [[70, "id14"], [70, "ot.backend.Backend.coo_matrix"]], "coo_matrix() (ot.backend.cupybackend method)": [[70, "id95"], [70, "ot.backend.CupyBackend.coo_matrix"]], "coo_matrix() (ot.backend.jaxbackend method)": [[70, "id174"], [70, "ot.backend.JaxBackend.coo_matrix"]], "coo_matrix() (ot.backend.numpybackend method)": [[70, "id253"], [70, "ot.backend.NumpyBackend.coo_matrix"]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[70, "id332"], [70, "ot.backend.TensorflowBackend.coo_matrix"]], "coo_matrix() (ot.backend.torchbackend method)": [[70, "id411"], [70, "ot.backend.TorchBackend.coo_matrix"]], "copy() (ot.backend.backend method)": [[70, "id15"], [70, "ot.backend.Backend.copy"]], "copy() (ot.backend.cupybackend method)": [[70, "id96"], [70, "ot.backend.CupyBackend.copy"]], "copy() (ot.backend.jaxbackend method)": [[70, "id175"], [70, "ot.backend.JaxBackend.copy"]], "copy() (ot.backend.numpybackend method)": [[70, "id254"], [70, "ot.backend.NumpyBackend.copy"]], "copy() (ot.backend.tensorflowbackend method)": [[70, "id333"], [70, "ot.backend.TensorflowBackend.copy"]], "copy() (ot.backend.torchbackend method)": [[70, "id412"], [70, "ot.backend.TorchBackend.copy"]], "cumsum() (ot.backend.backend method)": [[70, "id16"], [70, "ot.backend.Backend.cumsum"]], "cumsum() (ot.backend.cupybackend method)": [[70, "id97"], [70, "ot.backend.CupyBackend.cumsum"]], "cumsum() (ot.backend.jaxbackend method)": [[70, "id176"], [70, "ot.backend.JaxBackend.cumsum"]], "cumsum() (ot.backend.numpybackend method)": [[70, "id255"], [70, "ot.backend.NumpyBackend.cumsum"]], "cumsum() (ot.backend.tensorflowbackend method)": [[70, "id334"], [70, "ot.backend.TensorflowBackend.cumsum"]], "cumsum() (ot.backend.torchbackend method)": [[70, "id413"], [70, "ot.backend.TorchBackend.cumsum"]], "detach() (ot.backend.backend method)": [[70, "id17"], [70, "ot.backend.Backend.detach"]], "detach() (ot.backend.cupybackend method)": [[70, "id98"], [70, "ot.backend.CupyBackend.detach"]], "detach() (ot.backend.jaxbackend method)": [[70, "id177"], [70, "ot.backend.JaxBackend.detach"]], "detach() (ot.backend.numpybackend method)": [[70, "id256"], [70, "ot.backend.NumpyBackend.detach"]], "detach() (ot.backend.tensorflowbackend method)": [[70, "id335"], [70, "ot.backend.TensorflowBackend.detach"]], "detach() (ot.backend.torchbackend method)": [[70, "id414"], [70, "ot.backend.TorchBackend.detach"]], "device_type() (ot.backend.backend method)": [[70, "id18"], [70, "ot.backend.Backend.device_type"]], "device_type() (ot.backend.cupybackend method)": [[70, "id99"], [70, "ot.backend.CupyBackend.device_type"]], "device_type() (ot.backend.jaxbackend method)": [[70, "id178"], [70, "ot.backend.JaxBackend.device_type"]], "device_type() (ot.backend.numpybackend method)": [[70, "id257"], [70, "ot.backend.NumpyBackend.device_type"]], "device_type() (ot.backend.tensorflowbackend method)": [[70, "id336"], [70, "ot.backend.TensorflowBackend.device_type"]], "device_type() (ot.backend.torchbackend method)": [[70, "id415"], [70, "ot.backend.TorchBackend.device_type"]], "diag() (ot.backend.backend method)": [[70, "id19"], [70, "ot.backend.Backend.diag"]], "diag() (ot.backend.cupybackend method)": [[70, "id100"], [70, "ot.backend.CupyBackend.diag"]], "diag() (ot.backend.jaxbackend method)": [[70, "id179"], [70, "ot.backend.JaxBackend.diag"]], "diag() (ot.backend.numpybackend method)": [[70, "id258"], [70, "ot.backend.NumpyBackend.diag"]], "diag() (ot.backend.tensorflowbackend method)": [[70, "id337"], [70, "ot.backend.TensorflowBackend.diag"]], "diag() (ot.backend.torchbackend method)": [[70, "id416"], [70, "ot.backend.TorchBackend.diag"]], "dot() (ot.backend.backend method)": [[70, "id20"], [70, "ot.backend.Backend.dot"]], "dot() (ot.backend.cupybackend method)": [[70, "id101"], [70, "ot.backend.CupyBackend.dot"]], "dot() (ot.backend.jaxbackend method)": [[70, "id180"], [70, "ot.backend.JaxBackend.dot"]], "dot() (ot.backend.numpybackend method)": [[70, "id259"], [70, "ot.backend.NumpyBackend.dot"]], "dot() (ot.backend.tensorflowbackend method)": [[70, "id338"], [70, "ot.backend.TensorflowBackend.dot"]], "dot() (ot.backend.torchbackend method)": [[70, "id417"], [70, "ot.backend.TorchBackend.dot"]], "dtype_device() (ot.backend.backend method)": [[70, "id21"], [70, "ot.backend.Backend.dtype_device"]], "dtype_device() (ot.backend.cupybackend method)": [[70, "id102"], [70, "ot.backend.CupyBackend.dtype_device"]], "dtype_device() (ot.backend.jaxbackend method)": [[70, "id181"], [70, "ot.backend.JaxBackend.dtype_device"]], "dtype_device() (ot.backend.numpybackend method)": [[70, "id260"], [70, "ot.backend.NumpyBackend.dtype_device"]], "dtype_device() (ot.backend.tensorflowbackend method)": [[70, "id339"], [70, "ot.backend.TensorflowBackend.dtype_device"]], "dtype_device() (ot.backend.torchbackend method)": [[70, "id418"], [70, "ot.backend.TorchBackend.dtype_device"]], "einsum() (ot.backend.backend method)": [[70, "id22"], [70, "ot.backend.Backend.einsum"]], "einsum() (ot.backend.cupybackend method)": [[70, "id103"], [70, "ot.backend.CupyBackend.einsum"]], "einsum() (ot.backend.jaxbackend method)": [[70, "id182"], [70, "ot.backend.JaxBackend.einsum"]], "einsum() (ot.backend.numpybackend method)": [[70, "id261"], [70, "ot.backend.NumpyBackend.einsum"]], "einsum() (ot.backend.tensorflowbackend method)": [[70, "id340"], [70, "ot.backend.TensorflowBackend.einsum"]], "einsum() (ot.backend.torchbackend method)": [[70, "id419"], [70, "ot.backend.TorchBackend.einsum"]], "eliminate_zeros() (ot.backend.backend method)": [[70, "id23"], [70, "ot.backend.Backend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.cupybackend method)": [[70, "id104"], [70, "ot.backend.CupyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[70, "id183"], [70, "ot.backend.JaxBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.numpybackend method)": [[70, "id262"], [70, "ot.backend.NumpyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[70, "id341"], [70, "ot.backend.TensorflowBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.torchbackend method)": [[70, "id420"], [70, "ot.backend.TorchBackend.eliminate_zeros"]], "exp() (ot.backend.backend method)": [[70, "id24"], [70, "ot.backend.Backend.exp"]], "exp() (ot.backend.cupybackend method)": [[70, "id105"], [70, "ot.backend.CupyBackend.exp"]], "exp() (ot.backend.jaxbackend method)": [[70, "id184"], [70, "ot.backend.JaxBackend.exp"]], "exp() (ot.backend.numpybackend method)": [[70, "id263"], [70, "ot.backend.NumpyBackend.exp"]], "exp() (ot.backend.tensorflowbackend method)": [[70, "id342"], [70, "ot.backend.TensorflowBackend.exp"]], "exp() (ot.backend.torchbackend method)": [[70, "id421"], [70, "ot.backend.TorchBackend.exp"]], "eye() (ot.backend.backend method)": [[70, "id25"], [70, "ot.backend.Backend.eye"]], "eye() (ot.backend.cupybackend method)": [[70, "id106"], [70, "ot.backend.CupyBackend.eye"]], "eye() (ot.backend.jaxbackend method)": [[70, "id185"], [70, "ot.backend.JaxBackend.eye"]], "eye() (ot.backend.numpybackend method)": [[70, "id264"], [70, "ot.backend.NumpyBackend.eye"]], "eye() (ot.backend.tensorflowbackend method)": [[70, "id343"], [70, "ot.backend.TensorflowBackend.eye"]], "eye() (ot.backend.torchbackend method)": [[70, "id422"], [70, "ot.backend.TorchBackend.eye"]], "flip() (ot.backend.backend method)": [[70, "id26"], [70, "ot.backend.Backend.flip"]], "flip() (ot.backend.cupybackend method)": [[70, "id107"], [70, "ot.backend.CupyBackend.flip"]], "flip() (ot.backend.jaxbackend method)": [[70, "id186"], [70, "ot.backend.JaxBackend.flip"]], "flip() (ot.backend.numpybackend method)": [[70, "id265"], [70, "ot.backend.NumpyBackend.flip"]], "flip() (ot.backend.tensorflowbackend method)": [[70, "id344"], [70, "ot.backend.TensorflowBackend.flip"]], "flip() (ot.backend.torchbackend method)": [[70, "id423"], [70, "ot.backend.TorchBackend.flip"]], "floor() (ot.backend.backend method)": [[70, "id27"], [70, "ot.backend.Backend.floor"]], "floor() (ot.backend.cupybackend method)": [[70, "id108"], [70, "ot.backend.CupyBackend.floor"]], "floor() (ot.backend.jaxbackend method)": [[70, "id187"], [70, "ot.backend.JaxBackend.floor"]], "floor() (ot.backend.numpybackend method)": [[70, "id266"], [70, "ot.backend.NumpyBackend.floor"]], "floor() (ot.backend.tensorflowbackend method)": [[70, "id345"], [70, "ot.backend.TensorflowBackend.floor"]], "floor() (ot.backend.torchbackend method)": [[70, "id424"], [70, "ot.backend.TorchBackend.floor"]], "from_numpy() (ot.backend.backend method)": [[70, "id28"], [70, "ot.backend.Backend.from_numpy"]], "full() (ot.backend.backend method)": [[70, "id29"], [70, "ot.backend.Backend.full"]], "full() (ot.backend.cupybackend method)": [[70, "id109"], [70, "ot.backend.CupyBackend.full"]], "full() (ot.backend.jaxbackend method)": [[70, "id188"], [70, "ot.backend.JaxBackend.full"]], "full() (ot.backend.numpybackend method)": [[70, "id267"], [70, "ot.backend.NumpyBackend.full"]], "full() (ot.backend.tensorflowbackend method)": [[70, "id346"], [70, "ot.backend.TensorflowBackend.full"]], "full() (ot.backend.torchbackend method)": [[70, "id425"], [70, "ot.backend.TorchBackend.full"]], "get_backend() (in module ot.backend)": [[70, "id476"], [70, "ot.backend.get_backend"]], "get_backend_list() (in module ot.backend)": [[70, "id477"], [70, "ot.backend.get_backend_list"]], "inv() (ot.backend.backend method)": [[70, "id30"], [70, "ot.backend.Backend.inv"]], "inv() (ot.backend.cupybackend method)": [[70, "id110"], [70, "ot.backend.CupyBackend.inv"]], "inv() (ot.backend.jaxbackend method)": [[70, "id189"], [70, "ot.backend.JaxBackend.inv"]], "inv() (ot.backend.numpybackend method)": [[70, "id268"], [70, "ot.backend.NumpyBackend.inv"]], "inv() (ot.backend.tensorflowbackend method)": [[70, "id347"], [70, "ot.backend.TensorflowBackend.inv"]], "inv() (ot.backend.torchbackend method)": [[70, "id426"], [70, "ot.backend.TorchBackend.inv"]], "is_floating_point() (ot.backend.backend method)": [[70, "id31"], [70, "ot.backend.Backend.is_floating_point"]], "is_floating_point() (ot.backend.cupybackend method)": [[70, "id111"], [70, "ot.backend.CupyBackend.is_floating_point"]], "is_floating_point() (ot.backend.jaxbackend method)": [[70, "id190"], [70, "ot.backend.JaxBackend.is_floating_point"]], "is_floating_point() (ot.backend.numpybackend method)": [[70, "id269"], [70, "ot.backend.NumpyBackend.is_floating_point"]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[70, "id348"], [70, "ot.backend.TensorflowBackend.is_floating_point"]], "is_floating_point() (ot.backend.torchbackend method)": [[70, "id427"], [70, "ot.backend.TorchBackend.is_floating_point"]], "isfinite() (ot.backend.backend method)": [[70, "id32"], [70, "ot.backend.Backend.isfinite"]], "isfinite() (ot.backend.cupybackend method)": [[70, "id112"], [70, "ot.backend.CupyBackend.isfinite"]], "isfinite() (ot.backend.jaxbackend method)": [[70, "id191"], [70, "ot.backend.JaxBackend.isfinite"]], "isfinite() (ot.backend.numpybackend method)": [[70, "id270"], [70, "ot.backend.NumpyBackend.isfinite"]], "isfinite() (ot.backend.tensorflowbackend method)": [[70, "id349"], [70, "ot.backend.TensorflowBackend.isfinite"]], "isfinite() (ot.backend.torchbackend method)": [[70, "id428"], [70, "ot.backend.TorchBackend.isfinite"]], "isinf() (ot.backend.backend method)": [[70, "id33"], [70, "ot.backend.Backend.isinf"]], "isinf() (ot.backend.cupybackend method)": [[70, "id113"], [70, "ot.backend.CupyBackend.isinf"]], "isinf() (ot.backend.jaxbackend method)": [[70, "id192"], [70, "ot.backend.JaxBackend.isinf"]], "isinf() (ot.backend.numpybackend method)": [[70, "id271"], [70, "ot.backend.NumpyBackend.isinf"]], "isinf() (ot.backend.tensorflowbackend method)": [[70, "id350"], [70, "ot.backend.TensorflowBackend.isinf"]], "isinf() (ot.backend.torchbackend method)": [[70, "id429"], [70, "ot.backend.TorchBackend.isinf"]], "isnan() (ot.backend.backend method)": [[70, "id34"], [70, "ot.backend.Backend.isnan"]], "isnan() (ot.backend.cupybackend method)": [[70, "id114"], [70, "ot.backend.CupyBackend.isnan"]], "isnan() (ot.backend.jaxbackend method)": [[70, "id193"], [70, "ot.backend.JaxBackend.isnan"]], "isnan() (ot.backend.numpybackend method)": [[70, "id272"], [70, "ot.backend.NumpyBackend.isnan"]], "isnan() (ot.backend.tensorflowbackend method)": [[70, "id351"], [70, "ot.backend.TensorflowBackend.isnan"]], "isnan() (ot.backend.torchbackend method)": [[70, "id430"], [70, "ot.backend.TorchBackend.isnan"]], "issparse() (ot.backend.backend method)": [[70, "id35"], [70, "ot.backend.Backend.issparse"]], "issparse() (ot.backend.cupybackend method)": [[70, "id115"], [70, "ot.backend.CupyBackend.issparse"]], "issparse() (ot.backend.jaxbackend method)": [[70, "id194"], [70, "ot.backend.JaxBackend.issparse"]], "issparse() (ot.backend.numpybackend method)": [[70, "id273"], [70, "ot.backend.NumpyBackend.issparse"]], "issparse() (ot.backend.tensorflowbackend method)": [[70, "id352"], [70, "ot.backend.TensorflowBackend.issparse"]], "issparse() (ot.backend.torchbackend method)": [[70, "id431"], [70, "ot.backend.TorchBackend.issparse"]], "kl_div() (ot.backend.backend method)": [[70, "id36"], [70, "ot.backend.Backend.kl_div"]], "kl_div() (ot.backend.cupybackend method)": [[70, "id116"], [70, "ot.backend.CupyBackend.kl_div"]], "kl_div() (ot.backend.jaxbackend method)": [[70, "id195"], [70, "ot.backend.JaxBackend.kl_div"]], "kl_div() (ot.backend.numpybackend method)": [[70, "id274"], [70, "ot.backend.NumpyBackend.kl_div"]], "kl_div() (ot.backend.tensorflowbackend method)": [[70, "id353"], [70, "ot.backend.TensorflowBackend.kl_div"]], "kl_div() (ot.backend.torchbackend method)": [[70, "id432"], [70, "ot.backend.TorchBackend.kl_div"]], "linspace() (ot.backend.backend method)": [[70, "id37"], [70, "ot.backend.Backend.linspace"]], "linspace() (ot.backend.cupybackend method)": [[70, "id117"], [70, "ot.backend.CupyBackend.linspace"]], "linspace() (ot.backend.jaxbackend method)": [[70, "id196"], [70, "ot.backend.JaxBackend.linspace"]], "linspace() (ot.backend.numpybackend method)": [[70, "id275"], [70, "ot.backend.NumpyBackend.linspace"]], "linspace() (ot.backend.tensorflowbackend method)": [[70, "id354"], [70, "ot.backend.TensorflowBackend.linspace"]], "linspace() (ot.backend.torchbackend method)": [[70, "id433"], [70, "ot.backend.TorchBackend.linspace"]], "log() (ot.backend.backend method)": [[70, "id38"], [70, "ot.backend.Backend.log"]], "log() (ot.backend.cupybackend method)": [[70, "id118"], [70, "ot.backend.CupyBackend.log"]], "log() (ot.backend.jaxbackend method)": [[70, "id197"], [70, "ot.backend.JaxBackend.log"]], "log() (ot.backend.numpybackend method)": [[70, "id276"], [70, "ot.backend.NumpyBackend.log"]], "log() (ot.backend.tensorflowbackend method)": [[70, "id355"], [70, "ot.backend.TensorflowBackend.log"]], "log() (ot.backend.torchbackend method)": [[70, "id434"], [70, "ot.backend.TorchBackend.log"]], "logsumexp() (ot.backend.backend method)": [[70, "id39"], [70, "ot.backend.Backend.logsumexp"]], "logsumexp() (ot.backend.cupybackend method)": [[70, "id119"], [70, "ot.backend.CupyBackend.logsumexp"]], "logsumexp() (ot.backend.jaxbackend method)": [[70, "id198"], [70, "ot.backend.JaxBackend.logsumexp"]], "logsumexp() (ot.backend.numpybackend method)": [[70, "id277"], [70, "ot.backend.NumpyBackend.logsumexp"]], "logsumexp() (ot.backend.tensorflowbackend method)": [[70, "id356"], [70, "ot.backend.TensorflowBackend.logsumexp"]], "logsumexp() (ot.backend.torchbackend method)": [[70, "id435"], [70, "ot.backend.TorchBackend.logsumexp"]], "matmul() (ot.backend.backend method)": [[70, "id40"], [70, "ot.backend.Backend.matmul"]], "matmul() (ot.backend.cupybackend method)": [[70, "id120"], [70, "ot.backend.CupyBackend.matmul"]], "matmul() (ot.backend.jaxbackend method)": [[70, "id199"], [70, "ot.backend.JaxBackend.matmul"]], "matmul() (ot.backend.numpybackend method)": [[70, "id278"], [70, "ot.backend.NumpyBackend.matmul"]], "matmul() (ot.backend.tensorflowbackend method)": [[70, "id357"], [70, "ot.backend.TensorflowBackend.matmul"]], "matmul() (ot.backend.torchbackend method)": [[70, "id436"], [70, "ot.backend.TorchBackend.matmul"]], "max() (ot.backend.backend method)": [[70, "id41"], [70, "ot.backend.Backend.max"]], "max() (ot.backend.cupybackend method)": [[70, "id121"], [70, "ot.backend.CupyBackend.max"]], "max() (ot.backend.jaxbackend method)": [[70, "id200"], [70, "ot.backend.JaxBackend.max"]], "max() (ot.backend.numpybackend method)": [[70, "id279"], [70, "ot.backend.NumpyBackend.max"]], "max() (ot.backend.tensorflowbackend method)": [[70, "id358"], [70, "ot.backend.TensorflowBackend.max"]], "max() (ot.backend.torchbackend method)": [[70, "id437"], [70, "ot.backend.TorchBackend.max"]], "maximum() (ot.backend.backend method)": [[70, "id42"], [70, "ot.backend.Backend.maximum"]], "maximum() (ot.backend.cupybackend method)": [[70, "id122"], [70, "ot.backend.CupyBackend.maximum"]], "maximum() (ot.backend.jaxbackend method)": [[70, "id201"], [70, "ot.backend.JaxBackend.maximum"]], "maximum() (ot.backend.numpybackend method)": [[70, "id280"], [70, "ot.backend.NumpyBackend.maximum"]], "maximum() (ot.backend.tensorflowbackend method)": [[70, "id359"], [70, "ot.backend.TensorflowBackend.maximum"]], "maximum() (ot.backend.torchbackend method)": [[70, "id438"], [70, "ot.backend.TorchBackend.maximum"]], "mean() (ot.backend.backend method)": [[70, "id43"], [70, "ot.backend.Backend.mean"]], "mean() (ot.backend.cupybackend method)": [[70, "id123"], [70, "ot.backend.CupyBackend.mean"]], "mean() (ot.backend.jaxbackend method)": [[70, "id202"], [70, "ot.backend.JaxBackend.mean"]], "mean() (ot.backend.numpybackend method)": [[70, "id281"], [70, "ot.backend.NumpyBackend.mean"]], "mean() (ot.backend.tensorflowbackend method)": [[70, "id360"], [70, "ot.backend.TensorflowBackend.mean"]], "mean() (ot.backend.torchbackend method)": [[70, "id439"], [70, "ot.backend.TorchBackend.mean"]], "median() (ot.backend.backend method)": [[70, "id44"], [70, "ot.backend.Backend.median"]], "median() (ot.backend.cupybackend method)": [[70, "id124"], [70, "ot.backend.CupyBackend.median"]], "median() (ot.backend.jaxbackend method)": [[70, "id203"], [70, "ot.backend.JaxBackend.median"]], "median() (ot.backend.numpybackend method)": [[70, "id282"], [70, "ot.backend.NumpyBackend.median"]], "median() (ot.backend.tensorflowbackend method)": [[70, "id361"], [70, "ot.backend.TensorflowBackend.median"]], "median() (ot.backend.torchbackend method)": [[70, "id440"], [70, "ot.backend.TorchBackend.median"]], "meshgrid() (ot.backend.backend method)": [[70, "id45"], [70, "ot.backend.Backend.meshgrid"]], "meshgrid() (ot.backend.cupybackend method)": [[70, "id125"], [70, "ot.backend.CupyBackend.meshgrid"]], "meshgrid() (ot.backend.jaxbackend method)": [[70, "id204"], [70, "ot.backend.JaxBackend.meshgrid"]], "meshgrid() (ot.backend.numpybackend method)": [[70, "id283"], [70, "ot.backend.NumpyBackend.meshgrid"]], "meshgrid() (ot.backend.tensorflowbackend method)": [[70, "id362"], [70, "ot.backend.TensorflowBackend.meshgrid"]], "meshgrid() (ot.backend.torchbackend method)": [[70, "id441"], [70, "ot.backend.TorchBackend.meshgrid"]], "min() (ot.backend.backend method)": [[70, "id46"], [70, "ot.backend.Backend.min"]], "min() (ot.backend.cupybackend method)": [[70, "id126"], [70, "ot.backend.CupyBackend.min"]], "min() (ot.backend.jaxbackend method)": [[70, "id205"], [70, "ot.backend.JaxBackend.min"]], "min() (ot.backend.numpybackend method)": [[70, "id284"], [70, "ot.backend.NumpyBackend.min"]], "min() (ot.backend.tensorflowbackend method)": [[70, "id363"], [70, "ot.backend.TensorflowBackend.min"]], "min() (ot.backend.torchbackend method)": [[70, "id442"], [70, "ot.backend.TorchBackend.min"]], "minimum() (ot.backend.backend method)": [[70, "id47"], [70, "ot.backend.Backend.minimum"]], "minimum() (ot.backend.cupybackend method)": [[70, "id127"], [70, "ot.backend.CupyBackend.minimum"]], "minimum() (ot.backend.jaxbackend method)": [[70, "id206"], [70, "ot.backend.JaxBackend.minimum"]], "minimum() (ot.backend.numpybackend method)": [[70, "id285"], [70, "ot.backend.NumpyBackend.minimum"]], "minimum() (ot.backend.tensorflowbackend method)": [[70, "id364"], [70, "ot.backend.TensorflowBackend.minimum"]], "minimum() (ot.backend.torchbackend method)": [[70, "id443"], [70, "ot.backend.TorchBackend.minimum"]], "norm() (ot.backend.backend method)": [[70, "id48"], [70, "ot.backend.Backend.norm"]], "norm() (ot.backend.cupybackend method)": [[70, "id128"], [70, "ot.backend.CupyBackend.norm"]], "norm() (ot.backend.jaxbackend method)": [[70, "id207"], [70, "ot.backend.JaxBackend.norm"]], "norm() (ot.backend.numpybackend method)": [[70, "id286"], [70, "ot.backend.NumpyBackend.norm"]], "norm() (ot.backend.tensorflowbackend method)": [[70, "id365"], [70, "ot.backend.TensorflowBackend.norm"]], "norm() (ot.backend.torchbackend method)": [[70, "id444"], [70, "ot.backend.TorchBackend.norm"]], "ones() (ot.backend.backend method)": [[70, "id49"], [70, "ot.backend.Backend.ones"]], "ones() (ot.backend.cupybackend method)": [[70, "id129"], [70, "ot.backend.CupyBackend.ones"]], "ones() (ot.backend.jaxbackend method)": [[70, "id208"], [70, "ot.backend.JaxBackend.ones"]], "ones() (ot.backend.numpybackend method)": [[70, "id287"], [70, "ot.backend.NumpyBackend.ones"]], "ones() (ot.backend.tensorflowbackend method)": [[70, "id366"], [70, "ot.backend.TensorflowBackend.ones"]], "ones() (ot.backend.torchbackend method)": [[70, "id445"], [70, "ot.backend.TorchBackend.ones"]], "ot.backend": [[70, "module-ot.backend"]], "outer() (ot.backend.backend method)": [[70, "id50"], [70, "ot.backend.Backend.outer"]], "outer() (ot.backend.cupybackend method)": [[70, "id130"], [70, "ot.backend.CupyBackend.outer"]], "outer() (ot.backend.jaxbackend method)": [[70, "id209"], [70, "ot.backend.JaxBackend.outer"]], "outer() (ot.backend.numpybackend method)": [[70, "id288"], [70, "ot.backend.NumpyBackend.outer"]], "outer() (ot.backend.tensorflowbackend method)": [[70, "id367"], [70, "ot.backend.TensorflowBackend.outer"]], "outer() (ot.backend.torchbackend method)": [[70, "id446"], [70, "ot.backend.TorchBackend.outer"]], "power() (ot.backend.backend method)": [[70, "id51"], [70, "ot.backend.Backend.power"]], "power() (ot.backend.cupybackend method)": [[70, "id131"], [70, "ot.backend.CupyBackend.power"]], "power() (ot.backend.jaxbackend method)": [[70, "id210"], [70, "ot.backend.JaxBackend.power"]], "power() (ot.backend.numpybackend method)": [[70, "id289"], [70, "ot.backend.NumpyBackend.power"]], "power() (ot.backend.tensorflowbackend method)": [[70, "id368"], [70, "ot.backend.TensorflowBackend.power"]], "power() (ot.backend.torchbackend method)": [[70, "id447"], [70, "ot.backend.TorchBackend.power"]], "prod() (ot.backend.backend method)": [[70, "id52"], [70, "ot.backend.Backend.prod"]], "prod() (ot.backend.cupybackend method)": [[70, "id132"], [70, "ot.backend.CupyBackend.prod"]], "prod() (ot.backend.jaxbackend method)": [[70, "id211"], [70, "ot.backend.JaxBackend.prod"]], "prod() (ot.backend.numpybackend method)": [[70, "id290"], [70, "ot.backend.NumpyBackend.prod"]], "prod() (ot.backend.tensorflowbackend method)": [[70, "id369"], [70, "ot.backend.TensorflowBackend.prod"]], "prod() (ot.backend.torchbackend method)": [[70, "id448"], [70, "ot.backend.TorchBackend.prod"]], "qr() (ot.backend.backend method)": [[70, "id53"], [70, "ot.backend.Backend.qr"]], "qr() (ot.backend.cupybackend method)": [[70, "id133"], [70, "ot.backend.CupyBackend.qr"]], "qr() (ot.backend.jaxbackend method)": [[70, "id212"], [70, "ot.backend.JaxBackend.qr"]], "qr() (ot.backend.numpybackend method)": [[70, "id291"], [70, "ot.backend.NumpyBackend.qr"]], "qr() (ot.backend.tensorflowbackend method)": [[70, "id370"], [70, "ot.backend.TensorflowBackend.qr"]], "qr() (ot.backend.torchbackend method)": [[70, "id449"], [70, "ot.backend.TorchBackend.qr"]], "rand() (ot.backend.backend method)": [[70, "id54"], [70, "ot.backend.Backend.rand"]], "rand() (ot.backend.cupybackend method)": [[70, "id134"], [70, "ot.backend.CupyBackend.rand"]], "rand() (ot.backend.jaxbackend method)": [[70, "id213"], [70, "ot.backend.JaxBackend.rand"]], "rand() (ot.backend.numpybackend method)": [[70, "id292"], [70, "ot.backend.NumpyBackend.rand"]], "rand() (ot.backend.tensorflowbackend method)": [[70, "id371"], [70, "ot.backend.TensorflowBackend.rand"]], "rand() (ot.backend.torchbackend method)": [[70, "id450"], [70, "ot.backend.TorchBackend.rand"]], "randn() (ot.backend.backend method)": [[70, "id55"], [70, "ot.backend.Backend.randn"]], "randn() (ot.backend.cupybackend method)": [[70, "id135"], [70, "ot.backend.CupyBackend.randn"]], "randn() (ot.backend.jaxbackend method)": [[70, "id214"], [70, "ot.backend.JaxBackend.randn"]], "randn() (ot.backend.numpybackend method)": [[70, "id293"], [70, "ot.backend.NumpyBackend.randn"]], "randn() (ot.backend.tensorflowbackend method)": [[70, "id372"], [70, "ot.backend.TensorflowBackend.randn"]], "randn() (ot.backend.torchbackend method)": [[70, "id451"], [70, "ot.backend.TorchBackend.randn"]], "repeat() (ot.backend.backend method)": [[70, "id56"], [70, "ot.backend.Backend.repeat"]], "repeat() (ot.backend.cupybackend method)": [[70, "id136"], [70, "ot.backend.CupyBackend.repeat"]], "repeat() (ot.backend.jaxbackend method)": [[70, "id215"], [70, "ot.backend.JaxBackend.repeat"]], "repeat() (ot.backend.numpybackend method)": [[70, "id294"], [70, "ot.backend.NumpyBackend.repeat"]], "repeat() (ot.backend.tensorflowbackend method)": [[70, "id373"], [70, "ot.backend.TensorflowBackend.repeat"]], "repeat() (ot.backend.torchbackend method)": [[70, "id452"], [70, "ot.backend.TorchBackend.repeat"]], "reshape() (ot.backend.backend method)": [[70, "id57"], [70, "ot.backend.Backend.reshape"]], "reshape() (ot.backend.cupybackend method)": [[70, "id137"], [70, "ot.backend.CupyBackend.reshape"]], "reshape() (ot.backend.jaxbackend method)": [[70, "id216"], [70, "ot.backend.JaxBackend.reshape"]], "reshape() (ot.backend.numpybackend method)": [[70, "id295"], [70, "ot.backend.NumpyBackend.reshape"]], "reshape() (ot.backend.tensorflowbackend method)": [[70, "id374"], [70, "ot.backend.TensorflowBackend.reshape"]], "reshape() (ot.backend.torchbackend method)": [[70, "id453"], [70, "ot.backend.TorchBackend.reshape"]], "searchsorted() (ot.backend.backend method)": [[70, "id58"], [70, "ot.backend.Backend.searchsorted"]], "searchsorted() (ot.backend.cupybackend method)": [[70, "id138"], [70, "ot.backend.CupyBackend.searchsorted"]], "searchsorted() (ot.backend.jaxbackend method)": [[70, "id217"], [70, "ot.backend.JaxBackend.searchsorted"]], "searchsorted() (ot.backend.numpybackend method)": [[70, "id296"], [70, "ot.backend.NumpyBackend.searchsorted"]], "searchsorted() (ot.backend.tensorflowbackend method)": [[70, "id375"], [70, "ot.backend.TensorflowBackend.searchsorted"]], "searchsorted() (ot.backend.torchbackend method)": [[70, "id454"], [70, "ot.backend.TorchBackend.searchsorted"]], "seed() (ot.backend.backend method)": [[70, "id59"], [70, "ot.backend.Backend.seed"]], "seed() (ot.backend.cupybackend method)": [[70, "id139"], [70, "ot.backend.CupyBackend.seed"]], "seed() (ot.backend.jaxbackend method)": [[70, "id218"], [70, "ot.backend.JaxBackend.seed"]], "seed() (ot.backend.numpybackend method)": [[70, "id297"], [70, "ot.backend.NumpyBackend.seed"]], "seed() (ot.backend.tensorflowbackend method)": [[70, "id376"], [70, "ot.backend.TensorflowBackend.seed"]], "seed() (ot.backend.torchbackend method)": [[70, "id455"], [70, "ot.backend.TorchBackend.seed"]], "set_gradients() (ot.backend.backend method)": [[70, "id60"], [70, "ot.backend.Backend.set_gradients"]], "set_gradients() (ot.backend.cupybackend method)": [[70, "id140"], [70, "ot.backend.CupyBackend.set_gradients"]], "set_gradients() (ot.backend.jaxbackend method)": [[70, "id219"], [70, "ot.backend.JaxBackend.set_gradients"]], "set_gradients() (ot.backend.numpybackend method)": [[70, "id298"], [70, "ot.backend.NumpyBackend.set_gradients"]], "set_gradients() (ot.backend.tensorflowbackend method)": [[70, "id377"], [70, "ot.backend.TensorflowBackend.set_gradients"]], "set_gradients() (ot.backend.torchbackend method)": [[70, "id456"], [70, "ot.backend.TorchBackend.set_gradients"]], "solve() (ot.backend.backend method)": [[70, "id61"], [70, "ot.backend.Backend.solve"]], "solve() (ot.backend.cupybackend method)": [[70, "id141"], [70, "ot.backend.CupyBackend.solve"]], "solve() (ot.backend.jaxbackend method)": [[70, "id220"], [70, "ot.backend.JaxBackend.solve"]], "solve() (ot.backend.numpybackend method)": [[70, "id299"], [70, "ot.backend.NumpyBackend.solve"]], "solve() (ot.backend.tensorflowbackend method)": [[70, "id378"], [70, "ot.backend.TensorflowBackend.solve"]], "solve() (ot.backend.torchbackend method)": [[70, "id457"], [70, "ot.backend.TorchBackend.solve"]], "sort() (ot.backend.backend method)": [[70, "id62"], [70, "ot.backend.Backend.sort"]], "sort() (ot.backend.cupybackend method)": [[70, "id142"], [70, "ot.backend.CupyBackend.sort"]], "sort() (ot.backend.jaxbackend method)": [[70, "id221"], [70, "ot.backend.JaxBackend.sort"]], "sort() (ot.backend.numpybackend method)": [[70, "id300"], [70, "ot.backend.NumpyBackend.sort"]], "sort() (ot.backend.tensorflowbackend method)": [[70, "id379"], [70, "ot.backend.TensorflowBackend.sort"]], "sort() (ot.backend.torchbackend method)": [[70, "id458"], [70, "ot.backend.TorchBackend.sort"]], "sort2() (ot.backend.backend method)": [[70, "id63"], [70, "ot.backend.Backend.sort2"]], "sort2() (ot.backend.cupybackend method)": [[70, "id143"], [70, "ot.backend.CupyBackend.sort2"]], "sort2() (ot.backend.jaxbackend method)": [[70, "id222"], [70, "ot.backend.JaxBackend.sort2"]], "sort2() (ot.backend.numpybackend method)": [[70, "id301"], [70, "ot.backend.NumpyBackend.sort2"]], "sort2() (ot.backend.tensorflowbackend method)": [[70, "id380"], [70, "ot.backend.TensorflowBackend.sort2"]], "sort2() (ot.backend.torchbackend method)": [[70, "id459"], [70, "ot.backend.TorchBackend.sort2"]], "sqrt() (ot.backend.backend method)": [[70, "id64"], [70, "ot.backend.Backend.sqrt"]], "sqrt() (ot.backend.cupybackend method)": [[70, "id144"], [70, "ot.backend.CupyBackend.sqrt"]], "sqrt() (ot.backend.jaxbackend method)": [[70, "id223"], [70, "ot.backend.JaxBackend.sqrt"]], "sqrt() (ot.backend.numpybackend method)": [[70, "id302"], [70, "ot.backend.NumpyBackend.sqrt"]], "sqrt() (ot.backend.tensorflowbackend method)": [[70, "id381"], [70, "ot.backend.TensorflowBackend.sqrt"]], "sqrt() (ot.backend.torchbackend method)": [[70, "id460"], [70, "ot.backend.TorchBackend.sqrt"]], "sqrtm() (ot.backend.backend method)": [[70, "id65"], [70, "ot.backend.Backend.sqrtm"]], "sqrtm() (ot.backend.cupybackend method)": [[70, "id145"], [70, "ot.backend.CupyBackend.sqrtm"]], "sqrtm() (ot.backend.jaxbackend method)": [[70, "id224"], [70, "ot.backend.JaxBackend.sqrtm"]], "sqrtm() (ot.backend.numpybackend method)": [[70, "id303"], [70, "ot.backend.NumpyBackend.sqrtm"]], "sqrtm() (ot.backend.tensorflowbackend method)": [[70, "id382"], [70, "ot.backend.TensorflowBackend.sqrtm"]], "sqrtm() (ot.backend.torchbackend method)": [[70, "id461"], [70, "ot.backend.TorchBackend.sqrtm"]], "squeeze() (ot.backend.backend method)": [[70, "id66"], [70, "ot.backend.Backend.squeeze"]], "squeeze() (ot.backend.cupybackend method)": [[70, "id146"], [70, "ot.backend.CupyBackend.squeeze"]], "squeeze() (ot.backend.jaxbackend method)": [[70, "id225"], [70, "ot.backend.JaxBackend.squeeze"]], "squeeze() (ot.backend.numpybackend method)": [[70, "id304"], [70, "ot.backend.NumpyBackend.squeeze"]], "squeeze() (ot.backend.tensorflowbackend method)": [[70, "id383"], [70, "ot.backend.TensorflowBackend.squeeze"]], "squeeze() (ot.backend.torchbackend method)": [[70, "id462"], [70, "ot.backend.TorchBackend.squeeze"]], "stack() (ot.backend.backend method)": [[70, "id67"], [70, "ot.backend.Backend.stack"]], "stack() (ot.backend.cupybackend method)": [[70, "id147"], [70, "ot.backend.CupyBackend.stack"]], "stack() (ot.backend.jaxbackend method)": [[70, "id226"], [70, "ot.backend.JaxBackend.stack"]], "stack() (ot.backend.numpybackend method)": [[70, "id305"], [70, "ot.backend.NumpyBackend.stack"]], "stack() (ot.backend.tensorflowbackend method)": [[70, "id384"], [70, "ot.backend.TensorflowBackend.stack"]], "stack() (ot.backend.torchbackend method)": [[70, "id463"], [70, "ot.backend.TorchBackend.stack"]], "std() (ot.backend.backend method)": [[70, "id68"], [70, "ot.backend.Backend.std"]], "std() (ot.backend.cupybackend method)": [[70, "id148"], [70, "ot.backend.CupyBackend.std"]], "std() (ot.backend.jaxbackend method)": [[70, "id227"], [70, "ot.backend.JaxBackend.std"]], "std() (ot.backend.numpybackend method)": [[70, "id306"], [70, "ot.backend.NumpyBackend.std"]], "std() (ot.backend.tensorflowbackend method)": [[70, "id385"], [70, "ot.backend.TensorflowBackend.std"]], "std() (ot.backend.torchbackend method)": [[70, "id464"], [70, "ot.backend.TorchBackend.std"]], "sum() (ot.backend.backend method)": [[70, "id69"], [70, "ot.backend.Backend.sum"]], "sum() (ot.backend.cupybackend method)": [[70, "id149"], [70, "ot.backend.CupyBackend.sum"]], "sum() (ot.backend.jaxbackend method)": [[70, "id228"], [70, "ot.backend.JaxBackend.sum"]], "sum() (ot.backend.numpybackend method)": [[70, "id307"], [70, "ot.backend.NumpyBackend.sum"]], "sum() (ot.backend.tensorflowbackend method)": [[70, "id386"], [70, "ot.backend.TensorflowBackend.sum"]], "sum() (ot.backend.torchbackend method)": [[70, "id465"], [70, "ot.backend.TorchBackend.sum"]], "take_along_axis() (ot.backend.backend method)": [[70, "id70"], [70, "ot.backend.Backend.take_along_axis"]], "take_along_axis() (ot.backend.cupybackend method)": [[70, "id150"], [70, "ot.backend.CupyBackend.take_along_axis"]], "take_along_axis() (ot.backend.jaxbackend method)": [[70, "id229"], [70, "ot.backend.JaxBackend.take_along_axis"]], "take_along_axis() (ot.backend.numpybackend method)": [[70, "id308"], [70, "ot.backend.NumpyBackend.take_along_axis"]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[70, "id387"], [70, "ot.backend.TensorflowBackend.take_along_axis"]], "take_along_axis() (ot.backend.torchbackend method)": [[70, "id466"], [70, "ot.backend.TorchBackend.take_along_axis"]], "tile() (ot.backend.backend method)": [[70, "id71"], [70, "ot.backend.Backend.tile"]], "tile() (ot.backend.cupybackend method)": [[70, "id151"], [70, "ot.backend.CupyBackend.tile"]], "tile() (ot.backend.jaxbackend method)": [[70, "id230"], [70, "ot.backend.JaxBackend.tile"]], "tile() (ot.backend.numpybackend method)": [[70, "id309"], [70, "ot.backend.NumpyBackend.tile"]], "tile() (ot.backend.tensorflowbackend method)": [[70, "id388"], [70, "ot.backend.TensorflowBackend.tile"]], "tile() (ot.backend.torchbackend method)": [[70, "id467"], [70, "ot.backend.TorchBackend.tile"]], "to_numpy() (in module ot.backend)": [[70, "id478"], [70, "ot.backend.to_numpy"]], "to_numpy() (ot.backend.backend method)": [[70, "id72"], [70, "ot.backend.Backend.to_numpy"]], "tocsr() (ot.backend.backend method)": [[70, "id73"], [70, "ot.backend.Backend.tocsr"]], "tocsr() (ot.backend.cupybackend method)": [[70, "id152"], [70, "ot.backend.CupyBackend.tocsr"]], "tocsr() (ot.backend.jaxbackend method)": [[70, "id231"], [70, "ot.backend.JaxBackend.tocsr"]], "tocsr() (ot.backend.numpybackend method)": [[70, "id310"], [70, "ot.backend.NumpyBackend.tocsr"]], "tocsr() (ot.backend.tensorflowbackend method)": [[70, "id389"], [70, "ot.backend.TensorflowBackend.tocsr"]], "tocsr() (ot.backend.torchbackend method)": [[70, "id468"], [70, "ot.backend.TorchBackend.tocsr"]], "todense() (ot.backend.backend method)": [[70, "id74"], [70, "ot.backend.Backend.todense"]], "todense() (ot.backend.cupybackend method)": [[70, "id153"], [70, "ot.backend.CupyBackend.todense"]], "todense() (ot.backend.jaxbackend method)": [[70, "id232"], [70, "ot.backend.JaxBackend.todense"]], "todense() (ot.backend.numpybackend method)": [[70, "id311"], [70, "ot.backend.NumpyBackend.todense"]], "todense() (ot.backend.tensorflowbackend method)": [[70, "id390"], [70, "ot.backend.TensorflowBackend.todense"]], "todense() (ot.backend.torchbackend method)": [[70, "id469"], [70, "ot.backend.TorchBackend.todense"]], "trace() (ot.backend.backend method)": [[70, "id75"], [70, "ot.backend.Backend.trace"]], "trace() (ot.backend.cupybackend method)": [[70, "id154"], [70, "ot.backend.CupyBackend.trace"]], "trace() (ot.backend.jaxbackend method)": [[70, "id233"], [70, "ot.backend.JaxBackend.trace"]], "trace() (ot.backend.numpybackend method)": [[70, "id312"], [70, "ot.backend.NumpyBackend.trace"]], "trace() (ot.backend.tensorflowbackend method)": [[70, "id391"], [70, "ot.backend.TensorflowBackend.trace"]], "trace() (ot.backend.torchbackend method)": [[70, "id470"], [70, "ot.backend.TorchBackend.trace"]], "transpose() (ot.backend.backend method)": [[70, "id76"], [70, "ot.backend.Backend.transpose"]], "transpose() (ot.backend.cupybackend method)": [[70, "id155"], [70, "ot.backend.CupyBackend.transpose"]], "transpose() (ot.backend.jaxbackend method)": [[70, "id234"], [70, "ot.backend.JaxBackend.transpose"]], "transpose() (ot.backend.numpybackend method)": [[70, "id313"], [70, "ot.backend.NumpyBackend.transpose"]], "transpose() (ot.backend.tensorflowbackend method)": [[70, "id392"], [70, "ot.backend.TensorflowBackend.transpose"]], "transpose() (ot.backend.torchbackend method)": [[70, "id471"], [70, "ot.backend.TorchBackend.transpose"]], "unique() (ot.backend.backend method)": [[70, "id77"], [70, "ot.backend.Backend.unique"]], "unique() (ot.backend.cupybackend method)": [[70, "id156"], [70, "ot.backend.CupyBackend.unique"]], "unique() (ot.backend.jaxbackend method)": [[70, "id235"], [70, "ot.backend.JaxBackend.unique"]], "unique() (ot.backend.numpybackend method)": [[70, "id314"], [70, "ot.backend.NumpyBackend.unique"]], "unique() (ot.backend.tensorflowbackend method)": [[70, "id393"], [70, "ot.backend.TensorflowBackend.unique"]], "unique() (ot.backend.torchbackend method)": [[70, "id472"], [70, "ot.backend.TorchBackend.unique"]], "where() (ot.backend.backend method)": [[70, "id78"], [70, "ot.backend.Backend.where"]], "where() (ot.backend.cupybackend method)": [[70, "id157"], [70, "ot.backend.CupyBackend.where"]], "where() (ot.backend.jaxbackend method)": [[70, "id236"], [70, "ot.backend.JaxBackend.where"]], "where() (ot.backend.numpybackend method)": [[70, "id315"], [70, "ot.backend.NumpyBackend.where"]], "where() (ot.backend.tensorflowbackend method)": [[70, "id394"], [70, "ot.backend.TensorflowBackend.where"]], "where() (ot.backend.torchbackend method)": [[70, "id473"], [70, "ot.backend.TorchBackend.where"]], "zero_pad() (ot.backend.backend method)": [[70, "id79"], [70, "ot.backend.Backend.zero_pad"]], "zero_pad() (ot.backend.cupybackend method)": [[70, "id158"], [70, "ot.backend.CupyBackend.zero_pad"]], "zero_pad() (ot.backend.jaxbackend method)": [[70, "id237"], [70, "ot.backend.JaxBackend.zero_pad"]], "zero_pad() (ot.backend.numpybackend method)": [[70, "id316"], [70, "ot.backend.NumpyBackend.zero_pad"]], "zero_pad() (ot.backend.tensorflowbackend method)": [[70, "id395"], [70, "ot.backend.TensorflowBackend.zero_pad"]], "zero_pad() (ot.backend.torchbackend method)": [[70, "id474"], [70, "ot.backend.TorchBackend.zero_pad"]], "zeros() (ot.backend.backend method)": [[70, "id80"], [70, "ot.backend.Backend.zeros"]], "zeros() (ot.backend.cupybackend method)": [[70, "id159"], [70, "ot.backend.CupyBackend.zeros"]], "zeros() (ot.backend.jaxbackend method)": [[70, "id238"], [70, "ot.backend.JaxBackend.zeros"]], "zeros() (ot.backend.numpybackend method)": [[70, "id317"], [70, "ot.backend.NumpyBackend.zeros"]], "zeros() (ot.backend.tensorflowbackend method)": [[70, "id396"], [70, "ot.backend.TensorflowBackend.zeros"]], "zeros() (ot.backend.torchbackend method)": [[70, "id475"], [70, "ot.backend.TorchBackend.zeros"]], "barycenter() (in module ot.bregman)": [[71, "id0"], [71, "ot.bregman.barycenter"]], "barycenter_debiased() (in module ot.bregman)": [[71, "id43"], [71, "ot.bregman.barycenter_debiased"]], "barycenter_sinkhorn() (in module ot.bregman)": [[71, "id46"], [71, "ot.bregman.barycenter_sinkhorn"]], "barycenter_stabilized() (in module ot.bregman)": [[71, "id49"], [71, "ot.bregman.barycenter_stabilized"]], "convolutional_barycenter2d() (in module ot.bregman)": [[71, "id52"], [71, "ot.bregman.convolutional_barycenter2d"]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[71, "id56"], [71, "ot.bregman.convolutional_barycenter2d_debiased"]], "empirical_sinkhorn() (in module ot.bregman)": [[71, "id59"], [71, "ot.bregman.empirical_sinkhorn"]], "empirical_sinkhorn2() (in module ot.bregman)": [[71, "id63"], [71, "ot.bregman.empirical_sinkhorn2"]], "empirical_sinkhorn_divergence() (in module ot.bregman)": [[71, "id67"], [71, "ot.bregman.empirical_sinkhorn_divergence"]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[71, "id69"], [71, "ot.bregman.free_support_sinkhorn_barycenter"]], "geometricbar() (in module ot.bregman)": [[71, "id72"], [71, "ot.bregman.geometricBar"]], "geometricmean() (in module ot.bregman)": [[71, "id73"], [71, "ot.bregman.geometricMean"]], "greenkhorn() (in module ot.bregman)": [[71, "id74"], [71, "ot.bregman.greenkhorn"]], "jcpot_barycenter() (in module ot.bregman)": [[71, "id78"], [71, "ot.bregman.jcpot_barycenter"]], "ot.bregman": [[71, "module-ot.bregman"]], "projc() (in module ot.bregman)": [[71, "id81"], [71, "ot.bregman.projC"]], "projr() (in module ot.bregman)": [[71, "id82"], [71, "ot.bregman.projR"]], "screenkhorn() (in module ot.bregman)": [[71, "id83"], [71, "ot.bregman.screenkhorn"]], "sinkhorn() (in module ot.bregman)": [[71, "id87"], [71, "ot.bregman.sinkhorn"]], "sinkhorn2() (in module ot.bregman)": [[71, "id93"], [71, "ot.bregman.sinkhorn2"]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[71, "id100"], [71, "ot.bregman.sinkhorn_epsilon_scaling"]], "sinkhorn_knopp() (in module ot.bregman)": [[71, "id105"], [71, "ot.bregman.sinkhorn_knopp"]], "sinkhorn_log() (in module ot.bregman)": [[71, "id108"], [71, "ot.bregman.sinkhorn_log"]], "sinkhorn_stabilized() (in module ot.bregman)": [[71, "id112"], [71, "ot.bregman.sinkhorn_stabilized"]], "unmix() (in module ot.bregman)": [[71, "id117"], [71, "ot.bregman.unmix"]], "co_optimal_transport() (in module ot.coot)": [[72, "id0"], [72, "ot.coot.co_optimal_transport"]], "co_optimal_transport2() (in module ot.coot)": [[72, "id4"], [72, "ot.coot.co_optimal_transport2"]], "ot.coot": [[72, "module-ot.coot"]], "basetransport (class in ot.da)": [[73, "id0"], [73, "ot.da.BaseTransport"]], "emdlaplacetransport (class in ot.da)": [[73, "id40"], [73, "ot.da.EMDLaplaceTransport"]], "emdtransport (class in ot.da)": [[73, "id47"], [73, "ot.da.EMDTransport"]], "jcpottransport (class in ot.da)": [[73, "id53"], [73, "ot.da.JCPOTTransport"]], "lineartransport (class in ot.da)": [[73, "id66"], [73, "ot.da.LinearTransport"]], "mappingtransport (class in ot.da)": [[73, "id73"], [73, "ot.da.MappingTransport"]], "sinkhornl1l2transport (class in ot.da)": [[73, "id80"], [73, "ot.da.SinkhornL1l2Transport"]], "sinkhornlpl1transport (class in ot.da)": [[73, "id88"], [73, "ot.da.SinkhornLpl1Transport"]], "sinkhorntransport (class in ot.da)": [[73, "id95"], [73, "ot.da.SinkhornTransport"]], "unbalancedsinkhorntransport (class in ot.da)": [[73, "id103"], [73, "ot.da.UnbalancedSinkhornTransport"]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[73, "id41"], [73, "ot.da.EMDLaplaceTransport.coupling_"]], "coupling_ (ot.da.emdtransport attribute)": [[73, "id48"], [73, "ot.da.EMDTransport.coupling_"]], "coupling_ (ot.da.jcpottransport attribute)": [[73, "id54"], [73, "ot.da.JCPOTTransport.coupling_"]], "coupling_ (ot.da.mappingtransport attribute)": [[73, "id74"], [73, "ot.da.MappingTransport.coupling_"]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[73, "id81"], [73, "ot.da.SinkhornL1l2Transport.coupling_"]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[73, "id89"], [73, "ot.da.SinkhornLpl1Transport.coupling_"]], "coupling_ (ot.da.sinkhorntransport attribute)": [[73, "id96"], [73, "ot.da.SinkhornTransport.coupling_"]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[73, "id104"], [73, "ot.da.UnbalancedSinkhornTransport.coupling_"]], "distribution_estimation_uniform() (in module ot.da)": [[73, "id110"], [73, "ot.da.distribution_estimation_uniform"]], "emd_laplace() (in module ot.da)": [[73, "id111"], [73, "ot.da.emd_laplace"]], "fit() (ot.da.basetransport method)": [[73, "id32"], [73, "ot.da.BaseTransport.fit"]], "fit() (ot.da.emdlaplacetransport method)": [[73, "id46"], [73, "ot.da.EMDLaplaceTransport.fit"]], "fit() (ot.da.emdtransport method)": [[73, "id52"], [73, "ot.da.EMDTransport.fit"]], "fit() (ot.da.jcpottransport method)": [[73, "id60"], [73, "ot.da.JCPOTTransport.fit"]], "fit() (ot.da.lineartransport method)": [[73, "id70"], [73, "ot.da.LinearTransport.fit"]], "fit() (ot.da.mappingtransport method)": [[73, "id78"], [73, "ot.da.MappingTransport.fit"]], "fit() (ot.da.sinkhornl1l2transport method)": [[73, "id87"], [73, "ot.da.SinkhornL1l2Transport.fit"]], "fit() (ot.da.sinkhornlpl1transport method)": [[73, "id94"], [73, "ot.da.SinkhornLpl1Transport.fit"]], "fit() (ot.da.sinkhorntransport method)": [[73, "id102"], [73, "ot.da.SinkhornTransport.fit"]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[73, "id109"], [73, "ot.da.UnbalancedSinkhornTransport.fit"]], "fit_transform() (ot.da.basetransport method)": [[73, "id33"], [73, "ot.da.BaseTransport.fit_transform"]], "inverse_transform() (ot.da.basetransport method)": [[73, "id34"], [73, "ot.da.BaseTransport.inverse_transform"]], "inverse_transform() (ot.da.lineartransport method)": [[73, "id71"], [73, "ot.da.LinearTransport.inverse_transform"]], "inverse_transform_labels() (ot.da.basetransport method)": [[73, "id35"], [73, "ot.da.BaseTransport.inverse_transform_labels"]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[73, "id61"], [73, "ot.da.JCPOTTransport.inverse_transform_labels"]], "joint_ot_mapping_kernel() (in module ot.da)": [[73, "id115"], [73, "ot.da.joint_OT_mapping_kernel"]], "joint_ot_mapping_linear() (in module ot.da)": [[73, "id118"], [73, "ot.da.joint_OT_mapping_linear"]], "log_ (ot.da.jcpottransport attribute)": [[73, "id56"], [73, "ot.da.JCPOTTransport.log_"]], "log_ (ot.da.mappingtransport attribute)": [[73, "id76"], [73, "ot.da.MappingTransport.log_"]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[73, "id82"], [73, "ot.da.SinkhornL1l2Transport.log_"]], "log_ (ot.da.sinkhorntransport attribute)": [[73, "id97"], [73, "ot.da.SinkhornTransport.log_"]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[73, "id105"], [73, "ot.da.UnbalancedSinkhornTransport.log_"]], "mapping_ (ot.da.mappingtransport attribute)": [[73, "id75"], [73, "ot.da.MappingTransport.mapping_"]], "ot.da": [[73, "module-ot.da"]], "proportions_ (ot.da.jcpottransport attribute)": [[73, "id55"], [73, "ot.da.JCPOTTransport.proportions_"]], "sinkhorn_l1l2_gl() (in module ot.da)": [[73, "id121"], [73, "ot.da.sinkhorn_l1l2_gl"]], "sinkhorn_lpl1_mm() (in module ot.da)": [[73, "id125"], [73, "ot.da.sinkhorn_lpl1_mm"]], "transform() (ot.da.basetransport method)": [[73, "id36"], [73, "ot.da.BaseTransport.transform"]], "transform() (ot.da.jcpottransport method)": [[73, "id62"], [73, "ot.da.JCPOTTransport.transform"]], "transform() (ot.da.lineartransport method)": [[73, "id72"], [73, "ot.da.LinearTransport.transform"]], "transform() (ot.da.mappingtransport method)": [[73, "id79"], [73, "ot.da.MappingTransport.transform"]], "transform_labels() (ot.da.basetransport method)": [[73, "id37"], [73, "ot.da.BaseTransport.transform_labels"]], "transform_labels() (ot.da.jcpottransport method)": [[73, "id63"], [73, "ot.da.JCPOTTransport.transform_labels"]], "make_1d_gauss() (in module ot.datasets)": [[74, "id0"], [74, "ot.datasets.make_1D_gauss"]], "make_2d_samples_gauss() (in module ot.datasets)": [[74, "id1"], [74, "ot.datasets.make_2D_samples_gauss"]], "make_data_classif() (in module ot.datasets)": [[74, "id2"], [74, "ot.datasets.make_data_classif"]], "ot.datasets": [[74, "module-ot.datasets"]], "dist() (in module ot.dr)": [[75, "id0"], [75, "ot.dr.dist"]], "ewca() (in module ot.dr)": [[75, "id4"], [75, "ot.dr.ewca"]], "fda() (in module ot.dr)": [[75, "id7"], [75, "ot.dr.fda"]], "logsumexp() (in module ot.dr)": [[75, "id8"], [75, "ot.dr.logsumexp"]], "ot.dr": [[75, "module-ot.dr"]], "projection_robust_wasserstein() (in module ot.dr)": [[75, "id9"], [75, "ot.dr.projection_robust_wasserstein"]], "sinkhorn() (in module ot.dr)": [[75, "id12"], [75, "ot.dr.sinkhorn"]], "sinkhorn_log() (in module ot.dr)": [[75, "id13"], [75, "ot.dr.sinkhorn_log"]], "split_classes() (in module ot.dr)": [[75, "id14"], [75, "ot.dr.split_classes"]], "wda() (in module ot.dr)": [[75, "id15"], [75, "ot.dr.wda"]], "factored_optimal_transport() (in module ot.factored)": [[76, "id0"], [76, "ot.factored.factored_optimal_transport"]], "ot.factored": [[76, "module-ot.factored"]], "bures_wasserstein_distance() (in module ot.gaussian)": [[77, "id0"], [77, "ot.gaussian.bures_wasserstein_distance"]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[77, "id11"], [77, "ot.gaussian.bures_wasserstein_mapping"]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[77, "id15"], [77, "ot.gaussian.empirical_bures_wasserstein_distance"]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[77, "id18"], [77, "ot.gaussian.empirical_bures_wasserstein_mapping"]], "ot.gaussian": [[77, "module-ot.gaussian"]], "fgw_distance_to_templates() (in module ot.gnn)": [[78, "ot.gnn.FGW_distance_to_templates"]], "tfgwpooling (class in ot.gnn)": [[78, "ot.gnn.TFGWPooling"]], "twpooling (class in ot.gnn)": [[78, "ot.gnn.TWPooling"]], "forward() (ot.gnn.tfgwpooling method)": [[78, "ot.gnn.TFGWPooling.forward"]], "forward() (ot.gnn.twpooling method)": [[78, "ot.gnn.TWPooling.forward"]], "ot.gnn": [[78, "module-ot.gnn"]], "wasserstein_distance_to_templates() (in module ot.gnn)": [[78, "ot.gnn.wasserstein_distance_to_templates"]], "gw_distance_estimation() (in module ot.gromov)": [[79, "ot.gromov.GW_distance_estimation"]], "entropic_fused_gromov_barycenters() (in module ot.gromov)": [[79, "ot.gromov.entropic_fused_gromov_barycenters"]], "entropic_fused_gromov_wasserstein() (in module ot.gromov)": [[79, "ot.gromov.entropic_fused_gromov_wasserstein"]], "entropic_fused_gromov_wasserstein2() (in module ot.gromov)": [[79, "ot.gromov.entropic_fused_gromov_wasserstein2"]], "entropic_gromov_barycenters() (in module ot.gromov)": [[79, "ot.gromov.entropic_gromov_barycenters"]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[79, "ot.gromov.entropic_gromov_wasserstein"]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[79, "ot.gromov.entropic_gromov_wasserstein2"]], "entropic_semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[79, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein"]], "entropic_semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[79, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein2"]], "entropic_semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[79, "ot.gromov.entropic_semirelaxed_gromov_wasserstein"]], "entropic_semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[79, "ot.gromov.entropic_semirelaxed_gromov_wasserstein2"]], "fgw_barycenters() (in module ot.gromov)": [[79, "ot.gromov.fgw_barycenters"]], "fused_gromov_wasserstein() (in module ot.gromov)": [[79, "ot.gromov.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[79, "ot.gromov.fused_gromov_wasserstein2"]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[79, "ot.gromov.fused_gromov_wasserstein_dictionary_learning"]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[79, "ot.gromov.fused_gromov_wasserstein_linear_unmixing"]], "gromov_barycenters() (in module ot.gromov)": [[79, "ot.gromov.gromov_barycenters"]], "gromov_wasserstein() (in module ot.gromov)": [[79, "ot.gromov.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot.gromov)": [[79, "ot.gromov.gromov_wasserstein2"]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[79, "ot.gromov.gromov_wasserstein_dictionary_learning"]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[79, "ot.gromov.gromov_wasserstein_linear_unmixing"]], "gwggrad() (in module ot.gromov)": [[79, "ot.gromov.gwggrad"]], "gwloss() (in module ot.gromov)": [[79, "ot.gromov.gwloss"]], "init_matrix() (in module ot.gromov)": [[79, "ot.gromov.init_matrix"]], "init_matrix_semirelaxed() (in module ot.gromov)": [[79, "ot.gromov.init_matrix_semirelaxed"]], "ot.gromov": [[79, "module-ot.gromov"]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[79, "ot.gromov.pointwise_gromov_wasserstein"]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[79, "ot.gromov.sampled_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[79, "ot.gromov.semirelaxed_fused_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[79, "ot.gromov.semirelaxed_fused_gromov_wasserstein2"]], "semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[79, "ot.gromov.semirelaxed_gromov_wasserstein"]], "semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[79, "ot.gromov.semirelaxed_gromov_wasserstein2"]], "solve_gromov_linesearch() (in module ot.gromov)": [[79, "ot.gromov.solve_gromov_linesearch"]], "solve_semirelaxed_gromov_linesearch() (in module ot.gromov)": [[79, "ot.gromov.solve_semirelaxed_gromov_linesearch"]], "tensor_product() (in module ot.gromov)": [[79, "ot.gromov.tensor_product"]], "update_feature_matrix() (in module ot.gromov)": [[79, "ot.gromov.update_feature_matrix"]], "update_kl_loss() (in module ot.gromov)": [[79, "ot.gromov.update_kl_loss"]], "update_square_loss() (in module ot.gromov)": [[79, "ot.gromov.update_square_loss"]], "barycenter() (in module ot.lp)": [[80, "ot.lp.barycenter"]], "binary_search_circle() (in module ot.lp)": [[80, "ot.lp.binary_search_circle"]], "center_ot_dual() (in module ot.lp)": [[80, "ot.lp.center_ot_dual"]], "check_number_threads() (in module ot.lp)": [[80, "ot.lp.check_number_threads"]], "emd() (in module ot.lp)": [[80, "id0"], [80, "ot.lp.emd"]], "emd2() (in module ot.lp)": [[80, "id11"], [80, "ot.lp.emd2"]], "emd2_1d() (in module ot.lp)": [[80, "ot.lp.emd2_1d"]], "emd_1d() (in module ot.lp)": [[80, "ot.lp.emd_1d"]], "estimate_dual_null_weights() (in module ot.lp)": [[80, "ot.lp.estimate_dual_null_weights"]], "free_support_barycenter() (in module ot.lp)": [[80, "id18"], [80, "ot.lp.free_support_barycenter"]], "generalized_free_support_barycenter() (in module ot.lp)": [[80, "id22"], [80, "ot.lp.generalized_free_support_barycenter"]], "ot.lp": [[80, "module-ot.lp"]], "semidiscrete_wasserstein2_unif_circle() (in module ot.lp)": [[80, "ot.lp.semidiscrete_wasserstein2_unif_circle"]], "wasserstein_1d() (in module ot.lp)": [[80, "ot.lp.wasserstein_1d"]], "wasserstein_circle() (in module ot.lp)": [[80, "ot.lp.wasserstein_circle"]], "cg() (in module ot.optim)": [[81, "id0"], [81, "ot.optim.cg"]], "gcg() (in module ot.optim)": [[81, "id13"], [81, "ot.optim.gcg"]], "generic_conditional_gradient() (in module ot.optim)": [[81, "id17"], [81, "ot.optim.generic_conditional_gradient"]], "line_search_armijo() (in module ot.optim)": [[81, "id23"], [81, "ot.optim.line_search_armijo"]], "ot.optim": [[81, "module-ot.optim"]], "semirelaxed_cg() (in module ot.optim)": [[81, "id24"], [81, "ot.optim.semirelaxed_cg"]], "solve_1d_linesearch_quad() (in module ot.optim)": [[81, "id27"], [81, "ot.optim.solve_1d_linesearch_quad"]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[82, "id0"], [82, "ot.partial.entropic_partial_gromov_wasserstein"]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[82, "id17"], [82, "ot.partial.entropic_partial_gromov_wasserstein2"]], "entropic_partial_wasserstein() (in module ot.partial)": [[82, "id21"], [82, "ot.partial.entropic_partial_wasserstein"]], "gwgrad_partial() (in module ot.partial)": [[82, "id24"], [82, "ot.partial.gwgrad_partial"]], "gwloss_partial() (in module ot.partial)": [[82, "id27"], [82, "ot.partial.gwloss_partial"]], "ot.partial": [[82, "module-ot.partial"]], "partial_gromov_wasserstein() (in module ot.partial)": [[82, "id28"], [82, "ot.partial.partial_gromov_wasserstein"]], "partial_gromov_wasserstein2() (in module ot.partial)": [[82, "id31"], [82, "ot.partial.partial_gromov_wasserstein2"]], "partial_wasserstein() (in module ot.partial)": [[82, "id34"], [82, "ot.partial.partial_wasserstein"]], "partial_wasserstein2() (in module ot.partial)": [[82, "id37"], [82, "ot.partial.partial_wasserstein2"]], "partial_wasserstein_lagrange() (in module ot.partial)": [[82, "id40"], [82, "ot.partial.partial_wasserstein_lagrange"]], "ot.plot": [[83, "module-ot.plot"]], "plot1d_mat() (in module ot.plot)": [[83, "id0"], [83, "ot.plot.plot1D_mat"]], "plot2d_samples_mat() (in module ot.plot)": [[83, "id1"], [83, "ot.plot.plot2D_samples_mat"]], "complement_schur() (in module ot.regpath)": [[84, "id0"], [84, "ot.regpath.complement_schur"]], "compute_next_removal() (in module ot.regpath)": [[84, "id12"], [84, "ot.regpath.compute_next_removal"]], "compute_transport_plan() (in module ot.regpath)": [[84, "id15"], [84, "ot.regpath.compute_transport_plan"]], "construct_augmented_h() (in module ot.regpath)": [[84, "id18"], [84, "ot.regpath.construct_augmented_H"]], "fully_relaxed_path() (in module ot.regpath)": [[84, "id19"], [84, "ot.regpath.fully_relaxed_path"]], "ot.regpath": [[84, "module-ot.regpath"]], "ot_next_gamma() (in module ot.regpath)": [[84, "id21"], [84, "ot.regpath.ot_next_gamma"]], "recast_ot_as_lasso() (in module ot.regpath)": [[84, "id23"], [84, "ot.regpath.recast_ot_as_lasso"]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[84, "id25"], [84, "ot.regpath.recast_semi_relaxed_as_lasso"]], "regularization_path() (in module ot.regpath)": [[84, "id26"], [84, "ot.regpath.regularization_path"]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[84, "id28"], [84, "ot.regpath.semi_relaxed_next_gamma"]], "semi_relaxed_path() (in module ot.regpath)": [[84, "id30"], [84, "ot.regpath.semi_relaxed_path"]], "get_random_projections() (in module ot.sliced)": [[85, "id0"], [85, "ot.sliced.get_random_projections"]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[85, "id5"], [85, "ot.sliced.max_sliced_wasserstein_distance"]], "ot.sliced": [[85, "module-ot.sliced"]], "sliced_wasserstein_distance() (in module ot.sliced)": [[85, "id7"], [85, "ot.sliced.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[85, "id9"], [85, "ot.sliced.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[85, "id11"], [85, "ot.sliced.sliced_wasserstein_sphere_unif"]], "negentropy (class in ot.smooth)": [[86, "id0"], [86, "ot.smooth.NegEntropy"]], "omega() (ot.smooth.negentropy method)": [[86, "id7"], [86, "ot.smooth.NegEntropy.Omega"]], "omega() (ot.smooth.regularization method)": [[86, "id11"], [86, "ot.smooth.Regularization.Omega"]], "omega() (ot.smooth.sparsityconstrained method)": [[86, "id15"], [86, "ot.smooth.SparsityConstrained.Omega"]], "omega() (ot.smooth.squaredl2 method)": [[86, "id19"], [86, "ot.smooth.SquaredL2.Omega"]], "regularization (class in ot.smooth)": [[86, "id10"], [86, "ot.smooth.Regularization"]], "sparsityconstrained (class in ot.smooth)": [[86, "id14"], [86, "ot.smooth.SparsityConstrained"]], "squaredl2 (class in ot.smooth)": [[86, "id18"], [86, "ot.smooth.SquaredL2"]], "delta_omega() (ot.smooth.negentropy method)": [[86, "id8"], [86, "ot.smooth.NegEntropy.delta_Omega"]], "delta_omega() (ot.smooth.regularization method)": [[86, "id12"], [86, "ot.smooth.Regularization.delta_Omega"]], "delta_omega() (ot.smooth.sparsityconstrained method)": [[86, "id16"], [86, "ot.smooth.SparsityConstrained.delta_Omega"]], "delta_omega() (ot.smooth.squaredl2 method)": [[86, "id20"], [86, "ot.smooth.SquaredL2.delta_Omega"]], "dual_obj_grad() (in module ot.smooth)": [[86, "id22"], [86, "ot.smooth.dual_obj_grad"]], "get_plan_from_dual() (in module ot.smooth)": [[86, "id23"], [86, "ot.smooth.get_plan_from_dual"]], "get_plan_from_semi_dual() (in module ot.smooth)": [[86, "id24"], [86, "ot.smooth.get_plan_from_semi_dual"]], "max_omega() (ot.smooth.negentropy method)": [[86, "id9"], [86, "ot.smooth.NegEntropy.max_Omega"]], "max_omega() (ot.smooth.regularization method)": [[86, "id13"], [86, "ot.smooth.Regularization.max_Omega"]], "max_omega() (ot.smooth.sparsityconstrained method)": [[86, "id17"], [86, "ot.smooth.SparsityConstrained.max_Omega"]], "max_omega() (ot.smooth.squaredl2 method)": [[86, "id21"], [86, "ot.smooth.SquaredL2.max_Omega"]], "ot.smooth": [[86, "module-ot.smooth"]], "projection_simplex() (in module ot.smooth)": [[86, "id25"], [86, "ot.smooth.projection_simplex"]], "semi_dual_obj_grad() (in module ot.smooth)": [[86, "id26"], [86, "ot.smooth.semi_dual_obj_grad"]], "smooth_ot_dual() (in module ot.smooth)": [[86, "id27"], [86, "ot.smooth.smooth_ot_dual"]], "smooth_ot_semi_dual() (in module ot.smooth)": [[86, "id32"], [86, "ot.smooth.smooth_ot_semi_dual"]], "solve_dual() (in module ot.smooth)": [[86, "id37"], [86, "ot.smooth.solve_dual"]], "solve_semi_dual() (in module ot.smooth)": [[86, "id38"], [86, "ot.smooth.solve_semi_dual"]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[87, "id0"], [87, "ot.stochastic.averaged_sgd_entropic_transport"]], "batch_grad_dual() (in module ot.stochastic)": [[87, "id14"], [87, "ot.stochastic.batch_grad_dual"]], "c_transform_entropic() (in module ot.stochastic)": [[87, "id16"], [87, "ot.stochastic.c_transform_entropic"]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[87, "id18"], [87, "ot.stochastic.coordinate_grad_semi_dual"]], "loss_dual_entropic() (in module ot.stochastic)": [[87, "id20"], [87, "ot.stochastic.loss_dual_entropic"]], "loss_dual_quadratic() (in module ot.stochastic)": [[87, "id22"], [87, "ot.stochastic.loss_dual_quadratic"]], "ot.stochastic": [[87, "module-ot.stochastic"]], "plan_dual_entropic() (in module ot.stochastic)": [[87, "id24"], [87, "ot.stochastic.plan_dual_entropic"]], "plan_dual_quadratic() (in module ot.stochastic)": [[87, "id26"], [87, "ot.stochastic.plan_dual_quadratic"]], "sag_entropic_transport() (in module ot.stochastic)": [[87, "id28"], [87, "ot.stochastic.sag_entropic_transport"]], "sgd_entropic_regularization() (in module ot.stochastic)": [[87, "id30"], [87, "ot.stochastic.sgd_entropic_regularization"]], "solve_dual_entropic() (in module ot.stochastic)": [[87, "id32"], [87, "ot.stochastic.solve_dual_entropic"]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[87, "id34"], [87, "ot.stochastic.solve_semi_dual_entropic"]], "barycenter_unbalanced() (in module ot.unbalanced)": [[88, "id0"], [88, "ot.unbalanced.barycenter_unbalanced"]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[88, "id25"], [88, "ot.unbalanced.barycenter_unbalanced_sinkhorn"]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[88, "id29"], [88, "ot.unbalanced.barycenter_unbalanced_stabilized"]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[88, "id33"], [88, "ot.unbalanced.lbfgsb_unbalanced"]], "mm_unbalanced() (in module ot.unbalanced)": [[88, "id35"], [88, "ot.unbalanced.mm_unbalanced"]], "mm_unbalanced2() (in module ot.unbalanced)": [[88, "id38"], [88, "ot.unbalanced.mm_unbalanced2"]], "ot.unbalanced": [[88, "module-ot.unbalanced"]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[88, "id40"], [88, "ot.unbalanced.sinkhorn_knopp_unbalanced"]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[88, "id44"], [88, "ot.unbalanced.sinkhorn_stabilized_unbalanced"]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[88, "id48"], [88, "ot.unbalanced.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[88, "id54"], [88, "ot.unbalanced.sinkhorn_unbalanced2"]], "baseestimator (class in ot.utils)": [[89, "id0"], [89, "ot.utils.BaseEstimator"]], "otresult (class in ot.utils)": [[89, "ot.utils.OTResult"]], "undefinedparameter": [[89, "ot.utils.UndefinedParameter"]], "a_to_b (ot.utils.otresult property)": [[89, "ot.utils.OTResult.a_to_b"]], "b_to_a (ot.utils.otresult property)": [[89, "ot.utils.OTResult.b_to_a"]], "check_params() (in module ot.utils)": [[89, "id3"], [89, "ot.utils.check_params"]], "check_random_state() (in module ot.utils)": [[89, "id4"], [89, "ot.utils.check_random_state"]], "citation (ot.utils.otresult property)": [[89, "ot.utils.OTResult.citation"]], "clean_zeros() (in module ot.utils)": [[89, "id5"], [89, "ot.utils.clean_zeros"]], "cost_normalization() (in module ot.utils)": [[89, "id6"], [89, "ot.utils.cost_normalization"]], "deprecated (class in ot.utils)": [[89, "id7"], [89, "ot.utils.deprecated"]], "dist() (in module ot.utils)": [[89, "id8"], [89, "ot.utils.dist"]], "dist0() (in module ot.utils)": [[89, "id9"], [89, "ot.utils.dist0"]], "dots() (in module ot.utils)": [[89, "id10"], [89, "ot.utils.dots"]], "euclidean_distances() (in module ot.utils)": [[89, "id11"], [89, "ot.utils.euclidean_distances"]], "get_coordinate_circle() (in module ot.utils)": [[89, "id12"], [89, "ot.utils.get_coordinate_circle"]], "get_params() (ot.utils.baseestimator method)": [[89, "id1"], [89, "ot.utils.BaseEstimator.get_params"]], "kernel() (in module ot.utils)": [[89, "id13"], [89, "ot.utils.kernel"]], "label_normalization() (in module ot.utils)": [[89, "id14"], [89, "ot.utils.label_normalization"]], "laplacian() (in module ot.utils)": [[89, "id15"], [89, "ot.utils.laplacian"]], "lazy_plan (ot.utils.otresult property)": [[89, "ot.utils.OTResult.lazy_plan"]], "list_to_array() (in module ot.utils)": [[89, "id16"], [89, "ot.utils.list_to_array"]], "marginal_a (ot.utils.otresult property)": [[89, "ot.utils.OTResult.marginal_a"]], "marginal_b (ot.utils.otresult property)": [[89, "ot.utils.OTResult.marginal_b"]], "marginals (ot.utils.otresult property)": [[89, "ot.utils.OTResult.marginals"]], "ot.utils": [[89, "module-ot.utils"]], "parmap() (in module ot.utils)": [[89, "id17"], [89, "ot.utils.parmap"]], "plan (ot.utils.otresult property)": [[89, "ot.utils.OTResult.plan"]], "potential_a (ot.utils.otresult property)": [[89, "ot.utils.OTResult.potential_a"]], "potential_b (ot.utils.otresult property)": [[89, "ot.utils.OTResult.potential_b"]], "potentials (ot.utils.otresult property)": [[89, "ot.utils.OTResult.potentials"]], "proj_simplex() (in module ot.utils)": [[89, "id18"], [89, "ot.utils.proj_simplex"]], "projection_sparse_simplex() (in module ot.utils)": [[89, "id19"], [89, "ot.utils.projection_sparse_simplex"]], "set_params() (ot.utils.baseestimator method)": [[89, "id2"], [89, "ot.utils.BaseEstimator.set_params"]], "sparse_plan (ot.utils.otresult property)": [[89, "ot.utils.OTResult.sparse_plan"]], "status (ot.utils.otresult property)": [[89, "ot.utils.OTResult.status"]], "tic() (in module ot.utils)": [[89, "id20"], [89, "ot.utils.tic"]], "toc() (in module ot.utils)": [[89, "id21"], [89, "ot.utils.toc"]], "toq() (in module ot.utils)": [[89, "id22"], [89, "ot.utils.toq"]], "unif() (in module ot.utils)": [[89, "id23"], [89, "ot.utils.unif"]], "value (ot.utils.otresult property)": [[89, "ot.utils.OTResult.value"]], "value_linear (ot.utils.otresult property)": [[89, "ot.utils.OTResult.value_linear"]], "ot.weak": [[90, "module-ot.weak"]], "weak_optimal_transport() (in module ot.weak)": [[90, "id0"], [90, "ot.weak.weak_optimal_transport"]]}})