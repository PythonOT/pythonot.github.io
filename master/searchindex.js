Search.setIndex({"alltitles": {"(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[37, null]], "0.1.10": [[110, "id40"]], "0.1.11": [[110, "id39"]], "0.1.3": [[110, "id43"]], "0.1.7": [[110, "id42"]], "0.1.9": [[110, "id41"]], "0.3": [[110, "id38"]], "0.3.1": [[110, "id37"]], "0.4": [[110, "id34"]], "0.5.0": [[110, "id31"]], "0.6.0": [[110, "id28"]], "0.7.0": [[110, "id26"]], "0.8.0": [[110, "id23"]], "0.8.1": [[110, "id20"]], "0.8.1.0": [[110, "id18"]], "0.8.2": [[110, "id15"]], "0.9.1": [[110, "id12"]], "0.9.2": [[110, "id9"]], "0.9.3": [[110, "id7"]], "0.9.4": [[110, "id4"]], "0.9.5": [[110, "id1"]], "0.9.6dev": [[110, "dev"]], "1D Unbalanced optimal transport": [[74, null]], "1D Wasserstein barycenter demo": [[11, null]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[75, null]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[12, null]], "2D data example": [[68, "d-data-example"]], "2D examples of exact and entropic unbalanced optimal transport": [[80, null]], "2D free support Sinkhorn barycenters of distributions": [[16, null]], "2D free support Wasserstein barycenters of distributions": [[15, null]], "API and modules": [[0, null]], "Acknowledgements": [[109, "acknowledgements"]], "Acknowledgments": [[84, "acknowledgments"]], "Add node features": [[31, "add-node-features"], [40, "add-node-features"]], "Algorithm": [[60, "algorithm"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[112, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Anaconda installation with conda-forge": [[109, "anaconda-installation-with-conda-forge"]], "Animate trajectories of generated samples along iteration": [[5, "animate-trajectories-of-generated-samples-along-iteration"], [9, "animate-trajectories-of-generated-samples-along-iteration"]], "Animate trajectories of the barycenter along gradient descent": [[4, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Animate trajectories of the gradient flow along iteration": [[4, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Animation of the regpath for UOT l2": [[79, "animation-of-the-regpath-for-uot-l2"]], "Animation of the regpath for semi-relaxed UOT l2": [[79, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "Attribution": [[82, "attribution"]], "Barycenter computation": [[11, "barycenter-computation"], [30, "barycenter-computation"], [36, "barycenter-computation"], [75, "barycenter-computation"]], "Barycenter computation and plot": [[18, "barycenter-computation-and-plot"]], "Barycenter computation and visualization": [[13, "barycenter-computation-and-visualization"], [14, "barycenter-computation-and-visualization"]], "Barycenters with fixed support": [[112, "barycenters-with-fixed-support"]], "Barycenters with free support": [[112, "barycenters-with-free-support"]], "Barycentric interpolation": [[11, "barycentric-interpolation"], [75, "barycentric-interpolation"]], "Breaking change": [[110, "breaking-change"]], "Classes": [[85, "classes"], [88, "classes"], [104, "classes"], [107, "classes"]], "Closed issues": [[110, "closed-issues"], [110, "id3"], [110, "id6"], [110, "id8"], [110, "id11"], [110, "id14"], [110, "id17"], [110, "id19"], [110, "id22"], [110, "id25"], [110, "id27"], [110, "id30"], [110, "id33"], [110, "id36"]], "Code of conduct": [[82, null]], "Community clustering with uniform and estimated weights": [[3, "community-clustering-with-uniform-and-estimated-weights"]], "Compare Barycenters in both methods": [[51, "compare-barycenters-in-both-methods"], [51, "id1"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[66, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Compare the results with the Sinkhorn algorithm": [[58, "compare-the-results-with-the-sinkhorn-algorithm"]], "Compare with original distributions": [[51, "compare-with-original-distributions"]], "Comparing all OT plans": [[68, "comparing-all-ot-plans"]], "Comparison of Fused Gromov-Wasserstein solvers": [[33, null]], "Computation times": [[10, null], [19, null], [29, null], [42, null], [59, null], [70, null], [73, null], [81, null], [111, null]], "Compute Bures-Wasserstein barycenters and plot them": [[17, "compute-bures-wasserstein-barycenters-and-plot-them"]], "Compute EMD": [[63, "compute-emd"]], "Compute EMD for the different losses": [[65, "compute-emd-for-the-different-losses"]], "Compute EWCA": [[45, "compute-ewca"]], "Compute FGW/GW": [[32, "compute-fgw-gw"]], "Compute Factored OT and exact OT solutions": [[52, "compute-factored-ot-and-exact-ot-solutions"]], "Compute Fisher Discriminant Analysis": [[49, "compute-fisher-discriminant-analysis"]], "Compute GW with scalable stochastic methods with any loss function": [[35, "compute-gw-with-scalable-stochastic-methods-with-any-loss-function"]], "Compute Gromov-Wasserstein plans and distance": [[35, "compute-gromov-wasserstein-plans-and-distance"]], "Compute Sinkhorn": [[63, "compute-sinkhorn"]], "Compute Sinkhorn for the different losses": [[65, "compute-sinkhorn-for-the-different-losses"]], "Compute Wasserstein Discriminant Analysis": [[49, "compute-wasserstein-discriminant-analysis"]], "Compute Weak OT and exact OT solutions": [[50, "compute-weak-ot-and-exact-ot-solutions"]], "Compute distance kernels, normalize them and then display": [[35, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute entropic kl-regularized UOT with Sinkhorn and Translation Invariant Sinkhorn": [[76, "compute-entropic-kl-regularized-uot-with-sinkhorn-and-translation-invariant-sinkhorn"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[80, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Compute free support Wasserstein barycenter": [[15, "compute-free-support-wasserstein-barycenter"]], "Compute partial Gromov-Wasserstein plans and distance": [[78, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Compute partial Wasserstein plans and distance": [[78, "compute-partial-wasserstein-plans-and-distance"]], "Compute semi-relaxed and fully relaxed regularization paths": [[79, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Compute the Sliced Wasserstein Barycenter": [[4, "compute-the-sliced-wasserstein-barycenter"]], "Compute the Transportation Matrix for the Dual Problem": [[58, "compute-the-transportation-matrix-for-the-dual-problem"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[58, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Compute the quantized Fused Gromov-Wasserstein distance between samples using the wrapper": [[39, "compute-the-quantized-fused-gromov-wasserstein-distance-between-samples-using-the-wrapper"]], "Compute the quantized Gromov-Wasserstein distance using the wrapper": [[39, "compute-the-quantized-gromov-wasserstein-distance-using-the-wrapper"]], "Compute their Fused Gromov-Wasserstein distances": [[33, "compute-their-fused-gromov-wasserstein-distances"]], "Compute their entropic-regularized semi-relaxed Gromov-Wasserstein divergences": [[31, "compute-their-entropic-regularized-semi-relaxed-gromov-wasserstein-divergences"]], "Compute their quantized Gromov-Wasserstein distance without using the wrapper": [[39, "compute-their-quantized-gromov-wasserstein-distance-without-using-the-wrapper"]], "Compute their semi-relaxed Fused Gromov-Wasserstein divergences": [[31, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"], [40, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"]], "Compute their semi-relaxed Gromov-Wasserstein divergences": [[40, "compute-their-semi-relaxed-gromov-wasserstein-divergences"]], "Computing Wasserstein distance": [[112, "computing-wasserstein-distance"]], "Computing d-dimensional Barycenters via d-MMOT": [[51, null]], "Contents": [[109, "contents"]], "Continuous OT plan estimation with Pytorch": [[6, null]], "Contributing to POT": [[83, null]], "Contributions and code of conduct": [[109, "contributions-and-code-of-conduct"]], "Contributors": [[84, null], [84, "contributors"]], "Convert data to torch tensors": [[2, "convert-data-to-torch-tensors"], [6, "convert-data-to-torch-tensors"]], "Convolutional Wasserstein Barycenter example": [[13, null]], "Cost matrix": [[60, "cost-matrix"]], "Create structure matrices and across-feature distance matrix": [[32, "create-structure-matrices-and-across-feature-distance-matrix"]], "Creators and Maintainers": [[84, "creators-and-maintainers"]], "Data for logo": [[53, "data-for-logo"]], "Data generation": [[2, "data-generation"], [5, "data-generation"], [6, "data-generation"], [9, "data-generation"]], "Data preparation": [[13, "data-preparation"], [36, "data-preparation"]], "Dataset 1 : Plot OT Matrices": [[64, "dataset-1-plot-ot-matrices"]], "Dataset 1 : uniform sampling": [[64, "dataset-1-uniform-sampling"]], "Dataset 2 : Partial circle": [[64, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[64, "dataset-2-plot-ot-matrices"]], "Debiased Sinkhorn barycenter demo": [[14, null]], "Debiased barycenter of 1D Gaussians": [[14, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[14, "debiased-barycenter-of-2d-images"]], "Define Gaussian Covariances and distributions": [[17, "define-gaussian-covariances-and-distributions"]], "Define Group lasso regularization and gradient": [[69, "define-group-lasso-regularization-and-gradient"]], "Dependencies": [[109, "dependencies"]], "Dependency": [[86, null]], "Deprecation": [[110, "deprecation"]], "Detecting outliers by learning sample marginal distribution with CO-Optimal Transport and by using unbalanced Co-Optimal Transport": [[56, null]], "Different gradient computations for regularized optimal transport": [[1, null]], "Dirac Data": [[12, "dirac-data"]], "Discrete case": [[58, "discrete-case"]], "Documentation": [[83, "documentation"]], "Domain adaptation classes": [[112, "domain-adaptation-classes"]], "Domain adaptation examples": [[43, "domain-adaptation-examples"]], "Domain adaptation for pixel distribution transfer": [[27, "domain-adaptation-for-pixel-distribution-transfer"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[2, null]], "Empirical Sinkhorn": [[63, "empirical-sinkhorn"]], "Endow the dataset with node features": [[37, "endow-the-dataset-with-node-features"], [41, "endow-the-dataset-with-node-features"]], "Enforcement": [[82, "enforcement"]], "Entropic Gromov-Wasserstein": [[54, "entropic-gromov-wasserstein"]], "Entropic OT with Sinkhorn algorithm": [[68, "entropic-ot-with-sinkhorn-algorithm"]], "Entropic Wasserstein Component Analysis": [[45, null]], "Entropic regularized OT": [[112, "entropic-regularized-ot"]], "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example": [[31, null]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[37, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Estimate linear mapping and transport": [[25, "estimate-linear-mapping-and-transport"]], "Estimate mapping and adapt": [[25, "estimate-mapping-and-adapt"]], "Estimate the Gromov-Wasserstein dictionary from the dataset": [[37, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Estimate the srFGW barycenter from the attributed graphs and visualize embeddings": [[41, "estimate-the-srfgw-barycenter-from-the-attributed-graphs-and-visualize-embeddings"]], "Estimate the srGW barycenter from the dataset and visualize embeddings": [[41, "estimate-the-srgw-barycenter-from-the-dataset-and-visualize-embeddings"]], "Estimated weights and convergence of the objective": [[7, "estimated-weights-and-convergence-of-the-objective"]], "Estimating deep dual variables for entropic OT": [[6, "estimating-deep-dual-variables-for-entropic-ot"]], "Estimating dual variables for entropic OT": [[2, "estimating-dual-variables-for-entropic-ot"]], "Estimating dual variables for quadratic OT": [[2, "estimating-dual-variables-for-quadratic-ot"]], "Examples": [[109, "examples"]], "Examples and Notebooks": [[109, "examples-and-notebooks"]], "Examples gallery": [[43, null]], "Examples of GW, regularized G and FGW barycenters": [[112, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Examples of Partial OT": [[112, "examples-of-partial-ot"]], "Examples of Unbalanced OT": [[112, "examples-of-unbalanced-ot"]], "Examples of Unbalanced OT barycenters": [[112, "examples-of-unbalanced-ot-barycenters"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[112, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "Examples of computation of GW, regularized G and FGW": [[112, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Examples of free support barycenter estimation": [[112, "examples-of-free-support-barycenter-estimation"]], "Examples of group Lasso regularization": [[112, "examples-of-group-lasso-regularization"]], "Examples of the generic solvers": [[112, "examples-of-the-generic-solvers"]], "Examples of the use of OTDA classes": [[112, "examples-of-the-use-of-otda-classes"]], "Examples of the use of WDA": [[112, "examples-of-the-use-of-wda"]], "Examples of use for Sinkhorn algorithm": [[112, "examples-of-use-for-sinkhorn-algorithm"]], "Examples of use for ot.emd": [[112, "examples-of-use-for-ot-emd"]], "Examples of use for ot.emd2": [[112, "examples-of-use-for-ot-emd2"]], "Examples of use of quadratic regularization": [[112, "examples-of-use-of-quadratic-regularization"]], "Examples using ot.coot.co_optimal_transport": [[87, "examples-using-ot-coot-co-optimal-transport"]], "Examples using ot.coot.co_optimal_transport2": [[87, "examples-using-ot-coot-co-optimal-transport2"]], "Examples using ot.da.BaseTransport": [[88, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[88, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[88, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[88, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearGWTransport": [[88, "examples-using-ot-da-lineargwtransport"]], "Examples using ot.da.LinearTransport": [[88, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[88, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[88, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[88, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[88, "examples-using-ot-da-sinkhorntransport"]], "Examples using ot.datasets.make_1D_gauss": [[89, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[89, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[89, "examples-using-ot-datasets-make-data-classif"]], "Examples using ot.dr.ewca": [[90, "examples-using-ot-dr-ewca"]], "Examples using ot.dr.fda": [[90, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[90, "examples-using-ot-dr-wda"]], "Examples using ot.gaussian.bures_wasserstein_barycenter": [[92, "examples-using-ot-gaussian-bures-wasserstein-barycenter"]], "Examples using ot.gaussian.empirical_bures_wasserstein_distance": [[92, "examples-using-ot-gaussian-empirical-bures-wasserstein-distance"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[92, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "Examples using ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping": [[92, "examples-using-ot-gaussian-empirical-gaussian-gromov-wasserstein-mapping"]], "Examples using ot.gmm.gmm_ot_apply_map": [[93, "examples-using-ot-gmm-gmm-ot-apply-map"]], "Examples using ot.gmm.gmm_ot_loss": [[93, "examples-using-ot-gmm-gmm-ot-loss"]], "Examples using ot.gmm.gmm_ot_plan_density": [[93, "examples-using-ot-gmm-gmm-ot-plan-density"]], "Examples using ot.gmm.gmm_pdf": [[93, "examples-using-ot-gmm-gmm-pdf"]], "Examples using ot.mapping.nearest_brenier_potential_fit": [[98, "examples-using-ot-mapping-nearest-brenier-potential-fit"]], "Examples using ot.mapping.nearest_brenier_potential_predict_bounds": [[98, "examples-using-ot-mapping-nearest-brenier-potential-predict-bounds"]], "Examples using ot.optim.cg": [[99, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[99, "examples-using-ot-optim-gcg"]], "Examples using ot.plot.plot1D_mat": [[101, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[101, "examples-using-ot-plot-plot2d-samples-mat"]], "Examples using ot.plot.rescale_for_imshow_plot": [[101, "examples-using-ot-plot-rescale-for-imshow-plot"]], "Examples using ot.regpath.compute_transport_plan": [[102, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[102, "examples-using-ot-regpath-regularization-path"]], "Examples using ot.smooth.smooth_ot_dual": [[104, "examples-using-ot-smooth-smooth-ot-dual"]], "Examples using ot.stochastic.loss_dual_entropic": [[105, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[105, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[105, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[105, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[105, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[105, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "Examples using ot.utils.BaseEstimator": [[107, "examples-using-ot-utils-baseestimator"]], "Examples using ot.utils.LazyTensor": [[107, "examples-using-ot-utils-lazytensor"]], "Examples using ot.utils.OTResult": [[107, "examples-using-ot-utils-otresult"]], "Examples using ot.utils.dist0": [[107, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_SDP": [[107, "examples-using-ot-utils-proj-sdp"]], "Examples using ot.utils.proj_simplex": [[107, "examples-using-ot-utils-proj-simplex"]], "Exceptions": [[107, "exceptions"]], "FAQ": [[112, "faq"]], "Factored and Low rank OT": [[68, "factored-and-low-rank-ot"]], "Features": [[110, "features"], [110, "id29"], [110, "id32"], [110, "id35"]], "Fig 1 : plots source and target samples": [[20, "fig-1-plots-source-and-target-samples"], [23, "fig-1-plots-source-and-target-samples"], [24, "fig-1-plots-source-and-target-samples"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[22, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [28, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plot optimal couplings and transported samples": [[20, "fig-2-plot-optimal-couplings-and-transported-samples"], [23, "fig-2-plot-optimal-couplings-and-transported-samples"], [24, "fig-2-plot-optimal-couplings-and-transported-samples"]], "Fig 2 : plots optimal couplings for the different methods": [[22, "fig-2-plots-optimal-couplings-for-the-different-methods"], [28, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[22, "fig-3-plot-transported-samples"], [28, "fig-3-plot-transported-samples"]], "Filing bugs": [[83, "filing-bugs"]], "Final figure": [[12, "final-figure"]], "First OT Problem": [[60, "first-ot-problem"]], "First pre-release": [[110, "first-pre-release"]], "Functions": [[85, "functions"], [87, "functions"], [88, "functions"], [89, "functions"], [90, "functions"], [91, "functions"], [92, "functions"], [93, "functions"], [96, "functions"], [98, "functions"], [99, "functions"], [101, "functions"], [102, "functions"], [103, "functions"], [104, "functions"], [105, "functions"], [107, "functions"], [108, "functions"]], "Fused Gromov-Wasserstein": [[68, "fused-gromov-wasserstein"]], "GMM Flow": [[47, null]], "GMM Plan 1D": [[46, null]], "GPU acceleration": [[112, "gpu-acceleration"]], "Gaussian Bures-Wasserstein barycenters": [[17, null]], "Gaussian Data": [[12, "gaussian-data"]], "Gaussian OT with Bures-Wasserstein": [[68, "gaussian-ot-with-bures-wasserstein"]], "General Parameters": [[16, "general-parameters"]], "Generalized Wasserstein Barycenter Demo": [[18, null]], "Generate Data": [[16, "generate-data"]], "Generate GMMOT maps and plot them over plan": [[46, "generate-gmmot-maps-and-plot-them-over-plan"]], "Generate GMMOT plan plot it": [[46, "generate-gmmot-plan-plot-it"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[37, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"], [41, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Generate and plot data": [[18, "generate-and-plot-data"]], "Generate and visualize data": [[9, "generate-and-visualize-data"], [38, "generate-and-visualize-data"]], "Generate attributed point clouds": [[39, "generate-attributed-point-clouds"]], "Generate data": [[7, "generate-data"], [11, "generate-data"], [15, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [27, "generate-data"], [28, "generate-data"], [30, "generate-data"], [32, "generate-data"], [34, "generate-data"], [45, "generate-data"], [49, "generate-data"], [54, "generate-data"], [55, "generate-data"], [56, "generate-data"], [57, "generate-data"], [61, "generate-data"], [62, "generate-data"], [63, "generate-data"], [65, "generate-data"], [67, "generate-data"], [69, "generate-data"], [71, "generate-data"], [72, "generate-data"], [74, "generate-data"], [75, "generate-data"], [79, "generate-data"], [80, "generate-data"]], "Generate data an plot it": [[50, "generate-data-an-plot-it"], [52, "generate-data-an-plot-it"]], "Generate data and plot it": [[47, "generate-data-and-plot-it"]], "Generate graphs": [[39, "generate-graphs"]], "Generate two graphs following Stochastic Block models of 2 and 3 clusters.": [[31, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [33, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [40, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"]], "Generating 2 distributions": [[51, "generating-2-distributions"]], "Generator Model": [[9, "generator-model"]], "Generic solvers": [[112, "generic-solvers"]], "Getting help": [[60, "getting-help"]], "Gradient descent": [[5, "gradient-descent"]], "Gradient descent loop": [[47, "gradient-descent-loop"]], "Graph classification training": [[34, "graph-classification-training"]], "Graph classification with Template Based Fused Gromov Wasserstein": [[34, null]], "Graph compression with GW": [[3, "graph-compression-with-gw"]], "Graph generation": [[3, "graph-generation"]], "Gromov Wasserstein and extensions": [[112, "gromov-wasserstein-and-extensions"]], "Gromov Wasserstein barycenters": [[112, "gromov-wasserstein-barycenters"]], "Gromov Wasserstein(GW)": [[112, "gromov-wasserstein-gw"]], "Gromov and Fused-Gromov-Wasserstein": [[43, "gromov-and-fused-gromov-wasserstein"]], "Gromov-Wasserstein Barycenter example": [[36, null]], "Gromov-Wasserstein and Entropic GW": [[68, "gromov-wasserstein-and-entropic-gw"]], "Gromov-Wasserstein and Fused Gromov-Wasserstein": [[68, "gromov-wasserstein-and-fused-gromov-wasserstein"]], "Gromov-Wasserstein example": [[35, null]], "Group Lasso regularization": [[112, "group-lasso-regularization"]], "How it works": [[112, "how-it-works"]], "How to contribute": [[83, "how-to-contribute"]], "Import the toolbox": [[60, "import-the-toolbox"]], "Indices and tables": [[109, "indices-and-tables"]], "Inspect generated distributions": [[16, "inspect-generated-distributions"]], "Installation": [[109, "installation"]], "Instantiate JCPOT adaptation algorithm and fit it": [[23, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[23, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate the different transport algorithms and fit them": [[20, "instantiate-the-different-transport-algorithms-and-fit-them"], [21, "instantiate-the-different-transport-algorithms-and-fit-them"], [22, "instantiate-the-different-transport-algorithms-and-fit-them"], [24, "instantiate-the-different-transport-algorithms-and-fit-them"], [26, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Interpolating Empirical Distributions": [[16, "interpolating-empirical-distributions"]], "Introduction to Optimal Transport with Python": [[60, null]], "Large scale OT": [[68, "large-scale-ot"]], "Large scale Sinkhorn": [[68, "large-scale-sinkhorn"]], "Last step visualisation": [[47, "last-step-visualisation"]], "Linear OT mapping estimation": [[25, null]], "List of compatible Backends": [[112, "list-of-compatible-backends"]], "Load image data": [[25, "load-image-data"]], "Logo of the POT toolbox": [[53, null]], "Low rank Gromov-Wasserstein": [[54, "low-rank-gromov-wasserstein"]], "Low rank Gromov-Wasterstein between samples": [[54, null]], "Low rank Sinkhorn": [[55, null]], "Low rank squared euclidean cost matrices": [[54, "low-rank-squared-euclidean-cost-matrices"]], "Main ot functions": [[0, "module-ot"]], "Minimize the distances among distributions, identify the Barycenter": [[51, "minimize-the-distances-among-distributions-identify-the-barycenter"]], "Minimizing Distances Among Many Distributions": [[51, "minimizing-distances-among-many-distributions"]], "Monge Mapping estimation": [[112, "monge-mapping-estimation"]], "Monge mapping and Domain adaptation": [[112, "monge-mapping-and-domain-adaptation"]], "More than 2 distributions": [[51, "more-than-2-distributions"]], "New contributor tips": [[83, "new-contributor-tips"]], "New features": [[110, "new-features"], [110, "id2"], [110, "id5"], [110, "id10"], [110, "id13"], [110, "id16"], [110, "id21"], [110, "id24"]], "OT and regularized OT": [[43, "ot-and-regularized-ot"]], "OT distance on the Circle": [[66, null]], "OT distances in 1D": [[65, null]], "OT for domain adaptation": [[20, null]], "OT for domain adaptation on empirical distributions": [[22, null]], "OT for image color adaptation": [[21, null]], "OT for image color adaptation with mapping estimation": [[27, null]], "OT for mapping estimation": [[112, "ot-for-mapping-estimation"]], "OT for multi-source target shift": [[23, null]], "OT loss and dual variables": [[60, "ot-loss-and-dual-variables"]], "OT mapping estimation for domain adaptation": [[26, null]], "OT with Laplacian regularization for domain adaptation": [[24, null]], "OTDA unsupervised vs semi-supervised setting": [[28, null]], "Optimal Transport between 2D empirical distributions": [[63, null]], "Optimal Transport for 1D distributions": [[61, null]], "Optimal Transport problem with a custom cost matrix": [[68, "optimal-transport-problem-with-a-custom-cost-matrix"]], "Optimal Transport solvers comparison": [[69, null]], "Optimal Transport with different ground metrics": [[64, null]], "Optimal transport and Wasserstein distance": [[112, "optimal-transport-and-wasserstein-distance"]], "Optimal transport with factored couplings": [[52, null]], "Optimization of the model wrt the Wasserstein distance": [[7, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Optimize the COOT distance with respect to the sample marginal distribution": [[56, "optimize-the-coot-distance-with-respect-to-the-sample-marginal-distribution"]], "Optimizing GW w.r.t. the weights on a template structure": [[3, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[3, null]], "Other OT problems": [[43, "other-ot-problems"]], "Other applications": [[112, "other-applications"]], "Other regularizations": [[112, "other-regularizations"]], "Our Pledge": [[82, "our-pledge"]], "Our Responsibilities": [[82, "our-responsibilities"]], "Our Standards": [[82, "our-standards"]], "POT Python Optimal Transport Toolbox": [[60, "pot-python-optimal-transport-toolbox"]], "POT backend examples": [[43, "pot-backend-examples"]], "POT installation": [[60, "pot-installation"]], "POT: Python Optimal Transport": [[109, null], [109, "pot-python-optimal-transport"]], "Partial (Entropic) Fused Gromov-Wasserstein computation and visualization": [[38, "partial-entropic-fused-gromov-wasserstein-computation-and-visualization"]], "Partial (Entropic) Gromov-Wasserstein computation and visualization": [[38, "partial-entropic-gromov-wasserstein-computation-and-visualization"]], "Partial Optimal Transport": [[68, "partial-optimal-transport"]], "Partial Wasserstein and Gromov-Wasserstein example": [[78, null]], "Partial Wasserstein in 1D": [[77, null]], "Partial optimal transport": [[112, "partial-optimal-transport"]], "Performance": [[85, "performance"]], "Pip installation": [[109, "pip-installation"]], "Plot 2D projections": [[49, "plot-2d-projections"]], "Plot Barycenter": [[30, "plot-barycenter"]], "Plot Fused-Gromov-Wasserstein": [[32, null]], "Plot Sliced Wasserstein Distance": [[71, "plot-sliced-wasserstein-distance"]], "Plot Spherical Sliced Wasserstein": [[72, "plot-spherical-sliced-wasserstein"]], "Plot Transportation Matrices": [[58, "plot-transportation-matrices"], [58, "id2"]], "Plot data": [[2, "plot-data"], [5, "plot-data"], [6, "plot-data"], [7, "plot-data"], [9, "plot-data"], [25, "plot-data"], [26, "plot-data"], [30, "plot-data"], [32, "plot-data"], [34, "plot-data"], [45, "plot-data"], [49, "plot-data"], [54, "plot-data"], [63, "plot-data"], [65, "plot-data"], [66, "plot-data"], [71, "plot-data"], [72, "plot-data"], [75, "plot-data"], [79, "plot-data"]], "Plot data, first component, and projected data": [[45, "plot-data-first-component-and-projected-data"]], "Plot distributions and loss matrix": [[57, "plot-distributions-and-loss-matrix"], [61, "plot-distributions-and-loss-matrix"], [62, "plot-distributions-and-loss-matrix"], [69, "plot-distributions-and-loss-matrix"], [74, "plot-distributions-and-loss-matrix"]], "Plot factored OT and exact OT solutions": [[52, "plot-factored-ot-and-exact-ot-solutions"]], "Plot graphs barycenter using FGW": [[30, null]], "Plot matrices": [[32, "plot-matrices"]], "Plot new images": [[21, "plot-new-images"]], "Plot original image": [[21, "plot-original-image"]], "Plot original images": [[27, "plot-original-images"]], "Plot partial FGW for subgraph matching": [[38, null]], "Plot pixel values distribution": [[27, "plot-pixel-values-distribution"]], "Plot plans": [[69, "plot-plans"]], "Plot the Wasserstein barycenter": [[15, "plot-the-wasserstein-barycenter"], [15, "id1"]], "Plot the density on target for a given source sample": [[6, "plot-the-density-on-target-for-a-given-source-sample"]], "Plot the distributions": [[17, "plot-the-distributions"]], "Plot the estimated entropic OT plan": [[2, "plot-the-estimated-entropic-ot-plan"]], "Plot the estimated quadratic OT plan": [[2, "plot-the-estimated-quadratic-ot-plan"]], "Plot the logo (clear background)": [[53, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[53, "plot-the-logo-dark-background"]], "Plot the matrix and the map": [[60, "plot-the-matrix-and-the-map"]], "Plot the regularization path": [[79, "plot-the-regularization-path"]], "Plot the results": [[76, "plot-the-results"], [80, "plot-the-results"]], "Plot the semi-relaxed regularization path": [[79, "plot-the-semi-relaxed-regularization-path"]], "Plot trajectories of generated samples along iterations": [[5, "plot-trajectories-of-generated-samples-along-iterations"], [9, "plot-trajectories-of-generated-samples-along-iterations"]], "Plot transformed images": [[25, "plot-transformed-images"], [27, "plot-transformed-images"]], "Plot transport plan": [[45, "plot-transport-plan"]], "Plot transported samples": [[25, "plot-transported-samples"], [26, "plot-transported-samples"]], "Plot weak OT and exact OT solutions": [[50, "plot-weak-ot-and-exact-ot-solutions"]], "Plotting bakeries in the city": [[60, "plotting-bakeries-in-the-city"]], "Plotting projection matches": [[18, "plotting-projection-matches"]], "Plotting the distributions": [[35, "plotting-the-distributions"]], "Plotting the reweighted source distribution": [[7, "plotting-the-reweighted-source-distribution"]], "Pooling architecture using the TFGW layer": [[34, "pooling-architecture-using-the-tfgw-layer"]], "Post installation check": [[109, "post-installation-check"]], "Pull Request Checklist": [[83, "pull-request-checklist"]], "Quadratic Regularized OT": [[68, "quadratic-regularized-ot"]], "Quadratic regularization": [[112, "quadratic-regularization"]], "Quantized Fused Gromov-Wasserstein examples": [[39, null]], "Quickstart Guide": [[68, null]], "References": [[109, "references"], [112, "references"]], "References:": [[0, "references"], [103, "references"], [103, "id12"]], "Regularization path of l2-penalized unbalanced optimal transport": [[79, null]], "Regularized OT with Sinkhorn": [[60, "regularized-ot-with-sinkhorn"]], "Regularized OT with generic solver": [[67, null]], "Regularized Optimal Transport": [[112, "regularized-optimal-transport"]], "Releases": [[110, null]], "Rotation animation": [[18, "rotation-animation"]], "Row and column alignments with CO-Optimal Transport": [[44, null]], "Run oracle transport algorithm with known proportions": [[23, "run-oracle-transport-algorithm-with-known-proportions"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[78, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Sample two 2D Gaussian distributions and plot them": [[78, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Sample two Gaussian distributions (2D and 3D)": [[35, "sample-two-gaussian-distributions-2d-and-3d"]], "Scatter plot of colors": [[21, "scatter-plot-of-colors"]], "Scope": [[82, "scope"]], "Screened optimal transport (Screenkhorn)": [[57, null]], "Semi-Continuous Case": [[58, "semi-continuous-case"]], "Semi-continuous case": [[58, "id1"]], "Semi-relaxed (Fused) Gromov-Wasserstein Barycenter as Dictionary Learning": [[41, null]], "Semi-relaxed (Fused) Gromov-Wasserstein example": [[40, null]], "Set up parameters for solvers and solve": [[69, "set-up-parameters-for-solvers-and-solve"]], "Setting parameters": [[76, "setting-parameters"]], "Short examples": [[109, "short-examples"]], "Sinkhorn and Regularized OT": [[68, "sinkhorn-and-regularized-ot"]], "Sinkhorn vs Low Rank Sinkhorn": [[55, "sinkhorn-vs-low-rank-sinkhorn"]], "Sliced Wasserstein Distance": [[43, "sliced-wasserstein-distance"]], "Sliced Wasserstein Distance on 2D distributions": [[71, null]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[4, null]], "Sliced Wasserstein distance for different seeds and number of projections": [[71, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Sliced Wasserstein gradient flow with Pytorch": [[4, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Smacof MDS": [[36, "smacof-mds"]], "Smooth and Strongly Convex Nearest Brenier Potentials": [[48, null]], "Smooth and sparse OT example": [[62, null]], "Solve EMD": [[61, "solve-emd"], [67, "solve-emd"]], "Solve EMD with Frobenius norm + entropic regularization": [[67, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Solve EMD with Frobenius norm regularization": [[67, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[67, "solve-emd-with-entropic-regularization"]], "Solve Low rank sinkhorn": [[55, "solve-low-rank-sinkhorn"]], "Solve Screenkhorn": [[57, "solve-screenkhorn"]], "Solve Sinkhorn": [[61, "solve-sinkhorn"]], "Solve Smooth OT": [[62, "solve-smooth-ot"]], "Solve Unbalanced Sinkhorn": [[74, "solve-unbalanced-sinkhorn"]], "Solve the Optimal Transport problem between the samples": [[68, "solve-the-optimal-transport-problem-between-the-samples"]], "Solve the Regularized OT problem with user-defined regularization": [[68, "solve-the-regularized-ot-problem-with-user-defined-regularization"]], "Solving OT with Multiple backends on CPU/GPU": [[112, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "Solving exact Optimal Transport": [[68, "solving-exact-optimal-transport"]], "Solving optimal transport": [[112, "solving-optimal-transport"]], "Solving the OT problem with ot.emd": [[60, "solving-the-ot-problem-with-ot-emd"]], "Special cases": [[112, "special-cases"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[72, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Spherical Sliced Wasserstein on distributions in S^2": [[72, null]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[5, null]], "Stair Data": [[12, "stair-data"]], "Steps visualisation": [[47, "steps-visualisation"]], "Stochastic examples": [[58, null]], "Support": [[109, "support"]], "Time comparison of the Sinkhorn solver for different gradient options": [[1, "time-comparison-of-the-sinkhorn-solver-for-different-gradient-options"]], "Training the model": [[9, "training-the-model"]], "Translation Invariant Sinkhorn for Unbalanced Optimal Transport": [[76, null]], "Transport source samples onto target samples": [[28, "transport-source-samples-onto-target-samples"]], "Transportation plan visualization": [[60, "transportation-plan-visualization"]], "Unbalanced Barycenters": [[112, "unbalanced-barycenters"]], "Unbalanced Optimal Transport": [[68, "unbalanced-optimal-transport"]], "Unbalanced and Partial OT": [[43, "unbalanced-and-partial-ot"], [68, "unbalanced-and-partial-ot"]], "Unbalanced and partial OT": [[112, "unbalanced-and-partial-ot"]], "Unbalanced optimal transport": [[112, "unbalanced-optimal-transport"]], "User guide": [[112, null]], "Using and citing the toolbox": [[109, "using-and-citing-the-toolbox"]], "Utils for generation and visualization": [[38, "utils-for-generation-and-visualization"]], "V0.2": [[110, "v0-2"]], "Varying the regularization parameter in Sinkhorn": [[60, "varying-the-regularization-parameter-in-sinkhorn"]], "Visualization": [[36, "visualization"]], "Visualization of the Fused Gromov-Wasserstein matchings": [[33, "visualization-of-the-fused-gromov-wasserstein-matchings"]], "Visualization of the embedding space": [[37, "visualization-of-the-embedding-space"], [37, "id2"]], "Visualization of the entropic semi-relaxed Fused Gromov-Wasserstein matchings": [[31, "visualization-of-the-entropic-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Visualization of the entropic-regularized semi-relaxed Gromov-Wasserstein matchings": [[31, "visualization-of-the-entropic-regularized-semi-relaxed-gromov-wasserstein-matchings"]], "Visualization of the estimated dictionary atoms": [[37, "visualization-of-the-estimated-dictionary-atoms"], [37, "id1"]], "Visualization of the quantized Gromov-Wasserstein matching": [[39, "visualization-of-the-quantized-gromov-wasserstein-matching"]], "Visualization of the semi-relaxed Fused Gromov-Wasserstein matchings": [[40, "visualization-of-the-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Visualization of the semi-relaxed Gromov-Wasserstein matchings": [[40, "visualization-of-the-semi-relaxed-gromov-wasserstein-matchings"]], "Visualize partitioned attributed point clouds": [[39, "visualize-partitioned-attributed-point-clouds"]], "Visualize transport matrices": [[32, "visualize-transport-matrices"]], "Visualizing the row and column alignments learned by unbalanced Co-Optimal Transport.": [[56, "visualizing-the-row-and-column-alignments-learned-by-unbalanced-co-optimal-transport"]], "Visualizing the row and column alignments with the estimated sample marginal distribution": [[56, "visualizing-the-row-and-column-alignments-with-the-estimated-sample-marginal-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[8, null]], "Wasserstein 2 Minibatch GAN with PyTorch": [[9, null]], "Wasserstein Barycenters": [[112, "wasserstein-barycenters"]], "Wasserstein Discriminant Analysis": [[49, null], [112, "wasserstein-discriminant-analysis"]], "Wasserstein barycenter": [[8, "wasserstein-barycenter"]], "Wasserstein barycenters": [[43, "wasserstein-barycenters"]], "Wasserstein distance between distributions": [[112, "wasserstein-distance-between-distributions"]], "Wasserstein distance between von Mises and uniform for different kappa": [[66, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Wasserstein loss and computational time": [[60, "wasserstein-loss-and-computational-time"]], "Wasserstein unmixing with PyTorch": [[7, null]], "Weak Optimal Transport VS exact Optimal Transport": [[50, null]], "When not to use POT": [[112, "when-not-to-use-pot"]], "When to use OT": [[112, "when-to-use-ot"]], "When to use POT": [[112, "when-to-use-pot"]], "Why Optimal Transport ?": [[112, "why-optimal-transport"]], "ot.backend": [[85, null]], "ot.bregman": [[86, null]], "ot.coot": [[87, null]], "ot.da": [[88, null]], "ot.datasets": [[89, null]], "ot.dr": [[90, null]], "ot.factored": [[91, null]], "ot.gaussian": [[92, null]], "ot.gmm": [[93, null]], "ot.gnn": [[94, null]], "ot.gromov": [[95, null]], "ot.lowrank": [[96, null]], "ot.lp": [[97, null]], "ot.mapping": [[98, null]], "ot.optim": [[99, null]], "ot.partial": [[100, null]], "ot.plot": [[101, null]], "ot.regpath": [[102, null]], "ot.sliced": [[103, null]], "ot.smooth": [[104, null]], "ot.stochastic": [[105, null]], "ot.unbalanced": [[106, null]], "ot.utils": [[107, null]], "ot.weak": [[108, null]], "plot the transported mass": [[74, "plot-the-transported-mass"]]}, "docnames": ["all", "auto_examples/backends/plot_Sinkhorn_gradients", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_gaussian_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_entropic_semirelaxed_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_fgw_solvers", "auto_examples/gromov/plot_gnn_TFGW", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/plot_partial_fgw", "auto_examples/gromov/plot_quantized_gromov_wasserstein", "auto_examples/gromov/plot_semirelaxed_fgw", "auto_examples/gromov/plot_semirelaxed_gromov_wasserstein_barycenter", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_COOT", "auto_examples/others/plot_EWCA", "auto_examples/others/plot_GMMOT_plan", "auto_examples/others/plot_GMM_flow", "auto_examples/others/plot_SSNB", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_dmmot", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_logo", "auto_examples/others/plot_lowrank_GW", "auto_examples/others/plot_lowrank_sinkhorn", "auto_examples/others/plot_outlier_detection_with_COOT_and_unbalanced_COOT", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_compute_wasserstein_circle", "auto_examples/plot_optim_OTreg", "auto_examples/plot_quickstart_guide", "auto_examples/plot_solve_variants", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_conv_sinkhorn_ti", "auto_examples/unbalanced-partial/plot_partial_1d", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "code_of_conduct", "contributing", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.coot", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gmm", "gen_modules/ot.gnn", "gen_modules/ot.gromov", "gen_modules/ot.lowrank", "gen_modules/ot.lp", "gen_modules/ot.mapping", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "releases", "sg_execution_times", "user_guide"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1}, "filenames": ["all.rst", "auto_examples/backends/plot_Sinkhorn_gradients.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_gaussian_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_entropic_semirelaxed_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_fgw_solvers.rst", "auto_examples/gromov/plot_gnn_TFGW.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/plot_partial_fgw.rst", "auto_examples/gromov/plot_quantized_gromov_wasserstein.rst", "auto_examples/gromov/plot_semirelaxed_fgw.rst", "auto_examples/gromov/plot_semirelaxed_gromov_wasserstein_barycenter.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_COOT.rst", "auto_examples/others/plot_EWCA.rst", "auto_examples/others/plot_GMMOT_plan.rst", "auto_examples/others/plot_GMM_flow.rst", "auto_examples/others/plot_SSNB.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_dmmot.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_lowrank_GW.rst", "auto_examples/others/plot_lowrank_sinkhorn.rst", "auto_examples/others/plot_outlier_detection_with_COOT_and_unbalanced_COOT.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_compute_wasserstein_circle.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/plot_quickstart_guide.rst", "auto_examples/plot_solve_variants.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_conv_sinkhorn_ti.rst", "auto_examples/unbalanced-partial/plot_partial_1d.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "code_of_conduct.rst", "contributing.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.coot.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gmm.rst", "gen_modules/ot.gnn.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lowrank.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.mapping.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "releases.rst", "sg_execution_times.rst", "user_guide.rst"], "indexentries": {"a_to_b (ot.utils.otresult property)": [[107, "id30", false], [107, "ot.utils.OTResult.a_to_b", false]], "abs() (ot.backend.backend method)": [[85, "id1", false], [85, "ot.backend.Backend.abs", false]], "abs() (ot.backend.cupybackend method)": [[85, "id87", false], [85, "ot.backend.CupyBackend.abs", false]], "abs() (ot.backend.jaxbackend method)": [[85, "id170", false], [85, "ot.backend.JaxBackend.abs", false]], "abs() (ot.backend.numpybackend method)": [[85, "id253", false], [85, "ot.backend.NumpyBackend.abs", false]], "abs() (ot.backend.tensorflowbackend method)": [[85, "id336", false], [85, "ot.backend.TensorflowBackend.abs", false]], "abs() (ot.backend.torchbackend method)": [[85, "id419", false], [85, "ot.backend.TorchBackend.abs", false]], "allclose() (ot.backend.backend method)": [[85, "id2", false], [85, "ot.backend.Backend.allclose", false]], "allclose() (ot.backend.cupybackend method)": [[85, "id88", false], [85, "ot.backend.CupyBackend.allclose", false]], "allclose() (ot.backend.jaxbackend method)": [[85, "id171", false], [85, "ot.backend.JaxBackend.allclose", false]], "allclose() (ot.backend.numpybackend method)": [[85, "id254", false], [85, "ot.backend.NumpyBackend.allclose", false]], "allclose() (ot.backend.tensorflowbackend method)": [[85, "id337", false], [85, "ot.backend.TensorflowBackend.allclose", false]], "allclose() (ot.backend.torchbackend method)": [[85, "id420", false], [85, "ot.backend.TorchBackend.allclose", false]], "any() (ot.backend.backend method)": [[85, "id3", false], [85, "ot.backend.Backend.any", false]], "any() (ot.backend.cupybackend method)": [[85, "id89", false], [85, "ot.backend.CupyBackend.any", false]], "any() (ot.backend.jaxbackend method)": [[85, "id172", false], [85, "ot.backend.JaxBackend.any", false]], "any() (ot.backend.numpybackend method)": [[85, "id255", false], [85, "ot.backend.NumpyBackend.any", false]], "any() (ot.backend.tensorflowbackend method)": [[85, "id338", false], [85, "ot.backend.TensorflowBackend.any", false]], "any() (ot.backend.torchbackend method)": [[85, "id421", false], [85, "ot.backend.TorchBackend.any", false]], "arange() (ot.backend.backend method)": [[85, "id4", false], [85, "ot.backend.Backend.arange", false]], "arange() (ot.backend.cupybackend method)": [[85, "id90", false], [85, "ot.backend.CupyBackend.arange", false]], "arange() (ot.backend.jaxbackend method)": [[85, "id173", false], [85, "ot.backend.JaxBackend.arange", false]], "arange() (ot.backend.numpybackend method)": [[85, "id256", false], [85, "ot.backend.NumpyBackend.arange", false]], "arange() (ot.backend.tensorflowbackend method)": [[85, "id339", false], [85, "ot.backend.TensorflowBackend.arange", false]], "arange() (ot.backend.torchbackend method)": [[85, "id422", false], [85, "ot.backend.TorchBackend.arange", false]], "argmax() (ot.backend.backend method)": [[85, "id5", false], [85, "ot.backend.Backend.argmax", false]], "argmax() (ot.backend.cupybackend method)": [[85, "id91", false], [85, "ot.backend.CupyBackend.argmax", false]], "argmax() (ot.backend.jaxbackend method)": [[85, "id174", false], [85, "ot.backend.JaxBackend.argmax", false]], "argmax() (ot.backend.numpybackend method)": [[85, "id257", false], [85, "ot.backend.NumpyBackend.argmax", false]], "argmax() (ot.backend.tensorflowbackend method)": [[85, "id340", false], [85, "ot.backend.TensorflowBackend.argmax", false]], "argmax() (ot.backend.torchbackend method)": [[85, "id423", false], [85, "ot.backend.TorchBackend.argmax", false]], "argmin() (ot.backend.backend method)": [[85, "id6", false], [85, "ot.backend.Backend.argmin", false]], "argmin() (ot.backend.cupybackend method)": [[85, "id92", false], [85, "ot.backend.CupyBackend.argmin", false]], "argmin() (ot.backend.jaxbackend method)": [[85, "id175", false], [85, "ot.backend.JaxBackend.argmin", false]], "argmin() (ot.backend.numpybackend method)": [[85, "id258", false], [85, "ot.backend.NumpyBackend.argmin", false]], "argmin() (ot.backend.tensorflowbackend method)": [[85, "id341", false], [85, "ot.backend.TensorflowBackend.argmin", false]], "argmin() (ot.backend.torchbackend method)": [[85, "id424", false], [85, "ot.backend.TorchBackend.argmin", false]], "argsort() (ot.backend.backend method)": [[85, "id7", false], [85, "ot.backend.Backend.argsort", false]], "argsort() (ot.backend.cupybackend method)": [[85, "id93", false], [85, "ot.backend.CupyBackend.argsort", false]], "argsort() (ot.backend.jaxbackend method)": [[85, "id176", false], [85, "ot.backend.JaxBackend.argsort", false]], "argsort() (ot.backend.numpybackend method)": [[85, "id259", false], [85, "ot.backend.NumpyBackend.argsort", false]], "argsort() (ot.backend.tensorflowbackend method)": [[85, "id342", false], [85, "ot.backend.TensorflowBackend.argsort", false]], "argsort() (ot.backend.torchbackend method)": [[85, "id425", false], [85, "ot.backend.TorchBackend.argsort", false]], "array_equal() (ot.backend.backend method)": [[85, "id8", false], [85, "ot.backend.Backend.array_equal", false]], "array_equal() (ot.backend.cupybackend method)": [[85, "id94", false], [85, "ot.backend.CupyBackend.array_equal", false]], "array_equal() (ot.backend.jaxbackend method)": [[85, "id177", false], [85, "ot.backend.JaxBackend.array_equal", false]], "array_equal() (ot.backend.numpybackend method)": [[85, "id260", false], [85, "ot.backend.NumpyBackend.array_equal", false]], "array_equal() (ot.backend.tensorflowbackend method)": [[85, "id343", false], [85, "ot.backend.TensorflowBackend.array_equal", false]], "array_equal() (ot.backend.torchbackend method)": [[85, "id426", false], [85, "ot.backend.TorchBackend.array_equal", false]], "assert_same_dtype_device() (ot.backend.backend method)": [[85, "id9", false], [85, "ot.backend.Backend.assert_same_dtype_device", false]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[85, "id95", false], [85, "ot.backend.CupyBackend.assert_same_dtype_device", false]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[85, "id178", false], [85, "ot.backend.JaxBackend.assert_same_dtype_device", false]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[85, "id261", false], [85, "ot.backend.NumpyBackend.assert_same_dtype_device", false]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[85, "id344", false], [85, "ot.backend.TensorflowBackend.assert_same_dtype_device", false]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[85, "id427", false], [85, "ot.backend.TorchBackend.assert_same_dtype_device", false]], "atan2() (ot.backend.backend method)": [[85, "id10", false], [85, "ot.backend.Backend.atan2", false]], "atan2() (ot.backend.cupybackend method)": [[85, "id96", false], [85, "ot.backend.CupyBackend.atan2", false]], "atan2() (ot.backend.jaxbackend method)": [[85, "id179", false], [85, "ot.backend.JaxBackend.atan2", false]], "atan2() (ot.backend.numpybackend method)": [[85, "id262", false], [85, "ot.backend.NumpyBackend.atan2", false]], "atan2() (ot.backend.tensorflowbackend method)": [[85, "id345", false], [85, "ot.backend.TensorflowBackend.atan2", false]], "atan2() (ot.backend.torchbackend method)": [[85, "id428", false], [85, "ot.backend.TorchBackend.atan2", false]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[105, "id0", false], [105, "ot.stochastic.averaged_sgd_entropic_transport", false]], "b_to_a (ot.utils.otresult property)": [[107, "id31", false], [107, "ot.utils.OTResult.b_to_a", false]], "backend (class in ot.backend)": [[85, "id0", false], [85, "ot.backend.Backend", false]], "bapg_fused_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.BAPG_fused_gromov_wasserstein", false]], "bapg_fused_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.BAPG_fused_gromov_wasserstein2", false]], "bapg_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.BAPG_gromov_wasserstein", false]], "bapg_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.BAPG_gromov_wasserstein2", false]], "barycenter() (in module ot)": [[0, "ot.barycenter", false]], "barycenter() (in module ot.bregman)": [[86, "ot.bregman.barycenter", false]], "barycenter() (in module ot.lp)": [[97, "ot.lp.barycenter", false]], "barycenter_debiased() (in module ot.bregman)": [[86, "ot.bregman.barycenter_debiased", false]], "barycenter_sinkhorn() (in module ot.bregman)": [[86, "ot.bregman.barycenter_sinkhorn", false]], "barycenter_stabilized() (in module ot.bregman)": [[86, "ot.bregman.barycenter_stabilized", false]], "barycenter_unbalanced() (in module ot)": [[0, "ot.barycenter_unbalanced", false]], "barycenter_unbalanced() (in module ot.unbalanced)": [[106, "ot.unbalanced.barycenter_unbalanced", false]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[106, "ot.unbalanced.barycenter_unbalanced_sinkhorn", false]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[106, "ot.unbalanced.barycenter_unbalanced_stabilized", false]], "baseestimator (class in ot.utils)": [[107, "id13", false], [107, "ot.utils.BaseEstimator", false]], "basetransport (class in ot.da)": [[88, "id0", false], [88, "ot.da.BaseTransport", false]], "batch_grad_dual() (in module ot.stochastic)": [[105, "id15", false], [105, "ot.stochastic.batch_grad_dual", false]], "binary_search_circle() (in module ot)": [[0, "ot.binary_search_circle", false]], "binary_search_circle() (in module ot.lp)": [[97, "ot.lp.binary_search_circle", false]], "bitsize() (ot.backend.backend method)": [[85, "id11", false], [85, "ot.backend.Backend.bitsize", false]], "bitsize() (ot.backend.cupybackend method)": [[85, "id97", false], [85, "ot.backend.CupyBackend.bitsize", false]], "bitsize() (ot.backend.jaxbackend method)": [[85, "id180", false], [85, "ot.backend.JaxBackend.bitsize", false]], "bitsize() (ot.backend.numpybackend method)": [[85, "id263", false], [85, "ot.backend.NumpyBackend.bitsize", false]], "bitsize() (ot.backend.tensorflowbackend method)": [[85, "id346", false], [85, "ot.backend.TensorflowBackend.bitsize", false]], "bitsize() (ot.backend.torchbackend method)": [[85, "id429", false], [85, "ot.backend.TorchBackend.bitsize", false]], "bures_barycenter_fixpoint() (in module ot.gaussian)": [[92, "id0", false], [92, "ot.gaussian.bures_barycenter_fixpoint", false]], "bures_barycenter_gradient_descent() (in module ot.gaussian)": [[92, "id24", false], [92, "ot.gaussian.bures_barycenter_gradient_descent", false]], "bures_distance() (in module ot.gaussian)": [[92, "id28", false], [92, "ot.gaussian.bures_distance", false]], "bures_wasserstein_barycenter() (in module ot.gaussian)": [[92, "id31", false], [92, "ot.gaussian.bures_wasserstein_barycenter", false]], "bures_wasserstein_distance() (in module ot.gaussian)": [[92, "id36", false], [92, "ot.gaussian.bures_wasserstein_distance", false]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[92, "id39", false], [92, "ot.gaussian.bures_wasserstein_mapping", false]], "c_transform_entropic() (in module ot.stochastic)": [[105, "id18", false], [105, "ot.stochastic.c_transform_entropic", false]], "cg() (in module ot.optim)": [[99, "id0", false], [99, "ot.optim.cg", false]], "check_number_threads() (in module ot.lp)": [[97, "ot.lp.check_number_threads", false]], "check_number_threads() (in module ot.utils)": [[107, "id47", false], [107, "ot.utils.check_number_threads", false]], "check_params() (in module ot.utils)": [[107, "id48", false], [107, "ot.utils.check_params", false]], "check_random_state() (in module ot.utils)": [[107, "id49", false], [107, "ot.utils.check_random_state", false]], "citation (ot.utils.otresult property)": [[107, "id32", false], [107, "ot.utils.OTResult.citation", false]], "clean_zeros() (in module ot.utils)": [[107, "id50", false], [107, "ot.utils.clean_zeros", false]], "clip() (ot.backend.backend method)": [[85, "id12", false], [85, "ot.backend.Backend.clip", false]], "clip() (ot.backend.cupybackend method)": [[85, "id98", false], [85, "ot.backend.CupyBackend.clip", false]], "clip() (ot.backend.jaxbackend method)": [[85, "id181", false], [85, "ot.backend.JaxBackend.clip", false]], "clip() (ot.backend.numpybackend method)": [[85, "id264", false], [85, "ot.backend.NumpyBackend.clip", false]], "clip() (ot.backend.tensorflowbackend method)": [[85, "id347", false], [85, "ot.backend.TensorflowBackend.clip", false]], "clip() (ot.backend.torchbackend method)": [[85, "id430", false], [85, "ot.backend.TorchBackend.clip", false]], "co_optimal_transport() (in module ot.coot)": [[87, "id0", false], [87, "ot.coot.co_optimal_transport", false]], "co_optimal_transport2() (in module ot.coot)": [[87, "id4", false], [87, "ot.coot.co_optimal_transport2", false]], "complement_schur() (in module ot.regpath)": [[102, "id0", false], [102, "ot.regpath.complement_schur", false]], "compute_lr_sqeuclidean_matrix() (in module ot.lowrank)": [[96, "id0", false], [96, "ot.lowrank.compute_lr_sqeuclidean_matrix", false]], "compute_next_removal() (in module ot.regpath)": [[102, "id12", false], [102, "ot.regpath.compute_next_removal", false]], "compute_transport_plan() (in module ot.regpath)": [[102, "id15", false], [102, "ot.regpath.compute_transport_plan", false]], "concatenate() (ot.backend.backend method)": [[85, "id13", false], [85, "ot.backend.Backend.concatenate", false]], "concatenate() (ot.backend.cupybackend method)": [[85, "id99", false], [85, "ot.backend.CupyBackend.concatenate", false]], "concatenate() (ot.backend.jaxbackend method)": [[85, "id182", false], [85, "ot.backend.JaxBackend.concatenate", false]], "concatenate() (ot.backend.numpybackend method)": [[85, "id265", false], [85, "ot.backend.NumpyBackend.concatenate", false]], "concatenate() (ot.backend.tensorflowbackend method)": [[85, "id348", false], [85, "ot.backend.TensorflowBackend.concatenate", false]], "concatenate() (ot.backend.torchbackend method)": [[85, "id431", false], [85, "ot.backend.TorchBackend.concatenate", false]], "construct_augmented_h() (in module ot.regpath)": [[102, "id18", false], [102, "ot.regpath.construct_augmented_H", false]], "convolutional_barycenter2d() (in module ot.bregman)": [[86, "ot.bregman.convolutional_barycenter2d", false]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[86, "ot.bregman.convolutional_barycenter2d_debiased", false]], "coo_matrix() (ot.backend.backend method)": [[85, "id14", false], [85, "ot.backend.Backend.coo_matrix", false]], "coo_matrix() (ot.backend.cupybackend method)": [[85, "id100", false], [85, "ot.backend.CupyBackend.coo_matrix", false]], "coo_matrix() (ot.backend.jaxbackend method)": [[85, "id183", false], [85, "ot.backend.JaxBackend.coo_matrix", false]], "coo_matrix() (ot.backend.numpybackend method)": [[85, "id266", false], [85, "ot.backend.NumpyBackend.coo_matrix", false]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[85, "id349", false], [85, "ot.backend.TensorflowBackend.coo_matrix", false]], "coo_matrix() (ot.backend.torchbackend method)": [[85, "id432", false], [85, "ot.backend.TorchBackend.coo_matrix", false]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[105, "id21", false], [105, "ot.stochastic.coordinate_grad_semi_dual", false]], "copy() (ot.backend.backend method)": [[85, "id15", false], [85, "ot.backend.Backend.copy", false]], "copy() (ot.backend.cupybackend method)": [[85, "id101", false], [85, "ot.backend.CupyBackend.copy", false]], "copy() (ot.backend.jaxbackend method)": [[85, "id184", false], [85, "ot.backend.JaxBackend.copy", false]], "copy() (ot.backend.numpybackend method)": [[85, "id267", false], [85, "ot.backend.NumpyBackend.copy", false]], "copy() (ot.backend.tensorflowbackend method)": [[85, "id350", false], [85, "ot.backend.TensorflowBackend.copy", false]], "copy() (ot.backend.torchbackend method)": [[85, "id433", false], [85, "ot.backend.TorchBackend.copy", false]], "cost_normalization() (in module ot.utils)": [[107, "id51", false], [107, "ot.utils.cost_normalization", false]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[88, "id47", false], [88, "ot.da.EMDLaplaceTransport.coupling_", false]], "coupling_ (ot.da.emdtransport attribute)": [[88, "id54", false], [88, "ot.da.EMDTransport.coupling_", false]], "coupling_ (ot.da.jcpottransport attribute)": [[88, "id60", false], [88, "ot.da.JCPOTTransport.coupling_", false]], "coupling_ (ot.da.mappingtransport attribute)": [[88, "id84", false], [88, "ot.da.MappingTransport.coupling_", false]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[88, "id99", false], [88, "ot.da.SinkhornL1l2Transport.coupling_", false]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[88, "id107", false], [88, "ot.da.SinkhornLpl1Transport.coupling_", false]], "coupling_ (ot.da.sinkhorntransport attribute)": [[88, "id114", false], [88, "ot.da.SinkhornTransport.coupling_", false]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[88, "id126", false], [88, "ot.da.UnbalancedSinkhornTransport.coupling_", false]], "cumsum() (ot.backend.backend method)": [[85, "id16", false], [85, "ot.backend.Backend.cumsum", false]], "cumsum() (ot.backend.cupybackend method)": [[85, "id102", false], [85, "ot.backend.CupyBackend.cumsum", false]], "cumsum() (ot.backend.jaxbackend method)": [[85, "id185", false], [85, "ot.backend.JaxBackend.cumsum", false]], "cumsum() (ot.backend.numpybackend method)": [[85, "id268", false], [85, "ot.backend.NumpyBackend.cumsum", false]], "cumsum() (ot.backend.tensorflowbackend method)": [[85, "id351", false], [85, "ot.backend.TensorflowBackend.cumsum", false]], "cumsum() (ot.backend.torchbackend method)": [[85, "id434", false], [85, "ot.backend.TorchBackend.cumsum", false]], "cupybackend (class in ot.backend)": [[85, "id86", false], [85, "ot.backend.CupyBackend", false]], "delta_omega() (ot.smooth.negentropy method)": [[104, "id8", false], [104, "ot.smooth.NegEntropy.delta_Omega", false]], "delta_omega() (ot.smooth.regularization method)": [[104, "id12", false], [104, "ot.smooth.Regularization.delta_Omega", false]], "delta_omega() (ot.smooth.sparsityconstrained method)": [[104, "id16", false], [104, "ot.smooth.SparsityConstrained.delta_Omega", false]], "delta_omega() (ot.smooth.squaredl2 method)": [[104, "id20", false], [104, "ot.smooth.SquaredL2.delta_Omega", false]], "deprecated (class in ot.utils)": [[107, "id52", false], [107, "ot.utils.deprecated", false]], "det() (ot.backend.backend method)": [[85, "id17", false], [85, "ot.backend.Backend.det", false]], "det() (ot.backend.cupybackend method)": [[85, "id103", false], [85, "ot.backend.CupyBackend.det", false]], "det() (ot.backend.jaxbackend method)": [[85, "id186", false], [85, "ot.backend.JaxBackend.det", false]], "det() (ot.backend.numpybackend method)": [[85, "id269", false], [85, "ot.backend.NumpyBackend.det", false]], "det() (ot.backend.tensorflowbackend method)": [[85, "id352", false], [85, "ot.backend.TensorflowBackend.det", false]], "det() (ot.backend.torchbackend method)": [[85, "id435", false], [85, "ot.backend.TorchBackend.det", false]], "detach() (ot.backend.backend method)": [[85, "id18", false], [85, "ot.backend.Backend.detach", false]], "device_type() (ot.backend.backend method)": [[85, "id19", false], [85, "ot.backend.Backend.device_type", false]], "device_type() (ot.backend.cupybackend method)": [[85, "id104", false], [85, "ot.backend.CupyBackend.device_type", false]], "device_type() (ot.backend.jaxbackend method)": [[85, "id187", false], [85, "ot.backend.JaxBackend.device_type", false]], "device_type() (ot.backend.numpybackend method)": [[85, "id270", false], [85, "ot.backend.NumpyBackend.device_type", false]], "device_type() (ot.backend.tensorflowbackend method)": [[85, "id353", false], [85, "ot.backend.TensorflowBackend.device_type", false]], "device_type() (ot.backend.torchbackend method)": [[85, "id436", false], [85, "ot.backend.TorchBackend.device_type", false]], "diag() (ot.backend.backend method)": [[85, "id20", false], [85, "ot.backend.Backend.diag", false]], "diag() (ot.backend.cupybackend method)": [[85, "id105", false], [85, "ot.backend.CupyBackend.diag", false]], "diag() (ot.backend.jaxbackend method)": [[85, "id188", false], [85, "ot.backend.JaxBackend.diag", false]], "diag() (ot.backend.numpybackend method)": [[85, "id271", false], [85, "ot.backend.NumpyBackend.diag", false]], "diag() (ot.backend.tensorflowbackend method)": [[85, "id354", false], [85, "ot.backend.TensorflowBackend.diag", false]], "diag() (ot.backend.torchbackend method)": [[85, "id437", false], [85, "ot.backend.TorchBackend.diag", false]], "dist() (in module ot)": [[0, "ot.dist", false]], "dist() (in module ot.dr)": [[90, "id0", false], [90, "ot.dr.dist", false]], "dist() (in module ot.utils)": [[107, "id53", false], [107, "ot.utils.dist", false]], "dist0() (in module ot.utils)": [[107, "id54", false], [107, "ot.utils.dist0", false]], "dist_bures_squared() (in module ot.gmm)": [[93, "id0", false], [93, "ot.gmm.dist_bures_squared", false]], "distribution_estimation_uniform() (in module ot.da)": [[88, "id132", false], [88, "ot.da.distribution_estimation_uniform", false]], "div_between_product() (in module ot.gromov)": [[95, "ot.gromov.div_between_product", false]], "div_to_product() (in module ot.gromov)": [[95, "ot.gromov.div_to_product", false]], "dmmot_monge_1dgrid_loss() (in module ot.lp)": [[97, "ot.lp.dmmot_monge_1dgrid_loss", false]], "dmmot_monge_1dgrid_optimize() (in module ot.lp)": [[97, "ot.lp.dmmot_monge_1dgrid_optimize", false]], "dot() (ot.backend.backend method)": [[85, "id21", false], [85, "ot.backend.Backend.dot", false]], "dot() (ot.backend.cupybackend method)": [[85, "id106", false], [85, "ot.backend.CupyBackend.dot", false]], "dot() (ot.backend.jaxbackend method)": [[85, "id189", false], [85, "ot.backend.JaxBackend.dot", false]], "dot() (ot.backend.numpybackend method)": [[85, "id272", false], [85, "ot.backend.NumpyBackend.dot", false]], "dot() (ot.backend.tensorflowbackend method)": [[85, "id355", false], [85, "ot.backend.TensorflowBackend.dot", false]], "dot() (ot.backend.torchbackend method)": [[85, "id438", false], [85, "ot.backend.TorchBackend.dot", false]], "dots() (in module ot.utils)": [[107, "id55", false], [107, "ot.utils.dots", false]], "dtype_device() (ot.backend.backend method)": [[85, "id22", false], [85, "ot.backend.Backend.dtype_device", false]], "dtype_device() (ot.backend.cupybackend method)": [[85, "id107", false], [85, "ot.backend.CupyBackend.dtype_device", false]], "dtype_device() (ot.backend.jaxbackend method)": [[85, "id190", false], [85, "ot.backend.JaxBackend.dtype_device", false]], "dtype_device() (ot.backend.numpybackend method)": [[85, "id273", false], [85, "ot.backend.NumpyBackend.dtype_device", false]], "dtype_device() (ot.backend.tensorflowbackend method)": [[85, "id356", false], [85, "ot.backend.TensorflowBackend.dtype_device", false]], "dtype_device() (ot.backend.torchbackend method)": [[85, "id439", false], [85, "ot.backend.TorchBackend.dtype_device", false]], "dual_obj_grad() (in module ot.smooth)": [[104, "id22", false], [104, "ot.smooth.dual_obj_grad", false]], "eigh() (ot.backend.backend method)": [[85, "id23", false], [85, "ot.backend.Backend.eigh", false]], "eigh() (ot.backend.cupybackend method)": [[85, "id108", false], [85, "ot.backend.CupyBackend.eigh", false]], "eigh() (ot.backend.jaxbackend method)": [[85, "id191", false], [85, "ot.backend.JaxBackend.eigh", false]], "eigh() (ot.backend.numpybackend method)": [[85, "id274", false], [85, "ot.backend.NumpyBackend.eigh", false]], "eigh() (ot.backend.tensorflowbackend method)": [[85, "id357", false], [85, "ot.backend.TensorflowBackend.eigh", false]], "eigh() (ot.backend.torchbackend method)": [[85, "id440", false], [85, "ot.backend.TorchBackend.eigh", false]], "einsum() (ot.backend.backend method)": [[85, "id24", false], [85, "ot.backend.Backend.einsum", false]], "einsum() (ot.backend.cupybackend method)": [[85, "id109", false], [85, "ot.backend.CupyBackend.einsum", false]], "einsum() (ot.backend.jaxbackend method)": [[85, "id192", false], [85, "ot.backend.JaxBackend.einsum", false]], "einsum() (ot.backend.numpybackend method)": [[85, "id275", false], [85, "ot.backend.NumpyBackend.einsum", false]], "einsum() (ot.backend.tensorflowbackend method)": [[85, "id358", false], [85, "ot.backend.TensorflowBackend.einsum", false]], "einsum() (ot.backend.torchbackend method)": [[85, "id441", false], [85, "ot.backend.TorchBackend.einsum", false]], "eliminate_zeros() (ot.backend.backend method)": [[85, "id25", false], [85, "ot.backend.Backend.eliminate_zeros", false]], "eliminate_zeros() (ot.backend.cupybackend method)": [[85, "id110", false], [85, "ot.backend.CupyBackend.eliminate_zeros", false]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[85, "id193", false], [85, "ot.backend.JaxBackend.eliminate_zeros", false]], "eliminate_zeros() (ot.backend.numpybackend method)": [[85, "id276", false], [85, "ot.backend.NumpyBackend.eliminate_zeros", false]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[85, "id359", false], [85, "ot.backend.TensorflowBackend.eliminate_zeros", false]], "eliminate_zeros() (ot.backend.torchbackend method)": [[85, "id442", false], [85, "ot.backend.TorchBackend.eliminate_zeros", false]], "emd() (in module ot)": [[0, "ot.emd", false]], "emd() (in module ot.lp)": [[97, "ot.lp.emd", false]], "emd2() (in module ot)": [[0, "ot.emd2", false]], "emd2() (in module ot.lp)": [[97, "ot.lp.emd2", false]], "emd2_1d() (in module ot)": [[0, "ot.emd2_1d", false]], "emd2_1d() (in module ot.lp)": [[97, "ot.lp.emd2_1d", false]], "emd_1d() (in module ot)": [[0, "ot.emd_1d", false]], "emd_1d() (in module ot.lp)": [[97, "ot.lp.emd_1d", false]], "emd_1d_sorted() (in module ot.lp)": [[97, "ot.lp.emd_1d_sorted", false]], "emd_laplace() (in module ot.da)": [[88, "id133", false], [88, "ot.da.emd_laplace", false]], "emdlaplacetransport (class in ot.da)": [[88, "id46", false], [88, "ot.da.EMDLaplaceTransport", false]], "emdtransport (class in ot.da)": [[88, "id53", false], [88, "ot.da.EMDTransport", false]], "empirical_bures_wasserstein_barycenter() (in module ot.gaussian)": [[92, "id43", false], [92, "ot.gaussian.empirical_bures_wasserstein_barycenter", false]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[92, "id46", false], [92, "ot.gaussian.empirical_bures_wasserstein_distance", false]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[92, "id49", false], [92, "ot.gaussian.empirical_bures_wasserstein_mapping", false]], "empirical_gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[92, "id53", false], [92, "ot.gaussian.empirical_gaussian_gromov_wasserstein_distance", false]], "empirical_gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[92, "id56", false], [92, "ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping", false]], "empirical_sinkhorn() (in module ot.bregman)": [[86, "ot.bregman.empirical_sinkhorn", false]], "empirical_sinkhorn2() (in module ot.bregman)": [[86, "ot.bregman.empirical_sinkhorn2", false]], "empirical_sinkhorn2_geomloss() (in module ot.bregman)": [[86, "ot.bregman.empirical_sinkhorn2_geomloss", false]], "empirical_sinkhorn_divergence() (in module ot.bregman)": [[86, "ot.bregman.empirical_sinkhorn_divergence", false]], "entropic_fused_gromov_barycenters() (in module ot.gromov)": [[95, "ot.gromov.entropic_fused_gromov_barycenters", false]], "entropic_fused_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.entropic_fused_gromov_wasserstein", false]], "entropic_fused_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.entropic_fused_gromov_wasserstein2", false]], "entropic_gromov_barycenters() (in module ot.gromov)": [[95, "ot.gromov.entropic_gromov_barycenters", false]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.entropic_gromov_wasserstein", false]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.entropic_gromov_wasserstein2", false]], "entropic_partial_fused_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.entropic_partial_fused_gromov_wasserstein", false]], "entropic_partial_fused_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.entropic_partial_fused_gromov_wasserstein2", false]], "entropic_partial_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.entropic_partial_gromov_wasserstein", false]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[100, "ot.partial.entropic_partial_gromov_wasserstein", false]], "entropic_partial_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.entropic_partial_gromov_wasserstein2", false]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[100, "ot.partial.entropic_partial_gromov_wasserstein2", false]], "entropic_partial_wasserstein() (in module ot.partial)": [[100, "ot.partial.entropic_partial_wasserstein", false]], "entropic_semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein", false]], "entropic_semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein2", false]], "entropic_semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.entropic_semirelaxed_gromov_wasserstein", false]], "entropic_semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.entropic_semirelaxed_gromov_wasserstein2", false]], "euclidean_distances() (in module ot.utils)": [[107, "id56", false], [107, "ot.utils.euclidean_distances", false]], "ewca() (in module ot.dr)": [[90, "id4", false], [90, "ot.dr.ewca", false]], "exp() (ot.backend.backend method)": [[85, "id26", false], [85, "ot.backend.Backend.exp", false]], "exp() (ot.backend.cupybackend method)": [[85, "id111", false], [85, "ot.backend.CupyBackend.exp", false]], "exp() (ot.backend.jaxbackend method)": [[85, "id194", false], [85, "ot.backend.JaxBackend.exp", false]], "exp() (ot.backend.numpybackend method)": [[85, "id277", false], [85, "ot.backend.NumpyBackend.exp", false]], "exp() (ot.backend.tensorflowbackend method)": [[85, "id360", false], [85, "ot.backend.TensorflowBackend.exp", false]], "exp() (ot.backend.torchbackend method)": [[85, "id443", false], [85, "ot.backend.TorchBackend.exp", false]], "exp_bures() (in module ot.utils)": [[107, "id57", false], [107, "ot.utils.exp_bures", false]], "eye() (ot.backend.backend method)": [[85, "id27", false], [85, "ot.backend.Backend.eye", false]], "eye() (ot.backend.cupybackend method)": [[85, "id112", false], [85, "ot.backend.CupyBackend.eye", false]], "eye() (ot.backend.jaxbackend method)": [[85, "id195", false], [85, "ot.backend.JaxBackend.eye", false]], "eye() (ot.backend.numpybackend method)": [[85, "id278", false], [85, "ot.backend.NumpyBackend.eye", false]], "eye() (ot.backend.tensorflowbackend method)": [[85, "id361", false], [85, "ot.backend.TensorflowBackend.eye", false]], "eye() (ot.backend.torchbackend method)": [[85, "id444", false], [85, "ot.backend.TorchBackend.eye", false]], "factored_optimal_transport() (in module ot)": [[0, "ot.factored_optimal_transport", false]], "factored_optimal_transport() (in module ot.factored)": [[91, "id0", false], [91, "ot.factored.factored_optimal_transport", false]], "fda() (in module ot.dr)": [[90, "id7", false], [90, "ot.dr.fda", false]], "fgw_barycenters() (in module ot.gromov)": [[95, "ot.gromov.fgw_barycenters", false]], "fgw_distance_to_templates() (in module ot.gnn)": [[94, "ot.gnn.FGW_distance_to_templates", false]], "fit() (ot.da.basetransport method)": [[88, "id38", false], [88, "ot.da.BaseTransport.fit", false]], "fit() (ot.da.emdlaplacetransport method)": [[88, "id52", false], [88, "ot.da.EMDLaplaceTransport.fit", false]], "fit() (ot.da.emdtransport method)": [[88, "id58", false], [88, "ot.da.EMDTransport.fit", false]], "fit() (ot.da.jcpottransport method)": [[88, "id66", false], [88, "ot.da.JCPOTTransport.fit", false]], "fit() (ot.da.lineargwtransport method)": [[88, "id75", false], [88, "ot.da.LinearGWTransport.fit", false]], "fit() (ot.da.lineartransport method)": [[88, "id80", false], [88, "ot.da.LinearTransport.fit", false]], "fit() (ot.da.mappingtransport method)": [[88, "id88", false], [88, "ot.da.MappingTransport.fit", false]], "fit() (ot.da.nearestbrenierpotential method)": [[88, "id93", false], [88, "ot.da.NearestBrenierPotential.fit", false]], "fit() (ot.da.sinkhornl1l2transport method)": [[88, "id105", false], [88, "ot.da.SinkhornL1l2Transport.fit", false]], "fit() (ot.da.sinkhornlpl1transport method)": [[88, "id112", false], [88, "ot.da.SinkhornLpl1Transport.fit", false]], "fit() (ot.da.sinkhorntransport method)": [[88, "id122", false], [88, "ot.da.SinkhornTransport.fit", false]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[88, "id131", false], [88, "ot.da.UnbalancedSinkhornTransport.fit", false]], "fit_transform() (ot.da.basetransport method)": [[88, "id39", false], [88, "ot.da.BaseTransport.fit_transform", false]], "flip() (ot.backend.backend method)": [[85, "id28", false], [85, "ot.backend.Backend.flip", false]], "flip() (ot.backend.cupybackend method)": [[85, "id113", false], [85, "ot.backend.CupyBackend.flip", false]], "flip() (ot.backend.jaxbackend method)": [[85, "id196", false], [85, "ot.backend.JaxBackend.flip", false]], "flip() (ot.backend.numpybackend method)": [[85, "id279", false], [85, "ot.backend.NumpyBackend.flip", false]], "flip() (ot.backend.tensorflowbackend method)": [[85, "id362", false], [85, "ot.backend.TensorflowBackend.flip", false]], "flip() (ot.backend.torchbackend method)": [[85, "id445", false], [85, "ot.backend.TorchBackend.flip", false]], "floor() (ot.backend.backend method)": [[85, "id29", false], [85, "ot.backend.Backend.floor", false]], "floor() (ot.backend.cupybackend method)": [[85, "id114", false], [85, "ot.backend.CupyBackend.floor", false]], "floor() (ot.backend.jaxbackend method)": [[85, "id197", false], [85, "ot.backend.JaxBackend.floor", false]], "floor() (ot.backend.numpybackend method)": [[85, "id280", false], [85, "ot.backend.NumpyBackend.floor", false]], "floor() (ot.backend.tensorflowbackend method)": [[85, "id363", false], [85, "ot.backend.TensorflowBackend.floor", false]], "floor() (ot.backend.torchbackend method)": [[85, "id446", false], [85, "ot.backend.TorchBackend.floor", false]], "format_partitioned_graph() (in module ot.gromov)": [[95, "ot.gromov.format_partitioned_graph", false]], "format_partitioned_samples() (in module ot.gromov)": [[95, "ot.gromov.format_partitioned_samples", false]], "forward() (ot.gnn.tfgwpooling method)": [[94, "ot.gnn.TFGWPooling.forward", false]], "forward() (ot.gnn.twpooling method)": [[94, "ot.gnn.TWPooling.forward", false]], "free_support_barycenter() (in module ot.lp)": [[97, "ot.lp.free_support_barycenter", false]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[86, "ot.bregman.free_support_sinkhorn_barycenter", false]], "from_numpy() (ot.backend.backend method)": [[85, "id30", false], [85, "ot.backend.Backend.from_numpy", false]], "full() (ot.backend.backend method)": [[85, "id31", false], [85, "ot.backend.Backend.full", false]], "full() (ot.backend.cupybackend method)": [[85, "id115", false], [85, "ot.backend.CupyBackend.full", false]], "full() (ot.backend.jaxbackend method)": [[85, "id198", false], [85, "ot.backend.JaxBackend.full", false]], "full() (ot.backend.numpybackend method)": [[85, "id281", false], [85, "ot.backend.NumpyBackend.full", false]], "full() (ot.backend.tensorflowbackend method)": [[85, "id364", false], [85, "ot.backend.TensorflowBackend.full", false]], "full() (ot.backend.torchbackend method)": [[85, "id447", false], [85, "ot.backend.TorchBackend.full", false]], "fully_relaxed_path() (in module ot.regpath)": [[102, "id19", false], [102, "ot.regpath.fully_relaxed_path", false]], "fun_to_numpy() (in module ot.utils)": [[107, "id58", false], [107, "ot.utils.fun_to_numpy", false]], "fused_gromov_wasserstein() (in module ot)": [[0, "ot.fused_gromov_wasserstein", false]], "fused_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.fused_gromov_wasserstein", false]], "fused_gromov_wasserstein2() (in module ot)": [[0, "ot.fused_gromov_wasserstein2", false]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.fused_gromov_wasserstein2", false]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[95, "ot.gromov.fused_gromov_wasserstein_dictionary_learning", false]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[95, "ot.gromov.fused_gromov_wasserstein_linear_unmixing", false]], "fused_unbalanced_across_spaces_cost() (in module ot.gromov)": [[95, "ot.gromov.fused_unbalanced_across_spaces_cost", false]], "fused_unbalanced_across_spaces_divergence() (in module ot.gromov)": [[95, "ot.gromov.fused_unbalanced_across_spaces_divergence", false]], "fused_unbalanced_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.fused_unbalanced_gromov_wasserstein", false]], "fused_unbalanced_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.fused_unbalanced_gromov_wasserstein2", false]], "gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[92, "id59", false], [92, "ot.gaussian.gaussian_gromov_wasserstein_distance", false]], "gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[92, "id62", false], [92, "ot.gaussian.gaussian_gromov_wasserstein_mapping", false]], "gaussian_logpdf() (in module ot.gmm)": [[93, "id7", false], [93, "ot.gmm.gaussian_logpdf", false]], "gaussian_pdf() (in module ot.gmm)": [[93, "id8", false], [93, "ot.gmm.gaussian_pdf", false]], "gcg() (in module ot.optim)": [[99, "id22", false], [99, "ot.optim.gcg", false]], "generalized_free_support_barycenter() (in module ot.lp)": [[97, "ot.lp.generalized_free_support_barycenter", false]], "generic_conditional_gradient() (in module ot.optim)": [[99, "id26", false], [99, "ot.optim.generic_conditional_gradient", false]], "geometricbar() (in module ot.bregman)": [[86, "ot.bregman.geometricBar", false]], "geometricmean() (in module ot.bregman)": [[86, "ot.bregman.geometricMean", false]], "get_available_backend_implementations() (in module ot.backend)": [[85, "id501", false], [85, "ot.backend.get_available_backend_implementations", false]], "get_backend() (in module ot.backend)": [[85, "id502", false], [85, "ot.backend.get_backend", false]], "get_backend_list() (in module ot.backend)": [[85, "id503", false], [85, "ot.backend.get_backend_list", false]], "get_coordinate_circle() (in module ot.utils)": [[107, "id59", false], [107, "ot.utils.get_coordinate_circle", false]], "get_graph_partition() (in module ot.gromov)": [[95, "ot.gromov.get_graph_partition", false]], "get_graph_representants() (in module ot.gromov)": [[95, "ot.gromov.get_graph_representants", false]], "get_lowrank_lazytensor() (in module ot.utils)": [[107, "id60", false], [107, "ot.utils.get_lowrank_lazytensor", false]], "get_parameter_pair() (in module ot.utils)": [[107, "id61", false], [107, "ot.utils.get_parameter_pair", false]], "get_params() (ot.utils.baseestimator method)": [[107, "id14", false], [107, "ot.utils.BaseEstimator.get_params", false]], "get_partition_and_representants_samples() (in module ot.gromov)": [[95, "ot.gromov.get_partition_and_representants_samples", false]], "get_plan_from_dual() (in module ot.smooth)": [[104, "id23", false], [104, "ot.smooth.get_plan_from_dual", false]], "get_plan_from_semi_dual() (in module ot.smooth)": [[104, "id24", false], [104, "ot.smooth.get_plan_from_semi_dual", false]], "get_random_projections() (in module ot.sliced)": [[103, "id0", false], [103, "ot.sliced.get_random_projections", false]], "gmm_ot_apply_map() (in module ot.gmm)": [[93, "id9", false], [93, "ot.gmm.gmm_ot_apply_map", false]], "gmm_ot_loss() (in module ot.gmm)": [[93, "id11", false], [93, "ot.gmm.gmm_ot_loss", false]], "gmm_ot_plan() (in module ot.gmm)": [[93, "id13", false], [93, "ot.gmm.gmm_ot_plan", false]], "gmm_ot_plan_density() (in module ot.gmm)": [[93, "id15", false], [93, "ot.gmm.gmm_ot_plan_density", false]], "gmm_pdf() (in module ot.gmm)": [[93, "id17", false], [93, "ot.gmm.gmm_pdf", false]], "greenkhorn() (in module ot.bregman)": [[86, "ot.bregman.greenkhorn", false]], "gromov_barycenters() (in module ot)": [[0, "ot.gromov_barycenters", false]], "gromov_barycenters() (in module ot.gromov)": [[95, "ot.gromov.gromov_barycenters", false]], "gromov_wasserstein() (in module ot)": [[0, "ot.gromov_wasserstein", false]], "gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.gromov_wasserstein", false]], "gromov_wasserstein2() (in module ot)": [[0, "ot.gromov_wasserstein2", false]], "gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.gromov_wasserstein2", false]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[95, "ot.gromov.gromov_wasserstein_dictionary_learning", false]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[95, "ot.gromov.gromov_wasserstein_linear_unmixing", false]], "gw_distance_estimation() (in module ot.gromov)": [[95, "ot.gromov.GW_distance_estimation", false]], "gwggrad() (in module ot.gromov)": [[95, "ot.gromov.gwggrad", false]], "gwgrad_partial() (in module ot.partial)": [[100, "ot.partial.gwgrad_partial", false]], "gwloss() (in module ot.gromov)": [[95, "ot.gromov.gwloss", false]], "gwloss_partial() (in module ot.partial)": [[100, "ot.partial.gwloss_partial", false]], "init_matrix() (in module ot.gromov)": [[95, "ot.gromov.init_matrix", false]], "init_matrix_semirelaxed() (in module ot.gromov)": [[95, "ot.gromov.init_matrix_semirelaxed", false]], "inv() (ot.backend.backend method)": [[85, "id32", false], [85, "ot.backend.Backend.inv", false]], "inv() (ot.backend.cupybackend method)": [[85, "id116", false], [85, "ot.backend.CupyBackend.inv", false]], "inv() (ot.backend.jaxbackend method)": [[85, "id199", false], [85, "ot.backend.JaxBackend.inv", false]], "inv() (ot.backend.numpybackend method)": [[85, "id282", false], [85, "ot.backend.NumpyBackend.inv", false]], "inv() (ot.backend.tensorflowbackend method)": [[85, "id365", false], [85, "ot.backend.TensorflowBackend.inv", false]], "inv() (ot.backend.torchbackend method)": [[85, "id448", false], [85, "ot.backend.TorchBackend.inv", false]], "inverse_transform() (ot.da.basetransport method)": [[88, "id40", false], [88, "ot.da.BaseTransport.inverse_transform", false]], "inverse_transform() (ot.da.lineartransport method)": [[88, "id81", false], [88, "ot.da.LinearTransport.inverse_transform", false]], "inverse_transform() (ot.da.sinkhorntransport method)": [[88, "id123", false], [88, "ot.da.SinkhornTransport.inverse_transform", false]], "inverse_transform_labels() (ot.da.basetransport method)": [[88, "id41", false], [88, "ot.da.BaseTransport.inverse_transform_labels", false]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[88, "id67", false], [88, "ot.da.JCPOTTransport.inverse_transform_labels", false]], "is_all_finite() (in module ot.utils)": [[107, "id62", false], [107, "ot.utils.is_all_finite", false]], "is_floating_point() (ot.backend.backend method)": [[85, "id33", false], [85, "ot.backend.Backend.is_floating_point", false]], "is_floating_point() (ot.backend.cupybackend method)": [[85, "id117", false], [85, "ot.backend.CupyBackend.is_floating_point", false]], "is_floating_point() (ot.backend.jaxbackend method)": [[85, "id200", false], [85, "ot.backend.JaxBackend.is_floating_point", false]], "is_floating_point() (ot.backend.numpybackend method)": [[85, "id283", false], [85, "ot.backend.NumpyBackend.is_floating_point", false]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[85, "id366", false], [85, "ot.backend.TensorflowBackend.is_floating_point", false]], "is_floating_point() (ot.backend.torchbackend method)": [[85, "id449", false], [85, "ot.backend.TorchBackend.is_floating_point", false]], "isfinite() (ot.backend.backend method)": [[85, "id34", false], [85, "ot.backend.Backend.isfinite", false]], "isfinite() (ot.backend.cupybackend method)": [[85, "id118", false], [85, "ot.backend.CupyBackend.isfinite", false]], "isfinite() (ot.backend.jaxbackend method)": [[85, "id201", false], [85, "ot.backend.JaxBackend.isfinite", false]], "isfinite() (ot.backend.numpybackend method)": [[85, "id284", false], [85, "ot.backend.NumpyBackend.isfinite", false]], "isfinite() (ot.backend.tensorflowbackend method)": [[85, "id367", false], [85, "ot.backend.TensorflowBackend.isfinite", false]], "isfinite() (ot.backend.torchbackend method)": [[85, "id450", false], [85, "ot.backend.TorchBackend.isfinite", false]], "isinf() (ot.backend.backend method)": [[85, "id35", false], [85, "ot.backend.Backend.isinf", false]], "isinf() (ot.backend.cupybackend method)": [[85, "id119", false], [85, "ot.backend.CupyBackend.isinf", false]], "isinf() (ot.backend.jaxbackend method)": [[85, "id202", false], [85, "ot.backend.JaxBackend.isinf", false]], "isinf() (ot.backend.numpybackend method)": [[85, "id285", false], [85, "ot.backend.NumpyBackend.isinf", false]], "isinf() (ot.backend.tensorflowbackend method)": [[85, "id368", false], [85, "ot.backend.TensorflowBackend.isinf", false]], "isinf() (ot.backend.torchbackend method)": [[85, "id451", false], [85, "ot.backend.TorchBackend.isinf", false]], "isnan() (ot.backend.backend method)": [[85, "id36", false], [85, "ot.backend.Backend.isnan", false]], "isnan() (ot.backend.cupybackend method)": [[85, "id120", false], [85, "ot.backend.CupyBackend.isnan", false]], "isnan() (ot.backend.jaxbackend method)": [[85, "id203", false], [85, "ot.backend.JaxBackend.isnan", false]], "isnan() (ot.backend.numpybackend method)": [[85, "id286", false], [85, "ot.backend.NumpyBackend.isnan", false]], "isnan() (ot.backend.tensorflowbackend method)": [[85, "id369", false], [85, "ot.backend.TensorflowBackend.isnan", false]], "isnan() (ot.backend.torchbackend method)": [[85, "id452", false], [85, "ot.backend.TorchBackend.isnan", false]], "issparse() (ot.backend.backend method)": [[85, "id37", false], [85, "ot.backend.Backend.issparse", false]], "issparse() (ot.backend.cupybackend method)": [[85, "id121", false], [85, "ot.backend.CupyBackend.issparse", false]], "issparse() (ot.backend.jaxbackend method)": [[85, "id204", false], [85, "ot.backend.JaxBackend.issparse", false]], "issparse() (ot.backend.numpybackend method)": [[85, "id287", false], [85, "ot.backend.NumpyBackend.issparse", false]], "issparse() (ot.backend.tensorflowbackend method)": [[85, "id370", false], [85, "ot.backend.TensorflowBackend.issparse", false]], "issparse() (ot.backend.torchbackend method)": [[85, "id453", false], [85, "ot.backend.TorchBackend.issparse", false]], "jaxbackend (class in ot.backend)": [[85, "id169", false], [85, "ot.backend.JaxBackend", false]], "jcpot_barycenter() (in module ot.bregman)": [[86, "ot.bregman.jcpot_barycenter", false]], "jcpottransport (class in ot.da)": [[88, "id59", false], [88, "ot.da.JCPOTTransport", false]], "joint_ot_mapping_kernel() (in module ot.mapping)": [[98, "id0", false], [98, "ot.mapping.joint_OT_mapping_kernel", false]], "joint_ot_mapping_linear() (in module ot.mapping)": [[98, "id8", false], [98, "ot.mapping.joint_OT_mapping_linear", false]], "kernel() (in module ot.utils)": [[107, "id63", false], [107, "ot.utils.kernel", false]], "kl_div() (ot.backend.backend method)": [[85, "id38", false], [85, "ot.backend.Backend.kl_div", false]], "kl_div() (ot.backend.cupybackend method)": [[85, "id122", false], [85, "ot.backend.CupyBackend.kl_div", false]], "kl_div() (ot.backend.jaxbackend method)": [[85, "id205", false], [85, "ot.backend.JaxBackend.kl_div", false]], "kl_div() (ot.backend.numpybackend method)": [[85, "id288", false], [85, "ot.backend.NumpyBackend.kl_div", false]], "kl_div() (ot.backend.tensorflowbackend method)": [[85, "id371", false], [85, "ot.backend.TensorflowBackend.kl_div", false]], "kl_div() (ot.backend.torchbackend method)": [[85, "id454", false], [85, "ot.backend.TorchBackend.kl_div", false]], "label_normalization() (in module ot.utils)": [[107, "id64", false], [107, "ot.utils.label_normalization", false]], "labels_to_masks() (in module ot.utils)": [[107, "id65", false], [107, "ot.utils.labels_to_masks", false]], "laplacian() (in module ot.utils)": [[107, "id66", false], [107, "ot.utils.laplacian", false]], "lazy_plan (ot.utils.otresult attribute)": [[107, "id26", false], [107, "ot.utils.OTResult.lazy_plan", false]], "lazy_plan (ot.utils.otresult property)": [[107, "id0", false], [107, "id33", false]], "lazytensor (class in ot.utils)": [[107, "id16", false], [107, "ot.utils.LazyTensor", false]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[106, "ot.unbalanced.lbfgsb_unbalanced", false]], "lbfgsb_unbalanced2() (in module ot.unbalanced)": [[106, "ot.unbalanced.lbfgsb_unbalanced2", false]], "line_search_armijo() (in module ot.optim)": [[99, "id40", false], [99, "ot.optim.line_search_armijo", false]], "lineargwtransport (class in ot.da)": [[88, "id72", false], [88, "ot.da.LinearGWTransport", false]], "lineartransport (class in ot.da)": [[88, "id76", false], [88, "ot.da.LinearTransport", false]], "linspace() (ot.backend.backend method)": [[85, "id39", false], [85, "ot.backend.Backend.linspace", false]], "linspace() (ot.backend.cupybackend method)": [[85, "id123", false], [85, "ot.backend.CupyBackend.linspace", false]], "linspace() (ot.backend.jaxbackend method)": [[85, "id206", false], [85, "ot.backend.JaxBackend.linspace", false]], "linspace() (ot.backend.numpybackend method)": [[85, "id289", false], [85, "ot.backend.NumpyBackend.linspace", false]], "linspace() (ot.backend.tensorflowbackend method)": [[85, "id372", false], [85, "ot.backend.TensorflowBackend.linspace", false]], "linspace() (ot.backend.torchbackend method)": [[85, "id455", false], [85, "ot.backend.TorchBackend.linspace", false]], "list_to_array() (in module ot.utils)": [[107, "id67", false], [107, "ot.utils.list_to_array", false]], "log (ot.utils.otresult property)": [[107, "id34", false], [107, "ot.utils.OTResult.log", false]], "log() (ot.backend.backend method)": [[85, "id40", false], [85, "ot.backend.Backend.log", false]], "log() (ot.backend.cupybackend method)": [[85, "id124", false], [85, "ot.backend.CupyBackend.log", false]], "log() (ot.backend.jaxbackend method)": [[85, "id207", false], [85, "ot.backend.JaxBackend.log", false]], "log() (ot.backend.numpybackend method)": [[85, "id290", false], [85, "ot.backend.NumpyBackend.log", false]], "log() (ot.backend.tensorflowbackend method)": [[85, "id373", false], [85, "ot.backend.TensorflowBackend.log", false]], "log() (ot.backend.torchbackend method)": [[85, "id456", false], [85, "ot.backend.TorchBackend.log", false]], "log_ (ot.da.jcpottransport attribute)": [[88, "id62", false], [88, "ot.da.JCPOTTransport.log_", false]], "log_ (ot.da.mappingtransport attribute)": [[88, "id86", false], [88, "ot.da.MappingTransport.log_", false]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[88, "id100", false], [88, "ot.da.SinkhornL1l2Transport.log_", false]], "log_ (ot.da.sinkhorntransport attribute)": [[88, "id115", false], [88, "ot.da.SinkhornTransport.log_", false]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[88, "id127", false], [88, "ot.da.UnbalancedSinkhornTransport.log_", false]], "logsumexp() (in module ot.dr)": [[90, "id8", false], [90, "ot.dr.logsumexp", false]], "logsumexp() (ot.backend.backend method)": [[85, "id41", false], [85, "ot.backend.Backend.logsumexp", false]], "logsumexp() (ot.backend.cupybackend method)": [[85, "id125", false], [85, "ot.backend.CupyBackend.logsumexp", false]], "logsumexp() (ot.backend.jaxbackend method)": [[85, "id208", false], [85, "ot.backend.JaxBackend.logsumexp", false]], "logsumexp() (ot.backend.numpybackend method)": [[85, "id291", false], [85, "ot.backend.NumpyBackend.logsumexp", false]], "logsumexp() (ot.backend.tensorflowbackend method)": [[85, "id374", false], [85, "ot.backend.TensorflowBackend.logsumexp", false]], "logsumexp() (ot.backend.torchbackend method)": [[85, "id457", false], [85, "ot.backend.TorchBackend.logsumexp", false]], "loss_dual_entropic() (in module ot.stochastic)": [[105, "id24", false], [105, "ot.stochastic.loss_dual_entropic", false]], "loss_dual_quadratic() (in module ot.stochastic)": [[105, "id26", false], [105, "ot.stochastic.loss_dual_quadratic", false]], "lowrank_gromov_wasserstein_samples() (in module ot)": [[0, "ot.lowrank_gromov_wasserstein_samples", false]], "lowrank_gromov_wasserstein_samples() (in module ot.gromov)": [[95, "ot.gromov.lowrank_gromov_wasserstein_samples", false]], "lowrank_sinkhorn() (in module ot)": [[0, "ot.lowrank_sinkhorn", false]], "lowrank_sinkhorn() (in module ot.lowrank)": [[96, "id4", false], [96, "ot.lowrank.lowrank_sinkhorn", false]], "make_1d_gauss() (in module ot.datasets)": [[89, "id0", false], [89, "ot.datasets.make_1D_gauss", false]], "make_2d_samples_gauss() (in module ot.datasets)": [[89, "id1", false], [89, "ot.datasets.make_2D_samples_gauss", false]], "make_data_classif() (in module ot.datasets)": [[89, "id2", false], [89, "ot.datasets.make_data_classif", false]], "mapping_ (ot.da.mappingtransport attribute)": [[88, "id85", false], [88, "ot.da.MappingTransport.mapping_", false]], "mappingtransport (class in ot.da)": [[88, "id83", false], [88, "ot.da.MappingTransport", false]], "marginal_a (ot.utils.otresult attribute)": [[107, "id28", false], [107, "ot.utils.OTResult.marginal_a", false]], "marginal_a (ot.utils.otresult property)": [[107, "id2", false], [107, "id35", false]], "marginal_b (ot.utils.otresult attribute)": [[107, "id29", false], [107, "ot.utils.OTResult.marginal_b", false]], "marginal_b (ot.utils.otresult property)": [[107, "id3", false], [107, "id36", false]], "marginals (ot.utils.otresult attribute)": [[107, "id27", false], [107, "ot.utils.OTResult.marginals", false]], "marginals (ot.utils.otresult property)": [[107, "id37", false], [107, "id4", false]], "matmul() (ot.backend.backend method)": [[85, "id42", false], [85, "ot.backend.Backend.matmul", false]], "matmul() (ot.backend.cupybackend method)": [[85, "id126", false], [85, "ot.backend.CupyBackend.matmul", false]], "matmul() (ot.backend.jaxbackend method)": [[85, "id209", false], [85, "ot.backend.JaxBackend.matmul", false]], "matmul() (ot.backend.numpybackend method)": [[85, "id292", false], [85, "ot.backend.NumpyBackend.matmul", false]], "matmul() (ot.backend.tensorflowbackend method)": [[85, "id375", false], [85, "ot.backend.TensorflowBackend.matmul", false]], "matmul() (ot.backend.torchbackend method)": [[85, "id458", false], [85, "ot.backend.TorchBackend.matmul", false]], "max() (ot.backend.backend method)": [[85, "id43", false], [85, "ot.backend.Backend.max", false]], "max() (ot.backend.cupybackend method)": [[85, "id127", false], [85, "ot.backend.CupyBackend.max", false]], "max() (ot.backend.jaxbackend method)": [[85, "id210", false], [85, "ot.backend.JaxBackend.max", false]], "max() (ot.backend.numpybackend method)": [[85, "id293", false], [85, "ot.backend.NumpyBackend.max", false]], "max() (ot.backend.tensorflowbackend method)": [[85, "id376", false], [85, "ot.backend.TensorflowBackend.max", false]], "max() (ot.backend.torchbackend method)": [[85, "id459", false], [85, "ot.backend.TorchBackend.max", false]], "max_omega() (ot.smooth.negentropy method)": [[104, "id9", false], [104, "ot.smooth.NegEntropy.max_Omega", false]], "max_omega() (ot.smooth.regularization method)": [[104, "id13", false], [104, "ot.smooth.Regularization.max_Omega", false]], "max_omega() (ot.smooth.sparsityconstrained method)": [[104, "id17", false], [104, "ot.smooth.SparsityConstrained.max_Omega", false]], "max_omega() (ot.smooth.squaredl2 method)": [[104, "id21", false], [104, "ot.smooth.SquaredL2.max_Omega", false]], "max_sliced_wasserstein_distance() (in module ot)": [[0, "ot.max_sliced_wasserstein_distance", false]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[103, "id5", false], [103, "ot.sliced.max_sliced_wasserstein_distance", false]], "maximum() (ot.backend.backend method)": [[85, "id44", false], [85, "ot.backend.Backend.maximum", false]], "maximum() (ot.backend.cupybackend method)": [[85, "id128", false], [85, "ot.backend.CupyBackend.maximum", false]], "maximum() (ot.backend.jaxbackend method)": [[85, "id211", false], [85, "ot.backend.JaxBackend.maximum", false]], "maximum() (ot.backend.numpybackend method)": [[85, "id294", false], [85, "ot.backend.NumpyBackend.maximum", false]], "maximum() (ot.backend.tensorflowbackend method)": [[85, "id377", false], [85, "ot.backend.TensorflowBackend.maximum", false]], "maximum() (ot.backend.torchbackend method)": [[85, "id460", false], [85, "ot.backend.TorchBackend.maximum", false]], "mean() (ot.backend.backend method)": [[85, "id45", false], [85, "ot.backend.Backend.mean", false]], "mean() (ot.backend.cupybackend method)": [[85, "id129", false], [85, "ot.backend.CupyBackend.mean", false]], "mean() (ot.backend.jaxbackend method)": [[85, "id212", false], [85, "ot.backend.JaxBackend.mean", false]], "mean() (ot.backend.numpybackend method)": [[85, "id295", false], [85, "ot.backend.NumpyBackend.mean", false]], "mean() (ot.backend.tensorflowbackend method)": [[85, "id378", false], [85, "ot.backend.TensorflowBackend.mean", false]], "mean() (ot.backend.torchbackend method)": [[85, "id461", false], [85, "ot.backend.TorchBackend.mean", false]], "median() (ot.backend.backend method)": [[85, "id46", false], [85, "ot.backend.Backend.median", false]], "median() (ot.backend.cupybackend method)": [[85, "id130", false], [85, "ot.backend.CupyBackend.median", false]], "median() (ot.backend.jaxbackend method)": [[85, "id213", false], [85, "ot.backend.JaxBackend.median", false]], "median() (ot.backend.numpybackend method)": [[85, "id296", false], [85, "ot.backend.NumpyBackend.median", false]], "median() (ot.backend.tensorflowbackend method)": [[85, "id379", false], [85, "ot.backend.TensorflowBackend.median", false]], "median() (ot.backend.torchbackend method)": [[85, "id462", false], [85, "ot.backend.TorchBackend.median", false]], "meshgrid() (ot.backend.backend method)": [[85, "id47", false], [85, "ot.backend.Backend.meshgrid", false]], "meshgrid() (ot.backend.cupybackend method)": [[85, "id131", false], [85, "ot.backend.CupyBackend.meshgrid", false]], "meshgrid() (ot.backend.jaxbackend method)": [[85, "id214", false], [85, "ot.backend.JaxBackend.meshgrid", false]], "meshgrid() (ot.backend.numpybackend method)": [[85, "id297", false], [85, "ot.backend.NumpyBackend.meshgrid", false]], "meshgrid() (ot.backend.tensorflowbackend method)": [[85, "id380", false], [85, "ot.backend.TensorflowBackend.meshgrid", false]], "meshgrid() (ot.backend.torchbackend method)": [[85, "id463", false], [85, "ot.backend.TorchBackend.meshgrid", false]], "min() (ot.backend.backend method)": [[85, "id48", false], [85, "ot.backend.Backend.min", false]], "min() (ot.backend.cupybackend method)": [[85, "id132", false], [85, "ot.backend.CupyBackend.min", false]], "min() (ot.backend.jaxbackend method)": [[85, "id215", false], [85, "ot.backend.JaxBackend.min", false]], "min() (ot.backend.numpybackend method)": [[85, "id298", false], [85, "ot.backend.NumpyBackend.min", false]], "min() (ot.backend.tensorflowbackend method)": [[85, "id381", false], [85, "ot.backend.TensorflowBackend.min", false]], "min() (ot.backend.torchbackend method)": [[85, "id464", false], [85, "ot.backend.TorchBackend.min", false]], "minimum() (ot.backend.backend method)": [[85, "id49", false], [85, "ot.backend.Backend.minimum", false]], "minimum() (ot.backend.cupybackend method)": [[85, "id133", false], [85, "ot.backend.CupyBackend.minimum", false]], "minimum() (ot.backend.jaxbackend method)": [[85, "id216", false], [85, "ot.backend.JaxBackend.minimum", false]], "minimum() (ot.backend.numpybackend method)": [[85, "id299", false], [85, "ot.backend.NumpyBackend.minimum", false]], "minimum() (ot.backend.tensorflowbackend method)": [[85, "id382", false], [85, "ot.backend.TensorflowBackend.minimum", false]], "minimum() (ot.backend.torchbackend method)": [[85, "id465", false], [85, "ot.backend.TorchBackend.minimum", false]], "mm_unbalanced() (in module ot.unbalanced)": [[106, "ot.unbalanced.mm_unbalanced", false]], "mm_unbalanced2() (in module ot.unbalanced)": [[106, "ot.unbalanced.mm_unbalanced2", false]], "module": [[0, "module-ot", false], [85, "module-ot.backend", false], [86, "module-ot.bregman", false], [87, "module-ot.coot", false], [88, "module-ot.da", false], [89, "module-ot.datasets", false], [90, "module-ot.dr", false], [91, "module-ot.factored", false], [92, "module-ot.gaussian", false], [93, "module-ot.gmm", false], [94, "module-ot.gnn", false], [95, "module-ot.gromov", false], [96, "module-ot.lowrank", false], [97, "module-ot.lp", false], [98, "module-ot.mapping", false], [99, "module-ot.optim", false], [100, "module-ot.partial", false], [101, "module-ot.plot", false], [102, "module-ot.regpath", false], [103, "module-ot.sliced", false], [104, "module-ot.smooth", false], [105, "module-ot.stochastic", false], [106, "module-ot.unbalanced", false], [107, "module-ot.utils", false], [108, "module-ot.weak", false]], "nan_to_num() (ot.backend.backend method)": [[85, "id50", false], [85, "ot.backend.Backend.nan_to_num", false]], "nan_to_num() (ot.backend.cupybackend method)": [[85, "id134", false], [85, "ot.backend.CupyBackend.nan_to_num", false]], "nan_to_num() (ot.backend.jaxbackend method)": [[85, "id217", false], [85, "ot.backend.JaxBackend.nan_to_num", false]], "nan_to_num() (ot.backend.numpybackend method)": [[85, "id300", false], [85, "ot.backend.NumpyBackend.nan_to_num", false]], "nan_to_num() (ot.backend.tensorflowbackend method)": [[85, "id383", false], [85, "ot.backend.TensorflowBackend.nan_to_num", false]], "nan_to_num() (ot.backend.torchbackend method)": [[85, "id466", false], [85, "ot.backend.TorchBackend.nan_to_num", false]], "nearest_brenier_potential_fit() (in module ot.mapping)": [[98, "id11", false], [98, "ot.mapping.nearest_brenier_potential_fit", false]], "nearest_brenier_potential_predict_bounds() (in module ot.mapping)": [[98, "id13", false], [98, "ot.mapping.nearest_brenier_potential_predict_bounds", false]], "nearestbrenierpotential (class in ot.da)": [[88, "id90", false], [88, "ot.da.NearestBrenierPotential", false]], "negentropy (class in ot.smooth)": [[104, "id0", false], [104, "ot.smooth.NegEntropy", false]], "norm() (ot.backend.backend method)": [[85, "id51", false], [85, "ot.backend.Backend.norm", false]], "norm() (ot.backend.cupybackend method)": [[85, "id135", false], [85, "ot.backend.CupyBackend.norm", false]], "norm() (ot.backend.jaxbackend method)": [[85, "id218", false], [85, "ot.backend.JaxBackend.norm", false]], "norm() (ot.backend.numpybackend method)": [[85, "id301", false], [85, "ot.backend.NumpyBackend.norm", false]], "norm() (ot.backend.tensorflowbackend method)": [[85, "id384", false], [85, "ot.backend.TensorflowBackend.norm", false]], "norm() (ot.backend.torchbackend method)": [[85, "id467", false], [85, "ot.backend.TorchBackend.norm", false]], "numpybackend (class in ot.backend)": [[85, "id252", false], [85, "ot.backend.NumpyBackend", false]], "omega() (ot.smooth.negentropy method)": [[104, "id7", false], [104, "ot.smooth.NegEntropy.Omega", false]], "omega() (ot.smooth.regularization method)": [[104, "id11", false], [104, "ot.smooth.Regularization.Omega", false]], "omega() (ot.smooth.sparsityconstrained method)": [[104, "id15", false], [104, "ot.smooth.SparsityConstrained.Omega", false]], "omega() (ot.smooth.squaredl2 method)": [[104, "id19", false], [104, "ot.smooth.SquaredL2.Omega", false]], "ones() (ot.backend.backend method)": [[85, "id52", false], [85, "ot.backend.Backend.ones", false]], "ones() (ot.backend.cupybackend method)": [[85, "id136", false], [85, "ot.backend.CupyBackend.ones", false]], "ones() (ot.backend.jaxbackend method)": [[85, "id219", false], [85, "ot.backend.JaxBackend.ones", false]], "ones() (ot.backend.numpybackend method)": [[85, "id302", false], [85, "ot.backend.NumpyBackend.ones", false]], "ones() (ot.backend.tensorflowbackend method)": [[85, "id385", false], [85, "ot.backend.TensorflowBackend.ones", false]], "ones() (ot.backend.torchbackend method)": [[85, "id468", false], [85, "ot.backend.TorchBackend.ones", false]], "ot": [[0, "module-ot", false]], "ot.backend": [[85, "module-ot.backend", false]], "ot.bregman": [[86, "module-ot.bregman", false]], "ot.coot": [[87, "module-ot.coot", false]], "ot.da": [[88, "module-ot.da", false]], "ot.datasets": [[89, "module-ot.datasets", false]], "ot.dr": [[90, "module-ot.dr", false]], "ot.factored": [[91, "module-ot.factored", false]], "ot.gaussian": [[92, "module-ot.gaussian", false]], "ot.gmm": [[93, "module-ot.gmm", false]], "ot.gnn": [[94, "module-ot.gnn", false]], "ot.gromov": [[95, "module-ot.gromov", false]], "ot.lowrank": [[96, "module-ot.lowrank", false]], "ot.lp": [[97, "module-ot.lp", false]], "ot.mapping": [[98, "module-ot.mapping", false]], "ot.optim": [[99, "module-ot.optim", false]], "ot.partial": [[100, "module-ot.partial", false]], "ot.plot": [[101, "module-ot.plot", false]], "ot.regpath": [[102, "module-ot.regpath", false]], "ot.sliced": [[103, "module-ot.sliced", false]], "ot.smooth": [[104, "module-ot.smooth", false]], "ot.stochastic": [[105, "module-ot.stochastic", false]], "ot.unbalanced": [[106, "module-ot.unbalanced", false]], "ot.utils": [[107, "module-ot.utils", false]], "ot.weak": [[108, "module-ot.weak", false]], "ot_next_gamma() (in module ot.regpath)": [[102, "id21", false], [102, "ot.regpath.ot_next_gamma", false]], "otresult (class in ot.utils)": [[107, "id17", false], [107, "ot.utils.OTResult", false]], "outer() (ot.backend.backend method)": [[85, "id53", false], [85, "ot.backend.Backend.outer", false]], "outer() (ot.backend.cupybackend method)": [[85, "id137", false], [85, "ot.backend.CupyBackend.outer", false]], "outer() (ot.backend.jaxbackend method)": [[85, "id220", false], [85, "ot.backend.JaxBackend.outer", false]], "outer() (ot.backend.numpybackend method)": [[85, "id303", false], [85, "ot.backend.NumpyBackend.outer", false]], "outer() (ot.backend.tensorflowbackend method)": [[85, "id386", false], [85, "ot.backend.TensorflowBackend.outer", false]], "outer() (ot.backend.torchbackend method)": [[85, "id469", false], [85, "ot.backend.TorchBackend.outer", false]], "parmap() (in module ot.utils)": [[107, "id68", false], [107, "ot.utils.parmap", false]], "partial_cg() (in module ot.optim)": [[99, "id41", false], [99, "ot.optim.partial_cg", false]], "partial_fused_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.partial_fused_gromov_wasserstein", false]], "partial_fused_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.partial_fused_gromov_wasserstein2", false]], "partial_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.partial_gromov_wasserstein", false]], "partial_gromov_wasserstein() (in module ot.partial)": [[100, "ot.partial.partial_gromov_wasserstein", false]], "partial_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.partial_gromov_wasserstein2", false]], "partial_gromov_wasserstein2() (in module ot.partial)": [[100, "ot.partial.partial_gromov_wasserstein2", false]], "partial_wasserstein() (in module ot.partial)": [[100, "ot.partial.partial_wasserstein", false]], "partial_wasserstein2() (in module ot.partial)": [[100, "ot.partial.partial_wasserstein2", false]], "partial_wasserstein_1d() (in module ot.partial)": [[100, "ot.partial.partial_wasserstein_1d", false]], "partial_wasserstein_lagrange() (in module ot.partial)": [[100, "ot.partial.partial_wasserstein_lagrange", false]], "plan (ot.utils.otresult attribute)": [[107, "id24", false], [107, "ot.utils.OTResult.plan", false]], "plan (ot.utils.otresult property)": [[107, "id38", false], [107, "id5", false]], "plan_dual_entropic() (in module ot.stochastic)": [[105, "id28", false], [105, "ot.stochastic.plan_dual_entropic", false]], "plan_dual_quadratic() (in module ot.stochastic)": [[105, "id30", false], [105, "ot.stochastic.plan_dual_quadratic", false]], "plot1d_mat() (in module ot.plot)": [[101, "id0", false], [101, "ot.plot.plot1D_mat", false]], "plot2d_samples_mat() (in module ot.plot)": [[101, "id1", false], [101, "ot.plot.plot2D_samples_mat", false]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.pointwise_gromov_wasserstein", false]], "potential_a (ot.utils.otresult attribute)": [[107, "id19", false], [107, "ot.utils.OTResult.potential_a", false]], "potential_a (ot.utils.otresult property)": [[107, "id39", false], [107, "id6", false]], "potential_b (ot.utils.otresult attribute)": [[107, "id20", false], [107, "ot.utils.OTResult.potential_b", false]], "potential_b (ot.utils.otresult property)": [[107, "id40", false], [107, "id7", false]], "potentials (ot.utils.otresult attribute)": [[107, "id18", false], [107, "ot.utils.OTResult.potentials", false]], "potentials (ot.utils.otresult property)": [[107, "id41", false], [107, "id8", false]], "power() (ot.backend.backend method)": [[85, "id54", false], [85, "ot.backend.Backend.power", false]], "power() (ot.backend.cupybackend method)": [[85, "id138", false], [85, "ot.backend.CupyBackend.power", false]], "power() (ot.backend.jaxbackend method)": [[85, "id221", false], [85, "ot.backend.JaxBackend.power", false]], "power() (ot.backend.numpybackend method)": [[85, "id304", false], [85, "ot.backend.NumpyBackend.power", false]], "power() (ot.backend.tensorflowbackend method)": [[85, "id387", false], [85, "ot.backend.TensorflowBackend.power", false]], "power() (ot.backend.torchbackend method)": [[85, "id470", false], [85, "ot.backend.TorchBackend.power", false]], "prod() (ot.backend.backend method)": [[85, "id55", false], [85, "ot.backend.Backend.prod", false]], "prod() (ot.backend.cupybackend method)": [[85, "id139", false], [85, "ot.backend.CupyBackend.prod", false]], "prod() (ot.backend.jaxbackend method)": [[85, "id222", false], [85, "ot.backend.JaxBackend.prod", false]], "prod() (ot.backend.numpybackend method)": [[85, "id305", false], [85, "ot.backend.NumpyBackend.prod", false]], "prod() (ot.backend.tensorflowbackend method)": [[85, "id388", false], [85, "ot.backend.TensorflowBackend.prod", false]], "prod() (ot.backend.torchbackend method)": [[85, "id471", false], [85, "ot.backend.TorchBackend.prod", false]], "proj_sdp() (in module ot.utils)": [[107, "id69", false], [107, "ot.utils.proj_SDP", false]], "proj_simplex() (in module ot.utils)": [[107, "id70", false], [107, "ot.utils.proj_simplex", false]], "projc() (in module ot.bregman)": [[86, "ot.bregman.projC", false]], "projection_robust_wasserstein() (in module ot.dr)": [[90, "id9", false], [90, "ot.dr.projection_robust_wasserstein", false]], "projection_simplex() (in module ot.smooth)": [[104, "id25", false], [104, "ot.smooth.projection_simplex", false]], "projection_sparse_simplex() (in module ot.utils)": [[107, "id71", false], [107, "ot.utils.projection_sparse_simplex", false]], "projr() (in module ot.bregman)": [[86, "ot.bregman.projR", false]], "proportions_ (ot.da.jcpottransport attribute)": [[88, "id61", false], [88, "ot.da.JCPOTTransport.proportions_", false]], "qr() (ot.backend.backend method)": [[85, "id56", false], [85, "ot.backend.Backend.qr", false]], "qr() (ot.backend.cupybackend method)": [[85, "id140", false], [85, "ot.backend.CupyBackend.qr", false]], "qr() (ot.backend.jaxbackend method)": [[85, "id223", false], [85, "ot.backend.JaxBackend.qr", false]], "qr() (ot.backend.numpybackend method)": [[85, "id306", false], [85, "ot.backend.NumpyBackend.qr", false]], "qr() (ot.backend.tensorflowbackend method)": [[85, "id389", false], [85, "ot.backend.TensorflowBackend.qr", false]], "qr() (ot.backend.torchbackend method)": [[85, "id472", false], [85, "ot.backend.TorchBackend.qr", false]], "quantized_fused_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.quantized_fused_gromov_wasserstein", false]], "quantized_fused_gromov_wasserstein_partitioned() (in module ot.gromov)": [[95, "ot.gromov.quantized_fused_gromov_wasserstein_partitioned", false]], "quantized_fused_gromov_wasserstein_samples() (in module ot.gromov)": [[95, "ot.gromov.quantized_fused_gromov_wasserstein_samples", false]], "rand() (ot.backend.backend method)": [[85, "id57", false], [85, "ot.backend.Backend.rand", false]], "rand() (ot.backend.cupybackend method)": [[85, "id141", false], [85, "ot.backend.CupyBackend.rand", false]], "rand() (ot.backend.jaxbackend method)": [[85, "id224", false], [85, "ot.backend.JaxBackend.rand", false]], "rand() (ot.backend.numpybackend method)": [[85, "id307", false], [85, "ot.backend.NumpyBackend.rand", false]], "rand() (ot.backend.tensorflowbackend method)": [[85, "id390", false], [85, "ot.backend.TensorflowBackend.rand", false]], "rand() (ot.backend.torchbackend method)": [[85, "id473", false], [85, "ot.backend.TorchBackend.rand", false]], "randn() (ot.backend.backend method)": [[85, "id58", false], [85, "ot.backend.Backend.randn", false]], "randn() (ot.backend.cupybackend method)": [[85, "id142", false], [85, "ot.backend.CupyBackend.randn", false]], "randn() (ot.backend.jaxbackend method)": [[85, "id225", false], [85, "ot.backend.JaxBackend.randn", false]], "randn() (ot.backend.numpybackend method)": [[85, "id308", false], [85, "ot.backend.NumpyBackend.randn", false]], "randn() (ot.backend.tensorflowbackend method)": [[85, "id391", false], [85, "ot.backend.TensorflowBackend.randn", false]], "randn() (ot.backend.torchbackend method)": [[85, "id474", false], [85, "ot.backend.TorchBackend.randn", false]], "recast_ot_as_lasso() (in module ot.regpath)": [[102, "id23", false], [102, "ot.regpath.recast_ot_as_lasso", false]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[102, "id25", false], [102, "ot.regpath.recast_semi_relaxed_as_lasso", false]], "reduce_lazytensor() (in module ot.utils)": [[107, "id73", false], [107, "ot.utils.reduce_lazytensor", false]], "regularization (class in ot.smooth)": [[104, "id10", false], [104, "ot.smooth.Regularization", false]], "regularization_path() (in module ot.regpath)": [[102, "id26", false], [102, "ot.regpath.regularization_path", false]], "repeat() (ot.backend.backend method)": [[85, "id59", false], [85, "ot.backend.Backend.repeat", false]], "repeat() (ot.backend.cupybackend method)": [[85, "id143", false], [85, "ot.backend.CupyBackend.repeat", false]], "repeat() (ot.backend.jaxbackend method)": [[85, "id226", false], [85, "ot.backend.JaxBackend.repeat", false]], "repeat() (ot.backend.numpybackend method)": [[85, "id309", false], [85, "ot.backend.NumpyBackend.repeat", false]], "repeat() (ot.backend.tensorflowbackend method)": [[85, "id392", false], [85, "ot.backend.TensorflowBackend.repeat", false]], "repeat() (ot.backend.torchbackend method)": [[85, "id475", false], [85, "ot.backend.TorchBackend.repeat", false]], "rescale_for_imshow_plot() (in module ot.plot)": [[101, "id2", false], [101, "ot.plot.rescale_for_imshow_plot", false]], "reshape() (ot.backend.backend method)": [[85, "id60", false], [85, "ot.backend.Backend.reshape", false]], "reshape() (ot.backend.cupybackend method)": [[85, "id144", false], [85, "ot.backend.CupyBackend.reshape", false]], "reshape() (ot.backend.jaxbackend method)": [[85, "id227", false], [85, "ot.backend.JaxBackend.reshape", false]], "reshape() (ot.backend.numpybackend method)": [[85, "id310", false], [85, "ot.backend.NumpyBackend.reshape", false]], "reshape() (ot.backend.tensorflowbackend method)": [[85, "id393", false], [85, "ot.backend.TensorflowBackend.reshape", false]], "reshape() (ot.backend.torchbackend method)": [[85, "id476", false], [85, "ot.backend.TorchBackend.reshape", false]], "sag_entropic_transport() (in module ot.stochastic)": [[105, "id32", false], [105, "ot.stochastic.sag_entropic_transport", false]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.sampled_gromov_wasserstein", false]], "screenkhorn() (in module ot.bregman)": [[86, "ot.bregman.screenkhorn", false]], "searchsorted() (ot.backend.backend method)": [[85, "id61", false], [85, "ot.backend.Backend.searchsorted", false]], "searchsorted() (ot.backend.cupybackend method)": [[85, "id145", false], [85, "ot.backend.CupyBackend.searchsorted", false]], "searchsorted() (ot.backend.jaxbackend method)": [[85, "id228", false], [85, "ot.backend.JaxBackend.searchsorted", false]], "searchsorted() (ot.backend.numpybackend method)": [[85, "id311", false], [85, "ot.backend.NumpyBackend.searchsorted", false]], "searchsorted() (ot.backend.tensorflowbackend method)": [[85, "id394", false], [85, "ot.backend.TensorflowBackend.searchsorted", false]], "searchsorted() (ot.backend.torchbackend method)": [[85, "id477", false], [85, "ot.backend.TorchBackend.searchsorted", false]], "seed() (ot.backend.backend method)": [[85, "id62", false], [85, "ot.backend.Backend.seed", false]], "seed() (ot.backend.cupybackend method)": [[85, "id146", false], [85, "ot.backend.CupyBackend.seed", false]], "seed() (ot.backend.jaxbackend method)": [[85, "id229", false], [85, "ot.backend.JaxBackend.seed", false]], "seed() (ot.backend.numpybackend method)": [[85, "id312", false], [85, "ot.backend.NumpyBackend.seed", false]], "seed() (ot.backend.tensorflowbackend method)": [[85, "id395", false], [85, "ot.backend.TensorflowBackend.seed", false]], "seed() (ot.backend.torchbackend method)": [[85, "id478", false], [85, "ot.backend.TorchBackend.seed", false]], "semi_dual_obj_grad() (in module ot.smooth)": [[104, "id26", false], [104, "ot.smooth.semi_dual_obj_grad", false]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[102, "id28", false], [102, "ot.regpath.semi_relaxed_next_gamma", false]], "semi_relaxed_path() (in module ot.regpath)": [[102, "id30", false], [102, "ot.regpath.semi_relaxed_path", false]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[0, "ot.semidiscrete_wasserstein2_unif_circle", false]], "semidiscrete_wasserstein2_unif_circle() (in module ot.lp)": [[97, "ot.lp.semidiscrete_wasserstein2_unif_circle", false]], "semirelaxed_cg() (in module ot.optim)": [[99, "id44", false], [99, "ot.optim.semirelaxed_cg", false]], "semirelaxed_fgw_barycenters() (in module ot.gromov)": [[95, "ot.gromov.semirelaxed_fgw_barycenters", false]], "semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.semirelaxed_fused_gromov_wasserstein", false]], "semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.semirelaxed_fused_gromov_wasserstein2", false]], "semirelaxed_gromov_barycenters() (in module ot.gromov)": [[95, "ot.gromov.semirelaxed_gromov_barycenters", false]], "semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[95, "ot.gromov.semirelaxed_gromov_wasserstein", false]], "semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[95, "ot.gromov.semirelaxed_gromov_wasserstein2", false]], "semirelaxed_init_plan() (in module ot.gromov)": [[95, "ot.gromov.semirelaxed_init_plan", false]], "set_gradients() (ot.backend.backend method)": [[85, "id63", false], [85, "ot.backend.Backend.set_gradients", false]], "set_gradients() (ot.backend.cupybackend method)": [[85, "id147", false], [85, "ot.backend.CupyBackend.set_gradients", false]], "set_gradients() (ot.backend.jaxbackend method)": [[85, "id230", false], [85, "ot.backend.JaxBackend.set_gradients", false]], "set_gradients() (ot.backend.numpybackend method)": [[85, "id313", false], [85, "ot.backend.NumpyBackend.set_gradients", false]], "set_gradients() (ot.backend.tensorflowbackend method)": [[85, "id396", false], [85, "ot.backend.TensorflowBackend.set_gradients", false]], "set_gradients() (ot.backend.torchbackend method)": [[85, "id479", false], [85, "ot.backend.TorchBackend.set_gradients", false]], "set_params() (ot.utils.baseestimator method)": [[107, "id15", false], [107, "ot.utils.BaseEstimator.set_params", false]], "sgd_entropic_regularization() (in module ot.stochastic)": [[105, "id35", false], [105, "ot.stochastic.sgd_entropic_regularization", false]], "sign() (ot.backend.backend method)": [[85, "id64", false], [85, "ot.backend.Backend.sign", false]], "sign() (ot.backend.cupybackend method)": [[85, "id148", false], [85, "ot.backend.CupyBackend.sign", false]], "sign() (ot.backend.jaxbackend method)": [[85, "id231", false], [85, "ot.backend.JaxBackend.sign", false]], "sign() (ot.backend.numpybackend method)": [[85, "id314", false], [85, "ot.backend.NumpyBackend.sign", false]], "sign() (ot.backend.tensorflowbackend method)": [[85, "id397", false], [85, "ot.backend.TensorflowBackend.sign", false]], "sign() (ot.backend.torchbackend method)": [[85, "id480", false], [85, "ot.backend.TorchBackend.sign", false]], "sinkhorn() (in module ot)": [[0, "ot.sinkhorn", false]], "sinkhorn() (in module ot.bregman)": [[86, "ot.bregman.sinkhorn", false]], "sinkhorn() (in module ot.dr)": [[90, "id12", false], [90, "ot.dr.sinkhorn", false]], "sinkhorn2() (in module ot)": [[0, "ot.sinkhorn2", false]], "sinkhorn2() (in module ot.bregman)": [[86, "ot.bregman.sinkhorn2", false]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[86, "ot.bregman.sinkhorn_epsilon_scaling", false]], "sinkhorn_knopp() (in module ot.bregman)": [[86, "ot.bregman.sinkhorn_knopp", false]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[106, "ot.unbalanced.sinkhorn_knopp_unbalanced", false]], "sinkhorn_l1l2_gl() (in module ot.da)": [[88, "id137", false], [88, "ot.da.sinkhorn_l1l2_gl", false]], "sinkhorn_log() (in module ot.bregman)": [[86, "ot.bregman.sinkhorn_log", false]], "sinkhorn_log() (in module ot.dr)": [[90, "id13", false], [90, "ot.dr.sinkhorn_log", false]], "sinkhorn_lpl1_mm() (in module ot)": [[0, "ot.sinkhorn_lpl1_mm", false]], "sinkhorn_lpl1_mm() (in module ot.da)": [[88, "id141", false], [88, "ot.da.sinkhorn_lpl1_mm", false]], "sinkhorn_stabilized() (in module ot.bregman)": [[86, "ot.bregman.sinkhorn_stabilized", false]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[106, "ot.unbalanced.sinkhorn_stabilized_unbalanced", false]], "sinkhorn_unbalanced() (in module ot)": [[0, "ot.sinkhorn_unbalanced", false]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[106, "ot.unbalanced.sinkhorn_unbalanced", false]], "sinkhorn_unbalanced2() (in module ot)": [[0, "ot.sinkhorn_unbalanced2", false]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[106, "ot.unbalanced.sinkhorn_unbalanced2", false]], "sinkhorn_unbalanced_translation_invariant() (in module ot.unbalanced)": [[106, "ot.unbalanced.sinkhorn_unbalanced_translation_invariant", false]], "sinkhornl1l2transport (class in ot.da)": [[88, "id98", false], [88, "ot.da.SinkhornL1l2Transport", false]], "sinkhornlpl1transport (class in ot.da)": [[88, "id106", false], [88, "ot.da.SinkhornLpl1Transport", false]], "sinkhorntransport (class in ot.da)": [[88, "id113", false], [88, "ot.da.SinkhornTransport", false]], "sliced_wasserstein_distance() (in module ot)": [[0, "ot.sliced_wasserstein_distance", false]], "sliced_wasserstein_distance() (in module ot.sliced)": [[103, "id7", false], [103, "ot.sliced.sliced_wasserstein_distance", false]], "sliced_wasserstein_sphere() (in module ot)": [[0, "ot.sliced_wasserstein_sphere", false]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[103, "id9", false], [103, "ot.sliced.sliced_wasserstein_sphere", false]], "sliced_wasserstein_sphere_unif() (in module ot)": [[0, "ot.sliced_wasserstein_sphere_unif", false]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[103, "id11", false], [103, "ot.sliced.sliced_wasserstein_sphere_unif", false]], "slogdet() (ot.backend.backend method)": [[85, "id65", false], [85, "ot.backend.Backend.slogdet", false]], "slogdet() (ot.backend.cupybackend method)": [[85, "id149", false], [85, "ot.backend.CupyBackend.slogdet", false]], "slogdet() (ot.backend.jaxbackend method)": [[85, "id232", false], [85, "ot.backend.JaxBackend.slogdet", false]], "slogdet() (ot.backend.numpybackend method)": [[85, "id315", false], [85, "ot.backend.NumpyBackend.slogdet", false]], "slogdet() (ot.backend.tensorflowbackend method)": [[85, "id398", false], [85, "ot.backend.TensorflowBackend.slogdet", false]], "slogdet() (ot.backend.torchbackend method)": [[85, "id481", false], [85, "ot.backend.TorchBackend.slogdet", false]], "smooth_ot_dual() (in module ot.smooth)": [[104, "id27", false], [104, "ot.smooth.smooth_ot_dual", false]], "smooth_ot_semi_dual() (in module ot.smooth)": [[104, "id32", false], [104, "ot.smooth.smooth_ot_semi_dual", false]], "solve() (in module ot)": [[0, "ot.solve", false]], "solve() (ot.backend.backend method)": [[85, "id66", false], [85, "ot.backend.Backend.solve", false]], "solve() (ot.backend.cupybackend method)": [[85, "id150", false], [85, "ot.backend.CupyBackend.solve", false]], "solve() (ot.backend.jaxbackend method)": [[85, "id233", false], [85, "ot.backend.JaxBackend.solve", false]], "solve() (ot.backend.numpybackend method)": [[85, "id316", false], [85, "ot.backend.NumpyBackend.solve", false]], "solve() (ot.backend.tensorflowbackend method)": [[85, "id399", false], [85, "ot.backend.TensorflowBackend.solve", false]], "solve() (ot.backend.torchbackend method)": [[85, "id482", false], [85, "ot.backend.TorchBackend.solve", false]], "solve_1d_linesearch_quad() (in module ot.optim)": [[99, "id47", false], [99, "ot.optim.solve_1d_linesearch_quad", false]], "solve_dual() (in module ot.smooth)": [[104, "id37", false], [104, "ot.smooth.solve_dual", false]], "solve_dual_entropic() (in module ot.stochastic)": [[105, "id37", false], [105, "ot.stochastic.solve_dual_entropic", false]], "solve_gromov() (in module ot)": [[0, "ot.solve_gromov", false]], "solve_gromov_linesearch() (in module ot.gromov)": [[95, "ot.gromov.solve_gromov_linesearch", false]], "solve_partial_gromov_linesearch() (in module ot.gromov)": [[95, "ot.gromov.solve_partial_gromov_linesearch", false]], "solve_sample() (in module ot)": [[0, "ot.solve_sample", false]], "solve_semi_dual() (in module ot.smooth)": [[104, "id38", false], [104, "ot.smooth.solve_semi_dual", false]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[105, "id39", false], [105, "ot.stochastic.solve_semi_dual_entropic", false]], "solve_semirelaxed_gromov_linesearch() (in module ot.gromov)": [[95, "ot.gromov.solve_semirelaxed_gromov_linesearch", false]], "sort() (ot.backend.backend method)": [[85, "id67", false], [85, "ot.backend.Backend.sort", false]], "sort() (ot.backend.cupybackend method)": [[85, "id151", false], [85, "ot.backend.CupyBackend.sort", false]], "sort() (ot.backend.jaxbackend method)": [[85, "id234", false], [85, "ot.backend.JaxBackend.sort", false]], "sort() (ot.backend.numpybackend method)": [[85, "id317", false], [85, "ot.backend.NumpyBackend.sort", false]], "sort() (ot.backend.tensorflowbackend method)": [[85, "id400", false], [85, "ot.backend.TensorflowBackend.sort", false]], "sort() (ot.backend.torchbackend method)": [[85, "id483", false], [85, "ot.backend.TorchBackend.sort", false]], "sort2() (ot.backend.backend method)": [[85, "id68", false], [85, "ot.backend.Backend.sort2", false]], "sort2() (ot.backend.cupybackend method)": [[85, "id152", false], [85, "ot.backend.CupyBackend.sort2", false]], "sort2() (ot.backend.jaxbackend method)": [[85, "id235", false], [85, "ot.backend.JaxBackend.sort2", false]], "sort2() (ot.backend.numpybackend method)": [[85, "id318", false], [85, "ot.backend.NumpyBackend.sort2", false]], "sort2() (ot.backend.tensorflowbackend method)": [[85, "id401", false], [85, "ot.backend.TensorflowBackend.sort2", false]], "sort2() (ot.backend.torchbackend method)": [[85, "id484", false], [85, "ot.backend.TorchBackend.sort2", false]], "sparse_plan (ot.utils.otresult attribute)": [[107, "id25", false], [107, "ot.utils.OTResult.sparse_plan", false]], "sparse_plan (ot.utils.otresult property)": [[107, "id42", false], [107, "id9", false]], "sparsityconstrained (class in ot.smooth)": [[104, "id14", false], [104, "ot.smooth.SparsityConstrained", false]], "split_classes() (in module ot.dr)": [[90, "id14", false], [90, "ot.dr.split_classes", false]], "sqrt() (ot.backend.backend method)": [[85, "id69", false], [85, "ot.backend.Backend.sqrt", false]], "sqrt() (ot.backend.cupybackend method)": [[85, "id153", false], [85, "ot.backend.CupyBackend.sqrt", false]], "sqrt() (ot.backend.jaxbackend method)": [[85, "id236", false], [85, "ot.backend.JaxBackend.sqrt", false]], "sqrt() (ot.backend.numpybackend method)": [[85, "id319", false], [85, "ot.backend.NumpyBackend.sqrt", false]], "sqrt() (ot.backend.tensorflowbackend method)": [[85, "id402", false], [85, "ot.backend.TensorflowBackend.sqrt", false]], "sqrt() (ot.backend.torchbackend method)": [[85, "id485", false], [85, "ot.backend.TorchBackend.sqrt", false]], "sqrtm() (ot.backend.backend method)": [[85, "id70", false], [85, "ot.backend.Backend.sqrtm", false]], "sqrtm() (ot.backend.cupybackend method)": [[85, "id154", false], [85, "ot.backend.CupyBackend.sqrtm", false]], "sqrtm() (ot.backend.jaxbackend method)": [[85, "id237", false], [85, "ot.backend.JaxBackend.sqrtm", false]], "sqrtm() (ot.backend.numpybackend method)": [[85, "id320", false], [85, "ot.backend.NumpyBackend.sqrtm", false]], "sqrtm() (ot.backend.tensorflowbackend method)": [[85, "id403", false], [85, "ot.backend.TensorflowBackend.sqrtm", false]], "sqrtm() (ot.backend.torchbackend method)": [[85, "id486", false], [85, "ot.backend.TorchBackend.sqrtm", false]], "squaredl2 (class in ot.smooth)": [[104, "id18", false], [104, "ot.smooth.SquaredL2", false]], "squeeze() (ot.backend.backend method)": [[85, "id71", false], [85, "ot.backend.Backend.squeeze", false]], "squeeze() (ot.backend.cupybackend method)": [[85, "id155", false], [85, "ot.backend.CupyBackend.squeeze", false]], "squeeze() (ot.backend.jaxbackend method)": [[85, "id238", false], [85, "ot.backend.JaxBackend.squeeze", false]], "squeeze() (ot.backend.numpybackend method)": [[85, "id321", false], [85, "ot.backend.NumpyBackend.squeeze", false]], "squeeze() (ot.backend.tensorflowbackend method)": [[85, "id404", false], [85, "ot.backend.TensorflowBackend.squeeze", false]], "squeeze() (ot.backend.torchbackend method)": [[85, "id487", false], [85, "ot.backend.TorchBackend.squeeze", false]], "stack() (ot.backend.backend method)": [[85, "id72", false], [85, "ot.backend.Backend.stack", false]], "stack() (ot.backend.cupybackend method)": [[85, "id156", false], [85, "ot.backend.CupyBackend.stack", false]], "stack() (ot.backend.jaxbackend method)": [[85, "id239", false], [85, "ot.backend.JaxBackend.stack", false]], "stack() (ot.backend.numpybackend method)": [[85, "id322", false], [85, "ot.backend.NumpyBackend.stack", false]], "stack() (ot.backend.tensorflowbackend method)": [[85, "id405", false], [85, "ot.backend.TensorflowBackend.stack", false]], "stack() (ot.backend.torchbackend method)": [[85, "id488", false], [85, "ot.backend.TorchBackend.stack", false]], "status (ot.utils.otresult property)": [[107, "id43", false], [107, "ot.utils.OTResult.status", false]], "std() (ot.backend.backend method)": [[85, "id73", false], [85, "ot.backend.Backend.std", false]], "std() (ot.backend.cupybackend method)": [[85, "id157", false], [85, "ot.backend.CupyBackend.std", false]], "std() (ot.backend.jaxbackend method)": [[85, "id240", false], [85, "ot.backend.JaxBackend.std", false]], "std() (ot.backend.numpybackend method)": [[85, "id323", false], [85, "ot.backend.NumpyBackend.std", false]], "std() (ot.backend.tensorflowbackend method)": [[85, "id406", false], [85, "ot.backend.TensorflowBackend.std", false]], "std() (ot.backend.torchbackend method)": [[85, "id489", false], [85, "ot.backend.TorchBackend.std", false]], "sum() (ot.backend.backend method)": [[85, "id74", false], [85, "ot.backend.Backend.sum", false]], "sum() (ot.backend.cupybackend method)": [[85, "id158", false], [85, "ot.backend.CupyBackend.sum", false]], "sum() (ot.backend.jaxbackend method)": [[85, "id241", false], [85, "ot.backend.JaxBackend.sum", false]], "sum() (ot.backend.numpybackend method)": [[85, "id324", false], [85, "ot.backend.NumpyBackend.sum", false]], "sum() (ot.backend.tensorflowbackend method)": [[85, "id407", false], [85, "ot.backend.TensorflowBackend.sum", false]], "sum() (ot.backend.torchbackend method)": [[85, "id490", false], [85, "ot.backend.TorchBackend.sum", false]], "take_along_axis() (ot.backend.backend method)": [[85, "id75", false], [85, "ot.backend.Backend.take_along_axis", false]], "take_along_axis() (ot.backend.cupybackend method)": [[85, "id159", false], [85, "ot.backend.CupyBackend.take_along_axis", false]], "take_along_axis() (ot.backend.jaxbackend method)": [[85, "id242", false], [85, "ot.backend.JaxBackend.take_along_axis", false]], "take_along_axis() (ot.backend.numpybackend method)": [[85, "id325", false], [85, "ot.backend.NumpyBackend.take_along_axis", false]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[85, "id408", false], [85, "ot.backend.TensorflowBackend.take_along_axis", false]], "take_along_axis() (ot.backend.torchbackend method)": [[85, "id491", false], [85, "ot.backend.TorchBackend.take_along_axis", false]], "tensor_product() (in module ot.gromov)": [[95, "ot.gromov.tensor_product", false]], "tensorflowbackend (class in ot.backend)": [[85, "id335", false], [85, "ot.backend.TensorflowBackend", false]], "tfgwpooling (class in ot.gnn)": [[94, "ot.gnn.TFGWPooling", false]], "tic() (in module ot)": [[0, "ot.tic", false]], "tic() (in module ot.utils)": [[107, "id74", false], [107, "ot.utils.tic", false]], "tile() (ot.backend.backend method)": [[85, "id76", false], [85, "ot.backend.Backend.tile", false]], "tile() (ot.backend.cupybackend method)": [[85, "id160", false], [85, "ot.backend.CupyBackend.tile", false]], "tile() (ot.backend.jaxbackend method)": [[85, "id243", false], [85, "ot.backend.JaxBackend.tile", false]], "tile() (ot.backend.numpybackend method)": [[85, "id326", false], [85, "ot.backend.NumpyBackend.tile", false]], "tile() (ot.backend.tensorflowbackend method)": [[85, "id409", false], [85, "ot.backend.TensorflowBackend.tile", false]], "tile() (ot.backend.torchbackend method)": [[85, "id492", false], [85, "ot.backend.TorchBackend.tile", false]], "to_numpy() (in module ot.backend)": [[85, "id504", false], [85, "ot.backend.to_numpy", false]], "to_numpy() (ot.backend.backend method)": [[85, "id77", false], [85, "ot.backend.Backend.to_numpy", false]], "toc() (in module ot)": [[0, "ot.toc", false]], "toc() (in module ot.utils)": [[107, "id75", false], [107, "ot.utils.toc", false]], "tocsr() (ot.backend.backend method)": [[85, "id78", false], [85, "ot.backend.Backend.tocsr", false]], "tocsr() (ot.backend.cupybackend method)": [[85, "id161", false], [85, "ot.backend.CupyBackend.tocsr", false]], "tocsr() (ot.backend.jaxbackend method)": [[85, "id244", false], [85, "ot.backend.JaxBackend.tocsr", false]], "tocsr() (ot.backend.numpybackend method)": [[85, "id327", false], [85, "ot.backend.NumpyBackend.tocsr", false]], "tocsr() (ot.backend.tensorflowbackend method)": [[85, "id410", false], [85, "ot.backend.TensorflowBackend.tocsr", false]], "tocsr() (ot.backend.torchbackend method)": [[85, "id493", false], [85, "ot.backend.TorchBackend.tocsr", false]], "todense() (ot.backend.backend method)": [[85, "id79", false], [85, "ot.backend.Backend.todense", false]], "todense() (ot.backend.cupybackend method)": [[85, "id162", false], [85, "ot.backend.CupyBackend.todense", false]], "todense() (ot.backend.jaxbackend method)": [[85, "id245", false], [85, "ot.backend.JaxBackend.todense", false]], "todense() (ot.backend.numpybackend method)": [[85, "id328", false], [85, "ot.backend.NumpyBackend.todense", false]], "todense() (ot.backend.tensorflowbackend method)": [[85, "id411", false], [85, "ot.backend.TensorflowBackend.todense", false]], "todense() (ot.backend.torchbackend method)": [[85, "id494", false], [85, "ot.backend.TorchBackend.todense", false]], "toq() (in module ot)": [[0, "ot.toq", false]], "toq() (in module ot.utils)": [[107, "id76", false], [107, "ot.utils.toq", false]], "torchbackend (class in ot.backend)": [[85, "id418", false], [85, "ot.backend.TorchBackend", false]], "trace() (ot.backend.backend method)": [[85, "id80", false], [85, "ot.backend.Backend.trace", false]], "trace() (ot.backend.cupybackend method)": [[85, "id163", false], [85, "ot.backend.CupyBackend.trace", false]], "trace() (ot.backend.jaxbackend method)": [[85, "id246", false], [85, "ot.backend.JaxBackend.trace", false]], "trace() (ot.backend.numpybackend method)": [[85, "id329", false], [85, "ot.backend.NumpyBackend.trace", false]], "trace() (ot.backend.tensorflowbackend method)": [[85, "id412", false], [85, "ot.backend.TensorflowBackend.trace", false]], "trace() (ot.backend.torchbackend method)": [[85, "id495", false], [85, "ot.backend.TorchBackend.trace", false]], "transform() (ot.da.basetransport method)": [[88, "id42", false], [88, "ot.da.BaseTransport.transform", false]], "transform() (ot.da.jcpottransport method)": [[88, "id68", false], [88, "ot.da.JCPOTTransport.transform", false]], "transform() (ot.da.lineartransport method)": [[88, "id82", false], [88, "ot.da.LinearTransport.transform", false]], "transform() (ot.da.mappingtransport method)": [[88, "id89", false], [88, "ot.da.MappingTransport.transform", false]], "transform() (ot.da.nearestbrenierpotential method)": [[88, "id95", false], [88, "ot.da.NearestBrenierPotential.transform", false]], "transform() (ot.da.sinkhorntransport method)": [[88, "id124", false], [88, "ot.da.SinkhornTransport.transform", false]], "transform_labels() (ot.da.basetransport method)": [[88, "id43", false], [88, "ot.da.BaseTransport.transform_labels", false]], "transform_labels() (ot.da.jcpottransport method)": [[88, "id69", false], [88, "ot.da.JCPOTTransport.transform_labels", false]], "transpose() (ot.backend.backend method)": [[85, "id81", false], [85, "ot.backend.Backend.transpose", false]], "transpose() (ot.backend.cupybackend method)": [[85, "id164", false], [85, "ot.backend.CupyBackend.transpose", false]], "transpose() (ot.backend.jaxbackend method)": [[85, "id247", false], [85, "ot.backend.JaxBackend.transpose", false]], "transpose() (ot.backend.numpybackend method)": [[85, "id330", false], [85, "ot.backend.NumpyBackend.transpose", false]], "transpose() (ot.backend.tensorflowbackend method)": [[85, "id413", false], [85, "ot.backend.TensorflowBackend.transpose", false]], "transpose() (ot.backend.torchbackend method)": [[85, "id496", false], [85, "ot.backend.TorchBackend.transpose", false]], "twpooling (class in ot.gnn)": [[94, "ot.gnn.TWPooling", false]], "unbalanced_co_optimal_transport() (in module ot.gromov)": [[95, "ot.gromov.unbalanced_co_optimal_transport", false]], "unbalanced_co_optimal_transport2() (in module ot.gromov)": [[95, "ot.gromov.unbalanced_co_optimal_transport2", false]], "unbalancedsinkhorntransport (class in ot.da)": [[88, "id125", false], [88, "ot.da.UnbalancedSinkhornTransport", false]], "undefinedparameter": [[107, "ot.utils.UndefinedParameter", false]], "unif() (in module ot)": [[0, "ot.unif", false]], "unif() (in module ot.utils)": [[107, "id77", false], [107, "ot.utils.unif", false]], "unique() (ot.backend.backend method)": [[85, "id82", false], [85, "ot.backend.Backend.unique", false]], "unique() (ot.backend.cupybackend method)": [[85, "id165", false], [85, "ot.backend.CupyBackend.unique", false]], "unique() (ot.backend.jaxbackend method)": [[85, "id248", false], [85, "ot.backend.JaxBackend.unique", false]], "unique() (ot.backend.numpybackend method)": [[85, "id331", false], [85, "ot.backend.NumpyBackend.unique", false]], "unique() (ot.backend.tensorflowbackend method)": [[85, "id414", false], [85, "ot.backend.TensorflowBackend.unique", false]], "unique() (ot.backend.torchbackend method)": [[85, "id497", false], [85, "ot.backend.TorchBackend.unique", false]], "unmix() (in module ot.bregman)": [[86, "ot.bregman.unmix", false]], "uot_cost_matrix() (in module ot.gromov)": [[95, "ot.gromov.uot_cost_matrix", false]], "uot_parameters_and_measures() (in module ot.gromov)": [[95, "ot.gromov.uot_parameters_and_measures", false]], "update_barycenter_feature() (in module ot.gromov)": [[95, "ot.gromov.update_barycenter_feature", false]], "update_barycenter_structure() (in module ot.gromov)": [[95, "ot.gromov.update_barycenter_structure", false]], "value (ot.utils.otresult attribute)": [[107, "id21", false], [107, "ot.utils.OTResult.value", false]], "value (ot.utils.otresult property)": [[107, "id10", false], [107, "id44", false]], "value_linear (ot.utils.otresult attribute)": [[107, "id22", false], [107, "ot.utils.OTResult.value_linear", false]], "value_linear (ot.utils.otresult property)": [[107, "id11", false], [107, "id45", false]], "value_quad (ot.utils.otresult attribute)": [[107, "id23", false], [107, "ot.utils.OTResult.value_quad", false]], "value_quad (ot.utils.otresult property)": [[107, "id12", false], [107, "id46", false]], "wasserstein_1d() (in module ot)": [[0, "ot.wasserstein_1d", false]], "wasserstein_1d() (in module ot.lp)": [[97, "ot.lp.wasserstein_1d", false]], "wasserstein_circle() (in module ot)": [[0, "ot.wasserstein_circle", false]], "wasserstein_circle() (in module ot.lp)": [[97, "ot.lp.wasserstein_circle", false]], "wasserstein_distance_to_templates() (in module ot.gnn)": [[94, "ot.gnn.wasserstein_distance_to_templates", false]], "wda() (in module ot.dr)": [[90, "id15", false], [90, "ot.dr.wda", false]], "weak_optimal_transport() (in module ot)": [[0, "ot.weak_optimal_transport", false]], "weak_optimal_transport() (in module ot.weak)": [[108, "id0", false], [108, "ot.weak.weak_optimal_transport", false]], "where() (ot.backend.backend method)": [[85, "id83", false], [85, "ot.backend.Backend.where", false]], "where() (ot.backend.cupybackend method)": [[85, "id166", false], [85, "ot.backend.CupyBackend.where", false]], "where() (ot.backend.jaxbackend method)": [[85, "id249", false], [85, "ot.backend.JaxBackend.where", false]], "where() (ot.backend.numpybackend method)": [[85, "id332", false], [85, "ot.backend.NumpyBackend.where", false]], "where() (ot.backend.tensorflowbackend method)": [[85, "id415", false], [85, "ot.backend.TensorflowBackend.where", false]], "where() (ot.backend.torchbackend method)": [[85, "id498", false], [85, "ot.backend.TorchBackend.where", false]], "zero_pad() (ot.backend.backend method)": [[85, "id84", false], [85, "ot.backend.Backend.zero_pad", false]], "zero_pad() (ot.backend.cupybackend method)": [[85, "id167", false], [85, "ot.backend.CupyBackend.zero_pad", false]], "zero_pad() (ot.backend.jaxbackend method)": [[85, "id250", false], [85, "ot.backend.JaxBackend.zero_pad", false]], "zero_pad() (ot.backend.numpybackend method)": [[85, "id333", false], [85, "ot.backend.NumpyBackend.zero_pad", false]], "zero_pad() (ot.backend.tensorflowbackend method)": [[85, "id416", false], [85, "ot.backend.TensorflowBackend.zero_pad", false]], "zero_pad() (ot.backend.torchbackend method)": [[85, "id499", false], [85, "ot.backend.TorchBackend.zero_pad", false]], "zeros() (ot.backend.backend method)": [[85, "id85", false], [85, "ot.backend.Backend.zeros", false]], "zeros() (ot.backend.cupybackend method)": [[85, "id168", false], [85, "ot.backend.CupyBackend.zeros", false]], "zeros() (ot.backend.jaxbackend method)": [[85, "id251", false], [85, "ot.backend.JaxBackend.zeros", false]], "zeros() (ot.backend.numpybackend method)": [[85, "id334", false], [85, "ot.backend.NumpyBackend.zeros", false]], "zeros() (ot.backend.tensorflowbackend method)": [[85, "id417", false], [85, "ot.backend.TensorflowBackend.zeros", false]], "zeros() (ot.backend.torchbackend method)": [[85, "id500", false], [85, "ot.backend.TorchBackend.zeros", false]]}, "objects": {"": [[0, 0, 0, "-", "ot"]], "ot": [[85, 0, 0, "-", "backend"], [0, 3, 1, "", "barycenter"], [0, 3, 1, "", "barycenter_unbalanced"], [0, 3, 1, "", "binary_search_circle"], [86, 0, 0, "-", "bregman"], [87, 0, 0, "-", "coot"], [88, 0, 0, "-", "da"], [89, 0, 0, "-", "datasets"], [0, 3, 1, "", "dist"], [90, 0, 0, "-", "dr"], [0, 3, 1, "", "emd"], [0, 3, 1, "", "emd2"], [0, 3, 1, "", "emd2_1d"], [0, 3, 1, "", "emd_1d"], [91, 0, 0, "-", "factored"], [0, 3, 1, "", "factored_optimal_transport"], [0, 3, 1, "", "fused_gromov_wasserstein"], [0, 3, 1, "", "fused_gromov_wasserstein2"], [92, 0, 0, "-", "gaussian"], [93, 0, 0, "-", "gmm"], [94, 0, 0, "-", "gnn"], [95, 0, 0, "-", "gromov"], [0, 3, 1, "", "gromov_barycenters"], [0, 3, 1, "", "gromov_wasserstein"], [0, 3, 1, "", "gromov_wasserstein2"], [96, 0, 0, "-", "lowrank"], [0, 3, 1, "", "lowrank_gromov_wasserstein_samples"], [0, 3, 1, "", "lowrank_sinkhorn"], [97, 0, 0, "-", "lp"], [98, 0, 0, "-", "mapping"], [0, 3, 1, "", "max_sliced_wasserstein_distance"], [99, 0, 0, "-", "optim"], [100, 0, 0, "-", "partial"], [101, 0, 0, "-", "plot"], [102, 0, 0, "-", "regpath"], [0, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [0, 3, 1, "", "sinkhorn"], [0, 3, 1, "", "sinkhorn2"], [0, 3, 1, "", "sinkhorn_lpl1_mm"], [0, 3, 1, "", "sinkhorn_unbalanced"], [0, 3, 1, "", "sinkhorn_unbalanced2"], [103, 0, 0, "-", "sliced"], [0, 3, 1, "", "sliced_wasserstein_distance"], [0, 3, 1, "", "sliced_wasserstein_sphere"], [0, 3, 1, "", "sliced_wasserstein_sphere_unif"], [104, 0, 0, "-", "smooth"], [0, 3, 1, "", "solve"], [0, 3, 1, "", "solve_gromov"], [0, 3, 1, "", "solve_sample"], [105, 0, 0, "-", "stochastic"], [0, 3, 1, "", "tic"], [0, 3, 1, "", "toc"], [0, 3, 1, "", "toq"], [106, 0, 0, "-", "unbalanced"], [0, 3, 1, "", "unif"], [107, 0, 0, "-", "utils"], [0, 3, 1, "", "wasserstein_1d"], [0, 3, 1, "", "wasserstein_circle"], [108, 0, 0, "-", "weak"], [0, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[85, 1, 1, "id0", "Backend"], [85, 1, 1, "id86", "CupyBackend"], [85, 1, 1, "id169", "JaxBackend"], [85, 1, 1, "id252", "NumpyBackend"], [85, 1, 1, "id335", "TensorflowBackend"], [85, 1, 1, "id418", "TorchBackend"], [85, 3, 1, "id501", "get_available_backend_implementations"], [85, 3, 1, "id502", "get_backend"], [85, 3, 1, "id503", "get_backend_list"], [85, 3, 1, "id504", "to_numpy"]], "ot.backend.Backend": [[85, 2, 1, "id1", "abs"], [85, 2, 1, "id2", "allclose"], [85, 2, 1, "id3", "any"], [85, 2, 1, "id4", "arange"], [85, 2, 1, "id5", "argmax"], [85, 2, 1, "id6", "argmin"], [85, 2, 1, "id7", "argsort"], [85, 2, 1, "id8", "array_equal"], [85, 2, 1, "id9", "assert_same_dtype_device"], [85, 2, 1, "id10", "atan2"], [85, 2, 1, "id11", "bitsize"], [85, 2, 1, "id12", "clip"], [85, 2, 1, "id13", "concatenate"], [85, 2, 1, "id14", "coo_matrix"], [85, 2, 1, "id15", "copy"], [85, 2, 1, "id16", "cumsum"], [85, 2, 1, "id17", "det"], [85, 2, 1, "id18", "detach"], [85, 2, 1, "id19", "device_type"], [85, 2, 1, "id20", "diag"], [85, 2, 1, "id21", "dot"], [85, 2, 1, "id22", "dtype_device"], [85, 2, 1, "id23", "eigh"], [85, 2, 1, "id24", "einsum"], [85, 2, 1, "id25", "eliminate_zeros"], [85, 2, 1, "id26", "exp"], [85, 2, 1, "id27", "eye"], [85, 2, 1, "id28", "flip"], [85, 2, 1, "id29", "floor"], [85, 2, 1, "id30", "from_numpy"], [85, 2, 1, "id31", "full"], [85, 2, 1, "id32", "inv"], [85, 2, 1, "id33", "is_floating_point"], [85, 2, 1, "id34", "isfinite"], [85, 2, 1, "id35", "isinf"], [85, 2, 1, "id36", "isnan"], [85, 2, 1, "id37", "issparse"], [85, 2, 1, "id38", "kl_div"], [85, 2, 1, "id39", "linspace"], [85, 2, 1, "id40", "log"], [85, 2, 1, "id41", "logsumexp"], [85, 2, 1, "id42", "matmul"], [85, 2, 1, "id43", "max"], [85, 2, 1, "id44", "maximum"], [85, 2, 1, "id45", "mean"], [85, 2, 1, "id46", "median"], [85, 2, 1, "id47", "meshgrid"], [85, 2, 1, "id48", "min"], [85, 2, 1, "id49", "minimum"], [85, 2, 1, "id50", "nan_to_num"], [85, 2, 1, "id51", "norm"], [85, 2, 1, "id52", "ones"], [85, 2, 1, "id53", "outer"], [85, 2, 1, "id54", "power"], [85, 2, 1, "id55", "prod"], [85, 2, 1, "id56", "qr"], [85, 2, 1, "id57", "rand"], [85, 2, 1, "id58", "randn"], [85, 2, 1, "id59", "repeat"], [85, 2, 1, "id60", "reshape"], [85, 2, 1, "id61", "searchsorted"], [85, 2, 1, "id62", "seed"], [85, 2, 1, "id63", "set_gradients"], [85, 2, 1, "id64", "sign"], [85, 2, 1, "id65", "slogdet"], [85, 2, 1, "id66", "solve"], [85, 2, 1, "id67", "sort"], [85, 2, 1, "id68", "sort2"], [85, 2, 1, "id69", "sqrt"], [85, 2, 1, "id70", "sqrtm"], [85, 2, 1, "id71", "squeeze"], [85, 2, 1, "id72", "stack"], [85, 2, 1, "id73", "std"], [85, 2, 1, "id74", "sum"], [85, 2, 1, "id75", "take_along_axis"], [85, 2, 1, "id76", "tile"], [85, 2, 1, "id77", "to_numpy"], [85, 2, 1, "id78", "tocsr"], [85, 2, 1, "id79", "todense"], [85, 2, 1, "id80", "trace"], [85, 2, 1, "id81", "transpose"], [85, 2, 1, "id82", "unique"], [85, 2, 1, "id83", "where"], [85, 2, 1, "id84", "zero_pad"], [85, 2, 1, "id85", "zeros"]], "ot.backend.CupyBackend": [[85, 2, 1, "id87", "abs"], [85, 2, 1, "id88", "allclose"], [85, 2, 1, "id89", "any"], [85, 2, 1, "id90", "arange"], [85, 2, 1, "id91", "argmax"], [85, 2, 1, "id92", "argmin"], [85, 2, 1, "id93", "argsort"], [85, 2, 1, "id94", "array_equal"], [85, 2, 1, "id95", "assert_same_dtype_device"], [85, 2, 1, "id96", "atan2"], [85, 2, 1, "id97", "bitsize"], [85, 2, 1, "id98", "clip"], [85, 2, 1, "id99", "concatenate"], [85, 2, 1, "id100", "coo_matrix"], [85, 2, 1, "id101", "copy"], [85, 2, 1, "id102", "cumsum"], [85, 2, 1, "id103", "det"], [85, 2, 1, "id104", "device_type"], [85, 2, 1, "id105", "diag"], [85, 2, 1, "id106", "dot"], [85, 2, 1, "id107", "dtype_device"], [85, 2, 1, "id108", "eigh"], [85, 2, 1, "id109", "einsum"], [85, 2, 1, "id110", "eliminate_zeros"], [85, 2, 1, "id111", "exp"], [85, 2, 1, "id112", "eye"], [85, 2, 1, "id113", "flip"], [85, 2, 1, "id114", "floor"], [85, 2, 1, "id115", "full"], [85, 2, 1, "id116", "inv"], [85, 2, 1, "id117", "is_floating_point"], [85, 2, 1, "id118", "isfinite"], [85, 2, 1, "id119", "isinf"], [85, 2, 1, "id120", "isnan"], [85, 2, 1, "id121", "issparse"], [85, 2, 1, "id122", "kl_div"], [85, 2, 1, "id123", "linspace"], [85, 2, 1, "id124", "log"], [85, 2, 1, "id125", "logsumexp"], [85, 2, 1, "id126", "matmul"], [85, 2, 1, "id127", "max"], [85, 2, 1, "id128", "maximum"], [85, 2, 1, "id129", "mean"], [85, 2, 1, "id130", "median"], [85, 2, 1, "id131", "meshgrid"], [85, 2, 1, "id132", "min"], [85, 2, 1, "id133", "minimum"], [85, 2, 1, "id134", "nan_to_num"], [85, 2, 1, "id135", "norm"], [85, 2, 1, "id136", "ones"], [85, 2, 1, "id137", "outer"], [85, 2, 1, "id138", "power"], [85, 2, 1, "id139", "prod"], [85, 2, 1, "id140", "qr"], [85, 2, 1, "id141", "rand"], [85, 2, 1, "id142", "randn"], [85, 2, 1, "id143", "repeat"], [85, 2, 1, "id144", "reshape"], [85, 2, 1, "id145", "searchsorted"], [85, 2, 1, "id146", "seed"], [85, 2, 1, "id147", "set_gradients"], [85, 2, 1, "id148", "sign"], [85, 2, 1, "id149", "slogdet"], [85, 2, 1, "id150", "solve"], [85, 2, 1, "id151", "sort"], [85, 2, 1, "id152", "sort2"], [85, 2, 1, "id153", "sqrt"], [85, 2, 1, "id154", "sqrtm"], [85, 2, 1, "id155", "squeeze"], [85, 2, 1, "id156", "stack"], [85, 2, 1, "id157", "std"], [85, 2, 1, "id158", "sum"], [85, 2, 1, "id159", "take_along_axis"], [85, 2, 1, "id160", "tile"], [85, 2, 1, "id161", "tocsr"], [85, 2, 1, "id162", "todense"], [85, 2, 1, "id163", "trace"], [85, 2, 1, "id164", "transpose"], [85, 2, 1, "id165", "unique"], [85, 2, 1, "id166", "where"], [85, 2, 1, "id167", "zero_pad"], [85, 2, 1, "id168", "zeros"]], "ot.backend.JaxBackend": [[85, 2, 1, "id170", "abs"], [85, 2, 1, "id171", "allclose"], [85, 2, 1, "id172", "any"], [85, 2, 1, "id173", "arange"], [85, 2, 1, "id174", "argmax"], [85, 2, 1, "id175", "argmin"], [85, 2, 1, "id176", "argsort"], [85, 2, 1, "id177", "array_equal"], [85, 2, 1, "id178", "assert_same_dtype_device"], [85, 2, 1, "id179", "atan2"], [85, 2, 1, "id180", "bitsize"], [85, 2, 1, "id181", "clip"], [85, 2, 1, "id182", "concatenate"], [85, 2, 1, "id183", "coo_matrix"], [85, 2, 1, "id184", "copy"], [85, 2, 1, "id185", "cumsum"], [85, 2, 1, "id186", "det"], [85, 2, 1, "id187", "device_type"], [85, 2, 1, "id188", "diag"], [85, 2, 1, "id189", "dot"], [85, 2, 1, "id190", "dtype_device"], [85, 2, 1, "id191", "eigh"], [85, 2, 1, "id192", "einsum"], [85, 2, 1, "id193", "eliminate_zeros"], [85, 2, 1, "id194", "exp"], [85, 2, 1, "id195", "eye"], [85, 2, 1, "id196", "flip"], [85, 2, 1, "id197", "floor"], [85, 2, 1, "id198", "full"], [85, 2, 1, "id199", "inv"], [85, 2, 1, "id200", "is_floating_point"], [85, 2, 1, "id201", "isfinite"], [85, 2, 1, "id202", "isinf"], [85, 2, 1, "id203", "isnan"], [85, 2, 1, "id204", "issparse"], [85, 2, 1, "id205", "kl_div"], [85, 2, 1, "id206", "linspace"], [85, 2, 1, "id207", "log"], [85, 2, 1, "id208", "logsumexp"], [85, 2, 1, "id209", "matmul"], [85, 2, 1, "id210", "max"], [85, 2, 1, "id211", "maximum"], [85, 2, 1, "id212", "mean"], [85, 2, 1, "id213", "median"], [85, 2, 1, "id214", "meshgrid"], [85, 2, 1, "id215", "min"], [85, 2, 1, "id216", "minimum"], [85, 2, 1, "id217", "nan_to_num"], [85, 2, 1, "id218", "norm"], [85, 2, 1, "id219", "ones"], [85, 2, 1, "id220", "outer"], [85, 2, 1, "id221", "power"], [85, 2, 1, "id222", "prod"], [85, 2, 1, "id223", "qr"], [85, 2, 1, "id224", "rand"], [85, 2, 1, "id225", "randn"], [85, 2, 1, "id226", "repeat"], [85, 2, 1, "id227", "reshape"], [85, 2, 1, "id228", "searchsorted"], [85, 2, 1, "id229", "seed"], [85, 2, 1, "id230", "set_gradients"], [85, 2, 1, "id231", "sign"], [85, 2, 1, "id232", "slogdet"], [85, 2, 1, "id233", "solve"], [85, 2, 1, "id234", "sort"], [85, 2, 1, "id235", "sort2"], [85, 2, 1, "id236", "sqrt"], [85, 2, 1, "id237", "sqrtm"], [85, 2, 1, "id238", "squeeze"], [85, 2, 1, "id239", "stack"], [85, 2, 1, "id240", "std"], [85, 2, 1, "id241", "sum"], [85, 2, 1, "id242", "take_along_axis"], [85, 2, 1, "id243", "tile"], [85, 2, 1, "id244", "tocsr"], [85, 2, 1, "id245", "todense"], [85, 2, 1, "id246", "trace"], [85, 2, 1, "id247", "transpose"], [85, 2, 1, "id248", "unique"], [85, 2, 1, "id249", "where"], [85, 2, 1, "id250", "zero_pad"], [85, 2, 1, "id251", "zeros"]], "ot.backend.NumpyBackend": [[85, 2, 1, "id253", "abs"], [85, 2, 1, "id254", "allclose"], [85, 2, 1, "id255", "any"], [85, 2, 1, "id256", "arange"], [85, 2, 1, "id257", "argmax"], [85, 2, 1, "id258", "argmin"], [85, 2, 1, "id259", "argsort"], [85, 2, 1, "id260", "array_equal"], [85, 2, 1, "id261", "assert_same_dtype_device"], [85, 2, 1, "id262", "atan2"], [85, 2, 1, "id263", "bitsize"], [85, 2, 1, "id264", "clip"], [85, 2, 1, "id265", "concatenate"], [85, 2, 1, "id266", "coo_matrix"], [85, 2, 1, "id267", "copy"], [85, 2, 1, "id268", "cumsum"], [85, 2, 1, "id269", "det"], [85, 2, 1, "id270", "device_type"], [85, 2, 1, "id271", "diag"], [85, 2, 1, "id272", "dot"], [85, 2, 1, "id273", "dtype_device"], [85, 2, 1, "id274", "eigh"], [85, 2, 1, "id275", "einsum"], [85, 2, 1, "id276", "eliminate_zeros"], [85, 2, 1, "id277", "exp"], [85, 2, 1, "id278", "eye"], [85, 2, 1, "id279", "flip"], [85, 2, 1, "id280", "floor"], [85, 2, 1, "id281", "full"], [85, 2, 1, "id282", "inv"], [85, 2, 1, "id283", "is_floating_point"], [85, 2, 1, "id284", "isfinite"], [85, 2, 1, "id285", "isinf"], [85, 2, 1, "id286", "isnan"], [85, 2, 1, "id287", "issparse"], [85, 2, 1, "id288", "kl_div"], [85, 2, 1, "id289", "linspace"], [85, 2, 1, "id290", "log"], [85, 2, 1, "id291", "logsumexp"], [85, 2, 1, "id292", "matmul"], [85, 2, 1, "id293", "max"], [85, 2, 1, "id294", "maximum"], [85, 2, 1, "id295", "mean"], [85, 2, 1, "id296", "median"], [85, 2, 1, "id297", "meshgrid"], [85, 2, 1, "id298", "min"], [85, 2, 1, "id299", "minimum"], [85, 2, 1, "id300", "nan_to_num"], [85, 2, 1, "id301", "norm"], [85, 2, 1, "id302", "ones"], [85, 2, 1, "id303", "outer"], [85, 2, 1, "id304", "power"], [85, 2, 1, "id305", "prod"], [85, 2, 1, "id306", "qr"], [85, 2, 1, "id307", "rand"], [85, 2, 1, "id308", "randn"], [85, 2, 1, "id309", "repeat"], [85, 2, 1, "id310", "reshape"], [85, 2, 1, "id311", "searchsorted"], [85, 2, 1, "id312", "seed"], [85, 2, 1, "id313", "set_gradients"], [85, 2, 1, "id314", "sign"], [85, 2, 1, "id315", "slogdet"], [85, 2, 1, "id316", "solve"], [85, 2, 1, "id317", "sort"], [85, 2, 1, "id318", "sort2"], [85, 2, 1, "id319", "sqrt"], [85, 2, 1, "id320", "sqrtm"], [85, 2, 1, "id321", "squeeze"], [85, 2, 1, "id322", "stack"], [85, 2, 1, "id323", "std"], [85, 2, 1, "id324", "sum"], [85, 2, 1, "id325", "take_along_axis"], [85, 2, 1, "id326", "tile"], [85, 2, 1, "id327", "tocsr"], [85, 2, 1, "id328", "todense"], [85, 2, 1, "id329", "trace"], [85, 2, 1, "id330", "transpose"], [85, 2, 1, "id331", "unique"], [85, 2, 1, "id332", "where"], [85, 2, 1, "id333", "zero_pad"], [85, 2, 1, "id334", "zeros"]], "ot.backend.TensorflowBackend": [[85, 2, 1, "id336", "abs"], [85, 2, 1, "id337", "allclose"], [85, 2, 1, "id338", "any"], [85, 2, 1, "id339", "arange"], [85, 2, 1, "id340", "argmax"], [85, 2, 1, "id341", "argmin"], [85, 2, 1, "id342", "argsort"], [85, 2, 1, "id343", "array_equal"], [85, 2, 1, "id344", "assert_same_dtype_device"], [85, 2, 1, "id345", "atan2"], [85, 2, 1, "id346", "bitsize"], [85, 2, 1, "id347", "clip"], [85, 2, 1, "id348", "concatenate"], [85, 2, 1, "id349", "coo_matrix"], [85, 2, 1, "id350", "copy"], [85, 2, 1, "id351", "cumsum"], [85, 2, 1, "id352", "det"], [85, 2, 1, "id353", "device_type"], [85, 2, 1, "id354", "diag"], [85, 2, 1, "id355", "dot"], [85, 2, 1, "id356", "dtype_device"], [85, 2, 1, "id357", "eigh"], [85, 2, 1, "id358", "einsum"], [85, 2, 1, "id359", "eliminate_zeros"], [85, 2, 1, "id360", "exp"], [85, 2, 1, "id361", "eye"], [85, 2, 1, "id362", "flip"], [85, 2, 1, "id363", "floor"], [85, 2, 1, "id364", "full"], [85, 2, 1, "id365", "inv"], [85, 2, 1, "id366", "is_floating_point"], [85, 2, 1, "id367", "isfinite"], [85, 2, 1, "id368", "isinf"], [85, 2, 1, "id369", "isnan"], [85, 2, 1, "id370", "issparse"], [85, 2, 1, "id371", "kl_div"], [85, 2, 1, "id372", "linspace"], [85, 2, 1, "id373", "log"], [85, 2, 1, "id374", "logsumexp"], [85, 2, 1, "id375", "matmul"], [85, 2, 1, "id376", "max"], [85, 2, 1, "id377", "maximum"], [85, 2, 1, "id378", "mean"], [85, 2, 1, "id379", "median"], [85, 2, 1, "id380", "meshgrid"], [85, 2, 1, "id381", "min"], [85, 2, 1, "id382", "minimum"], [85, 2, 1, "id383", "nan_to_num"], [85, 2, 1, "id384", "norm"], [85, 2, 1, "id385", "ones"], [85, 2, 1, "id386", "outer"], [85, 2, 1, "id387", "power"], [85, 2, 1, "id388", "prod"], [85, 2, 1, "id389", "qr"], [85, 2, 1, "id390", "rand"], [85, 2, 1, "id391", "randn"], [85, 2, 1, "id392", "repeat"], [85, 2, 1, "id393", "reshape"], [85, 2, 1, "id394", "searchsorted"], [85, 2, 1, "id395", "seed"], [85, 2, 1, "id396", "set_gradients"], [85, 2, 1, "id397", "sign"], [85, 2, 1, "id398", "slogdet"], [85, 2, 1, "id399", "solve"], [85, 2, 1, "id400", "sort"], [85, 2, 1, "id401", "sort2"], [85, 2, 1, "id402", "sqrt"], [85, 2, 1, "id403", "sqrtm"], [85, 2, 1, "id404", "squeeze"], [85, 2, 1, "id405", "stack"], [85, 2, 1, "id406", "std"], [85, 2, 1, "id407", "sum"], [85, 2, 1, "id408", "take_along_axis"], [85, 2, 1, "id409", "tile"], [85, 2, 1, "id410", "tocsr"], [85, 2, 1, "id411", "todense"], [85, 2, 1, "id412", "trace"], [85, 2, 1, "id413", "transpose"], [85, 2, 1, "id414", "unique"], [85, 2, 1, "id415", "where"], [85, 2, 1, "id416", "zero_pad"], [85, 2, 1, "id417", "zeros"]], "ot.backend.TorchBackend": [[85, 2, 1, "id419", "abs"], [85, 2, 1, "id420", "allclose"], [85, 2, 1, "id421", "any"], [85, 2, 1, "id422", "arange"], [85, 2, 1, "id423", "argmax"], [85, 2, 1, "id424", "argmin"], [85, 2, 1, "id425", "argsort"], [85, 2, 1, "id426", "array_equal"], [85, 2, 1, "id427", "assert_same_dtype_device"], [85, 2, 1, "id428", "atan2"], [85, 2, 1, "id429", "bitsize"], [85, 2, 1, "id430", "clip"], [85, 2, 1, "id431", "concatenate"], [85, 2, 1, "id432", "coo_matrix"], [85, 2, 1, "id433", "copy"], [85, 2, 1, "id434", "cumsum"], [85, 2, 1, "id435", "det"], [85, 2, 1, "id436", "device_type"], [85, 2, 1, "id437", "diag"], [85, 2, 1, "id438", "dot"], [85, 2, 1, "id439", "dtype_device"], [85, 2, 1, "id440", "eigh"], [85, 2, 1, "id441", "einsum"], [85, 2, 1, "id442", "eliminate_zeros"], [85, 2, 1, "id443", "exp"], [85, 2, 1, "id444", "eye"], [85, 2, 1, "id445", "flip"], [85, 2, 1, "id446", "floor"], [85, 2, 1, "id447", "full"], [85, 2, 1, "id448", "inv"], [85, 2, 1, "id449", "is_floating_point"], [85, 2, 1, "id450", "isfinite"], [85, 2, 1, "id451", "isinf"], [85, 2, 1, "id452", "isnan"], [85, 2, 1, "id453", "issparse"], [85, 2, 1, "id454", "kl_div"], [85, 2, 1, "id455", "linspace"], [85, 2, 1, "id456", "log"], [85, 2, 1, "id457", "logsumexp"], [85, 2, 1, "id458", "matmul"], [85, 2, 1, "id459", "max"], [85, 2, 1, "id460", "maximum"], [85, 2, 1, "id461", "mean"], [85, 2, 1, "id462", "median"], [85, 2, 1, "id463", "meshgrid"], [85, 2, 1, "id464", "min"], [85, 2, 1, "id465", "minimum"], [85, 2, 1, "id466", "nan_to_num"], [85, 2, 1, "id467", "norm"], [85, 2, 1, "id468", "ones"], [85, 2, 1, "id469", "outer"], [85, 2, 1, "id470", "power"], [85, 2, 1, "id471", "prod"], [85, 2, 1, "id472", "qr"], [85, 2, 1, "id473", "rand"], [85, 2, 1, "id474", "randn"], [85, 2, 1, "id475", "repeat"], [85, 2, 1, "id476", "reshape"], [85, 2, 1, "id477", "searchsorted"], [85, 2, 1, "id478", "seed"], [85, 2, 1, "id479", "set_gradients"], [85, 2, 1, "id480", "sign"], [85, 2, 1, "id481", "slogdet"], [85, 2, 1, "id482", "solve"], [85, 2, 1, "id483", "sort"], [85, 2, 1, "id484", "sort2"], [85, 2, 1, "id485", "sqrt"], [85, 2, 1, "id486", "sqrtm"], [85, 2, 1, "id487", "squeeze"], [85, 2, 1, "id488", "stack"], [85, 2, 1, "id489", "std"], [85, 2, 1, "id490", "sum"], [85, 2, 1, "id491", "take_along_axis"], [85, 2, 1, "id492", "tile"], [85, 2, 1, "id493", "tocsr"], [85, 2, 1, "id494", "todense"], [85, 2, 1, "id495", "trace"], [85, 2, 1, "id496", "transpose"], [85, 2, 1, "id497", "unique"], [85, 2, 1, "id498", "where"], [85, 2, 1, "id499", "zero_pad"], [85, 2, 1, "id500", "zeros"]], "ot.bregman": [[86, 3, 1, "", "barycenter"], [86, 3, 1, "", "barycenter_debiased"], [86, 3, 1, "", "barycenter_sinkhorn"], [86, 3, 1, "", "barycenter_stabilized"], [86, 3, 1, "", "convolutional_barycenter2d"], [86, 3, 1, "", "convolutional_barycenter2d_debiased"], [86, 3, 1, "", "empirical_sinkhorn"], [86, 3, 1, "", "empirical_sinkhorn2"], [86, 3, 1, "", "empirical_sinkhorn2_geomloss"], [86, 3, 1, "", "empirical_sinkhorn_divergence"], [86, 3, 1, "", "free_support_sinkhorn_barycenter"], [86, 3, 1, "", "geometricBar"], [86, 3, 1, "", "geometricMean"], [86, 3, 1, "", "greenkhorn"], [86, 3, 1, "", "jcpot_barycenter"], [86, 3, 1, "", "projC"], [86, 3, 1, "", "projR"], [86, 3, 1, "", "screenkhorn"], [86, 3, 1, "", "sinkhorn"], [86, 3, 1, "", "sinkhorn2"], [86, 3, 1, "", "sinkhorn_epsilon_scaling"], [86, 3, 1, "", "sinkhorn_knopp"], [86, 3, 1, "", "sinkhorn_log"], [86, 3, 1, "", "sinkhorn_stabilized"], [86, 3, 1, "", "unmix"]], "ot.coot": [[87, 3, 1, "id0", "co_optimal_transport"], [87, 3, 1, "id4", "co_optimal_transport2"]], "ot.da": [[88, 1, 1, "id0", "BaseTransport"], [88, 1, 1, "id46", "EMDLaplaceTransport"], [88, 1, 1, "id53", "EMDTransport"], [88, 1, 1, "id59", "JCPOTTransport"], [88, 1, 1, "id72", "LinearGWTransport"], [88, 1, 1, "id76", "LinearTransport"], [88, 1, 1, "id83", "MappingTransport"], [88, 1, 1, "id90", "NearestBrenierPotential"], [88, 1, 1, "id98", "SinkhornL1l2Transport"], [88, 1, 1, "id106", "SinkhornLpl1Transport"], [88, 1, 1, "id113", "SinkhornTransport"], [88, 1, 1, "id125", "UnbalancedSinkhornTransport"], [88, 3, 1, "id132", "distribution_estimation_uniform"], [88, 3, 1, "id133", "emd_laplace"], [88, 3, 1, "id137", "sinkhorn_l1l2_gl"], [88, 3, 1, "id141", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[88, 2, 1, "id38", "fit"], [88, 2, 1, "id39", "fit_transform"], [88, 2, 1, "id40", "inverse_transform"], [88, 2, 1, "id41", "inverse_transform_labels"], [88, 2, 1, "id42", "transform"], [88, 2, 1, "id43", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[88, 4, 1, "id47", "coupling_"], [88, 2, 1, "id52", "fit"]], "ot.da.EMDTransport": [[88, 4, 1, "id54", "coupling_"], [88, 2, 1, "id58", "fit"]], "ot.da.JCPOTTransport": [[88, 4, 1, "id60", "coupling_"], [88, 2, 1, "id66", "fit"], [88, 2, 1, "id67", "inverse_transform_labels"], [88, 4, 1, "id62", "log_"], [88, 4, 1, "id61", "proportions_"], [88, 2, 1, "id68", "transform"], [88, 2, 1, "id69", "transform_labels"]], "ot.da.LinearGWTransport": [[88, 2, 1, "id75", "fit"]], "ot.da.LinearTransport": [[88, 2, 1, "id80", "fit"], [88, 2, 1, "id81", "inverse_transform"], [88, 2, 1, "id82", "transform"]], "ot.da.MappingTransport": [[88, 4, 1, "id84", "coupling_"], [88, 2, 1, "id88", "fit"], [88, 4, 1, "id86", "log_"], [88, 4, 1, "id85", "mapping_"], [88, 2, 1, "id89", "transform"]], "ot.da.NearestBrenierPotential": [[88, 2, 1, "id93", "fit"], [88, 2, 1, "id95", "transform"]], "ot.da.SinkhornL1l2Transport": [[88, 4, 1, "id99", "coupling_"], [88, 2, 1, "id105", "fit"], [88, 4, 1, "id100", "log_"]], "ot.da.SinkhornLpl1Transport": [[88, 4, 1, "id107", "coupling_"], [88, 2, 1, "id112", "fit"]], "ot.da.SinkhornTransport": [[88, 4, 1, "id114", "coupling_"], [88, 2, 1, "id122", "fit"], [88, 2, 1, "id123", "inverse_transform"], [88, 4, 1, "id115", "log_"], [88, 2, 1, "id124", "transform"]], "ot.da.UnbalancedSinkhornTransport": [[88, 4, 1, "id126", "coupling_"], [88, 2, 1, "id131", "fit"], [88, 4, 1, "id127", "log_"]], "ot.datasets": [[89, 3, 1, "id0", "make_1D_gauss"], [89, 3, 1, "id1", "make_2D_samples_gauss"], [89, 3, 1, "id2", "make_data_classif"]], "ot.dr": [[90, 3, 1, "id0", "dist"], [90, 3, 1, "id4", "ewca"], [90, 3, 1, "id7", "fda"], [90, 3, 1, "id8", "logsumexp"], [90, 3, 1, "id9", "projection_robust_wasserstein"], [90, 3, 1, "id12", "sinkhorn"], [90, 3, 1, "id13", "sinkhorn_log"], [90, 3, 1, "id14", "split_classes"], [90, 3, 1, "id15", "wda"]], "ot.factored": [[91, 3, 1, "id0", "factored_optimal_transport"]], "ot.gaussian": [[92, 3, 1, "id0", "bures_barycenter_fixpoint"], [92, 3, 1, "id24", "bures_barycenter_gradient_descent"], [92, 3, 1, "id28", "bures_distance"], [92, 3, 1, "id31", "bures_wasserstein_barycenter"], [92, 3, 1, "id36", "bures_wasserstein_distance"], [92, 3, 1, "id39", "bures_wasserstein_mapping"], [92, 3, 1, "id43", "empirical_bures_wasserstein_barycenter"], [92, 3, 1, "id46", "empirical_bures_wasserstein_distance"], [92, 3, 1, "id49", "empirical_bures_wasserstein_mapping"], [92, 3, 1, "id53", "empirical_gaussian_gromov_wasserstein_distance"], [92, 3, 1, "id56", "empirical_gaussian_gromov_wasserstein_mapping"], [92, 3, 1, "id59", "gaussian_gromov_wasserstein_distance"], [92, 3, 1, "id62", "gaussian_gromov_wasserstein_mapping"]], "ot.gmm": [[93, 3, 1, "id0", "dist_bures_squared"], [93, 3, 1, "id7", "gaussian_logpdf"], [93, 3, 1, "id8", "gaussian_pdf"], [93, 3, 1, "id9", "gmm_ot_apply_map"], [93, 3, 1, "id11", "gmm_ot_loss"], [93, 3, 1, "id13", "gmm_ot_plan"], [93, 3, 1, "id15", "gmm_ot_plan_density"], [93, 3, 1, "id17", "gmm_pdf"]], "ot.gnn": [[94, 3, 1, "", "FGW_distance_to_templates"], [94, 1, 1, "", "TFGWPooling"], [94, 1, 1, "", "TWPooling"], [94, 3, 1, "", "wasserstein_distance_to_templates"]], "ot.gnn.TFGWPooling": [[94, 2, 1, "", "forward"]], "ot.gnn.TWPooling": [[94, 2, 1, "", "forward"]], "ot.gromov": [[95, 3, 1, "", "BAPG_fused_gromov_wasserstein"], [95, 3, 1, "", "BAPG_fused_gromov_wasserstein2"], [95, 3, 1, "", "BAPG_gromov_wasserstein"], [95, 3, 1, "", "BAPG_gromov_wasserstein2"], [95, 3, 1, "", "GW_distance_estimation"], [95, 3, 1, "", "div_between_product"], [95, 3, 1, "", "div_to_product"], [95, 3, 1, "", "entropic_fused_gromov_barycenters"], [95, 3, 1, "", "entropic_fused_gromov_wasserstein"], [95, 3, 1, "", "entropic_fused_gromov_wasserstein2"], [95, 3, 1, "", "entropic_gromov_barycenters"], [95, 3, 1, "", "entropic_gromov_wasserstein"], [95, 3, 1, "", "entropic_gromov_wasserstein2"], [95, 3, 1, "", "entropic_partial_fused_gromov_wasserstein"], [95, 3, 1, "", "entropic_partial_fused_gromov_wasserstein2"], [95, 3, 1, "", "entropic_partial_gromov_wasserstein"], [95, 3, 1, "", "entropic_partial_gromov_wasserstein2"], [95, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein"], [95, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein2"], [95, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein"], [95, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein2"], [95, 3, 1, "", "fgw_barycenters"], [95, 3, 1, "", "format_partitioned_graph"], [95, 3, 1, "", "format_partitioned_samples"], [95, 3, 1, "", "fused_gromov_wasserstein"], [95, 3, 1, "", "fused_gromov_wasserstein2"], [95, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [95, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [95, 3, 1, "", "fused_unbalanced_across_spaces_cost"], [95, 3, 1, "", "fused_unbalanced_across_spaces_divergence"], [95, 3, 1, "", "fused_unbalanced_gromov_wasserstein"], [95, 3, 1, "", "fused_unbalanced_gromov_wasserstein2"], [95, 3, 1, "", "get_graph_partition"], [95, 3, 1, "", "get_graph_representants"], [95, 3, 1, "", "get_partition_and_representants_samples"], [95, 3, 1, "", "gromov_barycenters"], [95, 3, 1, "", "gromov_wasserstein"], [95, 3, 1, "", "gromov_wasserstein2"], [95, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [95, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [95, 3, 1, "", "gwggrad"], [95, 3, 1, "", "gwloss"], [95, 3, 1, "", "init_matrix"], [95, 3, 1, "", "init_matrix_semirelaxed"], [95, 3, 1, "", "lowrank_gromov_wasserstein_samples"], [95, 3, 1, "", "partial_fused_gromov_wasserstein"], [95, 3, 1, "", "partial_fused_gromov_wasserstein2"], [95, 3, 1, "", "partial_gromov_wasserstein"], [95, 3, 1, "", "partial_gromov_wasserstein2"], [95, 3, 1, "", "pointwise_gromov_wasserstein"], [95, 3, 1, "", "quantized_fused_gromov_wasserstein"], [95, 3, 1, "", "quantized_fused_gromov_wasserstein_partitioned"], [95, 3, 1, "", "quantized_fused_gromov_wasserstein_samples"], [95, 3, 1, "", "sampled_gromov_wasserstein"], [95, 3, 1, "", "semirelaxed_fgw_barycenters"], [95, 3, 1, "", "semirelaxed_fused_gromov_wasserstein"], [95, 3, 1, "", "semirelaxed_fused_gromov_wasserstein2"], [95, 3, 1, "", "semirelaxed_gromov_barycenters"], [95, 3, 1, "", "semirelaxed_gromov_wasserstein"], [95, 3, 1, "", "semirelaxed_gromov_wasserstein2"], [95, 3, 1, "", "semirelaxed_init_plan"], [95, 3, 1, "", "solve_gromov_linesearch"], [95, 3, 1, "", "solve_partial_gromov_linesearch"], [95, 3, 1, "", "solve_semirelaxed_gromov_linesearch"], [95, 3, 1, "", "tensor_product"], [95, 3, 1, "", "unbalanced_co_optimal_transport"], [95, 3, 1, "", "unbalanced_co_optimal_transport2"], [95, 3, 1, "", "uot_cost_matrix"], [95, 3, 1, "", "uot_parameters_and_measures"], [95, 3, 1, "", "update_barycenter_feature"], [95, 3, 1, "", "update_barycenter_structure"]], "ot.lowrank": [[96, 3, 1, "id0", "compute_lr_sqeuclidean_matrix"], [96, 3, 1, "id4", "lowrank_sinkhorn"]], "ot.lp": [[97, 3, 1, "", "barycenter"], [97, 3, 1, "", "binary_search_circle"], [97, 3, 1, "", "check_number_threads"], [97, 3, 1, "", "dmmot_monge_1dgrid_loss"], [97, 3, 1, "", "dmmot_monge_1dgrid_optimize"], [97, 3, 1, "", "emd"], [97, 3, 1, "", "emd2"], [97, 3, 1, "", "emd2_1d"], [97, 3, 1, "", "emd_1d"], [97, 3, 1, "", "emd_1d_sorted"], [97, 3, 1, "", "free_support_barycenter"], [97, 3, 1, "", "generalized_free_support_barycenter"], [97, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [97, 3, 1, "", "wasserstein_1d"], [97, 3, 1, "", "wasserstein_circle"]], "ot.mapping": [[98, 3, 1, "id0", "joint_OT_mapping_kernel"], [98, 3, 1, "id8", "joint_OT_mapping_linear"], [98, 3, 1, "id11", "nearest_brenier_potential_fit"], [98, 3, 1, "id13", "nearest_brenier_potential_predict_bounds"]], "ot.optim": [[99, 3, 1, "id0", "cg"], [99, 3, 1, "id22", "gcg"], [99, 3, 1, "id26", "generic_conditional_gradient"], [99, 3, 1, "id40", "line_search_armijo"], [99, 3, 1, "id41", "partial_cg"], [99, 3, 1, "id44", "semirelaxed_cg"], [99, 3, 1, "id47", "solve_1d_linesearch_quad"]], "ot.partial": [[100, 3, 1, "", "entropic_partial_gromov_wasserstein"], [100, 3, 1, "", "entropic_partial_gromov_wasserstein2"], [100, 3, 1, "", "entropic_partial_wasserstein"], [100, 3, 1, "", "gwgrad_partial"], [100, 3, 1, "", "gwloss_partial"], [100, 3, 1, "", "partial_gromov_wasserstein"], [100, 3, 1, "", "partial_gromov_wasserstein2"], [100, 3, 1, "", "partial_wasserstein"], [100, 3, 1, "", "partial_wasserstein2"], [100, 3, 1, "", "partial_wasserstein_1d"], [100, 3, 1, "", "partial_wasserstein_lagrange"]], "ot.plot": [[101, 3, 1, "id0", "plot1D_mat"], [101, 3, 1, "id1", "plot2D_samples_mat"], [101, 3, 1, "id2", "rescale_for_imshow_plot"]], "ot.regpath": [[102, 3, 1, "id0", "complement_schur"], [102, 3, 1, "id12", "compute_next_removal"], [102, 3, 1, "id15", "compute_transport_plan"], [102, 3, 1, "id18", "construct_augmented_H"], [102, 3, 1, "id19", "fully_relaxed_path"], [102, 3, 1, "id21", "ot_next_gamma"], [102, 3, 1, "id23", "recast_ot_as_lasso"], [102, 3, 1, "id25", "recast_semi_relaxed_as_lasso"], [102, 3, 1, "id26", "regularization_path"], [102, 3, 1, "id28", "semi_relaxed_next_gamma"], [102, 3, 1, "id30", "semi_relaxed_path"]], "ot.sliced": [[103, 3, 1, "id0", "get_random_projections"], [103, 3, 1, "id5", "max_sliced_wasserstein_distance"], [103, 3, 1, "id7", "sliced_wasserstein_distance"], [103, 3, 1, "id9", "sliced_wasserstein_sphere"], [103, 3, 1, "id11", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[104, 1, 1, "id0", "NegEntropy"], [104, 1, 1, "id10", "Regularization"], [104, 1, 1, "id14", "SparsityConstrained"], [104, 1, 1, "id18", "SquaredL2"], [104, 3, 1, "id22", "dual_obj_grad"], [104, 3, 1, "id23", "get_plan_from_dual"], [104, 3, 1, "id24", "get_plan_from_semi_dual"], [104, 3, 1, "id25", "projection_simplex"], [104, 3, 1, "id26", "semi_dual_obj_grad"], [104, 3, 1, "id27", "smooth_ot_dual"], [104, 3, 1, "id32", "smooth_ot_semi_dual"], [104, 3, 1, "id37", "solve_dual"], [104, 3, 1, "id38", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[104, 2, 1, "id7", "Omega"], [104, 2, 1, "id8", "delta_Omega"], [104, 2, 1, "id9", "max_Omega"]], "ot.smooth.Regularization": [[104, 2, 1, "id11", "Omega"], [104, 2, 1, "id12", "delta_Omega"], [104, 2, 1, "id13", "max_Omega"]], "ot.smooth.SparsityConstrained": [[104, 2, 1, "id15", "Omega"], [104, 2, 1, "id16", "delta_Omega"], [104, 2, 1, "id17", "max_Omega"]], "ot.smooth.SquaredL2": [[104, 2, 1, "id19", "Omega"], [104, 2, 1, "id20", "delta_Omega"], [104, 2, 1, "id21", "max_Omega"]], "ot.stochastic": [[105, 3, 1, "id0", "averaged_sgd_entropic_transport"], [105, 3, 1, "id15", "batch_grad_dual"], [105, 3, 1, "id18", "c_transform_entropic"], [105, 3, 1, "id21", "coordinate_grad_semi_dual"], [105, 3, 1, "id24", "loss_dual_entropic"], [105, 3, 1, "id26", "loss_dual_quadratic"], [105, 3, 1, "id28", "plan_dual_entropic"], [105, 3, 1, "id30", "plan_dual_quadratic"], [105, 3, 1, "id32", "sag_entropic_transport"], [105, 3, 1, "id35", "sgd_entropic_regularization"], [105, 3, 1, "id37", "solve_dual_entropic"], [105, 3, 1, "id39", "solve_semi_dual_entropic"]], "ot.unbalanced": [[106, 3, 1, "", "barycenter_unbalanced"], [106, 3, 1, "", "barycenter_unbalanced_sinkhorn"], [106, 3, 1, "", "barycenter_unbalanced_stabilized"], [106, 3, 1, "", "lbfgsb_unbalanced"], [106, 3, 1, "", "lbfgsb_unbalanced2"], [106, 3, 1, "", "mm_unbalanced"], [106, 3, 1, "", "mm_unbalanced2"], [106, 3, 1, "", "sinkhorn_knopp_unbalanced"], [106, 3, 1, "", "sinkhorn_stabilized_unbalanced"], [106, 3, 1, "", "sinkhorn_unbalanced"], [106, 3, 1, "", "sinkhorn_unbalanced2"], [106, 3, 1, "", "sinkhorn_unbalanced_translation_invariant"]], "ot.utils": [[107, 1, 1, "id13", "BaseEstimator"], [107, 1, 1, "id16", "LazyTensor"], [107, 1, 1, "id17", "OTResult"], [107, 6, 1, "", "UndefinedParameter"], [107, 3, 1, "id47", "check_number_threads"], [107, 3, 1, "id48", "check_params"], [107, 3, 1, "id49", "check_random_state"], [107, 3, 1, "id50", "clean_zeros"], [107, 3, 1, "id51", "cost_normalization"], [107, 1, 1, "id52", "deprecated"], [107, 3, 1, "id53", "dist"], [107, 3, 1, "id54", "dist0"], [107, 3, 1, "id55", "dots"], [107, 3, 1, "id56", "euclidean_distances"], [107, 3, 1, "id57", "exp_bures"], [107, 3, 1, "id58", "fun_to_numpy"], [107, 3, 1, "id59", "get_coordinate_circle"], [107, 3, 1, "id60", "get_lowrank_lazytensor"], [107, 3, 1, "id61", "get_parameter_pair"], [107, 3, 1, "id62", "is_all_finite"], [107, 3, 1, "id63", "kernel"], [107, 3, 1, "id64", "label_normalization"], [107, 3, 1, "id65", "labels_to_masks"], [107, 3, 1, "id66", "laplacian"], [107, 3, 1, "id67", "list_to_array"], [107, 3, 1, "id68", "parmap"], [107, 3, 1, "id69", "proj_SDP"], [107, 3, 1, "id70", "proj_simplex"], [107, 3, 1, "id71", "projection_sparse_simplex"], [107, 3, 1, "id73", "reduce_lazytensor"], [107, 3, 1, "id74", "tic"], [107, 3, 1, "id75", "toc"], [107, 3, 1, "id76", "toq"], [107, 3, 1, "id77", "unif"]], "ot.utils.BaseEstimator": [[107, 2, 1, "id14", "get_params"], [107, 2, 1, "id15", "set_params"]], "ot.utils.OTResult": [[107, 5, 1, "id30", "a_to_b"], [107, 5, 1, "id31", "b_to_a"], [107, 5, 1, "id32", "citation"], [107, 5, 1, "id33", "lazy_plan"], [107, 5, 1, "id34", "log"], [107, 5, 1, "id35", "marginal_a"], [107, 5, 1, "id36", "marginal_b"], [107, 5, 1, "id37", "marginals"], [107, 5, 1, "id38", "plan"], [107, 5, 1, "id39", "potential_a"], [107, 5, 1, "id40", "potential_b"], [107, 5, 1, "id41", "potentials"], [107, 5, 1, "id42", "sparse_plan"], [107, 5, 1, "id43", "status"], [107, 5, 1, "id44", "value"], [107, 5, 1, "id45", "value_linear"], [107, 5, 1, "id46", "value_quad"]], "ot.weak": [[108, 3, 1, "id0", "weak_optimal_transport"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "terms": {"": [0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 20, 21, 22, 23, 24, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 51, 54, 55, 56, 57, 60, 61, 62, 65, 66, 67, 69, 73, 74, 75, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 92, 94, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112], "00": [10, 19, 20, 23, 26, 27, 29, 32, 33, 35, 42, 59, 67, 70, 73, 81, 102, 111], "000": 34, "0000": 34, "00000000e": 102, "000000e": [20, 26, 27, 32, 33, 35, 67], "0001": [0, 41, 86, 95, 99, 102], "00019": 9, "0005": [34, 69], "00050": 85, "000610e": 33, "0008": 60, "00080": 85, "0008940778156521405": 51, "0009": 51, "00090": 85, "0009762810004758649": 12, "001": [0, 34, 37, 55, 64, 69, 86, 88, 90, 95, 98, 104], "0010": 51, "0011": 51, "00130": 85, "001365e": 33, "0013724960658236956": 35, "0014": 51, "0015": 51, "0016": 51, "00160": 85, "0016629370002192445": 32, "0017": 51, "00170": 85, "0018": 51, "001810e": 33, "0018442196020623663": 2, "002": 34, "0020": 51, "00200": 85, "00210": 85, "0022": 51, "00220": 85, "0024": 51, "002463e": 67, "00270": 85, "0028": 51, "00290": 85, "003": 34, "00300": 85, "0032": 51, "00340": 85, "0034857059999922058": 12, "0035": 51, "00350": 85, "004": [13, 34], "0043": 51, "00430": 85, "0045": 51, "00450": 85, "004718102999504481": 12, "004962e": 33, "005": [6, 34, 55, 69, 76, 80], "00510": 85, "0053": [34, 51], "0056": 34, "00560": 85, "0057": 34, "00570": 85, "00580": 85, "00590": 85, "006": [3, 10, 34, 111], "006434e": 67, "0069": 51, "00690": 85, "007": 34, "007010e": 33, "007084e": 67, "00740": 85, "0075": 51, "00750": 85, "0077": 51, "00770": 85, "008": 34, "0086": 34, "009": 34, "009049e": 67, "0091": 51, "00930": 85, "00940": 85, "00950": 85, "009637e": 67, "00970": 85, "01": [2, 10, 11, 19, 20, 24, 29, 31, 32, 33, 35, 38, 40, 42, 49, 58, 59, 61, 65, 67, 69, 70, 75, 78, 81, 86, 93, 100, 102, 111], "010": [34, 38, 42, 111], "010127e": 67, "0103": 51, "010389716046318456": 56, "010577e": 67, "011": 34, "01100": 85, "01140": 85, "01150": 85, "01160": 85, "011779e": 67, "01180": 85, "012": 34, "01200": 85, "012384e": 67, "01250": 85, "012621e": 33, "012700e": 67, "01278968196741": 6, "013": 34, "0132": 51, "013847e": 67, "014": 34, "01450": 85, "01460": 85, "015": 34, "015066e": 67, "01510": 85, "0152": 34, "01540": 85, "016": 34, "0161": 51, "016301e": 33, "0165": 85, "0166": 85, "0167": 85, "0168": 85, "0169": 85, "017": 34, "0173": 85, "01734": [0, 103], "01770": 85, "01770568e": 49, "018": 34, "018080e": 67, "018197e": 33, "0182": 51, "0183218329658610e": 49, "018997e": 35, "019": 34, "01910": 85, "01930": 85, "019320e": 67, "019666e": 20, "01970121": 58, "0198": 85, "02": [20, 26, 27, 29, 33, 35, 42, 49, 58, 59, 61, 67, 69, 70, 73, 78, 81, 95, 100, 111], "020": 34, "0200": 51, "0204": 85, "020473e": 67, "0209": 51, "020937e": 67, "020986042861303855": 57, "021": [22, 29, 34, 111], "02111111": [0, 97], "021806e": 67, "022": 34, "022440e": 67, "022552e": 35, "022607704624533653": 9, "023": 34, "023292e": 67, "023674e": 35, "023737e": 33, "023891e": 67, "024": 34, "024487e": 67, "024660e": 33, "025066673141778524": 40, "025834e": 67, "0264": 51, "02712798e": 58, "0271888262078476e": 49, "027228e": 35, "02780": 85, "0279": 34, "027911e": 67, "028438e": 67, "028566e": 33, "028656e": 67, "029127e": 67, "0292": 51, "0292344208896491e": 49, "029242e": 33, "0293": 85, "029326e": 20, "029337508603930473": 9, "029873e": 33, "029916e": 67, "03": [1, 10, 20, 26, 32, 33, 35, 42, 46, 49, 53, 57, 58, 61, 67, 70, 72, 95, 100, 111], "0301476218564236e": 49, "030196e": 67, "0303977567984017e": 49, "031197285279631615": 9, "03140": 85, "031587667901338": 2, "03168988972902298": 9, "03183251e": 49, "03191560e": 49, "032379165291786194": 9, "032574166354708264": 31, "032642e": 67, "03272819146513939": 9, "0328": 85, "033105e": 33, "0338": 51, "034152e": 67, "034711e": 33, "0348": 51, "034939464181661606": 9, "034974e": 33, "03516071289777756": 9, "035645e": 67, "03596879169344902": 9, "0364189450997889e": 49, "03651803e": 49, "03730057179927826": 9, "03761294147832006": 35, "03823623173438275": 35, "03825797e": 58, "03825804e": 58, "03838786e": 58, "03959248960018158": 9, "039776e": 67, "03d": [3, 34], "04": [10, 19, 20, 26, 27, 32, 33, 35, 42, 46, 47, 49, 58, 61, 67, 70, 81, 111], "040056e": 35, "040145e": 33, "040627e": 78, "04171676188707352": 9, "042086e": 33, "042609e": 67, "04283861e": 58, "04347885772585869": 9, "04360": 85, "044052e": 67, "0445628466113015e": 49, "045": 10, "0450": 51, "0450183690192505": 35, "045221e": 67, "045361e": 67, "045543e": 33, "04564394801855087": 9, "0464": 34, "046431138906241": 23, "046784647314674": 37, "0470236926315406e": 49, "047880e": 67, "048017e": 67, "049564e": 67, "05": [3, 6, 20, 26, 27, 33, 35, 38, 42, 46, 49, 55, 58, 59, 61, 67, 69, 73, 76, 80, 85, 86, 88, 95, 97, 98, 102, 111], "05013977363705635": 9, "050210e": 67, "050905e": 33, "052335e": 67, "052346e": 67, "052475e": 67, "052519e": 67, "05271170e": 58, "05271739e": 58, "053": [53, 59, 111], "0539": 51, "0543140912490133e": 49, "05555556": 102, "056231e": 33, "056248e": 67, "05648858e": 58, "056738e": 20, "05680": 85, "057021e": 67, "0572": 51, "0575": 51, "0577080390746961e": 49, "05796702206134796": 9, "05816": [0, 75, 86, 88, 106, 109, 112], "0583": 51, "05848772529333": 2, "058588504791259766": 9, "058755e": 67, "059240e": 67, "059322e": 27, "059879e": 33, "06": [0, 10, 26, 33, 42, 46, 58, 59, 61, 67, 86, 87, 88, 90, 92, 97, 98, 100, 106, 111], "060000000480860946": 31, "060184e": 33, "061523e": 33, "0621337155460657e": 49, "062747e": 67, "06276": 104, "063176e": 67, "063453e": 35, "064022e": 67, "064438e": 67, "06519": [0, 86, 106, 109, 112], "065503e": 67, "065525e": 67, "06567": [0, 67, 88, 99, 109, 112], "0662": 51, "0664": 34, "066779e": 33, "067772e": 67, "0678766065260413e": 49, "069425e": 67, "069551e": 23, "06994211": 41, "07": [0, 10, 27, 35, 42, 46, 49, 58, 61, 67, 86, 87, 91, 92, 95, 96, 97, 100, 111], "07000000000000006": 40, "070647347170436": 6, "07070": 85, "071067e": 27, "07118222": 41, "0712159269996846": 12, "071597e": 67, "07174656e": 58, "072": [51, 59, 111], "072003e": 33, "072764e": 67, "07394894e": 58, "07406199": 58, "0747229322240486e": 49, "07507868": 56, "075230e": 33, "07550425e": 58, "07550428e": 58, "076024e": 67, "076149e": 67, "076331e": 35, "076454e": 67, "07650": 64, "077": 73, "077194e": 33, "077789e": 67, "078011e": 67, "0792": 51, "079401e": 67, "079606e": 67, "079948e": 67, "08": [29, 58, 61, 67, 73, 85, 88, 95, 101, 111], "08001347": 56, "080617e": 33, "08063": [90, 109, 112], "0815": 51, "081681e": 67, "081861e": 20, "081892e": 67, "082355e": 33, "08262628e": 58, "08262629e": 58, "08276": 112, "0853": 51, "0859243846661483e": 49, "0860": 34, "086064e": 67, "0862213476138876e": 49, "086303e": 67, "0869": 51, "086938e": 67, "087": [67, 70, 111], "087246e": 67, "087492e": 33, "088418e": 67, "088545e": 35, "09": [0, 35, 58, 61, 67, 86, 88, 95, 99, 104], "0901": 51, "09047347e": 58, "090911e": 67, "0914": 51, "09144850e": 58, "092609e": 33, "092896e": 67, "09381731": 41, "09467021": 41, "09469872": 56, "094853e": 33, "09492045299975871": 12, "095678e": 33, "095821e": 67, "09595519": 41, "09630346e": 58, "09685": 44, "09685398028260428": 44, "09709279": 41, "0971262": 41, "09755": [18, 97, 109], "097715e": 33, "098033e": 35, "09810498": 41, "09857013": 41, "0987568083692249": 44, "099326e": 33, "09963309": 41, "09979829": 56, "09980706": 7, "09999904": 56, "0x7f6f07513970": 36, "0x7f6f0cc170d0": 3, "0x7f6f1841e080": 51, "0x7f6f184b6020": 4, "0x7f6f184b7a60": 51, "0x7f6f185ae9b0": 51, "0x7f6f243a9c30": 9, "0x7f6f260d9840": 5, "0x7f6f2711aa70": 51, "0x7f6f271515d0": 47, "0x7f6f35088fa0": 65, "0x7f6f35354eb0": 46, "0x7f6f3546b0d0": 47, "0x7f6f3558cdc0": 62, "0x7f6f355aab30": 7, "0x7f6f355bf460": 9, "0x7f6f35600340": 69, "0x7f6f367990c0": 66, "0x7f6f36836020": 61, "0x7f6f36903eb0": 7, "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 90, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112], "10": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 16, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 47, 48, 49, 54, 55, 56, 57, 61, 62, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 86, 88, 90, 95, 96, 97, 98, 99, 104, 106, 109, 111, 112], "100": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 24, 26, 30, 33, 35, 36, 37, 38, 39, 41, 45, 47, 49, 51, 52, 53, 55, 57, 60, 61, 62, 65, 66, 67, 74, 75, 76, 78, 79, 85, 86, 87, 88, 90, 91, 95, 97, 98, 100, 103, 107, 110], "1000": [0, 6, 9, 15, 23, 25, 33, 49, 51, 54, 56, 58, 66, 85, 86, 88, 90, 92, 95, 100, 106], "10000": [0, 85, 86, 95, 105], "100000": [0, 58, 88, 97, 99, 106], "10000000000": 86, "10001527": 56, "10001687": 56, "1001999": 56, "100843e": 67, "101": 67, "101506e": 33, "101798e": 67, "101983e": 67, "102": 67, "1021": 51, "1023": 51, "102825e": 33, "103": 67, "103701e": 67, "104": 67, "10469915": 41, "105": 67, "105028e": 67, "106": [37, 67, 110], "106010e": 67, "1064": 34, "10648": [0, 103, 109, 112], "10656": [0, 103, 109, 112], "106686e": 33, "106799e": 67, "107": [67, 110], "107797e": 67, "107960e": 33, "108": [9, 67, 110], "10838179": 60, "108397e": 67, "109": 67, "10902398": 58, "10903416567681642": 44, "10964284837245941": 9, "10e": 88, "11": [0, 6, 11, 20, 27, 33, 35, 37, 41, 49, 67, 75, 78, 79, 90, 92, 95, 108, 109, 112], "110": [2, 6, 9, 33, 61, 67], "1100": 51, "110670e": 67, "110756e": 33, "111": [41, 67], "111116e": 67, "112": 67, "113": [67, 110], "113149e": 33, "11320882e": 49, "114": [51, 67, 110], "11402024e": 58, "11466591": 56, "114761e": 67, "114904e": 67, "115": 67, "115348e": 67, "116": [67, 110], "1164197325706482": 9, "116981378881717": 37, "117": 67, "1173": 24, "1176": [33, 35], "117618e": 67, "1177409528991366e": 49, "1178": [88, 92, 109], "117891e": 67, "118": [67, 110], "118440e": 33, "11847689": 106, "1184769": [0, 106], "118543e": 67, "118744e": 67, "119": [14, 67, 86, 109, 112], "1198": [88, 92, 109], "12": [0, 6, 14, 15, 20, 27, 33, 35, 37, 41, 42, 49, 56, 67, 78, 86, 88, 95, 97, 100, 109, 110, 112], "120": [2, 6, 9, 33, 55, 61, 67, 72], "1200": 51, "12004": [88, 109], "1206": 107, "121": [31, 34, 35, 40, 51, 54, 60, 67, 78, 110], "122": [31, 34, 35, 40, 54, 60, 67, 78, 110], "1222": [48, 88, 98, 109], "123": 67, "123055e": 67, "1232": [48, 88, 98, 109], "123508e": 67, "123553e": 35, "123902e": 33, "124": [67, 110], "125": [9, 53, 67], "125684e": 33, "126": [48, 59, 67, 110, 111], "12608330e": 58, "12608610815788": 6, "126583681704034": 6, "127": [7, 67, 110], "127228618478725": 6, "127278e": 67, "127355e": 67, "12749105e": 58, "1276": [92, 109], "127725e": 20, "128": [67, 88, 97, 109], "128205680449874": 6, "129": 67, "12920968279601": 6, "129328026719429": 37, "129455496299416": 23, "129637e": 33, "129779e": 33, "13": [0, 14, 20, 27, 32, 33, 46, 49, 60, 65, 67, 86, 93, 95, 100, 109, 110, 112], "130": [2, 6, 9, 33, 61, 67, 78, 110], "1300": 51, "130143e": 61, "1304": [92, 109], "1308": 34, "131": [35, 67, 78], "132": [35, 51, 57, 67, 78, 110], "133": [35, 67, 78], "133700e": 67, "133875e": 67, "134": [67, 110], "1343": 51, "134468e": 32, "13447071": [0, 86], "134797e": 33, "134810e": 67, "135": 67, "13551386": 56, "1357": 51, "135798e": 33, "135983e": 33, "136": [18, 67], "137": [67, 110], "138": [67, 110], "138329e": 67, "138746e": 67, "139": [67, 110], "13950": 85, "139916e": 33, "14": [20, 25, 27, 37, 38, 41, 48, 49, 52, 60, 67, 69, 77, 85, 88, 95, 98, 109, 110, 111, 112], "140": [2, 6, 9, 33, 61, 67, 110], "1400": 51, "140465e": 35, "140754e": 67, "140922e": 33, "141": [33, 67, 97, 109, 110], "141766e": 26, "141907e": 33, "142": [33, 67, 110], "14255960e": 58, "142583e": 33, "142611e": 33, "142905e": 67, "143": [33, 51, 67, 110], "143080e": 67, "144": [33, 51, 64, 67, 70, 110, 111], "144001e": 67, "144099e": 67, "144168e": 33, "144529e": 61, "145": [67, 110], "145409e": 67, "145770e": 26, "145989e": 26, "146": [67, 110], "146269e": 26, "146607e": 26, "14670": 85, "14673091868494": 6, "147": [51, 67], "147001e": 26, "147342e": 67, "147508e": 26, "148": [67, 110], "148198e": 26, "149": 67, "149197e": 26, "149450e": 33, "14981263716330115": 35, "15": [0, 6, 9, 14, 15, 20, 24, 27, 30, 32, 33, 38, 45, 47, 49, 54, 55, 56, 59, 67, 68, 69, 88, 92, 97, 106, 109, 110, 112], "150": [2, 5, 6, 9, 18, 20, 22, 24, 28, 33, 51, 53, 61, 66, 67, 110], "1500": 51, "150412e": 33, "15043415e": 58, "150590e": 26, "150926e": 33, "151": 67, "1510": [0, 67, 88, 99, 109, 112], "151311e": 33, "152": 67, "152819e": 33, "1529": 107, "153": 67, "1533": 51, "153553e": 27, "153604e": 26, "153816351532946": 6, "154": 67, "154166e": 67, "15462212e": 58, "15466": 104, "155": [67, 110], "155041e": 67, "15531236e": 58, "155365e": 33, "156": [67, 110], "1562": 51, "157": [51, 67, 110], "157560505651844": 6, "15797713e": 49, "158": [0, 67, 97, 109, 112], "158952e": 33, "159": 67, "159374e": 33, "159648e": 33, "159695e": 33, "159715e": 33, "159728e": 33, "159732e": 33, "159733e": 33, "16": [4, 8, 16, 20, 27, 32, 37, 38, 44, 49, 56, 67, 77, 85, 87, 90, 92, 97, 102, 109, 112], "160": [2, 6, 9, 33, 61, 67, 110], "1600": 51, "16000000078748583": 31, "160242e": 67, "1607": [0, 75, 86, 88, 106, 109, 112], "160707e": 67, "1608": [90, 109, 112], "1609": 56, "160914e": 67, "161": [51, 67], "1610": [0, 86, 106, 109, 112], "162": [51, 67], "162297e": 67, "1627": 34, "163": [67, 78], "163497e": 67, "164": [51, 67], "164296e": 67, "165": [51, 67], "165490e": 67, "166": 67, "16646732e": 58, "1666": 75, "166739e": 67, "167": 67, "167083e": 67, "1671": 75, "16760501e": 49, "168": [51, 67], "1682": 75, "169": [51, 67, 110], "16904253e": 58, "16904255e": 58, "16940196": 41, "169442e": 33, "169453e": 26, "169490e": 26, "169558e": 26, "169664e": 26, "169845e": 26, "17": [0, 20, 27, 49, 67, 86, 97, 104, 109, 112], "170": [2, 6, 9, 33, 61, 67, 110], "1700": 51, "170411e": 26, "1706": 64, "171": [6, 67], "1710": 104, "17111111111111116": 40, "171195e": 33, "171723e": 67, "1719": 49, "172": [67, 110], "172093e": 67, "172942e": 67, "173": 67, "174": [67, 110], "174595e": 67, "17467500e": 49, "175": [9, 67, 110], "1755": 51, "175881e": 33, "176": [67, 110], "176966e": 33, "177": 67, "177453e": 33, "177744e": 33, "178": [67, 110], "1781": 112, "178815e": 61, "179": 67, "179100e": 20, "1794": 51, "18": [6, 20, 27, 30, 38, 49, 58, 59, 67, 100, 105, 109, 112], "180": [2, 6, 9, 33, 51, 61, 67], "1800": 51, "181": [67, 110], "181249e": 67, "182": [56, 67], "182154e": 67, "182822e": 27, "182948e": 32, "183": 67, "18391107e": 58, "184": [51, 67, 110], "184075e": 27, "184451e": 35, "185": [51, 67], "1853": [21, 27, 67, 88, 99, 109, 112], "18551015414186553": 35, "185991e": 33, "186": [51, 67], "186767e": 67, "187": 67, "187777e": 20, "188": 67, "1882": [21, 27, 67, 88, 99, 109, 112], "188762e": 67, "189": [67, 110], "189063e": 67, "189212e": 33, "189279e": 32, "189327e": 32, "189863e": 67, "19": [2, 13, 19, 20, 27, 49, 51, 58, 67, 68, 70, 88, 105, 109, 110, 111, 112], "190": [2, 6, 9, 33, 37, 42, 61, 67, 111], "1900": 51, "190105e": 26, "190456e": 20, "190590e": 67, "191": [67, 110], "191147e": 35, "191339e": 33, "192": 67, "1922": 51, "1924746118060852e": 49, "192695e": 33, "19289693e": 49, "193": [51, 54, 59, 67, 111], "193632e": 61, "193888e": 33, "1939": 51, "194": 67, "1942": 97, "19467692e": 49, "19499225e": 49, "195": [51, 67, 110], "195771e": 67, "195813e": 20, "196": [6, 67], "19600125": [0, 106], "1964": 51, "196582e": 67, "197": [67, 70], "19722222": 102, "1973": 51, "197885e": 27, "1979": 97, "197994e": 67, "198": [67, 110], "19802712e": 58, "1984": [88, 92, 109, 112], "1985": 23, "199": [9, 67, 95, 100, 110], "1991": 97, "199151e": 67, "19965944": 3, "1_": [0, 106], "1_m": 102, "1_n": 102, "1d": [0, 10, 19, 32, 43, 51, 59, 70, 81, 84, 89, 93, 95, 97, 99, 100, 101, 107, 109, 110, 111, 112], "1e": [0, 3, 8, 9, 11, 12, 14, 16, 20, 21, 22, 23, 26, 27, 28, 32, 33, 36, 41, 47, 51, 53, 54, 55, 56, 60, 61, 62, 63, 65, 67, 68, 69, 75, 79, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 110], "1e0": [20, 22, 26, 27, 49], "1e2": 95, "1e3": 4, "1f": 23, "2": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 25, 26, 27, 30, 32, 34, 35, 36, 38, 39, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 80, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112], "20": [0, 2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 20, 26, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 42, 44, 45, 46, 47, 49, 51, 56, 57, 60, 61, 62, 64, 65, 66, 67, 71, 72, 74, 75, 78, 79, 83, 86, 95, 97, 103, 109, 110, 111, 112], "200": [0, 2, 5, 6, 9, 15, 16, 33, 49, 51, 54, 61, 66, 67, 71, 72, 88, 95, 99, 100, 110], "2000": [0, 4, 5, 8, 9, 18, 51, 55, 79, 95, 96], "20000": 85, "2002": 112, "201": 110, "2010": [0, 97, 100, 109], "2011": [0, 92, 95, 97, 109, 112], "20112337": 3, "2013": [0, 86, 88, 104, 106, 107, 109, 112], "2014": [21, 27, 67, 86, 88, 97, 99, 109, 112], "201470e": 67, "2015": [0, 4, 11, 12, 67, 71, 86, 88, 99, 100, 103, 106, 109, 112], "2016": [0, 12, 26, 27, 33, 35, 49, 58, 75, 86, 88, 90, 95, 97, 98, 100, 105, 106, 109, 110, 112], "2017": [0, 9, 48, 86, 88, 92, 97, 98, 108, 109, 110, 112], "2018": [0, 9, 58, 86, 88, 92, 97, 100, 104, 105, 109, 110, 112], "2019": [0, 4, 30, 32, 33, 35, 38, 57, 86, 88, 91, 92, 95, 97, 103, 109, 110, 112], "202": 110, "2020": [0, 9, 14, 38, 44, 46, 48, 56, 78, 86, 87, 88, 92, 93, 94, 95, 98, 99, 100, 109, 110, 112], "20200322e": 58, "20204949002247385": 2, "2021": [0, 3, 18, 31, 35, 37, 39, 40, 55, 79, 85, 86, 88, 90, 92, 95, 96, 97, 99, 102, 106, 109, 110, 112], "2022": [0, 34, 41, 54, 76, 88, 92, 95, 97, 106, 109], "2023": [0, 33, 45, 56, 72, 90, 95, 97, 103, 104, 109, 110], "2024": [109, 110], "202445e": 67, "2025": [100, 109], "20269164e": 58, "202882711135615": 6, "203": 110, "203033e": 67, "203845e": 33, "2041": 34, "204723e": 67, "205038e": 35, "205670e": 33, "206000e": 27, "206184e": 67, "20626649e": 49, "206415e": 67, "206694e": 67, "207": 110, "207356e": 26, "207534e": 67, "208": 110, "208291e": 67, "20862014591693878": 5, "208638e": 33, "209223e": 35, "209694e": 67, "21": [0, 49, 67, 86, 109, 112], "210": [6, 33, 110], "2100": 51, "210344e": 67, "2105": [18, 97, 109], "2109": [88, 109], "211": 51, "211305e": 33, "211369e": 67, "211501e": 20, "2116": 51, "212": 51, "213120e": 67, "2132": 51, "213739e": 67, "214": 9, "21423583e": 58, "215": 110, "215131e": 67, "21640234e": 58, "216608e": 20, "2169879996364512e": 49, "217": 110, "217013e": 33, "21736592892258025": 33, "217366e": 67, "217780e": 67, "218": 51, "218588e": 20, "218969e": 67, "219": [57, 59, 111], "22": [0, 4, 6, 49, 55, 59, 67, 71, 86, 103, 109, 110, 111, 112], "220": [6, 33, 110], "2200": 51, "2209": 104, "221": 6, "221188e": 67, "22132": [92, 109], "22145": [92, 109], "221805e": 67, "221950448334646": 6, "222711e": 67, "223": 9, "22305749e": 58, "2234351238819923e": 49, "223502e": 26, "2239": [0, 97, 109], "224327e": 67, "224681e": 67, "2258": [0, 97, 109], "226": 51, "226158e": 32, "226484e": 67, "226810e": 67, "227": 97, "227167e": 33, "2281": 51, "229": 97, "2292": [109, 112], "22940946e": 49, "229430e": 33, "229432e": 67, "22nd": [0, 86, 91, 109, 112], "23": [5, 6, 7, 9, 49, 65, 67, 86, 97, 109, 110, 112], "230": [6, 33], "2300": [51, 109, 112], "231": [51, 110], "231320e": 67, "2317": 51, "23177216e": 58, "23177217e": 58, "232": 110, "232558e": 33, "233": 51, "233110e": 61, "23326381": 41, "233754e": 67, "2338": 51, "233818e": 67, "234": 110, "234502e": 33, "234582e": 27, "23469888e": 58, "2348794356788732": 78, "235": 51, "23518788e": 49, "235363e": 67, "235791e": 61, "236": 110, "23617788e": 49, "236970e": 33, "237390e": 67, "237579e": 67, "237597e": 67, "238": 110, "239175e": 32, "2394511459997375": 12, "239567e": 67, "23nd": 9, "24": [0, 5, 10, 32, 33, 35, 49, 67, 87, 95, 109, 110, 111, 112], "240": [6, 33, 110], "2400": 51, "241": [55, 59, 110, 111], "24179586715084828": 31, "242": 110, "242264e": 33, "242762e": 33, "243555e": 33, "244": [79, 81, 111], "24412455339648": 2, "2442": 51, "244899e": 33, "2454": [0, 91, 109, 112], "246": 51, "2465": [0, 91, 109, 112], "2467": 51, "24680": 85, "24722222": 102, "24722222222222215": [31, 40], "247758e": 20, "2485": 34, "249": 110, "249094e": 67, "249817e": 67, "25": [0, 6, 9, 12, 27, 29, 30, 32, 34, 49, 55, 66, 67, 68, 69, 72, 95, 100, 102, 106, 109, 110, 111, 112], "250": [6, 33], "2500": 51, "252": 51, "252492e": 67, "253": [31, 42, 51, 68, 110, 111], "253345e": 67, "253384e": 67, "25357448e": 58, "25387848e": 49, "254": [8, 10, 110, 111], "254840e": 33, "25518158e": 58, "2552516366391106": 40, "256": [21, 25, 27], "256196e": 67, "2570": 51, "257329928299894": 6, "257392e": 33, "257432e": 26, "2576635020911173": 33, "258": [51, 110], "258231e": 67, "258253e": 67, "25852474": 58, "25865775e": 58, "259": [24, 29, 110, 111], "259349e": 67, "25938748e": 58, "26": [0, 49, 55, 57, 67, 86, 88, 104, 106, 109, 110, 112], "260": [6, 33, 110], "2600": 51, "260396e": 67, "261541e": 67, "26193": 56, "261945704106836": 6, "262": [51, 110], "2628": 51, "262867e": 67, "263": [51, 97], "2634": 51, "264402e": 67, "26486645931444": 37, "265": [51, 97, 109], "267": 110, "2681": [0, 86, 109, 112], "268827591939186": 6, "26894142136999516": [0, 86], "2690": [0, 86, 109, 112], "26915633e": 58, "26989344e": 86, "27": [6, 21, 29, 37, 49, 67, 86, 88, 109, 110, 111], "270": [6, 33], "2700": 51, "270041e": 33, "27069736487666": 6, "270902e": 67, "271184e": 33, "272349e": 67, "273": [0, 97, 108, 109, 112], "273358e": 78, "273670e": 33, "274": 110, "275": 110, "27590340578239": 6, "276": 51, "276036e": 35, "276486e": 67, "277552e": 26, "277767e": 67, "278": 110, "279017e": 33, "279398e": 67, "28": [49, 67, 100, 102, 109, 110, 112], "280": [6, 33, 51, 110], "2800": 51, "280509e": 67, "281": 110, "281229e": 20, "282": 110, "282043e": 67, "282614e": 67, "283163e": 26, "28321242161009": 6, "283286e": 67, "283767e": 33, "284": [51, 110], "28581971": 41, "286": 110, "286832e": 67, "287": [17, 19, 51, 61, 70, 110, 111], "28734709e": 58, "288": 110, "288193e": 67, "288260e": 67, "288742e": 67, "28883715e": 49, "289": 51, "29": [0, 6, 38, 49, 67, 78, 88, 92, 95, 99, 100, 109, 110, 112], "290": [6, 33, 110], "2900": 51, "290460e": 67, "291": 110, "291730e": 67, "292": 68, "292424e": 20, "292497e": 67, "292634e": 67, "293": 110, "293340e": 61, "294": 110, "294505e": 61, "294698e": 20, "295447e": 67, "296": 110, "296544e": 27, "2968": 51, "297098e": 33, "29750588": 3, "298": 110, "2980": 34, "2981": 51, "298130e": 67, "298576e": 67, "299": [51, 58, 59, 111], "2_": 98, "2_f": 98, "2b": 95, "2d": [3, 18, 19, 20, 22, 23, 24, 28, 37, 38, 39, 41, 43, 50, 52, 54, 60, 64, 70, 73, 79, 81, 86, 89, 101, 107, 110, 111, 112], "2e": [7, 46, 57, 62, 79], "2e0": 20, "2f": [23, 54, 60, 77], "2g": 60, "2gauss_prop": 23, "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20, 21, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 78, 79, 80, 86, 88, 95, 96, 97, 98, 99, 100, 102, 103, 106, 107, 109, 112], "30": [0, 2, 4, 5, 6, 9, 12, 20, 22, 24, 28, 30, 31, 32, 33, 35, 36, 37, 39, 40, 41, 45, 48, 49, 55, 57, 60, 61, 67, 88, 97, 109, 110, 112], "300": [1, 6, 33, 37, 51], "3000": [36, 51], "300000": 105, "301122e": 78, "301317e": 67, "3018": 110, "302": 110, "30222147e": 58, "30225078e": 58, "30225079e": 58, "30274241": 3, "303": 110, "304": [77, 81, 110, 111], "304213e": 67, "3042776946697494e": 49, "305": 110, "305436e": 20, "30555049e": 49, "305693e": 67, "306": 110, "3060442707611048e": 49, "3060442727858727e": 49, "3060442737731426e": 49, "3060442740443740e": 49, "3060442741136428e": 49, "3060442741310502e": 49, "3060442741354079e": 49, "3060444900856542e": 49, "3060454740611516e": 49, "3060471854906608e": 49, "3060852373964541e": 49, "3061003105938882e": 49, "3061519732125807e": 49, "3061669948481955e": 49, "3061708734620151e": 49, "307154e": 27, "308": 110, "309": [55, 71, 73, 110, 111], "30j": 72, "31": [0, 2, 4, 6, 14, 19, 49, 60, 67, 71, 79, 81, 86, 92, 103, 109, 110, 111, 112], "310": [6, 33, 110], "3100": 51, "31006491e": 49, "310793e": 33, "3109": 51, "311": 110, "31178193e": 58, "31178196e": 58, "312306e": 33, "312936705667057": 37, "313": [28, 29, 110, 111], "3132": 51, "314610e": 33, "315": 110, "31505947e": 58, "315190e": 67, "315219e": 67, "316": [85, 110], "316379e": 67, "317": 110, "318292e": 20, "3184": 51, "31875285406105": 2, "319": 110, "32": [4, 6, 10, 15, 49, 67, 90, 95, 109, 112], "320": [6, 12, 33, 51], "3200": 51, "320635e": 67, "321288e": 67, "322": 110, "32205357": 106, "3220536": [0, 106], "323025e": 33, "323543e": 67, "324": [21, 29, 111], "32427691564021": 6, "324561e": 78, "325603e": 67, "326": 110, "326191e": 67, "326755e": 67, "328651e": 67, "329589e": 67, "329722e": 67, "3299": 51, "32gb": 85, "33": [6, 35, 44, 49, 56, 57, 67, 86, 87, 109, 112], "330": [6, 33], "3300": 51, "330020e": 35, "331": 110, "332": 110, "33264368175991": 2, "3327": [0, 108, 109, 112], "333": 110, "333798e": 67, "334": 110, "334102e": 67, "334121e": 33, "334506e": 35, "335": [52, 59, 111], "335304e": 20, "33574229e": 58, "336": 110, "336538e": 20, "337": 110, "337741e": 33, "338": 110, "3380401875457987e": 49, "33831455e": 58, "33831456e": 58, "338395e": 67, "338514e": 67, "338932e": 61, "34": [0, 6, 49, 67, 86, 92, 95, 106, 109, 112], "340": [6, 33, 46, 59, 110, 111], "3400": 51, "3405": [0, 108, 109, 112], "340916e": 33, "341": 110, "3413": 51, "34167509988665": 2, "34246014e": 58, "34264205e": 58, "3429": 51, "343": [12, 110], "343153e": 67, "3445": 34, "344581e": 26, "345": 110, "3457": [86, 109], "346": 110, "3462": [86, 109], "34639291": 58, "346394e": 67, "34711519": 41, "348118e": 27, "348538e": 67, "349": 110, "34923131e": 49, "349251e": 67, "349865e": 33, "35": [0, 2, 6, 23, 34, 49, 55, 67, 69, 95, 103, 109, 110, 112], "350": [6, 33, 74, 81, 110, 111], "3500": 51, "350146e": 67, "3507": 51, "351": 110, "351982e": 67, "352": 110, "352083e": 67, "353": [20, 29, 111], "353586e": 67, "353809e": 67, "354": [62, 70, 111], "354539e": 67, "355": [51, 92], "356410e": 67, "356453e": 26, "356805e": 26, "357": 110, "358": 110, "358084e": 27, "359": 110, "35962578e": 49, "36": [4, 6, 49, 67, 102, 106, 109, 112], "360": [6, 33, 42, 110, 111], "3600": 51, "360245e": 67, "361": [75, 110], "361187e": 67, "361708e": 67, "36173252e": 58, "361733e": 67, "362": 110, "363": 110, "3635": 51, "364": 110, "364311e": 33, "364492e": 67, "36552929": [0, 86], "365715e": 67, "366209e": 67, "366410e": 67, "366487e": 67, "3671471715862438": 33, "367159e": 67, "367836e": 67, "367864e": 27, "368455e": 33, "369414e": 33, "369491e": 67, "369707e": 67, "36th": [0, 109, 112], "37": [0, 6, 11, 12, 14, 49, 51, 59, 67, 86, 97, 100, 106, 109, 110, 111, 112], "370": [6, 33], "3700": 51, "3703": 51, "3708342026018231e": 49, "371": 110, "372": 110, "372136e": 67, "372351e": 33, "373": 110, "373540e": 67, "374": 110, "375": [53, 110], "376": 110, "376049e": 67, "3761179313933098": 33, "377": 110, "37746045e": 58, "3777": 51, "378": 110, "3789": 51, "37891333e": 58, "37891338e": 58, "379": 110, "37954834561228107": 31, "379844e": 33, "37th": [14, 86, 109, 112], "38": [0, 2, 3, 37, 49, 67, 70, 95, 109, 112], "380": [6, 33, 110], "3800": 51, "381": 110, "3812043286676665": 40, "382": 51, "382386e": 67, "382526768389072": 37, "382735e": 67, "383515e": 67, "384": [44, 51, 59, 60, 70, 111], "385291e": 33, "38545201e": 58, "385888946321474": 37, "386": 110, "386258e": 67, "386414e": 67, "387": 110, "3871": 34, "387158e": 67, "387670e": 67, "388": 110, "389": 110, "389046e": 33, "38926617e": 58, "38th": [109, 112], "39": [0, 49, 51, 67, 91, 108, 109, 112], "390": [6, 33], "3900": 51, "390504e": 67, "391": 110, "39115407e": 49, "392407e": 67, "393": 110, "3930": 51, "394": 110, "394035e": 67, "394153e": 67, "39440105e": 58, "39440107e": 58, "395": 110, "396351e": 20, "396466e": 67, "396935e": 67, "396951e": 67, "396988e": 27, "397436e": 67, "398538e": 33, "39885389e": 49, "399809e": 67, "3d": [2, 5, 6, 9, 11, 12, 18, 39, 54, 72, 75], "3e": 47, "3f": [14, 23, 68, 79], "3gauss": [20, 22, 24, 28], "3gauss2": [20, 22, 24, 28], "4": [0, 2, 3, 4, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 68, 69, 71, 74, 75, 76, 78, 79, 80, 82, 86, 87, 88, 92, 95, 97, 98, 100, 102, 106, 107, 109, 112], "40": [0, 2, 4, 5, 6, 9, 10, 31, 33, 35, 37, 39, 40, 49, 60, 61, 67, 76, 80, 91, 102, 109, 111, 112], "400": [6, 33, 51, 110], "4000": 51, "400714e": 67, "401053e": 67, "401870e": 67, "402": 110, "403": [7, 10, 110, 111], "4032555710632": 6, "403398e": 67, "404": 110, "4044": 51, "405506e": 67, "406304e": 67, "406954e": 33, "408": 110, "408251e": 26, "408669e": 67, "409": 110, "41": [0, 2, 8, 49, 60, 67, 102, 106, 109, 110], "410": [6, 33, 110], "410259e": 67, "4104": [4, 109, 112], "4113": [4, 109, 112], "412": 110, "41297662e": 58, "413": 110, "413388e": 67, "413843e": 67, "413884e": 33, "415348e": 33, "416497e": 67, "416792e": 67, "417": [0, 95, 109, 110, 112], "417109e": 33, "418": [15, 19, 111], "419505e": 67, "42": [0, 3, 4, 6, 18, 21, 25, 27, 37, 41, 45, 52, 54, 67, 97, 103, 109, 110], "420": [6, 33, 81], "420712e": 67, "421": 110, "422": 110, "4220": 51, "422836731254962": 37, "423360e": 67, "4234": 51, "4237": 51, "424": 110, "425": 110, "4255": 34, "426078e": 61, "4271": 51, "427166e": 33, "428": 110, "4285": 51, "428734e": 67, "43": [42, 53, 67, 81, 86, 88, 92, 97, 109, 110, 112], "430": [6, 33], "43170724e": 58, "431951e": 67, "432": [12, 19, 111], "433353e": 33, "434": 51, "4350": 51, "435945e": 67, "43596310348252": 6, "436877e": 33, "437": 110, "438": [50, 59, 111], "43815515e": 58, "438312e": 33, "439": [9, 10, 111], "439446e": 67, "439790e": 67, "44": [0, 67, 95, 97, 100, 109, 110], "440": [6, 33], "4401037686381051e": 49, "440242e": 33, "440781e": 67, "440996850749865": 6, "441": [60, 86, 97, 109], "442": 51, "4421": 8, "44254776e": 49, "44418382e": 58, "447826e": 67, "448996e": 67, "449812e": 61, "45": [0, 4, 18, 34, 39, 42, 54, 67, 71, 97, 103, 106, 109, 110, 111, 112], "450": [6, 33], "450071e": 61, "450250e": 67, "450691e": 67, "451": 109, "452161e": 67, "452203e": 67, "45275877977004": 2, "452791e": 67, "453": [25, 29, 111], "453459e": 67, "455": 75, "4560947951444": 78, "4563": 51, "456740e": 32, "456995e": 67, "457": 38, "457501e": 67, "457933e": 33, "458518e": 20, "45865441165184": 6, "458840e": 67, "4590": 34, "45973891e": 49, "46": [0, 67, 72, 97, 103, 109, 110], "460": [6, 33], "460343e": 67, "461179e": 78, "463000e": 67, "464": 51, "464513e": 67, "465400e": 67, "465712e": 33, "4660": 51, "466407e": 67, "467075e": 67, "467159e": 67, "467885e": 33, "468402e": 67, "4692": [14, 86, 109, 112], "46949401889149": 6, "46k": 110, "47": [0, 44, 67, 87, 95, 109, 110], "470": [6, 33], "4701": [14, 86, 109, 112], "470297e": 67, "472502e": 33, "473216e": 33, "47463643": 58, "47528039e": 49, "477796578999914": 51, "478250e": 20, "479": 51, "47910182636916243": 78, "48": [0, 31, 40, 41, 60, 67, 95, 99, 109, 110], "480": [6, 33], "480216e": 33, "480784e": 67, "481358e": 67, "481860e": 67, "4825639210003": 51, "482693753355026": 2, "483013e": 67, "487": [0, 95, 109, 112], "4893295": 58, "489527e": 67, "489908e": 33, "49": [0, 6, 10, 44, 54, 56, 67, 87, 95, 96, 109, 110, 111], "490": [6, 33], "490171121877912": 37, "490397e": 67, "491257e": 67, "491601e": 67, "49162020216744": 37, "49209980e": 58, "49295484e": 58, "493878e": 33, "4939": 34, "495884e": 67, "496771e": 67, "496936e": 67, "4975": 51, "49759815": 3, "498203806732256": 2, "4995": [0, 76, 106, 109], "499887176049052": 86, "4f": 34, "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 86, 88, 89, 92, 94, 95, 96, 97, 99, 100, 102, 103, 106, 107, 109, 112], "50": [0, 2, 4, 5, 6, 7, 9, 12, 16, 18, 23, 33, 34, 35, 37, 38, 41, 45, 48, 50, 51, 54, 55, 61, 63, 67, 68, 69, 76, 79, 86, 97, 100, 103, 104, 109, 110], "500": [0, 4, 5, 6, 7, 9, 21, 27, 33, 46, 51, 66, 85, 87, 95, 103, 104], "5000": 85, "50000": [85, 102], "500538e": 67, "50137075": 3, "50177118e": 58, "501837e": 35, "502": 110, "5021": [0, 76, 106, 109], "50319213": 58, "5034205945081645": 78, "504": 110, "505381e": 33, "505787072896766": 6, "506358e": 26, "506527e": 33, "506710e": 33, "507": 110, "508254e": 32, "50ghz": 85, "51": [0, 4, 33, 35, 48, 59, 67, 71, 95, 97, 103, 109, 111, 112], "510": 33, "51095472212391": 6, "511958e": 67, "513": [34, 42, 111], "513222e": 33, "513799e": 67, "513893e": 67, "514784e": 67, "515613e": 27, "516": 110, "518282e": 67, "52": [34, 45, 67, 90, 109, 110], "520": [33, 110], "5200": 34, "520091e": 67, "520224e": 67, "5202571647214724": 37, "520585380642636": 6, "52222222222222": [5, 6, 7, 9], "522281e": 67, "52288517e": 58, "52288523e": 58, "5233": 34, "523409e": 67, "523528e": 67, "524214e": 67, "525": 110, "525192e": 67, "525425411846459": 37, "526": 110, "526353e": 67, "526708e": 67, "52716830e": 49, "527236e": 67, "527425475361845": 6, "527755e": 67, "527976e": 33, "528875e": 67, "528923e": 67, "529356e": 61, "529811e": 67, "53": [34, 67, 94, 109], "530": [33, 110], "531979e": 33, "532": [11, 19, 111], "532462e": 67, "532647e": 67, "532951451211367": 37, "533": 110, "5335287322441005": 37, "533873e": 33, "534": 110, "534028e": 33, "535": 110, "5355": 51, "536": 110, "536791e": 67, "536990e": 33, "537": 110, "537206e": 67, "539": 110, "53978687e": 86, "54": [67, 94, 109], "540": 33, "540097202879465": 6, "540149e": 67, "541112e": 67, "543": 110, "543889e": 67, "544": 110, "544857e": 67, "545262551431136": 6, "545590e": 33, "546": [27, 29, 111], "546680e": 67, "547": 110, "547154649280394": 6, "547220e": 67, "548413e": 67, "549048e": 26, "55": [47, 67, 97, 109, 110], "550": 33, "550021e": 67, "550537e": 67, "550627e": 33, "551": 110, "551478e": 67, "552714e": 32, "554877e": 33, "555170e": 67, "55553508e": 58, "55553509e": 58, "55564856024449": 2, "555826e": 67, "5559": 51, "556": [51, 110], "5570": 34, "5571464161218": 6, "557516e": 67, "557834e": 33, "557935e": 67, "558": 68, "558020e": 67, "558368e": 33, "559": 110, "559817e": 33, "56": [54, 67, 97, 109, 110], "560": 33, "560349e": 67, "560750e": 67, "560795e": 33, "56119589e": 49, "56123974e": 58, "56123975e": 58, "562652e": 20, "562760e": 67, "563": 110, "563722e": 67, "564338e": 33, "5650": 51, "565024e": 67, "566": 110, "56664149963812": 6, "566666e": 67, "567": 110, "5674723897958": 37, "568": [65, 70, 110, 111], "569": 110, "569222e": 67, "569794e": 67, "57": [0, 67, 88, 92, 97, 109, 110], "570": [33, 110], "57007572": 58, "571": 110, "5719": 51, "572": 110, "572776e": 67, "573": 110, "573214e": 33, "574": 110, "57482501": 58, "575938e": 67, "576": 110, "576082e": 67, "576219e": 67, "576367e": 67, "576771e": 67, "577": [35, 42, 111], "577581e": 67, "578": [75, 81, 110, 111], "578909e": 67, "579": [42, 51], "58": [48, 67, 88, 97, 98, 109, 110], "580": 33, "580081e": 33, "580337e": 67, "58037947236615": 6, "580415e": 33, "581": 110, "58170259": 41, "582": 110, "583631e": 67, "584": 110, "584459e": 67, "5847": 51, "584755e": 67, "585715e": 33, "5858": 34, "587": [45, 59, 110, 111], "587988e": 20, "588453e": 67, "588499e": 67, "5885983": 58, "5890820430362781": 3, "589522e": 67, "59": [18, 19, 48, 67, 88, 92, 97, 98, 109, 110, 111, 112], "590": 33, "590018e": 67, "590932e": 33, "592": 110, "593": 110, "594984e": 67, "595": 75, "596": 110, "59605592e": 49, "596126e": 33, "59733423": 41, "598840195117187": 2, "599432e": 67, "5e": [3, 14, 23, 35, 36, 68, 79], "5e1": 4, "5f": 44, "6": [0, 1, 3, 6, 8, 12, 14, 17, 18, 20, 21, 22, 24, 25, 26, 27, 31, 33, 34, 35, 37, 38, 39, 41, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 69, 74, 75, 76, 77, 79, 80, 87, 88, 92, 95, 97, 98, 102, 105, 107, 109, 112], "60": [2, 4, 5, 6, 8, 9, 11, 12, 14, 33, 34, 35, 37, 41, 51, 57, 61, 62, 67, 74, 75, 86, 97, 109], "600": [32, 33, 42, 51, 111], "601": 110, "601472e": 20, "602": 110, "602434e": 67, "603": 110, "604506e": 67, "604616e": 67, "604783e": 67, "605": 110, "606": 110, "606056e": 35, "606377e": 67, "606772e": 67, "607": [92, 110], "607049e": 67, "60717156": 58, "60737409e": 58, "607424e": 67, "607426e": 67, "607435e": 67, "607445e": 67, "607460e": 67, "607470e": 67, "607475e": 67, "607478e": 67, "607484e": 67, "607485e": 67, "607491e": 67, "607493e": 67, "607503e": 67, "607513e": 67, "607514e": 67, "607524e": 67, "607525e": 67, "607537e": 67, "607541e": 67, "607551e": 67, "607554e": 67, "607556e": 67, "607558e": 67, "607566e": 67, "607579e": 67, "607580e": 67, "607595e": 67, "607609e": 67, "607627e": 67, "607635e": 67, "607645e": 67, "607671e": 67, "607680e": 67, "607698e": 67, "607714e": 67, "607737e": 67, "607764e": 67, "607793e": 67, "607832e": 67, "607874e": 67, "607889e": 67, "607963e": 67, "607966e": 67, "607999e": 67, "608023e": 67, "608024e": 67, "608059e": 67, "608073e": 67, "608076e": 67, "608088e": 67, "608089e": 67, "608117e": 67, "608165e": 67, "608215e": 67, "608224e": 67, "608237e": 67, "608243e": 67, "608300e": 67, "608313e": 67, "608329e": 67, "608330e": 67, "608364e": 67, "608433e": 67, "608600e": 67, "608632e": 67, "608636e": 67, "608637e": 67, "608664e": 67, "608673e": 67, "608707e": 67, "608734e": 67, "608761e": 67, "608774e": 67, "608805e": 67, "608860e": 67, "609013e": 67, "609031e": 67, "609087e": 67, "609163e": 67, "60917795e": 58, "609281e": 67, "609691e": 67, "609805e": 67, "609818e": 67, "609889e": 67, "609900e": 67, "609932e": 67, "609963e": 67, "61": [51, 67, 86, 109], "610": [33, 110], "610030e": 67, "610088e": 67, "610174e": 67, "610179e": 67, "610190e": 67, "610202e": 67, "6104371268816835": 37, "610479e": 67, "610790e": 67, "611": 110, "611033e": 67, "611082e": 67, "611295e": 33, "612633e": 67, "613": 110, "614": 110, "614437e": 67, "61451746e": 58, "615": 75, "61515201e": 58, "61515202e": 58, "616": [80, 81, 111], "616177419309466": 2, "617012e": 20, "61718564e": 58, "617643e": 67, "618007e": 67, "618865e": 33, "618871e": 33, "619": 110, "619328e": 33, "619816e": 27, "619901e": 26, "62": [67, 95, 109, 110], "620": [33, 110], "620752e": 27, "621": 51, "622121e": 67, "6222": 34, "622743e": 32, "62286712e": 58, "6238992011604663": 37, "624087e": 67, "624135e": 67, "6248": 85, "625002e": 67, "625455e": 67, "628": 110, "628015e": 67, "629": 110, "63": [33, 67, 95, 109], "630": 33, "630037e": 67, "6322": 51, "632479e": 67, "63289956e": 58, "634": [40, 42, 111], "634542e": 67, "63488731570214": 6, "635561e": 67, "635978662861795": 6, "636": [86, 109], "6365": 51, "637176e": 61, "63722430960618": 6, "637504e": 67, "637523e": 33, "638": 51, "638946e": 67, "638947e": 33, "639430e": 67, "639787e": 33, "64": [33, 67, 95, 109, 110], "640": 33, "640431e": 33, "64094845": 58, "641": 110, "641123e": 67, "642": 110, "64206913098603": 6, "643": 110, "643416e": 67, "644": [86, 109], "644049e": 67, "64423817": 41, "644308e": 67, "645179e": 67, "645410e": 67, "646051e": 67, "646093e": 67, "647": [51, 78, 81, 111], "648": 110, "648141e": 67, "648247e": 27, "649": [1, 10, 110, 111], "649076e": 67, "64bit": 110, "65": [0, 51, 55, 67, 96, 109], "650": 33, "6504588509575427": 3, "650678e": 20, "651129e": 67, "65147154e": 49, "6519": 34, "652001e": 67, "652715e": 67, "653393e": 67, "654": 110, "654959166703776": 2, "655145e": 67, "65543745": 58, "656824e": 67, "658": 110, "658655e": 33, "658928e": 67, "659": 110, "659266219020246": 6, "65987989e": 58, "66": [67, 86, 88, 109, 110, 112], "660": 33, "660689e": 33, "660790e": 33, "660812e": 33, "661047e": 61, "661834e": 26, "662507e": 67, "662611e": 67, "662643e": 67, "663": 110, "663543e": 67, "663544e": 67, "663545e": 67, "663546e": 67, "663547e": 67, "663548e": 67, "663549e": 67, "663550e": 67, "663551e": 67, "663552e": 67, "663553e": 67, "663554e": 67, "663555e": 67, "663556e": 67, "663557e": 67, "663558e": 67, "663559e": 67, "663560e": 67, "663561e": 67, "663562e": 67, "663563e": 67, "663564e": 67, "663565e": 67, "663566e": 67, "663567e": 67, "663568e": 67, "663569e": 67, "663570e": 67, "663571e": 67, "663572e": 67, "663573e": 67, "663574e": 67, "663575e": 67, "663576e": 67, "663577e": 67, "663578e": 67, "663579e": 67, "663580e": 67, "663581e": 67, "663582e": 67, "663583e": 67, "663584e": 67, "663585e": 67, "663586e": 67, "663587e": 67, "663588e": 67, "663589e": 67, "663590e": 67, "663591e": 67, "663592e": 67, "663593e": 67, "663594e": 67, "663595e": 67, "663596e": 67, "663598e": 67, "663599e": 67, "663600e": 67, "663601e": 67, "663602e": 67, "663603e": 67, "663604e": 67, "663605e": 67, "663607e": 67, "663608e": 67, "663609e": 67, "663610e": 67, "663612e": 67, "663613e": 67, "663615e": 67, "663616e": 67, "663618e": 67, "663619e": 67, "663621e": 67, "663623e": 67, "663625e": 67, "663627e": 67, "663628e": 67, "663630e": 67, "663632e": 67, "663634e": 67, "663637e": 67, "663639e": 67, "663641e": 67, "663643e": 67, "663645e": 67, "663648e": 67, "663651e": 67, "663653e": 67, "663657e": 67, "663660e": 67, "663663e": 67, "663666e": 67, "663670e": 67, "663673e": 67, "663678e": 67, "663682e": 67, "663687e": 67, "663692e": 67, "663697e": 67, "663702e": 67, "663707e": 67, "663713e": 67, "663720e": 67, "663727e": 67, "663737e": 67, "663751e": 67, "663767e": 67, "663785e": 67, "663814e": 67, "663852e": 67, "663912e": 67, "664077e": 67, "664378e": 67, "665211e": 67, "665639e": 67, "667": [16, 20, 22, 23, 33, 35, 60, 67, 68], "667641e": 67, "668": [30, 42, 110, 111], "669": 110, "669467e": 67, "669924e": 67, "67": [0, 54, 67, 95, 109, 110], "670": [33, 110], "670555e": 67, "672410e": 67, "672789e": 27, "673": [100, 109, 112], "673221e": 67, "673523e": 67, "6758": 51, "676": 110, "67609658732353": 6, "677": [3, 37, 41, 110], "677113e": 32, "677151e": 67, "6787": 51, "6790": 51, "6796": 51, "67965100682904": 2, "68": [39, 67, 95, 109], "680": [33, 110], "680885e": 67, "681": [76, 81, 110, 111], "681058e": 67, "681200e": 20, "681217e": 67, "682787e": 32, "683": [5, 10, 111], "683119e": 67, "683978e": 32, "684324e": 35, "685294e": 67, "687": 110, "689": 110, "689135e": 67, "689557e": 67, "689583e": 20, "69": [46, 67, 93, 100, 109], "690": [33, 110], "691": 110, "6912": 51, "691644e": 67, "692": 110, "692289e": 67, "693": [18, 19, 110, 111], "693084e": 67, "694245e": 67, "694297e": 67, "695056e": 27, "695521e": 67, "696": 110, "6964": 51, "696522621311644": 6, "698532e": 67, "698774e": 67, "699820e": 67, "7": [0, 1, 9, 11, 13, 14, 18, 20, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 44, 49, 51, 53, 56, 57, 58, 60, 63, 64, 65, 67, 69, 75, 77, 78, 80, 81, 87, 88, 95, 96, 97, 99, 102, 104, 105, 106, 107, 109, 112], "70": [0, 2, 5, 6, 9, 31, 32, 33, 38, 39, 40, 61, 67, 95, 97, 109], "700": [33, 51, 110], "700201e": 26, "701": 110, "7012331965002": 6, "701438e": 67, "701762e": 67, "701770668580316": 2, "702": 110, "702796e": 33, "70349712e": 58, "704": 110, "704097e": 67, "704189e": 67, "704365e": 67, "705361e": 33, "70623359": 58, "707527e": 67, "708771e": 67, "709": 110, "709292e": 20, "709310e": 67, "709643e": 33, "70993539e": 49, "71": [56, 67, 95, 109], "710": [33, 110], "710197e": 33, "711216e": 67, "713289e": 78, "714": 110, "714107e": 67, "715": [68, 70, 111], "715953e": 78, "715960e": 27, "716": 110, "716049e": 33, "716426e": 67, "718": 110, "72": [67, 95, 109, 110, 111], "720": 33, "720212e": 33, "721217e": 67, "722": 110, "722040e": 67, "722091e": 33, "723": [16, 19, 111], "7232359468853795": 3, "724086e": 33, "724554e": 33, "724600e": 67, "725224e": 27, "725769e": 67, "725951e": 67, "726": 110, "726166721298926": 37, "726958e": 33, "727032e": 20, "727141e": 67, "728": [26, 29, 111], "728955e": 67, "73": [0, 60, 67, 76, 106, 109], "730": [33, 100, 109, 112], "730250e": 67, "7304": 51, "731": 110, "732": 110, "732018e": 67, "73278562e": 49, "733572e": 67, "734": 110, "734384e": 20, "734412e": 32, "735399e": 67, "735871196038296": 6, "73647620e": 49, "737": 110, "737134e": 67, "737346e": 67, "739": [51, 110], "74": [67, 92, 109], "740": 33, "7400": 34, "740051e": 61, "74029183e": 49, "740559e": 33, "741": [51, 110], "741118e": 67, "743": 110, "743277e": 67, "744": [86, 97, 109, 110], "745": 97, "746": 110, "746137e": 67, "747071e": 67, "7476531411890917": 57, "747973e": 33, "75": [9, 39, 67, 92, 95, 109, 110], "750": 33, "750100e": 26, "751148e": 67, "7515193321185": 6, "752": 97, "753162e": 20, "753548e": 67, "753747e": 20, "75436312339336": 6, "754377e": 20, "754405e": 33, "755303e": 27, "755305e": 27, "755324e": 27, "755345e": 27, "755369e": 27, "755395e": 27, "755426e": 27, "755460e": 27, "755500e": 27, "755547e": 27, "755571e": 33, "755604e": 27, "755673e": 27, "755759e": 27, "755868e": 27, "756015e": 27, "756218e": 27, "756521e": 27, "756624e": 20, "757": [0, 95, 109], "757026e": 27, "757601e": 20, "75788169087051": 2, "758014e": 27, "758374e": 20, "759123e": 67, "759833e": 20, "76": [67, 100, 109, 110], "760": [14, 19, 33, 111], "760450e": 67, "760578e": 67, "760911e": 67, "761179e": 33, "7614207044578": 78, "761794e": 67, "761838e": 33, "762": [86, 97, 109], "762434e": 20, "762450e": 67, "763": [6, 10, 111], "763061e": 20, "764": 51, "764565e": [33, 67], "765": 51, "76510592": 58, "765491e": 20, "76579142e": 58, "767482e": 20, "767810e": 67, "767925e": 67, "768": [72, 73, 111], "768310e": 67, "768700e": 20, "768734e": 20, "7698291830273734": 3, "77": 67, "770": 33, "770049e": 67, "770321e": 33, "770820e": 67, "771489e": 20, "772225e": 33, "772608e": 20, "775370e": 67, "776532e": 67, "776627e": 61, "776827e": 27, "776880e": 27, "776945e": 27, "777027e": 27, "777135e": 27, "777284e": 27, "777495e": 27, "777841e": 27, "778259e": 20, "778490e": 27, "779038e": 67, "7799397": 58, "78": [67, 109], "780": 33, "780133e": 33, "780145e": 27, "78279732e": 58, "7830": 51, "7831": 51, "784264e": 33, "785186e": 33, "785968e": 20, "786": 51, "787": [0, 95, 109], "787466e": 67, "787738e": 67, "78850969e": 58, "788548e": 67, "78912743553177": 2, "78917596": 58, "789776e": 33, "79": [67, 106, 110], "790": 33, "790030e": 67, "79159074243252": 6, "792762e": 20, "793559e": 67, "794348e": 20, "795703e": 67, "796": 66, "796061e": 67, "797194e": 33, "797245e": 27, "798": [63, 70, 111], "7991859633835015e": 49, "79947889e": 49, "79959416e": 49, "7e": 14, "7e1": 68, "8": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 58, 61, 63, 64, 67, 69, 71, 72, 75, 76, 77, 78, 79, 80, 87, 88, 95, 97, 98, 105, 106, 107, 109, 112], "80": [2, 5, 6, 9, 12, 15, 33, 37, 41, 61, 67, 110], "800": [8, 33, 51], "801524e": 67, "8016": 51, "801713792987716": 37, "80275113616942": 2, "804295e": 20, "805": [49, 59, 111], "805235e": 33, "806103347964239": 37, "807113e": 67, "808727e": 33, "808932e": 20, "80910257": 58, "81": 67, "810": [33, 51], "810673e": 67, "81127971513494": 2, "811855e": 67, "813048e": 67, "813711e": 67, "81620688759422": 2, "81742118": 41, "81919900711129": 2, "819396e": 33, "819859e": 67, "82": [0, 60, 67, 97, 109, 110], "820": 33, "820952e": 35, "82131280293244": 2, "821800e": 67, "821987e": 20, "8226926897284630e": 49, "822723e": 61, "82282129129657": 2, "823407e": 67, "823502e": 67, "823959203849064": 2, "8241": 51, "82483864631298": 2, "825524003745045": 2, "82688144": 58, "827855e": 67, "82794938e": 49, "828492e": 78, "82992713e": 58, "83": 67, "830": 33, "83059335e": 58, "830771e": 67, "831410e": 33, "831589e": 67, "832892e": 67, "8329": 51, "833572391120526": 6, "833813e": 67, "835": [7, 19], "836245e": 67, "839356e": 67, "84": [3, 67, 110], "840": 33, "840590e": 33, "841819e": 33, "842001e": 27, "84251959": 41, "842636e": 67, "842721e": 67, "843436e": 67, "843492e": 67, "844073e": 33, "84655111": 41, "846976e": 33, "847222222222214": 47, "848": 29, "849": 88, "849064e": 67, "849492e": 20, "85": [23, 67, 110], "850": [23, 29, 33, 111], "85047528": 41, "850574e": 33, "851305e": 67, "851507e": 67, "852583e": 33, "852991e": 67, "854": [36, 42, 111], "854116e": 67, "854134e": 33, "854694e": 67, "85500870e": 58, "85500876e": 58, "855388e": 33, "855431e": 67, "856": [4, 10, 111], "85734724064163": 6, "857493e": 61, "85786356": 41, "858": 88, "85844031": 41, "858590e": 33, "858901e": 33, "859006e": 33, "85940387": 41, "86": [67, 110], "860": 33, "860061e": 32, "860154e": 61, "861463e": 61, "862195e": 67, "862280e": 20, "8625": 51, "863339e": 67, "86336318": 41, "86400199": 41, "866445e": 33, "8668": 51, "867807e": 67, "868347e": 67, "868519e": 67, "8687": 51, "86875958e": 58, "869261766871475": 2, "8698": 51, "87": [67, 100, 110], "870": 33, "870728e": 33, "87178503e": 58, "87178504e": 58, "872081e": 67, "87401169938976": 6, "874332e": 20, "875326e": 32, "875691e": 27, "876119e": 20, "876462e": 35, "879008e": 67, "8797226679525343": 37, "88": [24, 60, 67, 110], "880": 33, "880145e": 33, "880265e": 67, "881179e": 67, "882375e": 67, "8828491877294617": 78, "88888889e": 102, "89": [60, 67, 88, 110], "890": 33, "890456785604675": 6, "890667e": 33, "890771e": 67, "891": [56, 59, 111], "891614e": 33, "893582e": 27, "894485e": 20, "896260e": 67, "897697e": 67, "898122e": 27, "8th": 85, "9": [0, 1, 3, 5, 9, 10, 12, 16, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 58, 61, 62, 67, 69, 76, 86, 88, 102, 104, 106, 109, 112], "90": [2, 6, 9, 18, 33, 60, 61, 65, 67, 110], "900": [33, 51], "90013973873414": 2, "90019294": 7, "9009847640991211": 9, "902662e": 67, "903": [20, 22, 24, 68], "904": [92, 97, 109, 112], "906371e": 33, "90868636e": 58, "909627e": 33, "91": [60, 67, 110], "910": [33, 69, 70, 111], "911509e": 67, "912468e": 33, "912579e": 33, "915955e": 67, "916369e": 67, "916691e": 33, "91732819": 58, "918731e": 33, "92": [60, 67, 110], "920": 33, "92047485": 58, "920917e": 67, "922568e": 67, "922750e": 67, "924": [92, 97, 109, 112], "924361e": 67, "924851e": 33, "926406e": 67, "9269": 51, "92704550e": 49, "927442e": 67, "928": [59, 111], "92852235e": 49, "929009e": 67, "93": [67, 110], "930": 33, "930189e": 67, "930890e": 67, "930938e": 33, "931": [39, 42, 111], "931950e": 67, "932317369414754": 2, "93440562e": 58, "935449e": 67, "9355": 51, "936": [46, 93, 109], "936118e": 33, "936334e": 67, "936346e": 33, "936418e": 33, "936787e": 67, "936859e": 67, "936992e": 33, "937777e": 67, "937884e": 67, "9386": 112, "94": 67, "940": 33, "941497e": 67, "9417": 51, "941833e": 67, "94220449340273": 2, "942296e": 67, "942604e": 33, "942771e": 27, "9430": 51, "943013e": 33, "944014e": 67, "94410083e": 49, "944208e": 27, "94444444e": 102, "945": [47, 59, 111], "948338e": 67, "948458e": 67, "948732e": 67, "948923e": 27, "949": [66, 70, 111], "949001e": 33, "949356e": 67, "949549e": 67, "949922e": 67, "95": [0, 30, 31, 33, 36, 40, 67, 71, 72, 86, 110], "950": 33, "950364300815394": 2, "951247e": 67, "952959e": 67, "9534d93517": 68, "953795308746166": 2, "954955e": 33, "95599677401932": 2, "957237e": 67, "957543840951914": 2, "95855874663437": 2, "959284820103846": 2, "959815373763206": 2, "96": 67, "960": 33, "960175e": 33, "960213442186": 2, "960875e": 33, "961099e": 67, "9619": 51, "96395660e": 58, "96395661e": 58, "96463916e": 58, "966762e": 33, "967414e": 67, "967647041787599": 37, "968279e": 67, "969683e": 67, "97": 67, "970": [33, 46, 93, 109], "971315e": 67, "971430e": 27, "972222222222223": 60, "972309e": 33, "972615e": 33, "974": 75, "974174e": 33, "974381e": 67, "9762891544683304e": 49, "976633e": 67, "977516e": 67, "977559e": 67, "978434e": 33, "98": [67, 95, 100], "980": 33, "9800": 34, "980603e": 67, "980812e": 33, "981055e": 33, "981309e": 67, "982881e": 26, "98336127e": 49, "983702e": 67, "984020e": 33, "984218e": 33, "984492e": 67, "985796e": 67, "9858": 51, "986679e": 67, "987255e": 67, "989": [41, 42, 111], "989585e": 67, "989968e": 33, "98997703e": 58, "99": [0, 3, 67, 88, 99, 109, 110, 112], "990": [13, 19, 33, 111], "990989e": 20, "991": [2, 10, 111], "992512e": 67, "992842e": 67, "992882e": 33, "993772e": 67, "994645e": 67, "995": 97, "995684e": 33, "996929e": 67, "997": 51, "998215e": 67, "999120e": 33, "99938889e": 102, "9995": 51, "99958333e": 102, "99977301e": 86, "999774737592773": 51, "99980556e": 102, "9999": 41, "A": [0, 4, 11, 12, 13, 14, 18, 25, 26, 27, 28, 30, 33, 45, 46, 49, 51, 57, 58, 60, 67, 68, 75, 83, 86, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 112], "And": [0, 91, 92, 110], "As": [85, 97, 110, 112], "At": [83, 112], "Be": [60, 85], "Being": 82, "But": [0, 68, 91, 95, 97, 108, 110, 112], "By": [0, 86, 90, 95, 102, 106, 112], "For": [0, 28, 33, 35, 37, 41, 58, 60, 68, 78, 83, 86, 87, 95, 97, 98, 99, 102, 105, 106, 107, 110, 112], "If": [0, 60, 68, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 104, 106, 107, 108, 109, 110, 112], "In": [0, 3, 4, 7, 8, 9, 33, 35, 37, 39, 41, 44, 48, 53, 54, 55, 56, 60, 68, 76, 82, 83, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 101, 103, 104, 106, 109, 110, 112], "It": [0, 3, 12, 20, 22, 23, 26, 27, 28, 32, 33, 35, 61, 67, 68, 78, 83, 84, 95, 97, 99, 105, 109, 110, 112], "Near": [0, 86, 109, 112], "No": [0, 3, 37, 41, 51, 69, 97, 109, 112], "Not": [0, 85], "On": [0, 39, 60, 88, 92, 97, 107, 109, 110, 112], "One": [0, 98, 100, 106, 109, 110, 112], "Or": 60, "Such": 95, "The": [0, 3, 8, 13, 28, 30, 35, 36, 37, 38, 41, 48, 50, 51, 54, 56, 60, 63, 66, 68, 69, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112], "Then": [35, 37, 38, 39, 41, 66, 95, 97, 112], "There": [86, 97, 112], "These": [31, 39, 40, 83, 99, 110], "To": [0, 9, 85, 86, 95, 100, 107, 109, 112], "With": 92, "_": [0, 26, 37, 39, 41, 44, 47, 48, 76, 85, 86, 87, 88, 90, 91, 92, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 112], "_0": [86, 95, 107], "_1": [0, 45, 86, 88, 95, 97, 99, 100, 112], "_2": [0, 48, 86, 88, 92, 95, 98, 102, 103, 107], "__": 107, "__file__": [13, 14, 21, 25, 27, 36], "__init__": [6, 9, 34, 88, 107, 110], "__name__": 85, "__type__": 85, "__version__": 83, "_a": [86, 102], "_b": 86, "_barycenter_solv": 51, "_c": [0, 88], "_convolut": 110, "_d": 95, "_empir": 68, "_f": [80, 86, 112], "_gw": 110, "_h": 102, "_i": [0, 45, 86, 90, 95, 97, 102, 104, 105, 106, 107, 108], "_in": [0, 103], "_init": 18, "_iter": 95, "_j": [0, 90, 104, 105, 108], "_k": 94, "_m": 95, "_md": [3, 37, 41], "_n": [45, 86], "_p": [0, 103, 112], "_partial": 110, "_q": 112, "_refer": 95, "_screenkhorn": 57, "_sinkhorn": [16, 20, 22, 23, 24, 33, 35, 60, 67, 68, 75], "_t": [0, 92], "_type_": 0, "_unbalanc": 56, "_update_plot": [4, 5, 9, 18, 79], "a0": 3, "a0_est": 3, "a0_est2": 3, "a1": [0, 3, 11, 12, 14, 16, 51, 54, 75, 95], "a1111": [0, 11, 12, 86, 100, 106, 109, 112], "a1138": [0, 11, 12, 86, 100, 106, 109, 112], "a1_torch": 3, "a2": [0, 3, 11, 12, 14, 16, 51, 54, 75, 95], "a2_torch": 3, "a3": 16, "a4": 16, "a_": 97, "a_1": 97, "a_2": 97, "a_d": 97, "a_extend": 99, "a_i": [32, 46, 86, 95, 97, 101, 112], "a_j": 97, "a_label": [46, 101], "a_list": [18, 97], "a_max": [39, 85], "a_min": [39, 85], "a_to_b": 107, "a_torch": 8, "a_x": 46, "aaai": [56, 95, 109], "aalto": 71, "aarch64": 110, "ab": [9, 32, 35, 65, 85, 100, 104, 107, 112], "abi": 110, "abil": 112, "abl": [56, 106, 109], "abort": 83, "about": [83, 86, 107, 110, 112], "abov": [68, 83, 95, 101, 102, 110, 112], "absc": 76, "absolut": [0, 20, 32, 33, 35, 67, 85, 87, 93, 95, 99, 108], "absorpt": 106, "abstract": 85, "abus": 82, "ac": 15, "acc": 34, "acceler": 68, "accept": [0, 60, 82, 83, 85, 86, 88, 97, 98, 107, 110], "access": [9, 60, 109, 112], "accord": [46, 95, 107], "account": [0, 66, 82, 83, 86, 95, 98, 110], "accur": 3, "accuraci": [34, 86], "achiev": [39, 85], "acknoledg": 110, "acknowledg": 110, "acm": [0, 56, 86, 97, 109, 112], "across": [0, 31, 33, 38, 39, 95, 105, 110], "act": 82, "action": [82, 110], "activ": [31, 33, 38, 40, 85, 86, 102], "active_index": 102, "actual": [3, 112], "ad": [1, 2, 3, 4, 6, 7, 9, 14, 16, 17, 18, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 33, 34, 35, 37, 38, 39, 41, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 71, 72, 76, 78, 79, 80, 83, 85, 88, 92, 99, 100, 102, 107, 110, 112], "adam": [2, 6, 34, 47, 95], "adapt": [0, 28, 29, 48, 67, 82, 86, 88, 89, 95, 97, 99, 101, 107, 109, 110, 111], "add": [33, 37, 38, 39, 41, 68, 78, 83, 95, 99, 100, 107, 110], "add_artist": [17, 44, 47, 56], "add_collection3d": [11, 75], "add_edg": [30, 31, 33, 38, 39, 40], "add_nod": [30, 31, 33, 38, 39, 40], "add_nodes_from": [30, 38], "add_patch": 45, "add_subplot": [5, 11, 18, 35, 39, 54, 75, 78], "addit": [0, 39, 83, 87, 95, 102, 109, 112], "address": [82, 83, 110, 112], "adequ": 30, "adequatli": 110, "adjac": [3, 30, 38, 39, 94, 95], "adjacency_matrix": [30, 38], "adjust": [31, 33], "admiss": [95, 99], "adrien": [48, 71, 84, 88, 98, 109], "advanc": [0, 34, 44, 56, 57, 58, 82, 86, 87, 88, 92, 95, 104, 105, 106, 109, 112], "advantag": 99, "adversari": [9, 112], "ae": 25, "affin": 112, "aforement": [37, 41], "after": [34, 49, 51, 93, 109], "ag": 82, "agnost": 85, "agueh": [92, 97, 109, 112], "agw": 25, "ai": [101, 110], "aim": [0, 5, 9, 80, 86, 88, 107, 110, 112], "aistat": [0, 86, 88, 104, 109, 112], "akad": 97, "al": [0, 4, 71, 79, 86, 97, 103, 109, 112], "alain": [84, 109], "alaya": [0, 38, 57, 78, 84, 86, 95, 99, 100, 109, 112], "alexand": 109, "alexandr": [48, 84, 88, 98, 109], "alg": 105, "algo": [35, 60, 86], "algorithm": [0, 1, 16, 33, 35, 36, 39, 41, 51, 57, 75, 76, 83, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 104, 105, 106, 108, 109, 110], "align": [43, 59, 82, 87, 88, 92, 95, 97, 109, 111, 112], "all": [0, 1, 11, 12, 14, 28, 30, 33, 36, 37, 38, 43, 47, 53, 56, 60, 75, 77, 82, 83, 85, 86, 88, 91, 92, 95, 97, 100, 102, 106, 107, 108, 109, 110, 111, 112], "all_accuraci": 34, "all_bar": 14, "all_loss": 34, "all_xr": 23, "all_yr": 23, "allclos": [0, 85, 103], "alldistribt": 86, "alloc": [85, 110, 112], "allow": [3, 7, 35, 36, 44, 48, 56, 68, 78, 83, 85, 87, 95, 100, 110, 112], "along": [0, 3, 7, 8, 85, 86, 87, 88, 90, 91, 95, 97, 98, 99, 100, 102, 104, 106, 107, 108], "alpha": [0, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 17, 18, 20, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 45, 46, 47, 48, 52, 53, 58, 60, 65, 66, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 86, 87, 88, 94, 95, 96, 99, 101, 104, 105, 110], "alpha0": 99, "alpha_": [87, 95], "alpha_1": 87, "alpha_2": 87, "alpha_edg": [31, 33, 38, 39, 40], "alpha_f": [87, 95], "alpha_i": [0, 97, 103], "alpha_k": [0, 97], "alpha_list": 11, "alpha_max": [95, 99], "alpha_min": [95, 99], "alreadi": [24, 78, 107, 110, 112], "also": [0, 3, 39, 41, 56, 60, 68, 83, 85, 86, 92, 94, 95, 97, 98, 107, 109, 110, 112], "altern": [33, 60, 83, 95, 98, 109, 110, 112], "although": [60, 97], "altschul": [0, 86, 92, 109, 112], "alwai": [60, 83, 88, 95, 110, 112], "amari": [0, 86, 109, 112], "amax": 85, "ambient": [48, 88, 107], "amin": 85, "among": [95, 110], "amount": [48, 68, 95, 97, 99, 100, 110, 112], "amper": [100, 109, 112], "an": [0, 3, 8, 9, 21, 25, 27, 30, 36, 38, 39, 41, 48, 51, 60, 62, 68, 82, 83, 85, 86, 88, 91, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 109, 110], "analog": 41, "analysi": [0, 41, 43, 59, 67, 83, 86, 88, 90, 92, 97, 99, 108, 109, 110, 111], "anastasio": 107, "andrei": [0, 97, 109], "android": 110, "angl": [9, 17, 25, 47, 66], "anglet": 25, "ani": [4, 5, 9, 18, 48, 51, 79, 82, 83, 85, 87, 88, 95, 97, 98, 99, 100, 102, 107, 109, 110, 112], "annal": [100, 109, 112], "annals2010": 112, "anoth": [68, 83, 88, 92, 112], "antipod": 66, "antoin": [45, 84, 104, 109], "antoni": 109, "anymor": 95, "anywai": 97, "api": [68, 83, 85, 94, 109, 110, 112], "appar": 104, "appear": [82, 86, 100], "append": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 47, 51, 54, 55, 56, 69, 75, 78, 107], "appli": [0, 26, 39, 82, 87, 88, 92, 93, 95, 97, 106, 107, 109], "applic": [0, 28, 30, 31, 32, 33, 35, 38, 40, 41, 56, 67, 78, 86, 88, 92, 95, 97, 99, 100, 108, 109], "appoint": 82, "appreci": 83, "approach": [0, 12, 20, 22, 24, 28, 51, 86, 88, 95, 97, 109, 112], "appropri": [82, 83, 107], "approv": [83, 110], "approx": [48, 88, 98], "approxim": [0, 9, 12, 26, 39, 48, 68, 86, 87, 95, 97, 98, 99, 103, 109, 110, 112], "apr": 110, "april": [0, 86, 91, 109, 112], "aqua": 46, "ar": [0, 8, 13, 15, 17, 22, 28, 30, 31, 33, 36, 37, 38, 39, 40, 41, 48, 50, 51, 56, 58, 60, 62, 63, 68, 69, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "aram": [88, 109], "arang": [4, 8, 11, 12, 14, 15, 18, 32, 38, 41, 44, 45, 49, 51, 55, 56, 57, 61, 62, 64, 65, 67, 69, 74, 75, 85, 86, 107], "araya": [0, 106, 109, 112], "arbitrari": [44, 95], "arbitrarili": [0, 95], "arch": 110, "archiv": 109, "arctan2": [17, 47, 85], "arctang": 85, "area": [83, 112], "arg": [0, 85, 86, 87, 88, 90, 91, 95, 97, 99, 100, 104, 105, 106, 107, 108, 112], "argmax": [3, 31, 33, 34, 37, 40, 44, 56, 85, 98], "argmin": [30, 31, 33, 40, 48, 85, 88, 92, 98], "argsort": [17, 47, 85], "argument": [24, 38, 51, 68, 78, 85, 88, 98, 99, 107, 110], "argwher": 39, "aris": 102, "arithmet": 85, "arjovski": 9, "arjovsky2017": 9, "arm": 110, "armijo": [0, 95, 99, 110], "arnaud": [86, 97], "around": [68, 110], "arr": [85, 107], "arrai": [0, 3, 7, 8, 11, 12, 13, 14, 16, 17, 18, 23, 25, 30, 35, 36, 37, 38, 41, 45, 46, 50, 53, 60, 63, 71, 75, 76, 78, 79, 80, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112], "array_equ": 85, "array_lik": [88, 98, 107], "articl": 109, "artifici": [0, 9, 48, 56, 76, 86, 88, 91, 95, 98, 104, 106, 109, 112], "artist": 51, "arxiv": [0, 18, 64, 67, 75, 86, 88, 90, 97, 99, 104, 106, 107, 109, 112], "asanyarrai": 49, "asarrai": 14, "ascii": 110, "asgd": [58, 105], "asgd_pi": 58, "ask": [83, 109, 110], "aspect": [39, 45, 54, 112], "aspremont": [48, 88, 98, 109], "assel": [95, 109], "assert_same_dtype_devic": 85, "assign": [31, 33, 37, 39, 40, 41, 86, 87, 94, 95], "assist": [83, 86, 109], "associ": [0, 39, 56, 88, 95, 97, 100, 103, 107], "assum": [0, 68, 92, 95, 110], "astyp": [3, 4, 15, 16, 18, 21, 25, 27, 33, 35, 36, 37, 38, 39, 41, 48], "asymmetr": [0, 95, 110], "asymptot": 9, "atan2": [0, 85, 97, 107], "aten": 8, "atleast_2d": 60, "atol": [0, 46, 85, 93, 103], "atom": [0, 86, 95, 97], "attack": 82, "attain": [66, 100], "attent": 82, "attr_nam": 30, "attribut": [33, 68, 85, 88, 95, 107, 110], "aud": [9, 86, 109], "augment": [39, 95, 102], "august": 110, "aujol": [21, 27, 67, 88, 99, 109, 112], "aur": 109, "aureli": 60, "aur\u00e9li": 109, "author": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 109], "auto": [0, 32, 39, 45, 54, 60, 86, 107, 110], "auto_exampl": [10, 19, 29, 42, 59, 70, 73, 81], "auto_examples_jupyt": 43, "auto_examples_python": 43, "autodiff": [0, 1, 86, 109, 110], "autograd": [0, 5, 7, 90, 109, 110, 112], "automat": [0, 7, 8, 56, 60, 83, 97, 107, 110, 112], "auxiliari": [39, 95, 102], "avail": [0, 28, 68, 82, 83, 85, 95, 109, 110, 112], "ave_v": 105, "averag": [0, 33, 35, 85, 88, 90, 92, 95, 100, 109, 112], "averaged_sgd_entropic_transport": 105, "averaged_stochastic_gradient_desc": 92, "avoid": [0, 38, 68, 83, 85, 86, 88, 90, 95, 100, 110, 112], "awai": 60, "ax": [4, 5, 11, 13, 14, 16, 18, 38, 45, 46, 54, 55, 56, 57, 60, 61, 62, 67, 69, 72, 74, 75, 77, 85, 99, 101, 112], "ax1": [11, 32, 35, 36, 39, 44, 56, 78, 101], "ax10": 36, "ax11": 36, "ax12": 36, "ax2": [11, 32, 35, 36, 39, 44, 54, 56, 78, 101], "ax3": [32, 36, 39, 78, 101], "ax4": [36, 39], "ax5": [36, 39], "ax6": [36, 39], "ax7": 36, "ax8": 36, "ax9": 36, "ax_": 46, "ax_bound": 6, "ax_m": 46, "ax_row": 14, "ax_t": 46, "axel": [0, 97, 109], "axes3d": [11, 12, 35, 75, 78], "axi": [1, 3, 4, 5, 6, 13, 14, 16, 17, 18, 21, 23, 25, 27, 31, 33, 34, 37, 38, 39, 40, 41, 45, 47, 48, 53, 54, 55, 64, 66, 67, 69, 71, 72, 76, 77, 78, 80, 85, 90, 101, 104, 107], "azim": 18, "b": [0, 1, 7, 8, 12, 15, 23, 25, 28, 32, 35, 36, 39, 46, 48, 50, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 83, 85, 86, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "b1": [0, 54, 95], "b2": [0, 54, 95], "b_": 105, "b_extend": 99, "b_i": 106, "b_j": [32, 86, 95, 112], "b_k": 112, "b_l": 97, "b_l2": [11, 75], "b_label": [46, 101], "b_to_a": 107, "b_torch": 8, "b_u": 105, "b_v": 105, "b_wass": [11, 75], "b_x": 46, "b_y": [46, 101], "ba": 109, "bach": [58, 105, 109, 112], "back": [21, 25, 27, 83, 88, 98], "backend": [0, 1, 3, 4, 6, 7, 8, 10, 24, 33, 35, 56, 60, 84, 86, 88, 91, 92, 95, 96, 97, 98, 99, 103, 105, 106, 107, 108, 109, 110, 111], "background": 110, "backpropag": 110, "backslash": 102, "backward": [0, 1, 2, 3, 4, 6, 7, 8, 9, 34, 47, 56], "bad": 110, "bakery_po": 60, "bakery_prod": 60, "balanc": [0, 69, 106, 107, 112], "ban": 82, "bandwidth": [88, 98], "bapg": [33, 110], "bapg_fused_gromov_wasserstein": [33, 95], "bapg_fused_gromov_wasserstein2": 95, "bapg_gromov_wasserstein": 95, "bapg_gromov_wasserstein2": 95, "bar": [14, 102], "bar_debias": 14, "bari": [26, 30, 41, 46, 51, 93], "bars_debias": 14, "bars_sinkhorn": 14, "bary_l2": [11, 12, 75], "bary_log": 51, "bary_torch": 8, "bary_wass": [11, 12, 75], "bary_wass2": 12, "barycent": [0, 10, 19, 42, 59, 71, 81, 84, 86, 88, 89, 92, 95, 97, 103, 106, 107, 109, 110, 111], "barycenter_debias": [14, 86], "barycenter_sinkhorn": 86, "barycenter_stabil": 86, "barycenter_unbalanc": [0, 75, 106, 112], "barycenter_unbalanced_sinkhorn": 106, "barycenter_unbalanced_sinkhorn_unbalanc": 112, "barycenter_unbalanced_stabil": [106, 112], "barycentr": [0, 26, 46, 48, 86, 88, 92, 93, 97, 98, 106, 112], "barzilai": [94, 109], "base": [0, 31, 33, 35, 39, 40, 42, 43, 60, 83, 84, 86, 88, 92, 94, 95, 104, 107, 109, 110, 111, 112], "basetransport": [98, 110, 112], "basi": 17, "batch": [0, 8, 9, 34, 85, 86, 88, 92, 94, 95, 97, 105, 107, 110], "batch_alpha": 105, "batch_beta": 105, "batch_grad_du": 105, "batch_siz": [0, 34, 37, 58, 88, 92, 95, 105, 107], "batchsiz": 86, "bbox_inch": 53, "bcd": [41, 87, 88, 90, 95, 98], "beauti": 110, "becam": 112, "becaus": [2, 6, 24, 78, 110, 112], "becker": 107, "been": [0, 9, 84, 95, 97, 100, 106, 107, 109, 110, 112], "befor": [0, 39, 83, 85, 88, 97, 110], "begin": [30, 88, 97, 98, 102], "behavior": [7, 82, 83, 110], "behaviour": [0, 95, 97], "being": [0, 51, 60, 83, 88, 97, 110, 112], "belgium": [48, 88, 98, 109], "belong": [7, 35, 78, 98, 102], "below": [68, 107, 109, 110], "benam": [0, 11, 12, 86, 100, 106, 109, 112], "benchmark": [83, 85, 110], "benefit": [83, 84, 109, 110], "berg": [0, 72, 97, 103, 109], "best": [82, 83, 95, 112], "beta": [58, 68, 86, 95, 104, 105, 110], "beta_j": 104, "better": [0, 9, 38, 57, 68, 76, 86, 104, 110, 112], "between": [0, 1, 3, 4, 7, 16, 18, 21, 30, 31, 33, 36, 37, 38, 40, 41, 43, 44, 46, 50, 51, 52, 53, 56, 59, 60, 70, 77, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 106, 107, 108, 109, 110, 111], "betwen": 110, "bewar": 105, "beyond": 110, "bfg": [86, 104, 106, 110, 112], "bgw": 25, "bhushan": [58, 88, 105, 109, 112], "bia": [23, 26, 27, 88, 92, 98], "bibtex": [107, 109], "bicentenni": [0, 97, 109], "big": [92, 95, 110], "bilinear": [13, 17, 60], "bin": [0, 8, 11, 12, 14, 51, 57, 61, 62, 65, 67, 69, 74, 75, 89, 97, 107, 112], "binari": [0, 37, 41, 89, 97], "binary_search_circl": [0, 97], "bit": 85, "bitsiz": 85, "bitsize32": 85, "bitsize64": 85, "black": [11, 31, 33, 37, 38, 39, 40, 41, 44, 48, 56, 101], "blanchet": [33, 95, 109], "blit": 18, "blob": 107, "block": [0, 3, 28, 34, 39, 83, 86, 87, 90, 95, 98, 109, 112], "block_sizes1": 34, "block_sizes2": 34, "blondel": [0, 58, 84, 88, 104, 105, 109, 110, 112], "blue": [8, 13, 21, 27, 32, 34, 35, 44, 45, 48, 54, 56, 60], "bmatrix": 102, "bname": 69, "bodi": 82, "boisbunon": [60, 109], "bold": 60, "bonet": [0, 5, 66, 72, 76, 84, 97, 103, 109], "bonneel": [0, 4, 71, 84, 97, 103, 109, 112], "bonu": 83, "book": 112, "bool": [0, 60, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108], "boolean": [0, 85, 86, 88, 92, 95, 97, 107], "both": [0, 3, 8, 26, 38, 39, 54, 60, 79, 82, 86, 87, 95, 96, 97, 98, 99, 102, 106, 110, 112], "bottleneck": [57, 86], "bottom": [5, 14, 54, 60, 69, 101], "bottou": 9, "bound": [0, 39, 48, 88, 95, 96, 97, 98, 101, 109, 110], "boundari": [100, 109, 112], "boxplot": 1, "bo\u00eft\u00e9": 84, "brain": [86, 95, 109], "branch": [83, 110], "brand": 110, "braycurti": [0, 60, 107], "bregman": [0, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 33, 35, 57, 60, 63, 67, 68, 88, 90, 91, 95, 97, 99, 100, 106, 108, 109, 110], "breloi": [45, 90, 109], "brenier": [43, 59, 88, 98, 109, 110, 111, 112], "bring": 110, "broad": 83, "broadcast": 110, "brought": 112, "browser": 83, "budget": [57, 86], "bug": [109, 110], "build": [0, 9, 30, 38, 83, 88, 95, 97, 109, 110, 112], "build_noisy_circular_graph": [30, 38], "build_ot": [39, 95], "built": [39, 110], "bure": [0, 19, 43, 92, 93, 107, 109, 110, 111], "bures_barycenter_fixpoint": 92, "bures_barycenter_gradient_desc": [92, 110], "bures_dist": 92, "bures_wasserstein_barycent": 17, "bures_wasserstein_dist": [92, 110], "bures_wasserstein_map": [92, 112], "butscher": [86, 109, 112], "button": 83, "bw_dist": 0, "bw_valu": 68, "bx": 99, "b\u00e9cigneul": [94, 109], "b\u00e9rar": [57, 86, 109, 112], "c": [0, 3, 8, 9, 16, 17, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 47, 48, 49, 50, 51, 52, 54, 58, 60, 63, 64, 66, 68, 72, 79, 80, 84, 85, 86, 88, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "c0": [3, 6, 17, 37, 38, 39, 41, 45, 47, 77, 79, 80], "c0_est2": 3, "c1": [0, 3, 17, 31, 32, 33, 35, 38, 39, 40, 47, 54, 68, 77, 78, 79, 80, 95, 99, 100, 112], "c1_": 112, "c1_aux": [39, 95], "c1_torch": 3, "c2": [0, 3, 17, 31, 32, 33, 35, 38, 39, 40, 47, 54, 68, 78, 79, 80, 95, 100, 112], "c2_": 112, "c2_aux": [39, 95], "c2_torch": 3, "c3": [7, 17, 31, 33, 40, 53], "c4": 17, "c_": [37, 41, 46, 47, 60, 86, 93, 95], "c_1": [0, 32, 38, 95, 98, 99, 100], "c_2": [0, 31, 32, 38, 40, 95, 98, 100], "c_3": [31, 40, 98], "c_citi": 68, "c_list": 47, "c_t": [46, 47, 93], "c_transform_entrop": 105, "ca": 0, "cafe": 60, "cafe_po": 60, "cafe_prod": 60, "caffarelli": [100, 109, 112], "caf\u00e9": 60, "calcul": [16, 44, 85, 86, 87, 95], "call": [13, 24, 39, 51, 58, 78, 80, 86, 88, 93, 95, 98, 99, 105, 107, 110, 112], "callabl": [0, 60, 88, 90, 95, 99, 105, 106, 107, 110], "callback": 110, "camil": 84, "can": [0, 3, 7, 39, 48, 51, 56, 60, 68, 80, 83, 86, 88, 90, 91, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112], "canberra": [0, 60, 107], "cannot": [9, 28, 51, 88, 106, 109, 110, 112], "cardin": [57, 86, 107], "care": [60, 85], "carlier": [0, 11, 12, 86, 92, 97, 100, 106, 109, 112], "carlo": [0, 103], "case": [0, 28, 38, 60, 79, 83, 85, 87, 95, 97, 102, 103, 104, 106, 109, 110], "cassereau": [84, 109, 110], "cast": [0, 49, 95, 97, 112], "cat": 9, "cathol": [48, 88, 98, 109], "catom": 37, "caus": [0, 60, 107], "cb": [0, 17, 45, 92], "cbar": 60, "cbook": 49, "cc": 112, "cd": [83, 92], "cdf": [0, 97], "cdf_u": [0, 97], "cdf_v": [0, 97], "cdict": 95, "cdict_best_st": 95, "cdict_fgw": 37, "cdict_gw": 37, "cdict_init": 95, "cdist": [0, 35, 36, 60, 78, 95, 100, 107], "cdot": [0, 45, 80, 86, 88, 90, 95, 96, 97, 98, 99, 100, 105, 106, 112], "cedric": [37, 41], "cedvincentcuaz": [31, 33, 35, 38, 39, 40], "celebr": 110, "cell": 60, "cembed": [37, 95], "center": [0, 45, 46, 60, 90, 92, 95, 97, 110], "center_du": [0, 97], "center_ot_du": [0, 97], "central": 110, "centroid": 95, "cerr": 110, "certain": 110, "cevher": 107, "cg": [0, 33, 35, 67, 68, 86, 88, 91, 95, 97, 98, 104, 106, 108, 110, 112], "chambon": [20, 21, 22, 26, 27, 28, 84, 109], "chang": [0, 2, 3, 6, 26, 37, 41, 83, 85, 86, 97, 106, 112], "channel": 109, "chap": [0, 97], "chapel": [0, 30, 32, 33, 35, 38, 78, 79, 80, 84, 95, 99, 100, 102, 106, 109, 112], "character": 94, "charlier": [86, 109], "chebyshev": [0, 60, 107], "check": [0, 83, 85, 86, 95, 97, 107, 110, 112], "check_margin": [0, 97], "check_number_thread": [97, 107], "check_param": 107, "check_random_st": 107, "check_zero": 95, "checkout": 83, "chen": [94, 109], "chewi": [92, 109], "china": [86, 109], "chintala": 9, "chizat": [0, 75, 86, 88, 100, 106, 109, 112], "choic": [38, 68, 110, 112], "choos": [0, 30, 66, 86, 90, 97, 112], "chosen": [85, 107, 112], "chowdhuri": [0, 39, 95, 109], "christoph": 107, "chu": [33, 95, 109], "ci": [84, 110], "circl": [0, 38, 43, 49, 60, 68, 70, 84, 97, 107, 109, 111], "circleci": [3, 6, 7, 8, 16, 20, 22, 23, 24, 33, 35, 37, 38, 41, 49, 51, 55, 57, 60, 66, 67, 68, 75, 78, 110], "circular": [0, 30, 38, 97, 109], "circumst": 82, "citat": 107, "cite": 110, "citybloc": 68, "cityblock": [0, 60, 64, 68, 97, 107], "ck": 112, "cl": 109, "clamp": 3, "clarifi": 82, "class": [0, 3, 6, 9, 23, 28, 34, 45, 48, 84, 86, 89, 90, 94, 98, 110], "class_": 45, "class_0": 34, "class_1": 34, "classic": [0, 51, 68, 76, 86, 98, 106, 110, 112], "classif": [33, 42, 43, 89, 95, 109, 110, 111], "classifi": [110, 112], "clean": [38, 56, 110], "clean_graph": 38, "clean_zero": [107, 110], "cleanup": 110, "clear": 3, "clearli": [56, 112], "clement": [5, 66, 72, 76], "clf": [2, 3, 4, 5, 6, 9, 12, 17, 23, 25, 26, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 44, 47, 48, 53, 56, 60, 64, 65, 75, 79], "click": 83, "clip": [21, 25, 27, 39, 85, 107], "clone": [1, 3, 4, 5, 8, 83, 85], "close": [0, 30, 60, 86, 88, 92, 95, 97, 107, 112], "closest": [95, 107], "cloud": [16, 36, 56, 95], "cluster": [39, 95, 109], "cluster_std": 45, "cl\u00e9ment": [5, 66, 72, 76, 84], "cm": [13, 30, 38, 45, 47], "cmap": [3, 6, 11, 13, 14, 23, 30, 32, 35, 37, 38, 41, 45, 60, 69, 75, 78, 80], "cmp": 47, "cnorm": [30, 38], "cnr": [46, 47], "co": [9, 25, 39, 43, 49, 54, 59, 64, 66, 72, 87, 95, 107, 109, 110, 111], "co_optimal_transport": [44, 56], "co_optimal_transport2": [44, 56], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 89, 97, 104, 107, 110, 112], "code_of_conduct": 110, "codecov": 110, "codespel": 110, "coefffici": 95, "coeffici": [22, 28, 37, 86, 87, 95, 97, 99, 102], "coin": 112, "col": 85, "colla": [45, 90, 109], "collabor": 83, "collect": [4, 11, 12, 36, 49, 66, 75, 86], "collin": [86, 109], "color": [3, 5, 6, 7, 8, 11, 14, 16, 17, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 53, 54, 56, 60, 63, 66, 68, 72, 77, 78, 79, 80, 88, 101, 107, 110, 111, 112], "color_featur": 38, "color_sourc": 101, "color_target": 101, "colorbar": [3, 37, 39, 45, 60], "colormap": [3, 37, 41, 45, 47, 101], "column": [0, 7, 31, 33, 40, 43, 59, 62, 69, 86, 87, 95, 97, 102, 104, 106, 111], "com": [14, 20, 21, 22, 26, 27, 28, 31, 33, 35, 36, 38, 39, 40, 57, 58, 83, 85, 104, 107, 109, 110], "combin": [37, 99, 112], "come": [30, 83, 98, 110, 112], "command": 83, "comment": 82, "commit": [82, 83, 85, 110], "committ": 83, "common": [68, 83, 110, 112], "commun": [31, 33, 37, 39, 40, 41, 82, 112], "compar": [35, 38, 48, 54, 55, 60, 76, 83, 88, 110, 112], "comparison": [42, 43, 54, 60, 67, 70, 89, 101, 111, 112], "compat": [0, 60, 85, 86, 90, 91, 94, 95, 97, 98, 104, 105, 106, 107, 108, 110], "compil": [0, 68, 97, 109, 110, 112], "complaint": 82, "complement": 102, "complement_schur": 102, "complet": [56, 83, 110, 112], "complex": [0, 49, 95, 112], "complexwarn": 49, "compli": 83, "compliant": 110, "compon": [43, 46, 48, 59, 88, 90, 93, 107, 109, 110, 111, 112], "compos": 95, "compress": 85, "compromis": 83, "compt": 9, "comput": [0, 3, 7, 8, 9, 12, 37, 41, 43, 48, 54, 55, 56, 57, 61, 62, 66, 68, 71, 72, 74, 77, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110], "computation": 48, "compute_lr_sqeuclidean_matrix": [54, 96], "compute_next_remov": 102, "compute_transport_plan": 79, "con": [44, 56], "concaten": [6, 7, 16, 25, 39, 49, 53, 54, 66, 69, 76, 78, 80, 85, 102, 107], "concentr": 83, "concern": 110, "concret": 112, "concurr": 97, "conda": [60, 110, 112], "condit": [0, 32, 33, 35, 67, 68, 84, 85, 88, 91, 95, 97, 98, 99, 108, 109, 110, 112], "conduct": [0, 41, 95, 99], "confer": [0, 3, 4, 9, 14, 30, 31, 32, 33, 35, 37, 38, 40, 41, 48, 54, 55, 56, 58, 72, 76, 86, 88, 91, 92, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 109, 112], "confid": [71, 72], "confidenti": 82, "configur": 112, "cong": [0, 97], "conic": [95, 109], "conjug": [95, 104], "connect": [30, 31, 33, 37, 38, 40, 41], "connectionpatch": [44, 56], "consecut": 95, "consid": [0, 7, 8, 28, 30, 37, 39, 41, 44, 48, 54, 56, 82, 83, 86, 95, 96, 97, 100, 107, 112], "consist": [0, 36, 83, 85, 86, 97, 98, 106, 112], "const": 99, "constant": [0, 88, 95, 96, 98, 106], "constc": 95, "constitut": 102, "constrain": [62, 88, 104, 109, 110, 112], "constraint": [0, 33, 35, 51, 68, 86, 95, 96, 97, 98, 99, 104, 107, 110, 112], "construct": [13, 17, 36, 82, 85, 88, 102], "construct_augmented_h": 102, "consum": 68, "contact": 82, "contain": [0, 11, 12, 14, 39, 68, 75, 86, 87, 91, 93, 95, 97, 98, 102, 107, 108, 109, 110, 112], "contamin": 56, "context": 112, "contigu": 8, "continu": [10, 37, 43, 51, 86, 88, 97, 105, 110, 111, 112], "contrari": 66, "contribut": [0, 82, 86, 110, 112], "contributor": [82, 109, 110], "control": [68, 86, 88, 95, 97], "conv": 34, "conveni": 68, "convent": [85, 88], "converg": [0, 3, 16, 20, 22, 23, 24, 33, 35, 36, 55, 60, 67, 68, 76, 86, 88, 92, 95, 96, 97, 99, 109, 110, 112], "convers": [0, 97, 107], "convert": [0, 7, 21, 25, 27, 36, 68, 85, 88, 97, 98, 106, 107, 110], "convex": [0, 37, 43, 59, 64, 88, 97, 98, 99, 104, 109, 111, 112], "convolut": [19, 43, 84, 86, 109, 110, 111], "convolutional_barycenter2d": [13, 14, 86, 110], "convolutional_barycenter2d_debias": [14, 86, 110], "coo_matrix": [0, 85, 97], "coolwarm": 60, "coordin": [0, 13, 32, 36, 41, 85, 86, 87, 90, 95, 97, 98, 101, 105, 106, 107, 109, 112], "coordinate_grad_semi_du": 105, "coordsa": [44, 56], "coordsb": [44, 56], "coot": [44, 95, 107], "coot2": [44, 56], "coot_dist": 44, "copi": [0, 8, 11, 31, 33, 40, 41, 47, 75, 83, 85, 91, 95, 97, 108, 112], "core": [83, 110], "corenflo": [71, 84, 109], "corn": [0, 3, 31, 34, 37, 40, 41, 94, 95, 99, 109, 112], "corner": [13, 112], "corpetti": [86, 109], "correct": [82, 83, 97, 107, 109, 110], "correctli": [95, 110], "correl": [0, 38, 60, 107], "correspond": [0, 7, 8, 28, 38, 41, 60, 88, 90, 93, 95, 97, 98, 100, 102, 106, 109, 110, 112], "cosin": [0, 60, 107], "cost": [0, 22, 28, 35, 44, 49, 50, 51, 55, 56, 57, 58, 61, 62, 63, 64, 69, 74, 77, 86, 87, 88, 90, 91, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "cost_": [28, 88], "cost_factorized_x": [0, 54, 95], "cost_factorized_xt": [0, 54, 95], "cost_g": [95, 99, 110], "cost_norm": 107, "costfr": [95, 100], "costli": 60, "could": [82, 110], "counterpart": 38, "coupl": [0, 26, 43, 46, 54, 56, 59, 86, 87, 88, 91, 93, 95, 96, 101, 109, 110, 111, 112], "coupling_": [20, 22, 23, 24, 28, 88], "coupling_cmap": 101, "courti": [0, 3, 8, 9, 13, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 49, 56, 58, 60, 67, 72, 84, 86, 87, 88, 90, 94, 95, 97, 98, 99, 103, 105, 109, 112], "cov": [17, 47, 78], "cov_": [35, 50, 63, 71, 76, 78, 79, 80, 92], "cov_t": [35, 50, 63, 71, 76, 78, 79, 80, 92], "covari": [0, 68, 88, 89, 92, 93, 112], "coven": 82, "coverag": [83, 110], "coz": 84, "cp": 85, "cpick": [30, 38], "cpp": [7, 8, 68], "cprime": 30, "cpu": [0, 3, 4, 8, 85, 91, 95, 97, 108, 109, 110], "cr": [39, 95], "cr1": [39, 95], "cr2": [39, 95], "cr_1": [39, 95], "cr_2": 39, "creat": [11, 12, 14, 30, 34, 38, 39, 75, 82, 83, 84, 85, 101, 109, 110], "criterion": [0, 34, 95, 96, 112], "critic": 82, "croissant": 60, "cross": [36, 92, 95], "crossentropyloss": 34, "csgraph": [30, 38, 39], "csr": 95, "csr_matrix": 85, "csrc": 7, "ct": [92, 110], "ct01": 36, "ct02": 36, "ct13": 36, "ct23": 36, "ctm": 66, "ctp": 66, "cuaz": [0, 3, 31, 33, 34, 35, 37, 38, 39, 40, 41, 84, 94, 95, 99, 109, 112], "cuda": [0, 4, 8, 84, 110], "cudamat": 110, "cumsum": [77, 85, 100], "cumul": [37, 77, 85], "cumulative_cost": 77, "cupi": [85, 109, 110, 112], "cupybackend": 85, "current": [20, 83, 84, 87, 88, 95, 99, 102, 104, 109, 110], "current_gamma": 102, "current_loss": 95, "curv": [8, 39, 54, 56], "custom": [6, 110], "cuturi": [0, 9, 11, 12, 14, 33, 35, 48, 49, 54, 55, 58, 84, 86, 88, 90, 92, 95, 96, 97, 98, 100, 104, 105, 106, 109, 112], "cvf": [0, 103, 109, 112], "cvx": 12, "cvxopt": [97, 109, 110, 112], "cvxpy": [48, 88, 98, 110], "cw": 8, "cx": 95, "cy": 95, "cython": [109, 110, 112], "c\u00e9dric": [0, 31, 33, 35, 37, 38, 39, 40, 41, 84, 94, 95, 99, 109], "d": [0, 11, 12, 15, 25, 30, 33, 35, 37, 39, 43, 46, 47, 48, 59, 60, 67, 68, 76, 78, 86, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112], "d1": [44, 56], "d2": [23, 44, 56], "d_": [0, 95], "d_1": [39, 44, 56], "d_2": [39, 44, 56], "d_emd": 65, "d_emd2": 65, "d_i": 97, "d_sinkhorn": 65, "d_sinkhorn2": 65, "d_tv": 65, "da": [20, 21, 22, 23, 24, 25, 26, 27, 28, 84, 98, 110, 112], "daigon": 88, "daili": 28, "damodaran": [58, 88, 105, 109, 112], "danica": 109, "dark": [37, 110], "darkgrai": 53, "data": [0, 3, 4, 8, 14, 33, 35, 37, 39, 41, 48, 51, 60, 64, 83, 85, 86, 87, 88, 92, 93, 95, 97, 98, 107, 109, 110, 112], "data_path": [13, 14, 21, 25, 27, 36], "dataload": 34, "dataset": [0, 2, 8, 9, 11, 12, 14, 20, 22, 23, 24, 26, 28, 30, 35, 39, 45, 48, 49, 50, 51, 55, 57, 60, 61, 62, 63, 65, 67, 69, 71, 74, 75, 76, 78, 79, 80, 90, 95, 105, 107, 110, 112], "dataset_featur": [37, 41], "date": [85, 110], "david": [54, 55, 84, 109], "dc": [0, 97], "dcmtp": 66, "dcptm": 66, "de": [0, 86, 97, 109, 112], "deactiv": 110, "deal": [66, 95, 100], "debia": 86, "debias": [19, 43, 84, 86, 89, 107, 109, 110, 111, 112], "debug": [84, 97, 110], "dec": 23, "dec1": 23, "dec2": 23, "decai": 97, "decemb": [0, 85, 97, 109, 110, 112], "decent": 104, "declar": 36, "decompos": 95, "decomposit": [0, 36, 54, 95, 96], "decor": 107, "decreas": [86, 88, 98], "dect": 23, "deduc": [41, 95, 99], "deem": 82, "deep": 107, "def": [3, 4, 5, 6, 7, 9, 17, 18, 21, 23, 25, 27, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 47, 66, 67, 68, 69, 77, 79, 85, 99, 107], "default": [0, 3, 37, 41, 48, 60, 68, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 112], "defin": [0, 6, 9, 36, 44, 58, 60, 82, 85, 86, 88, 95, 97, 98, 102, 104, 107, 110, 112], "definit": [48, 85, 107, 112], "degre": [17, 47], "dehaen": [95, 109], "del": 9, "delet": [95, 102], "deliv": 60, "delon": [0, 18, 46, 47, 84, 88, 92, 93, 97, 109], "delta": [26, 27, 56, 102], "delta_": [0, 5, 32, 97, 103, 104, 112], "delta_j": 102, "delta_k": 7, "delta_omega": 104, "delta_u": 102, "deltag": [95, 99, 110], "demetci": [56, 95, 109], "demo": [19, 43, 81, 89, 107, 111, 112], "demonstr": [35, 77, 78, 83, 110], "denot": [37, 41, 60, 86, 88, 95, 97, 98], "dens": [0, 38, 39, 68, 85, 95, 97, 107], "densifi": 112, "densiti": [0, 93, 99, 108], "depend": [0, 37, 41, 85, 94, 95, 98, 99, 110, 112], "depict": 95, "deprec": [0, 8, 97, 100, 107], "depreci": 110, "depriv": 102, "deriv": [39, 106], "derogatori": 82, "descent": [0, 3, 7, 8, 33, 41, 51, 56, 87, 90, 92, 95, 96, 97, 98, 99, 109, 110, 112], "describ": [39, 60, 83, 86, 95], "descript": 83, "deshpand": [0, 103, 109, 112], "design": [13, 31, 35, 36, 40, 44, 48, 58, 67, 78, 80, 95, 102, 110, 112], "desir": [83, 86, 95, 97, 98, 107], "desolneux": [46, 88, 92, 93, 109], "det": [85, 110], "detach": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 34, 47, 56, 60, 85, 107], "detail": [0, 39, 46, 68, 82, 83, 85, 90, 92, 97, 110, 112], "detect": [43, 51, 59, 85, 87, 107, 111, 112], "determin": [82, 85, 86, 90, 93, 95, 105], "determinist": [0, 96], "develop": [83, 109, 110, 112], "devi": [86, 88], "devias": 110, "deviat": [85, 89, 94, 95], "devic": [4, 8, 85, 110, 112], "device_typ": 85, "devicecpugpu": 85, "df": [67, 68, 99, 112], "df_g": [95, 99, 110], "df_gc": 95, "dh": 86, "diag": [0, 60, 85, 86, 95, 96, 107, 112], "diagon": [3, 28, 30, 85, 92, 107], "dice": [0, 60, 107], "dict": [0, 37, 69, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108], "dictionari": [0, 3, 42, 43, 68, 84, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "did": [16, 20, 22, 23, 24, 33, 35, 55, 60, 67, 68, 95, 99, 110], "differ": [0, 3, 10, 18, 33, 39, 43, 51, 54, 55, 56, 60, 68, 69, 70, 82, 86, 87, 88, 95, 97, 101, 106, 107, 109, 110, 111, 112], "differenti": [0, 7, 8, 56, 68, 95, 109, 110, 112], "difficult": 112, "diffus": [4, 109, 112], "dim": [0, 5, 34, 36, 86, 96, 97, 103, 106, 107], "dim0": 85, "dim1": 85, "dim_a": [0, 86, 95, 96, 100, 102, 106], "dim_b": [0, 86, 95, 96, 100, 102, 106], "dim_prior": 86, "dim_x": [0, 95], "dim_xt": [0, 95], "dimens": [0, 8, 36, 49, 85, 86, 90, 92, 94, 95, 97, 100, 102, 103, 106, 109, 110], "dimension": [0, 35, 43, 59, 68, 78, 86, 89, 90, 95, 97, 109, 110, 111, 112], "dimensionali": 39, "dirac": [0, 15, 50, 63, 97, 100], "direct": [0, 37, 41, 56, 65, 97, 99, 104, 109, 110], "directli": [0, 60, 68, 95, 100, 112], "directori": 83, "disabl": [82, 112], "discard": [38, 49, 95], "discrep": [0, 72, 95, 100, 103], "discret": [0, 21, 26, 27, 37, 41, 51, 67, 77, 84, 86, 88, 97, 98, 99, 105, 109, 110, 112], "discrimin": [43, 59, 90, 109, 110, 111], "discuss": [68, 88, 92, 95, 99, 109, 110, 112], "disjoint": 112, "disk": 83, "disp": 88, "displac": [0, 65, 97, 107, 109, 112], "displai": [14, 22, 28, 60, 86], "dissimilar": [3, 36, 37, 41], "dist": [0, 1, 7, 9, 22, 30, 32, 38, 39, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 74, 75, 76, 79, 80, 90, 93, 95, 102, 107, 110, 112], "dist0": [11, 12, 14, 75], "dist_bures_squar": 93, "distanc": [0, 4, 9, 10, 30, 31, 34, 36, 37, 38, 40, 44, 46, 47, 54, 60, 68, 70, 72, 73, 77, 84, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 100, 103, 104, 106, 107, 109, 110, 111], "distribut": [0, 1, 2, 3, 4, 5, 6, 8, 9, 11, 12, 13, 14, 19, 25, 26, 29, 32, 36, 39, 43, 46, 48, 50, 52, 54, 55, 59, 60, 64, 65, 66, 67, 68, 70, 73, 76, 77, 79, 80, 81, 84, 86, 87, 88, 89, 91, 92, 93, 95, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111], "distribution_estim": 88, "distribution_estimation_uniform": 88, "div": [80, 95, 106], "div_between_product": 95, "div_m": 106, "div_to_product": 95, "diverg": [0, 9, 38, 41, 56, 65, 80, 85, 86, 95, 99, 106, 109, 110, 112], "divid": [33, 35, 60, 66, 75], "divis": [60, 88], "dizier": [18, 97, 109], "dl": 56, "dmmot": 51, "dmmot_monge_1dgrid_loss": 97, "dmmot_monge_1dgrid_optim": [51, 97], "dmmot_obj": 51, "do": [0, 9, 22, 28, 35, 60, 78, 82, 83, 85, 86, 97, 107, 110, 112], "doc": [9, 83, 85, 110], "docstr": [83, 107, 110], "doctest": [83, 110], "document": [60, 84, 85, 109, 110, 112], "dodgerblu": 48, "doe": [0, 6, 60, 68, 83, 85, 95, 110, 112], "doesn": [0, 86, 95, 96], "doi": 56, "dokl": 97, "domain": [0, 28, 29, 31, 33, 67, 68, 86, 88, 89, 90, 92, 95, 96, 97, 98, 99, 101, 103, 104, 106, 107, 109, 110, 111], "don": 97, "done": [0, 7, 53, 56, 60, 68, 95, 107, 110, 112], "dot": [7, 11, 12, 17, 23, 25, 31, 33, 35, 40, 51, 52, 60, 75, 78, 85, 107], "doubl": [6, 56, 60], "doucet": [86, 97, 109, 112], "down": 101, "download": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80], "dpi": 53, "dr": [0, 45, 49, 109, 110, 112], "draw": 38, "draw_cov": [17, 47], "draw_gmm": 47, "draw_graph": [31, 33, 38, 39, 40], "draw_networkx": [30, 34, 38], "draw_networkx_edg": [31, 33, 38, 39, 40], "draw_networkx_nod": [31, 33, 38, 39, 40], "draw_transp_color": 38, "draw_transp_colored_gw": 33, "draw_transp_colored_qgw": 39, "draw_transp_colored_srgw": [31, 40], "drawn": [9, 89, 101], "dric": 109, "drumetz": [0, 72, 97, 103, 109], "dt": [92, 95], "dtype": [8, 11, 12, 14, 51, 57, 61, 62, 65, 67, 69, 71, 72, 74, 75, 85, 86, 110], "dtype_devic": 85, "du": 110, "dual": [0, 9, 10, 12, 43, 51, 68, 86, 87, 89, 91, 93, 95, 97, 101, 104, 105, 106, 107, 108, 109, 110, 111, 112], "dual_loss": 105, "dual_obj_grad": 104, "dualiti": [0, 108, 109, 112], "duals_featur": [87, 95], "duals_sampl": [87, 95], "duck": [13, 14, 15], "due": [0, 88, 97, 101, 110, 112], "duke": [33, 35, 95, 109], "dummi": [95, 99, 100, 110], "duplic": 83, "durat": 83, "dure": [95, 97], "durif": [86, 109], "durmu": [4, 109, 112], "dykstra": [0, 55, 95, 96], "e": [0, 39, 56, 82, 86, 92, 94, 95, 97, 98, 99, 103, 107, 109, 112], "e_k": [48, 88, 98], "each": [0, 7, 9, 30, 33, 34, 37, 39, 41, 60, 68, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 104, 105, 106, 107, 109, 110, 112], "earli": [87, 110], "early_stopping_tol": 87, "earth": [0, 88, 97, 109, 110], "eas": 41, "easi": [83, 109, 112], "easier": [109, 112], "easili": [60, 97, 112], "eather": 90, "ec": 60, "ecml": [39, 95, 109], "eco": [98, 110], "edg": [31, 33, 34, 39, 40, 94], "edge_color": [31, 33, 38, 39, 40], "edge_index": [34, 94], "edgecolor": [3, 16, 17, 37, 41, 45, 47], "edgelist": [31, 33, 38, 39, 40], "edgelist_activ": [31, 33, 38, 40], "edgelist_deactiv": [31, 33, 38, 40], "edit": [82, 83], "editor": 83, "edu": [1, 2, 3, 4, 6, 7, 8, 9, 15, 17, 18, 46, 47, 50, 51, 52, 53, 112], "eduardo": [15, 16, 84, 109], "effect": [85, 112], "effici": [0, 68, 84, 86, 97, 100, 109, 110, 112], "eigenvalu": [85, 88, 92, 107], "eigenvector": 85, "eigh": [17, 47, 85], "eigsort": [17, 47], "einstein": 85, "einsum": 85, "either": [0, 26, 80, 86, 88, 90, 92, 95, 97, 106, 107], "elaps": [0, 12, 32, 107], "electron": 82, "elem": 39, "element": [28, 30, 60, 68, 85, 86, 88, 95, 97, 100, 101, 102, 107], "elev": 18, "eleventh": [97, 104, 109], "elif": [13, 31, 33, 37, 38, 40], "elig": 83, "eliminate_zero": 85, "ell": [17, 47], "ell_1": 80, "ell_2": [79, 80, 106], "ellips": [17, 47], "eloi": [18, 46, 47, 48, 84, 109], "els": [0, 3, 4, 8, 13, 18, 23, 30, 31, 33, 37, 38, 39, 40, 41, 45, 51, 66, 77, 88, 90, 92, 94, 95, 106], "email": 83, "emb": 95, "embed": [10, 33, 34, 35, 36, 43, 95, 109, 111, 112], "embedding_": 36, "embeddings_for_tsn": 34, "emd": [0, 20, 22, 24, 32, 50, 52, 53, 64, 68, 84, 86, 87, 88, 95, 97, 98, 99, 100, 103, 104, 106, 108, 109, 110], "emd2": [0, 7, 9, 65, 68, 84, 97, 106, 109, 110], "emd2_1d": [0, 97, 110, 112], "emd_1d": [0, 61, 97, 110, 112], "emd_1d_sort": 97, "emd_laplac": 88, "emdlaplacetransport": 24, "emdtransport": [20, 21, 22, 24, 27, 110, 112], "emonet": [35, 95, 109, 112], "empathi": 82, "emphas": 41, "empir": [0, 3, 4, 29, 43, 52, 64, 68, 70, 84, 86, 88, 89, 91, 92, 97, 101, 107, 108, 109, 110, 111, 112], "empirical_bures_wasserstein_barycent": 92, "empirical_bures_wasserstein_dist": 68, "empirical_bures_wasserstein_map": 25, "empirical_gaussian_gromov_wasserstein_dist": 92, "empirical_gaussian_gromov_wasserstein_map": 25, "empirical_sinkhorn": [63, 68, 86, 112], "empirical_sinkhorn2": [86, 112], "empirical_sinkhorn2_geomloss": [68, 86], "empirical_sinkhorn_diverg": [86, 110, 112], "emploi": 88, "empti": [0, 71, 72, 76, 88, 91, 97, 106, 107, 108, 110], "en": [34, 112], "enabl": 110, "enable_numpy_behavior": 85, "encod": [37, 39, 41, 88, 95, 107], "encount": [24, 33, 35, 66, 75], "encourag": 110, "end": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 88, 97, 98, 102, 112], "end_bapg": 33, "end_cg": 33, "end_pgd": 33, "end_ppa": 33, "endow": [31, 33, 39, 40, 95], "endpoint": 66, "enforc": [8, 48, 88, 110, 112], "enhanc": [83, 110], "enough": [0, 30, 56, 86, 90, 112], "ensa": 76, "ensur": [8, 83, 112], "entri": [62, 85, 93, 97], "entrop": [0, 10, 16, 19, 33, 35, 42, 43, 59, 69, 78, 81, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 100, 101, 104, 105, 106, 107, 108, 109, 110, 111], "entropi": [0, 57, 68, 74, 85, 86, 90, 95, 96, 104, 106, 109, 112], "entropic_fused_gromov_barycent": [95, 110], "entropic_fused_gromov_wasserstein": [33, 68, 95], "entropic_fused_gromov_wasserstein2": [68, 95], "entropic_gromov_barycent": [95, 112], "entropic_gromov_wasserstein": [35, 54, 68, 95, 112], "entropic_gromov_wasserstein2": [68, 95], "entropic_gw_loss": 54, "entropic_kl_uot": [76, 80], "entropic_kl_uot_ti": 76, "entropic_partial_fused_gromov_wasserstein": [38, 95], "entropic_partial_fused_gromov_wasserstein2": 95, "entropic_partial_gromov_wasserstein": [38, 78, 95, 100, 112], "entropic_partial_gromov_wasserstein2": [95, 100], "entropic_partial_wasserstein": [78, 100, 112], "entropic_semirelaxed_fused_gromov_wasserstein": [31, 95], "entropic_semirelaxed_fused_gromov_wasserstein2": 95, "entropic_semirelaxed_gromov_wasserstein": [31, 95], "entropic_semirelaxed_gromov_wasserstein2": 95, "enumer": [11, 14, 30, 31, 33, 37, 38, 39, 40, 41, 45, 65, 66, 69, 71, 72, 75], "envelop": [0, 1, 110], "environ": [82, 110, 112], "ep": [0, 9, 14, 36, 46, 47, 68, 85, 88, 92, 97], "epoch": [34, 37, 95], "eponym": 112, "epsilon": [0, 14, 31, 33, 35, 54, 56, 57, 68, 74, 86, 87, 95, 106, 110, 112], "epsilon0": 86, "eq": [95, 104], "equal": [0, 23, 48, 53, 64, 85, 95, 97, 102, 107], "equal_nan": 85, "equat": [85, 86, 95, 98, 105, 112], "equip": 95, "equival": [0, 60, 61, 68, 88, 92, 95, 98, 100, 106, 107], "err": [23, 33, 35, 61, 76, 78], "err0": 35, "err_bapg": 33, "err_cg": 33, "err_pgd": 33, "err_ppa": 33, "err_sinkhorn_uot": 76, "err_sinkhorn_uot_ti": 76, "error": [0, 8, 30, 33, 35, 37, 75, 83, 85, 86, 88, 90, 95, 96, 97, 98, 100, 104, 106, 109, 110, 112], "erwan": [35, 36, 84], "esp": 45, "especi": [95, 100, 112], "est": 3, "esteban": [86, 97, 109], "estim": [0, 10, 23, 29, 32, 33, 35, 43, 48, 51, 58, 68, 83, 84, 86, 88, 89, 92, 95, 98, 99, 105, 107, 109, 110, 111], "et": [0, 4, 71, 79, 86, 97, 103, 109, 112], "eta": [0, 8, 26, 27, 88, 97, 98], "etc": [83, 87], "ethnic": 82, "etienn": [23, 24], "euclidean": [0, 12, 30, 31, 33, 38, 39, 40, 53, 56, 60, 64, 65, 68, 86, 88, 90, 95, 96, 97, 98, 104, 107, 110, 112], "euclidean_dist": 107, "eval_bcd": [87, 95], "evalu": [0, 85, 86, 87, 93, 95, 96, 97, 110], "even": [0, 11, 12, 75, 78, 85, 86, 110, 112], "evenli": 85, "event": 82, "everi": [8, 37, 41, 48, 83, 87, 88, 95, 109], "everyon": 82, "evolut": [8, 37, 66, 86, 95, 109], "exact": [0, 19, 38, 43, 59, 67, 69, 81, 86, 89, 95, 100, 101, 107, 109, 110, 111, 112], "exactli": 112, "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 37, 38, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 85, 86, 95, 97, 100, 103, 106, 110, 111], "except": 83, "execut": [10, 19, 29, 42, 59, 70, 73, 81, 97, 110, 111, 112], "exempl": 110, "exhibit": [28, 88], "exist": [24, 78, 85, 86, 110, 112], "exit": [0, 91, 93, 97, 108, 110], "exp": [6, 24, 60, 66, 85, 90, 105, 112], "exp_": 107, "exp_bur": 107, "expect": [0, 9, 56, 82, 83, 86, 107, 109, 112], "expens": 48, "experi": 82, "experienc": 83, "explan": 83, "explicit": [22, 28, 82, 88, 107], "explicitli": [0, 90, 94, 98, 101, 106, 110], "expon": 85, "exponenti": [85, 86, 107], "export": 112, "express": [3, 7, 82, 112], "extend": [110, 112], "extens": [37, 41, 109, 110], "extra": 107, "extract": [60, 85, 107], "extrem": [37, 41], "ey": [3, 37, 38, 41, 47, 85], "f": [0, 4, 5, 11, 14, 21, 27, 31, 32, 34, 37, 38, 39, 40, 41, 45, 48, 56, 58, 60, 67, 68, 72, 75, 76, 77, 85, 86, 87, 88, 90, 94, 95, 97, 99, 100, 103, 105, 106, 107, 109, 110, 112], "f1": [13, 14, 39, 95], "f2": [13, 14, 31, 33, 39, 40, 95], "f3": [13, 31, 33, 40], "f4": 13, "f_1": [39, 95], "f_2": [31, 39, 40, 95], "f_3": [31, 40], "f_u": [0, 97], "f_v": [0, 97], "fa": 99, "face": [82, 95, 100], "facecolor": [11, 17, 45, 47, 53, 75], "fact": 98, "factor": [0, 43, 55, 59, 85, 95, 96, 101, 107, 109, 110, 111, 112], "factored_optimal_transport": [0, 52, 68, 91], "factored_solut": 0, "factored_solution_lazi": 0, "facundo": [0, 95, 109, 112], "fail": [83, 97, 110, 112], "fair": 82, "faith": 82, "fals": [0, 1, 14, 27, 30, 31, 33, 34, 37, 38, 39, 40, 41, 45, 51, 54, 55, 56, 57, 60, 66, 69, 72, 79, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112], "far": 112, "fast": [0, 61, 86, 95, 97, 109, 110, 112], "faster": [0, 68, 76, 97, 106, 109, 110], "fatom": 37, "fatra": [9, 58, 63, 84, 109], "fatras2019": 9, "favor": 112, "fc": [95, 99], "fc1": [6, 9], "fc2": [6, 9], "fc2t": 95, "fc3": 9, "fda": [49, 112], "feasibl": [33, 35], "featur": [0, 30, 33, 34, 38, 39, 56, 83, 86, 87, 94, 95, 109], "feature_init_mean": [34, 94], "feature_init_std": [34, 94], "feed": 110, "feel": 83, "feickert": 109, "fernand": [15, 16, 84, 109], "ferradan": [21, 27, 67, 88, 99, 109, 112], "ferri": 97, "fetch": [92, 107], "few": [48, 60, 68, 110], "feydi": [0, 86, 109, 112], "fgw": [0, 31, 33, 40, 42, 43, 68, 84, 94, 95, 99, 109, 110, 111], "fgw_": [94, 95], "fgw_alpha": [31, 40], "fgw_barycent": [30, 95, 110, 112], "fgw_dist": [31, 33, 40, 95], "fgw_distance_to_templ": 94, "fi": [71, 75], "fiction": 60, "fig": [5, 13, 14, 16, 18, 35, 36, 39, 44, 45, 54, 56, 64, 72, 78], "figsiz": [1, 8, 12, 13, 14, 16, 18, 20, 21, 22, 24, 25, 27, 28, 30, 31, 33, 34, 36, 38, 39, 40, 45, 46, 49, 51, 54, 55, 56, 57, 58, 61, 62, 64, 67, 69, 72, 74, 75, 77], "figur": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 77, 78, 79, 80, 83], "file": [10, 19, 29, 42, 43, 53, 59, 68, 70, 73, 81, 110, 111, 112], "fill": [17, 28, 47, 74, 85, 88], "fill_between": [66, 71, 72, 76], "fill_diagon": [30, 37, 41], "fill_valu": 85, "filter": [56, 112], "final": [86, 99, 110, 112], "final_gamma": 79, "financ": [84, 109], "find": [0, 30, 36, 58, 85, 97, 98, 99, 109, 110, 112], "find_thresh": 30, "finit": [0, 85, 86, 97, 107, 112], "first": [0, 3, 4, 7, 31, 32, 34, 35, 37, 38, 39, 40, 41, 48, 56, 68, 69, 83, 85, 86, 87, 88, 95, 96, 97, 98, 102, 104, 106, 107, 109, 112], "fisher": [90, 100, 112], "fit": [9, 25, 27, 28, 36, 48, 86, 88, 97, 98, 107, 110, 112], "fit_transform": [3, 34, 36, 37, 41, 88], "fiw": 110, "fix": [0, 37, 41, 47, 56, 83, 86, 90, 92, 94, 95, 97, 100, 104, 109, 110], "fixed_featur": [95, 110], "fixed_point": 92, "fixed_structur": [95, 110], "fixedloc": 45, "flag": 110, "flake8": 110, "flamari": [0, 2, 3, 4, 6, 7, 8, 9, 11, 12, 15, 17, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 44, 45, 46, 47, 49, 50, 52, 53, 56, 58, 60, 61, 62, 63, 64, 65, 67, 68, 69, 79, 84, 86, 87, 88, 90, 94, 95, 98, 99, 102, 105, 106, 109, 112], "flamary2021pot": 109, "flamary2024pot": 109, "flatten": 102, "flexibl": [68, 110], "flip": 85, "float": [0, 2, 6, 7, 8, 9, 13, 17, 30, 36, 49, 51, 56, 60, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "float32": 16, "float64": [0, 3, 4, 8, 11, 12, 14, 15, 18, 21, 23, 25, 27, 33, 35, 36, 38, 51, 53, 57, 61, 62, 65, 67, 69, 74, 75, 86, 97, 100], "floor": [49, 85], "florenc": [0, 97, 109], "flow": [10, 43, 59, 89, 93, 107, 109, 110, 111, 112], "fluid": [41, 95], "fluid_fus": 95, "fluid_soft": 95, "fly": 107, "fn": [6, 9], "focus": 82, "folder": [83, 109, 110], "follow": [0, 7, 8, 9, 12, 36, 39, 56, 60, 68, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 110, 112], "fontsiz": [8, 14, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 45, 46, 47, 60, 69, 72, 77, 79], "fontweight": 60, "foral": [0, 86, 95, 97, 98, 103, 107], "forc": [0, 85, 112], "forg": [60, 112], "fork": 83, "form": [0, 7, 9, 39, 60, 68, 88, 92, 95, 97, 99, 102, 107, 110, 112], "formal": [0, 86, 97], "format": [0, 2, 3, 4, 5, 6, 9, 23, 39, 44, 54, 60, 79, 83, 85, 94, 95, 97, 107, 109, 110], "format_partitioned_graph": [39, 95], "format_partitioned_sampl": 95, "formul": [0, 38, 95, 100, 104, 109, 112], "formula": 68, "forrow": [0, 91, 109, 112], "forward": [6, 9, 34, 94, 112], "foster": [82, 112], "found": [0, 30, 51, 68, 83, 88, 95, 98, 112], "foundat": [0, 92, 95, 100, 109, 110, 112], "four": [13, 36, 95], "fournier": 109, "fr": [5, 8, 11, 12, 13, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 35, 36, 37, 41, 44, 45, 46, 47, 48, 49, 54, 55, 56, 61, 62, 63, 64, 65, 66, 69, 72, 74, 75, 76, 78, 79, 80, 95], "fr_1": 95, "frac": [0, 5, 44, 56, 86, 88, 90, 95, 97, 100, 102, 103, 104, 105, 107, 108, 112], "fraction": 60, "frame": 18, "framework": [8, 37, 41, 110], "frank": [0, 76, 95, 106, 109], "fran\u00e7oi": [48, 88, 95, 98, 109], "frechet": [86, 97], "free": [19, 43, 82, 83, 84, 86, 92, 97, 100, 109, 110, 111], "free_support_barycent": [15, 86, 97, 110, 112], "free_support_sinkhorn_barycent": [15, 16, 86], "friend": 83, "frob": 67, "frobeniu": 85, "frogner": [0, 106, 109, 112], "from": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 19, 21, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "from_numpi": 85, "from_numpy_arrai": 30, "front": 110, "fr\u00e9chet": 112, "fugw": 95, "fugw_cost": 95, "full": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 85, 86, 105, 107, 109, 110], "fulli": 56, "fully_relaxed_path": 102, "fun": [51, 60, 107], "fun_numpi": 107, "fun_to_numpi": [107, 110], "func": [85, 107], "funcanim": [4, 5, 9, 18, 79], "function": [5, 8, 13, 36, 39, 48, 60, 68, 69, 79, 83, 86, 94, 95, 97, 100, 106, 109, 110, 112], "fundament": 110, "fung": [97, 109], "further": [33, 39, 60, 82, 83, 95, 110], "fuse": [0, 42, 84, 94, 95, 109, 110, 111, 112], "fused_gromov_wasserstein": [0, 31, 32, 33, 40, 68, 95, 110, 112], "fused_gromov_wasserstein2": [0, 68, 95, 110], "fused_gromov_wasserstein_dictionary_learn": [37, 95], "fused_gromov_wasserstein_linear_unmix": [37, 95], "fused_unbalanced_across_spaces_cost": 95, "fused_unbalanced_across_spaces_diverg": 95, "fused_unbalanced_gromov_wasserstein": 95, "fused_unbalanced_gromov_wasserstein2": 95, "fusion": 112, "futur": [8, 86, 100, 110], "futurewarn": [3, 37, 41], "fw": 95, "fx": 39, "fy": 39, "f\u00e9vott": [0, 79, 102, 106, 109], "g": [0, 5, 9, 11, 12, 21, 23, 27, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 48, 51, 54, 55, 57, 58, 60, 61, 63, 67, 68, 69, 74, 75, 76, 78, 79, 86, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110], "g0": [0, 31, 38, 40, 41, 50, 52, 61, 63, 67, 95, 99, 100, 106, 108, 110], "g1": [31, 33, 38, 39, 40, 64, 69], "g2": [31, 33, 38, 39, 40, 64, 69], "g3": [31, 33, 40], "g_": 9, "g_1": 98, "g_edg": 94, "g_featur": 94, "g_i": 98, "g_j": 98, "g_list": [79, 102], "g_list2": 79, "g_list_v": 79, "g_lu": [48, 88, 98], "g_n": 98, "g_screen": 57, "g_unb_kl": 68, "ga": [0, 52, 91], "gabriel": [0, 9, 33, 35, 84, 86, 95, 100, 109, 112], "gain": [86, 95], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 109, 110, 111], "gamma": [0, 60, 79, 80, 86, 88, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 112], "gamma_": [0, 60, 86, 88, 97, 99, 100, 105, 106, 108, 112], "gamma_a": 86, "gamma_b": 86, "gamma_init": [0, 55, 95, 96], "gamma_k": 86, "gamma_list": 102, "gan": [0, 10, 43, 103, 109, 110, 111, 112], "ganea": [94, 109], "gaspard": 112, "gasso": [0, 38, 57, 78, 79, 86, 95, 99, 100, 102, 106, 109, 112], "gather": [85, 88, 98], "gauss": [8, 55, 57, 61, 62, 65, 69, 74, 88], "gaussian": [0, 1, 8, 9, 11, 19, 25, 26, 27, 30, 43, 46, 47, 51, 55, 57, 61, 62, 65, 67, 69, 74, 75, 84, 85, 88, 89, 93, 98, 107, 109, 110, 111, 112], "gaussian_gromov_wasserstein_dist": 92, "gaussian_gromov_wasserstein_map": 92, "gaussian_logpdf": 93, "gaussian_pdf": 93, "gaussien": 92, "gaussrot": [2, 26], "gautheron": [84, 109], "gayraud": [84, 109], "gb": [0, 52, 91], "gc": 95, "gca": [17, 45, 47, 77], "gcf": [4, 5, 9, 11, 75, 79], "gcg": [67, 88, 112], "gcg_linesearch": 99, "gcnconv": 34, "ge": [2, 63, 67], "gel2": 67, "gen": 4, "gender": 82, "gener": [0, 1, 4, 8, 12, 13, 14, 17, 19, 35, 36, 43, 44, 48, 53, 58, 60, 64, 66, 68, 70, 76, 77, 78, 83, 84, 85, 86, 88, 89, 90, 91, 93, 95, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111], "generalized_free_support_barycent": [18, 97], "generic_conditional_gradi": [99, 110], "genevai": [9, 58, 86, 105, 109, 112], "genevay2018": 9, "geoloss": 68, "geometr": [86, 94, 109, 110, 112], "geometri": [39, 95], "geometricbar": 86, "geometricmean": 86, "geomloss": [0, 68, 86, 109, 110, 112], "geomloss_multiscal": 0, "geomloss_onlin": 0, "geomloss_tensor": 0, "geq": [0, 80, 86, 88, 95, 97, 98, 99, 100, 102, 105, 106, 107, 108, 112], "gerber": [92, 109], "get": [0, 3, 31, 33, 36, 37, 39, 40, 41, 68, 86, 88, 90, 95, 97, 107, 109, 110, 112], "get_available_backend_implement": 85, "get_backend": [85, 110], "get_backend_list": 85, "get_cmap": [11, 45, 75], "get_coordinate_circl": [0, 97, 107], "get_data": 9, "get_graph_partit": [39, 95], "get_graph_represent": [39, 95], "get_loss": 7, "get_lowrank_lazytensor": 107, "get_node_attribut": [30, 38], "get_param": 107, "get_parameter_pair": 107, "get_partition_and_representants_sampl": [39, 95], "get_plan_from_du": 104, "get_plan_from_semi_du": 104, "get_random_project": 103, "get_sbm": 3, "get_tick": 45, "get_ytick": 45, "getitem": 107, "gfk": 99, "gg": [6, 32], "gist": 83, "git": 83, "github": [60, 83, 85, 104, 107, 109, 110, 112], "gitter": 109, "give": [22, 28, 60, 80, 83, 85, 95, 100, 101, 102, 110], "given": [0, 3, 31, 33, 36, 37, 40, 41, 48, 56, 60, 68, 85, 86, 88, 90, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 112], "gl1": 69, "gl2": [67, 69], "glad": 83, "glaun": [86, 109], "glenn": [97, 109], "global": [39, 48, 88, 95, 107, 110], "glpk": 97, "gmail": [14, 20, 21, 22, 26, 27, 28, 31, 33, 35, 36, 38, 39, 40, 57, 58], "gmm": [43, 59, 84, 101, 107, 110, 111], "gmm_ot_apply_map": 46, "gmm_ot_loss": 47, "gmm_ot_plan": 93, "gmm_ot_plan_dens": 46, "gmm_pdf": 46, "gmmot": 84, "gnassoun": [84, 109], "gnn": [34, 84, 109, 110], "go": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 110], "goal": [85, 105], "goe": [86, 109, 112], "gold": [14, 85], "good": [39, 60, 82, 83, 112], "googl": 60, "gori": [86, 109], "got": 32, "gozlan": [0, 18, 97, 108, 109, 112], "gp": 64, "gpl": 109, "gpu": [0, 84, 85, 86, 91, 95, 97, 108, 109, 110], "gq": 2, "gracefulli": 82, "grad": [0, 1, 3, 4, 5, 7, 8, 49, 56, 85, 95, 104, 105, 110], "grad_alpha": 104, "grad_beta": 104, "grad_gl": 69, "grad_x": 5, "gradient": [0, 3, 7, 8, 9, 10, 32, 33, 35, 43, 48, 49, 51, 56, 60, 67, 68, 84, 85, 86, 88, 90, 91, 92, 95, 97, 98, 99, 100, 102, 104, 105, 107, 108, 109, 110, 111, 112], "gradient_desc": 92, "gradient_lipschitz_const": [48, 88, 98], "gradnorm": 51, "grai": [5, 72], "gramfort": [14, 84, 86, 109, 112], "grant": 83, "graph": [0, 32, 35, 38, 42, 43, 60, 84, 85, 94, 95, 99, 109, 110, 111, 112], "graph_color": [30, 38], "graph_compression_gw": 3, "graphdata": 34, "graphic": [0, 86, 97, 109, 110, 112], "graphs1": 34, "graphs2": 34, "gray_r": 101, "great": 83, "greater": [22, 28, 110], "greatli": [83, 110, 112], "greedi": [0, 86, 109, 110, 112], "green": [6, 8], "greenkhorn": [0, 84, 86, 110, 112], "grei": [14, 37, 45, 51, 69], "gribonv": 9, "grid": [2, 5, 6, 7, 9, 72, 76], "gridspec": 32, "gromov": [0, 10, 30, 42, 56, 59, 81, 84, 88, 89, 92, 94, 99, 100, 107, 109, 110, 111], "gromov_barycent": [0, 36, 95, 110, 112], "gromov_wasserstein": [0, 3, 31, 32, 35, 40, 68, 95, 110, 112], "gromov_wasserstein2": [0, 3, 68, 95, 110, 112], "gromov_wasserstein_dictionary_learn": [37, 95], "gromov_wasserstein_linear_unmix": [37, 95], "gromovwasserstein": [0, 54, 95], "ground": [0, 43, 54, 65, 70, 86, 88, 97, 101, 104, 105, 106, 109, 111, 112], "group": [0, 20, 22, 88, 109, 110], "grow": 112, "gsc": 62, "gsm": 62, "guerda": 110, "guess": [0, 99, 108], "guiba": [86, 109, 112], "guid": [43, 70, 83, 92, 99, 101, 104, 107, 109, 110, 111], "guidelin": [83, 109], "gw": [0, 25, 31, 38, 39, 40, 54, 95, 99, 100, 109, 110], "gw0": 35, "gw0_sparsiti": 35, "gw_2": 95, "gw_dist": [0, 31, 35, 40, 54, 95], "gw_dist_estim": 35, "gw_dist_std": 35, "gw_distance_estim": 95, "gw_e": 38, "gw_sparsiti": 35, "gwe": 35, "gwe_spars": 35, "gweak": 50, "gweight": [31, 33, 38, 40], "gwg": 32, "gwggrad": [95, 100], "gwgrad_parti": 100, "gwloss": [95, 100], "gwloss_parti": 100, "h": [0, 7, 14, 17, 30, 33, 35, 47, 56, 79, 86, 89, 90, 94, 95, 96, 98, 102, 106, 107, 109, 112], "h0": 86, "h1": [39, 95], "h2": [7, 31, 33, 39, 40, 95], "h3": [31, 33, 40], "h_": 102, "h_1": 95, "h_2": [31, 40, 95], "h_3": [31, 40], "h_a": 102, "h_augment": 102, "h_c": 102, "h_r": 102, "h_re": 23, "ha": [0, 3, 7, 9, 60, 84, 86, 88, 95, 97, 98, 100, 106, 107, 109, 110, 112], "habrard": [26, 27, 88, 98, 109, 112], "half": [5, 69, 95, 106], "ham": [0, 60, 107, 110], "hand": 83, "handl": [6, 8, 83, 106, 107, 110, 112], "handler": 6, "haoran": 79, "happen": 110, "happi": 110, "harass": 82, "hard": [110, 112], "harm": 82, "have": [0, 9, 28, 37, 38, 39, 41, 60, 68, 82, 83, 85, 95, 97, 101, 106, 107, 110, 112], "hbar2": [31, 40], "hbar3": [31, 40], "hc": 102, "hc1": 95, "hc2": 95, "heart": [13, 14, 18], "heavisid": [6, 9], "heidrich": [0, 97, 109, 112], "height": [17, 47, 86], "help": [36, 83, 110, 112], "henc": [39, 95], "here": [3, 5, 41, 68, 79, 95, 97, 109, 110, 112], "heurist": [95, 110], "hi": 112, "hicham": [14, 74, 75, 84, 109], "hidden": 68, "high": [37, 41, 83, 97, 110], "higher": [60, 95, 100, 104, 110], "highest": [0, 97], "highlight": [83, 110], "highlight_rep": 39, "histogram": [0, 56, 86, 87, 89, 91, 95, 96, 97, 100, 102, 104, 106, 107, 108, 109, 110, 112], "hit": 110, "hold": 83, "home": [3, 6, 7, 8, 16, 20, 22, 23, 24, 33, 35, 37, 38, 41, 49, 51, 55, 57, 60, 66, 67, 68, 75, 78], "hook": 83, "hopefulli": 110, "horizont": 53, "host": 110, "hot": [37, 41], "how": [13, 26, 31, 34, 35, 36, 37, 38, 39, 40, 41, 44, 48, 58, 60, 65, 66, 68, 77, 78, 80, 86, 110], "howev": [95, 112], "hr": 102, "hra": 102, "hrhr": 102, "hstack": [34, 49], "hth": 102, "html": [6, 60, 83, 85, 109], "http": [6, 56, 57, 60, 64, 82, 85, 86, 104, 107, 109, 110, 112], "hty": 102, "hu": [0, 103, 109, 112], "huang": [84, 90, 109, 112], "huge": 110, "hui": [44, 56, 109], "hundries": [0, 97, 109], "hx": 39, "hy": 39, "hyperparam": 95, "hyperparamet": [0, 95, 106], "hyperspectr": [86, 109], "h\u00fctter": [0, 91, 109, 112], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 17, 18, 23, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 56, 57, 58, 60, 63, 65, 66, 68, 69, 71, 72, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "i1": [4, 15, 18, 21, 25, 27], "i1t": [21, 25], "i1tgw": 25, "i2": [4, 15, 18, 21, 25, 27], "i2t": [21, 25], "i2tgw": 25, "i3": 18, "i686": 110, "i_": 97, "i_1": 97, "i_2": 97, "i_d": [97, 107], "i_i": 97, "i_j": 97, "i_k": 98, "ialpha": 41, "iclr": [0, 31, 33, 40, 41, 95, 99, 100, 104, 109], "icml": [0, 3, 30, 32, 33, 35, 37, 38, 54, 90, 95, 100, 107, 109, 112], "id1": 39, "id2": 39, "id_pop": 102, "idea": [64, 112], "ident": [82, 85, 98], "identif": 41, "identifi": [38, 95], "idri": 110, "idx": 39, "idx1": [21, 27], "idx2": [21, 27], "idx_atom": 37, "idx_c": [37, 41], "idx_max": 45, "idx_min": 45, "ieee": [0, 67, 88, 99, 103, 109, 112], "ievgen": [23, 24, 84, 86, 88, 109], "ignor": [3, 24, 37, 41, 51, 56, 78, 85, 88, 95, 99, 110], "ii": [14, 39, 95], "iii": [86, 109], "iip": 15, "ij": [0, 45, 95, 97, 100, 108], "ill": 97, "illustr": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 45, 46, 47, 49, 50, 52, 55, 56, 57, 60, 61, 62, 63, 66, 67, 69, 71, 72, 74, 75, 76, 77, 79, 83, 110], "im": [18, 25, 27, 45, 60], "im2mat": [21, 25, 27, 36], "ima": [0, 95, 109], "imag": [0, 4, 12, 13, 29, 36, 43, 46, 48, 60, 67, 71, 86, 88, 93, 98, 99, 103, 107, 109, 110, 111, 112], "image_emd": 27, "image_mapping_gaussian": 27, "image_mapping_linear": 27, "image_sinkhorn": 27, "imageri": 82, "imaginari": 49, "imap": 60, "img": [14, 21, 25, 27, 36], "imit": 85, "impact": [60, 112], "implement": [0, 6, 39, 41, 60, 68, 83, 84, 85, 86, 90, 95, 97, 104, 107, 110, 112], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 85, 86, 88, 90, 94, 95, 97, 98, 100, 101, 102, 106, 107, 109, 110, 112], "importerror": 112, "impos": [48, 88], "improv": 110, "imread": [4, 13, 14, 15, 18, 21, 25, 27, 36], "imshow": [3, 13, 14, 20, 21, 22, 24, 25, 27, 28, 32, 35, 37, 39, 41, 44, 45, 50, 54, 55, 56, 60, 63, 64, 67, 69, 78, 80, 101], "inact": 102, "inappropri": 82, "incid": 82, "incl": 68, "includ": [0, 82, 83, 87, 90, 95, 97, 100, 106, 107, 110, 112], "inclus": [82, 83, 100], "incomplet": [83, 110], "incorrectli": 110, "increas": [16, 20, 22, 23, 24, 33, 35, 55, 60, 67, 68, 95, 100, 110], "incur": 112, "ind_i": 100, "ind_x": 100, "indep": [0, 99, 108], "independ": [0, 23, 95, 97, 110, 112], "index": [0, 3, 87, 88, 95, 102, 105, 106, 107, 109], "index_to_color": 47, "indianr": 14, "indic": [30, 34, 45, 83, 85, 94, 95, 97, 100, 101, 102, 107], "indices_a": 77, "indices_b": 77, "indices_i": 100, "indices_x": 100, "indistinguish": 9, "individu": [0, 41, 82, 95, 97, 109, 110], "inf": [0, 30, 88, 106], "inf_": [0, 96, 97], "infeas": 110, "infer": [0, 85, 95, 109], "infin": [85, 106], "infinit": [28, 88], "inform": [0, 26, 27, 33, 34, 37, 38, 44, 56, 57, 58, 82, 83, 86, 87, 88, 90, 91, 92, 95, 97, 98, 99, 100, 104, 105, 106, 107, 108, 109, 110, 112], "infti": 76, "inherit": 112, "init": [0, 36, 41, 55, 95, 96, 110], "init_c": [0, 95, 110], "init_du": 95, "init_func": 18, "init_i": 95, "init_matrix": 95, "init_matrix_semirelax": 95, "init_method": [48, 98], "init_pi": 95, "init_plan": 41, "init_x": [95, 110], "initi": [0, 15, 38, 41, 51, 84, 86, 87, 90, 94, 95, 96, 97, 99, 100, 106, 108, 110, 112], "initialis": [88, 98], "initl": 41, "inject": 56, "inlin": 60, "inner": [0, 86, 88, 95, 98, 110], "inner_tol": 88, "innov": [0, 97, 109], "input": [0, 14, 18, 39, 41, 56, 60, 75, 85, 86, 87, 88, 91, 92, 93, 95, 97, 98, 99, 104, 106, 107, 108, 110, 112], "inria": [37, 41, 45, 74, 75], "insert": 85, "inspir": 83, "instabl": [95, 100], "instal": [57, 83, 86, 97, 110, 112], "instanc": [0, 6, 82, 85, 89, 90, 95, 99, 105, 107, 110, 112], "instant": 8, "instanti": [85, 107, 110, 112], "instead": [0, 6, 9, 37, 85, 86, 87, 95, 97, 98, 99, 100, 106, 107, 109, 110, 112], "instruct": 83, "insult": 82, "int": [0, 3, 34, 36, 37, 41, 45, 47, 48, 55, 71, 72, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112], "int32": [37, 39, 41], "int64": 97, "int_": [0, 103], "int_0": [0, 97], "integ": [0, 30, 95, 97, 107, 110], "integr": [0, 97, 110], "intel": 85, "intellig": [0, 9, 48, 56, 67, 76, 86, 88, 91, 95, 98, 99, 104, 106, 109, 112], "intend": [38, 104], "intens": [31, 33, 37, 38, 39, 41, 68], "inter": [37, 41], "intercept": 102, "interchang": 95, "interest": [82, 112], "interestingli": 112, "interfac": 112, "interior": [51, 97, 110, 112], "intermedi": [0, 6, 51, 77, 91, 100], "intern": [0, 3, 4, 7, 8, 9, 14, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 48, 54, 55, 58, 72, 76, 86, 88, 91, 93, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 109, 112], "interpol": [0, 3, 8, 13, 17, 20, 22, 24, 28, 32, 36, 37, 39, 41, 48, 50, 54, 55, 60, 63, 64, 86, 88, 95, 97, 98, 100, 109, 110, 112], "interpret": [60, 95], "interv": [4, 5, 9, 18, 71, 72, 79, 85], "intervent": [86, 109], "intra": [31, 33, 37, 40, 41, 100], "introduc": [20, 21, 22, 23, 24, 26, 28, 86, 93, 110, 112], "introduct": [43, 70, 111, 112], "introductori": 110, "intuit": [56, 83], "inv": 85, "invalid": [66, 75], "invari": [0, 43, 81, 89, 95, 106, 109, 110, 111, 112], "invers": [25, 31, 33, 40, 79, 85, 88, 97, 102], "inverse_transform": [21, 25, 88, 112], "inverse_transform_label": 88, "investig": [82, 112], "involv": [28, 83], "io": [60, 109, 110], "ip": [54, 55], "iperm": 6, "ipermt": 6, "ipm": 97, "ipynb": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80], "irisa": [8, 13, 30, 32, 35, 36, 63, 78], "is_all_finit": 107, "is_avail": [4, 8], "is_floating_point": 85, "is_tensor": 47, "isel": 57, "isfinit": [49, 85], "isinf": 85, "islazi": 86, "isn": 86, "isnan": 85, "isometri": 36, "isspars": 85, "issu": [0, 39, 60, 82, 83, 86, 95, 107, 109, 112], "ist": 15, "item": [5, 30, 31, 33, 34, 38, 39, 40, 47, 83], "iter": [0, 1, 2, 3, 6, 7, 8, 11, 12, 16, 20, 22, 23, 24, 33, 35, 36, 41, 44, 48, 49, 51, 55, 56, 60, 67, 68, 75, 76, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 108, 109, 110, 112], "ith": 102, "itmax": 102, "its": [0, 2, 3, 6, 26, 31, 33, 37, 38, 40, 47, 48, 60, 66, 68, 82, 85, 86, 88, 94, 95, 98, 99, 100, 101, 103, 106, 107, 109, 110, 112], "its_to_show": 47, "itself": 112, "iv": [6, 66, 79], "ivisu": [5, 9], "j": [0, 3, 11, 12, 13, 17, 18, 21, 23, 27, 31, 32, 33, 36, 37, 38, 39, 40, 41, 44, 45, 46, 53, 56, 60, 67, 68, 69, 79, 80, 86, 87, 88, 90, 91, 92, 93, 95, 97, 98, 99, 100, 102, 104, 105, 106, 107, 109, 112], "jaakkola": [94, 109], "jaccard": [0, 60, 107], "jan": 110, "janati": [14, 56, 74, 75, 84, 86, 95, 109, 112], "janati100": 14, "januari": 110, "jax": [0, 85, 97, 103, 107, 109, 110, 112], "jaxbackend": 85, "jcpot": [84, 109, 110], "jcpot_barycent": 86, "jcpottransport": 23, "jefferi": [97, 109], "jensen": 112, "jet": [78, 80], "jin": 97, "jj": 14, "jmlr": [109, 110], "join": [13, 14, 21, 25, 27, 36, 85, 109], "joint": [0, 37, 86, 95, 98, 99, 108, 109, 110, 112], "joint_ot_mapping_kernel": [98, 112], "joint_ot_mapping_linear": [98, 112], "jointli": [39, 88, 98], "jonathan": [88, 109], "journal": [0, 4, 11, 12, 21, 27, 35, 46, 67, 71, 86, 88, 92, 93, 95, 97, 99, 100, 103, 106, 108, 109, 110, 112], "jp": 15, "jpg": [21, 25, 27], "jsel": 57, "jul": 110, "juli": [0, 9, 46, 47, 84, 97, 109, 110], "julia": [0, 107], "julien": [0, 97, 109], "jump": 110, "june": [9, 110], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 110], "just": 68, "justin": [0, 33, 35, 95, 100, 109, 112], "k": [0, 3, 7, 9, 14, 15, 16, 23, 30, 31, 32, 33, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 51, 53, 60, 62, 66, 77, 85, 86, 87, 88, 90, 92, 94, 95, 97, 98, 100, 102, 112], "k1": [31, 33, 38, 39, 40], "k2": [31, 33, 38, 39, 40], "k_": 93, "k_i": [86, 97], "k_t": 93, "kachaiev": 109, "kamada_kawai_layout": [30, 38], "kamel": 110, "kantorovich": [0, 97, 108, 109, 112], "kantorovitch": 112, "kappa": [57, 86], "kappa1": 66, "kappa2": 66, "keed": 110, "keep": [83, 110, 112], "keepdim": [0, 49, 68, 69, 72, 85, 103], "kei": [0, 87, 95], "keop": [68, 86, 107], "kept": [57, 86, 110], "kerdoncuff": [35, 84, 95, 109, 112], "kernel": [0, 26, 33, 86, 88, 95, 98, 100, 107, 109, 112], "kerneltyp": 98, "keyword": [38, 88, 107], "kilian": [58, 63, 84, 109], "kind": [88, 112], "kl": [0, 56, 62, 68, 69, 74, 85, 86, 87, 95, 104, 106, 109, 110, 112], "kl_div": [85, 110], "kl_loss": [0, 95, 110], "kl_uot": 80, "klatt": [0, 97, 109], "kline": [97, 109], "kmean": [0, 39, 95, 96], "kmeans_fus": 95, "kmeans_soft": 95, "knn": 88, "knopp": [0, 84, 85, 86, 106, 109, 110, 112], "knott": [88, 92, 109, 112], "know": [38, 41, 85], "knowledg": [83, 112], "known": [94, 95, 112], "koch": 107, "kong": [33, 95, 109], "koyejo": [0, 103, 109, 112], "krzakala": 109, "kt": [46, 47], "ktu": 75, "kulczynski1": [0, 60, 107], "kullbach": 112, "kullback": [0, 33, 35, 74, 80, 85, 95, 104, 106, 112], "kv": 75, "kwarg": [0, 86, 88, 89, 91, 95, 98, 99, 100, 101, 106, 107, 108, 110], "kwargs_solv": 95, "kyoto": 15, "kyrillidi": 107, "l": [0, 9, 11, 12, 14, 32, 33, 35, 38, 48, 72, 75, 78, 79, 86, 87, 88, 90, 92, 95, 97, 98, 99, 100, 102, 103, 104, 106, 109, 112], "l1": [64, 69, 87, 95], "l1l2": [20, 88], "l2": [0, 11, 12, 43, 51, 62, 68, 69, 75, 81, 89, 95, 102, 104, 106, 109, 110, 111, 112], "l2_bari": 51, "l2_uot": 80, "l2bari": [11, 12, 75], "l_2": 79, "l_u": 105, "l_v": 105, "l_w2": 66, "l_w2_circl": 66, "l_x": 32, "l_y": 32, "la": [48, 88, 98, 109], "label": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 20, 22, 23, 24, 26, 28, 30, 34, 35, 37, 41, 45, 46, 47, 48, 49, 50, 51, 52, 57, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 74, 75, 76, 77, 78, 79, 86, 88, 89, 90, 101, 107, 110, 112], "label_est": 3, "label_norm": 107, "label_unif": 3, "labelbottom": [54, 69], "labeld": 110, "labelleft": [54, 69], "labels": 45, "labels_a": [0, 88], "labels_to_mask": 107, "laetitia": [0, 30, 32, 33, 35, 38, 78, 80, 84, 95, 109], "lagrang": [102, 107], "lagrangian": [0, 97, 100, 102, 109, 112], "lai": [90, 109, 112], "lambd": [57, 61, 62, 63], "lambda": [0, 30, 41, 95, 100, 102, 112], "lambda_": [0, 95, 112], "lambda_1": 0, "lambda_2": 0, "lambda_k": 86, "lambda_r": 0, "lambda_u": 0, "lambdast": 36, "langl": [0, 85, 86, 88, 95, 96, 97, 98, 99, 100, 103, 105, 106], "languag": [82, 84, 112], "laplac": 110, "laplacian": [29, 43, 84, 88, 89, 107, 109, 111, 112], "lapost": 35, "larg": [0, 9, 28, 58, 60, 85, 88, 90, 95, 100, 105, 107, 109, 110, 112], "larger": 107, "largest": 102, "lasso": [0, 20, 22, 88, 102, 109, 110], "last": [0, 1, 34, 60, 86, 87, 102, 110, 112], "last_step": [0, 1, 110], "latent": 34, "latent_embed": 34, "later": [31, 33, 39, 40, 88], "latest": [109, 110], "latter": [95, 107], "lauren": [54, 55], "laur\u00e8n": [54, 55, 84, 109], "law": 94, "layer": [84, 94, 109, 110], "lazi": [0, 68, 86, 107, 109, 110, 112], "lazili": [110, 112], "lazy_plan": [0, 54, 55, 68, 95, 96, 107], "lazytensor": [68, 110], "lbfg": 86, "lbfgsb": 95, "lbfgsb_unbalanc": [106, 110], "lbfgsb_unbalanced2": [106, 110], "lbrace": 48, "ldot": [86, 97], "le": [84, 107], "lead": [0, 7, 38, 60, 85, 86, 91, 95, 97, 99, 106, 108, 110, 112], "leadership": 82, "leak": 110, "learn": [0, 3, 4, 7, 9, 14, 26, 30, 31, 32, 33, 35, 38, 40, 42, 43, 54, 55, 58, 59, 72, 78, 83, 84, 86, 87, 88, 92, 94, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107, 109, 110, 111, 112], "learning_r": [37, 95], "learning_rate_c": [37, 95], "learning_rate_i": [37, 95], "least": [0, 83, 97, 98, 110], "left": [0, 7, 14, 20, 24, 45, 46, 54, 56, 69, 85, 86, 88, 92, 95, 97, 101, 103, 104, 105, 107, 108], "legend": [2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 20, 22, 23, 24, 25, 26, 28, 34, 37, 41, 45, 46, 47, 48, 49, 50, 51, 52, 57, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 74, 75, 76, 77, 79], "legend_guid": 6, "leibler": [0, 33, 35, 74, 80, 85, 95, 104, 106, 112], "len": [12, 14, 16, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 45, 51, 60, 69, 77, 104, 107], "length": [0, 38, 85, 87, 95, 97, 100, 102, 105, 106, 107], "leonid": 97, "leq": [0, 95, 97, 99, 100, 112], "less": [101, 110], "let": [0, 39, 56, 95, 97, 99], "letter": 53, "level": [33, 35, 82, 86, 88, 89, 95, 107, 109, 112], "leverag": 110, "levm": [0, 97], "li": [33, 95, 109], "lib": [3, 37, 38, 41, 49, 85], "librari": [58, 68, 84, 86, 88, 98, 109, 110, 112], "licens": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 109], "lie": [109, 112], "lightspe": [0, 86, 88, 104, 106, 109, 112], "like": [0, 3, 38, 60, 83, 84, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 105, 106, 107, 108, 110], "limit": [0, 85, 95, 110], "limit_max": 88, "limits_": 90, "limits_i": 90, "lin": [33, 95, 109], "lin_squar": 107, "linalg": [16, 17, 30, 33, 35, 47, 78, 85], "line": [0, 21, 25, 27, 36, 60, 77, 86, 95, 97, 99, 100, 101, 109, 110, 112], "line_search": [99, 110], "line_search_armijo": 99, "linear": [0, 2, 6, 9, 26, 27, 29, 34, 42, 43, 54, 68, 79, 84, 85, 86, 87, 88, 90, 92, 95, 97, 98, 99, 102, 106, 107, 109, 110, 111, 112], "lineargwtransport": 25, "linearli": 112, "lineartransport": [25, 112], "linesearch": [30, 95, 99, 110], "linestyl": [45, 66], "linewidth": [37, 41, 45, 46, 53, 54, 72], "link": [3, 31, 33, 38, 83, 109, 110], "linprog": [51, 112], "linspac": [5, 6, 11, 16, 30, 39, 46, 47, 54, 65, 66, 75, 85, 110], "lint": 83, "linter": 110, "linux": [109, 110], "lipschitz": [48, 88, 98, 112], "list": [0, 6, 11, 30, 75, 76, 83, 85, 86, 87, 88, 91, 92, 94, 95, 97, 100, 102, 105, 106, 107, 108, 109, 110], "list_alpha": 41, "list_dist": 38, "list_dist_str": 38, "list_h": 39, "list_h1": 39, "list_h2": 39, "list_loss_gw": 54, "list_marginal_cost": 100, "list_p": 95, "list_p1": 95, "list_p2": 95, "list_p_gw": 54, "list_p_lr": 55, "list_p_sin": 55, "list_po": 38, "list_r": [39, 95], "list_r1": [39, 95], "list_r2": [39, 95], "list_rank": [54, 55], "list_reg": 55, "list_t": 38, "list_time_gw": 54, "list_to_arrai": [85, 107], "list_unmixings2d": 41, "literatur": [0, 83, 86, 106, 112], "littl": [60, 97], "liu": [33, 95, 104, 109], "liutku": [4, 109, 112], "live": [18, 37, 41, 56, 83, 97, 109], "lm": [0, 97], "load": [4, 21, 27, 60, 112], "loader": 34, "loc": [2, 6, 15, 20, 22, 24, 25, 26, 28, 31, 33, 40, 45, 46, 48, 49, 50, 52, 63, 64, 71, 72, 74, 77, 79], "local": [3, 37, 38, 41, 49, 83, 95, 110, 112], "local_node_s": [38, 39], "local_node_shap": 39, "locat": [0, 15, 18, 68, 85, 86, 97, 100], "log": [0, 14, 23, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 44, 51, 54, 55, 56, 58, 67, 68, 71, 72, 76, 78, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 110, 112], "log0": [35, 78], "log_": [23, 39, 88], "log_23": [31, 40], "log_32": [31, 40], "log_asgd": 58, "log_bapg": 33, "log_cg": 33, "log_pgd": 33, "log_ppa": 33, "log_sgd": 58, "log_uot": 76, "log_uot_ti": 76, "logarithm": [0, 85, 86, 106], "loge": 35, "logent": 38, "loglog": [88, 107], "logo": [43, 59, 110, 111], "logo_dark": 53, "logspac": [60, 66, 71, 72, 79], "logsumexp": [85, 90, 112], "logw": 32, "lokhand": [97, 109], "long": 112, "look": [38, 83, 102], "loop": [4, 5, 9, 18, 33, 60, 79, 88, 95, 109], "loss": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 20, 26, 27, 32, 33, 34, 37, 41, 47, 50, 54, 56, 63, 64, 67, 68, 75, 76, 78, 79, 80, 86, 88, 93, 95, 97, 98, 99, 100, 104, 105, 106, 107, 109, 110, 112], "loss_citi": 68, "loss_dual_entrop": [2, 6], "loss_dual_quadrat": 2, "loss_efgw": 68, "loss_egw": 68, "loss_epoch": 37, "loss_fgw": 68, "loss_fgw_linear": 68, "loss_fgw_quad": 68, "loss_fun": [0, 32, 41, 95, 110], "loss_gw": 68, "loss_gw_quad": 68, "loss_it": [3, 4, 8], "loss_iter0": 3, "loss_iter2": 3, "loss_linear_term": 0, "loss_list": 47, "loss_quad": 68, "loss_quad_term": 0, "loss_sink": 68, "loss_sink_linear": 68, "lost": 112, "lot": [84, 110], "louvain": [39, 48, 88, 95, 98, 109], "louvain_fus": 95, "low": [0, 37, 39, 41, 43, 48, 52, 59, 60, 84, 89, 91, 95, 96, 101, 107, 109, 110, 111], "lower": [0, 15, 20, 24, 35, 48, 60, 88, 95, 96, 97, 98, 101], "lowrank": [54, 55, 68, 107, 110], "lowrank_gromov_wasserstein_sampl": [0, 54, 95, 110], "lowrank_sinkhorn": [0, 55, 68, 96], "lp": [0, 8, 15, 18, 19, 43, 51, 66, 86, 87, 88, 89, 98, 99, 104, 106, 107, 109, 110, 111, 112], "lp_bari": 51, "lp_log": 51, "lp_solver": 99, "lpl1": 88, "lr": [2, 3, 4, 5, 6, 7, 8, 9, 34, 47, 56, 58, 105], "lr_decai": [51, 97], "lr_init": [51, 97], "lst": 107, "lst_m": 65, "lst_plan": 69, "lst_reg": 69, "lst_solver": 69, "lst_unbalanc": 69, "luo": [33, 35, 95, 109], "lvert": [0, 92], "lw": [8, 14, 31, 33, 38, 39, 40, 45, 60, 77], "l\u00e9o": [84, 109], "m": [0, 1, 3, 7, 8, 9, 11, 12, 14, 17, 22, 23, 26, 27, 31, 32, 33, 34, 37, 38, 39, 40, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 65, 67, 68, 69, 72, 74, 75, 76, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "m0": 86, "m1": [0, 17, 64, 69, 96, 106], "m2": [0, 7, 17, 64, 65, 69, 96, 106], "m3": 17, "m4": 17, "m_": [0, 32, 46, 47, 92, 93, 102, 112], "m_0": 86, "m_1": 17, "m_2": 17, "m_3": 17, "m_4": 17, "m_a": 86, "m_b": 86, "m_current": 102, "m_feat": [87, 95], "m_k": 102, "m_linear": 95, "m_list": 47, "m_samp": [87, 95], "m_t": [46, 47, 92, 93], "m_w2": 66, "m_w2_circl": 66, "ma": [33, 90, 95, 109, 112], "machin": [0, 3, 4, 9, 14, 30, 32, 33, 35, 37, 38, 54, 55, 67, 86, 88, 92, 95, 96, 97, 99, 100, 109, 110, 112], "maco": 110, "macosx": [109, 110], "made": 110, "magic": 83, "mahalanobi": [0, 60, 107], "mai": [4, 7, 82, 83, 95, 97, 100, 101, 102, 109, 110, 112], "mail": [82, 83, 109], "main": [22, 83, 110, 112], "maintain": [82, 85, 109, 110], "mainten": 110, "majewski": [4, 109, 112], "major": [90, 110, 112], "make": [0, 31, 33, 38, 40, 60, 64, 74, 75, 82, 83, 85, 89, 95, 97, 106, 109, 110, 112], "make_1d_gauss": [8, 11, 12, 14, 51, 55, 57, 61, 62, 65, 67, 69, 74, 75], "make_2d_samples_gauss": [35, 50, 63, 71, 76, 78, 79, 80], "make_blob": 45, "make_data_classif": [2, 20, 22, 23, 24, 26, 28], "manag": 110, "mangasarian": 97, "manhattan": 60, "mani": [0, 106, 110], "manifold": [3, 34, 36, 37, 41, 90, 92, 109, 112], "manner": 83, "manpow": [84, 109], "manual_se": [2, 4, 5, 6, 9, 34, 47], "manylinux": 110, "map": [0, 2, 6, 29, 38, 43, 48, 58, 80, 84, 88, 89, 92, 93, 95, 97, 105, 107, 109, 110, 111], "mapping_": 88, "mappingtransport": [26, 27, 112], "mapsto": [0, 95, 103], "marc": [35, 95, 109, 112], "marcel": [0, 97, 109], "marco": [0, 9, 31, 33, 35, 40, 41, 48, 84, 86, 88, 94, 95, 97, 98, 99, 100, 109, 112], "marg": 33, "margin": [0, 33, 35, 41, 43, 59, 68, 79, 84, 86, 87, 95, 97, 98, 100, 102, 106, 107, 109, 110, 111, 112], "marginal_a": 107, "marginal_b": [0, 107], "marginal_cost": [77, 100], "marginal_loss": [33, 95], "mark": 107, "markdown": 110, "marker": [2, 6, 15, 17, 18, 20, 22, 23, 24, 26, 28, 34, 37, 39, 41, 45, 49], "markeredgecolor": 53, "markerfacecolor": 53, "markers": 77, "mask": 107, "mass": [0, 3, 23, 31, 33, 38, 60, 68, 78, 80, 85, 88, 95, 97, 99, 100, 109, 110, 112], "mast": 86, "master": [83, 107, 109, 110], "mat2im": [21, 25, 27], "match": [0, 35, 42, 43, 60, 88, 95, 107, 109, 110, 111, 112], "materi": 98, "math": [30, 38, 46, 47, 49, 60, 97, 100, 104, 112], "mathbb": [0, 48, 85, 86, 92, 95, 97, 98, 103, 105, 107, 112], "mathbf": [0, 7, 31, 37, 38, 39, 40, 41, 45, 60, 80, 85, 86, 87, 88, 90, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108], "mathcal": [0, 17, 44, 48, 88, 89, 92, 94, 95, 96, 98, 103, 107, 112], "mathemat": [0, 4, 71, 83, 86, 92, 95, 97, 100, 103, 109, 110, 112], "mathieu": [84, 104, 110], "mathop": [0, 86, 87, 88, 90, 91, 95, 96, 97, 99, 100, 104, 105, 106, 107, 108], "mathrm": [0, 5, 48, 66, 80, 86, 88, 90, 92, 95, 96, 97, 99, 100, 103, 104, 105, 106, 107], "matlab": [0, 84, 107], "matmul": [47, 85], "matplotlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 110], "matric": [0, 8, 33, 35, 36, 38, 39, 44, 56, 60, 67, 68, 85, 86, 87, 88, 90, 92, 93, 94, 95, 97, 99, 100, 101, 107, 108, 109, 110, 112], "matrix": [0, 3, 7, 9, 11, 12, 14, 21, 25, 27, 30, 36, 37, 41, 50, 51, 55, 56, 63, 64, 65, 67, 75, 76, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "matthew": 109, "matur": 83, "maunu": [92, 109], "max": [0, 11, 12, 14, 31, 33, 35, 36, 37, 38, 39, 40, 45, 50, 54, 55, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 74, 75, 76, 77, 79, 80, 85, 86, 88, 91, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "max_": [90, 102, 104, 105], "max_featur": 37, "max_inner_it": 88, "max_it": [0, 20, 23, 26, 27, 35, 36, 55, 56, 88, 95, 104, 110], "max_iter_inn": [37, 95], "max_iter_ot": [56, 95], "max_iter_out": [37, 95], "max_max": 77, "max_nz": [62, 104, 107], "max_omega": 104, "max_ot": 60, "max_sliced_wasserstein_dist": [0, 103], "max_sumshiftexpweight_reduct": 68, "max_tk1": [31, 33, 39], "maxfun": 86, "maxim": [2, 6, 95, 97, 105, 106, 110], "maximum": [0, 5, 16, 30, 36, 60, 66, 85, 86, 88, 90, 95, 97, 99, 102, 104, 107], "maxit": [49, 86, 90], "maxiter_mm": 90, "maxiter_sink": 90, "mazelet": [1, 34, 84, 109], "mb": [10, 17, 19, 29, 42, 59, 70, 73, 81, 92, 111], "mblondel": 104, "mccann": [100, 109, 112], "mcol": [30, 38], "md": [3, 37, 41, 92, 110], "mean": [0, 8, 11, 12, 14, 31, 33, 34, 39, 40, 45, 51, 57, 61, 62, 65, 66, 67, 69, 71, 72, 74, 75, 76, 85, 86, 89, 90, 92, 93, 94, 95, 97, 110, 112], "mean_sinkh": 76, "mean_sinkh_ti": 76, "meaning": 112, "meantim": 39, "measur": [0, 4, 8, 15, 18, 32, 48, 58, 68, 71, 86, 87, 88, 90, 95, 97, 100, 103, 105, 106, 107, 109, 110, 112], "measure_weight": [86, 97], "measures_loc": [15, 16, 86, 97], "measures_weight": [15, 16, 86, 97], "mechan": 110, "media": 82, "median": [85, 88, 107], "medic": [86, 109], "mehta": [51, 84, 97, 109], "mem": [10, 19, 29, 42, 59, 70, 73, 81, 111], "member": [82, 109], "memori": [0, 60, 68, 85, 86, 95, 97, 105, 107, 109, 110, 112], "ment": 109, "mention": 83, "merg": [83, 110], "meshgrid": [4, 5, 6, 15, 18, 85], "messag": [0, 83, 86, 107, 110], "method": [0, 8, 14, 30, 33, 39, 41, 46, 48, 55, 56, 58, 68, 76, 83, 86, 87, 88, 90, 92, 93, 95, 97, 98, 104, 105, 106, 107, 109, 110, 112], "method_sinkhorn": 87, "metric": [0, 22, 23, 35, 43, 51, 53, 54, 60, 65, 68, 70, 78, 86, 88, 95, 96, 97, 99, 100, 101, 102, 105, 106, 107, 109, 110, 111, 112], "meyer": 97, "mgrid": 72, "mi": [99, 109, 110], "miccai": [86, 109], "michael": [84, 97], "might": [0, 16, 20, 22, 23, 24, 28, 33, 35, 55, 60, 67, 68, 85, 86, 95, 97, 110, 112], "miller": [39, 95, 109], "million": 110, "min": [0, 31, 33, 37, 39, 45, 49, 60, 77, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 112], "min_": [0, 5, 7, 8, 9, 56, 80, 86, 90, 95, 97, 98, 100, 102, 106, 112], "min_a": [3, 112], "min_featur": 37, "min_min": 77, "min_p": 112, "min_t": 102, "min_weight_gw": 3, "minhui": 84, "minibatch": [10, 43, 105, 111, 112], "minigalleri": 110, "minim": [0, 3, 4, 5, 7, 8, 30, 31, 33, 37, 40, 41, 56, 90, 95, 97, 99, 104, 106, 107, 110, 112], "minimum": [30, 85, 88, 95, 97, 99, 107, 110, 112], "minkowski": [0, 51, 60, 97, 107], "minmax": [21, 25, 27], "minor": 110, "minu": [2, 6], "minut": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80], "mirror": [0, 95, 96], "misc": 109, "misfit": [0, 95], "mismatch": 110, "miss": 107, "mistak": 110, "mit": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80, 109], "mix": [7, 8, 56], "mixtur": [7, 46, 47, 93, 109, 110], "mixup": [33, 95, 109], "mjl": [35, 109, 112], "ml": 112, "mlj": 95, "mlp": [6, 9], "mm": [56, 90, 95], "mm_unbalanc": [80, 106], "mm_unbalanced2": 106, "mmd": [0, 86, 109, 112], "mmot": [43, 59, 89, 97, 111, 112], "mobahi": [0, 106, 109, 112], "mode": [0, 2, 6, 26, 88, 101], "model": [3, 4, 6, 34, 39, 46, 86, 93, 109, 110, 112], "modif": [83, 110], "modifi": [28, 95], "modified_fil": 83, "modul": [6, 9, 34, 57, 60, 68, 83, 86, 90, 92, 94, 98, 101, 107, 109, 110, 112], "modulo": [0, 97], "mokhtar": [57, 84, 109], "mokhtarzahdi": 57, "moment": 110, "mong": [0, 25, 51, 97, 100, 109, 110], "mont": [0, 103], "montesuma": [15, 16, 84, 109], "month": 110, "more": [0, 31, 33, 38, 40, 56, 60, 68, 83, 85, 86, 90, 92, 95, 97, 106, 110, 112], "mosek": 97, "most": [3, 86, 107, 110, 112], "move": [97, 110, 112], "mover": [0, 88, 97, 109, 110], "mp": 64, "mpl": 8, "mpl_toolkit": [11, 12, 35, 75, 78], "mplot3d": [11, 12, 35, 75, 78], "mr": [39, 95], "mrg": 83, "mt": [8, 92], "mticker": 45, "mu": [0, 4, 7, 8, 17, 26, 27, 30, 32, 47, 48, 66, 78, 88, 90, 91, 92, 95, 98, 103, 112], "mu1": 66, "mu2": 66, "mu_": [0, 35, 48, 50, 63, 66, 71, 76, 78, 79, 80, 88, 92, 112], "mu_a": [0, 91], "mu_b": [0, 91, 92], "mu_d": 9, "mu_i": [56, 92, 112], "mu_j": 112, "mu_k": 112, "mu_n": [0, 5, 9, 97, 103], "mu_t": [0, 35, 48, 50, 63, 71, 76, 78, 79, 80, 88, 92, 112], "mu_target": 66, "mu_x": [48, 56], "much": [60, 83, 86, 110], "multi": [29, 43, 84, 85, 86, 88, 89, 97, 107, 109, 110, 111, 112], "multi_alpha": 94, "multidimension": [0, 36, 97], "multipl": [0, 1, 65, 86, 92, 95, 97, 104, 105, 106, 107, 110], "multipli": [87, 95, 107], "multiprocess": 107, "multiscal": [0, 86], "multivari": [0, 93], "multivariate_norm": 16, "munk": [0, 97, 109], "must": [0, 95, 99, 104, 106, 107, 110], "mv": 7, "my": 83, "m\u00e9moli": [0, 95, 109, 112], "n": [0, 3, 5, 7, 8, 9, 11, 12, 14, 15, 17, 18, 21, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 44, 46, 49, 50, 51, 52, 55, 56, 57, 58, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112], "n1": [0, 39, 44, 56, 60, 68, 107], "n2": [0, 31, 32, 33, 39, 40, 44, 56, 60, 68, 107], "n3": [31, 33, 40], "n_": [88, 97, 98, 100], "n_1": [39, 44, 56], "n_2": [39, 44, 56], "n_alpha": 11, "n_atom": 86, "n_batch": 6, "n_class": [34, 88], "n_clean": 38, "n_cluster": [37, 41], "n_compon": [34, 36, 93], "n_dim": 9, "n_distribut": [11, 12, 14, 75], "n_edg": 94, "n_epoch": 34, "n_featur": [1, 9, 34, 45, 88, 94, 107], "n_feature_i": [87, 95], "n_feature_x": [87, 95], "n_fitting_sampl": 48, "n_gd_it": 47, "n_graph": [34, 94], "n_hidden_lay": 34, "n_hist": [0, 86, 97, 106], "n_init": [3, 36, 37, 41], "n_iter": [2, 5, 6, 9, 76], "n_k": 86, "n_label": 107, "n_node": [30, 34, 37, 41, 94], "n_node_class": 34, "n_nois": [38, 76, 78, 80], "n_p": 100, "n_predict_sampl": 48, "n_project": [0, 4, 5, 71, 72, 103], "n_projections_arr": [71, 72], "n_sampl": [9, 16, 35, 36, 39, 41, 45, 54, 78, 88, 93, 107], "n_sample_i": [87, 95], "n_sample_x": [87, 95], "n_samples_": 1, "n_samples_1": 107, "n_samples_2": 107, "n_samples_a": [0, 86, 95, 96, 103], "n_samples_b": [0, 86, 95, 96, 103], "n_samples_bari": [18, 97], "n_samples_sourc": [22, 28], "n_samples_t": 1, "n_samples_target": [22, 28], "n_seed": [71, 72], "n_sourc": [58, 105], "n_source_sampl": [2, 6, 20, 24, 26, 88], "n_steps_visu": 47, "n_t": 88, "n_target": [58, 65, 105], "n_target_sampl": [2, 6, 20, 24, 26, 88], "n_templat": [34, 94], "n_template_nod": [34, 94], "n_templates_nod": 94, "n_thread": 0, "n_tplt": 94, "n_tplt_node": 94, "n_transported_sampl": 100, "n_trial": 1, "n_try": 66, "n_u": 100, "n_visu": 9, "n_weight": 75, "na": 101, "nabla": [48, 88, 97, 98, 104], "nakhostin": [86, 109], "name": [23, 39, 69, 85, 95, 107, 109, 112], "namespac": 110, "nan": 85, "nan_to_num": 85, "narr": 83, "nathali": [84, 109], "nathan": [84, 109, 110], "nation": 82, "nativ": 8, "natur": [0, 85, 97, 109], "nauk": 97, "nb": [0, 8, 11, 12, 14, 21, 27, 31, 33, 35, 36, 40, 49, 50, 51, 52, 57, 61, 62, 63, 64, 65, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 95, 97, 99, 101], "nb_class": 88, "nb_dummi": [95, 99, 100], "nb_imag": 13, "nb_interp": 17, "nb_iter_max": [3, 4, 8], "nb_node": 3, "nb_samples_grad": 95, "nb_samples_p": 95, "nb_samples_q": 95, "nbb": 104, "nbm": 12, "nbm2": 12, "nbnois": 49, "nbpc": 3, "nbsp": 85, "nc": [3, 37, 41], "ncol": 56, "ncourti": [8, 13, 35, 36], "ndarrai": [0, 30, 36, 85, 86, 89, 90, 95, 97, 99, 100, 101, 102, 103, 104, 105, 107], "ndim": 8, "nearest": [3, 20, 22, 24, 28, 32, 37, 39, 41, 43, 50, 54, 55, 59, 63, 64, 88, 98, 109, 110, 111], "nearest_brenier_potential_fit": [48, 88], "nearest_brenier_potential_predict_bound": [48, 88], "nearestbrenierpotenti": [88, 98], "nearli": [110, 112], "necessari": [11, 12, 68, 75, 78, 82, 83, 109, 110, 112], "necessarili": 95, "need": [0, 48, 51, 56, 60, 68, 83, 85, 86, 90, 94, 95, 97, 98, 101, 110, 112], "needham": [39, 95, 109], "neg": [0, 2, 6, 79, 85, 86, 95, 97, 102, 104, 106, 109, 110], "negentropi": 104, "neginf": 85, "neighbor": 88, "neighborhood": 110, "nemdlaplacetransport": 24, "nemdtransport": [20, 22, 24, 28], "nemo": 109, "nenna": [0, 11, 12, 86, 100, 106, 109, 112], "neq": [90, 95, 97, 112], "nest": 107, "net": 35, "network": [0, 9, 34, 94, 95, 109, 110, 112], "networkx": [30, 31, 33, 34, 37, 38, 39, 40, 41, 95], "neural": [0, 9, 26, 27, 33, 34, 44, 56, 57, 58, 86, 87, 88, 92, 94, 95, 98, 104, 105, 106, 109, 110, 112], "neurip": [0, 33, 38, 57, 78, 95, 99, 100, 102, 106, 109, 112], "neutral": 98, "neuv": [48, 88, 98, 109], "never": [83, 110], "new": [30, 48, 85, 88, 98, 107, 112], "next": [39, 60, 95, 99, 102, 110, 112], "next_active_index": 102, "next_gamma": 102, "next_removal_gamma": 102, "next_removal_index": 102, "nfeasibl": 35, "ngeativ": 85, "nguyen": [86, 109, 112], "ni": [0, 103], "nice": 110, "nicola": [0, 4, 8, 13, 30, 31, 32, 33, 35, 36, 38, 40, 41, 60, 71, 84, 86, 88, 94, 95, 99, 103, 109, 112], "nightingal": [0, 97, 109], "nile": [88, 109], "nip": [0, 26, 27, 86, 88, 98, 104, 106, 109, 112], "nit": 60, "niter": [7, 51, 56, 97], "nits_bcd": 87, "nits_ot": 87, "nitzan": [0, 91, 109, 112], "nk_source_sampl": 88, "nlabel": [37, 41], "nmd": 36, "nn": [5, 6, 9, 34, 110], "no_grad": [3, 4, 7, 8, 47, 56], "node": [0, 3, 30, 33, 34, 35, 38, 39, 94, 95, 99, 109], "node_alpha": 39, "node_collect": 38, "node_color": [30, 31, 33, 34, 38, 39, 40], "node_id1": 39, "node_id2": 39, "node_label": 41, "node_s": [30, 31, 33, 38, 39, 40], "node_shap": 39, "nodelist": [31, 33, 34, 38, 39, 40], "nodes_color_part": [31, 33, 38, 39, 40], "nodes_color_part1": [31, 33, 38, 39, 40], "nodes_color_part2": [31, 33, 38, 39, 40], "nodes_s": [31, 33, 38, 40], "nois": [2, 6, 9, 30, 38, 78, 89], "noise_level": [2, 6, 26], "noisi": [30, 38, 56], "noisy_graph": 38, "noisy_nod": 38, "non": [0, 48, 62, 68, 75, 79, 83, 84, 85, 86, 88, 95, 97, 99, 102, 104, 106, 107, 109, 110, 112], "none": [0, 3, 6, 14, 16, 17, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 44, 45, 46, 47, 56, 60, 66, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110], "nonetheless": 85, "nonlinear": [97, 98, 112], "nonneg": [0, 95, 96, 106], "nonnegative_symmetr": [37, 95], "nonparametr": [4, 109, 112], "nonumb": 97, "nonzero": 104, "noplot": 83, "noqa": [11, 12, 35, 75, 78], "norm": [0, 16, 30, 33, 35, 38, 45, 49, 60, 80, 85, 87, 88, 95, 97, 107, 110], "normal": [0, 5, 11, 12, 14, 15, 30, 31, 33, 38, 40, 65, 75, 85, 88, 90, 94, 103, 107, 110], "notabl": 110, "notat": 110, "note": [0, 28, 51, 60, 68, 85, 86, 88, 90, 94, 95, 97, 98, 100, 101, 104, 106, 107, 109, 110, 112], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 110, 112], "noth": 101, "notic": [39, 41, 60], "nov": 110, "novel": [110, 112], "novemb": 110, "now": [3, 5, 38, 56, 60, 85, 110, 112], "np": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 25, 26, 27, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 85, 86, 88, 89, 95, 97, 100, 102, 103, 104, 106, 107, 110, 112], "np_config": 85, "npart": [39, 95], "npart1": 95, "npart2": 95, "npart_1": 39, "npart_2": 39, "npo": 36, "npost01": 36, "npost02": 36, "npost13": 36, "npost23": 36, "nproc": 107, "npz": 60, "nrow": 56, "ns1": 7, "ns_budget": [57, 86], "nsemi": 28, "nsinkhornl1l2transport": 20, "nsinkhornlpl1transport": [20, 22], "nsinkhorntransport": [20, 22, 24, 28], "nsk": 86, "nstd": [17, 47], "nt": [0, 7, 37, 86, 88, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 108], "nt1": 7, "nt_budget": [57, 86], "nterpol": 112, "nu": [0, 4, 5, 8, 32, 48, 88, 90, 95, 97, 98, 103], "nu_i": 97, "num": [11, 14, 24, 78, 85], "num_class": 34, "num_it": 92, "num_iter_max": 76, "number": [0, 2, 6, 7, 9, 15, 16, 18, 20, 22, 23, 24, 30, 32, 33, 35, 36, 37, 41, 55, 57, 60, 67, 68, 76, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "numer": [0, 35, 38, 39, 60, 75, 85, 86, 88, 90, 92, 100, 107, 109, 110, 112], "numinneritermax": [0, 16, 86, 88, 98, 99], "numitermax": [0, 15, 16, 20, 22, 23, 24, 33, 35, 54, 55, 58, 60, 67, 68, 76, 86, 88, 91, 95, 96, 97, 98, 99, 100, 104, 105, 106, 108], "numitermax_dykstra": [0, 95], "numitermaxemd": [0, 99, 108], "numpi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 85, 86, 88, 90, 95, 97, 98, 100, 102, 103, 106, 107, 109, 110, 112], "numpy_op": 85, "numpybackend": 85, "numthread": [0, 97, 107, 110], "nunsupervis": 28, "nv": [6, 79], "nvisu": [6, 67], "nx": [0, 30, 34, 38, 60, 85, 92, 95, 96, 97, 99, 101, 107, 110], "nx_graph": [30, 38], "nx_pylab": 38, "ny_sampstem": 87, "nz": [2, 23, 26, 49, 89], "o": [0, 2, 6, 13, 14, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 36, 37, 39, 41, 51, 53, 60, 77, 94, 95, 109, 110, 112], "o1": 53, "o2": 53, "obj": [51, 97, 104], "object": [0, 2, 3, 4, 5, 6, 9, 36, 46, 47, 51, 61, 62, 65, 66, 68, 69, 85, 86, 87, 88, 92, 95, 97, 99, 104, 106, 107, 109, 110, 112], "oblig": 82, "observ": [7, 86, 89], "obstacl": [100, 109, 112], "obtain": [0, 66, 68, 88, 102, 107, 112], "obviou": [0, 97], "occur": [88, 112], "ocean_dai": [21, 25, 27], "ocean_sunset": [21, 25, 27], "oct": 110, "octob": [86, 109], "off": [0, 3, 5, 13, 14, 17, 21, 23, 25, 27, 31, 33, 34, 37, 38, 39, 40, 41, 53, 55, 67, 69, 77, 83, 94, 95], "offens": 82, "offer": 110, "offici": [82, 110], "offlin": 82, "offset": 49, "often": [83, 112], "og": 52, "ok": 68, "old": 110, "old_fval": 99, "older": 110, "oleksii": 109, "olvi": 97, "omega": [0, 80, 86, 95, 99, 100, 104, 105, 106, 112], "omega_": [0, 88, 112], "omega_g": [0, 88], "omit": [0, 38, 60, 107], "omp": 0, "onc": [4, 5, 9, 18, 79], "one": [2, 4, 6, 8, 21, 25, 26, 27, 30, 34, 36, 37, 38, 41, 58, 60, 68, 83, 85, 86, 88, 89, 92, 95, 97, 100, 102, 109, 110, 112], "one_hot": 34, "ones": [3, 9, 15, 16, 30, 31, 32, 33, 37, 39, 40, 41, 47, 51, 60, 63, 71, 72, 76, 79, 80, 85, 88, 95, 110], "ones_lik": 77, "ones_p": 95, "onli": [0, 1, 7, 15, 32, 39, 48, 60, 68, 85, 86, 87, 88, 90, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 112], "onlin": [0, 3, 37, 60, 82, 86, 95, 109, 110, 112], "onto": [8, 20, 22, 24, 88, 95, 104, 107, 112], "op": 85, "open": [82, 83, 84, 109, 110, 112], "openmp": [0, 97, 110], "oper": [33, 35, 39, 83, 86, 88, 90, 92, 97, 98, 109, 112], "operand": 85, "opt": 47, "optim": [0, 2, 4, 6, 9, 10, 15, 21, 26, 27, 30, 31, 32, 33, 34, 35, 38, 40, 43, 47, 48, 49, 51, 58, 59, 67, 70, 78, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111], "optimis": [48, 88, 98], "optimizewarn": 51, "option": [0, 39, 41, 60, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "orang": 46, "order": [0, 7, 17, 22, 28, 30, 47, 48, 60, 85, 88, 90, 94, 97, 98, 100, 101, 107, 109, 112], "org": [6, 56, 57, 64, 82, 85, 86, 104, 107, 109, 110, 112], "organ": 110, "orient": [45, 82], "origin": [0, 3, 26, 30, 77, 83, 84, 97, 104, 110, 112], "orthogon": 107, "oslash": 60, "ot": [1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 57, 58, 61, 63, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 109, 110, 111], "ot_": [0, 39, 97, 112], "ot_23": [31, 40], "ot_32": [31, 40], "ot_cost": [0, 106], "ot_dist": [0, 106], "ot_emd": [20, 21, 22, 24, 27, 60, 112], "ot_emd_laplac": 24, "ot_glob": 39, "ot_global_": 39, "ot_l1l2": 20, "ot_lpl1": [20, 22], "ot_mapping_gaussian": [26, 27], "ot_mapping_linear": [26, 27], "ot_next_gamma": 102, "ot_sink_algo": 60, "ot_sinkhorn": [20, 21, 22, 23, 24, 27, 60], "ot_sinkhorn_semi": 28, "ot_sinkhorn_un": 28, "otda": [20, 23, 24, 29, 43, 88, 89, 107, 110, 111], "other": [0, 3, 7, 8, 49, 51, 59, 60, 82, 83, 95, 96, 99, 104, 105, 106, 107, 109, 110, 111], "otherwis": [0, 82, 85, 92, 93, 95, 97, 106, 107], "otim": 95, "otml": [88, 95, 109, 112], "otresult": [0, 68], "otresultlazi": 0, "ots_loc": 39, "ots_local_": 39, "ott": 110, "our": [3, 4, 8, 39, 109, 110, 112], "out": [21, 26, 34, 38, 56, 88, 93, 103, 110], "out_of_sample_map": 88, "outer": [38, 85], "outlier": [43, 59, 87, 107, 110, 111], "output": [0, 1, 6, 9, 36, 83, 86, 88, 93, 95, 99, 105, 107, 109, 110, 112], "outsid": 110, "over": [0, 1, 9, 37, 39, 85, 86, 95, 97, 98, 100, 101, 107], "overal": 112, "overcom": 112, "overflow": [24, 75, 86, 109, 110], "overhead": [0, 86, 91, 95, 97, 106, 108, 112], "overlap": 112, "overlin": 94, "own": 110, "p": [0, 3, 5, 8, 23, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 49, 53, 54, 55, 56, 60, 66, 68, 72, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 99, 100, 103, 104, 107, 108, 109, 110, 112], "p0": [49, 90], "p1": [18, 23, 31, 33, 34, 38, 39, 40, 53], "p12": 68, "p1dot": 68, "p2": [18, 23, 31, 33, 34, 38, 39, 40, 53], "p3": [18, 31, 33, 40], "p_": [37, 41, 95], "p_1": [38, 95], "p_2": [38, 95], "p_citi": 68, "p_efgw": 68, "p_egw": 68, "p_fact": 68, "p_fgw": 68, "p_gw": 68, "p_i": 97, "p_inter": [37, 41], "p_intra": [37, 41], "p_ix_": 97, "p_k": 99, "p_list": [18, 97], "p_lowrank": 68, "p_p": 100, "p_part_const": 68, "p_part_pen": 68, "p_quad": 68, "p_reg": 68, "p_sink": 68, "p_sink_lazi": 68, "p_sink_lazy_dens": 68, "p_unb_kl": 68, "p_unb_kl_reg": 68, "p_unb_l2": 68, "packag": [3, 37, 38, 41, 49, 86, 107, 110, 112], "pad": 85, "pad_width": 85, "page": [48, 83, 88, 98, 109, 110], "pagerank": [39, 95], "pagerank_fus": 95, "pair": [87, 92, 93, 95, 106, 107], "pairwis": [0, 31, 33, 38, 40, 68, 88, 95, 110], "pann": [0, 97, 109, 112], "papadaki": [21, 27, 67, 88, 99, 109, 112], "paper": [0, 12, 86, 109, 110, 112], "paragraph": 83, "paralel": 110, "parallel": [0, 97, 107, 110, 112], "param": [47, 69, 107], "param_1": 107, "param_2": 107, "param_img": [20, 24], "paramet": [0, 3, 6, 7, 8, 9, 13, 20, 22, 23, 24, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 52, 57, 66, 67, 68, 74, 75, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "parent": [13, 14, 21, 25, 27, 36], "parenthes": 107, "pari": [0, 15, 16, 34, 46, 47, 48, 54, 55, 97, 109, 112], "parmap": 107, "part": [0, 3, 39, 41, 49, 68, 86, 95, 106, 107, 109, 110], "part1": [31, 33, 39, 40], "part1_": 39, "part2": 39, "part2_": 39, "part_g1": [31, 33, 39, 40], "part_g2": [31, 33, 39, 40], "part_g3": [31, 33, 40], "part_method": [39, 95], "partial": [0, 42, 69, 80, 81, 84, 89, 95, 99, 105, 109, 110, 111], "partial_": 105, "partial_cg": 99, "partial_fgw_dist": [38, 95], "partial_fused_gromov_wasserstein": [38, 95], "partial_fused_gromov_wasserstein2": 95, "partial_gromov_wasserstein": [38, 78, 95, 100, 112], "partial_gromov_wasserstein2": [95, 100], "partial_gw_dist": [38, 78, 95, 100], "partial_id": 38, "partial_ot": 80, "partial_w_dist": 78, "partial_wasserstein": [68, 78, 80, 100, 112], "partial_wasserstein2": [100, 112], "partial_wasserstein_1d": [77, 100], "partial_wasserstein_lagrang": 100, "particip": 82, "particular": [48, 95, 110], "particularli": [102, 112], "partit": [31, 33, 40, 41, 48, 88, 95, 98, 110], "partli": 112, "partner": [84, 109], "pass": [0, 39, 68, 83, 95, 97, 100, 104, 105, 107], "past": 110, "patch": [17, 44, 45, 47, 56], "path": [13, 14, 21, 25, 27, 36, 39, 43, 81, 89, 102, 109, 110, 111], "pathcollect": [4, 36, 66], "pathlib": [13, 14, 21, 25, 27, 36], "pati": [48, 88, 98, 109], "pattern": [0, 67, 88, 99, 103, 109, 112], "paul": 109, "pave": 110, "pca": [36, 110], "pcolormesh": 6, "pdf": [64, 66, 83, 93, 112], "pdf1": 66, "pdf_t": 66, "pdf_von_mis": 66, "pe": 110, "pedro": [86, 97, 109], "penal": [0, 43, 68, 81, 89, 102, 106, 109, 111], "peopl": 110, "pep": 110, "pep8": [83, 110], "per": [21, 25, 27, 36, 62, 104, 109], "perfectli": 41, "perform": [0, 3, 4, 8, 39, 48, 51, 57, 60, 83, 88, 95, 97, 98, 107, 109, 110, 112], "period": 66, "perman": 82, "permiss": 82, "permit": 62, "permut": [0, 3, 4, 8, 95], "perplex": 34, "perrot": [26, 27, 84, 88, 98, 109, 112], "person": [82, 84], "perturb": 97, "peyr": [21, 27], "peyr\u00e9": [0, 9, 11, 12, 33, 35, 54, 55, 58, 67, 75, 76, 84, 86, 88, 92, 95, 96, 97, 99, 100, 105, 106, 109, 112], "pfda": 49, "pfgw": [38, 95], "pfgw_e": 38, "pgd": [33, 35, 95], "pgtol": 86, "pgw": [35, 38, 95], "pgw_e": 38, "pham": [0, 72, 97, 103, 109], "phd": [48, 88, 98, 109], "phi": [32, 48, 88, 97, 98, 102], "phi2": 32, "phi_j": 102, "phi_lu": [48, 98], "phi_u": 102, "phone": 110, "physic": 82, "pi": [0, 2, 6, 9, 18, 25, 26, 30, 38, 39, 44, 45, 49, 54, 56, 64, 66, 72, 90, 95, 97, 98, 105, 107, 110], "pi1": 95, "pi2": 95, "pi_": [45, 90, 95, 98], "pi_1": 95, "pi_2": 95, "pi_feat": [87, 95], "pi_featur": [44, 56, 87], "pi_list": 102, "pi_samp": [87, 95], "pi_samp2": 95, "pi_sampl": [44, 56, 87], "pick": [83, 105], "piecewis": 102, "pierr": [48, 88, 98], "pillow": 83, "pip": [60, 83, 110, 112], "pipelin": 107, "pipi": 110, "pixel": [21, 25, 36], "pk": 99, "pkdd": [39, 95, 109], "pl": [1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 15, 17, 18, 20, 22, 23, 24, 26, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80], "place": [83, 101, 110], "plai": 0, "plain": 107, "plan": [0, 1, 3, 10, 31, 33, 38, 40, 41, 43, 52, 53, 55, 56, 59, 61, 62, 63, 77, 79, 80, 86, 87, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 110, 111, 112], "plan_dens": 46, "plan_dual_entrop": [2, 6], "plan_dual_quadrat": 2, "plan_init": 0, "plane": 60, "planetari": [86, 109], "plasma": 47, "platform": [83, 110], "pleas": [0, 38, 83, 85, 95, 97, 100, 106, 109], "plog": 35, "plot": [0, 3, 8, 11, 12, 14, 31, 33, 37, 39, 40, 41, 42, 43, 48, 51, 55, 56, 67, 68, 77, 110, 111, 112], "plot1d_mat": [46, 55, 57, 58, 61, 62, 67, 69, 74, 110], "plot2d_samples_mat": [2, 22, 50, 52, 63, 64], "plot_ax": 23, "plot_barycenter_1d": [11, 19, 111], "plot_barycenter_fgw": [30, 42, 111], "plot_barycenter_lp_vs_entrop": [12, 19, 111], "plot_compute_emd": [65, 70, 111], "plot_compute_wasserstein_circl": [66, 70, 111], "plot_conv_sinkhorn_ti": [76, 81, 111], "plot_convolutional_barycent": [13, 19, 111], "plot_coot": [44, 59, 111], "plot_debiased_barycent": [14, 19, 111], "plot_dmmot": [51, 59, 111], "plot_dual_ot_pytorch": [2, 10, 111], "plot_entropic_semirelaxed_fgw": [31, 42, 111], "plot_ewca": [45, 59, 111], "plot_factored_coupl": [52, 59, 111], "plot_fgw": [32, 42, 111], "plot_fgw_solv": [33, 42, 111], "plot_free_support_barycent": [15, 19, 111], "plot_free_support_sinkhorn_barycent": [16, 19, 111], "plot_gaussian_barycent": [17, 19, 111], "plot_generalized_free_support_barycent": [18, 19, 111], "plot_gmm_flow": [47, 59, 111], "plot_gmmot_plan": [46, 59, 111], "plot_gnn_tfgw": [34, 42, 111], "plot_graph": [3, 37, 41], "plot_gromov": [35, 42, 111], "plot_gromov_barycent": [36, 42, 111], "plot_gromov_wasserstein_dictionary_learn": [37, 42, 111], "plot_intro_ot": [60, 70, 111], "plot_logo": [53, 59, 111], "plot_lowrank_gw": [54, 59, 111], "plot_lowrank_sinkhorn": [55, 59, 111], "plot_optim_gromov_pytorch": [3, 10, 111], "plot_optim_otreg": [67, 70, 111], "plot_ot_1d": [61, 70, 111], "plot_ot_1d_smooth": [62, 70, 111], "plot_ot_2d_sampl": [63, 70, 111], "plot_ot_l1_vs_l2": [64, 70, 111], "plot_otda_class": [20, 29, 111], "plot_otda_color_imag": [21, 29, 111], "plot_otda_d2": [22, 29, 111], "plot_otda_jcpot": [23, 29, 111], "plot_otda_laplacian": [24, 29, 111], "plot_otda_linear_map": [25, 29, 111], "plot_otda_map": [26, 29, 111], "plot_otda_mapping_colors_imag": [27, 29, 111], "plot_otda_semi_supervis": [28, 29, 111], "plot_outlier_detection_with_coot_and_unbalanced_coot": [56, 59, 111], "plot_partial_1d": [77, 81, 111], "plot_partial_fgw": [38, 42, 111], "plot_partial_transport": 77, "plot_partial_wass_and_gromov": [78, 81, 111], "plot_quantized_gromov_wasserstein": [39, 42, 111], "plot_quickstart_guid": [68, 70, 111], "plot_regpath": [79, 81, 111], "plot_screenkhorn_1d": [57, 59, 111], "plot_semirelaxed_fgw": [40, 42, 111], "plot_semirelaxed_gromov_wasserstein_barycent": [41, 42, 111], "plot_sinkhorn_gradi": [1, 10, 111], "plot_sliced_wass_grad_flow_pytorch": [4, 10, 111], "plot_solve_vari": [69, 70, 111], "plot_spher": 5, "plot_ssnb": [48, 59, 111], "plot_ssw_unif_torch": [5, 10, 111], "plot_stoch_continuous_ot_pytorch": [6, 10, 111], "plot_stochast": [58, 59, 111], "plot_styl": [46, 101], "plot_surfac": 72, "plot_unbalanced_ot": [80, 81, 111], "plot_unmix_optim_torch": [7, 10, 111], "plot_uot_1d": [74, 81, 111], "plot_uot_barycenter_1d": [75, 81, 111], "plot_vari": [71, 73, 111], "plot_variance_ssw": [72, 73, 111], "plot_wass1d_torch": [8, 10, 111], "plot_wass2_gan_torch": [9, 10, 111], "plot_wda": [49, 59, 111], "plot_weakot_vs_ot": [50, 59, 111], "plot_wirefram": [5, 72], "plt": [11, 13, 14, 16, 18, 21, 25, 27, 30, 36, 39, 46, 48, 77], "plug": 110, "pmlr": [0, 4, 9, 14, 48, 76, 86, 88, 91, 92, 98, 106, 109, 112], "pn": 95, "png": [4, 13, 14, 15, 18, 36, 53], "po": [30, 31, 33, 34, 36, 38, 39, 40, 88], "poggio": [0, 106, 109, 112], "point": [0, 16, 18, 32, 33, 35, 36, 38, 51, 53, 54, 56, 57, 58, 66, 68, 77, 83, 86, 88, 90, 92, 93, 95, 97, 98, 100, 107, 109, 110, 112], "pointer": [68, 110, 112], "pointwis": [35, 110], "pointwise_gromov_wasserstein": [35, 95], "poli": [11, 75], "polici": 82, "polit": 82, "polo": [0, 106, 109, 112], "polycollect": [11, 12, 75], "polynomi": 110, "polytechniqu": [1, 2, 3, 4, 6, 7, 8, 9, 15, 17, 18, 50, 52, 53], "polytehniqu": [46, 47], "polytop": 98, "pool": [94, 110], "pooladian": [88, 109], "pooling_tfgw": 34, "popul": [95, 100], "popular": 112, "pos1": [31, 33, 38, 39, 40], "pos2": [31, 33, 38, 39, 40], "posinf": 85, "posit": [0, 3, 8, 11, 12, 14, 37, 38, 41, 57, 60, 61, 62, 65, 67, 68, 69, 74, 75, 78, 82, 85, 88, 92, 95, 97, 99, 100, 101, 107, 109, 112], "possibl": [0, 83, 86, 88, 97, 107, 110, 112], "post": 82, "pot": [7, 8, 13, 20, 35, 36, 39, 44, 48, 56, 58, 59, 68, 78, 80, 84, 85, 87, 95, 96, 107, 110, 111], "pot_backend_disable_": 112, "pot_backend_disable_tensorflow": 112, "potenti": [0, 6, 9, 33, 39, 43, 59, 68, 86, 88, 95, 97, 98, 104, 105, 106, 107, 109, 110, 111], "potential_a": 107, "potential_b": 107, "potentials_init": 0, "power": [0, 60, 85, 97, 100, 103], "powernorm": 45, "pp": [0, 4, 9, 35, 67, 76, 86, 88, 91, 92, 99, 103, 106, 109, 112], "ppa": [33, 35, 95, 110], "pq": [0, 95], "pr": [83, 85, 110], "practic": [0, 9, 83, 86, 88, 90, 95, 98, 110, 112], "pre": [0, 39, 60, 83, 85, 86, 95, 112], "preced": 38, "precis": [0, 56, 85, 86, 88, 95, 97, 110], "precomput": [3, 36, 37, 41, 95, 112], "pred": 34, "predict": [21, 48, 88, 95, 98], "prefer": [0, 83, 90, 97], "prefix": 83, "preprin": [0, 106], "preprint": [0, 18, 67, 75, 86, 88, 90, 97, 99, 106, 109, 112], "preprocess": 39, "present": [21, 26, 28, 79, 83], "preserv": 68, "press": 110, "prevent": [110, 112], "previou": [87, 92, 95, 102], "previous": [3, 99], "primal": [51, 97, 105], "prime": 97, "print": [0, 2, 3, 5, 6, 7, 9, 31, 33, 34, 35, 37, 40, 41, 44, 51, 54, 56, 58, 60, 68, 78, 83, 86, 87, 88, 90, 91, 95, 97, 98, 99, 100, 104, 106, 108, 110], "print_g": 23, "print_period": 86, "print_rat": 97, "prior": [0, 83, 86, 97, 112], "prioriti": [0, 97], "privat": 82, "probabl": [3, 8, 18, 34, 37, 41, 56, 88, 92, 93, 95, 97, 109], "problem": [0, 7, 8, 9, 11, 12, 22, 23, 28, 41, 48, 51, 53, 56, 75, 80, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 112], "proc": 104, "procedur": [92, 112], "proceed": [0, 14, 86, 103, 104, 109, 112], "process": [0, 26, 27, 31, 33, 34, 39, 40, 44, 56, 57, 58, 60, 86, 87, 88, 92, 95, 97, 98, 104, 105, 106, 109, 110, 112], "processor": 110, "prod": 85, "produc": [33, 35, 95, 97], "product": [60, 68, 85, 88, 92, 93, 95, 102, 106, 107, 112], "profession": 82, "profil": 83, "program": [83, 86, 88, 97, 99, 109, 110, 112], "progress": 83, "prohibit": 112, "proj": [90, 103], "proj_sdp": 47, "proj_simplex": [3, 7, 8, 47, 56], "projc": 86, "project": [0, 3, 4, 5, 6, 7, 8, 11, 12, 16, 20, 22, 23, 24, 31, 33, 35, 37, 39, 40, 41, 46, 51, 54, 55, 56, 57, 60, 66, 67, 68, 75, 78, 82, 83, 84, 86, 88, 90, 92, 93, 95, 97, 98, 100, 103, 104, 106, 107, 109, 110, 112], "projection_robust_wasserstein": 90, "projection_simplex": 104, "projection_sparse_simplex": 107, "projector": 112, "projfda": 49, "projr": 86, "projwda": 49, "promot": [37, 86, 95, 110, 112], "prop": [23, 41, 100], "propag": 88, "proper": [85, 95, 110], "properli": 83, "properti": [3, 9, 88, 95, 97, 98, 107, 109, 112], "proport": [3, 31, 33, 37, 38, 40, 41, 60, 86, 88, 89, 101], "proportion": 38, "proportionali": [31, 33], "proportionn": 33, "proportions_": [23, 88], "propos": [0, 4, 7, 9, 11, 12, 14, 18, 34, 45, 49, 67, 71, 72, 75, 76, 86, 88, 91, 92, 95, 97, 98, 100, 105, 106, 108, 110, 112], "proposit": [95, 96, 104, 105], "proven": 112, "provid": [0, 1, 3, 37, 38, 39, 41, 60, 68, 83, 84, 85, 86, 88, 92, 93, 95, 97, 99, 101, 102, 106, 107, 109, 110, 112], "proxim": [33, 35, 95, 110], "pseudo": 60, "pseudorandom": 51, "pt": 23, "public": [82, 83, 110], "publish": [39, 82, 86, 95, 109], "puigcerv": [104, 109], "pull": [85, 110], "pure": 112, "purpos": [35, 78, 112], "push": [83, 110, 112], "pushforward": [0, 103], "put": [51, 66], "pwda": 49, "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 107, 110, 111], "pykeop": [0, 68], "pylab": [1, 3, 4, 7, 8, 12, 15, 17, 18, 20, 22, 23, 24, 26, 28, 31, 33, 35, 37, 38, 39, 40, 41, 44, 45, 47, 49, 50, 52, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 78, 79, 80], "pymanopt": [0, 90, 109, 112], "pypi": [57, 86, 109, 110], "pyplot": [2, 5, 6, 9, 11, 13, 14, 16, 18, 21, 25, 27, 30, 32, 34, 36, 39, 46, 48, 51, 53, 56, 77], "pyproject": 110, "pyrro": [0, 103, 109, 112], "pytest": [83, 110], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 85, 107, 110, 111, 112], "python3": [3, 37, 38, 41, 49], "python3stat": 110, "python_variable_method": 7, "pythonot": [60, 85, 109, 110], "pytorch": [0, 10, 43, 56, 84, 85, 89, 94, 101, 105, 107, 109, 110, 111, 112], "q": [0, 32, 35, 37, 39, 54, 55, 75, 78, 85, 86, 87, 95, 96, 97, 99, 100, 102, 107, 112], "qcqp": 98, "qfgw": 39, "qfgw_dist": 39, "qgw": [39, 95], "qgw_dist": 39, "qquad": 97, "qr": 85, "quad": [0, 7, 86, 87, 88, 90, 91, 95, 97, 98, 99, 100, 104, 105, 106, 107, 108, 112], "quadmesh": 6, "quadrat": [0, 10, 43, 80, 88, 89, 95, 99, 100, 101, 105, 107, 109, 110, 111], "qualiti": [51, 110], "quang": [44, 56, 109], "quantifi": 106, "quantil": [0, 95, 97, 100], "quantiti": [22, 28, 37], "quantiz": [42, 43, 84, 95, 109, 110, 111], "quantized_fused_gromov_wasserstein": [39, 95, 110], "quantized_fused_gromov_wasserstein_partit": [39, 95, 110], "quantized_fused_gromov_wasserstein_sampl": [39, 95, 110], "question": 109, "quick": [60, 110], "quicker": [110, 112], "quickli": [51, 60, 83, 110], "quickstart": [43, 70, 92, 99, 101, 104, 107, 109, 110, 111, 112], "quit": [48, 110, 112], "r": [0, 4, 5, 8, 9, 11, 12, 14, 23, 26, 27, 31, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 48, 49, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 65, 66, 67, 69, 72, 74, 75, 76, 78, 79, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112], "r1": 54, "r2": 54, "r_": [95, 102], "ra": 102, "race": 82, "radon": [0, 4, 71, 103, 109, 112], "rais": [0, 83, 85, 86, 95, 96, 97, 99, 100, 107, 110], "rak": 110, "rakotomamonji": [0, 49, 57, 67, 84, 86, 88, 90, 99, 109, 112], "rand": [1, 3, 5, 9, 25, 46, 49, 51, 52, 76, 78, 80, 85, 93], "randint": [6, 21, 27, 30, 34, 51], "randn": [0, 2, 4, 6, 7, 9, 16, 25, 32, 35, 44, 47, 49, 56, 58, 68, 72, 78, 85, 103, 110], "random": [0, 3, 4, 6, 7, 9, 15, 16, 21, 23, 25, 27, 30, 31, 32, 33, 35, 36, 37, 38, 40, 41, 44, 45, 46, 48, 49, 51, 52, 55, 56, 58, 66, 68, 72, 76, 77, 78, 79, 80, 85, 88, 89, 90, 93, 94, 95, 96, 103, 105, 107, 110], "random_init": 3, "random_product": 95, "random_se": 38, "random_split": 34, "random_st": [0, 3, 34, 36, 37, 41, 45, 89, 90, 95, 105], "randomint": 30, "randomli": 95, "randomst": [0, 3, 7, 21, 25, 27, 36, 45, 48, 58, 88, 89, 90, 95, 103, 105, 107], "rang": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 16, 17, 23, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 51, 53, 56, 60, 65, 66, 68, 71, 72, 75, 76, 77, 79, 80, 110], "rangl": [0, 85, 86, 95, 96, 98, 103], "rangle_f": [0, 86, 88, 95, 97, 98, 99, 100, 105, 106], "rank": [0, 39, 43, 52, 59, 60, 84, 89, 91, 95, 96, 101, 104, 107, 109, 110, 111], "ransport": 108, "rao": 100, "rapidli": 112, "raspberri": 110, "rate": [7, 95, 97, 105], "ratio": 3, "ravel": [6, 30, 79, 80, 104, 107], "rbrace": 48, "re": [0, 71, 72, 78, 79, 85, 97, 107], "reach": [49, 110], "read": [95, 99, 109], "readabl": [68, 110], "reader": [83, 112], "readi": 83, "readm": [110, 112], "readthedoc": 110, "real": [0, 49, 97, 100], "realign": 112, "realist": 9, "realli": 110, "realpath": [13, 14, 21, 25, 27, 36], "reason": [0, 82, 86, 110, 112], "recal": [28, 102], "recast": 102, "recast_ot_as_lasso": 102, "recast_semi_relaxed_as_lasso": 102, "receiv": [3, 83], "recent": [110, 112], "recognit": [0, 103, 109, 112], "recommend": [0, 83, 86, 95, 110, 112], "reconstruct": [30, 37, 95, 100, 104, 110], "reconstruction_error": 37, "record": [0, 8, 83, 86, 87, 88, 91, 92, 95, 96, 97, 98, 99, 100, 104, 105, 106, 108], "recov": [0, 3, 9, 56, 68, 95, 105, 106, 110, 112], "rect": 45, "rectangl": 45, "red": [8, 21, 27, 32, 34, 48, 54, 60], "redcross": [4, 13, 15, 18], "redko": [23, 24, 44, 56, 84, 86, 87, 88, 95, 109], "reduc": [0, 107], "reduce_lazytensor": 107, "reduct": [68, 90, 95, 107, 109, 110], "refactor": 110, "refer": [8, 31, 33, 40, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 105, 106, 107, 108, 110], "reflect": [4, 5, 9, 18, 79], "reformul": 102, "reg": [0, 1, 2, 6, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 33, 35, 37, 38, 45, 49, 54, 55, 58, 60, 62, 63, 65, 67, 68, 69, 75, 76, 78, 79, 80, 86, 88, 90, 91, 92, 95, 96, 97, 99, 100, 102, 104, 105, 106, 109, 110, 112], "reg0": 86, "reg1": [67, 99], "reg2": [67, 99], "reg_": [0, 20, 21, 22, 23, 24, 27, 28, 88, 106], "reg_1": 99, "reg_2": 99, "reg_cl": [20, 22, 88], "reg_div": [106, 110], "reg_gl": 69, "reg_init": [0, 96], "reg_lap": [24, 88], "reg_m": [0, 80, 88, 100, 106, 112], "reg_m_kl": [76, 80], "reg_m_l2": 80, "reg_margin": [56, 95], "reg_mi": [0, 106], "reg_paramet": 60, "reg_src": [24, 88], "reg_typ": [0, 62, 68, 69, 76, 88, 95, 104, 106, 112], "reg_type_gl": 69, "regard": [82, 110], "regardless": [82, 110], "region": 90, "regm_div": 106, "regpath": 0, "regress": [0, 79, 83, 102, 106, 109], "regul": 104, "regular": [0, 10, 11, 13, 16, 19, 20, 21, 22, 23, 27, 29, 33, 35, 37, 38, 42, 48, 55, 57, 70, 75, 81, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111], "regularis": 86, "regularization_path": 79, "reject": 82, "rel": [0, 20, 32, 33, 35, 36, 39, 41, 67, 86, 88, 91, 95, 98, 99, 108], "relat": [39, 86, 95, 106, 109, 110, 112], "relax": [0, 33, 42, 43, 48, 68, 74, 84, 88, 95, 99, 102, 104, 106, 109, 110, 111, 112], "releas": [1, 2, 3, 4, 6, 7, 8, 9, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33, 34, 35, 37, 38, 39, 41, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 62, 71, 72, 76, 78, 79, 80, 86, 109], "relev": 110, "reli": [0, 86, 95, 109, 112], "religion": 82, "reload_ext": 32, "reloc": 110, "relu": [6, 9], "remain": [8, 110], "remark": [88, 92, 112], "remi": [2, 3, 4, 6, 7, 8, 9, 11, 12, 15, 17, 20, 21, 22, 23, 25, 26, 27, 28, 34, 44, 46, 47, 49, 50, 52, 53, 56, 60, 61, 62, 63, 64, 65, 68, 69], "remot": [86, 109], "remov": [82, 85, 102, 107, 110], "removimg": 110, "renam": 110, "render": 110, "reorgan": 110, "rep": 85, "rep_idx": 39, "rep_indic": [39, 95], "rep_indices1": 39, "rep_indices2": 39, "rep_method": [39, 95], "repartit": [95, 100], "repeat": 85, "repeat_delai": [4, 5, 9, 18, 79], "repercuss": 82, "replac": [85, 95, 110, 112], "repo": [83, 110], "report": [82, 83, 109, 110], "repositori": [83, 110], "repres": [0, 22, 28, 30, 39, 48, 68, 82, 86, 95, 97, 112], "represent": [0, 31, 33, 37, 39, 40, 41, 58, 72, 82, 88, 95, 97, 99, 103, 104, 105, 109, 112], "reproduc": [0, 12, 83, 95, 105, 112], "request": [95, 97, 103, 107, 109], "requir": [0, 1, 30, 39, 48, 56, 68, 85, 88, 95, 97, 98, 100, 107, 109, 110, 112], "require_sort": [0, 97], "requires_grad": [1, 2, 7, 56], "requires_grad_": [1, 3, 4, 5, 8, 47], "res0": 78, "res_autodiff": 1, "res_envelop": 1, "res_last_step": 1, "res_mean": [71, 72], "res_std": [71, 72], "resampl": 47, "rescal": [0, 55, 95, 96, 101], "rescale_cost": [0, 54, 55, 95, 96], "rescale_for_imshow_plot": 46, "rescale_plan": 95, "research": [0, 84, 86, 95, 109, 110, 112], "reservoir": [100, 112], "reshap": [6, 21, 25, 27, 30, 34, 36, 38, 39, 49, 51, 54, 55, 57, 61, 62, 65, 67, 69, 74, 78, 79, 85, 86, 95, 100, 102], "resolut": 112, "resolv": [83, 92], "resp": [0, 86, 95, 99], "respect": [0, 7, 18, 34, 37, 39, 47, 60, 68, 82, 85, 86, 87, 88, 90, 94, 95, 96, 97, 98, 106, 109, 110, 112], "rest": 95, "restrict": [57, 86], "restructur": 110, "restructuredtext": 83, "result": [0, 3, 60, 68, 82, 83, 85, 95, 97, 107, 110, 112], "retriev": 104, "return": [0, 3, 4, 5, 6, 7, 9, 17, 18, 21, 24, 25, 27, 30, 31, 33, 34, 35, 36, 38, 39, 40, 47, 49, 60, 66, 67, 68, 69, 79, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "return_invers": 85, "return_matrix": [0, 97, 112], "return_valu": 107, "returncost": [0, 106], "revers": [8, 85], "review": [82, 83], "reweigh": [31, 40, 41], "rewrit": 110, "rgb": 38, "rgba": 38, "rho_": 95, "rho_1": 95, "rho_2": 95, "rho_f": 95, "ri": 102, "ridg": 90, "riemannian": [90, 109, 112], "right": [0, 7, 14, 15, 31, 33, 39, 40, 48, 54, 56, 60, 69, 74, 77, 82, 83, 86, 88, 92, 95, 97, 103, 104, 105, 107, 108, 110], "right_margin": 0, "rightarrow": 97, "rigollet": [0, 86, 91, 92, 109, 112], "rmsprop": 9, "rname": 69, "rng": [3, 7, 21, 25, 27, 36, 45, 48, 58], "roberto": [0, 108, 109, 112], "robust": [84, 90, 109, 110, 112], "rogerstanimoto": [0, 60, 107], "rolet": [0, 58, 84, 88, 104, 105, 109, 112], "romain": [0, 30, 32, 33, 35, 38, 84, 95, 109], "ronak": [51, 84, 97, 109], "ronakrm": 51, "root": [85, 109, 112], "rotat": [36, 60], "roughli": 110, "round": [0, 3, 31, 33, 35, 37, 38, 39, 40, 41, 54, 60, 95, 100, 106], "roussillon": [86, 109], "row": [38, 43, 59, 85, 86, 87, 95, 102, 107, 111], "rr": 97, "rtol": 85, "ruff": 110, "rule": [83, 99], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 85, 97, 103, 109, 110], "runner": 110, "runtim": 33, "runtimewarn": [24, 33, 35, 66, 75], "russellrao": [0, 60, 107], "rvert": [0, 92], "r\u00e9mi": [0, 3, 4, 8, 15, 17, 30, 31, 32, 33, 34, 35, 38, 40, 41, 84, 86, 88, 94, 95, 99, 109, 112], "s_": 86, "s_1": 7, "s_2": 7, "s_d": 92, "s_i": 88, "s_j": 88, "s_k": 7, "saclai": [15, 16, 34], "sag": [58, 105], "sag_entropic_transport": 105, "sag_pi": 58, "sai": 30, "saint": [18, 97, 109], "sale": 60, "salmona": [88, 92, 109], "salomon": [0, 97, 109], "same": [0, 26, 31, 35, 38, 39, 40, 60, 68, 78, 85, 87, 95, 97, 106, 107, 110, 112], "sampl": [0, 2, 7, 21, 27, 37, 38, 41, 43, 48, 49, 50, 52, 53, 58, 59, 60, 63, 66, 71, 72, 76, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112], "sampled_gromov_wasserstein": [35, 95], "samson": [0, 108, 109, 112], "samuel": 84, "satisfi": [0, 95, 99], "save": [0, 34, 53, 86, 95], "savefig": 53, "sbm": [3, 31, 33, 34, 37, 39, 40, 41], "sc": 30, "scalabl": [86, 109], "scalar": [0, 7, 85, 86, 87, 95, 106, 107], "scalarmapp": [30, 38], "scale": [0, 31, 33, 36, 39, 40, 45, 53, 54, 58, 75, 86, 88, 95, 96, 97, 98, 104, 105, 106, 107, 109, 110, 112], "scaled_atom": 37, "scaled_f": 37, "scaled_gweight": [31, 33, 38, 40], "scatter": [2, 3, 4, 5, 6, 7, 9, 15, 16, 17, 18, 20, 22, 23, 24, 26, 27, 28, 32, 34, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 60, 66, 72, 78, 79, 80], "scetbon": [0, 54, 55, 95, 96, 109], "scheme": [0, 87, 95, 96, 110], "schiebing": [0, 91, 109, 112], "schmitzer": [0, 75, 86, 88, 100, 106, 109, 112], "schur": 102, "schutz": 109, "schwing": [0, 103, 109, 112], "sci": 1, "scienc": [12, 21, 27, 46, 67, 88, 92, 93, 99, 109, 112], "scientif": [0, 11, 12, 86, 100, 106, 109, 110, 112], "scikit": [83, 95, 107, 110, 112], "scilimit": 1, "scipi": [0, 30, 35, 36, 38, 39, 60, 66, 78, 83, 85, 95, 97, 100, 104, 106, 107, 109, 110, 112], "screen": [0, 43, 59, 86, 89, 101, 109, 111, 112], "screenkhorn": [0, 43, 59, 84, 86, 89, 101, 110, 111, 112], "script": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 110], "seamlessli": [110, 112], "search": [0, 30, 31, 40, 60, 86, 95, 97, 99, 109, 110, 112], "searchsort": 85, "sebban": 95, "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 85, 87, 95, 96, 97, 99, 104, 107, 109, 110, 112], "section": [60, 96, 110, 112], "see": [0, 3, 6, 9, 46, 56, 60, 68, 83, 85, 86, 88, 89, 90, 92, 95, 96, 97, 98, 100, 102, 104, 105, 106, 110, 112], "seed": [0, 4, 6, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 46, 48, 49, 51, 52, 56, 68, 76, 77, 79, 80, 85, 88, 89, 93, 95, 103, 107], "seed_g1": [31, 33, 39, 40], "seed_g2": [31, 33, 39, 40], "seed_g3": [31, 33, 40], "seed_init": [0, 54, 95, 96], "seek": [83, 112], "seem": 83, "seen": [3, 86, 95, 97, 112], "segui": [0, 15, 58, 88, 104, 105, 109, 112], "select": [0, 34, 39, 57, 60, 88, 92, 95, 97, 107, 112], "selected_gamma": 79, "self": [6, 9, 34, 88, 107], "semi": [0, 29, 42, 43, 84, 85, 88, 89, 95, 99, 102, 104, 105, 106, 107, 109, 110, 111, 112], "semi_dual_obj_grad": 104, "semi_relax": [79, 102], "semi_relaxed_next_gamma": 102, "semi_relaxed_path": 102, "semicontinu": 58, "semidiscrete_wasserstein2_unif_circl": [0, 66, 97], "semilogi": [5, 7, 9], "semin": 112, "semirelax": 0, "semirelaxed_cg": 99, "semirelaxed_fgw_barycent": [41, 95, 110], "semirelaxed_fused_gromov_wasserstein": [40, 95], "semirelaxed_fused_gromov_wasserstein2": 95, "semirelaxed_gromov_barycent": [41, 95], "semirelaxed_gromov_wasserstein": [40, 95], "semirelaxed_gromov_wasserstein2": 95, "semirelaxed_init_plan": [41, 95, 110], "send": [18, 83], "sens": [48, 60, 86, 97, 109, 112], "sent": [31, 33, 112], "sep": 110, "separ": [82, 110, 112], "septier": [0, 72, 97, 103, 109], "sequenc": [38, 85], "seri": 60, "set": [0, 9, 20, 22, 24, 29, 30, 34, 38, 39, 41, 43, 48, 51, 60, 68, 82, 85, 86, 88, 89, 94, 95, 97, 99, 102, 106, 107, 109, 111, 112], "set1": 23, "set_alpha": [11, 75], "set_arrai": [30, 38], "set_aspect": 32, "set_gradi": [85, 110], "set_major_loc": 45, "set_param": 107, "set_titl": [5, 11, 14, 16, 39, 54, 56, 77], "set_vis": 14, "set_xlabel": [11, 72, 75], "set_xlim": [5, 16, 72, 77], "set_xlim3d": [11, 75], "set_xtick": [14, 18, 72, 77], "set_ylabel": [11, 14, 60, 72, 75], "set_ylim": [5, 16, 72, 77], "set_ylim3d": [11, 75], "set_ytick": [14, 18, 72, 77], "set_yticklabel": 45, "set_zlabel": [11, 72, 75], "set_zlim": 72, "set_zlim3d": [11, 75], "set_ztick": [18, 72], "setup": [39, 110], "setuptool": 110, "seuclidean": [0, 60, 107], "seventh": [33, 95, 109], "sever": [41, 109, 110, 112], "sexual": 82, "sgd": [58, 95, 105], "sgd_dual_pi": 58, "sgd_entropic_regular": 105, "sgw": 35, "shade": 37, "shannon": 112, "shape": [0, 3, 4, 5, 8, 11, 12, 14, 15, 18, 21, 23, 25, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 47, 49, 53, 60, 75, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "share": 112, "sharei": [14, 32], "sharex": 32, "sharper": [0, 86, 112], "shayan": [0, 97, 109], "shenzhen": [86, 109], "shift": [29, 43, 86, 88, 89, 107, 109, 110, 111, 112], "shiftx": [31, 33, 38, 39, 40], "shop": 60, "shortest": 39, "shortest_path": [30, 38, 39], "shortli": 112, "should": [0, 28, 38, 41, 56, 68, 80, 83, 85, 86, 88, 90, 95, 97, 102, 104, 106, 107, 109, 110, 112], "show": [1, 3, 8, 11, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 48, 49, 51, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 97], "showcas": 110, "showflier": 1, "shown": [68, 101, 112], "shrink": [45, 60], "shuffl": [34, 45], "siam": [0, 11, 12, 21, 27, 46, 67, 86, 88, 92, 93, 97, 99, 100, 106, 109, 112], "siddiqui": [0, 103, 109, 112], "side": [85, 102], "sig": 32, "sig2": 32, "sigma": [0, 9, 23, 25, 26, 27, 30, 44, 88, 89, 92, 98, 103, 107], "sigma_": [0, 88, 92], "sigma_1": 17, "sigma_2": 17, "sigma_3": 17, "sigma_4": 17, "sigma_b": 92, "sigma_d": 37, "sigma_i": 92, "sigma_n": [41, 95], "sigma_t": [0, 88, 92], "sign": [48, 52, 85, 88, 92, 110], "sign_eig": [88, 92], "signal": [86, 109, 112], "signatur": 110, "signific": 110, "sim": [0, 88, 98, 103], "sim_param": 88, "similar": [0, 9, 28, 56, 60, 68, 88, 95, 102, 112], "similarity_param": 88, "similarli": [68, 112], "simpl": [0, 3, 7, 13, 36, 56, 60, 89, 97, 107, 110, 112], "simpler": [88, 110], "simplex": [0, 3, 7, 8, 37, 41, 56, 86, 95, 97, 104, 107, 109, 110, 112], "simpli": [39, 56], "simplifi": 110, "simsekli": [4, 109, 112], "simul": 77, "simultan": 3, "sin": [9, 25, 30, 38, 39, 49, 54, 64, 66, 72, 107], "sinc": [48, 110, 112], "singapor": [0, 97, 109], "singh": [56, 95, 97, 109], "singl": [33, 36, 38, 88, 95, 98, 109], "singleton": 107, "sinhorn": 104, "sinkhoorn": 68, "sinkhorn": [0, 9, 15, 19, 20, 22, 24, 33, 35, 43, 57, 59, 67, 81, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 99, 101, 104, 106, 107, 108, 109, 110, 111], "sinkhorn2": [0, 65, 68, 86, 109, 110, 112], "sinkhorn_epsilon_sc": [0, 86, 88, 112], "sinkhorn_knopp": [0, 86, 106, 112], "sinkhorn_knopp_unbalanc": [0, 106, 112], "sinkhorn_l1l2_gl": [88, 110, 112], "sinkhorn_log": [0, 86, 87, 88, 90, 95, 110, 112], "sinkhorn_lpl1_mm": [0, 88, 110, 112], "sinkhorn_method": 90, "sinkhorn_pi": 58, "sinkhorn_reg_sc": [0, 106], "sinkhorn_reg_scaling_unbalanc": [0, 106], "sinkhorn_stabil": [0, 86, 88, 106, 112], "sinkhorn_stabilized_unbalanc": [0, 106, 112], "sinkhorn_translation_invari": [0, 76, 106], "sinkhorn_unbalanc": [0, 68, 74, 76, 80, 106, 112], "sinkhorn_unbalanced2": [0, 106, 112], "sinkhorn_unbalanced_translation_invari": [0, 106, 110], "sinkhornl1l2": 110, "sinkhornl1l2transport": [20, 110, 112], "sinkhornlpl1transport": [20, 22, 110, 112], "sinkhorntransport": [20, 21, 22, 23, 24, 27, 28, 112], "sinkorn": 110, "site": [3, 37, 38, 41, 49], "size": [0, 5, 7, 9, 16, 21, 27, 31, 33, 34, 37, 38, 39, 40, 41, 44, 48, 60, 66, 68, 77, 82, 85, 86, 87, 88, 89, 90, 92, 94, 95, 97, 101, 102, 105, 107, 110, 112], "size_batch": 9, "sizebari": 30, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 85, "skew": [88, 92], "skip": [0, 97], "sklearn": [3, 34, 36, 37, 41, 45, 95, 107, 110], "slack": 109, "slice": [0, 10, 73, 84, 89, 97, 101, 107, 109, 110, 111, 112], "sliced_wasserstein_dist": [0, 4, 71, 103, 110], "sliced_wasserstein_spher": [0, 72, 103], "sliced_wasserstein_sphere_unif": [0, 5, 103], "slightli": 110, "slog": [35, 86], "slogdet": 85, "slope": 102, "slow": [0, 86, 90, 110, 112], "slower": 112, "smacof_md": 36, "small": [0, 3, 8, 60, 69, 83, 86, 88, 90, 95, 109, 110, 112], "smaller": [85, 95, 110], "smallest": 107, "smapl": 110, "smartphon": 110, "smith": [88, 92, 109, 112], "smooth": [0, 12, 43, 59, 68, 70, 84, 88, 89, 98, 101, 109, 110, 111, 112], "smooth_ot_du": [62, 68, 112], "smooth_ot_semi_du": [104, 112], "smoother": [95, 100], "snippet": 83, "so": [0, 3, 9, 33, 51, 68, 80, 95, 97, 107, 109, 110, 112], "sobolevski": [0, 97, 109], "social": 82, "soft": 88, "softmax": 47, "softwar": [109, 110], "sokalmichen": [0, 60, 107], "sokalsneath": [0, 60, 107], "sol": [51, 68, 110], "sol_geo": 68, "sol_gw": 68, "sold": 60, "soler": 0, "solomon": [0, 33, 35, 86, 95, 100, 109, 112], "solut": [0, 51, 53, 60, 68, 69, 86, 88, 92, 95, 97, 100, 102, 107, 110, 112], "solv": [0, 1, 3, 22, 28, 48, 53, 54, 56, 63, 80, 85, 86, 87, 88, 90, 91, 92, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 108, 110], "solve_1d_linesearch_quad": 99, "solve_du": 104, "solve_dual_entrop": 58, "solve_gromov": [0, 68, 110], "solve_gromov_linesearch": [95, 99, 110], "solve_partial_gromov_linesearch": [95, 99], "solve_sampl": [0, 55, 68, 110, 112], "solve_semi_du": 104, "solve_semi_dual_entrop": 58, "solve_semirelaxed_gromov_linesearch": [95, 99], "solver": [0, 10, 12, 32, 35, 39, 42, 43, 51, 53, 61, 68, 70, 84, 86, 87, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111], "solver_1d": [8, 66], "some": [22, 28, 41, 78, 84, 88, 95, 100, 107, 109, 110, 112], "some_funct": 107, "someth": [60, 83], "sometim": [0, 86, 112], "sonia": [1, 34, 84, 109], "soon": 112, "sort": [0, 45, 77, 83, 85, 95, 97, 100, 112], "sort2": 85, "sourc": [0, 1, 2, 3, 4, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 21, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "sp": [35, 36, 51, 78, 95, 100], "sp_to_adjac": 30, "space": [0, 18, 34, 35, 36, 39, 41, 46, 48, 56, 68, 78, 82, 85, 86, 87, 88, 92, 93, 95, 97, 100, 103, 107, 109, 110, 112], "span": [95, 97], "spars": [0, 30, 38, 39, 43, 51, 60, 68, 70, 85, 86, 89, 90, 95, 97, 101, 104, 106, 107, 109, 110, 111, 112], "sparse_plan": 107, "sparsiti": [33, 35, 37, 62, 68, 95, 104, 109, 110, 112], "sparsity_constrain": [62, 104], "sparsityconstrain": 104, "spatial": [0, 35, 36, 60, 78, 95, 100, 107], "spc1": 39, "spc2": 39, "spc3": 39, "spc_1": 39, "spc_2": 39, "spd": 107, "special": [66, 85], "specif": [0, 36, 82, 83, 85, 86, 88, 95, 106, 109, 110, 112], "specifi": [24, 38, 39, 78, 85, 88, 95, 104, 107, 110], "spectra": 112, "spectral": 95, "spectral_fus": 95, "spectral_soft": 95, "speed": [0, 86, 110, 112], "speedup": [0, 86, 110, 112], "sphere": [10, 43, 48, 103, 111], "spheric": [0, 10, 43, 73, 84, 97, 103, 109, 111], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 110], "sphinx_gallery_thumbnail_numb": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 17, 18, 21, 22, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 77, 78, 79], "spine": 14, "split": [34, 48, 90, 110], "split_class": 90, "spring_layout": [31, 33, 34, 39, 40], "springer": [0, 39, 86, 95, 97, 109], "sqeuclidean": [0, 22, 23, 54, 60, 64, 65, 68, 86, 88, 95, 96, 97, 105, 107], "sqrt": [0, 5, 17, 37, 41, 47, 49, 54, 55, 68, 69, 72, 85, 92, 95, 100, 103], "sqrtm": [35, 78, 85, 110], "squar": [0, 7, 36, 39, 48, 60, 64, 65, 68, 85, 88, 90, 93, 95, 96, 98, 103, 104, 106, 107, 109, 110, 112], "square_loss": [0, 32, 33, 35, 36, 41, 95], "squaredl2": 104, "squeez": 85, "sr": [31, 40, 95, 110], "src": 8, "srfgw": [31, 40, 95, 99], "srfgw_23": [31, 40], "srfgw_32": [31, 40], "srfgw_dist": [31, 40], "srfgw_e": 31, "srgw": [31, 40, 95], "srgw_23": [31, 40], "srgw_32": [31, 40], "srgw_dist": [31, 40], "srgw_e": 31, "ssnb": [48, 88, 98, 110], "sssr": 97, "ssw": [0, 5, 103], "ssw_1": 72, "ssw_2": [0, 5, 103], "ssw_p": [0, 103], "st": [23, 24, 90], "stabil": [0, 86, 97, 106, 109, 110, 112], "stabl": [0, 6, 85, 95, 109, 110, 112], "stabthr": 86, "stack": [4, 15, 17, 18, 37, 41, 48, 85], "stai": [101, 110], "stan": [20, 21, 22, 26, 27, 28], "stand": [0, 103], "standard": [12, 85, 89, 94, 95, 98, 107, 110], "stanisla": [20, 21, 22, 26, 27, 28, 84, 109], "star": [36, 38], "start": [0, 37, 41, 51, 54, 60, 83, 85, 86, 90, 102, 106, 107, 110, 112], "start_bapg": 33, "start_cg": 33, "start_color": 39, "start_pgd": 33, "start_ppa": 33, "starting_color": [31, 33, 39, 40], "stat": 85, "state": [0, 95, 96, 97, 110], "statement": 98, "stati": 9, "statist": [0, 9, 48, 76, 86, 88, 91, 97, 98, 104, 106, 109, 112], "statu": [0, 91, 93, 97, 107, 108, 110], "std": [8, 11, 12, 14, 32, 51, 57, 61, 62, 65, 66, 67, 69, 71, 72, 74, 75, 76, 85, 89, 95, 110], "std_sinkh": 76, "std_sinkh_ti": 76, "std_w2": 66, "std_w2_circl": 66, "stderr": 110, "steelblu": 16, "steepest": 90, "step": [0, 2, 3, 4, 6, 7, 8, 9, 30, 34, 39, 56, 83, 85, 86, 92, 95, 97, 99], "step_siz": 92, "stephen": 107, "stepsiz": 90, "stiefel": [90, 112], "still": [68, 92, 110, 112], "stochast": [0, 2, 3, 6, 34, 39, 43, 59, 84, 86, 92, 95, 101, 109, 110, 111, 112], "stochastic_block_model": [31, 33, 37, 39, 40, 41], "stochastic_blockmodel_graph": 34, "stochastic_gradient_desc": 92, "stole": 64, "stop": [0, 85, 86, 87, 88, 90, 91, 95, 96, 97, 98, 99, 100, 104, 106, 108], "stop_criterion": [0, 41, 95, 110], "stopinnerthr": [0, 88, 98], "stopthr": [0, 54, 76, 86, 88, 90, 91, 95, 96, 97, 98, 99, 100, 104, 106, 108, 110], "stopthr2": [0, 99, 108], "stopthr_dykstra": [0, 95], "store": [34, 88, 97, 107], "str": [0, 33, 35, 37, 41, 60, 78, 80, 86, 88, 89, 90, 92, 95, 96, 97, 98, 101, 104, 105, 106, 107], "strategi": [0, 41, 68, 95, 96], "stream": 110, "streamlin": 110, "strength": [68, 86], "stress": 36, "strictli": [64, 97, 107, 112], "string": [0, 86, 87, 88, 92, 95, 97, 105, 106, 107], "stromm": [92, 109], "strong": [88, 98, 112], "strongli": [0, 43, 59, 83, 86, 88, 95, 98, 109, 110, 111, 112], "strongly_convex_const": [88, 98], "structur": [0, 30, 33, 35, 37, 38, 39, 41, 85, 94, 95, 109, 110, 112], "structure_nois": 30, "studi": 9, "stuff": 110, "style": [1, 48, 101], "st\u00f6ter": [4, 109, 112], "sub": [0, 102, 109, 110, 112], "sub_sample_factor": 18, "subcal": 110, "subgraph": [41, 42, 43, 111], "subject": [97, 110], "submit": 83, "submodul": [109, 110], "subobject": 107, "subplot": [3, 5, 6, 9, 11, 12, 13, 14, 16, 17, 20, 21, 22, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 47, 49, 50, 52, 54, 55, 56, 60, 64, 65, 67, 69, 75, 78, 79, 80, 101], "subplot2grid": [16, 36], "subroutin": 95, "subscript": 85, "subset": [0, 34, 97, 98, 107], "subset_a": 77, "subset_b": 77, "subspac": [18, 90, 97, 109, 112], "substack": [95, 104, 107], "success": [0, 95], "successfulli": 56, "suggest": 95, "sum": [0, 3, 6, 7, 8, 12, 13, 14, 15, 31, 33, 34, 35, 37, 38, 40, 41, 49, 50, 55, 60, 63, 65, 67, 68, 69, 72, 74, 77, 79, 80, 85, 86, 88, 90, 95, 96, 97, 99, 100, 102, 103, 104, 105, 107, 109, 112], "sum_": [0, 5, 7, 60, 86, 87, 88, 90, 92, 95, 97, 98, 99, 100, 103, 105, 106, 112], "sum_d": [37, 95], "sum_i": [0, 32, 86, 95, 97, 104, 105, 106, 107, 108, 112], "sum_j": [0, 32, 95, 97, 104, 105, 108], "summat": 85, "sun": [0, 103, 109, 112], "sup": 30, "sup_": 104, "super": [6, 9, 34], "supervis": [29, 43, 86, 88, 89, 107, 109, 110, 111, 112], "supplementari": 98, "support": [0, 4, 6, 8, 19, 20, 43, 84, 86, 87, 91, 93, 95, 97, 99, 103, 110, 111], "suppos": [7, 86, 112], "suptitl": [13, 30, 41], "sure": [0, 83, 95, 97, 109], "suresh": [97, 109], "surplu": 112, "sutherland": 109, "svg": 53, "sw": 5, "swap": 85, "swd": [0, 71, 103], "switchx": [31, 33, 38, 39, 40], "sx": 53, "sxm2": 85, "sy": [53, 83], "symbol": 107, "symmetr": [0, 31, 38, 40, 85, 86, 95, 107, 110, 112], "symmetri": [0, 95, 110], "synthet": 39, "system": [0, 26, 27, 33, 34, 44, 56, 57, 58, 83, 85, 86, 88, 92, 95, 98, 104, 105, 106, 109, 112], "sz": [4, 15, 18], "s\u00e9journ\u00e9": [0, 76, 86, 95, 106, 109, 112], "t": [0, 7, 8, 11, 12, 14, 17, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 48, 49, 51, 53, 56, 60, 66, 72, 75, 76, 79, 80, 86, 87, 88, 90, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "t1": 53, "t2": [53, 79, 102], "t_": [0, 41, 95], "t_bapg": 33, "t_bapg_spars": 33, "t_bari": 93, "t_cg": 33, "t_cg_sparsiti": 33, "t_est": 3, "t_global": [39, 95], "t_i": 88, "t_j": 88, "t_list": [79, 102], "t_list2": 79, "t_max": 38, "t_mean": 46, "t_mean_resc": 46, "t_pgd": 33, "t_pgd_sparsiti": 33, "t_ppa": 33, "t_ppa_spars": 33, "t_rand": [46, 93], "t_rand_resc": 46, "t_reg": [109, 112], "t_unif": 3, "tab": 34, "tab10": [3, 37, 41, 45], "tabl": 86, "tag": 110, "take": [0, 39, 46, 66, 68, 82, 93, 95, 97, 98, 99, 102, 105, 106, 110, 112], "take_along_axi": 85, "taken": [0, 37, 41, 68, 95, 107, 112], "tang": [33, 95, 109], "tangui": [18, 35, 46, 47, 48, 84, 95, 109], "target": [0, 2, 7, 8, 9, 25, 26, 29, 36, 38, 39, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 74, 79, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112], "tarnsport": 110, "task": [38, 83], "tau": [86, 90, 106], "tavenard": [0, 30, 32, 33, 35, 38, 84, 95, 100, 109, 112], "taylor": [48, 88, 98, 109], "team": [82, 83, 110], "templat": [42, 43, 52, 84, 94, 109, 110, 111], "temporari": 82, "temporarili": 82, "ten": 95, "tend": [33, 35, 39, 60], "tensor": [0, 1, 3, 4, 7, 8, 34, 47, 56, 60, 85, 86, 94, 95, 97, 99, 106, 107, 110, 112], "tensor_product": 95, "tensorflow": [0, 85, 97, 103, 109, 110, 112], "tensorflowbackend": 85, "tensorshap": 8, "tent": 38, "term": [0, 1, 9, 48, 63, 67, 86, 87, 88, 90, 95, 96, 97, 98, 99, 100, 104, 105, 106, 107, 110, 112], "termin": 49, "tesla": 85, "test": [0, 30, 34, 49, 83, 85, 95, 99, 107, 109, 110], "test_acc": 34, "test_correct": 34, "test_graph": 34, "test_gromov": 110, "test_load": 34, "tetali": [0, 108, 109, 112], "text": [0, 2, 5, 6, 7, 9, 15, 17, 21, 23, 25, 26, 47, 50, 52, 56, 60, 63, 67, 68, 71, 72, 74, 83, 86, 88, 92, 95, 97, 98, 100, 102, 106, 107, 112], "textrm": 97, "texttt": [0, 106], "tf": [109, 110], "tfgw": [94, 109], "tfgw_": 94, "tfgwpool": [34, 94], "th": [41, 86, 87, 95, 97, 102, 104, 109], "th_a": 102, "than": [8, 60, 68, 85, 95, 100, 101, 107, 110, 112], "thank": [83, 84, 102, 110], "thei": [0, 39, 82, 94, 95, 97, 110, 112], "them": [0, 31, 38, 39, 40, 85, 88, 95, 97, 100, 110], "theo": 84, "theorem": [0, 48, 88, 92, 98, 110, 112], "theori": [0, 88, 92, 95, 96, 109, 112], "thesi": [48, 88, 98, 109], "theta": [0, 2, 6, 9, 17, 26, 39, 47, 54, 66, 86, 89, 97, 103], "theta_": [0, 103], "thi": [0, 1, 3, 4, 7, 8, 9, 11, 12, 13, 14, 18, 20, 21, 22, 23, 24, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 51, 53, 55, 56, 57, 58, 60, 61, 62, 66, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "thibault": [95, 109], "thing": 60, "thirion": [95, 109], "thirti": [33, 95, 109], "this_fil": [13, 14, 21, 25, 27, 36], "those": [0, 13, 60, 86, 88, 95, 106, 107, 112], "thr": 101, "thre": [95, 100], "thread": [0, 97, 107], "threaten": 82, "three": [0, 95, 96, 106], "thresh": 30, "threshinf": 30, "threshold": [0, 30, 85, 86, 87, 88, 90, 91, 95, 96, 97, 98, 99, 100, 101, 104, 106, 108, 112], "threshold_plan": 95, "threshsup": 30, "through": [0, 79, 102, 106, 109, 112], "throw": [8, 110], "thu": [60, 107], "thual": [95, 109], "tianlin": 109, "tic": [0, 1, 12, 32, 51, 107, 110], "tick": 72, "tick_label": 1, "tick_param": [45, 54, 69], "tick_right": [44, 56], "tick_top": [44, 56], "ticker": 45, "ticklabel_format": 1, "ticks_loc": 45, "tight": 53, "tight_layout": [11, 12, 13, 14, 16, 17, 18, 20, 21, 22, 24, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 45, 49, 54, 55, 56, 60, 64, 65, 75], "tile": 85, "time": [0, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 85, 86, 88, 95, 97, 98, 105, 107, 109, 110, 112], "time_bapg": 33, "time_cg": 33, "time_emd": 60, "time_entrop": 54, "time_pgd": 33, "time_ppa": 33, "time_sinkhorn_reg": 60, "timeout": 110, "times_autodiff": 1, "times_envelop": 1, "times_last_step": 1, "titl": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 60, 63, 64, 65, 66, 67, 69, 71, 72, 74, 75, 78, 79, 80, 83, 101, 109], "titouan": [0, 30, 31, 32, 33, 35, 38, 40, 41, 84, 94, 95, 99, 109], "tm": [0, 66, 97], "tmp1": [13, 17], "tmp2": [13, 17], "to_networkx": 34, "to_numpi": 85, "to_numpy_arrai": [31, 33, 37, 39, 40, 41], "to_rgb": [8, 17], "to_rgba": [30, 38], "to_undirect": 34, "toarrai": [30, 35, 38, 85, 102], "toc": [0, 12, 32, 51, 107, 110], "tocsr": 85, "todens": 85, "tog": [0, 86, 97, 109, 112], "togeth": 62, "tol": [0, 23, 33, 36, 41, 54, 55, 56, 88, 95, 100, 104], "tol_ab": [0, 95], "tol_bcd": 87, "tol_inn": [37, 95], "tol_ot": [56, 95], "tol_out": [37, 95], "tol_rel": [0, 33, 95], "tol_sinkhorn": 87, "toler": [0, 36, 85, 87, 92, 93, 95, 100, 104], "tolist": 45, "toml": 110, "tong": 109, "too": [0, 86, 90, 112], "tool": [83, 112], "toolbox": [43, 59, 68, 84, 110, 111, 112], "tooth": [4, 13, 18], "top": [0, 14, 39, 41, 45, 83, 95, 96, 101], "toq": [0, 1, 107], "torch": [0, 1, 3, 4, 5, 7, 8, 9, 34, 47, 56, 85, 94, 109, 110, 112], "torch_geometr": 34, "torchbackend": [85, 110], "toronto": 112, "total": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 95, 97, 100, 106, 111, 112], "toward": 82, "tp": [0, 66, 79, 97], "tplt_adjac": 94, "tplt_featur": 94, "tplt_weight": 94, "tr": [0, 92], "trace": 85, "traceback": 83, "track": [83, 95, 110], "tracker": 83, "tractogram": [86, 109], "trade": [0, 37, 38, 39, 41, 94, 95], "train": [0, 21, 27, 49, 56, 86, 88, 89, 90, 94, 97, 106, 110, 112], "train_acc": 34, "train_correct": 34, "train_graph": 34, "train_load": 34, "train_node_weight": 94, "tran": [44, 56, 95, 109], "transact": [0, 67, 86, 88, 97, 99, 109, 112], "transdata": [44, 56], "transfer": [21, 112], "transform": [5, 20, 21, 22, 24, 26, 28, 88, 95, 105, 107, 112], "transform_label": 88, "translat": [0, 43, 53, 81, 89, 106, 109, 110, 111, 112], "transloc": 97, "transp": [20, 22, 24, 25, 28, 80], "transp_i": 88, "transp_x": 88, "transp_xs_emd": [20, 21, 22, 24, 27], "transp_xs_emd_laplac": 24, "transp_xs_gaussian": 26, "transp_xs_gaussian_new": 26, "transp_xs_l1l2": 20, "transp_xs_linear": 26, "transp_xs_linear_new": 26, "transp_xs_lpl1": [20, 22], "transp_xs_sinkhorn": [20, 21, 22, 24, 27], "transp_xs_sinkhorn_semi": 28, "transp_xs_sinkhorn_un": 28, "transp_xt": 88, "transp_xt_emd": 21, "transp_xt_sinkhorn": 21, "transpar": 53, "transport": [0, 4, 6, 10, 11, 12, 27, 30, 31, 33, 34, 35, 38, 40, 41, 43, 48, 59, 67, 70, 75, 77, 78, 81, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 110, 111], "transpos": [8, 44, 47, 56, 85, 110], "travi": 110, "trend": 92, "tri": [110, 112], "triangl": 36, "tribut": [0, 97, 109], "trick": [30, 100, 112], "trigger": [7, 8, 87], "troll": 82, "trouv\u00e9": [0, 86, 109, 112], "true": [0, 1, 2, 3, 4, 5, 7, 8, 9, 11, 14, 17, 18, 20, 23, 26, 27, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 47, 49, 51, 53, 54, 55, 56, 57, 58, 60, 61, 67, 68, 69, 72, 74, 76, 78, 79, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 112], "trust": [86, 90], "trustregion": 90, "try": 110, "ts_local": [39, 95], "tsne": 34, "tsne_embed": 34, "tsne_embeddings_0": 34, "tsne_embeddings_1": 34, "tu": 112, "tuia": [0, 67, 86, 88, 99, 109, 112], "tune": 100, "tupl": [0, 86, 87, 95, 97, 99, 106, 107], "tuple_p": 95, "tuple_pxy_feat": 95, "tuple_pxy_samp": 95, "tuple_weight": 95, "turn": 107, "tutori": [6, 83, 112], "tv": [0, 65, 68, 69, 106], "tw": [8, 94, 109], "tw_": 94, "tweak": 110, "twenti": [0, 86, 104, 109, 112], "two": [0, 3, 4, 21, 23, 32, 38, 39, 44, 46, 54, 56, 58, 60, 62, 65, 68, 77, 83, 85, 86, 87, 88, 91, 92, 93, 95, 97, 99, 102, 106, 107, 108, 109, 110, 112], "twpool": 94, "tx": [0, 13, 17, 103], "ty": [13, 17], "type": [0, 39, 46, 68, 83, 85, 86, 88, 89, 92, 93, 94, 95, 97, 99, 100, 102, 103, 104, 105, 107, 109, 110, 112], "type_a": [0, 85, 103, 107, 110], "typeerror": 85, "typo": 98, "u": [0, 2, 3, 4, 6, 7, 15, 45, 46, 47, 48, 56, 60, 72, 75, 76, 83, 86, 90, 95, 97, 98, 100, 103, 105, 106, 107, 109, 110, 112], "u0": 90, "u_": [0, 103, 106], "u_i": 86, "u_valu": [0, 97], "u_weight": [0, 97], "ub": [5, 44, 56, 66, 72, 79, 80], "ucoot": [56, 95], "un": 110, "unaccept": 82, "unattribut": [37, 41], "unb": 69, "unbalanc": [0, 59, 69, 78, 81, 84, 86, 87, 88, 89, 95, 100, 101, 102, 107, 109, 110, 111], "unbalanced_co_optimal_transport": [56, 95], "unbalanced_co_optimal_transport2": 95, "unbalanced_method": 95, "unbalanced_solv": [56, 95], "unbalanced_typ": [0, 68, 69], "unbalancedsinkhorntransport": 88, "unbias": 95, "undefin": 107, "undefinedparamet": 107, "under": [0, 83, 86, 87, 88, 95, 96, 109], "underscor": 51, "underset": [0, 97, 103], "understand": [22, 28], "understood": 16, "unexpect": 7, "unic": [11, 12, 20, 21, 22, 23, 25, 26, 27, 28, 34, 44, 49, 56, 61, 62, 63, 64, 65, 69], "unicodedecodeerror": 110, "unif": [0, 1, 3, 5, 7, 15, 16, 18, 32, 35, 36, 37, 38, 41, 47, 50, 51, 52, 56, 58, 64, 66, 68, 78, 97, 103, 105, 107], "unifi": [68, 110, 112], "uniform": [0, 5, 7, 37, 41, 48, 50, 52, 56, 57, 60, 63, 68, 71, 72, 76, 77, 79, 80, 85, 86, 87, 88, 91, 94, 95, 97, 98, 103, 106, 107, 108, 110, 112], "uniformli": [37, 41], "uniqu": [31, 33, 39, 40, 45, 85, 112], "unique_color": [31, 33, 39, 40], "unique_colors1": 39, "unique_colors2": 39, "unit": [38, 48, 103, 112], "univ": [5, 23, 24, 44, 56, 66, 72, 79, 80], "univers": [48, 88, 98, 109], "universit": [15, 16], "unknown": 86, "unlabel": [0, 38, 78, 88, 95, 99, 100, 109, 112], "unmaintain": 110, "unmix": [10, 37, 41, 43, 86, 95, 107, 109, 110, 111], "unmixings2d": [37, 41], "unnecessari": 110, "unnorm": [0, 95, 100, 106], "unregist": 110, "unregular": [0, 86, 88, 98, 99, 102, 104, 106], "unsupervis": [29, 43, 88, 89, 107, 111, 112], "until": 110, "unus": 110, "unwant": [0, 95, 97], "unwarr": 112, "unwelcom": 82, "uot": [74, 95, 102, 109, 110, 112], "uot2": 102, "uot_cost_matrix": 95, "uot_parameters_and_measur": 95, "up": [0, 3, 83, 100, 106, 110], "upart1": 39, "upart2": 39, "updat": [25, 62, 86, 95, 97, 98, 102, 105, 107, 110], "update_barycenter_featur": [95, 110], "update_barycenter_structur": [95, 110], "upgrad": 110, "upper": [0, 39, 45, 46, 48, 74, 77, 88, 97, 98, 101], "upsid": 101, "url": 109, "us": [0, 3, 4, 7, 8, 9, 11, 12, 21, 26, 27, 28, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 51, 53, 54, 55, 58, 59, 60, 61, 67, 68, 74, 75, 77, 78, 80, 82, 83, 85, 86, 91, 94, 95, 96, 97, 100, 103, 106, 108, 110, 111], "usag": 83, "use_adam_optim": [37, 95], "use_gridspec": 60, "use_log": [37, 95], "use_target": 95, "use_tensor": [0, 60, 107], "useless": [95, 110], "user": [0, 39, 67, 83, 85, 95, 109, 110], "userwarn": [3, 6, 7, 8, 16, 20, 22, 23, 24, 33, 35, 37, 38, 41, 51, 55, 57, 60, 67, 68, 75, 78], "uss": 110, "usual": [95, 110], "util": [0, 1, 3, 7, 8, 11, 12, 14, 34, 47, 51, 56, 58, 60, 68, 75, 85, 97, 98, 110], "uu": 18, "v": [0, 2, 6, 19, 29, 30, 31, 33, 38, 39, 40, 43, 45, 58, 59, 60, 72, 75, 76, 83, 85, 86, 88, 89, 97, 98, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112], "v1": [13, 17, 31, 33, 38, 39, 40], "v100": 85, "v2": [13, 17, 31, 33, 38, 39, 40], "v22": 109, "v3": [13, 17], "v37i8": 56, "v4": [13, 17], "v_1": 98, "v_j": [86, 98], "v_n": 98, "v_valu": [0, 97], "v_weight": [0, 97], "va": 60, "val": [17, 47, 49, 85], "val_map": [30, 38], "valfunct": 110, "valid": [97, 107], "valu": [0, 1, 3, 8, 28, 30, 32, 37, 38, 41, 49, 51, 54, 60, 65, 66, 68, 75, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 107, 110, 112], "value_bw": 110, "value_linear": [0, 1, 68, 95, 96, 107, 110], "value_quad": [0, 68, 107, 110], "valueerror": 107, "van": [0, 95, 97, 109, 112], "vanish": [102, 112], "var": 68, "varepsilon": [14, 87, 95], "varepsilon_": [87, 95], "varepsilon_1": 87, "varepsilon_2": 87, "varepsilon_f": [87, 95], "vari": [37, 41], "variabl": [0, 37, 41, 86, 88, 91, 93, 95, 97, 98, 102, 104, 105, 108, 110, 112], "varianc": [2, 6, 26, 35], "variant": [69, 95, 98, 110, 112], "variat": [0, 12, 65, 91, 95, 99, 106, 108, 112], "variou": [39, 84, 107, 110], "varphi": [48, 88, 98], "varphi_": 98, "varphi_1": 98, "varphi_i": 98, "varphi_j": 98, "varphi_l": [48, 98], "varphi_n": 98, "varphi_u": [48, 98], "vautier": [35, 36, 84], "vayer": [0, 3, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 44, 45, 56, 84, 87, 90, 94, 95, 99, 109, 112], "vdot": 97, "vec": [17, 47], "vecsiz": [51, 97], "vector": [0, 7, 39, 85, 86, 87, 88, 93, 94, 95, 96, 97, 102, 103, 106, 107, 109, 110, 112], "verbos": [0, 20, 23, 26, 27, 32, 33, 35, 37, 41, 44, 51, 54, 56, 57, 61, 67, 74, 78, 86, 87, 88, 90, 91, 95, 97, 98, 99, 100, 104, 106, 108], "verbose2": [88, 98], "veri": [0, 28, 60, 68, 86, 95, 107, 109, 110, 112], "verifi": 83, "version": [0, 38, 66, 68, 82, 83, 85, 86, 99, 102, 106, 109, 110, 112], "vert": [11, 75], "vertic": [45, 53], "via": [0, 3, 4, 37, 39, 41, 43, 59, 82, 86, 88, 89, 91, 95, 99, 109, 110, 111, 112], "vialard": [0, 75, 76, 86, 88, 95, 100, 106, 109, 112], "view": 110, "view_init": [18, 54, 72], "viewabl": 83, "viewpoint": 82, "vika": [97, 109], "vincent": [0, 3, 31, 33, 34, 35, 37, 38, 39, 40, 41, 84, 94, 95, 99, 109, 112], "violat": [95, 112], "viridi": [11, 30, 38, 75], "vishnu": [97, 109], "visibl": [31, 33, 38, 40, 110], "vision": [0, 4, 71, 103, 109, 112], "visu": 32, "visual": [18, 22, 28, 34, 44, 61, 62, 77], "vivien": [15, 104, 109], "vline": 66, "vm": 66, "vmax": [3, 23, 30, 37, 38, 41, 45, 56, 60], "vmin": [3, 30, 38, 45, 47, 56, 60, 107], "vol": [0, 9, 67, 88, 92, 97, 99, 109, 112], "volkan": 107, "volum": 109, "vonmis": 66, "vstack": [11, 12, 14, 32, 34, 51, 75], "vv": 18, "w": [0, 7, 8, 9, 17, 33, 36, 37, 41, 47, 48, 53, 60, 78, 80, 86, 87, 88, 90, 92, 93, 94, 95, 97, 103, 104, 105, 106, 107, 109, 110, 112], "w0": 78, "w1": [32, 90], "w2": [32, 66, 90], "w2_circl": 66, "w_": [0, 37, 41, 46, 47, 86, 93, 95, 97, 106], "w_1": [0, 97, 112], "w_2": [0, 66, 91, 92, 97, 112], "w_a": 86, "w_b": 86, "w_d": 95, "w_dist": 0, "w_i": [86, 92, 97], "w_k": [7, 112], "w_kw": 112, "w_kw_u": 112, "w_list": 47, "w_p": [0, 97, 103, 112], "w_sinkhorn_reg": 60, "w_t": [46, 47, 93], "w_u": 112, "w_x": 95, "w_y": 95, "wa": [60, 85, 110, 112], "wai": [0, 21, 68, 83, 86, 97, 110, 112], "wang": [33, 95, 109], "want": [0, 3, 9, 16, 20, 22, 23, 24, 33, 35, 55, 56, 60, 67, 68, 106, 110, 112], "warm": [0, 86, 110, 112], "warmstart": [0, 33, 41, 86, 87, 95, 106, 110], "warmstartt": [0, 41, 95], "warn": [0, 3, 16, 20, 22, 23, 24, 28, 33, 35, 37, 41, 55, 57, 60, 67, 68, 75, 86, 88, 95, 96, 99, 106, 107, 110], "warn_dykstra": [0, 95], "wass": 0, "wassersein": 110, "wasserstaiun": 90, "wasserstein": [0, 10, 19, 42, 46, 51, 59, 65, 73, 81, 84, 86, 88, 89, 90, 92, 93, 94, 95, 97, 99, 100, 103, 106, 107, 109, 110, 111], "wasserstein2": 95, "wasserstein_1d": [0, 8, 66, 97, 110, 112], "wasserstein_circl": [0, 66, 97], "wasserstein_distance_to_templ": 94, "wassertein": 110, "wasterstein": [43, 59, 111], "wave": 83, "wb": 110, "wd": 109, "wd_reg": 109, "wda": [49, 84, 110], "we": [0, 2, 3, 4, 5, 6, 7, 8, 9, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 44, 48, 53, 56, 60, 66, 68, 77, 78, 79, 82, 83, 84, 85, 86, 88, 92, 95, 97, 100, 102, 110, 112], "weak": [0, 43, 59, 84, 89, 101, 109, 110, 111], "weak_optimal_transport": [0, 50, 108], "web": 83, "websit": 109, "weed": [0, 86, 88, 91, 109, 112], "weight": [0, 11, 12, 13, 14, 15, 16, 17, 18, 31, 33, 37, 38, 39, 40, 41, 50, 51, 56, 60, 63, 68, 75, 79, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 110, 112], "weight_decai": 34, "weight_inter_g1": 39, "weight_inter_g2": [31, 33, 39, 40], "weight_inter_g3": [31, 33, 40], "weight_intra_g1": 39, "weight_intra_g2": [31, 33, 39, 40], "weight_intra_g3": [31, 33, 40], "weight_list": 75, "weightedg1": 39, "weightedg2": [31, 33, 39, 40], "weightedg3": [31, 33, 40], "welcom": [82, 109], "well": [46, 48, 83, 85, 95, 97, 98, 107, 112], "were": 110, "wgw": 32, "what": [22, 28, 82, 83, 112], "wheel": 110, "when": [0, 3, 51, 66, 68, 80, 82, 83, 86, 87, 90, 92, 93, 95, 97, 99, 100, 102, 107, 109, 110], "whenev": [0, 97], "where": [0, 5, 7, 8, 30, 37, 38, 41, 48, 56, 58, 60, 68, 77, 80, 83, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 110, 112], "whether": [0, 85, 95, 97, 99, 107], "which": [0, 3, 30, 38, 39, 48, 56, 60, 68, 82, 83, 85, 86, 87, 88, 91, 94, 95, 97, 98, 99, 101, 102, 107, 108, 109, 110, 112], "while": [39, 60, 86, 88, 93, 95, 98, 110, 112], "whisper": [86, 109], "white": 37, "who": [82, 110], "whose": [39, 51, 87, 92, 95, 97, 102], "why": [0, 83, 86, 110], "wider": 68, "width": [17, 31, 33, 38, 39, 40, 45, 47, 86], "width_edg": [31, 33, 38, 39, 40], "wiki": 82, "wild": 110, "window": [109, 110], "wip": 83, "wisc": 51, "wise": [60, 68, 85, 107, 112], "wish": [48, 83], "with_label": [30, 34, 38], "with_nois": 30, "within": [8, 39, 41, 82, 85, 95], "without": [0, 51, 56, 82, 83, 85, 86, 95, 102, 109, 110], "wminkowski": [0, 60, 107], "wolf": [0, 76, 95, 106, 109], "won": 96, "word": [7, 112], "work": [0, 13, 60, 83, 85, 86, 91, 95, 96, 97, 99, 106, 107, 108, 110], "workflow": 83, "workshop": [86, 88, 95, 109, 112], "would": [84, 85, 110], "wrapper": [68, 84, 88, 98, 99, 110, 112], "write": [83, 85], "written": [86, 97], "wrt": [0, 3, 68, 85, 88, 95, 107], "ws1": 23, "ws2": 23, "wt": [6, 92, 105], "wu": [0, 79, 102, 106, 109], "www": 112, "wx": 95, "wx_feat": [87, 95], "wx_samp": [87, 95], "wxg": 6, "wy": 95, "wy_feat": [87, 95], "wy_samp": [56, 87, 95], "x": [0, 1, 2, 3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 74, 75, 76, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112], "x0": [0, 5, 30, 91, 97, 103], "x1": [0, 3, 4, 15, 16, 21, 25, 27, 34, 44, 45, 53, 60, 66, 68, 90, 95, 107], "x10": 110, "x100": 110, "x1_torch": 4, "x1tl": 27, "x1tn": 27, "x2": [0, 4, 15, 16, 21, 25, 27, 34, 44, 53, 60, 66, 68, 90, 95, 107, 110], "x2_torch": 4, "x3": [4, 15, 16], "x3_torch": 4, "x4": 16, "x_": [0, 56, 86, 88, 95, 96, 97, 98, 103], "x_1": [0, 39, 44, 48, 60, 95, 97, 98, 107], "x_2": [0, 39, 44, 48, 60, 95, 97, 107], "x_a": [0, 77, 97, 100], "x_a_i": 77, "x_all": 4, "x_b": [0, 77, 97, 100], "x_b_j": 77, "x_class": 98, "x_i": [0, 5, 32, 86, 97, 98, 103, 112], "x_init": [0, 15, 16, 86, 97], "x_j": [86, 98], "x_k": 99, "x_label": 45, "x_latent": 34, "x_list": [18, 97], "x_n": 98, "x_rescal": 46, "x_sourc": 58, "x_t": [0, 86, 88, 95, 96, 98, 103, 107], "x_torch": 8, "x_visu": 18, "x_y_lim": 45, "xa": [0, 91, 108], "xavier": [95, 109], "xaxi": [44, 56], "xb": [0, 4, 16, 52, 91, 108], "xb_init": 16, "xbary_torch": 4, "xbinit": 4, "xd": 9, "xeon": 85, "xf": [87, 95], "xg": [6, 9], "xi": 18, "xizheng": [51, 84, 109], "xk": 99, "xl": 6, "xlabel": [2, 5, 6, 7, 9, 21, 27, 32, 34, 37, 44, 45, 47, 56, 60, 65, 66, 71, 72, 76], "xlim": [9, 36, 45, 60, 65, 66], "xlist": 5, "xn": 9, "xnvisu": 9, "xr": [50, 52, 63, 64, 71, 101], "xs1": [7, 23], "xs2": [7, 23, 66], "xs_class": 48, "xs_map": 112, "xs_new": 26, "xscale": [71, 72], "xsi": 6, "xsp": 49, "xspw": 49, "xst": 25, "xstgw": 25, "xt": [2, 6, 7, 20, 21, 22, 23, 24, 25, 26, 27, 28, 32, 35, 48, 49, 50, 52, 63, 64, 66, 71, 72, 76, 78, 79, 80, 86, 88, 92, 98, 101, 102, 105, 110, 112], "xti": 6, "xtick": [9, 12, 20, 22, 24, 28, 32, 45, 65, 79, 80], "xtot": 64, "xtp": 49, "xtpw": 49, "xts2": 66, "xtsgw": 25, "xu": [33, 35, 95, 109], "xvisu": [5, 9], "xx": [4, 6, 15], "xy": [17, 46, 47, 101], "xya": [44, 56], "xyb": [44, 56], "xyu354": 51, "y": [0, 1, 2, 5, 9, 11, 16, 18, 20, 22, 23, 24, 26, 28, 30, 32, 33, 34, 35, 37, 38, 39, 41, 45, 46, 48, 49, 54, 55, 56, 72, 75, 85, 86, 87, 88, 89, 90, 93, 95, 97, 98, 100, 101, 102, 103, 104, 107, 109, 112], "y1": 107, "y_": [56, 88, 95], "y_1": [0, 95], "y_2": [0, 95], "y_a": 77, "y_b": 77, "y_class": 98, "y_init": 97, "y_j": [0, 32, 112], "y_l": 97, "y_noisi": 56, "y_t": 88, "y_target": 58, "yamllint": 110, "yaxi": [44, 45, 56], "ydict": 95, "ydict_best_st": 95, "ydict_fgw": 37, "ydict_init": 95, "year": [109, 110, 112], "yembed": [37, 95], "yet": [0, 95, 110, 112], "yf": [87, 95], "yield": 88, "yl": 6, "ylabel": [1, 21, 27, 32, 37, 45, 47, 60, 69, 71, 72, 76, 80], "ylim": [9, 36, 45, 65, 66], "ylist": 5, "ymax": 66, "ymin": 66, "you": [0, 16, 20, 22, 23, 24, 33, 35, 38, 55, 60, 67, 68, 83, 85, 86, 90, 94, 98, 101, 106, 109, 110, 112], "your": [83, 109, 112], "yourlogin": 83, "yr": 101, "ys1": 23, "ys2": 23, "ys_class": 48, "yscale": 76, "yt": [2, 20, 22, 23, 24, 26, 28, 32, 49, 88], "ytick": [9, 12, 20, 22, 24, 28, 32, 45, 80], "yu": [51, 84, 109], "yule": [0, 60, 107], "yx": 101, "yy": [4, 6, 15], "z": [5, 11, 37, 39, 41, 54, 57, 72, 75, 84, 86, 97, 104, 107, 109, 112], "z_": 97, "z_1": 97, "z_i": [104, 107], "z_j": [97, 104, 107], "zdir": [11, 75], "zemskova": [95, 109], "zero": [1, 3, 4, 5, 7, 9, 11, 12, 31, 33, 35, 37, 38, 40, 41, 56, 60, 62, 64, 65, 66, 75, 85, 86, 87, 88, 95, 107, 110], "zero_": [3, 4, 7, 8, 56], "zero_grad": [2, 6, 9, 47], "zero_pad": 85, "zeros_lik": 30, "zha": [33, 35, 95, 109], "zhang": [0, 106, 109, 112], "zhao": [33, 95, 109], "zhu": [33, 95, 109], "zine": 9, "zip": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 109], "zorder": [2, 3, 6, 37, 41, 45, 53], "\u00e1lvarez": [86, 97, 109]}, "titles": ["API and modules", "Different gradient computations for regularized optimal transport", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Gaussian Bures-Wasserstein barycenters", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example", "Plot Fused-Gromov-Wasserstein", "Comparison of Fused Gromov-Wasserstein solvers", "Graph classification with Template Based Fused Gromov Wasserstein", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Plot partial FGW for subgraph matching", "Quantized Fused Gromov-Wasserstein examples", "Semi-relaxed (Fused) Gromov-Wasserstein example", "Semi-relaxed (Fused) Gromov-Wasserstein Barycenter as Dictionary Learning", "Computation times", "Examples gallery", "Row and column alignments with CO-Optimal Transport", "Entropic Wasserstein Component Analysis", "GMM Plan 1D", "GMM Flow", "Smooth and Strongly Convex Nearest Brenier Potentials", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Computing d-dimensional Barycenters via d-MMOT", "Optimal transport with factored couplings", "Logo of the POT toolbox", "Low rank Gromov-Wasterstein between samples", "Low rank Sinkhorn", "Detecting outliers by learning sample marginal distribution with CO-Optimal Transport and by using unbalanced Co-Optimal Transport", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth and sparse OT example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different ground metrics", "OT distances in 1D", "OT distance on the Circle", "Regularized OT with generic solver", "Quickstart Guide", "Optimal Transport solvers comparison", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Translation Invariant Sinkhorn for Unbalanced Optimal Transport", "Partial Wasserstein in 1D", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Code of conduct", "Contributing to POT", "Contributors", "ot.backend", "ot.bregman", "ot.coot", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gmm", "ot.gnn", "ot.gromov", "ot.lowrank", "ot.lp", "ot.mapping", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Releases", "Computation times", "User guide"], "titleterms": {"": 72, "0": 110, "1": [20, 22, 23, 24, 28, 37, 41, 64, 110], "10": 110, "11": 110, "1d": [8, 11, 12, 14, 46, 61, 65, 74, 75, 77], "2": [9, 20, 22, 23, 24, 28, 31, 33, 37, 40, 41, 51, 64, 72, 110], "2d": [14, 15, 16, 35, 49, 63, 68, 71, 78, 80], "3": [22, 28, 31, 33, 37, 40, 41, 110], "3d": [35, 78], "4": 110, "5": 110, "6": 110, "6dev": 110, "7": 110, "8": 110, "9": 110, "acceler": 112, "acknowledg": [84, 109], "across": 32, "adapt": [20, 21, 22, 23, 24, 25, 26, 27, 43, 112], "add": [31, 40], "algorithm": [20, 21, 22, 23, 24, 26, 58, 60, 68, 112], "align": [44, 56], "all": [23, 68], "along": [4, 5, 9], "among": 51, "an": [50, 52, 112], "anaconda": 109, "analysi": [45, 49, 112], "ani": 35, "anim": [4, 5, 9, 18, 79], "api": 0, "applic": 112, "architectur": 34, "atom": 37, "attribut": [37, 39, 41, 82], "backend": [43, 85, 112], "background": 53, "bakeri": 60, "barycent": [4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 30, 36, 41, 43, 51, 75, 112], "barycentr": [11, 75], "base": 34, "baseestim": 107, "basetransport": 88, "between": [39, 54, 63, 66, 68, 112], "block": [31, 33, 37, 40, 41], "both": 51, "break": 110, "bregman": [86, 112], "brenier": 48, "bug": 83, "bure": [17, 68], "bures_wasserstein_barycent": 92, "case": [58, 112], "cg": 99, "chang": 110, "check": 109, "checklist": 83, "circl": [64, 66], "cite": 109, "citi": 60, "class": [85, 88, 104, 107, 112], "classif": 34, "clear": 53, "close": 110, "cloud": 39, "cluster": [3, 31, 33, 37, 40, 41], "co": [44, 56], "co_optimal_transport": 87, "co_optimal_transport2": 87, "code": [82, 109], "color": [21, 27], "column": [44, 56], "commun": 3, "compar": [51, 58, 66, 68], "comparison": [1, 33, 69], "compat": 112, "compon": 45, "compos": [37, 41], "compress": 3, "comput": [1, 4, 10, 11, 13, 14, 15, 17, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 42, 45, 49, 50, 51, 52, 58, 59, 60, 63, 65, 70, 73, 75, 76, 78, 79, 80, 81, 111, 112], "compute_transport_plan": 102, "conda": 109, "conduct": [82, 109], "content": 109, "continu": [6, 58], "contribut": [83, 109], "contributor": [83, 84], "converg": 7, "convert": [2, 6], "convex": 48, "convolut": [13, 112], "convolutional_barycenter2d": 112, "coot": [56, 87], "cost": [54, 60, 68], "coupl": [20, 22, 23, 24, 28, 52], "covari": 17, "cpu": 112, "creat": 32, "creator": 84, "custom": 68, "d": 51, "da": 88, "dark": 53, "data": [2, 5, 6, 7, 9, 11, 12, 13, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 36, 38, 45, 47, 49, 50, 52, 53, 54, 55, 56, 57, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 74, 75, 79, 80], "dataset": [37, 41, 64, 89], "debias": 14, "deep": 6, "defin": [17, 68, 69], "demo": [11, 14, 18, 75], "densiti": 6, "depend": [86, 109], "deprec": 110, "descent": [4, 5, 47], "detect": 56, "dictionari": [37, 41], "differ": [1, 20, 21, 22, 24, 26, 28, 64, 65, 66, 71, 72], "dimension": 51, "dirac": 12, "discret": 58, "discrimin": [49, 112], "displai": 35, "dist0": 107, "distanc": [3, 7, 22, 28, 32, 33, 35, 39, 43, 51, 56, 65, 66, 71, 78, 112], "distribut": [7, 15, 16, 17, 22, 27, 35, 51, 56, 57, 61, 62, 63, 69, 71, 72, 74, 75, 78, 112], "diverg": [31, 40], "document": 83, "domain": [20, 22, 23, 24, 26, 27, 43, 112], "dr": 90, "dual": [2, 6, 58, 60], "embed": [5, 37, 41], "emd": [60, 61, 63, 65, 67, 112], "emd2": 112, "emdlaplacetransport": 88, "emdtransport": 88, "empir": [16, 22, 63], "empirical_bures_wasserstein_dist": 92, "empirical_bures_wasserstein_map": 92, "empirical_gaussian_gromov_wasserstein_map": 92, "endow": [37, 41], "enforc": 82, "entrop": [2, 6, 12, 31, 38, 45, 54, 67, 68, 76, 80, 112], "estim": [2, 3, 6, 7, 25, 26, 27, 37, 41, 56, 112], "euclidean": [54, 66], "ewca": [45, 90], "exact": [12, 50, 52, 68, 80], "exampl": [13, 31, 35, 36, 39, 40, 43, 58, 62, 68, 78, 80, 87, 88, 89, 90, 92, 93, 98, 99, 101, 102, 104, 105, 107, 109, 112], "except": 107, "extens": 112, "factor": [52, 68, 91], "faq": 112, "fda": 90, "featur": [31, 32, 37, 40, 41, 110], "fgw": [30, 32, 38, 112], "fig": [20, 22, 23, 24, 28], "figur": 12, "file": 83, "final": 12, "first": [45, 60, 110], "fisher": 49, "fit": [20, 21, 22, 23, 24, 26], "fix": 112, "flow": [4, 8, 47], "follow": [31, 33, 37, 40, 41], "forg": 109, "free": [15, 16, 112], "frobeniu": 67, "from": [37, 41], "fulli": 79, "function": [0, 35, 85, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 101, 102, 103, 104, 105, 107, 108], "fuse": [31, 32, 33, 34, 37, 38, 39, 40, 41, 43, 68], "g": 112, "galleri": 43, "gan": 9, "gaussian": [12, 14, 17, 35, 68, 78, 92], "gcg": 99, "gener": [2, 3, 5, 6, 7, 9, 11, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 61, 62, 63, 65, 67, 69, 71, 72, 74, 75, 79, 80, 112], "get": 60, "given": 6, "gmm": [46, 47, 93], "gmm_ot_apply_map": 93, "gmm_ot_loss": 93, "gmm_ot_plan_dens": 93, "gmm_pdf": 93, "gmmot": 46, "gnn": 94, "gpu": 112, "gradient": [1, 4, 5, 47, 69], "graph": [3, 30, 31, 33, 34, 37, 39, 40, 41], "gromov": [3, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 54, 68, 78, 95, 112], "ground": 64, "group": [69, 112], "guid": [68, 112], "gw": [3, 32, 35, 68, 112], "help": 60, "how": [83, 112], "identifi": 51, "imag": [14, 21, 25, 27], "import": 60, "indic": 109, "inspect": 16, "instal": [60, 109], "instanti": [20, 21, 22, 23, 24, 26], "interpol": [11, 16, 75], "introduct": 60, "invari": 76, "issu": 110, "iter": [4, 5, 9], "jcpot": 23, "jcpottransport": 88, "kappa": 66, "kernel": 35, "kl": [76, 80], "known": 23, "l2": [79, 80], "laplacian": 24, "larg": 68, "lasso": [69, 112], "last": 47, "layer": 34, "lazytensor": 107, "learn": [37, 41, 56], "linear": [25, 37], "lineargwtransport": 88, "lineartransport": 88, "list": 112, "load": 25, "logo": 53, "loop": 47, "loss": [35, 57, 60, 61, 62, 65, 69, 74], "loss_dual_entrop": 105, "loss_dual_quadrat": 105, "low": [54, 55, 68], "lowrank": 96, "lp": [12, 97], "main": 0, "maintain": 84, "make_1d_gauss": 89, "make_2d_samples_gauss": 89, "make_data_classif": 89, "mani": 51, "map": [25, 26, 27, 46, 60, 98, 112], "mappingtransport": 88, "margin": 56, "mass": 74, "match": [18, 31, 33, 38, 39, 40], "matric": [32, 54, 58, 64], "matrix": [22, 28, 32, 57, 58, 60, 61, 62, 68, 69, 74], "md": 36, "method": [22, 28, 35, 51], "metric": 64, "minibatch": 9, "minim": 51, "mise": 66, "mmot": 51, "model": [7, 9, 31, 33, 37, 40, 41], "modul": 0, "mong": 112, "more": 51, "multi": 23, "multipl": 112, "nearest": 48, "nearest_brenier_potential_fit": 98, "nearest_brenier_potential_predict_bound": 98, "new": [21, 83, 110], "node": [31, 37, 40, 41], "norm": 67, "normal": 35, "notebook": 109, "number": [71, 72], "object": 7, "one": 78, "onto": 28, "optim": [1, 3, 7, 20, 22, 23, 24, 28, 44, 50, 52, 56, 57, 60, 61, 63, 64, 68, 69, 74, 76, 79, 80, 99, 109, 112], "option": 1, "oracl": 23, "origin": [21, 27, 51], "ot": [0, 2, 6, 20, 21, 22, 23, 24, 25, 26, 27, 43, 50, 52, 60, 62, 64, 65, 66, 67, 68, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 112], "otda": [28, 112], "other": [43, 112], "otresult": 107, "our": 82, "outlier": 56, "over": 46, "pairwis": [22, 28], "paramet": [16, 60, 69, 76], "partial": [38, 43, 64, 68, 77, 78, 100, 112], "partit": 39, "path": 79, "penal": 79, "perform": 85, "pip": 109, "pixel": 27, "plan": [2, 6, 35, 45, 46, 60, 68, 69, 78], "plan_dual_entrop": 105, "plan_dual_quadrat": 105, "pledg": 82, "plot": [2, 5, 6, 7, 9, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 34, 35, 38, 45, 46, 47, 49, 50, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 69, 71, 72, 74, 75, 76, 78, 79, 80, 101], "plot1d_mat": 101, "plot2d_samples_mat": 101, "point": 39, "pool": 34, "post": 109, "pot": [43, 53, 60, 83, 109, 112], "potenti": 48, "pre": 110, "prepar": [13, 36], "problem": [43, 58, 60, 68], "proj_sdp": 107, "proj_simplex": 107, "project": [18, 45, 49, 71, 72], "proport": 23, "pull": 83, "python": [60, 109], "pytorch": [2, 3, 4, 6, 7, 8, 9], "quadrat": [2, 68, 112], "quantiz": 39, "quickstart": 68, "r": 3, "rank": [54, 55, 68], "refer": [0, 103, 109, 112], "regpath": [79, 102], "regular": [1, 2, 12, 24, 31, 43, 60, 67, 68, 69, 76, 79, 80, 112], "regularization_path": 102, "relax": [31, 40, 41, 79], "releas": 110, "request": 83, "rescale_for_imshow_plot": 101, "respect": 56, "respons": 82, "result": [58, 76, 80], "reweight": 7, "rotat": 18, "row": [44, 56], "run": 23, "sampl": [5, 6, 9, 20, 22, 23, 24, 25, 26, 28, 35, 39, 54, 56, 64, 68, 78], "scalabl": 35, "scale": 68, "scatter": 21, "scope": 82, "screen": 57, "screenkhorn": 57, "seed": [71, 72], "semi": [28, 31, 40, 41, 58, 79], "set": [28, 69, 76], "shift": 23, "short": 109, "sinkhorn": [1, 14, 16, 23, 55, 58, 60, 61, 63, 65, 68, 74, 76, 112], "sinkhornl1l2transport": 88, "sinkhornlpl1transport": 88, "sinkhorntransport": 88, "slice": [4, 5, 43, 71, 72, 103], "smacof": 36, "smooth": [48, 62, 104], "smooth_ot_du": 104, "solut": [50, 52], "solv": [55, 57, 60, 61, 62, 67, 68, 69, 74, 112], "solve_dual_entrop": 105, "solve_semi_dual_entrop": 105, "solver": [1, 2, 33, 67, 69, 112], "sourc": [6, 7, 20, 22, 23, 24, 28], "space": 37, "spars": 62, "special": 112, "sphere": 5, "spheric": [5, 72], "squar": 54, "srfgw": 41, "srgw": 41, "stair": 12, "standard": 82, "step": 47, "stochast": [31, 33, 35, 37, 40, 41, 58, 105], "strongli": 48, "structur": [3, 32], "subgraph": 38, "supervis": 28, "support": [15, 16, 109, 112], "t": 3, "tabl": 109, "target": [6, 20, 22, 23, 24, 28], "templat": [3, 34], "tensor": [2, 6], "tfgw": 34, "than": 51, "them": [17, 20, 21, 22, 23, 24, 26, 35, 46, 78], "time": [1, 10, 19, 29, 42, 59, 60, 70, 73, 81, 111], "tip": 83, "toolbox": [53, 60, 109], "torch": [2, 6], "train": [9, 34], "trajectori": [4, 5, 9], "transfer": 27, "transform": [25, 27], "translat": 76, "transport": [1, 20, 21, 22, 23, 24, 25, 26, 28, 32, 44, 45, 50, 52, 56, 57, 58, 60, 61, 63, 64, 68, 69, 74, 76, 79, 80, 109, 112], "two": [31, 33, 35, 40, 78], "unbalanc": [43, 56, 68, 74, 75, 76, 79, 80, 106, 112], "uniform": [3, 64, 66], "unmix": 7, "unsupervis": 28, "uot": [76, 79, 80], "up": 69, "us": [30, 34, 39, 56, 87, 88, 89, 90, 92, 93, 98, 99, 101, 102, 104, 105, 107, 109, 112], "user": [68, 112], "util": [38, 107], "v": [12, 28, 50, 55], "v0": 110, "valu": 27, "vari": 60, "variabl": [2, 6, 60], "via": 51, "visual": [9, 13, 14, 31, 32, 33, 36, 37, 38, 39, 40, 41, 56, 60], "visualis": 47, "von": 66, "w": 3, "wasserstein": [3, 4, 5, 7, 8, 9, 11, 12, 13, 15, 17, 18, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 49, 54, 60, 66, 68, 71, 72, 75, 77, 78, 112], "wasterstein": 54, "wda": [90, 112], "weak": [50, 108], "weight": [3, 7], "when": 112, "why": 112, "without": 39, "work": 112, "wrapper": 39, "wrt": 7}})