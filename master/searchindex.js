Search.setIndex({"docnames": ["all", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_gaussian_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_entropic_semirelaxed_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_fgw_solvers", "auto_examples/gromov/plot_gnn_TFGW", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/plot_semirelaxed_fgw", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_COOT", "auto_examples/others/plot_EWCA", "auto_examples/others/plot_SSNB", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_dmmot", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_learning_weights_with_COOT", "auto_examples/others/plot_logo", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_compute_wasserstein_circle", "auto_examples/plot_optim_OTreg", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "code_of_conduct", "contributing", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.coot", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gnn", "gen_modules/ot.gromov", "gen_modules/ot.lp", "gen_modules/ot.mapping", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "quickstart", "releases", "sg_execution_times"], "filenames": ["all.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_gaussian_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_entropic_semirelaxed_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_fgw_solvers.rst", "auto_examples/gromov/plot_gnn_TFGW.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/plot_semirelaxed_fgw.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_COOT.rst", "auto_examples/others/plot_EWCA.rst", "auto_examples/others/plot_SSNB.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_dmmot.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_learning_weights_with_COOT.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_compute_wasserstein_circle.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "code_of_conduct.rst", "contributing.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.coot.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gnn.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.mapping.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "quickstart.rst", "releases.rst", "sg_execution_times.rst"], "titles": ["API and modules", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Gaussian Bures-Wasserstein barycenters", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example", "Plot Fused-Gromov-Wasserstein", "Comparison of Fused Gromov-Wasserstein solvers", "Graph classification with Tempate Based Fused Gromov Wasserstein", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Semi-relaxed (Fused) Gromov-Wasserstein example", "Computation times", "Examples gallery", "Row and column alignments with CO-Optimal Transport", "Entropic Wasserstein Component Analysis", "Smooth and Strongly Convex Nearest Brenier Potentials", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Computing d-dimensional Barycenters via d-MMOT", "Optimal transport with factored couplings", "Learning sample marginal distribution with CO-Optimal Transport", "Logo of the POT toolbox", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth and sparse OT example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different ground metrics", "OT distances in 1D", "OT distance on the Circle", "Regularized OT with generic solver", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Code of conduct", "Contributing to POT", "Contributors", "ot.backend", "ot.bregman", "ot.coot", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gnn", "ot.gromov", "ot.lp", "ot.mapping", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Quick start guide", "Releases", "Computation times"], "terms": {"The": [0, 2, 7, 10, 12, 27, 29, 34, 35, 36, 42, 44, 45, 47, 52, 55, 58, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97], "list": [0, 5, 10, 29, 65, 71, 73, 74, 75, 76, 79, 80, 81, 82, 83, 88, 91, 93, 94, 95, 97], "automat": [0, 6, 7, 47, 83, 96, 97], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 73, 74, 76, 78, 81, 83, 84, 86, 87, 88, 92, 93, 95, 96, 97], "sub": [0, 88, 95, 96], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 22, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 55, 57, 58, 61, 62, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "follow": [0, 6, 7, 8, 11, 35, 47, 52, 68, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 88, 90, 91, 92, 95, 96, 97], "lp": [0, 7, 14, 17, 18, 39, 45, 58, 74, 75, 76, 77, 84, 85, 90, 92, 93, 95, 96, 97, 98], "bregman": [0, 10, 11, 12, 13, 14, 15, 19, 21, 22, 23, 32, 34, 49, 52, 55, 59, 76, 78, 79, 82, 83, 85, 86, 92, 94, 95, 97], "optim": [0, 1, 3, 5, 8, 9, 14, 20, 25, 26, 29, 30, 31, 32, 33, 34, 37, 39, 42, 43, 45, 50, 51, 59, 60, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 97, 98], "util": [0, 2, 6, 7, 10, 11, 13, 33, 45, 47, 50, 52, 65, 73, 83, 84, 96], "dataset": [0, 1, 7, 8, 10, 11, 13, 19, 21, 22, 23, 25, 27, 29, 34, 41, 42, 43, 44, 45, 49, 53, 54, 55, 57, 59, 61, 64, 65, 66, 67, 68, 78, 82, 91, 96, 97], "gromov": [0, 9, 29, 38, 69, 72, 76, 77, 80, 81, 85, 86, 93, 95, 97, 98], "smooth": [0, 11, 39, 51, 60, 72, 76, 77, 84, 87, 95, 96, 97, 98], "stochast": [0, 1, 2, 5, 33, 39, 51, 72, 74, 82, 87, 95, 96, 97, 98], "partial": [0, 65, 68, 69, 72, 77, 91, 95, 97, 98], "regpath": 0, "unbalanc": [0, 69, 72, 74, 76, 77, 86, 87, 88, 93, 95, 97, 98], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 93, 97, 98], "mod": 0, "map": [0, 1, 5, 28, 39, 42, 50, 68, 72, 76, 77, 80, 82, 83, 91, 93, 95, 97, 98], "ar": [0, 7, 12, 14, 16, 21, 27, 29, 30, 32, 35, 36, 37, 42, 44, 45, 47, 50, 52, 54, 55, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "due": [0, 76, 83, 96, 97], "addit": [0, 71, 75, 83, 88, 95, 96], "depend": [0, 36, 73, 81, 82, 84, 85, 96, 97], "dr": [0, 41, 43, 95, 96], "pymanopt": [0, 78, 95, 96], "autograd": [0, 4, 78, 95, 96, 97], "plot": [0, 2, 7, 10, 11, 13, 30, 32, 36, 37, 38, 39, 42, 45, 47, 59, 96, 97, 98], "matplotlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 97], "barycent": [0, 9, 18, 38, 51, 61, 69, 72, 74, 76, 77, 80, 82, 83, 89, 92, 93, 95, 97, 98], "A": [0, 3, 10, 11, 12, 13, 17, 24, 25, 26, 27, 29, 32, 41, 43, 45, 49, 50, 52, 59, 65, 71, 74, 76, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97], "m": [0, 2, 6, 7, 8, 10, 11, 13, 16, 21, 22, 25, 26, 30, 31, 32, 33, 36, 37, 43, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 57, 59, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "reg": [0, 1, 5, 10, 11, 12, 13, 15, 19, 20, 21, 22, 32, 34, 36, 41, 43, 50, 52, 54, 55, 57, 59, 65, 66, 67, 68, 74, 76, 78, 79, 80, 82, 83, 85, 86, 88, 90, 91, 92, 95, 96], "weight": [0, 10, 11, 12, 13, 14, 15, 16, 17, 30, 32, 36, 37, 44, 45, 47, 52, 55, 65, 67, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 96, 97], "none": [0, 2, 5, 13, 15, 16, 29, 30, 31, 32, 33, 36, 37, 40, 41, 47, 52, 58, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 97], "method": [0, 7, 13, 29, 32, 42, 50, 71, 74, 75, 76, 78, 82, 83, 84, 90, 91, 92, 93, 95, 96, 97], "sinkhorn": [0, 8, 14, 18, 19, 21, 23, 32, 34, 39, 49, 59, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 85, 90, 92, 93, 94, 95, 97, 98], "numitermax": [0, 14, 15, 19, 21, 22, 32, 34, 50, 52, 59, 74, 76, 79, 82, 83, 84, 85, 86, 90, 91, 92, 94], "10000": [0, 73, 74, 82, 91], "stopthr": [0, 74, 76, 78, 79, 82, 83, 84, 85, 86, 90, 92, 94, 97], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98], "0001": [0, 74, 85, 88], "verbos": [0, 19, 22, 25, 26, 31, 32, 34, 36, 40, 45, 47, 49, 53, 59, 64, 66, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 90, 92, 94], "fals": [0, 13, 26, 29, 30, 32, 33, 36, 37, 41, 45, 47, 49, 58, 62, 67, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94], "log": [0, 13, 22, 29, 30, 31, 32, 34, 36, 37, 40, 45, 47, 50, 59, 61, 62, 66, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 96, 97], "warn": [0, 2, 15, 19, 21, 22, 23, 27, 32, 34, 35, 36, 49, 52, 59, 65, 71, 74, 76, 93, 97], "true": [0, 1, 2, 3, 4, 6, 7, 8, 10, 13, 16, 17, 19, 22, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 40, 43, 45, 47, 48, 49, 50, 52, 53, 59, 62, 64, 66, 67, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97], "kwarg": [0, 74, 76, 77, 79, 82, 84, 85, 86, 87, 92, 93, 94], "sourc": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "comput": [0, 2, 6, 7, 8, 11, 36, 39, 42, 47, 49, 53, 54, 58, 61, 62, 64, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 95, 97], "entrop": [0, 9, 15, 18, 32, 34, 38, 39, 51, 66, 69, 74, 75, 76, 77, 78, 79, 82, 83, 85, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98], "regular": [0, 9, 10, 12, 15, 18, 19, 20, 21, 22, 26, 28, 32, 34, 36, 38, 42, 49, 60, 65, 69, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98], "wasserstein": [0, 9, 18, 38, 45, 51, 57, 63, 69, 72, 74, 76, 77, 78, 80, 81, 82, 83, 85, 86, 89, 92, 93, 95, 97, 98], "distribut": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 18, 24, 25, 28, 31, 35, 39, 42, 44, 46, 51, 52, 56, 57, 58, 59, 60, 63, 67, 68, 69, 72, 74, 75, 76, 77, 79, 80, 82, 83, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98], "mathbf": [0, 6, 30, 36, 37, 41, 52, 68, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94], "solv": [0, 2, 21, 27, 42, 47, 48, 68, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 97], "problem": [0, 6, 7, 8, 10, 11, 21, 22, 27, 42, 45, 47, 48, 65, 68, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97], "mathop": [0, 74, 75, 76, 78, 79, 82, 83, 85, 86, 90, 91, 92, 93, 94], "arg": [0, 73, 74, 75, 76, 78, 79, 82, 83, 85, 86, 90, 91, 92, 93, 94, 96], "min": [0, 30, 32, 36, 41, 43, 52, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 96], "_": [0, 25, 36, 40, 42, 47, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96], "quad": [0, 6, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 96], "sum_i": [0, 31, 73, 74, 83, 90, 91, 92, 93, 94, 96], "w_": [0, 36, 74, 82, 83, 92], "_i": [0, 41, 74, 78, 83, 88, 90, 91, 92, 93, 94], "where": [0, 4, 6, 7, 29, 36, 42, 47, 50, 52, 68, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 94, 96, 97], "cdot": [0, 41, 68, 74, 76, 78, 83, 84, 85, 86, 91, 92, 96], "distanc": [0, 3, 8, 9, 29, 30, 33, 35, 36, 37, 40, 52, 60, 62, 63, 72, 74, 75, 76, 77, 78, 80, 81, 82, 83, 86, 89, 90, 92, 93, 95, 97, 98], "see": [0, 2, 5, 8, 52, 71, 73, 74, 76, 77, 78, 80, 82, 83, 84, 86, 88, 90, 91, 92, 96, 97], "sinkhorn_stabil": [0, 74, 76, 92, 96], "sinkhorn_log": [0, 74, 75, 78, 96, 97], "train": [0, 20, 26, 43, 47, 74, 76, 77, 78, 81, 83, 92, 96, 97], "column": [0, 6, 30, 32, 37, 39, 51, 54, 74, 75, 83, 88, 90, 92, 98], "matrix": [0, 2, 6, 8, 10, 11, 13, 20, 24, 26, 29, 35, 36, 44, 45, 47, 55, 56, 57, 59, 65, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "respect": [0, 6, 17, 33, 36, 52, 70, 73, 74, 75, 76, 78, 81, 82, 83, 84, 92, 95, 96, 97], "term": [0, 8, 42, 55, 59, 74, 75, 76, 78, 82, 83, 84, 85, 86, 90, 91, 92, 93, 96, 97], "cost": [0, 21, 27, 34, 40, 43, 44, 45, 47, 49, 50, 53, 54, 55, 56, 64, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "algorithm": [0, 15, 32, 34, 35, 45, 49, 65, 71, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 90, 91, 92, 94, 95, 96, 97], "us": [0, 2, 3, 6, 7, 8, 10, 11, 20, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 50, 52, 53, 59, 64, 65, 66, 68, 70, 71, 73, 74, 79, 81, 82, 89, 94, 97, 98], "knopp": [0, 72, 73, 74, 92, 95, 96, 97], "scale": [0, 30, 32, 35, 37, 41, 48, 50, 65, 74, 76, 83, 84, 90, 91, 92, 93, 95, 96, 97], "propos": [0, 3, 6, 8, 10, 11, 13, 17, 33, 41, 43, 59, 61, 62, 65, 74, 76, 79, 80, 82, 83, 84, 86, 91, 92, 94, 96, 97], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 29, 31, 33, 34, 35, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 67, 68, 74, 76, 83, 84, 85, 86, 88, 89, 92, 93, 95, 96], "paramet": [0, 2, 5, 6, 7, 8, 12, 19, 21, 22, 29, 31, 32, 33, 34, 35, 36, 46, 49, 58, 59, 64, 65, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "arrai": [0, 2, 6, 7, 10, 11, 12, 13, 15, 16, 17, 22, 24, 29, 34, 35, 36, 41, 44, 48, 52, 55, 61, 65, 66, 67, 68, 73, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97], "like": [0, 2, 52, 71, 72, 73, 74, 75, 76, 79, 80, 82, 83, 84, 85, 91, 92, 93, 94, 97], "shape": [0, 2, 3, 4, 7, 10, 11, 13, 14, 17, 20, 22, 24, 26, 27, 29, 30, 31, 32, 35, 36, 37, 43, 48, 52, 65, 71, 73, 74, 76, 77, 78, 79, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "dim": [0, 4, 33, 35, 74, 83, 89, 92, 93], "n_hist": [0, 74, 83, 92], "size": [0, 4, 6, 8, 15, 20, 26, 30, 32, 33, 36, 37, 40, 42, 52, 58, 70, 73, 74, 75, 76, 77, 78, 81, 82, 83, 88, 91, 93, 97], "loss": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 19, 25, 26, 31, 32, 33, 36, 44, 47, 55, 56, 59, 65, 66, 67, 68, 74, 76, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97], "float": [0, 1, 5, 6, 7, 8, 12, 16, 29, 35, 45, 47, 52, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "str": [0, 32, 34, 36, 52, 66, 68, 74, 76, 77, 78, 82, 83, 84, 90, 91, 92, 93], "option": [0, 52, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97], "solver": [0, 9, 11, 31, 34, 38, 39, 45, 48, 53, 60, 72, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98], "either": [0, 25, 68, 74, 76, 78, 82, 83, 92], "each": [0, 6, 8, 29, 32, 33, 36, 52, 74, 75, 76, 80, 81, 82, 83, 84, 90, 91, 92, 93, 95, 96, 97], "histogram": [0, 47, 74, 75, 77, 79, 83, 86, 88, 90, 92, 93, 94, 95, 96, 97], "simplex": [0, 2, 6, 7, 36, 47, 74, 83, 90, 93, 95, 96], "barycentr": [0, 25, 42, 74, 76, 80, 83, 84, 92, 96], "coodin": [0, 74, 92], "int": [0, 2, 33, 35, 36, 41, 42, 61, 62, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96], "max": [0, 10, 11, 13, 30, 32, 34, 35, 36, 37, 41, 44, 49, 52, 53, 54, 56, 57, 58, 59, 64, 65, 67, 68, 73, 74, 76, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "number": [0, 1, 5, 6, 8, 14, 15, 17, 19, 21, 22, 29, 31, 32, 34, 35, 36, 49, 52, 59, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "iter": [0, 1, 2, 5, 6, 7, 10, 11, 15, 19, 21, 22, 23, 32, 34, 35, 40, 42, 43, 45, 47, 52, 59, 65, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 88, 90, 91, 92, 94, 95, 96, 97], "stop": [0, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 90, 92, 94], "threshold": [0, 29, 73, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 90, 92, 94, 96], "error": [0, 7, 23, 29, 32, 34, 36, 65, 71, 73, 74, 76, 78, 82, 83, 84, 86, 90, 92, 95, 96, 97], "bool": [0, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94], "print": [0, 1, 2, 4, 5, 6, 8, 30, 32, 33, 34, 36, 37, 40, 45, 47, 50, 52, 66, 71, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 90, 92, 94, 97], "inform": [0, 25, 26, 32, 33, 36, 40, 47, 49, 50, 70, 71, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96], "along": [0, 2, 6, 7, 73, 74, 76, 78, 79, 82, 83, 84, 85, 86, 88, 90, 92, 93, 94], "record": [0, 7, 71, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 90, 91, 92, 94], "rais": [0, 71, 73, 74, 83, 86, 93, 97], "doesn": [0, 74], "t": [0, 6, 7, 10, 11, 13, 16, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 47, 48, 52, 58, 62, 65, 67, 68, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "converg": [0, 2, 15, 19, 21, 22, 32, 34, 35, 52, 59, 74, 76, 82, 83, 85, 95, 96, 97], "return": [0, 2, 3, 4, 5, 6, 8, 16, 17, 20, 24, 26, 29, 30, 32, 33, 34, 35, 37, 52, 58, 59, 67, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "dict": [0, 36, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94], "dictionari": [0, 2, 38, 39, 72, 74, 75, 76, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "onli": [0, 6, 14, 31, 42, 52, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97], "benam": [0, 10, 11, 74, 86, 92, 95, 96], "j": [0, 2, 10, 11, 12, 16, 17, 20, 22, 26, 30, 31, 32, 35, 36, 37, 40, 41, 47, 48, 52, 59, 67, 68, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 96], "d": [0, 10, 11, 14, 23, 24, 29, 32, 34, 36, 39, 42, 51, 52, 59, 66, 74, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 98], "carlier": [0, 10, 11, 74, 80, 83, 86, 92, 95, 96], "g": [0, 4, 8, 10, 11, 20, 22, 26, 29, 30, 31, 32, 33, 36, 37, 42, 45, 49, 50, 52, 53, 55, 59, 64, 65, 67, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95], "cuturi": [0, 8, 10, 11, 13, 32, 34, 42, 43, 50, 72, 74, 76, 78, 80, 82, 83, 84, 86, 90, 91, 92, 95, 96], "nenna": [0, 10, 11, 74, 86, 92, 95, 96], "l": [0, 8, 10, 11, 13, 31, 32, 34, 42, 62, 65, 67, 74, 75, 76, 78, 82, 83, 84, 86, 88, 89, 90, 92, 95, 96], "peyr\u00e9": [0, 8, 10, 11, 32, 34, 50, 59, 65, 72, 74, 76, 80, 82, 83, 85, 86, 91, 92, 95, 96], "2015": [0, 3, 10, 11, 59, 61, 74, 76, 85, 86, 89, 92, 95, 96], "project": [0, 2, 3, 4, 5, 6, 7, 10, 11, 15, 19, 21, 22, 23, 29, 30, 32, 34, 36, 37, 45, 47, 49, 52, 58, 59, 65, 66, 70, 71, 72, 74, 76, 78, 80, 82, 83, 84, 86, 89, 90, 92, 93, 95, 96, 97], "transport": [0, 3, 5, 10, 11, 26, 29, 30, 32, 33, 34, 37, 39, 42, 51, 59, 60, 65, 66, 69, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 98], "siam": [0, 10, 11, 20, 26, 59, 74, 76, 80, 83, 85, 86, 92, 95, 96], "journal": [0, 3, 10, 11, 20, 26, 34, 59, 61, 74, 76, 80, 82, 83, 85, 86, 89, 92, 94, 95, 96, 97], "scientif": [0, 10, 11, 74, 86, 92, 95, 96, 97], "37": [0, 5, 10, 11, 13, 45, 59, 74, 83, 86, 92, 95, 96, 97], "2": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25, 26, 29, 31, 33, 34, 35, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 65, 66, 67, 68, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98], "a1111": [0, 10, 11, 74, 86, 92, 95, 96], "a1138": [0, 10, 11, 74, 86, 92, 95, 96], "barycenter_unbalanc": [0, 65, 92, 96], "reg_m": [0, 68, 76, 86, 92, 96], "1000": [0, 5, 8, 14, 22, 24, 32, 43, 45, 47, 50, 58, 73, 74, 76, 78, 80, 82, 86, 92], "1e": [0, 2, 7, 8, 10, 11, 13, 15, 19, 20, 21, 22, 25, 26, 27, 31, 32, 35, 45, 47, 48, 52, 53, 54, 55, 57, 59, 65, 67, 73, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 97], "06": [0, 18, 25, 32, 38, 43, 50, 53, 59, 74, 75, 76, 78, 80, 83, 84, 86, 92, 98], "u_": [0, 89, 92], "sinkhorn_unbalanc": [0, 64, 68, 92, 96], "reg_mi": [0, 92], "margin": [0, 32, 34, 39, 51, 67, 72, 74, 75, 82, 83, 84, 86, 88, 92, 93, 95, 96, 97, 98], "relax": [0, 32, 38, 39, 42, 64, 72, 76, 82, 85, 88, 90, 92, 95, 96, 97, 98], "hyperparamet": [0, 92], "gener": [0, 3, 7, 11, 12, 13, 16, 18, 34, 35, 39, 40, 42, 48, 50, 52, 56, 58, 60, 66, 71, 72, 73, 74, 76, 77, 78, 79, 82, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98], "10": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 15, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 42, 43, 47, 49, 53, 54, 58, 59, 61, 62, 64, 65, 66, 67, 68, 74, 76, 78, 82, 83, 84, 85, 90, 92, 95, 96, 98], "dimens": [0, 7, 35, 43, 73, 74, 78, 81, 82, 83, 86, 88, 89, 92, 97], "ground": [0, 39, 57, 60, 74, 76, 83, 87, 90, 91, 92, 95, 96, 98], "metric": [0, 21, 22, 34, 39, 45, 48, 52, 57, 60, 66, 74, 76, 82, 83, 85, 86, 87, 88, 91, 92, 93, 95, 96, 97, 98], "entropi": [0, 49, 64, 73, 74, 78, 82, 90, 92, 95, 96], "If": [0, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 92, 93, 94, 95, 96, 97], "uniform": [0, 4, 6, 36, 42, 44, 46, 49, 52, 55, 61, 62, 67, 68, 73, 74, 75, 76, 79, 81, 82, 83, 84, 89, 92, 93, 94, 96, 97], "chizat": [0, 65, 74, 76, 86, 92, 95, 96], "schmitzer": [0, 65, 74, 76, 86, 92, 95, 96], "b": [0, 6, 7, 11, 14, 22, 23, 24, 27, 31, 34, 35, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 73, 74, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "vialard": [0, 65, 74, 76, 86, 92, 95, 96], "f": [0, 3, 4, 10, 13, 20, 26, 30, 31, 33, 36, 37, 41, 42, 47, 50, 52, 59, 62, 65, 73, 74, 75, 76, 78, 81, 82, 83, 85, 86, 89, 91, 92, 93, 95, 96, 97], "x": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 41, 42, 43, 44, 45, 46, 47, 49, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "2016": [0, 11, 25, 26, 32, 34, 43, 50, 65, 74, 76, 78, 82, 83, 84, 86, 91, 92, 95, 96, 97], "arxiv": [0, 17, 56, 59, 65, 74, 76, 78, 83, 85, 90, 92, 93, 95, 96], "preprin": [0, 92], "1607": [0, 65, 74, 76, 92, 95, 96], "05816": [0, 65, 74, 76, 92, 95, 96], "binary_search_circl": [0, 83], "u_valu": [0, 83], "v_valu": [0, 83], "u_weight": [0, 83], "v_weight": [0, 83], "p": [0, 2, 4, 7, 22, 29, 30, 31, 32, 34, 35, 36, 37, 43, 48, 52, 58, 62, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 82, 83, 86, 89, 90, 93, 94, 95, 96], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96], "lm": [0, 83], "tm": [0, 58, 83], "tp": [0, 58, 67, 83], "ep": [0, 8, 13, 35, 73, 76, 80, 83], "require_sort": [0, 83], "circl": [0, 39, 43, 52, 60, 72, 83, 93, 95, 98], "binari": [0, 36, 77, 83], "search": [0, 29, 30, 37, 52, 74, 82, 83, 85, 95, 96, 97], "44": [0, 59, 83, 86, 95, 97], "sampl": [0, 1, 6, 20, 26, 36, 39, 42, 43, 44, 46, 48, 50, 51, 52, 55, 58, 61, 62, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98], "need": [0, 42, 45, 52, 71, 73, 74, 78, 81, 83, 84, 87, 96, 97], "": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 19, 20, 21, 22, 23, 26, 27, 30, 31, 32, 34, 35, 36, 37, 39, 41, 45, 47, 49, 52, 53, 54, 57, 58, 59, 63, 64, 65, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98], "cong": [0, 83], "thei": [0, 70, 81, 83, 96, 97], "mathbb": [0, 42, 74, 82, 83, 84, 89, 91, 93, 96], "r": [0, 3, 4, 7, 8, 10, 11, 13, 22, 25, 26, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 57, 58, 59, 62, 64, 65, 66, 67, 73, 74, 75, 76, 78, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 97], "take": [0, 58, 70, 82, 83, 84, 85, 88, 91, 92, 96, 97], "valu": [0, 2, 7, 27, 29, 31, 35, 36, 45, 52, 57, 58, 65, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 93, 96, 97], "modulo": [0, 83], "subset": [0, 33, 83, 84, 93], "requir": [0, 29, 42, 73, 76, 82, 83, 84, 93, 95, 96, 97], "first": [0, 2, 3, 30, 31, 33, 34, 36, 37, 42, 71, 73, 74, 75, 76, 82, 83, 84, 88, 90, 93, 95, 96], "find": [0, 29, 35, 50, 73, 83, 84, 85, 95, 96, 97], "coordin": [0, 12, 31, 35, 73, 75, 78, 82, 83, 84, 91, 92, 93, 95, 96], "e": [0, 47, 70, 74, 81, 82, 83, 84, 89, 93, 95, 96], "atan2": [0, 73, 83, 93], "w_p": [0, 83, 89, 96], "u": [0, 1, 2, 3, 5, 6, 14, 41, 42, 47, 52, 62, 65, 71, 74, 78, 83, 84, 86, 89, 91, 92, 93, 95, 96, 97], "v": [0, 1, 5, 18, 23, 28, 29, 30, 32, 37, 39, 41, 50, 51, 52, 62, 65, 73, 74, 76, 77, 83, 84, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98], "inf_": [0, 83], "theta": [0, 1, 5, 8, 16, 25, 58, 74, 77, 83, 89], "int_0": [0, 83], "f_u": [0, 83], "q": [0, 31, 34, 36, 65, 66, 73, 74, 75, 82, 83, 86, 88, 93, 96], "f_v": [0, 83], "mathrm": [0, 4, 42, 58, 68, 74, 76, 78, 82, 83, 85, 86, 89, 90, 91, 92, 93], "cdf": [0, 83], "For": [0, 27, 32, 34, 36, 50, 52, 66, 71, 74, 75, 82, 83, 84, 85, 88, 91, 92, 93, 96, 97], "x_1": [0, 40, 42, 52, 83, 84, 93], "x_2": [0, 40, 42, 52, 83, 93], "get": [0, 2, 30, 32, 35, 36, 37, 74, 76, 78, 82, 83, 93, 95, 96, 97], "frac": [0, 4, 40, 47, 73, 74, 76, 78, 82, 83, 86, 88, 89, 90, 91, 93, 94, 96], "pi": [0, 1, 5, 8, 17, 24, 25, 29, 40, 41, 43, 47, 56, 58, 62, 78, 83, 84, 91, 93, 97], "get_coordinate_circl": [0, 83, 93], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 73, 83, 89, 95, 97], "backend": [0, 2, 3, 5, 6, 7, 9, 32, 34, 47, 52, 72, 74, 76, 79, 82, 83, 84, 85, 89, 91, 92, 93, 94, 95, 97, 98], "tensorflow": [0, 73, 83, 89, 95, 96, 97], "jax": [0, 73, 83, 89, 93, 95, 96, 97], "support": [0, 3, 5, 7, 18, 19, 39, 72, 74, 75, 79, 83, 89, 97, 98], "ndarrai": [0, 29, 35, 73, 74, 77, 78, 83, 85, 86, 87, 88, 89, 90, 91, 93], "n": [0, 2, 4, 6, 7, 8, 10, 11, 13, 14, 16, 17, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 49, 50, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96], "domain": [0, 27, 28, 30, 32, 59, 74, 76, 77, 78, 80, 82, 83, 84, 85, 87, 89, 90, 92, 93, 95, 97, 98], "target": [0, 1, 6, 7, 8, 24, 25, 28, 35, 39, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 67, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "default": [0, 2, 35, 36, 42, 52, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97], "power": [0, 52, 73, 83, 89], "lower": [0, 14, 19, 23, 34, 42, 52, 76, 83, 84], "bound": [0, 42, 76, 83, 84, 95, 97], "dc": [0, 83], "upper": [0, 41, 42, 64, 76, 83, 84], "condit": [0, 31, 32, 34, 59, 72, 73, 76, 79, 82, 83, 84, 85, 94, 95, 96, 97], "sort": [0, 41, 71, 73, 83, 96], "also": [0, 2, 52, 71, 73, 74, 80, 81, 82, 83, 84, 93, 95, 96, 97], "associ": [0, 47, 76, 82, 83, 86, 89, 93], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 73, 74, 89, 97, 98], "np": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 24, 25, 26, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 73, 74, 76, 77, 83, 86, 88, 89, 90, 92, 93, 96], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 74, 76, 77, 81, 82, 83, 85, 86, 88, 89, 92, 93, 95, 96], "8": [0, 2, 3, 4, 7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 47, 48, 50, 53, 55, 56, 59, 60, 61, 65, 66, 67, 68, 75, 76, 82, 83, 84, 91, 92, 93, 95, 96], "4": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 64, 65, 66, 67, 68, 70, 74, 75, 76, 80, 82, 83, 84, 86, 88, 92, 93, 95, 96], "7": [0, 8, 10, 12, 13, 17, 19, 20, 21, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 40, 43, 45, 47, 48, 50, 52, 55, 56, 57, 59, 65, 68, 75, 76, 83, 85, 88, 90, 91, 93, 95, 96], "delon": [0, 17, 76, 80, 83, 95], "juli": [0, 8, 83, 95, 97], "julien": [0, 83, 95], "salomon": [0, 83, 95], "andrei": [0, 83, 95], "sobolevski": [0, 83, 95], "fast": [0, 53, 74, 82, 83, 95, 96, 97], "mong": [0, 24, 45, 83, 86, 95, 97], "appli": [0, 25, 70, 75, 76, 80, 83, 92, 93, 95], "mathemat": [0, 3, 61, 71, 74, 80, 82, 83, 86, 89, 95, 96, 97], "70": [0, 1, 4, 5, 8, 30, 31, 32, 37, 53, 59, 83, 95], "2010": [0, 83, 86, 95], "2239": [0, 83, 95], "2258": [0, 83, 95], "dist": [0, 6, 8, 21, 29, 31, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 64, 65, 67, 68, 78, 82, 83, 88, 93, 96, 97], "x1": [0, 2, 3, 14, 15, 20, 24, 26, 33, 40, 41, 48, 52, 58, 78, 93], "x2": [0, 3, 14, 15, 20, 24, 26, 33, 40, 48, 52, 58, 78, 93], "sqeuclidean": [0, 21, 22, 52, 56, 57, 74, 76, 83, 91, 93], "w": [0, 6, 7, 8, 16, 32, 35, 36, 42, 48, 52, 66, 68, 74, 75, 76, 78, 80, 81, 82, 83, 89, 90, 91, 92, 93, 95, 96, 97], "between": [0, 2, 3, 6, 15, 17, 20, 29, 30, 32, 35, 36, 37, 39, 40, 44, 45, 46, 47, 48, 52, 60, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 92, 93, 94, 95, 97, 98], "thi": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 17, 19, 20, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 52, 53, 54, 58, 61, 62, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 88, 89, 90, 91, 93, 94, 95, 96, 97], "compat": [0, 52, 73, 74, 78, 79, 81, 82, 83, 84, 90, 91, 93, 94, 97], "work": [0, 12, 52, 71, 73, 74, 79, 82, 83, 85, 93, 94, 97], "from": [0, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 16, 18, 20, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98], "all": [0, 10, 11, 13, 27, 29, 32, 35, 36, 39, 48, 52, 65, 70, 71, 73, 74, 76, 79, 80, 82, 83, 88, 92, 93, 94, 95, 96, 97, 98], "n1": [0, 40, 47, 52, 93], "n2": [0, 30, 31, 32, 37, 40, 47, 52, 93], "callabl": [0, 52, 76, 78, 82, 85, 91, 93, 97], "euclidean": [0, 11, 29, 30, 32, 37, 48, 52, 56, 57, 76, 78, 83, 84, 90, 93, 96, 97], "On": [0, 52, 76, 80, 83, 93, 95, 96, 97], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 73, 74, 76, 78, 82, 83, 84, 86, 88, 89, 92, 93, 95, 96, 97], "accept": [0, 52, 70, 71, 73, 76, 83, 84, 93, 97], "scipi": [0, 29, 34, 35, 52, 58, 66, 71, 73, 83, 86, 90, 92, 93, 95, 96, 97], "spatial": [0, 34, 35, 52, 66, 86, 93], "cdist": [0, 34, 35, 52, 66, 86, 93], "braycurti": [0, 52, 93], "canberra": [0, 52, 93], "chebyshev": [0, 52, 93], "cityblock": [0, 52, 56, 83, 93], "correl": [0, 52, 93], "cosin": [0, 52, 93], "dice": [0, 52, 93], "ham": [0, 52, 93, 97], "jaccard": [0, 52, 93], "kulczynski1": [0, 52, 93], "mahalanobi": [0, 52, 93], "match": [0, 34, 52, 76, 82, 93, 95, 96], "minkowski": [0, 45, 52, 83, 93], "rogerstanimoto": [0, 52, 93], "russellrao": [0, 52, 93], "seuclidean": [0, 52, 93], "sokalmichen": [0, 52, 93], "sokalsneath": [0, 52, 93], "wminkowski": [0, 52, 93], "yule": [0, 52, 93], "norm": [0, 15, 29, 32, 34, 41, 43, 52, 68, 73, 75, 76, 82, 83, 93, 97], "rank": [0, 46, 52, 79, 90, 93, 97], "given": [0, 2, 30, 32, 35, 36, 37, 42, 47, 52, 73, 74, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97], "type": [0, 71, 73, 74, 76, 77, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 93, 96, 97], "emd": [0, 19, 21, 23, 31, 44, 46, 48, 56, 72, 74, 75, 76, 83, 84, 85, 86, 89, 90, 92, 94, 95, 97], "100000": [0, 50, 76, 83, 85, 92], "center_du": [0, 83], "numthread": [0, 83, 97], "check_margin": [0, 83], "earth": [0, 76, 83, 95, 97], "mover": [0, 76, 83, 95, 97], "gamma": [0, 52, 67, 68, 74, 76, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94, 96], "langl": [0, 74, 76, 82, 83, 84, 85, 86, 89, 91, 92], "rangle_f": [0, 74, 76, 82, 83, 84, 85, 86, 91, 92], "geq": [0, 68, 74, 76, 82, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96], "note": [0, 27, 45, 52, 73, 74, 76, 78, 81, 82, 83, 84, 86, 87, 90, 93, 95, 96, 97], "c": [0, 2, 7, 8, 15, 16, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 42, 43, 44, 45, 46, 50, 52, 55, 56, 58, 62, 67, 68, 72, 73, 74, 76, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "order": [0, 6, 16, 21, 27, 29, 42, 52, 73, 76, 78, 81, 83, 84, 87, 93, 95, 96], "float64": [0, 3, 7, 10, 11, 13, 14, 17, 20, 24, 26, 32, 34, 35, 45, 49, 53, 54, 57, 59, 64, 65, 74, 83], "format": [0, 1, 2, 3, 4, 5, 8, 22, 40, 52, 67, 71, 73, 81, 83, 93, 95, 97], "It": [0, 2, 11, 19, 21, 22, 25, 26, 27, 31, 32, 34, 53, 59, 66, 71, 82, 83, 91, 95, 96, 97], "convert": [0, 6, 20, 24, 26, 35, 73, 76, 83, 84, 93, 97], "But": [0, 79, 82, 83, 94, 96, 97], "cpu": [0, 2, 3, 7, 73, 79, 82, 83, 94, 95, 97], "which": [0, 2, 29, 42, 47, 52, 70, 73, 74, 75, 76, 79, 81, 82, 83, 84, 85, 87, 88, 93, 94, 95, 96, 97], "can": [0, 2, 6, 42, 45, 52, 68, 71, 74, 76, 78, 79, 82, 83, 84, 86, 88, 90, 91, 92, 93, 94, 95, 96, 97], "lead": [0, 6, 52, 73, 74, 79, 82, 83, 85, 94, 96, 97], "copi": [0, 7, 10, 30, 32, 37, 65, 71, 73, 79, 82, 83, 94, 96], "overhead": [0, 74, 79, 82, 83, 94, 96], "gpu": [0, 72, 73, 74, 79, 82, 83, 94, 95, 97], "cast": [0, 82, 83, 96], "plan": [0, 2, 9, 30, 32, 37, 39, 46, 48, 53, 54, 67, 68, 74, 75, 79, 80, 82, 83, 86, 88, 90, 91, 92, 93, 96, 97, 98], "data": [0, 2, 3, 7, 13, 32, 34, 36, 42, 45, 52, 56, 71, 73, 74, 75, 76, 80, 82, 83, 84, 95, 96, 97], "provid": [0, 2, 36, 52, 71, 72, 73, 74, 76, 80, 82, 83, 85, 88, 92, 95, 96, 97], "input": [0, 13, 17, 65, 73, 74, 75, 76, 79, 82, 83, 84, 90, 92, 93, 94, 96, 97], "prioriti": [0, 83], "an": [0, 2, 7, 8, 20, 24, 26, 29, 35, 42, 45, 52, 54, 70, 71, 73, 74, 76, 79, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 95, 97], "integ": [0, 29, 82, 83, 97], "tensor": [0, 2, 3, 6, 7, 33, 47, 73, 81, 82, 83, 85, 93, 96, 97], "might": [0, 15, 19, 21, 22, 27, 32, 34, 52, 59, 73, 74, 82, 83, 96], "result": [0, 2, 52, 70, 71, 73, 82, 83, 93, 96, 97], "precis": [0, 47, 73, 74, 76, 82, 83, 97], "behaviour": [0, 82, 83], "unwant": [0, 82, 83], "pleas": [0, 71, 73, 82, 83, 95], "make": [0, 30, 32, 37, 52, 56, 64, 65, 70, 71, 73, 77, 82, 83, 95, 96, 97], "sure": [0, 71, 82, 83, 95], "point": [0, 15, 17, 31, 32, 34, 35, 45, 48, 49, 50, 58, 71, 74, 76, 78, 80, 82, 83, 84, 86, 93, 95, 96, 97], "vector": [0, 6, 73, 74, 75, 76, 81, 83, 88, 89, 92, 93, 95, 96, 97], "do": [0, 8, 21, 27, 34, 52, 66, 70, 71, 73, 74, 83, 93, 96, 97], "sum": [0, 2, 5, 6, 7, 11, 12, 13, 14, 30, 32, 33, 34, 36, 37, 43, 44, 52, 55, 57, 59, 62, 64, 67, 68, 73, 74, 76, 78, 82, 83, 85, 86, 88, 89, 90, 91, 93, 95, 96], "same": [0, 25, 30, 34, 37, 52, 66, 73, 75, 83, 92, 93, 96, 97], "empti": [0, 61, 62, 76, 79, 83, 93, 94], "nt": [0, 6, 36, 74, 76, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 94], "maximum": [0, 4, 15, 29, 35, 52, 58, 73, 74, 76, 78, 82, 83, 85, 88, 90, 93], "befor": [0, 29, 71, 73, 76, 83, 97], "ha": [0, 2, 6, 8, 52, 72, 74, 76, 82, 83, 84, 86, 93, 95, 96, 97], "contain": [0, 10, 11, 13, 65, 75, 79, 82, 83, 84, 88, 93, 94, 95, 96, 97], "dual": [0, 8, 9, 11, 39, 45, 74, 75, 77, 79, 82, 83, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98], "variabl": [0, 36, 74, 76, 79, 82, 83, 84, 88, 90, 91, 94, 96, 97], "otherwis": [0, 70, 73, 82, 83, 93], "boolean": [0, 73, 74, 76, 80, 83, 93], "center": [0, 41, 52, 78, 83, 97], "potenti": [0, 5, 8, 32, 39, 51, 74, 76, 82, 83, 84, 90, 91, 92, 93, 95, 97, 98], "center_ot_du": [0, 83], "openmp": [0, 83, 97], "compil": [0, 83, 95, 96, 97], "choos": [0, 29, 58, 74, 78, 83, 96], "thread": [0, 83], "parallel": [0, 83, 93, 96, 97], "select": [0, 33, 49, 76, 80, 82, 83, 96], "highest": [0, 83], "possibl": [0, 71, 76, 83, 93, 96, 97], "check": [0, 71, 73, 74, 83, 93, 96, 97], "mass": [0, 2, 22, 30, 32, 52, 66, 68, 76, 82, 83, 86, 95, 96, 97], "equal": [0, 22, 42, 48, 56, 73, 83, 88], "skip": [0, 83], "exit": [0, 79, 83, 94, 97], "statu": [0, 79, 83, 93, 94, 97], "simpl": [0, 2, 6, 12, 35, 47, 52, 77, 83, 93, 96, 97], "obviou": [0, 83], "solut": [0, 45, 48, 52, 74, 76, 80, 83, 88, 93, 96, 97], "perform": [0, 2, 3, 7, 29, 42, 45, 49, 71, 76, 82, 83, 84, 93, 95, 96, 97], "convers": [0, 29, 83], "bonneel": [0, 3, 61, 72, 83, 89, 95, 96], "van": [0, 82, 83, 95, 96], "de": [0, 74, 83, 95, 96], "pann": [0, 83, 95, 96], "pari": [0, 14, 15, 33, 42, 83, 95, 96], "heidrich": [0, 83, 95, 96], "2011": [0, 80, 82, 83, 95, 96], "decemb": [0, 73, 83, 95, 96, 97], "displac": [0, 57, 83, 93, 95, 96], "interpol": [0, 2, 7, 12, 16, 19, 21, 23, 27, 31, 35, 36, 42, 44, 52, 55, 56, 74, 76, 82, 83, 84, 86, 95, 96, 97], "lagrangian": [0, 83, 86, 88, 95, 96], "In": [0, 2, 3, 6, 7, 8, 32, 34, 36, 40, 42, 47, 48, 52, 70, 71, 74, 75, 76, 78, 79, 81, 82, 83, 84, 87, 89, 90, 95, 96, 97], "acm": [0, 74, 83, 95, 96], "transact": [0, 59, 74, 76, 83, 85, 95, 96], "graphic": [0, 74, 83, 95, 96, 97], "tog": [0, 74, 83, 95, 96], "vol": [0, 8, 59, 76, 80, 83, 85, 95, 96], "30": [0, 1, 3, 4, 5, 8, 11, 19, 21, 23, 27, 29, 30, 31, 32, 34, 35, 36, 37, 41, 42, 43, 49, 52, 53, 59, 76, 83, 95, 96], "No": [0, 2, 36, 45, 71, 83, 95, 96], "6": [0, 2, 5, 7, 11, 13, 15, 16, 17, 19, 20, 21, 23, 24, 25, 26, 30, 32, 33, 34, 36, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 59, 64, 65, 66, 67, 68, 75, 76, 82, 83, 84, 88, 91, 93, 95, 96], "158": [0, 59, 83, 95, 96], "cg": [0, 32, 34, 59, 74, 76, 79, 82, 83, 84, 90, 92, 94, 96, 97], "emd2": [0, 6, 8, 57, 72, 83, 92, 95, 97], "process": [0, 25, 26, 30, 32, 33, 37, 40, 47, 49, 50, 52, 74, 75, 76, 82, 83, 84, 90, 91, 92, 95, 96, 97], "return_matrix": [0, 83], "min_": [0, 4, 6, 7, 8, 47, 68, 74, 78, 82, 83, 84, 86, 88, 92, 96], "nb": [0, 7, 10, 11, 13, 20, 26, 30, 32, 34, 35, 37, 43, 44, 45, 46, 49, 53, 54, 55, 56, 57, 59, 61, 62, 64, 65, 66, 67, 68, 82, 83, 85, 87], "multipl": [0, 57, 74, 80, 82, 83, 90, 91, 92, 93, 97], "deprec": [0, 7, 10, 29, 65, 83, 93], "emd2_1d": [0, 83, 96], "x_a": [0, 83], "x_b": [0, 83], "dens": [0, 73, 82, 83, 93], "1d": [0, 9, 18, 31, 39, 45, 60, 69, 72, 77, 82, 83, 85, 87, 93, 95, 96, 97, 98], "measur": [0, 3, 7, 14, 17, 31, 42, 50, 61, 74, 75, 76, 78, 82, 83, 89, 91, 92, 93, 95, 96], "sum_j": [0, 31, 83, 90, 91, 94], "gamma_": [0, 52, 74, 76, 83, 85, 86, 91, 92, 94, 96], "ij": [0, 41, 83, 94], "when": [0, 2, 45, 58, 68, 70, 71, 74, 75, 78, 80, 82, 83, 86, 88, 93, 95, 97], "y": [0, 1, 4, 8, 10, 15, 17, 19, 21, 22, 23, 25, 27, 29, 31, 32, 33, 34, 36, 41, 42, 43, 47, 62, 65, 73, 74, 75, 76, 77, 78, 82, 83, 84, 86, 88, 89, 90, 93, 95, 96], "detail": [0, 70, 71, 73, 78, 80, 83, 96, 97], "dirac": [0, 14, 44, 55, 83], "locat": [0, 14, 17, 73, 74, 83], "real": [0, 83], "line": [0, 20, 24, 26, 35, 52, 74, 82, 83, 85, 87, 96, 97], "string": [0, 74, 75, 76, 80, 82, 83, 91, 92, 93], "implement": [0, 5, 52, 71, 72, 73, 74, 78, 83, 90, 93, 96, 97], "faster": [0, 83, 97], "math": [0, 29, 52, 83, 86, 90, 96], "spars": [0, 29, 39, 45, 52, 60, 73, 74, 77, 78, 82, 83, 87, 90, 92, 93, 95, 96, 97, 98], "represent": [0, 30, 32, 36, 37, 50, 62, 70, 82, 83, 85, 89, 90, 91, 95, 96], "coo_matrix": [0, 73, 83], "set": [0, 2, 8, 19, 21, 23, 28, 29, 33, 35, 36, 39, 42, 45, 52, 70, 73, 74, 76, 77, 81, 82, 83, 85, 88, 93, 95, 96, 98], "2017": [0, 8, 42, 74, 76, 80, 83, 84, 94, 95, 96, 97], "2018": [0, 8, 50, 76, 80, 83, 86, 90, 91, 95, 96, 97], "multidimension": [0, 35, 83], "emd_1d": [0, 53, 83, 96, 97], "instead": [0, 5, 8, 10, 36, 65, 73, 74, 75, 83, 84, 93, 95, 96, 97], "factored_optimal_transport": [0, 46, 79], "xa": [0, 79, 94], "xb": [0, 3, 15, 46, 79, 94], "100": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 23, 25, 29, 32, 34, 35, 36, 41, 43, 45, 46, 48, 49, 52, 53, 54, 57, 58, 59, 64, 65, 66, 67, 73, 74, 75, 76, 78, 79, 82, 83, 84, 86, 89, 93], "x0": [0, 4, 29, 79, 83, 89], "07": [0, 9, 26, 28, 34, 43, 50, 51, 53, 59, 63, 66, 74, 75, 79, 80, 83, 86, 98], "factor": [0, 39, 51, 73, 87, 93, 95, 96, 97, 98], "intermedi": [0, 5, 45, 79], "40": [0, 1, 4, 5, 8, 30, 32, 34, 36, 37, 52, 53, 59, 68, 79, 88, 95, 96], "mu": [0, 3, 6, 7, 16, 25, 26, 29, 31, 42, 58, 66, 76, 78, 79, 80, 84, 89, 96], "w_2": [0, 58, 79, 83, 96], "mu_a": [0, 79], "mu_b": [0, 79, 80], "empir": [0, 2, 3, 28, 39, 46, 56, 60, 72, 74, 76, 77, 79, 80, 83, 87, 93, 94, 95, 96, 97, 98], "And": [0, 79, 80], "two": [0, 2, 3, 10, 20, 22, 31, 40, 47, 50, 52, 54, 57, 65, 71, 73, 74, 75, 76, 79, 80, 82, 83, 88, 92, 93, 94, 95, 96, 97], "gradient": [0, 2, 6, 7, 8, 9, 31, 32, 34, 39, 42, 43, 45, 47, 59, 72, 73, 74, 76, 78, 79, 82, 83, 84, 85, 86, 88, 90, 91, 94, 95, 96, 97, 98], "39": [0, 1, 45, 59, 79, 94, 95, 96], "rel": [0, 19, 31, 32, 34, 35, 59, 74, 76, 79, 82, 84, 85, 94], "variat": [0, 11, 57, 79, 82, 85, 94, 96], "ga": [0, 46, 79], "gb": [0, 46, 79], "forrow": [0, 79, 95, 96], "h\u00fctter": [0, 79, 95, 96], "nitzan": [0, 79, 95, 96], "rigollet": [0, 74, 79, 95, 96], "schiebing": [0, 79, 95, 96], "weed": [0, 74, 79, 95, 96], "2019": [0, 3, 29, 31, 32, 34, 49, 74, 76, 79, 82, 83, 89, 95, 96, 97], "april": [0, 74, 79, 95, 96], "statist": [0, 8, 42, 74, 76, 79, 83, 84, 90, 95, 96], "via": [0, 2, 3, 36, 39, 51, 70, 74, 76, 77, 79, 82, 95, 96, 98], "coupl": [0, 25, 39, 51, 74, 75, 76, 79, 82, 87, 95, 96, 97, 98], "22nd": [0, 74, 79, 95, 96], "intern": [0, 2, 3, 7, 8, 13, 29, 30, 31, 32, 34, 36, 37, 42, 50, 62, 74, 76, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96], "confer": [0, 2, 3, 8, 13, 29, 30, 31, 32, 34, 36, 37, 42, 50, 62, 74, 76, 79, 82, 83, 84, 85, 86, 89, 90, 91, 95, 96], "artifici": [0, 8, 42, 74, 76, 79, 84, 90, 95, 96], "intellig": [0, 8, 42, 59, 74, 76, 79, 84, 85, 90, 95, 96], "pp": [0, 3, 8, 34, 59, 74, 76, 79, 80, 85, 89, 95, 96], "2454": [0, 79, 95, 96], "2465": [0, 79, 95, 96], "pmlr": [0, 3, 8, 13, 42, 74, 76, 79, 84, 95, 96], "fused_gromov_wasserstein": [0, 30, 31, 32, 37, 82, 96, 97], "c1": [0, 2, 16, 30, 31, 32, 34, 37, 66, 67, 68, 82, 85, 86, 96], "c2": [0, 2, 16, 30, 31, 32, 34, 37, 66, 67, 68, 82, 86, 96], "loss_fun": [0, 31, 82], "square_loss": [0, 31, 32, 34, 35, 82], "symmetr": [0, 30, 37, 73, 82, 96, 97], "alpha": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 17, 19, 21, 22, 23, 25, 27, 29, 30, 31, 32, 33, 36, 37, 41, 42, 46, 48, 50, 52, 57, 58, 61, 62, 64, 65, 67, 68, 74, 75, 76, 81, 82, 83, 85, 87, 90, 91, 97], "armijo": [0, 82, 85, 97], "g0": [0, 30, 37, 44, 46, 53, 55, 59, 82, 85, 86, 92, 94], "max_it": [0, 19, 22, 25, 26, 34, 35, 76, 82, 90, 97], "tol_rel": [0, 32, 82], "09": [0, 34, 50, 51, 53, 59, 74, 76, 82, 85, 90, 98], "tol_ab": [0, 82], "fuse": [0, 38, 72, 81, 82, 95, 96, 97, 98], "c_1": [0, 31, 82, 84, 85, 86], "y_1": [0, 82], "c_2": [0, 30, 31, 37, 82, 84, 86], "y_2": [0, 82], "pairwis": [0, 30, 32, 37, 76, 82], "node": [0, 2, 29, 32, 33, 34, 81, 82, 95], "featur": [0, 29, 32, 33, 47, 71, 74, 75, 81, 82, 95], "matric": [0, 7, 32, 34, 35, 40, 47, 52, 59, 73, 74, 75, 76, 78, 81, 82, 83, 85, 86, 87, 93, 94, 95, 96, 97], "24": [0, 20, 28, 31, 32, 34, 43, 59, 75, 82, 95, 96, 97, 98], "sum_": [0, 4, 6, 52, 74, 75, 76, 78, 80, 82, 83, 84, 85, 86, 89, 91, 92, 96], "k": [0, 2, 6, 8, 13, 14, 15, 22, 29, 30, 31, 32, 36, 37, 41, 42, 43, 45, 48, 52, 54, 58, 73, 74, 75, 76, 78, 80, 81, 82, 83, 84, 86, 88, 96], "across": [0, 30, 32, 82, 91], "space": [0, 17, 33, 34, 35, 42, 66, 70, 73, 74, 75, 76, 80, 82, 83, 86, 89, 95, 96, 97], "account": [0, 58, 70, 71, 82, 84, 97], "misfit": [0, 82], "similar": [0, 8, 27, 52, 76, 82, 88, 96], "trade": [0, 36, 81, 82], "off": [0, 2, 4, 12, 13, 16, 20, 22, 24, 26, 30, 32, 33, 36, 37, 48, 59, 71, 81, 82], "conjug": [0, 82, 90], "done": [0, 6, 47, 48, 52, 82, 93, 96, 97], "limit": [0, 73, 82, 97], "memori": [0, 73, 74, 82, 83, 91, 93, 95, 96, 97], "repres": [0, 21, 27, 29, 42, 70, 74, 82, 83, 96], "structur": [0, 29, 32, 34, 36, 73, 81, 82, 95, 96, 97], "let": [0, 82, 83, 85], "its": [0, 1, 2, 5, 25, 30, 32, 36, 37, 42, 52, 58, 70, 73, 74, 76, 81, 82, 84, 85, 86, 89, 93, 95, 96, 97], "taken": [0, 36, 82, 93, 96], "assum": [0, 80, 82, 97], "symmetri": [0, 82], "test": [0, 29, 33, 43, 71, 73, 82, 85, 93, 95, 97], "conduct": [0, 82, 85], "els": [0, 2, 3, 7, 12, 17, 22, 29, 30, 32, 36, 37, 41, 45, 58, 76, 78, 80, 81, 82, 92], "resp": [0, 82, 85], "asymmetr": [0, 82], "step": [0, 1, 2, 3, 5, 6, 7, 8, 29, 33, 47, 71, 73, 74, 82, 83, 85], "found": [0, 29, 45, 71, 76, 82, 84, 96], "research": [0, 72, 82, 95, 96, 97], "close": [0, 29, 52, 76, 80, 82, 83, 93, 96], "form": [0, 6, 8, 52, 76, 80, 82, 83, 88, 93, 96, 97], "issu": [0, 70, 71, 74, 82, 93, 95, 96], "initi": [0, 14, 72, 74, 75, 78, 81, 82, 83, 85, 86, 92, 94, 96], "pq": [0, 82], "must": [0, 82, 90, 92, 93], "satisfi": [0, 82, 85], "constraint": [0, 32, 34, 45, 74, 82, 83, 84, 85, 90, 93, 96, 97], "absolut": [0, 19, 31, 32, 34, 59, 73, 75, 82, 85, 94], "directli": [0, 52, 82, 86, 96], "pass": [0, 71, 82, 83, 86, 90, 91, 93], "vayer": [0, 2, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 47, 72, 75, 78, 81, 82, 85, 95, 96], "titouan": [0, 29, 30, 31, 32, 34, 37, 72, 81, 82, 85, 95], "chapel": [0, 29, 31, 32, 34, 66, 67, 68, 72, 82, 86, 88, 92, 95, 96], "laetitia": [0, 29, 31, 32, 34, 66, 68, 72, 82, 95], "flamari": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 16, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 40, 41, 43, 44, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 59, 67, 72, 74, 75, 76, 78, 81, 82, 84, 85, 88, 91, 92, 95, 96], "r\u00e9mi": [0, 2, 3, 7, 14, 16, 29, 30, 31, 32, 33, 34, 37, 72, 74, 76, 81, 82, 85, 95, 96], "tavenard": [0, 29, 31, 32, 34, 72, 82, 95, 96], "romain": [0, 29, 31, 32, 34, 72, 82, 95], "courti": [0, 2, 7, 8, 12, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 47, 50, 52, 59, 62, 72, 74, 75, 76, 78, 81, 82, 83, 84, 85, 89, 91, 95, 96], "nicola": [0, 3, 7, 12, 29, 30, 31, 32, 34, 35, 37, 52, 61, 72, 74, 76, 81, 82, 85, 89, 95, 96], "applic": [0, 27, 29, 30, 31, 32, 34, 37, 59, 74, 76, 80, 82, 83, 85, 86, 94, 95], "graph": [0, 31, 34, 38, 39, 52, 72, 73, 81, 82, 85, 95, 96, 97, 98], "machin": [0, 2, 3, 8, 13, 29, 31, 32, 34, 36, 59, 74, 76, 82, 83, 85, 86, 95, 96, 97], "learn": [0, 2, 3, 6, 8, 13, 25, 29, 30, 31, 32, 34, 37, 38, 39, 50, 51, 62, 71, 72, 74, 75, 76, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 95, 96, 97, 98], "icml": [0, 2, 29, 31, 32, 34, 36, 78, 82, 86, 93, 95, 96], "47": [0, 40, 47, 59, 75, 82, 95, 97], "chowdhuri": [0, 82, 95], "m\u00e9moli": [0, 82, 95, 96], "network": [0, 8, 33, 81, 82, 95, 96, 97], "stabl": [0, 5, 73, 82, 95, 96, 97], "invari": [0, 82, 95], "infer": [0, 73, 82, 95], "ima": [0, 82, 95], "757": [0, 82, 95], "787": [0, 82, 95], "fused_gromov_wasserstein2": [0, 82], "fgw": [0, 30, 32, 37, 38, 39, 72, 81, 82, 95, 97, 98], "differenti": [0, 6, 7, 47, 82, 95, 96, 97], "wrt": [0, 2, 73, 76, 82, 93], "quadrat": [0, 9, 39, 68, 76, 77, 82, 85, 86, 87, 91, 92, 93, 95, 97, 98], "38": [0, 1, 2, 3, 9, 36, 59, 82, 95, 96, 98], "vincent": [0, 2, 30, 32, 33, 34, 36, 37, 72, 81, 82, 85, 95, 96], "cuaz": [0, 2, 30, 32, 33, 34, 36, 37, 72, 81, 82, 85, 95, 96], "corn": [0, 2, 30, 33, 36, 37, 81, 82, 85, 95, 96], "onlin": [0, 2, 36, 52, 70, 82, 95, 96, 97], "2021": [0, 2, 17, 30, 34, 36, 37, 67, 73, 78, 82, 83, 85, 88, 92, 95, 96, 97], "gromov_barycent": [0, 35, 82, 96, 97], "lambda": [0, 29, 82, 86, 88, 96], "tol": [0, 22, 32, 35, 76, 82, 86, 90], "stop_criterion": [0, 82, 97], "warmstartt": [0, 82], "init_c": [0, 82, 97], "random_st": [0, 2, 33, 35, 36, 41, 77, 78, 82, 91], "leq": [0, 82, 83, 85, 86, 96], "block": [0, 2, 27, 33, 71, 74, 75, 78, 82, 84, 95, 96], "descent": [0, 2, 6, 7, 32, 45, 47, 75, 78, 82, 83, 84, 85, 95, 96], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 73, 74, 76, 82, 83, 84, 91, 93, 95, 96, 97], "lambda_": [0, 82, 96], "gw": [0, 24, 30, 37, 82, 85, 86, 95, 97], "base": [0, 30, 32, 34, 37, 38, 39, 71, 72, 74, 76, 81, 82, 90, 93, 95, 96, 97, 98], "specif": [0, 35, 70, 71, 73, 74, 76, 82, 92, 96, 97], "criterion": [0, 33, 82, 96], "estim": [0, 9, 22, 28, 31, 32, 34, 39, 42, 45, 50, 71, 72, 74, 76, 77, 80, 82, 83, 84, 85, 91, 93, 95, 97, 98], "warmstart": [0, 32, 74, 75, 82, 92, 97], "success": [0, 82], "random": [0, 2, 3, 5, 6, 8, 14, 15, 20, 22, 24, 26, 29, 30, 31, 32, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 50, 58, 62, 66, 67, 68, 73, 76, 77, 78, 81, 82, 89, 91, 93, 97], "user": [0, 59, 71, 82, 95, 96, 97], "randomst": [0, 2, 6, 20, 24, 26, 35, 41, 42, 50, 76, 77, 78, 82, 89, 91, 93], "instanc": [0, 5, 70, 73, 77, 78, 82, 85, 91, 93, 96, 97], "fix": [0, 36, 47, 71, 74, 78, 80, 81, 82, 83, 86, 90, 95, 97], "seed": [0, 3, 5, 22, 29, 30, 31, 32, 33, 34, 35, 36, 37, 42, 43, 45, 46, 47, 67, 68, 73, 76, 77, 82, 89, 93], "reproduc": [0, 11, 71, 82, 91, 96], "permut": [0, 2, 3, 7, 82], "arbitrarili": [0, 82], "kei": [0, 75, 82], "evalu": [0, 73, 74, 75, 82, 83, 97], "12": [0, 5, 13, 14, 19, 26, 32, 34, 36, 43, 47, 59, 76, 82, 83, 86, 95, 96, 97], "gabriel": [0, 8, 32, 34, 72, 82, 86, 95, 96], "marco": [0, 8, 30, 32, 34, 37, 42, 72, 74, 76, 81, 82, 83, 84, 85, 86, 95, 96], "justin": [0, 32, 34, 82, 86, 95, 96], "solomon": [0, 32, 34, 74, 82, 86, 95, 96], "averag": [0, 32, 34, 73, 76, 78, 82, 86, 91, 95, 96], "kernel": [0, 25, 32, 76, 82, 84, 86, 93, 95, 96], "gromov_wasserstein": [0, 2, 30, 31, 34, 37, 82, 96, 97], "_1": [0, 41, 74, 76, 82, 83, 86, 96], "kl_loss": [0, 82, 97], "minim": [0, 2, 3, 4, 6, 7, 29, 30, 32, 36, 37, 47, 78, 82, 83, 85, 90, 92, 93, 96, 97], "13": [0, 13, 19, 26, 31, 32, 43, 52, 57, 59, 82, 86, 95, 96, 97], "facundo": [0, 82, 95, 96], "approach": [0, 11, 19, 21, 23, 27, 45, 74, 76, 82, 83, 95, 96], "object": [0, 1, 2, 3, 4, 5, 8, 35, 45, 53, 54, 57, 58, 73, 74, 75, 76, 82, 83, 90, 92, 93, 95, 96], "foundat": [0, 82, 86, 95, 96, 97], "11": [0, 5, 10, 19, 26, 32, 34, 36, 43, 51, 59, 65, 67, 78, 82, 94, 95, 96, 98], "417": [0, 82, 95, 96, 97], "487": [0, 82, 95, 96], "gromov_wasserstein2": [0, 2, 82, 96, 97], "To": [0, 2, 8, 35, 36, 73, 74, 82, 86, 93, 95, 96], "recov": [0, 2, 8, 82, 91, 92, 96], "defin": [0, 5, 8, 35, 40, 50, 52, 70, 73, 74, 76, 82, 83, 84, 88, 90, 93, 96, 97], "d_": [0, 82], "sqrt": [0, 4, 16, 36, 43, 62, 73, 80, 82, 86, 89], "gw_dist": [0, 30, 34, 37, 82], "max_sliced_wasserstein_dist": [0, 89], "x_": [0, 47, 74, 76, 83, 84, 89], "x_t": [0, 74, 76, 84, 89, 93], "n_project": [0, 3, 4, 61, 62, 89], "50": [0, 1, 3, 4, 5, 6, 8, 11, 15, 17, 22, 32, 33, 34, 36, 41, 42, 44, 45, 53, 55, 59, 67, 74, 83, 86, 89, 90, 95, 97], "mont": [0, 89], "carlo": [0, 89], "approxim": [0, 8, 11, 25, 42, 74, 75, 82, 83, 84, 85, 89, 95, 96], "slice": [0, 9, 63, 72, 77, 83, 93, 95, 96, 97, 98], "mathcal": [0, 16, 40, 42, 76, 77, 80, 81, 82, 84, 89, 93, 96], "swd": [0, 61, 89], "_p": [0, 89, 96], "nu": [0, 3, 4, 7, 31, 42, 76, 78, 83, 84, 89], "underset": [0, 83, 89], "_in": [0, 89], "theta_": [0, 89], "stand": [0, 89], "pushforward": [0, 89], "ni": [0, 89], "mapsto": [0, 82, 89], "rangl": [0, 74, 84, 89], "n_samples_a": [0, 74, 89], "n_samples_b": [0, 74, 89], "case": [0, 27, 52, 67, 71, 73, 75, 83, 88, 89, 90, 92, 95], "sliced_wasserstein_dist": [0, 3, 61, 89, 97], "20": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 19, 25, 26, 29, 30, 31, 32, 33, 34, 37, 40, 41, 43, 45, 47, 49, 52, 53, 54, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 74, 82, 83, 89, 95, 96, 97], "normal": [0, 4, 10, 11, 13, 14, 29, 30, 32, 37, 57, 65, 73, 76, 78, 81, 89, 93, 97], "35": [0, 1, 5, 22, 33, 43, 59, 89, 95, 96, 97], "deshpand": [0, 89, 95, 96], "hu": [0, 89, 95, 96], "sun": [0, 89, 95, 96], "pyrro": [0, 89, 95, 96], "siddiqui": [0, 89, 95, 96], "koyejo": [0, 89, 95, 96], "schwing": [0, 89, 95, 96], "gan": [0, 9, 39, 89, 95, 96, 97, 98], "proceed": [0, 13, 74, 89, 90, 95, 96], "ieee": [0, 59, 76, 85, 89, 95, 96], "cvf": [0, 89, 95, 96], "vision": [0, 3, 61, 89, 95, 96], "pattern": [0, 59, 76, 85, 89, 95, 96], "recognit": [0, 89, 95, 96], "10648": [0, 89, 95, 96], "10656": [0, 89, 95, 96], "semidiscrete_wasserstein2_unif_circl": [0, 58, 83], "mu_n": [0, 4, 8, 83, 89], "alpha_i": [0, 83, 89], "x_i": [0, 4, 31, 83, 84, 89, 96], "left": [0, 6, 13, 19, 23, 41, 47, 73, 74, 76, 80, 82, 83, 87, 89, 90, 91, 93, 94], "right": [0, 6, 13, 14, 30, 32, 37, 42, 47, 52, 64, 70, 71, 74, 76, 80, 82, 83, 89, 90, 91, 93, 94, 97], "alpha_k": [0, 83], "unif": [0, 2, 4, 6, 14, 15, 17, 31, 34, 35, 36, 44, 45, 46, 47, 50, 56, 58, 66, 83, 89, 91, 93], "delta_": [0, 4, 31, 83, 89, 90, 96], "02111111": [0, 83], "46": [0, 33, 38, 59, 62, 83, 89, 95, 97, 98], "bonet": [0, 4, 58, 62, 72, 83, 89, 95], "berg": [0, 62, 83, 89, 95], "septier": [0, 62, 83, 89, 95], "drumetz": [0, 62, 83, 89, 95], "pham": [0, 62, 83, 89, 95], "2023": [0, 32, 41, 62, 78, 82, 83, 89, 90, 95, 97], "spheric": [0, 9, 39, 63, 72, 83, 89, 95, 98], "omega": [0, 68, 74, 85, 86, 90, 91, 92, 96], "dim_a": [0, 74, 86, 88, 92], "dim_b": [0, 74, 86, 88, 92], "both": [0, 2, 7, 25, 52, 67, 70, 74, 75, 83, 84, 88, 92, 96, 97], "By": [0, 74, 78, 82, 88, 92, 96], "too": [0, 74, 78, 96], "small": [0, 2, 7, 52, 71, 74, 76, 78, 82, 83, 95, 96, 97], "should": [0, 27, 47, 68, 71, 73, 74, 76, 78, 82, 83, 88, 90, 92, 93, 95, 96, 97], "enough": [0, 29, 74, 78, 96], "you": [0, 15, 19, 21, 22, 29, 32, 34, 52, 59, 71, 73, 74, 78, 81, 84, 87, 95, 96, 97], "sharper": [0, 74, 96], "avoid": [0, 71, 73, 74, 76, 78, 86, 96, 97], "numer": [0, 23, 34, 52, 65, 73, 74, 76, 78, 86, 93, 95, 96, 97], "last": [0, 33, 52, 74, 75, 88, 96, 97], "veri": [0, 27, 52, 74, 82, 93, 95, 96], "slow": [0, 74, 78, 96, 97], "practic": [0, 8, 71, 74, 76, 78, 84, 96], "even": [0, 10, 11, 65, 66, 73, 74, 96, 97], "reason": [0, 70, 74, 96, 97], "finit": [0, 73, 74, 83, 93, 96], "why": [0, 71, 74, 97], "sinkhorn_epsilon_sc": [0, 74, 76, 96], "reli": [0, 74, 82, 95, 96], "warm": [0, 74, 96, 97], "start": [0, 36, 45, 52, 71, 73, 74, 78, 88, 93, 95, 97], "sometim": [0, 74, 96], "better": [0, 8, 49, 74, 90, 96, 97], "greedi": [0, 74, 95, 96, 97], "version": [0, 2, 35, 36, 58, 70, 71, 73, 74, 85, 88, 95, 96, 97], "greenkhorn": [0, 72, 74, 96, 97], "speedup": [0, 74, 96, 97], "screen": [0, 39, 51, 74, 77, 87, 95, 96, 98], "screenkhorn": [0, 39, 51, 72, 74, 77, 87, 96, 97, 98], "aim": [0, 4, 8, 68, 74, 76, 93, 96], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 27, 29, 30, 31, 32, 33, 34, 36, 37, 40, 42, 47, 48, 52, 58, 66, 67, 70, 71, 72, 73, 74, 76, 82, 83, 86, 88, 96, 97], "strongli": [0, 39, 51, 71, 74, 76, 82, 84, 95, 96, 97, 98], "recommend": [0, 71, 74, 82, 96, 97], "those": [0, 12, 52, 74, 76, 82, 83, 92, 93, 96], "tupl": [0, 74, 75, 83, 85, 92, 93], "logarithm": [0, 73, 74, 92], "36552929": [0, 74, 96], "13447071": [0, 74, 96], "lightspe": [0, 74, 76, 90, 92, 95, 96], "advanc": [0, 33, 40, 47, 49, 50, 70, 74, 75, 76, 90, 91, 92, 95, 96], "neural": [0, 8, 25, 26, 32, 33, 40, 47, 49, 50, 74, 75, 76, 81, 82, 84, 90, 91, 92, 95, 96, 97], "system": [0, 25, 26, 32, 33, 40, 47, 49, 50, 71, 73, 74, 76, 82, 84, 90, 91, 92, 95, 96], "nip": [0, 25, 26, 74, 76, 84, 90, 92, 95, 96], "26": [0, 43, 49, 59, 74, 76, 90, 92, 95, 96, 97], "2013": [0, 74, 76, 90, 92, 93, 95, 96], "9": [0, 2, 4, 8, 11, 17, 19, 22, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 46, 47, 48, 50, 53, 59, 66, 74, 76, 88, 90, 92, 95, 96], "stabil": [0, 74, 83, 92, 95, 96, 97], "preprint": [0, 17, 59, 65, 74, 76, 78, 83, 85, 92, 95, 96], "1610": [0, 74, 92, 95, 96], "06519": [0, 74, 92, 95, 96], "34": [0, 5, 9, 43, 59, 67, 69, 74, 92, 95, 96, 98], "feydi": [0, 74, 95, 96], "s\u00e9journ\u00e9": [0, 74, 95, 96], "amari": [0, 74, 95, 96], "trouv\u00e9": [0, 74, 95, 96], "mmd": [0, 74, 95, 96], "diverg": [0, 8, 57, 68, 73, 74, 82, 85, 92, 95, 96, 97], "2681": [0, 74, 95, 96], "2690": [0, 74, 95, 96], "unregular": [0, 74, 76, 84, 85, 88, 90, 92], "sinkhorn_knopp": [0, 74, 92, 96], "classic": [0, 45, 74, 84, 92, 96, 97], "epsilon": [0, 13, 30, 32, 34, 49, 64, 73, 74, 75, 82, 92, 96, 97], "sinkhorn2": [0, 57, 74, 95, 97], "without": [0, 45, 70, 71, 73, 74, 82, 88, 95, 97], "contribut": [0, 70, 74, 96, 97], "26894142136999516": [0, 74], "21": [0, 36, 38, 43, 59, 74, 95, 96, 98], "altschul": [0, 74, 95, 96], "Near": [0, 74, 95, 96], "linear": [0, 1, 5, 8, 25, 26, 28, 33, 38, 39, 67, 72, 73, 74, 75, 76, 78, 80, 82, 83, 84, 85, 88, 92, 93, 95, 96, 97, 98], "31": [0, 1, 3, 5, 13, 18, 43, 52, 59, 61, 74, 80, 89, 95, 96, 97, 98], "sinkhorn_lpl1_mm": [0, 76, 96], "labels_a": [0, 76], "eta": [0, 7, 25, 26, 76, 83, 84], "numinneritermax": [0, 15, 74, 76, 84, 85], "200": [0, 1, 4, 5, 8, 14, 15, 32, 45, 53, 58, 59, 61, 62, 76, 82, 85, 86, 97], "stopinnerthr": [0, 76, 84], "non": [0, 42, 54, 65, 67, 71, 72, 73, 74, 76, 83, 85, 88, 90, 92, 93, 95, 96, 97], "convex": [0, 36, 39, 51, 56, 76, 83, 84, 85, 90, 95, 96, 98], "group": [0, 19, 21, 76, 95, 97], "lasso": [0, 19, 21, 76, 88, 95, 97], "omega_": [0, 76, 96], "omega_g": [0, 76], "_c": [0, 76], "index": [0, 2, 75, 76, 88, 91, 92, 93, 95], "class": [0, 2, 5, 8, 22, 27, 33, 41, 42, 72, 74, 77, 78, 81, 84, 97], "label": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 19, 21, 22, 23, 25, 27, 29, 33, 34, 36, 41, 42, 43, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 74, 76, 77, 78, 93, 96, 97], "inner": [0, 74, 76, 82, 84], "tuia": [0, 59, 74, 76, 85, 95, 96], "rakotomamonji": [0, 43, 49, 59, 72, 74, 76, 78, 85, 95, 96], "adapt": [0, 27, 28, 42, 59, 70, 74, 76, 77, 82, 83, 85, 87, 93, 95, 97, 98], "analysi": [0, 39, 51, 59, 71, 74, 76, 78, 80, 83, 85, 94, 95, 97, 98], "99": [0, 2, 59, 76, 85, 95, 96, 97], "1510": [0, 59, 76, 85, 95, 96], "06567": [0, 59, 76, 85, 95, 96], "reg_typ": [0, 54, 76, 90, 92, 96], "reg_": [0, 19, 20, 21, 22, 23, 26, 27, 76, 92], "m1": [0, 16, 56, 92], "kl": [0, 54, 64, 73, 74, 75, 82, 90, 92, 95, 96, 97], "m2": [0, 6, 16, 56, 57, 92], "neg": [0, 1, 5, 67, 73, 74, 82, 83, 88, 90, 92, 95], "kullback": [0, 32, 34, 64, 68, 73, 82, 90, 92, 96], "leibler": [0, 32, 34, 64, 68, 73, 82, 90, 92, 96], "25": [0, 5, 8, 11, 29, 31, 33, 43, 58, 59, 62, 86, 88, 92, 95, 96, 97], "unnorm": [0, 86, 92], "One": [0, 84, 92, 95, 96, 97], "mani": [0, 92, 97], "length": [0, 73, 75, 83, 88, 91, 92, 93], "scalar": [0, 29, 73, 74, 75, 92, 93], "balanc": [0, 92, 93, 96], "inf": [0, 29, 76, 92], "semi": [0, 28, 38, 39, 72, 76, 77, 82, 85, 88, 90, 91, 92, 93, 95, 96, 97, 98], "have": [0, 8, 27, 36, 52, 70, 71, 73, 82, 83, 92, 93, 96, 97], "sinkhorn_reg_sc": [0, 92], "text": [0, 1, 4, 5, 6, 8, 14, 16, 20, 22, 24, 25, 44, 46, 47, 52, 55, 59, 61, 62, 64, 71, 74, 76, 80, 82, 83, 84, 88, 92, 93, 96], "ot_dist": [0, 92], "51122814": [0, 92], "18807032": [0, 92], "frogner": [0, 92, 95, 96], "zhang": [0, 92, 95, 96], "mobahi": [0, 92, 95, 96], "h": [0, 6, 13, 16, 29, 32, 34, 67, 74, 77, 78, 81, 82, 84, 88, 92, 93, 95, 96], "araya": [0, 92, 95, 96], "polo": [0, 92, 95, 96], "poggio": [0, 92, 95, 96], "sinkhorn_knopp_unbalanc": [0, 92, 96], "sinkhorn_stabilized_unbalanc": [0, 92, 96], "sinkhorn_reg_scaling_unbalanc": [0, 92], "sinkhorn_unbalanced2": [0, 92, 96], "parameterss": [0, 92], "round": [0, 2, 30, 32, 34, 36, 37, 52, 86, 92], "31912858": [0, 92], "sim": [0, 76, 84, 89], "et": [0, 3, 61, 67, 74, 83, 89, 95, 96], "al": [0, 3, 61, 67, 74, 83, 89, 95, 96], "radon": [0, 3, 61, 89, 95, 96], "imag": [0, 3, 11, 12, 28, 35, 39, 42, 52, 59, 61, 74, 76, 84, 85, 89, 93, 95, 96, 97, 98], "51": [0, 3, 32, 34, 59, 61, 82, 83, 89, 95, 96, 98], "22": [0, 3, 5, 43, 59, 61, 74, 89, 95, 96, 97], "45": [0, 3, 17, 59, 61, 83, 89, 92, 95, 96, 97], "sliced_wasserstein_spher": [0, 62, 89], "discrep": [0, 62, 82, 86, 89], "ssw_p": [0, 89], "int_": [0, 89], "sigma": [0, 8, 22, 24, 25, 26, 29, 40, 76, 77, 80, 84, 89, 93], "foral": [0, 74, 82, 83, 84, 89, 93], "tx": [0, 12, 16, 89], "_2": [0, 42, 74, 76, 80, 82, 84, 88, 89, 93], "keepdim": [0, 43, 62, 73, 89], "sliced_wasserstein_sphere_unif": [0, 4, 89], "ssw_2": [0, 4, 89], "42": [0, 2, 3, 5, 17, 20, 24, 26, 36, 41, 46, 59, 69, 83, 89, 95, 97], "randn": [0, 1, 3, 5, 6, 8, 15, 24, 31, 34, 40, 43, 47, 50, 62, 66, 73, 89], "500": [0, 3, 4, 5, 6, 8, 20, 26, 32, 45, 58, 73, 75, 82, 89, 90], "ssw": [0, 4, 89], "allclos": [0, 73, 89], "01734": [0, 89], "atol": [0, 73, 89], "unbalanced_typ": 0, "n_thread": 0, "plan_init": 0, "potentials_init": 0, "discret": [0, 20, 25, 26, 36, 45, 59, 72, 74, 76, 83, 84, 85, 91, 95, 96, 97], "otresult": [0, 93], "t_": [0, 82], "m_": [0, 31, 88, 96], "lambda_r": 0, "lambda_u": 0, "penal": [0, 39, 69, 77, 88, 92, 95, 98], "exact": [0, 18, 39, 51, 59, 69, 74, 77, 83, 86, 87, 92, 93, 95, 96, 97, 98], "array_lik": [0, 76, 84, 93], "l2": [0, 10, 11, 39, 45, 54, 65, 69, 77, 82, 88, 90, 92, 95, 96, 97, 98], "tv": [0, 57], "avail": [0, 27, 70, 71, 73, 95, 96, 97], "omp": 0, "_type_": 0, "toler": [0, 35, 73, 75, 80, 86, 90], "re": [0, 61, 62, 66, 67, 73, 83, 93], "obtain": [0, 58, 76, 88, 96], "value_linear": [0, 93], "more": [0, 30, 32, 37, 47, 52, 71, 73, 74, 78, 80, 83, 96, 97], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 72, 73, 74, 77, 83, 90, 93, 96, 97], "origin": [0, 2, 25, 29, 71, 72, 83, 90, 96, 97], "paper": [0, 11, 74, 95, 96, 97], "formul": [0, 86, 90, 95, 96], "17": [0, 19, 26, 43, 59, 83, 90, 95, 96], "41": [0, 1, 7, 52, 59, 88, 92, 95, 97], "blondel": [0, 50, 72, 90, 91, 95, 96, 97], "segui": [0, 14, 50, 90, 91, 95, 96], "rolet": [0, 50, 72, 90, 91, 95, 96], "twenti": [0, 90, 95, 96], "aistat": [0, 74, 76, 90, 95, 96], "wu": [0, 67, 88, 92, 95], "f\u00e9vott": [0, 67, 88, 92, 95], "gasso": [0, 49, 67, 74, 86, 88, 92, 95, 96], "through": [0, 67, 88, 92, 95, 96], "regress": [0, 67, 71, 88, 92, 95], "neurip": [0, 32, 49, 82, 86, 88, 92, 95, 96], "solve_gromov": [0, 97], "ca": 0, "cb": [0, 16, 41, 80], "whether": [0, 73, 82, 83, 93], "wass": 0, "Not": [0, 73], "correspond": [0, 6, 7, 27, 52, 76, 78, 82, 83, 84, 88, 96, 97], "yet": [0, 82, 96, 97], "semirelax": 0, "value_quad": [0, 93], "part": [0, 2, 93, 95, 97], "loss_linear_term": 0, "loss_quad_term": 0, "includ": [0, 70, 71, 75, 78, 82, 83, 93, 96, 97], "48": [0, 30, 37, 52, 59, 82, 85, 95, 97], "right_margin": 0, "marginal_b": [0, 93], "29": [0, 5, 43, 59, 76, 80, 86, 95, 96, 97], "36th": [0, 95, 96], "c\u00e9dric": [0, 30, 32, 34, 36, 37, 72, 81, 82, 85, 95], "2022": [0, 33, 76, 80, 82, 83, 95], "iclr": [0, 30, 32, 37, 82, 85, 90, 95], "alaya": [0, 49, 72, 74, 86, 95, 96], "2020": [0, 8, 13, 40, 42, 47, 74, 75, 76, 81, 84, 86, 95, 96, 97], "posit": [0, 2, 7, 10, 11, 13, 36, 49, 52, 53, 54, 57, 59, 64, 65, 70, 73, 76, 80, 83, 85, 86, 87, 95, 96], "unlabel": [0, 76, 86, 95, 96], "solve_sampl": [0, 97], "lazi": [0, 93, 95, 97], "batch_siz": [0, 33, 36, 50, 76, 82, 91, 93], "95": [0, 29, 30, 32, 35, 37, 59, 61, 62, 97], "x_init": [0, 14, 15, 74, 83], "y_j": [0, 31, 96], "squar": [0, 6, 35, 42, 52, 56, 57, 73, 76, 78, 82, 84, 89, 90, 93, 95, 96, 97], "otresultlazi": 0, "reduc": [0, 93], "batch": [0, 7, 8, 33, 74, 76, 81, 82, 83, 91, 93], "larg": [0, 8, 27, 50, 76, 78, 86, 91, 95, 96, 97], "soler": 0, "geomloss": [0, 95, 96, 97], "lazy_plan": [0, 93], "complex": [0, 82, 96], "o": [0, 1, 5, 12, 13, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 33, 35, 36, 45, 48, 52, 81, 82, 95, 96, 97], "effici": [0, 72, 74, 83, 95, 96, 97], "cuda": [0, 3, 7, 72, 97], "pykeop": 0, "forc": [0, 73, 96], "geomloss_onlin": 0, "pre": [0, 52, 73, 74, 96], "geomloss_tensor": 0, "multiscal": 0, "geomloss_multiscal": 0, "plai": 0, "speed": [0, 96, 97], "low": [0, 36, 42, 46, 52, 79, 93, 97], "factored_solution_lazi": 0, "full": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 73, 74, 91, 93, 95, 97], "factored_solut": 0, "gaussian": [0, 7, 8, 10, 18, 24, 25, 26, 29, 39, 45, 49, 53, 54, 57, 59, 64, 65, 72, 73, 76, 77, 84, 93, 95, 96, 97, 98], "bure": [0, 18, 39, 80, 97, 98], "teh": 0, "mu_": [0, 34, 42, 44, 55, 58, 61, 66, 67, 68, 76, 80, 96], "mu_t": [0, 34, 42, 44, 55, 61, 66, 67, 68, 76, 80, 96], "lvert": [0, 80], "_t": [0, 80], "rvert": [0, 80], "sigma_": [0, 76, 80], "sigma_t": [0, 76, 80], "tr": [0, 80], "covari": [0, 76, 77, 80, 96], "mean": [0, 7, 10, 11, 13, 30, 32, 33, 37, 41, 45, 49, 53, 54, 57, 58, 59, 61, 62, 64, 65, 73, 74, 77, 78, 80, 81, 83, 96, 97], "bw_dist": 0, "multivari": 0, "independ": [0, 22, 83, 96, 97], "w_dist": 0, "tic": [0, 11, 31, 45, 93, 97], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 71, 73, 93, 96, 97, 98], "matlab": [0, 72, 93], "toc": [0, 11, 31, 45, 93, 97], "messag": [0, 71, 74, 93, 97], "elaps": [0, 11, 31, 93], "toq": [0, 93], "julia": [0, 93], "type_a": [0, 73, 89, 93, 97], "bin": [0, 7, 10, 11, 13, 45, 49, 53, 54, 57, 59, 64, 65, 77, 83, 93, 96], "expect": [0, 8, 47, 70, 71, 74, 93, 95, 96], "output": [0, 5, 8, 35, 71, 74, 76, 82, 91, 93, 95, 96, 97], "pytorch": [0, 9, 39, 47, 72, 73, 77, 81, 87, 91, 93, 95, 96, 97, 98], "wasserstein_1d": [0, 7, 58, 83, 96, 97], "dimension": [0, 34, 39, 51, 66, 74, 77, 78, 82, 83, 95, 96, 97, 98], "15": [0, 5, 8, 13, 14, 19, 23, 26, 29, 31, 32, 41, 43, 47, 59, 66, 76, 83, 92, 95, 96, 97], "formal": [0, 74, 83], "so": [0, 2, 8, 32, 45, 68, 82, 83, 93, 95, 96, 97], "wai": [0, 20, 71, 83, 96], "build": [0, 8, 29, 71, 76, 83, 95, 96, 97], "individu": [0, 70, 83], "quantil": [0, 83, 86], "integr": [0, 83], "them": [0, 30, 37, 73, 76, 83, 86, 97], "prefer": [0, 71, 78, 83], "whenev": [0, 83], "differ": [0, 2, 17, 32, 39, 45, 52, 60, 70, 74, 75, 76, 82, 83, 87, 92, 95, 96, 97, 98], "over": [0, 8, 36, 73, 74, 82, 83, 84, 86, 93], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 73, 75, 82, 83, 85, 90, 93, 95, 96, 97], "least": [0, 71, 83, 84], "chap": [0, 83], "atom": [0, 74, 82, 83], "consid": [0, 7, 27, 29, 36, 40, 42, 70, 71, 74, 83, 86, 93, 96], "been": [0, 8, 72, 83, 86, 93, 95, 96, 97], "prior": [0, 71, 74, 83, 96], "being": [0, 45, 52, 71, 76, 83, 96, 97], "wasserstein_circl": [0, 58, 83], "ot_": [0, 83, 96], "cdf_u": [0, 83], "cdf_v": [0, 83], "w_1": [0, 83, 96], "levm": [0, 83], "hundries": [0, 83, 95], "shayan": [0, 83, 95], "marcel": [0, 83, 95], "klatt": [0, 83, 95], "axel": [0, 83, 95], "munk": [0, 83, 95], "circular": [0, 29, 83, 95], "direct": [0, 36, 57, 83, 85, 90, 95, 97], "innov": [0, 83, 95], "bicentenni": [0, 83, 95], "tribut": [0, 83, 95], "florenc": [0, 83, 95], "nightingal": [0, 83, 95], "singapor": [0, 83, 95], "springer": [0, 83, 95], "natur": [0, 73, 83, 95], "57": [0, 59, 76, 80, 83, 95, 97], "82": [0, 52, 59, 83, 95, 97], "weak_optimal_transport": [0, 44, 94], "weak": [0, 39, 51, 72, 77, 87, 95, 96, 97, 98], "_j": [0, 78, 83, 90, 91, 94], "guess": [0, 85, 94], "indep": [0, 85, 94], "joint": [0, 36, 74, 82, 84, 85, 94, 95, 96, 97], "densiti": [0, 85, 94], "numitermaxemd": [0, 85, 94], "stopthr2": [0, 85, 94], "gozlan": [0, 17, 83, 94, 95, 96], "roberto": [0, 94, 95, 96], "samson": [0, 94, 95, 96], "tetali": [0, 94, 95, 96], "kantorovich": [0, 83, 94, 95, 96], "dualiti": [0, 94, 95, 96], "273": [0, 83, 94, 95, 96], "3327": [0, 94, 95, 96], "3405": [0, 94, 95, 96], "go": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 97], "end": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 76, 83, 84, 88, 96], "download": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68], "author": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 95], "remi": [1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 16, 19, 20, 21, 22, 24, 25, 26, 27, 33, 40, 43, 44, 46, 47, 48, 52, 53, 54, 55, 56, 57], "polytechniqu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 17, 44, 46, 48], "edu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 17, 44, 45, 46, 48, 96], "licens": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68], "mit": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 95], "sphinx_gallery_thumbnail_numb": [1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 17, 20, 21, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 41, 42, 43, 44, 46, 48, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67], "pyplot": [1, 4, 5, 8, 10, 12, 13, 15, 17, 20, 24, 26, 29, 31, 33, 35, 42, 45, 47, 48], "pl": [1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 16, 17, 19, 21, 22, 23, 25, 27, 30, 31, 32, 33, 34, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68], "manual_se": [1, 3, 4, 5, 8, 33], "n_source_sampl": [1, 5, 19, 23, 25, 76], "n_target_sampl": [1, 5, 19, 23, 25, 76], "noise_level": [1, 5, 25], "make_data_classif": [1, 19, 21, 22, 23, 25, 27], "gaussrot": [1, 25], "nz": [1, 22, 25, 43, 77], "xt": [1, 5, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 31, 34, 42, 43, 44, 46, 55, 56, 58, 61, 62, 66, 67, 68, 74, 76, 80, 84, 87, 88, 91, 96], "yt": [1, 19, 21, 22, 23, 25, 27, 31, 43, 76], "one": [1, 3, 5, 7, 20, 24, 25, 26, 29, 33, 35, 36, 50, 52, 71, 73, 74, 76, 77, 83, 88, 96, 97], "mode": [1, 5, 25, 76], "chang": [1, 2, 5, 25, 35, 36, 71, 73, 74, 83, 96, 97], "varianc": [1, 5, 25, 34], "figur": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71], "clf": [1, 2, 3, 4, 5, 8, 11, 16, 22, 24, 25, 30, 31, 32, 33, 35, 36, 37, 40, 42, 47, 48, 52, 56, 57, 65, 67], "scatter": [1, 2, 3, 4, 5, 6, 8, 14, 15, 16, 17, 19, 21, 22, 23, 25, 26, 27, 31, 33, 34, 35, 36, 41, 42, 43, 52, 58, 62, 66, 67, 68], "marker": [1, 5, 14, 16, 17, 19, 21, 22, 23, 25, 27, 33, 36, 41, 43], "legend": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 19, 21, 22, 23, 24, 25, 27, 33, 36, 41, 42, 43, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 67], "loc": [1, 5, 14, 19, 21, 23, 24, 25, 27, 30, 32, 37, 41, 42, 43, 44, 46, 55, 56, 61, 62, 64, 67], "titl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 52, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 87, 95], "requires_grad": [1, 6, 47], "adam": [1, 5, 33, 82], "lr": [1, 2, 3, 4, 5, 6, 7, 8, 33, 47, 50, 91], "n_iter": [1, 4, 5, 8], "rang": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 16, 22, 29, 30, 32, 33, 35, 36, 37, 40, 41, 42, 45, 47, 48, 52, 57, 58, 61, 62, 65, 67, 68, 97], "nois": [1, 5, 8, 29, 66, 77], "minu": [1, 5], "becaus": [1, 5, 83, 96, 97], "maxim": [1, 5, 83, 91, 92, 97], "te": [1, 5], "loss_dual_entrop": [1, 5], "append": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 29, 30, 32, 33, 35, 36, 37, 45, 47, 65, 66, 93], "detach": [1, 2, 3, 4, 5, 6, 7, 8, 33, 47, 73], "3d": [1, 4, 5, 8, 10, 11, 17, 62, 65], "backward": [1, 2, 3, 5, 6, 7, 8, 33, 47], "zero_grad": [1, 5, 8], "grid": [1, 4, 5, 6, 8, 62], "xlabel": [1, 4, 5, 6, 8, 20, 26, 31, 33, 36, 40, 41, 47, 52, 57, 58, 61, 62], "ge": [1, 55, 59], "plan_dual_entrop": [1, 5], "2020494900224734": 1, "19": [1, 12, 18, 19, 26, 43, 45, 50, 59, 91, 95, 96, 97, 98], "557949302978525": 1, "412832588144816": 1, "36": [1, 3, 5, 26, 28, 59, 88, 92, 95, 96, 98], "01803964832584": 1, "695391360457556": 1, "90276637525653": 1, "60": [1, 3, 4, 5, 7, 8, 10, 11, 13, 32, 33, 34, 36, 45, 49, 53, 54, 59, 64, 65, 83, 95, 98], "62876184254799": 1, "86736334699318": 1, "80": [1, 4, 5, 8, 11, 14, 32, 36, 53, 59, 97], "97816450487009": 1, "90": [1, 5, 8, 17, 32, 52, 53, 57, 59, 97], "00385920516625": 1, "02058181473881": 1, "110": [1, 5, 8, 32, 53, 59], "02616945841051": 1, "120": [1, 5, 8, 32, 49, 53, 59, 62], "027812378582226": 1, "130": [1, 5, 8, 32, 53, 59, 97], "02902041989713": 1, "140": [1, 5, 8, 32, 53, 59, 97], "02965041209846": 1, "150": [1, 4, 5, 8, 17, 19, 21, 23, 27, 32, 45, 48, 53, 58, 59, 97], "02999165087026": 1, "160": [1, 5, 8, 32, 45, 53, 59, 97], "03025627223706": 1, "170": [1, 5, 8, 32, 53, 59, 97], "03044976982597": 1, "180": [1, 5, 8, 32, 45, 53, 59], "03060433889266": 1, "190": [1, 5, 8, 32, 53, 59], "03073029961273": 1, "plot2d_samples_mat": [1, 21, 44, 46, 55, 56], "zorder": [1, 2, 5, 36, 41, 48], "01": [1, 9, 10, 18, 19, 23, 28, 30, 31, 32, 34, 37, 38, 43, 50, 51, 53, 57, 59, 60, 65, 66, 69, 74, 86, 88, 98], "loss_dual_quadrat": 1, "gq": 1, "plan_dual_quadrat": 1, "0018442196020623663": 1, "423952792230434": 1, "966415838900947": 1, "567102092117054": 1, "3016729112366": 1, "663436403231245": 1, "374713927132795": 1, "70078933130635": 1, "83163223049868": 1, "86975978643829": 1, "89086002001813": 1, "89679077751553": 1, "89960543798133": 1, "90076945385097": 1, "90129896363918": 1, "90165367362548": 1, "90185594754947": 1, "901997466150235": 1, "90209582873216": 1, "902165598000224": 1, "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 83, 96, 98], "script": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 97], "minut": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68], "270": [1, 5, 9, 32, 98], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 97], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 96, 97], "plot_dual_ot_pytorch": [1, 9, 98], "ipynb": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 95, 97, 98], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 71, 97], "express": [2, 6, 70, 96], "model": [2, 3, 5, 33, 95, 96, 97], "actual": [2, 96], "proport": [2, 30, 32, 36, 37, 52, 74, 76, 77, 87], "sbm": [2, 30, 32, 33, 36, 37], "allow": [2, 6, 34, 35, 40, 42, 47, 66, 71, 75, 86, 96, 97], "accur": 2, "simultan": 2, "other": [2, 6, 7, 43, 51, 52, 70, 71, 82, 90, 91, 93, 95, 97, 98], "properti": [2, 8, 76, 82, 83, 84, 93, 95, 96], "sklearn": [2, 33, 35, 36, 41, 93, 97], "manifold": [2, 33, 35, 36, 78, 96], "md": [2, 36, 97], "pylab": [2, 3, 6, 7, 11, 14, 16, 17, 19, 21, 22, 23, 25, 27, 30, 32, 34, 36, 37, 40, 41, 43, 44, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68], "torch": [2, 3, 4, 6, 7, 8, 33, 47, 73, 81, 96, 97], "ot": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 47, 48, 49, 50, 53, 55, 60, 61, 62, 64, 65, 66, 67, 68, 71, 72, 95, 97, 98], "rng": [2, 6, 20, 24, 26, 35, 41, 42, 50], "def": [2, 3, 4, 5, 6, 8, 16, 17, 20, 22, 24, 26, 29, 30, 32, 33, 34, 35, 36, 37, 58, 59, 67, 73, 93], "get_sbm": 2, "nc": [2, 36], "ratio": 2, "nbpc": 2, "astyp": [2, 3, 14, 15, 17, 20, 24, 26, 32, 34, 35, 36, 42], "zero": [2, 3, 4, 6, 8, 10, 11, 23, 30, 32, 34, 36, 37, 47, 52, 54, 56, 57, 58, 65, 73, 75, 76, 82, 83, 93, 97], "rand": [2, 4, 8, 24, 43, 45, 46, 66, 68, 73], "ey": [2, 36, 73], "05": [2, 5, 19, 25, 26, 32, 34, 43, 50, 53, 59, 63, 68, 73, 74, 76, 82, 83, 84, 88, 98], "ones": [2, 8, 14, 15, 29, 30, 31, 32, 36, 37, 45, 52, 55, 61, 62, 67, 68, 73, 76, 82], "2d": [2, 17, 18, 19, 21, 22, 23, 27, 36, 39, 44, 46, 52, 56, 60, 63, 67, 69, 74, 77, 83, 86, 87, 92, 93, 96, 97, 98], "dissimilar": [2, 35, 36], "precomput": [2, 35, 36, 96], "fit_transform": [2, 33, 35, 36, 76], "plot_graph": [2, 36], "color": [2, 4, 5, 6, 7, 10, 13, 15, 16, 28, 29, 30, 32, 34, 35, 36, 37, 39, 40, 41, 42, 45, 47, 48, 52, 55, 58, 62, 66, 67, 68, 76, 87, 93, 96, 97, 98], "c0": [2, 5, 16, 36, 41, 67, 68], "edgecolor": [2, 15, 16, 36, 41], "cmap": [2, 5, 10, 12, 13, 22, 29, 31, 34, 36, 41, 52, 65, 66, 68], "tab10": [2, 36, 41], "vmax": [2, 22, 29, 36, 41, 47, 52], "subplot": [2, 4, 5, 8, 10, 11, 12, 13, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 40, 43, 44, 46, 47, 52, 56, 57, 59, 65, 66, 67, 68, 87], "axi": [2, 3, 4, 5, 12, 13, 15, 16, 17, 20, 22, 24, 26, 30, 32, 33, 36, 37, 41, 42, 48, 56, 58, 59, 61, 62, 66, 68, 73, 78, 90, 93], "imshow": [2, 12, 13, 19, 20, 21, 23, 24, 26, 27, 31, 34, 36, 40, 41, 44, 47, 52, 55, 56, 59, 66, 68], "nearest": [2, 19, 21, 23, 27, 31, 36, 39, 44, 51, 55, 56, 76, 84, 95, 97, 98], "adjac": [2, 29, 81], "home": [2, 5, 7, 10, 15, 19, 21, 22, 23, 29, 32, 34, 35, 36, 45, 49, 52, 58, 59, 65], "circleci": [2, 5, 7, 10, 15, 19, 21, 22, 23, 29, 32, 34, 35, 36, 45, 49, 52, 58, 59, 65, 97], "local": [2, 35, 36, 71, 96, 97], "lib": [2, 35, 36, 73], "python3": [2, 35, 36], "site": [2, 35, 36], "packag": [2, 35, 36, 74, 93, 96, 97], "_md": [2, 35, 36], "298": [2, 35, 36, 97], "futurewarn": [2, 35, 36], "normalized_stress": [2, 35, 36], "auto": [2, 31, 35, 36, 41], "suppress": [2, 35, 36], "manual": [2, 35, 36], "plot_optim_gromov_pytorch": [2, 9, 98], "81": [2, 59], "userwarn": [2, 5, 7, 15, 19, 21, 22, 23, 32, 34, 36, 49, 52, 59, 65], "colormap": [2, 10, 36, 41, 65], "ignor": [2, 36, 45, 47, 73, 76, 85, 97], "diagon": [2, 27, 29, 73, 80, 93], "want": [2, 8, 15, 19, 21, 22, 32, 34, 47, 52, 59, 96, 97], "up": [2, 71, 97], "min_weight_gw": 2, "a2": [2, 10, 11, 13, 15, 45, 65], "nb_iter_max": [2, 3, 7], "min_a": [2, 96], "our": [2, 3, 7, 95, 96, 97], "c1_torch": 2, "c2_torch": 2, "a0": 2, "random_init": 2, "a1_torch": 2, "requires_grad_": [2, 3, 4, 7], "a2_torch": 2, "loss_it": [2, 3, 7], "clone": [2, 3, 4, 7, 71, 73], "03d": [2, 33], "no_grad": [2, 3, 6, 7, 47], "grad": [2, 3, 4, 6, 7, 43, 47, 73, 82, 90, 91], "zero_": [2, 3, 6, 7, 47], "proj_simplex": [2, 6, 7, 47], "a1": [2, 10, 11, 13, 15, 45, 65], "a0_est": 2, "loss_iter0": 2, "29850312": 2, "20157616": 2, "49992072": 2, "clear": 2, "noe": 2, "receiv": [2, 71], "most": [2, 74, 93, 96, 97], "show": [2, 7, 10, 12, 13, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 70, 83], "here": [2, 4, 67, 82, 83, 95, 96, 97], "previous": 2, "t_unif": 2, "label_unif": 2, "argmax": [2, 30, 32, 33, 36, 37, 40, 47, 73, 84], "t_est": 2, "label_est": 2, "est": 2, "7760154087783518": 2, "5785554952306606": 2, "7708789474385981": 2, "6510858680020267": 2, "now": [2, 4, 52, 73, 96, 97], "seen": [2, 74, 83, 96], "probabl": [2, 7, 17, 33, 36, 47, 76, 80, 82, 83, 95], "link": [2, 30, 32, 71, 95, 97], "graph_compression_gw": 2, "nb_node": 2, "clamp": 2, "a0_est2": 2, "c0_est2": 2, "loss_iter2": 2, "5e": [2, 13, 22, 34, 35, 67], "vmin": [2, 29, 41, 47, 52], "colorbar": [2, 36, 41, 52], "29985821": 2, "18926744": 2, "51087435": 2, "0x7fc3b88599c0": 2, "652": [2, 9, 98], "liutku": [3, 95, 96], "simsekli": [3, 95, 96], "majewski": [3, 95, 96], "durmu": [3, 95, 96], "st\u00f6ter": [3, 95, 96], "mai": [3, 70, 71, 82, 83, 86, 88, 95, 96, 97], "nonparametr": [3, 95, 96], "diffus": [3, 95, 96], "4104": [3, 95, 96], "4113": [3, 95, 96], "load": [3, 20, 26, 52, 96], "i1": [3, 14, 17, 20, 24, 26], "imread": [3, 12, 13, 14, 17, 20, 24, 26, 35], "redcross": [3, 12, 14, 17], "png": [3, 12, 13, 14, 17, 35, 48], "i2": [3, 14, 17, 20, 24, 26], "tooth": [3, 12, 17], "sz": [3, 14, 17], "xx": [3, 5, 14], "yy": [3, 5, 14], "meshgrid": [3, 4, 5, 14, 17, 73], "arang": [3, 7, 10, 11, 13, 14, 17, 31, 40, 41, 43, 45, 47, 49, 53, 54, 56, 57, 59, 64, 65, 73, 74, 93], "stack": [3, 14, 16, 17, 36, 42, 73], "32": [3, 5, 14, 43, 59, 78, 82, 95, 96], "x3": [3, 14, 15], "collect": [3, 10, 11, 35, 58, 65, 74], "pathcollect": [3, 35, 58], "0x7fc3db5e6f20": 3, "devic": [3, 7, 73, 96, 97], "is_avail": [3, 7], "x1_torch": 3, "x2_torch": 3, "1e3": 3, "x_all": 3, "gen": 3, "5e1": 3, "ax": [3, 4, 10, 12, 13, 15, 17, 41, 47, 52, 62, 65, 73, 85, 96], "_update_plot": [3, 4, 8, 17, 67], "ani": [3, 4, 8, 17, 42, 45, 67, 70, 71, 73, 75, 76, 82, 83, 84, 85, 88, 93, 95, 96], "funcanim": [3, 4, 8, 17, 67], "gcf": [3, 4, 8, 10, 65, 67], "interv": [3, 4, 8, 17, 61, 62, 67, 73], "repeat_delai": [3, 4, 8, 17, 67], "2000": [3, 4, 7, 8, 17, 45, 67], "onc": [3, 4, 8, 17, 67], "loop": [3, 4, 8, 17, 32, 52, 67, 76, 82, 95], "reflect": [3, 4, 8, 17, 67], "x3_torch": 3, "xbinit": 3, "16": [3, 7, 15, 19, 26, 28, 31, 36, 40, 43, 47, 59, 73, 75, 78, 83, 88, 95, 96], "xbary_torch": 3, "583": [3, 9, 98], "plot_sliced_wass_grad_flow_pytorch": [3, 9, 98], "transform": [4, 19, 20, 21, 23, 25, 27, 76, 82, 91, 93, 96], "cl\u00e9ment": [4, 58, 62, 72], "clement": [4, 58, 62], "univ": [4, 22, 23, 40, 47, 58, 62, 67, 68], "ub": [4, 40, 47, 58, 62, 67, 68], "fr": [4, 7, 10, 11, 12, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 35, 36, 40, 41, 42, 43, 47, 53, 54, 55, 56, 57, 58, 62, 64, 65, 66, 67, 68], "nn": [4, 5, 8, 33, 97], "function": [4, 7, 10, 12, 35, 42, 52, 65, 67, 71, 74, 81, 82, 95, 96, 97], "plot_spher": 4, "xlist": 4, "linspac": [4, 5, 10, 15, 29, 57, 58, 65, 73, 97], "ylist": 4, "z": [4, 10, 36, 49, 62, 65, 72, 74, 83, 90, 93, 95, 96], "plot_wirefram": [4, 62], "grai": [4, 62], "bottom": [4, 13, 52], "half": 4, "set_titl": [4, 10, 13, 15, 47], "0x7fc3d9e74610": 4, "xvisu": [4, 8], "sw": 4, "grad_x": 4, "item": [4, 29, 30, 32, 33, 37, 71], "semilogi": [4, 6, 8], "2108873426914215": 4, "23": [4, 5, 6, 8, 9, 43, 57, 59, 83, 95, 96, 97, 98], "52222222222222": [4, 5, 6, 8], "ivisu": [4, 8], "fig": [4, 12, 13, 15, 17, 34, 35, 40, 41, 47, 56, 62, 66], "add_subplot": [4, 10, 17, 34, 65, 66], "set_xlim": [4, 15, 62], "set_ylim": [4, 15, 62], "159": [4, 5, 9, 59, 98], "plot_ssw_unif_torch": [4, 9, 98], "nvisu": [5, 59], "300": [5, 32, 36, 45], "ax_bound": 5, "mlp": [5, 8], "modul": [5, 8, 33, 49, 52, 71, 74, 78, 81, 84, 87, 95, 97], "__init__": [5, 8, 33, 76, 93], "self": [5, 8, 33, 76, 93], "super": [5, 8, 33], "fc1": [5, 8], "fc2": [5, 8], "relu": [5, 8], "heavisid": [5, 8], "fn": [5, 8], "forward": [5, 8, 33, 81, 96], "ravel": [5, 29, 67, 68, 90, 93], "doubl": [5, 47, 52], "005": [5, 33, 68], "n_batch": 5, "iperm": 5, "randint": [5, 20, 26, 29, 33, 45], "ipermt": 5, "xsi": 5, "xti": 5, "257329928299894": 5, "890456785604673": 5, "58037947236615": 5, "18": [5, 19, 26, 29, 43, 50, 59, 86, 91, 95, 96], "440996850749865": 5, "12608610815788": 5, "275903405782387": 5, "27": [5, 36, 43, 59, 74, 76, 95, 97], "268827591939186": 5, "79159074243252": 5, "63488731570214": 5, "12722861847872": 5, "696522621311644": 5, "33": [5, 34, 40, 43, 45, 47, 49, 51, 59, 74, 75, 95, 96, 98], "46949401889149": 5, "64206913098603": 5, "15381635153295": 5, "28321242161009": 5, "520585380642636": 5, "676096587323535": 5, "45865441165184": 5, "43596310348253": 5, "26194570410683": 5, "01278968196742": 5, "210": [5, 32, 97], "87401169938976": 5, "220": [5, 32, 97], "12820568044987": 5, "230": [5, 32, 45], "6372243096062": 5, "240": [5, 32, 97], "65926621902025": 5, "250": [5, 32, 45], "527425475361845": 5, "260": [5, 32, 97], "126583681704034": 5, "735871196038286": 5, "280": [5, 32, 45, 97], "157560505651844": 5, "290": [5, 32, 97], "070647347170436": 5, "27069736487665": 5, "310": [5, 32, 97], "40325557106319": 5, "320": [5, 11, 32, 45], "75151933211852": 5, "330": [5, 32], "50578707289677": 5, "340": [5, 8, 9, 32, 97, 98], "833572391120526": 5, "350": [5, 32, 97], "54009720287946": 5, "360": [5, 32, 97], "54715464928039": 5, "370": [5, 32], "63597866286179": 5, "380": [5, 32, 97], "85734724064162": 5, "390": [5, 32], "22195044833466": 5, "400": [5, 32, 45, 97], "54526255143114": 5, "410": [5, 32, 97], "20288271113561": 5, "420": [5, 32], "14673091868496": 5, "430": [5, 32], "32427691564021": 5, "440": [5, 32], "51095472212393": 5, "450": [5, 32], "56664149963812": 5, "460": [5, 32], "557146416121796": 5, "470": [5, 32], "7012331965002": 5, "480": [5, 32], "754363123393354": 5, "490": [5, 32], "129209682796": 5, "nv": [5, 67], "xl": 5, "yl": 5, "xg": [5, 8], "concaten": [5, 6, 15, 24, 43, 48, 58, 66, 68, 73, 88, 93], "wxg": 5, "exp": [5, 52, 58, 73, 78, 91, 96], "iv": [5, 58, 67], "gg": [5, 31], "wt": [5, 80, 91], "reshap": [5, 20, 24, 26, 29, 33, 35, 43, 45, 49, 53, 54, 57, 59, 64, 66, 67, 73, 74, 86, 88], "pcolormesh": 5, "green": [5, 7], "plot_stoch_continuous_ot_pytorch": [5, 9, 98], "doe": [5, 52, 71, 73, 82, 96, 97], "handl": [5, 7, 93, 96, 97], "quadmesh": 5, "http": [5, 49, 52, 56, 70, 73, 74, 90, 93, 95, 96, 97], "org": [5, 49, 56, 70, 73, 74, 90, 93, 95, 96, 97], "tutori": [5, 71, 96], "legend_guid": 5, "html": [5, 52, 71, 73, 95], "custom": 5, "handler": 5, "173": [5, 59], "187": [5, 59], "751": [5, 9, 98], "mix": [6, 7, 47], "word": [6, 96], "suppos": [6, 74, 96], "s_k": 6, "w_k": [6, 96], "belong": [6, 34, 66, 84, 88], "delta_k": 6, "observ": [6, 74, 77], "pot": [6, 7, 12, 19, 34, 35, 40, 42, 47, 50, 51, 66, 68, 72, 73, 75, 93, 97, 98], "nt1": 6, "ns1": 6, "xs1": [6, 22], "xs2": [6, 22, 58], "s_1": 6, "s_2": 6, "0x7fc3db855360": 6, "h2": [6, 30, 32, 37, 82], "2e": [6, 49, 54, 67], "rate": [6, 82, 83, 91], "niter": [6, 45, 47, 83], "get_loss": 6, "mv": 6, "mixtur": 6, "09980706": 6, "90019294": 6, "dot": [6, 10, 11, 16, 22, 24, 30, 32, 34, 37, 45, 46, 52, 65, 66, 73, 93], "c3": [6, 16, 30, 32, 37, 48], "0x7fc3d9e77a00": 6, "422": [6, 9, 97, 98], "plot_unmix_optim_torch": [6, 9, 98], "refer": [7, 30, 32, 37, 71, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 91, 92, 93, 94], "ensur": [7, 29, 71, 83, 96], "remain": 7, "illustr": [7, 10, 11, 12, 13, 14, 15, 16, 17, 29, 30, 31, 32, 33, 36, 37, 41, 43, 44, 46, 47, 49, 52, 53, 54, 55, 58, 59, 61, 62, 64, 65, 67, 71, 97], "within": [7, 70, 73, 82], "framework": [7, 36, 97], "ncourti": [7, 12, 34, 35], "irisa": [7, 12, 29, 31, 34, 35, 55, 66], "mpl": 7, "make_1d_gauss": [7, 10, 11, 13, 45, 49, 53, 54, 57, 59, 64, 65], "gauss": [7, 49, 53, 54, 57, 64, 76], "red": [7, 20, 26, 31, 33, 42, 52], "to_rgb": [7, 16], "blue": [7, 12, 20, 26, 31, 33, 34, 40, 41, 42, 47, 52], "dtype": [7, 10, 11, 13, 45, 49, 53, 54, 57, 59, 61, 62, 64, 65, 73, 74, 97], "std": [7, 10, 11, 13, 31, 45, 49, 53, 54, 57, 58, 59, 61, 62, 64, 65, 73, 77, 82, 97], "enforc": [7, 42, 76, 96], "x_torch": 7, "a_torch": 7, "b_torch": 7, "800": [7, 32, 45], "figsiz": [7, 11, 12, 13, 15, 17, 19, 20, 21, 23, 24, 26, 27, 29, 30, 32, 33, 35, 37, 41, 43, 45, 47, 49, 50, 53, 54, 56, 59, 62, 64, 65], "onto": [7, 19, 21, 23, 76, 82, 90, 93, 96], "curv": [7, 47], "everi": [7, 36, 42, 75, 76, 82, 95], "lw": [7, 13, 30, 32, 37, 41, 52], "evolut": [7, 36, 58, 74, 82, 95], "fontsiz": [7, 13, 29, 30, 31, 32, 33, 34, 36, 37, 41, 52, 62, 67], "solver_1d": [7, 58], "than": [7, 52, 73, 82, 96, 97], "revers": [7, 73], "throw": [7, 97], "futur": [7, 29, 97], "releas": [7, 10, 65, 95, 96], "mt": [7, 80], "transpos": [7, 40, 47, 73, 97], "ndim": [7, 29], "trigger": [7, 75], "aten": 7, "src": 7, "nativ": 7, "tensorshap": 7, "cpp": 7, "3614": 7, "cw": 7, "contigu": 7, "tw": [7, 81, 95], "bary_torch": 7, "instant": 7, "205": [7, 9, 98], "plot_wass1d_torch": [7, 9, 98], "fit": [8, 24, 26, 27, 35, 42, 74, 76, 83, 84, 93, 96], "g_": 8, "realist": 8, "drawn": [8, 77, 87], "indistinguish": 8, "mu_d": 8, "arjovsky2017": 8, "access": [8, 52, 95], "cannot": [8, 27, 45, 76, 92, 96, 97], "genevay2018": 8, "studi": 8, "fatras2019": 8, "arjovski": 8, "chintala": 8, "bottou": 8, "adversari": [8, 96], "214": [8, 26, 28, 98], "223": 8, "genevai": [8, 50, 91, 95, 96], "aud": [8, 95], "fatra": [8, 50, 55, 72, 95], "zine": 8, "gribonv": 8, "june": 8, "asymptot": 8, "23nd": 8, "108": [8, 59, 97], "n_dim": 8, "n_featur": [8, 33, 41, 76, 81, 93], "get_data": 8, "n_sampl": [8, 15, 34, 35, 41, 66, 76], "angl": [8, 16, 24, 58], "cat": 8, "co": [8, 24, 39, 43, 51, 56, 58, 62, 75, 93, 95, 98], "sin": [8, 24, 29, 43, 56, 58, 62, 93], "0x7fc3bb4bdd20": 8, "fc3": 8, "rmsprop": 8, "00019": 8, "doc": [8, 71, 73, 97], "size_batch": 8, "stati": 8, "n_visu": 8, "xnvisu": 8, "ab": [8, 31, 34, 57, 73, 90, 93, 96], "xn": 8, "xd": 8, "smapl": 8, "compt": 8, "del": 8, "9009847640991211": 8, "10964284837245941": 8, "04564394801855087": 8, "03516071289777756": 8, "05013977363705635": 8, "058588504791259766": 8, "03730057179927826": 8, "04171676188707352": 8, "03168988972902298": 8, "031197285279631615": 8, "03596879169344902": 8, "03272819146513939": 8, "032379165291786194": 8, "03959248960018158": 8, "029337508603930473": 8, "05796702206134796": 8, "034939464181661606": 8, "022607704624533653": 8, "04347885772585869": 8, "1164197325706482": 8, "75": [8, 59, 97], "125": [8, 10, 45, 48, 59], "175": [8, 45, 59, 97], "199": [8, 59, 86, 97], "xtick": [8, 11, 19, 21, 23, 27, 31, 41, 57, 67, 68], "ytick": [8, 11, 19, 21, 23, 27, 31, 41, 68], "xlim": [8, 35, 41, 52, 57, 58], "ylim": [8, 35, 41, 57, 58], "0x7fc3b9f52800": 8, "plot_wass2_gan_torch": [8, 9, 98], "03": [9, 19, 25, 31, 32, 34, 38, 43, 48, 49, 50, 51, 53, 59, 60, 62, 69, 86, 98], "384": [9, 45], "execut": [9, 18, 28, 38, 51, 60, 63, 69, 83, 96, 97, 98], "file": [9, 18, 28, 38, 39, 48, 51, 60, 63, 69, 96, 97, 98], "auto_exampl": [9, 18, 28, 38, 51, 60, 63, 69], "mem": [9, 18, 28, 38, 51, 60, 63, 69, 98], "mb": [9, 16, 18, 28, 38, 51, 60, 63, 69, 80, 98], "minibatch": [9, 39, 91, 96, 98], "flow": [9, 39, 77, 93, 95, 96, 97, 98], "00": [9, 18, 19, 22, 25, 26, 28, 31, 32, 34, 38, 51, 59, 60, 63, 66, 69, 88, 98], "continu": [9, 36, 39, 45, 74, 83, 91, 96, 98], "embed": [9, 32, 33, 34, 35, 39, 82, 95, 96, 98], "sphere": [9, 39, 42, 89, 98], "08": [9, 50, 53, 59, 73, 76, 87, 98], "unmix": [9, 36, 39, 74, 82, 93, 95, 96, 97, 98], "unic": [10, 11, 19, 20, 21, 22, 24, 25, 26, 27, 33, 40, 43, 47, 53, 54, 55, 56, 57, 83], "plt": [10, 12, 13, 15, 17, 20, 24, 26, 29, 35, 42], "necessari": [10, 11, 65, 66, 70, 71, 83, 95, 96, 97], "mpl_toolkit": [10, 11, 34, 65, 66], "mplot3d": [10, 11, 34, 65, 66], "axes3d": [10, 11, 34, 65, 66], "noqa": [10, 11, 34, 65, 66], "polycollect": [10, 11, 65], "creat": [10, 11, 13, 29, 33, 65, 70, 71, 72, 73, 87, 95, 97], "vstack": [10, 11, 13, 31, 33, 45, 65], "n_distribut": [10, 11, 13, 65], "dist0": [10, 11, 13, 65], "l2bari": [10, 11, 65], "bary_l2": [10, 11, 65], "bary_wass": [10, 11, 65], "ax1": [10, 31, 34, 35, 40, 47, 66], "ax2": [10, 31, 34, 35, 40, 47, 66], "tight_layout": [10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 23, 25, 26, 27, 30, 31, 32, 33, 34, 36, 37, 40, 41, 43, 47, 52, 56, 57, 65], "num": [10, 13, 73], "black": [10, 30, 32, 36, 37, 40, 42, 47, 87], "n_alpha": 10, "alpha_list": 10, "b_l2": [10, 65], "b_wass": [10, 65], "cm": [10, 12, 29, 41, 65], "get_cmap": [10, 41, 65], "viridi": [10, 29, 65], "vert": [10, 65], "enumer": [10, 13, 29, 30, 32, 36, 37, 41, 57, 58, 61, 62, 65], "zip": [10, 13, 17, 36, 39, 65, 95], "poli": [10, 65], "facecolor": [10, 16, 41, 48, 65], "set_alpha": [10, 65], "add_collection3d": [10, 65], "zdir": [10, 65], "set_xlabel": [10, 62, 65], "set_xlim3d": [10, 65], "set_ylabel": [10, 13, 52, 62, 65], "set_ylim3d": [10, 65], "set_zlabel": [10, 62, 65], "set_zlim3d": [10, 65], "plot_barycenter_1d": [10, 18, 98], "103": [10, 59], "matplotlibdeprecationwarn": [10, 65], "wa": [10, 52, 65, 73, 96, 97], "remov": [10, 65, 70, 73, 83, 88, 93, 97], "minor": [10, 65, 97], "later": [10, 30, 32, 37, 65, 76], "name": [10, 22, 65, 73, 82, 93, 95, 96], "obj": [10, 45, 65, 83, 90], "669": [10, 18, 98], "standard": [11, 73, 77, 81, 82, 84, 93, 97], "scienc": [11, 20, 26, 59, 76, 85, 95, 96], "343": [11, 97], "cvx": [11, 45], "bary_wass2": 11, "003312349319458008": 11, "222153902053833": 11, "004976511001586914": 11, "07836413383483887": 11, "0010805130004882812": 11, "0536649227142334": 11, "nbm": 11, "len": [11, 13, 15, 29, 30, 32, 33, 35, 36, 37, 41, 45, 52, 90, 93], "nbm2": 11, "508": [11, 18, 98], "plot_barycenter_lp_vs_entrop": [11, 18, 98], "design": [12, 30, 34, 35, 37, 40, 42, 50, 59, 66, 68, 82, 88, 96, 97], "how": [12, 25, 30, 33, 34, 35, 36, 37, 40, 42, 47, 50, 52, 57, 58, 66, 68, 74, 97], "pathlib": [12, 13, 20, 24, 26, 35], "path": [12, 13, 20, 24, 26, 35, 39, 69, 71, 77, 88, 95, 97, 98], "four": [12, 35], "construct": [12, 16, 35, 70, 73, 76, 88], "this_fil": [12, 13, 20, 24, 26, 35], "realpath": [12, 13, 20, 24, 26, 35], "__file__": [12, 13, 20, 24, 26, 35], "data_path": [12, 13, 20, 24, 26, 35], "join": [12, 13, 20, 24, 26, 35, 73, 95], "parent": [12, 13, 20, 24, 26, 35], "f1": [12, 13], "f2": [12, 13, 30, 32, 37, 82], "f3": [12, 30, 32, 37], "heart": [12, 13, 17], "f4": 12, "duck": [12, 13, 14], "nb_imag": 12, "corner": [12, 96], "bilinear": [12, 16, 52], "v1": [12, 16, 30, 32, 37], "v2": [12, 16, 30, 32, 37], "v3": [12, 16], "v4": [12, 16], "suptitl": [12, 29], "004": [12, 33], "ty": [12, 16], "tmp1": [12, 16], "tmp2": [12, 16], "elif": [12, 30, 32, 36, 37], "call": [12, 45, 50, 68, 74, 76, 82, 83, 84, 85, 91, 93, 96, 97], "convolutional_barycenter2d": [12, 13, 74, 97], "080": [12, 18, 98], "plot_convolutional_barycent": [12, 18, 98], "janati": [13, 64, 65, 72, 74, 95, 96], "gramfort": [13, 72, 74, 95, 96], "37th": [13, 74, 95, 96], "119": [13, 59, 74, 95, 96], "4692": [13, 74, 95, 96], "4701": [13, 74, 95, 96], "hicham": [13, 64, 65, 72, 95], "janati100": 13, "gmail": [13, 19, 20, 21, 25, 26, 27, 30, 32, 34, 35, 37, 49, 50], "com": [13, 19, 20, 21, 25, 26, 27, 30, 32, 34, 35, 37, 49, 50, 71, 73, 90, 93, 95, 97], "barycenter_debias": [13, 74], "convolutional_barycenter2d_debias": [13, 74, 97], "bar": [13, 88], "bars_debias": 13, "indianr": 13, "gold": [13, 73], "sharei": [13, 31], "bar_debias": 13, "varepsilon": [13, 75], "3f": [13, 22, 67], "asarrai": 13, "displai": [13, 21, 27, 52, 74], "img": [13, 20, 24, 26, 35], "grei": [13, 36, 41, 45], "bars_sinkhorn": 13, "7e": 13, "all_bar": 13, "jj": 13, "ax_row": 13, "ii": [13, 23], "set_xtick": [13, 17, 62], "set_ytick": [13, 17, 62], "spine": 13, "top": [13, 41, 71, 82, 87], "set_vis": 13, "961": [13, 18, 98], "plot_debiased_barycent": [13, 18, 98], "vivien": [14, 90, 95], "iip": 14, "ist": 14, "kyoto": 14, "ac": 14, "jp": 14, "eduardo": [14, 15, 72], "fernand": [14, 15, 72], "montesuma": [14, 15, 72], "universit": [14, 15], "saclai": [14, 15, 33], "measures_loc": [14, 15, 74, 83], "measures_weight": [14, 15, 74, 83], "free_support_barycent": [14, 74, 96, 97], "free_support_sinkhorn_barycent": [14, 15, 74], "185": [14, 18, 45, 59, 98], "plot_free_support_barycent": [14, 18, 98], "calcul": [15, 40, 73, 74, 75, 82], "understood": 15, "cloud": [15, 35], "linalg": [15, 16, 29, 32, 34, 66, 73], "x4": 15, "multivariate_norm": 15, "a3": 15, "a4": 15, "steelblu": 15, "float32": 15, "xb_init": 15, "subplot2grid": [15, 35], "_sinkhorn": [15, 19, 21, 22, 23, 32, 34, 52, 59], "531": [15, 19, 21, 22, 28, 32, 34, 52, 59, 98], "did": [15, 19, 21, 22, 32, 34, 52, 59, 82, 97], "increas": [15, 19, 21, 22, 32, 34, 52, 59, 86], "111": [15, 18, 59, 98], "plot_free_support_sinkhorn_barycent": [15, 18, 98], "patch": [16, 40, 41, 47], "ellips": 16, "c4": 16, "m3": 16, "m4": 16, "draw_cov": 16, "nstd": 16, "eigsort": 16, "cov": [16, 66], "val": [16, 73], "vec": 16, "eigh": [16, 73], "argsort": [16, 73], "degre": 16, "arctan2": [16, 73], "ell": 16, "xy": 16, "width": [16, 30, 32, 37, 41, 74], "height": [16, 74], "fill": [16, 27, 64, 73, 76], "gca": [16, 41], "add_artist": [16, 40, 47], "m_1": 16, "sigma_1": 16, "m_2": 16, "sigma_2": 16, "m_3": 16, "sigma_3": 16, "m_4": 16, "sigma_4": 16, "basi": 16, "nb_interp": 16, "bures_wasserstein_barycent": 16, "362": [16, 18, 97, 98], "plot_gaussian_barycent": [16, 18, 98], "saint": [17, 83, 95], "dizier": [17, 83, 95], "live": [17, 36, 71, 83, 95], "subspac": [17, 78, 83, 95, 96], "2105": [17, 83, 95], "09755": [17, 83, 95], "eloi": [17, 42, 72], "tangui": [17, 34, 42, 72, 82], "sub_sample_factor": 17, "i3": 17, "uu": 17, "vv": 17, "x_list": [17, 83], "im": [17, 24, 26, 41, 52], "a_list": [17, 83], "p1": [17, 22, 30, 32, 33, 37, 48], "p2": [17, 22, 30, 32, 33, 37, 48], "p3": [17, 30, 32, 37], "p_list": [17, 83], "n_samples_bari": [17, 83], "send": [17, 71], "visual": [17, 21, 27, 33, 40, 53, 54], "x_visu": 17, "xi": 17, "view_init": [17, 62], "azim": 17, "set_ztick": [17, 62], "generalized_free_support_barycent": 17, "elev": 17, "_init": 17, "init_func": 17, "frame": 17, "136": [17, 45, 59], "blit": 17, "58": [17, 18, 42, 59, 76, 83, 84, 95, 97, 98], "741": [17, 18, 45, 98], "plot_generalized_free_support_barycent": [17, 18, 98], "02": [18, 19, 25, 26, 28, 32, 34, 38, 43, 50, 51, 53, 59, 60, 63, 66, 69, 86, 98], "617": 18, "demo": [18, 39, 69, 77, 83, 93, 96, 98], "debias": [18, 39, 72, 74, 77, 93, 95, 96, 97, 98], "convolut": [18, 39, 72, 74, 95, 97, 98], "free": [18, 39, 70, 71, 72, 74, 83, 86, 95, 97, 98], "introduc": [19, 20, 21, 22, 23, 25, 27, 96, 97], "otda": [19, 22, 23, 28, 39, 76, 77, 93, 97, 98], "current": [19, 71, 73, 75, 76, 82, 85, 88, 90, 97], "stanisla": [19, 20, 21, 25, 26, 27, 72, 95], "chambon": [19, 20, 21, 25, 26, 27, 72, 95], "stan": [19, 20, 21, 25, 26, 27], "3gauss": [19, 21, 23, 27], "3gauss2": [19, 21, 23, 27], "ot_emd": [19, 20, 21, 23, 26, 52, 96], "da": [19, 20, 21, 22, 23, 24, 25, 26, 27, 72, 84, 96, 97], "emdtransport": [19, 20, 21, 23, 26, 96, 97], "ot_sinkhorn": [19, 20, 21, 22, 23, 26, 52], "sinkhorntransport": [19, 20, 21, 22, 23, 26, 27, 96], "ot_lpl1": [19, 21], "sinkhornlpl1transport": [19, 21, 96, 97], "reg_cl": [19, 21, 76], "1e0": [19, 21, 25, 26, 43], "l1l2": [19, 76], "ot_l1l2": 19, "sinkhornl1l2transport": [19, 96], "2e0": 19, "transp_xs_emd": [19, 20, 21, 23, 26], "transp_xs_sinkhorn": [19, 20, 21, 23, 26], "transp_xs_lpl1": [19, 21], "transp_xs_l1l2": 19, "763061e": 19, "000000e": [19, 25, 26, 31, 32, 34, 59], "081861e": 19, "689583e": 19, "681200e": 19, "862280e": 19, "179100e": 19, "195813e": 19, "821987e": 19, "211501e": 19, "029326e": 19, "808932e": 19, "216608e": 19, "305436e": 19, "792762e": 19, "019666e": 19, "617012e": 19, "785968e": 19, "804295e": 19, "794348e": 19, "778259e": 19, "335304e": 19, "709292e": 19, "772608e": 19, "187777e": 19, "650678e": 19, "768734e": 19, "190456e": 19, "874332e": 19, "768700e": 19, "876119e": 19, "318292e": 19, "767482e": 19, "894485e": 19, "04": [19, 25, 26, 31, 32, 34, 38, 50, 53, 59, 60, 98], "218588e": 19, "765491e": 19, "127725e": 19, "990989e": 19, "762434e": 19, "734384e": 19, "056738e": 19, "14": [19, 24, 26, 36, 42, 43, 46, 52, 59, 60, 66, 73, 76, 82, 84, 95, 96], "759833e": 19, "478250e": 19, "601472e": 19, "758374e": 19, "294698e": 19, "458518e": 19, "757601e": 19, "396351e": 19, "727032e": 19, "756624e": 19, "562652e": 19, "771489e": 19, "754377e": 19, "281229e": 19, "247758e": 19, "753747e": 19, "587988e": 19, "292424e": 19, "753162e": 19, "336538e": 19, "849492e": 19, "param_img": [19, 23], "coupling_": [19, 21, 22, 23, 27, 76], "nemdtransport": [19, 21, 23, 27], "nsinkhorntransport": [19, 21, 23, 27], "nsinkhornlpl1transport": [19, 21], "nsinkhornl1l2transport": 19, "transp": [19, 21, 23, 24, 27, 68], "265": [19, 28, 83, 95, 98], "plot_otda_class": [19, 28, 98], "present": [20, 25, 27, 67, 71], "transfer": [20, 96], "ferradan": [20, 26, 59, 76, 85, 95, 96], "papadaki": [20, 26, 59, 76, 85, 95, 96], "peyr": [20, 26], "aujol": [20, 26, 59, 76, 85, 95, 96], "2014": [20, 26, 59, 74, 76, 83, 85, 95, 96], "1853": [20, 26, 59, 76, 85, 95, 96], "1882": [20, 26, 59, 76, 85, 95, 96], "im2mat": [20, 24, 26, 35], "pixel": [20, 24, 35], "per": [20, 24, 26, 35, 54, 83, 90], "mat2im": [20, 24, 26], "back": [20, 24, 26, 71, 76, 84], "minmax": [20, 24, 26], "clip": [20, 24, 26, 73], "ocean_dai": [20, 24, 26], "jpg": [20, 24, 26], "256": [20, 24, 26], "ocean_sunset": [20, 24, 26], "idx1": [20, 26], "idx2": [20, 26], "ylabel": [20, 26, 31, 36, 41, 52, 61, 62, 68], "predict": [20, 42, 76, 82, 84], "out": [20, 25, 33, 76, 89], "transp_xt_emd": 20, "inverse_transform": [20, 24, 76, 96], "transp_xt_sinkhorn": 20, "i1t": [20, 24], "i2t": [20, 24], "416": [20, 28, 98], "plot_otda_color_imag": [20, 28, 98], "explicit": [21, 27, 70, 76, 93], "some": [21, 27, 66, 71, 72, 76, 83, 86, 93, 95, 96, 97], "quantiti": [21, 27, 36], "greater": [21, 27, 97], "coeffici": [21, 27, 36, 74, 75, 82, 83, 85, 88], "give": [21, 27, 52, 68, 71, 73, 82, 88, 97], "understand": [21, 27], "what": [21, 27, 70, 71, 96], "n_samples_sourc": [21, 27], "n_samples_target": [21, 27], "main": [21, 71, 83, 96, 97], "274": [21, 28, 97, 98], "plot_otda_d2": [21, 28, 98], "ievgen": [22, 23, 72, 74, 76, 95], "redko": [22, 23, 40, 47, 72, 74, 75, 76, 95], "st": [22, 23, 78], "etienn": [22, 23], "1985": 22, "dec1": 22, "dec2": 22, "pt": 22, "dect": 22, "ys1": 22, "2gauss_prop": 22, "bia": [22, 25, 26, 76, 80, 84], "ys2": 22, "all_xr": 22, "all_yr": 22, "plot_ax": 22, "dec": 22, "set1": 22, "2f": [22, 52], "85": [22, 59, 97], "046431138906241": 22, "129455496299416": 22, "print_g": 22, "jcpottransport": 22, "ws1": 22, "proportions_": [22, 76], "log_": [22, 76], "d2": [22, 40, 47], "ws2": 22, "prop": [22, 86], "err": [22, 32, 34, 53, 66], "069551e": 22, "h_re": 22, "1f": 22, "plot_otda_jcpot": [22, 28, 98], "ot_emd_laplac": 23, "emdlaplacetransport": 23, "reg_lap": [23, 76], "reg_src": [23, 76], "transp_xs_emd_laplac": 23, "498": 23, "runtimewarn": [23, 32, 34, 58, 65], "divid": [23, 32, 34, 52, 58, 65], "encount": [23, 32, 34, 58, 65], "ktransposeu": 23, "506": 23, "nemdlaplacetransport": 23, "312": [23, 28, 98], "plot_otda_laplacian": [23, 28, 98], "anglet": 24, "ae": 24, "empirical_bures_wasserstein_map": 24, "xst": 24, "agw": 24, "bgw": 24, "empirical_gaussian_gromov_wasserstein_map": 24, "xstgw": 24, "lineartransport": [24, 96], "lineargwtransport": 24, "xtsgw": 24, "i1tgw": 24, "i2tgw": 24, "invers": [24, 30, 32, 37, 67, 73, 76, 83, 88], "533": [24, 28, 97, 98], "plot_otda_linear_map": [24, 28, 98], "mappingtransport": [25, 26, 96], "perrot": [25, 26, 72, 76, 84, 95, 96], "habrard": [25, 26, 76, 84, 95, 96], "xs_new": 25, "ot_mapping_linear": [25, 26], "transp_xs_linear": 25, "transp_xs_linear_new": 25, "ot_mapping_gaussian": [25, 26], "transp_xs_gaussian": 25, "transp_xs_gaussian_new": 25, "delta": [25, 26, 47, 88], "190105e": 25, "170411e": 25, "700201e": 25, "169845e": 25, "356805e": 25, "169664e": 25, "344581e": 25, "169558e": 25, "549048e": 25, "169490e": 25, "619901e": 25, "169453e": 25, "982881e": 25, "208325e": 25, "153391e": 25, "305356e": 25, "150638e": 25, "628072e": 25, "149220e": 25, "416721e": 25, "148278e": 25, "270372e": 25, "147579e": 25, "685396e": 25, "147070e": 25, "226155e": 25, "146654e": 25, "002728e": 25, "146340e": 25, "575830e": 25, "146055e": 25, "889490e": 25, "145822e": 25, "605308e": 25, "bari": [25, 29, 45], "992": [25, 28, 98], "plot_otda_map": [25, 28, 98], "image_emd": 26, "image_sinkhorn": 26, "x1tl": 26, "image_mapping_linear": 26, "x1tn": 26, "image_mapping_gaussian": 26, "797245e": 26, "758014e": 26, "182822e": 26, "757026e": 26, "620752e": 26, "756521e": 26, "875691e": 26, "756218e": 26, "725224e": 26, "756015e": 26, "153553e": 26, "755868e": 26, "348118e": 26, "755759e": 26, "234582e": 26, "755673e": 26, "893582e": 26, "755604e": 26, "942771e": 26, "755547e": 26, "206000e": 26, "755500e": 26, "695056e": 26, "755460e": 26, "307154e": 26, "755426e": 26, "944208e": 26, "755395e": 26, "715960e": 26, "755369e": 26, "515613e": 26, "755345e": 26, "367864e": 26, "755324e": 26, "197885e": 26, "755305e": 26, "071067e": 26, "755303e": 26, "898122e": 26, "842001e": 26, "780145e": 26, "358084e": 26, "778490e": 26, "296544e": 26, "777841e": 26, "648247e": 26, "777495e": 26, "948923e": 26, "777284e": 26, "184075e": 26, "777135e": 26, "396988e": 26, "777027e": 26, "059322e": 26, "776945e": 26, "619816e": 26, "776880e": 26, "672789e": 26, "776827e": 26, "971430e": 26, "plot_otda_mapping_colors_imag": [26, 28, 98], "ot_sinkhorn_un": 27, "transp_xs_sinkhorn_un": 27, "ot_sinkhorn_semi": 27, "transp_xs_sinkhorn_semi": 27, "modifi": 27, "involv": [27, 71], "infinit": [27, 76], "daili": 27, "element": [27, 29, 52, 73, 74, 76, 82, 83, 88, 93], "recal": [27, 88], "cost_": [27, 76], "exhibit": [27, 76], "nunsupervis": 27, "nsemi": 27, "609": [27, 28, 98], "plot_otda_semi_supervis": [27, 28, 98], "147": [28, 59], "multi": [28, 39, 72, 73, 74, 76, 77, 83, 93, 95, 96, 97, 98], "shift": [28, 39, 74, 76, 77, 93, 95, 96, 97, 98], "laplacian": [28, 39, 72, 76, 77, 93, 95, 96, 98], "unsupervis": [28, 39, 76, 77, 93, 96, 98], "supervis": [28, 39, 74, 76, 77, 93, 95, 96, 97, 98], "networkx": [29, 30, 32, 33, 36, 37], "nx": [29, 33, 73, 82, 83, 85, 93, 97], "csgraph": 29, "shortest_path": 29, "mcol": 29, "fgw_barycent": [29, 82, 96, 97], "find_thresh": 29, "sup": 29, "trick": [29, 86, 96], "adequ": 29, "sai": 29, "connect": [29, 30, 32, 36, 37], "linesearch": [29, 82, 85, 97], "reconstruct": [29, 36, 82, 90, 97], "come": [29, 71, 84, 96, 97], "n_node": [29, 33, 36, 81], "begin": [29, 76, 83, 84, 88], "thresh": 29, "cprime": 29, "sp_to_adjac": 29, "sc": 29, "argmin": [29, 30, 32, 37, 42, 73, 76, 84], "threshinf": 29, "threshsup": 29, "minimum": [29, 73, 76, 82, 83, 85, 96, 97], "new": [29, 42, 73, 76, 84, 93, 96], "zeros_lik": 29, "fill_diagon": [29, 36], "build_noisy_circular_graph": 29, "with_nois": 29, "structure_nois": 29, "noisi": [29, 47], "add_nodes_from": 29, "add_nod": [29, 30, 32, 37], "attr_nam": 29, "add_edg": [29, 30, 32, 37], "randomint": 29, "graph_color": 29, "nx_graph": 29, "cnorm": 29, "cpick": 29, "scalarmapp": 29, "set_arrai": 29, "val_map": 29, "get_node_attribut": 29, "to_rgba": 29, "ad": [29, 30, 32, 47, 71, 73, 76, 80, 83, 86, 88, 93, 96, 97], "plot_barycenter_fgw": [29, 38, 98], "93": [29, 36, 59, 97], "deprecationwarn": 29, "extract": [29, 52, 73, 93], "singl": [29, 32, 35, 76, 82, 84, 95], "your": [29, 71, 95, 96], "oper": [29, 32, 34, 71, 76, 78, 80, 83, 84, 95, 96], "109": [29, 59], "po": [29, 30, 32, 33, 35, 37, 76], "kamada_kawai_layout": 29, "draw": 29, "node_color": [29, 30, 32, 33, 37], "with_label": [29, 33], "node_s": [29, 30, 32, 37], "indic": [29, 33, 41, 71, 73, 81, 83, 88, 93], "adjacency_matrix": 29, "todens": [29, 73], "sizebari": 29, "from_numpy_arrai": 29, "461": [29, 38, 98], "sr": [30, 37, 85], "g1": [30, 32, 37, 56], "g2": [30, 32, 37, 56], "reweigh": [30, 37], "srgw": [30, 37, 82], "These": [30, 37, 71], "endow": [30, 32, 37], "srfgw": [30, 37, 82], "cedvincentcuaz": [30, 32, 34, 37], "entropic_semirelaxed_gromov_wasserstein": [30, 82], "entropic_semirelaxed_fused_gromov_wasserstein": [30, 82], "commun": [30, 32, 36, 37, 70, 96], "stochastic_block_model": [30, 32, 36, 37], "n3": [30, 32, 37], "g3": [30, 32, 37], "to_numpy_arrai": [30, 32, 36, 37], "h3": [30, 32, 37], "edg": [30, 32, 33, 37, 81], "weight_intra_g2": [30, 32, 37], "weight_inter_g2": [30, 32, 37], "weight_intra_g3": [30, 32, 37], "weight_inter_g3": [30, 32, 37], "weightedg2": [30, 32, 37], "part_g2": [30, 32, 37], "weightedg3": [30, 32, 37], "part_g3": [30, 32, 37], "srgw_e": 30, "ot_23": [30, 37], "log_23": [30, 37], "srgw_23": [30, 37], "srgw_dist": [30, 37], "ot_32": [30, 37], "log_32": [30, 37], "srgw_32": [30, 37], "255": [30, 37], "06000000014822844": 30, "1577777782120945": 30, "adjust": [30, 32], "intens": [30, 32, 36], "proportionali": [30, 32], "sent": [30, 32, 96], "draw_graph": [30, 32, 37], "nodes_color_part": [30, 32, 37], "gweight": [30, 32, 37], "edge_color": [30, 32, 37], "shiftx": [30, 32, 37], "spring_layout": [30, 32, 33, 37], "alpha_edg": [30, 32, 37], "width_edg": [30, 32, 37], "draw_networkx_edg": [30, 32, 37], "visibl": [30, 32, 37, 97], "activ": [30, 32, 37, 73, 74, 88], "edgelist_activ": [30, 32, 37], "edgelist_deactiv": [30, 32, 37], "edgelist": [30, 32, 37], "draw_networkx_nod": [30, 32, 37], "nodelist": [30, 32, 33, 37], "scaled_gweight": [30, 32, 37], "nodes_s": [30, 32, 37], "draw_transp_colored_srgw": [30, 37], "part_g1": [30, 32, 37], "pos1": [30, 32, 37], "pos2": [30, 32, 37], "switchx": [30, 32, 37], "seed_g1": [30, 32, 37], "seed_g2": [30, 32, 37], "starting_color": [30, 32, 37], "partit": [30, 32, 37, 42, 76, 84], "part1": [30, 32, 37], "unique_color": [30, 32, 37], "uniqu": [30, 32, 37, 41, 73, 83, 96], "nodes_color_part1": [30, 32, 37], "nodes_color_part2": [30, 32, 37], "assign": [30, 32, 36, 37, 74, 75, 81, 82], "k1": [30, 32, 37], "max_tk1": [30, 32], "k2": [30, 32, 37], "seed_g3": [30, 32, 37], "121": [30, 33, 34, 37, 52, 59, 66, 97], "h_2": [30, 37, 82], "c_3": [30, 37, 84], "hbar2": [30, 37], "122": [30, 33, 34, 37, 52, 59, 66, 97], "hbar3": [30, 37], "h_3": [30, 37], "intra": [30, 32, 36, 37, 86], "fgw_alpha": [30, 37], "fgw_dist": [30, 32, 37, 82], "srfgw_e": 30, "srfgw_23": [30, 37], "srfgw_dist": [30, 37], "srfgw_32": [30, 37], "38089508056745364": 30, "0325729126416439": 30, "24125701598915783": 30, "f_2": [30, 37, 82], "f_3": [30, 37], "337": [30, 38, 97, 98], "plot_entropic_semirelaxed_fgw": [30, 38, 98], "sig": 31, "sig2": 31, "phi": [31, 42, 76, 83, 84, 88], "phi2": 31, "a_i": [31, 74, 83, 96], "b_j": [31, 74, 83, 96], "w1": [31, 78], "w2": [31, 58, 78], "got": 31, "l_x": 31, "l_y": 31, "gridspec": 31, "set_aspect": 31, "ax3": [31, 35, 66], "sharex": 31, "gwg": 31, "logw": 31, "reload_ext": 31, "wgw": 31, "734412e": 31, "508254e": 31, "875326e": 31, "226158e": 31, "189327e": 31, "456740e": 31, "189279e": 31, "622743e": 31, "552714e": 31, "0015342235565185547": 31, "683978e": 31, "860061e": 31, "134468e": 31, "239175e": 31, "182948e": 31, "682787e": 31, "677113e": 31, "visu": 31, "625": [31, 38, 98], "plot_fgw": [31, 38, 98], "attribut": [32, 73, 76, 82, 93, 97], "altern": [32, 52, 71, 82, 84, 96, 97], "63": [32, 59, 82, 95], "64": [32, 59, 82, 95, 97], "further": [32, 52, 70, 71, 97], "xu": [32, 34, 82, 95], "luo": [32, 34, 82, 95], "zha": [32, 34, 82, 95], "duke": [32, 34, 82, 95], "li": [32, 82, 95], "tang": [32, 82, 95], "kong": [32, 82, 95], "liu": [32, 82, 90, 95], "blanchet": [32, 82, 95], "ma": [32, 78, 82, 95, 96], "chu": [32, 82, 95], "wang": [32, 82, 95], "lin": [32, 82, 95], "zhao": [32, 82, 95], "zhu": [32, 82, 95], "mixup": [32, 82, 95], "level": [32, 34, 70, 74, 76, 77, 82, 93, 95, 96], "classif": [32, 38, 39, 77, 82, 95, 97, 98], "thirti": [32, 82, 95], "seventh": [32, 82, 95], "entropic_fused_gromov_wasserstein": [32, 82], "bapg_fused_gromov_wasserstein": [32, 82], "add": [32, 36, 66, 71, 83, 86, 93, 97], "start_cg": 32, "t_cg": 32, "log_cg": 32, "end_cg": 32, "time_cg": 32, "proxim": [32, 34, 82, 97], "start_ppa": 32, "t_ppa": 32, "log_ppa": 32, "ppa": [32, 34, 82, 97], "end_ppa": 32, "time_ppa": 32, "start_pgd": 32, "t_pgd": 32, "log_pgd": 32, "pgd": [32, 34, 82], "end_pgd": 32, "time_pgd": 32, "start_bapg": 32, "t_bapg": 32, "log_bapg": 32, "marginal_loss": [32, 82], "end_bapg": 32, "time_bapg": 32, "sparsiti": [32, 34, 36, 54, 82, 90, 95, 96, 97], "t_cg_sparsiti": 32, "t_ppa_spars": 32, "t_pgd_sparsiti": 32, "t_bapg_spars": 32, "tend": [32, 34, 52], "produc": [32, 34, 83], "feasibl": [32, 34, 83], "err_cg": 32, "err_ppa": 32, "err_pgd": 32, "err_bapg": 32, "271184e": 32, "211305e": 32, "640431e": 32, "059879e": 32, "024660e": 32, "637523e": 32, "866445e": 32, "936346e": 32, "243555e": 32, "831410e": 32, "891614e": 32, "149450e": 32, "473216e": 32, "854134e": 32, "724554e": 32, "747973e": 32, "850574e": 32, "244899e": 32, "559817e": 32, "841819e": 32, "279017e": 32, "755571e": 32, "819396e": 32, "870728e": 32, "242264e": 32, "784264e": 32, "283767e": 32, "513222e": 32, "772225e": 32, "191339e": 32, "203845e": 32, "764565e": [32, 59], "034974e": 32, "660790e": 32, "761179e": 32, "000610e": 32, "385291e": 32, "536990e": 32, "472502e": 32, "129779e": 32, "936118e": 32, "334121e": 32, "852583e": 32, "134797e": 32, "177453e": 32, "236970e": 32, "465712e": 32, "858590e": 32, "312306e": 32, "789776e": 32, "493878e": 32, "029873e": 32, "095678e": 32, "177744e": 32, "257392e": 32, "242762e": 32, "125684e": 32, "770321e": 32, "368455e": 32, "094853e": 32, "159374e": 32, "564338e": 32, "974174e": 32, "297098e": 32, "639787e": 32, "106686e": 32, "716049e": 32, "433353e": 32, "227167e": 32, "080617e": 32, "980812e": 32, "912468e": 32, "858901e": 32, "805235e": 32, "740559e": 32, "658655e": 32, "557834e": 32, "440242e": 32, "310793e": 32, "175881e": 32, "1135": [32, 34], "042086e": 32, "151311e": 32, "992882e": 32, "972309e": 32, "101506e": 32, "379844e": 32, "797194e": 32, "337741e": 32, "510": [32, 45, 51, 98], "984020e": 32, "520": [32, 97], "720212e": 32, "530": [32, 97], "534028e": 32, "540": 32, "417109e": 32, "550": 32, "364311e": 32, "560": 32, "372351e": 32, "570": [32, 97], "438312e": 32, "580": 32, "558368e": 32, "590": 32, "726958e": 32, "600": [32, 45], "936418e": 32, "610": 32, "176966e": 32, "620": 32, "436877e": 32, "630": 32, "702796e": 32, "640": 32, "960175e": 32, "650": 32, "193888e": 32, "660": 32, "389046e": 32, "670": 32, "531979e": 32, "680": 32, "611295e": 32, "690": 32, "618871e": 32, "700": [32, 45], "550627e": 32, "710": 32, "406954e": 32, "720": 32, "192695e": 32, "730": [32, 86, 95, 96], "916691e": 32, "740": 32, "590932e": 32, "750": 32, "229430e": 32, "760": 32, "846976e": 32, "770": 32, "457933e": 32, "780": 32, "075230e": 32, "790": 32, "709643e": 32, "369414e": 32, "810": [32, 45], "060184e": 32, "820": 32, "785186e": 32, "830": 32, "545590e": 32, "840": 32, "340916e": 32, "850": 32, "169442e": 32, "860": 32, "028566e": 32, "870": 32, "150926e": 32, "880": 32, "254840e": 32, "890": 32, "560795e": 32, "900": [32, 45], "033105e": 32, "910": 32, "638947e": 32, "920": 32, "349865e": 32, "930": 32, "142583e": 32, "940": 32, "999120e": 32, "950": 32, "906371e": 32, "960": 32, "855388e": 32, "970": 32, "840590e": 32, "980": 32, "859006e": 32, "990": 32, "909627e": 32, "981055e": 32, "110756e": 32, "139916e": 32, "158952e": 32, "159648e": 32, "159715e": 32, "159728e": 32, "159732e": 32, "159733e": 32, "710197e": 32, "722091e": 32, "141907e": 32, "705361e": 32, "217013e": 32, "780133e": 32, "754405e": 32, "618865e": 32, "155365e": 32, "467885e": 32, "234502e": 32, "427166e": 32, "580081e": 32, "480216e": 32, "016301e": 32, "489908e": 32, "527976e": 32, "724086e": 32, "505381e": 32, "890667e": 32, "660689e": 32, "596126e": 32, "580415e": 32, "573214e": 32, "554877e": 32, "506710e": 32, "413884e": 32, "273670e": 32, "099326e": 32, "144168e": 32, "415348e": 32, "942604e": 32, "761838e": 32, "844073e": 32, "135983e": 32, "585715e": 32, "152819e": 32, "808727e": 32, "533873e": 32, "314610e": 32, "140922e": 32, "004962e": 32, "001810e": 32, "208638e": 32, "619328e": 32, "189212e": 32, "880145e": 32, "660812e": 32, "506527e": 32, "398538e": 32, "323025e": 32, "270041e": 32, "232558e": 32, "205670e": 32, "185991e": 32, "171195e": 32, "159695e": 32, "150412e": 32, "142611e": 32, "135798e": 32, "129637e": 32, "123902e": 32, "118440e": 32, "113149e": 32, "107960e": 32, "102825e": 32, "097715e": 32, "092609e": 32, "087492e": 32, "082355e": 32, "077194e": 32, "072003e": 32, "066779e": 32, "061523e": 32, "056231e": 32, "050905e": 32, "045543e": 32, "040145e": 32, "034711e": 32, "029242e": 32, "023737e": 32, "018197e": 32, "012621e": 32, "007010e": 32, "001365e": 32, "995684e": 32, "989968e": 32, "984218e": 32, "978434e": 32, "972615e": 32, "966762e": 32, "960875e": 32, "954955e": 32, "949001e": 32, "943013e": 32, "936992e": 32, "930938e": 32, "924851e": 32, "918731e": 32, "912579e": 32, "37611793139330985": 32, "3671471715862439": 32, "21736592892258028": 32, "2576635020911173": 32, "proportionn": 32, "draw_transp_colored_gw": 32, "141": [32, 59, 83, 95, 97], "marg": 32, "runtim": 32, "142": [32, 59, 97], "143": [32, 59, 97], "144": [32, 59, 97], "bapg": [32, 97], "324": [32, 38, 98], "plot_fgw_solv": [32, 38, 98], "gnn": [33, 72, 95, 97], "templat": [33, 46, 72, 81, 95, 97], "52": [33, 41, 59, 78, 95, 97], "53": [33, 51, 59, 81, 95], "sonia": [33, 72], "mazelet": [33, 72], "en": [33, 96], "random_split": 33, "torch_geometr": 33, "loader": 33, "dataload": 33, "to_networkx": 33, "one_hot": 33, "stochastic_blockmodel_graph": 33, "graphdata": 33, "gcnconv": 33, "tfgwpool": [33, 81], "tsne": 33, "n_graph": [33, 81], "n_node_class": 33, "block_sizes1": 33, "block_sizes2": 33, "num_class": 33, "graphs1": 33, "edge_index": [33, 81], "graphs2": 33, "split": [33, 42, 78], "train_graph": 33, "test_graph": 33, "train_load": 33, "shuffl": [33, 41], "test_load": 33, "to_undirect": 33, "draw_networkx": 33, "tab": 33, "pooling_tfgw": 33, "n_templat": [33, 81], "n_template_nod": [33, 81], "n_class": [33, 76], "n_hidden_lay": 33, "feature_init_mean": [33, 81], "feature_init_std": [33, 81], "conv": 33, "x_latent": 33, "save": [33, 48, 74, 82], "latent": 33, "n_epoch": 33, "store": [33, 76, 93], "embeddings_for_tsn": 33, "weight_decai": 33, "0005": 33, "crossentropyloss": 33, "all_accuraci": 33, "all_loss": 33, "epoch": [33, 36, 82], "acc": 33, "latent_embed": 33, "pred": 33, "train_correct": 33, "train_acc": 33, "4f": 33, "accuraci": [33, 74], "test_acc": 33, "test_correct": 33, "hstack": [33, 43], "000": 33, "6519": 33, "5200": 33, "001": [33, 36, 56, 74, 76, 78, 84, 90], "6222": 33, "7400": 33, "002": 33, "5858": 33, "0000": 33, "003": 33, "5570": 33, "5235": 33, "9800": 33, "4945": 33, "9600": 33, "006": 33, "4596": 33, "007": [33, 47, 51, 98], "4248": 33, "008": 33, "3868": 33, "009": 33, "3455": 33, "010": 33, "3008": 33, "011": 33, "2525": 33, "012": 33, "2050": 33, "013": 33, "1598": 33, "014": 33, "1277": 33, "015": 33, "1046": 33, "016": 33, "0875": 33, "017": 33, "0725": 33, "018": [33, 46, 51, 54, 60, 98], "0554": 33, "019": [33, 58, 60, 98], "0355": 33, "020": 33, "0194": 33, "021": 33, "0095": 33, "022": 33, "0052": 33, "023": 33, "0047": 33, "024": 33, "0054": [33, 45], "tsne_embed": 33, "n_compon": [33, 35], "perplex": 33, "class_0": 33, "class_1": 33, "tsne_embeddings_0": 33, "tsne_embeddings_1": 33, "after": [33, 43, 45, 95], "931": [33, 38, 98], "plot_gnn_tfgw": [33, 38, 98], "compar": [34, 42, 52, 71, 76, 96], "Then": [34, 36, 58, 83, 96], "kerdoncuff": [34, 72, 82, 95, 96], "emonet": [34, 82, 95, 96], "marc": [34, 82, 95, 96], "mjl": [34, 95, 96], "erwan": [34, 35, 72], "vautier": [34, 35, 72], "lapost": 34, "net": 34, "sp": [34, 35, 45, 66, 86], "demonstr": [34, 66, 71, 97], "purpos": [34, 66, 96], "cov_": [34, 44, 55, 61, 66, 67, 68, 80], "cov_t": [34, 44, 55, 61, 66, 67, 68, 80], "make_2d_samples_gauss": [34, 44, 55, 61, 66, 67, 68], "sqrtm": [34, 66, 73], "gw0": 34, "log0": [34, 66], "entropic_gromov_wasserstein": [34, 82, 96], "gwe": 34, "loge": 34, "gw0_sparsiti": 34, "gw_sparsiti": 34, "gwe_spars": 34, "err0": 34, "131": [34, 59, 66], "algo": [34, 52, 74], "132": [34, 59, 66, 97], "nfeasibl": 34, "133": [34, 59, 66], "606056e": 34, "330020e": 34, "022552e": 34, "276036e": 34, "023674e": 34, "098033e": 34, "063453e": 34, "820952e": 34, "205038e": 34, "027228e": 34, "501837e": 34, "088545e": 34, "191147e": 34, "684324e": 34, "209223e": 34, "076331e": 34, "140465e": 34, "876462e": 34, "040056e": 34, "334508e": 34, "018997e": 34, "123553e": 34, "184445e": 34, "04501836901925051": 34, "037612941478320075": 34, "03823623173438275": 34, "pgw": 34, "plog": 34, "pointwise_gromov_wasserstein": [34, 82], "sgw": 34, "slog": [34, 74], "sampled_gromov_wasserstein": [34, 82], "pointwis": [34, 97], "gw_dist_estim": 34, "gw_dist_std": 34, "toarrai": [34, 73, 88], "18551015414186553": 34, "14981263716330115": 34, "0013724960658236956": 34, "496": [34, 38, 98], "plot_gromov": [34, 38, 98], "decomposit": 35, "pca": [35, 97], "smacof_md": 35, "3000": [35, 45], "stress": 35, "declar": 35, "npo": 35, "isometri": 35, "n_init": 35, "embedding_": 35, "nmd": 35, "init": [35, 45, 82, 97], "cross": 35, "triangl": 35, "star": 35, "lambdast": 35, "ct01": 35, "ct02": 35, "ct13": 35, "ct23": 35, "help": [35, 71, 83, 96, 97], "consist": [35, 71, 73, 74, 83, 84, 96], "rotat": [35, 52], "npost01": 35, "npost02": 35, "npost13": 35, "npost23": 35, "ax4": 35, "ax5": 35, "ax6": 35, "ax7": 35, "ax8": 35, "ax9": 35, "ax10": 35, "ax11": 35, "ax12": 35, "0x7fc3da0fe530": 35, "271": [35, 38, 45, 98], "plot_gromov_barycent": [35, 38, 98], "denot": [36, 52, 74, 76, 83, 84], "c_": [36, 52, 82], "p_": [36, 82], "combin": [36, 96], "sigma_d": 36, "sum_d": [36, 82], "vari": 36, "extens": [36, 95], "aforement": 36, "unattribut": 36, "uniformli": 36, "cedric": 36, "inria": [36, 41, 64, 65], "gromov_wasserstein_linear_unmix": [36, 82], "gromov_wasserstein_dictionary_learn": [36, 82], "fused_gromov_wasserstein_linear_unmix": [36, 82], "fused_gromov_wasserstein_dictionary_learn": [36, 82], "inter": 36, "nlabel": 36, "p_inter": 36, "p_intra": 36, "n_cluster": 36, "high": [36, 71, 83], "int32": 36, "idx_c": 36, "plot_gromov_wasserstein_dictionary_learn": [36, 38, 98], "promot": [36, 82, 96], "cdict_gw": 36, "learning_r": [36, 82], "nonnegative_symmetr": [36, 82], "tol_out": [36, 82], "tol_inn": [36, 82], "max_iter_out": [36, 82], "max_iter_inn": [36, 82], "use_log": [36, 82], "use_adam_optim": [36, 82], "loss_epoch": 36, "cumul": [36, 73], "928070954885737": 36, "528435380634622": 36, "481496257647932": 36, "7251645422089865": 36, "5896787585765": 36, "904249565820505": 36, "894474501829586": 36, "839762947251266": 36, "8357620167079265": 36, "57323879230497": 36, "shade": 36, "dark": [36, 97], "white": 36, "idx_atom": 36, "scaled_atom": 36, "reconstruction_error": 36, "cembed": [36, 82], "unmixings2d": 36, "extrem": 36, "linewidth": [36, 41, 48, 62], "876122061653427": 36, "hot": 36, "encod": [36, 76, 93], "dataset_featur": 36, "cdict_fgw": 36, "ydict_fgw": 36, "learning_rate_c": [36, 82], "learning_rate_i": [36, 82], "488307468700953": 36, "409377567767253": 36, "7999724972950055": 36, "590157056733561": 36, "8883324021076806": 36, "6222694197786383": 36, "638584123604814": 36, "537256942676492": 36, "4127469295470614": 36, "315769238894676": 36, "max_featur": 36, "min_featur": 36, "catom": 36, "fatom": 36, "scaled_f": 36, "yembed": [36, 82], "1390622525410854": 36, "763": [36, 38, 98], "semirelaxed_gromov_wasserstein": [37, 82], "semirelaxed_fused_gromov_wasserstein": [37, 82], "105007529006411": 37, "1622222222222223": 37, "38017836704293934": 37, "04004733478713954": 37, "24196480586404343": 37, "779": [37, 38, 98], "plot_semirelaxed_fgw": [37, 38, 98], "28": [38, 43, 59, 86, 88, 95, 96, 97], "986": 38, "tempat": [38, 39, 98], "comparison": [38, 39, 52, 59, 96, 98], "introduct": [39, 60, 96, 98], "row": [39, 51, 73, 74, 75, 82, 83, 88, 93, 98], "align": [39, 51, 70, 75, 76, 80, 83, 96, 98], "discrimin": [39, 51, 78, 95, 97, 98], "logo": [39, 51, 96, 97, 98], "toolbox": [39, 51, 72, 96, 97, 98], "brenier": [39, 51, 76, 84, 95, 96, 97, 98], "mmot": [39, 51, 77, 83, 96, 98], "compon": [39, 42, 51, 76, 78, 93, 95, 96, 97, 98], "auto_examples_python": 39, "auto_examples_jupyt": 39, "arbitrari": 40, "n_1": [40, 47], "d_1": [40, 47], "n_2": [40, 47], "d_2": [40, 47], "49": [40, 47, 59, 75, 95, 97], "quang": [40, 47], "hui": [40, 47], "tran": [40, 47], "connectionpatch": [40, 47], "coot": [40, 93], "co_optimal_transport": [40, 47], "co_optimal_transport2": [40, 47], "coot2": [40, 47], "d1": [40, 47], "pi_sampl": [40, 47, 75], "pi_featur": [40, 47, 75], "coot_dist": 40, "5f": 40, "yaxi": [40, 41, 47], "tick_right": [40, 47], "xaxi": [40, 47], "tick_top": [40, 47], "xya": [40, 47], "xyb": [40, 47], "con": [40, 47], "coordsa": [40, 47], "transdata": [40, 47], "coordsb": [40, 47], "10903416567681642": 40, "0987568083692249": 40, "09685398028260428": 40, "09685": 40, "407": [40, 51, 98], "plot_coot": [40, 51, 98], "colla": [41, 78, 95], "breloi": [41, 78, 95], "antoin": [41, 72, 90, 95], "make_blob": 41, "ticker": 41, "mticker": 41, "esp": 41, "cluster_std": 41, "x_y_lim": 41, "linestyl": [41, 58], "pi_": [41, 78, 84], "powernorm": 41, "aspect": [41, 96], "orient": [41, 70], "vertic": [41, 48], "shrink": [41, 52], "ticks_loc": 41, "get_ytick": 41, "tolist": 41, "set_major_loc": 41, "fixedloc": 41, "set_yticklabel": 41, "get_tick": 41, "tick_param": 41, "labels": 41, "class_": 41, "idx_min": 41, "idx_max": 41, "rect": 41, "rectangl": 41, "add_patch": 41, "_n": [41, 74], "x_label": 41, "534": [41, 51, 98], "plot_ewca": [41, 51, 98], "ssnb": [42, 76, 84, 97], "varphi": [42, 76, 84], "lipschitz": [42, 76, 84, 96], "nabla": [42, 76, 83, 84, 90], "approx": [42, 76, 84], "ambient": [42, 76, 93], "impos": [42, 76], "global": [42, 76, 93, 97], "unit": [42, 89, 96], "mu_x": [42, 47], "sign": [42, 46, 73, 76, 80], "wish": [42, 71], "style": 42, "lbrace": 42, "rbrace": 42, "well": [42, 71, 73, 83, 84, 93, 96], "particular": [42, 97], "varphi_l": [42, 84], "varphi_u": [42, 84], "59": [42, 59, 76, 80, 83, 84, 95, 96, 97], "theorem": [42, 76, 80, 84, 96], "sens": [42, 52, 74, 83, 95, 96], "definit": [42, 73, 96], "e_k": [42, 76, 84], "optimis": [42, 76, 84], "amount": [42, 83, 86, 96, 97], "few": [42, 52, 97], "sinc": [42, 83, 96, 97], "quit": [42, 96, 97], "computation": 42, "expens": 42, "cvxpy": [42, 76, 84], "fran\u00e7oi": [42, 76, 84], "pierr": [42, 76, 84], "pati": [42, 76, 84, 95], "alexandr": [42, 72, 76, 84, 95], "aspremont": [42, 76, 84, 95], "page": [42, 71, 76, 84, 95, 97], "1222": [42, 76, 84, 95], "1232": [42, 76, 84, 95], "adrien": [42, 61, 72, 76, 84, 95], "taylor": [42, 76, 84, 95], "phd": [42, 76, 84, 95], "thesi": [42, 76, 84, 95], "cathol": [42, 76, 84, 95], "univers": [42, 76, 84, 95], "louvain": [42, 76, 84, 95], "la": [42, 76, 84, 95], "neuv": [42, 76, 84, 95], "belgium": [42, 76, 84, 95], "n_fitting_sampl": 42, "xs_class": 42, "dodgerblu": 42, "nearest_brenier_potential_fit": [42, 76], "init_method": [42, 84], "gradient_lipschitz_const": [42, 76, 84], "n_predict_sampl": 42, "ys_class": 42, "phi_lu": [42, 84], "g_lu": [42, 76, 84], "nearest_brenier_potential_predict_bound": [42, 76], "55": [42, 51, 59, 83, 95, 97, 98], "696": [42, 51, 98], "plot_ssnb": [42, 51, 98], "wda": [43, 72, 97], "fda": [43, 96], "floor": [43, 73], "nbnois": 43, "pfda": 43, "projfda": 43, "maxit": [43, 74, 78], "p0": [43, 78], "pwda": 43, "projwda": 43, "3042776946697494e": 43, "65147154e": 43, "4401037686381040e": 43, "16760501e": 43, "2234351238819928e": 43, "30555049e": 43, "2169879996364462e": 43, "39115407e": 43, "1924746118060602e": 43, "25387848e": 43, "1177409528990749e": 43, "70993539e": 43, "0862213476139048e": 43, "52716830e": 43, "0747229322240269e": 43, "34923131e": 43, "0678766065261684e": 43, "74029183e": 43, "0621337155459647e": 43, "03651803e": 43, "0577080390746939e": 43, "59605592e": 43, "0543140912472148e": 43, "28883715e": 43, "0470236926310577e": 43, "47528039e": 43, "0445628467498224e": 43, "03183254e": 43, "0364189455866245e": 43, "31006504e": 43, "0303977563823823e": 43, "39885352e": 43, "0301476238242911e": 43, "17467624e": 43, "0292344306414324e": 43, "79959907e": 43, "0271888325518124e": 43, "94408237e": 43, "0183214741002155e": 43, "98322994e": 43, "9762636217090053e": 43, "03196875e": 43, "8225627240876070e": 43, "36012863e": 43, "0855506616050116e": 43, "92702943e": 43, "8001027160864295e": 43, "01920255e": 43, "3687486090807947e": 43, "01780640e": 43, "3431203993360381e": 43, "23716793e": 43, "3118645266923005e": 43, "90753137e": 43, "3067593392325469e": 43, "02767925e": 43, "3064856262240019e": 43, "07925279e": 43, "3060699763593800e": 43, "95215754e": 43, "3060442760754873e": 43, "77368118e": 43, "3060442709529139e": 43, "34108449e": 43, "3060442708435561e": 43, "52599061e": 43, "3060442707674844e": 43, "07742368e": 43, "3060442707600512e": 43, "36125504e": 43, "termin": 43, "reach": [43, 97], "xsp": 43, "xtp": 43, "xspw": 43, "xtpw": 43, "090": [43, 51, 98], "plot_wda": [43, 51, 98], "xr": [44, 46, 55, 56, 61], "gweak": 44, "181": [44, 51, 59, 97, 98], "plot_weakot_vs_ot": [44, 51, 98], "quickli": [45, 52, 71, 97], "qualiti": [45, 97], "primal": [45, 83, 91], "ronak": [45, 72, 83, 95], "mehta": [45, 72, 83, 95], "ronakrm": 45, "wisc": 45, "xizheng": [45, 72], "yu": [45, 72], "xyu354": 45, "0x7fc3b94a2bf0": 45, "l2_bari": 45, "lp_bari": 45, "lp_log": 45, "interior": [45, 83, 96], "fun": [45, 52, 93], "dmmot_monge_1dgrid_optim": [45, 83], "4000": 45, "lr_init": [45, 83], "lr_decai": [45, 83], "997": 45, "dmmot_obj": 45, "optimizewarn": 45, "detect": [45, 73, 96], "sol": 45, "linprog": [45, 96], "a_eq": 45, "b_eq": 45, "237": 45, "63326573371887": 45, "999774740910517": 45, "9995": 45, "gradnorm": 45, "739": 45, "7831": 45, "0914": 45, "6322": 45, "0583": 45, "434": 45, "3777": 45, "4220": 45, "252": 45, "9269": 45, "2317": 45, "168": [45, 59], "8668": 45, "2116": 45, "2968": 45, "1755": 45, "647": 45, "6758": 45, "1343": 45, "786": 45, "2442": 45, "1021": 45, "3703": 45, "0662": 45, "0539": 45, "7304": 45, "1100": 45, "0348": 45, "621": 45, "4660": 45, "1200": 45, "0338": 45, "764": 45, "3429": 45, "1300": 45, "0200": 45, "556": [45, 97], "2338": 45, "1400": 45, "0182": 45, "765": 45, "8329": 45, "1500": 45, "0103": 45, "579": 45, "8241": 45, "1600": 45, "0075": 45, "638": [45, 63, 68, 69, 98], "2570": 45, "1700": 45, "0045": 45, "1562": 45, "1800": 45, "0035": 45, "479": 45, "8625": 45, "1900": 45, "0032": 45, "1939": 45, "0022": 45, "442": 45, "4975": 45, "2100": 45, "0015": 45, "61": [45, 59, 95], "0901": 45, "2200": 45, "0016": 45, "464": 45, "9430": 45, "2300": [45, 95, 96], "0014": 45, "382": 45, "5650": 45, "2400": 45, "0011": 45, "287": [45, 97], "2281": 45, "2500": 45, "355": 45, "6796": 45, "2600": 45, "0010": 45, "1357": 45, "2700": 45, "289": 45, "6964": 45, "2800": 45, "184": [45, 59, 97], "4234": 45, "2900": 45, "0009": 45, "246": 45, "5847": 45, "65": [45, 59, 66], "3299": 45, "3100": 45, "9355": 45, "3200": 45, "263": [45, 83], "0209": 45, "3300": 45, "3132": 45, "3400": 45, "231": [45, 97], "4044": 45, "3500": 45, "226": 45, "3184": 45, "3600": 45, "211": 45, "4237": 45, "3700": 45, "233": 45, "2981": 45, "3800": 45, "299": 45, "0853": 45, "3900": 45, "262": [45, 97], "4271": 45, "191504001617432": 45, "0008940778156514197": 45, "dmmot": 45, "0x7fc3b94a2950": 45, "pseudorandom": 45, "vecsiz": [45, 83], "artist": 45, "put": [45, 58], "whose": [45, 75, 80, 82, 83, 88], "underscor": 45, "argument": [45, 73, 76, 84, 85, 93, 97], "0x7fc3db94e710": 45, "bary_log": 45, "1964": 45, "284": [45, 97], "3413": 45, "9858": 45, "3320": 45, "2204": 45, "7755": 45, "156": [45, 59, 97], "3650": 45, "4874": 45, "229": [45, 83], "6258": 45, "3684": 45, "238": [45, 97], "1008": 45, "3353": 45, "3034": 45, "2220": 45, "267": [45, 97], "4771": 45, "1678": 45, "1315": 45, "0706": 45, "7241": 45, "0567": 45, "269": 45, "5960": 45, "0420": 45, "8386": 45, "0345": 45, "8676": 45, "0230": 45, "8679": 45, "0145": 45, "217": [45, 97], "0122": 45, "244": 45, "9326": 45, "0089": 45, "207": [45, 97], "8076": 45, "0064": 45, "3682": 45, "208": [45, 97], "5713": 45, "0042": 45, "196": [45, 59], "3110": 45, "189": [45, 59, 97], "1930": 45, "0028": 45, "152": [45, 59], "9444": 45, "0025": 45, "154": [45, 59], "9903": 45, "0023": 45, "165": [45, 59], "5778": 45, "0020": 45, "162": [45, 59], "6161": 45, "0019": 45, "148": [45, 59, 97], "9564": 45, "0018": 45, "7780": 45, "0017": 45, "8478": 45, "145": [45, 59, 65, 97], "0931": 45, "128": [45, 59, 76, 83, 95], "1718": 45, "0x7fc3d870cfa0": 45, "plot_dmmot": [45, 51, 98], "og": 46, "plot_factored_coupl": [46, 51, 98], "mu_i": [47, 80, 96], "clean": [47, 97], "y_": [47, 76, 82], "contamin": 47, "outlier": 47, "intuit": [47, 71], "182": [47, 59], "y_noisi": 47, "nrow": 47, "ncol": 47, "wy_samp": [47, 75], "07507868": 47, "08001347": 47, "09469872": 47, "1001999": 47, "10001527": 47, "10001687": 47, "09999904": 47, "09979829": 47, "11466591": 47, "13551386": 47, "clearli": [47, 96], "complet": [47, 71, 96, 97], "successfulli": 47, "010389716046318498": 47, "plot_learning_weights_with_coot": [47, 51, 98], "letter": 48, "o1": 48, "o2": 48, "translat": 48, "t1": 48, "t2": [48, 67, 88], "horizont": 48, "sx": 48, "sy": [48, 71], "markerfacecolor": 48, "markeredgecolor": 48, "savefig": 48, "svg": 48, "dpi": 48, "transpar": 48, "bbox_inch": 48, "tight": 48, "43": [48, 59, 74, 76, 80, 83, 95, 96, 97], "375": [48, 97], "darkgrai": 48, "logo_dark": 48, "054": [48, 51, 98], "plot_logo": [48, 51, 98], "b\u00e9rar": [49, 74, 95, 96], "mokhtar": [49, 72, 95], "mokhtarzahdi": 49, "plot1d_mat": [49, 50, 53, 54, 59, 64], "lambd": [49, 53, 54, 55], "ns_budget": [49, 74], "budget": [49, 74], "kept": [49, 74, 97], "nt_budget": [49, 74], "g_screen": 49, "restrict": [49, 74], "_screenkhorn": 49, "bottleneck": [49, 74], "instal": [49, 71, 74, 83, 96, 97], "pypi": [49, 74, 95, 97], "020986042861303855": 49, "kappa": [49, 74], "7476531411890917": 49, "cardin": [49, 74, 93], "isel": 49, "jsel": 49, "325": [49, 51, 98], "plot_screenkhorn_1d": [49, 51, 98], "librari": [50, 72, 76, 84, 95, 96, 97], "bach": [50, 91, 95, 96], "bhushan": [50, 91, 95, 96], "damodaran": [50, 91, 95, 96], "kilian": [50, 55, 72, 95], "n_sourc": [50, 91], "n_target": [50, 57, 91], "x_sourc": 50, "y_target": 50, "sag": [50, 91], "sag_pi": 50, "solve_semi_dual_entrop": 50, "55553509e": 50, "96395660e": 50, "76579142e": 50, "31178196e": 50, "21640234e": 50, "25357448e": 50, "30225078e": 50, "37891338e": 50, "56123975e": 50, "61451746e": 50, "31505947e": 50, "33831456e": 50, "61515202e": 50, "34246014e": 50, "28734709e": 50, "07550428e": 50, "85500870e": 50, "52288517e": 50, "08262628e": 50, "21423583e": 50, "16904253e": 50, "03825797e": 50, "87178503e": 50, "18391107e": 50, "15462212e": 50, "65987989e": 50, "23177216e": 50, "39440107e": 50, "semicontinu": 50, "asgd": [50, 91], "asgd_pi": 50, "log_asgd": 50, "beta": [50, 74, 83, 90, 91, 97], "87919564": 50, "64972912": 50, "90370867": 50, "65425719": 50, "46885467": 50, "30171991": 50, "77560865": 50, "50927934": 50, "40235686": 50, "91006054": 50, "82169674": 50, "44871332e": 50, "00795848e": 50, "75697554e": 50, "40659699e": 50, "20593540e": 50, "31205385e": 50, "34063837e": 50, "80242597e": 50, "40238837e": 50, "68032820e": 50, "26513361e": 50, "36373920e": 50, "52546195e": 50, "40772739e": 50, "31054753e": 50, "19774150e": 50, "29902872e": 50, "49410422e": 50, "06078986e": 50, "22200805e": 50, "05396464e": 50, "03575289e": 50, "84056467e": 50, "19573357e": 50, "02994053e": 50, "72385417e": 50, "28420336e": 50, "47716225e": 50, "sinkhorn_pi": 50, "55553508e": 50, "96395661e": 50, "31178193e": 50, "30225079e": 50, "37891333e": 50, "56123974e": 50, "33831455e": 50, "61515201e": 50, "07550425e": 50, "85500876e": 50, "52288523e": 50, "08262629e": 50, "16904255e": 50, "03825804e": 50, "87178504e": 50, "23177217e": 50, "39440105e": 50, "sgd": [50, 82, 91], "sgd_dual_pi": 50, "log_sgd": 50, "solve_dual_entrop": 50, "92075753": 50, "80864372": 50, "07370578": 50, "0179414": 50, "60239916": 50, "8141425": 50, "11122763": 50, "346688": 50, "47228889": 50, "57636303": 50, "9534778": 50, "21021974e": 50, "26940978e": 50, "09590373e": 50, "59858662e": 50, "65652588e": 50, "83627521e": 50, "27260904e": 50, "58648690e": 50, "49188637e": 50, "03096858e": 50, "44340331e": 50, "37764488e": 50, "14582303e": 50, "32484188e": 50, "15372556e": 50, "26187284e": 50, "79941580e": 50, "58297483e": 50, "36009581e": 50, "15632652e": 50, "07006729e": 50, "61709962e": 50, "99740394e": 50, "13377026e": 50, "88094057e": 50, "36124884e": 50, "09671824e": 50, "24045368e": 50, "161": [50, 51, 59, 98], "plot_stochast": [50, 51, 98], "985": 51, "aureli": 52, "boisbunon": [52, 95], "pip": [52, 71, 96, 97], "conda": [52, 96], "forg": [52, 96], "alwai": [52, 71, 76, 96, 97], "document": [52, 72, 73, 95, 96, 97], "pythonot": [52, 73, 95, 97], "github": [52, 71, 73, 90, 93, 95, 96, 97], "io": [52, 95, 97], "Or": 52, "inlin": 52, "caf\u00e9": 52, "croissant": 52, "manhattan": 52, "quick": [52, 95, 97], "googl": 52, "fiction": 52, "product": [52, 73, 76, 80, 88, 93, 96], "sale": 52, "bakery_po": 52, "bakery_prod": 52, "describ": [52, 71, 74, 82], "sold": 52, "cafe_po": 52, "cafe_prod": 52, "imap": 52, "shop": 52, "npz": 52, "cafe": 52, "89": [52, 59, 76, 97], "73": [52, 59], "88": [52, 59, 97], "92": [52, 59, 97], "91": [52, 59, 97], "441": [52, 74, 83, 95], "next": [52, 82, 83, 88, 96, 97], "ec": 52, "thing": 52, "fontweight": 52, "bold": 52, "va": 52, "coolwarm": 52, "cbar": 52, "use_gridspec": 52, "cell": 52, "awai": 52, "thu": [52, 93], "costli": 52, "while": [52, 82, 83, 84, 96, 97], "time_emd": 52, "section": [52, 96, 97], "good": [52, 70, 71, 96], "plane": 52, "easili": [52, 83, 96], "interpret": 52, "10838179": 52, "pseudo": 52, "oslash": 52, "wise": [52, 73, 93, 96], "divis": [52, 76], "Be": [52, 73], "care": [52, 73], "nit": 52, "ot_sink_algo": 52, "atleast_2d": 52, "equival": [52, 53, 76, 80, 82, 84, 86], "diag": [52, 73, 74, 93, 96], "2g": 52, "0008": 52, "notic": 52, "deliv": 52, "fraction": 52, "reg_paramet": 52, "logspac": [52, 58, 61, 62, 67], "w_sinkhorn_reg": 52, "time_sinkhorn_reg": 52, "max_ot": 52, "seri": 52, "someth": [52, 71], "although": [52, 83], "972222222222223": 52, "impact": [52, 96], "higher": [52, 82, 90], "much": [52, 71, 74], "littl": [52, 83], "414": [52, 60, 98], "plot_intro_ot": [52, 60, 98], "0x7fc3dbcc51e0": 53, "861463e": 53, "860154e": 53, "144529e": 53, "130143e": 53, "178815e": 53, "426078e": 53, "661047e": 53, "233110e": 53, "338932e": 53, "776627e": 53, "293340e": 53, "235791e": 53, "637176e": 53, "740051e": 53, "529356e": 53, "450071e": 53, "193632e": 53, "449812e": 53, "294505e": 53, "857493e": 53, "822723e": 53, "614": [53, 60, 98], "plot_ot_1d": [53, 60, 98], "constrain": [54, 76, 90, 95, 96, 97], "togeth": 54, "0x7fc3dbb477f0": 54, "gsm": 54, "smooth_ot_du": [54, 96], "max_nz": [54, 90, 93], "entri": [54, 73, 83], "permit": 54, "gsc": 54, "sparsity_constrain": [54, 90], "plot_ot_1d_smooth": [54, 60, 98], "empirical_sinkhorn": [55, 74, 96], "059": [55, 60, 98], "plot_ot_2d_sampl": [55, 60, 98], "stole": 56, "idea": [56, 83, 96], "pdf": [56, 58, 71, 96], "1706": 56, "07650": 56, "strictli": [56, 83, 96], "mp": 56, "l1": [56, 75], "gp": 56, "xtot": 56, "203": [56, 60, 97, 98], "plot_ot_l1_vs_l2": [56, 60, 98], "lst_m": 57, "d_emd": 57, "d_emd2": 57, "d_tv": 57, "0x7fc3d8a3fc70": 57, "d_sinkhorn": 57, "d_sinkhorn2": 57, "636": [57, 60, 95, 98], "plot_compute_emd": [57, 60, 98], "special": [58, 73], "pdf_von_mis": 58, "endpoint": 58, "mu1": 58, "kappa1": 58, "mu_target": 58, "pdf1": 58, "pdf_t": 58, "mu2": 58, "kappa2": 58, "vonmis": 58, "0x7fc3d9e77640": 58, "period": 58, "attain": [58, 86], "antipod": 58, "contrari": 58, "n_try": 58, "deal": [58, 86], "xts2": 58, "l_w2_circl": 58, "l_w2": 58, "w2_circl": 58, "m_w2_circl": 58, "std_w2_circl": 58, "m_w2": 58, "std_w2": 58, "fill_between": [58, 61, 62], "vline": 58, "ymin": 58, "ymax": 58, "733": 58, "tc": 58, "mask_end": 58, "ctp": 58, "ctm": 58, "dcptm": 58, "dcmtp": 58, "invalid": [58, 65], "vm": 58, "plot_compute_wasserstein_circl": [58, 60, 98], "df": [59, 85, 96], "gl2": 59, "frob": 59, "760578e": 59, "669467e": 59, "457501e": 59, "111116e": 59, "665639e": 59, "298130e": 59, "827855e": 59, "664378e": 59, "572776e": 59, "260396e": 59, "664077e": 59, "811855e": 59, "015066e": 59, "663912e": 59, "936787e": 59, "653393e": 59, "663852e": 59, "555826e": 59, "916369e": 59, "663814e": 59, "305693e": 59, "836245e": 59, "663785e": 59, "760450e": 59, "929009e": 59, "663767e": 59, "078011e": 59, "793559e": 59, "663751e": 59, "525192e": 59, "584755e": 59, "663737e": 59, "396466e": 59, "396951e": 59, "663727e": 59, "086938e": 59, "012700e": 59, "663720e": 59, "042609e": 59, "725769e": 59, "663713e": 59, "160914e": 59, "922568e": 59, "663707e": 59, "823502e": 59, "361187e": 59, "663702e": 59, "022440e": 59, "028438e": 59, "663697e": 59, "181249e": 59, "292634e": 59, "663692e": 59, "698532e": 59, "489527e": 59, "663687e": 59, "258253e": 59, "420712e": 59, "663682e": 59, "741118e": 59, "560349e": 59, "663678e": 59, "624135e": 59, "365715e": 59, "663673e": 59, "645179e": 59, "400714e": 59, "663670e": 59, "957237e": 59, "256196e": 59, "663666e": 59, "261541e": 59, "762450e": 59, "663663e": 59, "851305e": 59, "079948e": 59, "663660e": 59, "942296e": 59, "231320e": 59, "663657e": 59, "092896e": 59, "481860e": 59, "663653e": 59, "924361e": 59, "201470e": 59, "663651e": 59, "625455e": 59, "704189e": 59, "663648e": 59, "641123e": 59, "730250e": 59, "663645e": 59, "566666e": 59, "606377e": 59, "663643e": 59, "338514e": 59, "226810e": 59, "663641e": 59, "222711e": 59, "034152e": 59, "663639e": 59, "221805e": 59, "032642e": 59, "663637e": 59, "440781e": 59, "396935e": 59, "663634e": 59, "520091e": 59, "528875e": 59, "663632e": 59, "288193e": 59, "143080e": 59, "663630e": 59, "123055e": 59, "868347e": 59, "663628e": 59, "024487e": 59, "704365e": 59, "663627e": 59, "079606e": 59, "796061e": 59, "663625e": 59, "172093e": 59, "949922e": 59, "663623e": 59, "047880e": 59, "743277e": 59, "663621e": 59, "010577e": 59, "681217e": 59, "663619e": 59, "064438e": 59, "770820e": 59, "663618e": 59, "882375e": 59, "644049e": 59, "663616e": 59, "532647e": 59, "419505e": 59, "663615e": 59, "930189e": 59, "652001e": 59, "663613e": 59, "728955e": 59, "452161e": 59, "663612e": 59, "524214e": 59, "584459e": 59, "663610e": 59, "088418e": 59, "511958e": 59, "663609e": 59, "639430e": 59, "270902e": 59, "663608e": 59, "662611e": 59, "108397e": 59, "663607e": 59, "133700e": 59, "186767e": 59, "54": [59, 81, 95], "663605e": 59, "648141e": 59, "272349e": 59, "663604e": 59, "557516e": 59, "090911e": 59, "56": [59, 83, 95, 97], "663603e": 59, "304213e": 59, "215131e": 59, "663602e": 59, "353809e": 59, "057021e": 59, "663601e": 59, "968279e": 59, "325603e": 59, "663600e": 59, "367159e": 59, "059240e": 59, "663599e": 59, "610790e": 59, "334102e": 59, "663598e": 59, "787466e": 59, "628015e": 59, "62": [59, 82, 95, 97], "663596e": 59, "937777e": 59, "154166e": 59, "599432e": 59, "315190e": 59, "663595e": 59, "813048e": 59, "670555e": 59, "663594e": 59, "724600e": 59, "523409e": 59, "66": [59, 66, 74, 95, 96, 97], "663593e": 59, "081892e": 59, "011779e": 59, "67": [59, 97], "663592e": 59, "948732e": 59, "896260e": 59, "68": 59, "663591e": 59, "941833e": 59, "221188e": 59, "69": [59, 86], "663590e": 59, "213739e": 59, "673523e": 59, "663589e": 59, "127355e": 59, "529811e": 59, "71": 59, "663588e": 59, "349251e": 59, "235363e": 59, "72": [59, 97], "007084e": 59, "329722e": 59, "663587e": 59, "880265e": 59, "118744e": 59, "74": 59, "663586e": 59, "931950e": 59, "204723e": 59, "663585e": 59, "981309e": 59, "286832e": 59, "76": [59, 97], "663584e": 59, "952959e": 59, "576082e": 59, "77": 59, "544857e": 59, "560750e": 59, "78": [59, 95], "663583e": 59, "237579e": 59, "049564e": 59, "79": [59, 92, 97], "663582e": 59, "382386e": 59, "290460e": 59, "646051e": 59, "065503e": 59, "663581e": 59, "197994e": 59, "983702e": 59, "663580e": 59, "072764e": 59, "775370e": 59, "83": 59, "994645e": 59, "645410e": 59, "84": [59, 97], "663579e": 59, "842721e": 59, "056248e": 59, "663578e": 59, "276486e": 59, "450691e": 59, "86": [59, 97], "737346e": 59, "217366e": 59, "87": [59, 86, 97], "663577e": 59, "282043e": 59, "123508e": 59, "663576e": 59, "020937e": 59, "689135e": 59, "431951e": 59, "709310e": 59, "663575e": 59, "052335e": 59, "077789e": 59, "500538e": 59, "823407e": 59, "663574e": 59, "063176e": 59, "095821e": 59, "663573e": 59, "576367e": 59, "949549e": 59, "94": 59, "224681e": 59, "364492e": 59, "663572e": 59, "673221e": 59, "110670e": 59, "96": 59, "635561e": 59, "048017e": 59, "97": 59, "663571e": 59, "527236e": 59, "867807e": 59, "98": [59, 86], "788548e": 59, "638946e": 59, "663570e": 59, "727141e": 59, "536791e": 59, "127278e": 59, "202445e": 59, "101": 59, "663569e": 59, "637504e": 59, "387670e": 59, "102": 59, "922750e": 59, "862195e": 59, "663568e": 59, "076454e": 59, "117891e": 59, "104": 59, "911509e": 59, "843492e": 59, "105": 59, "663567e": 59, "403398e": 59, "998215e": 59, "106": [59, 97], "439790e": 59, "058755e": 59, "107": [59, 97], "634542e": 59, "382735e": 59, "663566e": 59, "452203e": 59, "079401e": 59, "852991e": 59, "746137e": 59, "663565e": 59, "165490e": 59, "602434e": 59, "450250e": 59, "076149e": 59, "112": 59, "663564e": 59, "685294e": 59, "467159e": 59, "113": [59, 97], "821800e": 59, "694245e": 59, "114": [59, 97], "237390e": 59, "722040e": 59, "115": 59, "663563e": 59, "992842e": 59, "315219e": 59, "116": [59, 97], "166739e": 59, "604506e": 59, "117": 59, "086064e": 59, "470297e": 59, "118": [59, 97], "663562e": 59, "435945e": 59, "052346e": 59, "292497e": 59, "813711e": 59, "663561e": 59, "366209e": 59, "936334e": 59, "138746e": 59, "557935e": 59, "009637e": 59, "343153e": 59, "123": [59, 65], "663560e": 59, "386258e": 59, "969683e": 59, "124": [59, 97], "927442e": 59, "206415e": 59, "081681e": 59, "463000e": 59, "126": [59, 97], "663559e": 59, "759123e": 59, "926406e": 59, "127": [59, 97], "890771e": 59, "145409e": 59, "971315e": 59, "279398e": 59, "129": 59, "663558e": 59, "101983e": 59, "496771e": 59, "035645e": 59, "386414e": 59, "984492e": 59, "301317e": 59, "663557e": 59, "849064e": 59, "076024e": 59, "795703e": 59, "987255e": 59, "134": [59, 97], "624087e": 59, "701762e": 59, "135": 59, "689557e": 59, "810673e": 59, "663556e": 59, "644308e": 59, "735399e": 59, "137": [59, 97], "618007e": 59, "691644e": 59, "138": [59, 97], "483013e": 59, "467075e": 59, "139": [59, 97], "663555e": 59, "708771e": 59, "842636e": 59, "013847e": 59, "350146e": 59, "721217e": 59, "863339e": 59, "663554e": 59, "027911e": 59, "373540e": 59, "935449e": 59, "677151e": 59, "790030e": 59, "351982e": 59, "249094e": 59, "146": [59, 97], "663553e": 59, "423360e": 59, "367836e": 59, "541112e": 59, "563722e": 59, "491601e": 59, "481358e": 59, "149": 59, "466407e": 59, "439446e": 59, "663552e": 59, "801524e": 59, "996929e": 59, "151": 59, "714107e": 59, "851507e": 59, "491257e": 59, "480784e": 59, "153": 59, "513799e": 59, "518282e": 59, "663551e": 59, "354539e": 59, "253345e": 59, "155": [59, 97], "233818e": 59, "052519e": 59, "576219e": 59, "622121e": 59, "157": [59, 97], "452791e": 59, "416792e": 59, "663550e": 59, "262867e": 59, "100843e": 59, "316379e": 59, "189863e": 59, "295447e": 59, "155041e": 59, "283286e": 59, "134810e": 59, "569222e": 59, "610479e": 59, "163": 59, "663549e": 59, "172942e": 59, "951247e": 59, "164": 59, "399809e": 59, "328651e": 59, "229432e": 59, "045221e": 59, "166": 59, "326191e": 59, "206184e": 59, "167": 59, "663548e": 59, "209694e": 59, "012384e": 59, "372136e": 59, "282614e": 59, "169": [59, 97], "338395e": 59, "226484e": 59, "416497e": 59, "356410e": 59, "171": 59, "298576e": 59, "160242e": 59, "172": [59, 97], "663547e": 59, "190590e": 59, "980603e": 59, "167083e": 59, "941497e": 59, "174": [59, 97], "069425e": 59, "779038e": 59, "217780e": 59, "025834e": 59, "176": [59, 97], "140754e": 59, "897697e": 59, "177": 59, "663546e": 59, "160707e": 59, "930890e": 59, "178": [59, 97], "101798e": 59, "832892e": 59, "179": 59, "114904e": 59, "854694e": 59, "064022e": 59, "770049e": 59, "258231e": 59, "540149e": 59, "213120e": 59, "018080e": 59, "183": 59, "663545e": 59, "164296e": 59, "936859e": 59, "188762e": 59, "977559e": 59, "394153e": 59, "562760e": 59, "186": 59, "028656e": 59, "711216e": 59, "115348e": 59, "855431e": 59, "188": 59, "663544e": 59, "768310e": 59, "625002e": 59, "021806e": 59, "699820e": 59, "086303e": 59, "807113e": 59, "191": [59, 97], "879008e": 59, "643416e": 59, "192": 59, "050210e": 59, "747071e": 59, "193": 59, "002463e": 59, "667641e": 59, "194": 59, "663543e": 59, "062747e": 59, "767925e": 59, "195": [59, 97], "348538e": 59, "555170e": 59, "992512e": 59, "329589e": 59, "197": 59, "558020e": 59, "590018e": 59, "198": [59, 97], "993772e": 59, "662507e": 59, "588499e": 59, "428734e": 59, "737134e": 59, "453459e": 59, "692289e": 59, "617643e": 59, "614437e": 59, "464513e": 59, "612639e": 59, "102965e": 59, "003963e": 59, "611291e": 59, "371098e": 59, "348827e": 59, "610468e": 59, "110558e": 59, "230389e": 59, "610198e": 59, "672927e": 59, "693743e": 59, "610130e": 59, "232417e": 59, "814742e": 59, "610090e": 59, "513455e": 59, "046887e": 59, "610002e": 59, "443507e": 59, "764057e": 59, "609996e": 59, "657071e": 59, "887869e": 59, "609948e": 59, "998735e": 59, "827807e": 59, "609695e": 59, "569217e": 59, "525962e": 59, "609533e": 59, "010779e": 59, "626881e": 59, "609520e": 59, "043897e": 59, "294681e": 59, "609465e": 59, "415246e": 59, "496718e": 59, "609386e": 59, "898605e": 59, "883745e": 59, "609324e": 59, "837052e": 59, "175060e": 59, "609298e": 59, "617826e": 59, "603564e": 59, "609184e": 59, "080015e": 59, "139305e": 59, "609083e": 59, "273206e": 59, "009411e": 59, "608988e": 59, "940805e": 59, "558681e": 59, "608853e": 59, "380030e": 59, "348223e": 59, "608844e": 59, "185045e": 59, "341930e": 59, "608824e": 59, "279113e": 59, "057868e": 59, "608819e": 59, "156821e": 59, "078753e": 59, "608783e": 59, "205746e": 59, "548567e": 59, "608764e": 59, "189894e": 59, "914259e": 59, "608755e": 59, "474607e": 59, "807303e": 59, "608737e": 59, "144227e": 59, "840760e": 59, "608676e": 59, "775335e": 59, "073291e": 59, "608638e": 59, "348020e": 59, "777116e": 59, "608627e": 59, "863136e": 59, "104023e": 59, "608529e": 59, "110230e": 59, "828482e": 59, "608487e": 59, "641106e": 59, "248184e": 59, "608409e": 59, "823638e": 59, "758383e": 59, "608373e": 59, "256641e": 59, "629519e": 59, "608338e": 59, "132444e": 59, "429691e": 59, "608310e": 59, "786649e": 59, "873484e": 59, "608260e": 59, "103848e": 59, "991794e": 59, "608206e": 59, "321265e": 59, "341279e": 59, "608201e": 59, "054747e": 59, "912648e": 59, "608195e": 59, "198335e": 59, "751739e": 59, "608193e": 59, "458736e": 59, "360328e": 59, "608159e": 59, "153759e": 59, "463587e": 59, "608115e": 59, "738314e": 59, "403523e": 59, "608108e": 59, "960032e": 59, "368161e": 59, "608081e": 59, "675447e": 59, "694254e": 59, "608072e": 59, "976340e": 59, "610383e": 59, "608046e": 59, "604130e": 59, "579515e": 59, "608020e": 59, "617036e": 59, "600226e": 59, "608014e": 59, "957795e": 59, "364188e": 59, "608011e": 59, "292411e": 59, "078211e": 59, "607998e": 59, "431795e": 59, "355831e": 59, "607964e": 59, "127054e": 59, "420225e": 59, "607947e": 59, "021878e": 59, "643126e": 59, "560621e": 59, "725288e": 59, "607900e": 59, "929781e": 59, "710793e": 59, "607890e": 59, "740229e": 59, "229659e": 59, "607858e": 59, "039550e": 59, "279306e": 59, "607836e": 59, "319545e": 59, "121612e": 59, "607826e": 59, "378947e": 59, "025624e": 59, "607808e": 59, "145102e": 59, "841105e": 59, "607776e": 59, "941743e": 59, "121889e": 59, "607743e": 59, "087422e": 59, "356037e": 59, "607741e": 59, "310249e": 59, "106541e": 59, "607738e": 59, "682752e": 59, "705425e": 59, "607691e": 59, "913936e": 59, "684709e": 59, "607671e": 59, "288855e": 59, "072055e": 59, "607654e": 59, "002448e": 59, "611590e": 59, "607641e": 59, "209492e": 59, "319792e": 59, "607632e": 59, "588467e": 59, "984199e": 59, "607619e": 59, "050388e": 59, "294196e": 59, "607618e": 59, "417493e": 59, "513973e": 59, "607598e": 59, "210509e": 59, "946012e": 59, "607591e": 59, "392914e": 59, "062009e": 59, "607579e": 59, "759587e": 59, "247415e": 59, "607574e": 59, "760280e": 59, "437356e": 59, "607556e": 59, "146469e": 59, "843012e": 59, "607550e": 59, "689456e": 59, "930984e": 59, "065631e": 59, "535705e": 59, "607539e": 59, "555681e": 59, "053852e": 59, "607528e": 59, "177470e": 59, "153798e": 59, "607527e": 59, "306068e": 59, "529648e": 59, "607514e": 59, "816045e": 59, "256440e": 59, "607511e": 59, "301970e": 59, "700442e": 59, "607504e": 59, "281072e": 59, "881840e": 59, "607503e": 59, "821886e": 59, "257370e": 59, "607480e": 59, "403013e": 59, "255315e": 59, "169298e": 59, "879624e": 59, "607473e": 59, "235982e": 59, "809227e": 59, "607470e": 59, "717105e": 59, "760195e": 59, "148402e": 59, "883374e": 59, "reg1": [59, 85], "reg2": [59, 85], "gel2": 59, "gcg": [59, 76, 96], "693084e": 59, "610202e": 59, "147342e": 59, "288260e": 59, "610179e": 59, "406304e": 59, "264402e": 59, "610174e": 59, "352083e": 59, "397436e": 59, "348": [59, 60, 98], "plot_optim_otreg": [59, 60, 98], "311": [60, 97], "corenflo": [61, 72, 95], "aalto": 61, "fi": [61, 65], "n_seed": [61, 62], "n_projections_arr": [61, 62], "res_mean": [61, 62], "res_std": [61, 62], "xscale": [61, 62], "confid": [61, 62], "245": [61, 63, 98], "plot_vari": [61, 63, 98], "mgrid": 62, "30j": 62, "plot_surfac": 62, "set_zlim": 62, "tick": 62, "ssw_1": 62, "392": [62, 63, 98], "plot_variance_ssw": [62, 63, 98], "uot": [64, 88, 95, 96], "497": [64, 69, 98], "plot_uot_1d": [64, 69, 98], "n_weight": 65, "weight_list": 65, "1022": 65, "overflow": [65, 95, 97], "kv": 65, "1027": 65, "ktu": 65, "1034": 65, "595": 65, "974": 65, "615": 65, "455": 65, "361": [65, 97], "plot_uot_barycenter_1d": [65, 69, 98], "429": [65, 69, 98], "n_nois": [66, 68], "w0": 66, "partial_wasserstein": [66, 68, 96], "entropic_partial_wasserstein": [66, 96], "partial_w_dist": 66, "jet": [66, 68], "47910182636916243": 66, "5034205945081646": 66, "res0": 66, "partial_gromov_wasserstein": [66, 96], "entropic_partial_gromov_wasserstein": [66, 96], "partial_gw_dist": [66, 86], "611280e": 66, "345385e": 66, "584346e": 66, "659015e": 66, "38071035222889": 66, "59015303098326": 66, "478237e": 66, "894947e": 66, "251769e": 66, "596705e": 66, "808371e": 66, "136110e": 66, "859072e": 66, "136043e": 66, "11743971783944865": 66, "9136043100219415": 66, "681": [66, 69, 98], "plot_partial_wass_and_gromov": [66, 69, 98], "haoran": 67, "final_gamma": 67, "t_list": [67, 88], "g_list": [67, 88], "regularization_path": 67, "semi_relax": [67, 88], "t_list2": 67, "g_list2": 67, "selected_gamma": 67, "compute_transport_plan": 67, "ell_2": [67, 68, 92], "g_list_v": 67, "l_2": 67, "279": [67, 69, 98], "plot_regpath": [67, 69, 98], "_f": [68, 96], "div": [68, 92], "ell_1": 68, "reg_m_kl": 68, "reg_m_l2": 68, "entropic_kl_uot": 68, "kl_uot": 68, "mm_unbalanc": 68, "l2_uot": 68, "partial_ot": 68, "plot_unbalanced_ot": [68, 69, 98], "526": [69, 97], "interest": [70, 96], "foster": [70, 96], "open": [70, 71, 72, 95, 96, 97], "welcom": [70, 95], "environ": [70, 96], "contributor": [70, 95, 97], "maintain": [70, 73, 95, 97], "particip": 70, "harass": 70, "experi": 70, "everyon": 70, "regardless": [70, 97], "ag": 70, "bodi": 70, "disabl": [70, 96], "ethnic": 70, "gender": 70, "ident": [70, 73, 84], "nation": 70, "person": [70, 72], "appear": [70, 74], "race": 70, "religion": 70, "sexual": 70, "behavior": [70, 71, 97], "inclus": [70, 71], "languag": [70, 72, 96], "Being": 70, "viewpoint": 70, "gracefulli": 70, "critic": 70, "focus": 70, "best": [70, 71, 82, 96], "empathi": 70, "toward": 70, "member": [70, 95], "unaccept": 70, "imageri": 70, "unwelcom": 70, "attent": 70, "troll": 70, "insult": 70, "derogatori": 70, "comment": 70, "polit": 70, "attack": 70, "public": [70, 71, 97], "privat": 70, "publish": [70, 95], "physic": 70, "electron": 70, "address": [70, 71, 96], "permiss": 70, "could": [70, 97], "inappropri": 70, "profession": 70, "clarifi": 70, "appropri": [70, 71, 93], "fair": [70, 83], "correct": [70, 71, 83, 95, 97], "action": [70, 97], "edit": [70, 71], "reject": 70, "commit": [70, 71, 73, 97], "wiki": 70, "ban": 70, "temporarili": 70, "perman": 70, "deem": 70, "threaten": 70, "offens": 70, "harm": 70, "offici": [70, 97], "mail": [70, 71, 95], "post": 70, "social": 70, "media": 70, "act": 70, "appoint": 70, "offlin": 70, "event": 70, "abus": 70, "report": [70, 71, 95, 97], "contact": 70, "team": [70, 71, 97], "complaint": 70, "review": [70, 71], "investig": [70, 96], "circumst": 70, "oblig": 70, "confidenti": 70, "regard": 70, "incid": 70, "polici": 70, "separ": [70, 96, 97], "who": [70, 97], "faith": 70, "face": [70, 86], "temporari": 70, "repercuss": 70, "determin": [70, 74, 78, 82, 91], "leadership": 70, "coven": 70, "thank": [71, 72, 88, 97], "workflow": 71, "fork": 71, "repositori": [71, 97], "develop": [71, 95, 96, 97], "branch": [71, 97], "click": 71, "button": 71, "under": [71, 74, 75, 76, 95], "guid": [71, 95, 97], "repo": [71, 97], "disk": 71, "git": 71, "yourlogin": 71, "cd": 71, "hold": 71, "checkout": 71, "my": 71, "never": [71, 97], "master": [71, 93, 95, 97], "modified_fil": 71, "push": [71, 96, 97], "instruct": 71, "email": 71, "committ": 71, "abov": [71, 82, 87, 88, 96, 97], "seem": 71, "magic": 71, "look": [71, 88], "web": 71, "ask": [71, 95, 97], "friend": 71, "anoth": [71, 76, 83, 96], "compli": 71, "rule": [71, 85], "submit": 71, "pep8": [71, 97], "guidelin": [71, 95], "mention": 71, "descript": 71, "docstr": [71, 93, 97], "usag": 71, "doctest": [71, 97], "prefix": 71, "mrg": 71, "readi": 71, "merg": [71, 97], "core": [71, 97], "approv": [71, 97], "elig": 71, "incomplet": [71, 97], "wip": 71, "progress": 71, "matur": 71, "duplic": 71, "broad": 71, "api": [71, 73, 81, 95, 97], "seek": [71, 96], "collabor": 71, "often": [71, 96], "benefit": [71, 72, 95], "task": 71, "pr": [71, 73, 97], "folder": [71, 95, 97], "coverag": [71, 97], "enhanc": 71, "verifi": 71, "manner": 71, "modif": 71, "grant": 71, "desir": [71, 74, 82, 83, 84, 93], "fail": [71, 83, 96, 97], "At": [71, 96], "paragraph": 71, "narr": 71, "literatur": [71, 96], "common": [71, 96], "program": [71, 74, 76, 83, 85, 95, 96, 97], "tool": [71, 96], "pyflak": 71, "autopep8": 71, "easi": [71, 95, 96], "redund": 71, "bonu": 71, "benchmark": [71, 73, 97], "profil": 71, "track": [71, 82, 97], "feel": 71, "snippet": 71, "highlight": [71, 97], "platform": [71, 97], "__version__": 71, "about": [71, 74, 93, 96, 97], "gist": 71, "except": 71, "traceback": 71, "great": 71, "pick": [71, 91], "tracker": 71, "resolv": [71, 80], "knowledg": [71, 96], "assist": [71, 95], "area": [71, 96], "greatli": [71, 96, 97], "appreci": 71, "experienc": 71, "concentr": 71, "glad": 71, "restructuredtext": 71, "etc": [71, 75], "directori": 71, "editor": 71, "noplot": 71, "place": [71, 97], "viewabl": 71, "browser": 71, "pillow": 71, "write": [71, 73], "keep": [71, 96, 97], "compromis": 71, "reader": [71, 96], "hand": 71, "wave": 71, "explan": 71, "inspir": 71, "scikit": [71, 93, 96, 97], "wrapper": [72, 76, 84, 96, 97], "ci": [72, 97], "michael": [72, 83], "l\u00e9o": [72, 95], "gautheron": [72, 95], "nathali": [72, 95], "gayraud": [72, 95], "debug": [72, 83, 97], "alain": [72, 95], "jcpot": [72, 95, 97], "minhui": 72, "huang": [72, 78, 95, 96], "robust": [72, 78, 95, 96, 97], "nathan": [72, 97], "cassereau": [72, 97], "camil": 72, "le": [72, 93], "coz": 72, "theo": 72, "gnassoun": 72, "wassertstein": 72, "layer": [72, 81, 95, 97], "lot": [72, 97], "would": [72, 73, 97], "variou": [72, 93, 97], "mathieu": [72, 90, 97], "financ": [72, 95], "manpow": [72, 95], "partner": [72, 95], "goal": [73, 91], "agnost": 73, "cupi": [73, 95, 96, 97], "nonetheless": 73, "achiev": 73, "imit": 73, "As": [73, 83, 96, 97], "convent": [73, 76], "list_to_arrai": [73, 93], "get_backend": [73, 97], "know": 73, "op": 73, "numpy_op": 73, "np_config": 73, "enable_numpy_behavior": 73, "intel": 73, "xeon": 73, "6248": 73, "50ghz": 73, "tesla": 73, "v100": 73, "sxm2": 73, "32gb": 73, "date": [73, 97], "8th": 73, "316": [73, 97], "pull": [73, 97], "bitsize32": 73, "bit": 73, "devicecpugpu": 73, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 73, "00080": 73, "00220": 73, "01510": 73, "00950": 73, "01930": 73, "00510": 73, "0293": 73, "00050": 73, "00130": 73, "00970": 73, "00570": 73, "01150": 73, "00290": 73, "0173": 73, "5000": 73, "00090": 73, "00160": 73, "01100": 73, "00580": 73, "0166": 73, "00210": 73, "01450": 73, "00560": 73, "01180": 73, "0168": 73, "20000": 73, "00690": 73, "00430": 73, "02780": 73, "00590": 73, "00300": 73, "0165": 73, "50000": [73, 88], "07070": 73, "03140": 73, "13950": 73, "00740": 73, "01250": 73, "00350": 73, "0198": 73, "nbsp": 73, "bitsize64": 73, "00200": 73, "01540": 73, "00930": 73, "01910": 73, "0328": 73, "00940": 73, "01140": 73, "0169": 73, "00170": 73, "01200": 73, "01160": 73, "00340": 73, "00270": 73, "01770": 73, "0167": 73, "01460": 73, "00750": 73, "04360": 73, "14670": 73, "05680": 73, "24680": 73, "00770": 73, "00450": 73, "0204": 73, "get_available_backend_implement": 73, "proper": [73, 97], "typeerror": 73, "get_backend_list": 73, "instanti": [73, 93, 96, 97], "side": [73, 88], "effect": [73, 96], "alloc": [73, 96, 97], "func": [73, 93], "to_numpi": 73, "abstract": 73, "jaxbackend": 73, "numpybackend": 73, "torchbackend": [73, 97], "cupybackend": 73, "tensorflowbackend": 73, "__name__": 73, "__type__": 73, "rtol": 73, "equal_nan": 73, "evenli": 73, "array_equ": 73, "assert_same_dtype_devic": 73, "arctang": 73, "bitsiz": 73, "a_min": 73, "a_max": 73, "sequenc": 73, "exist": [73, 74, 96, 97], "col": 73, "cumsum": 73, "device_typ": 73, "dtype_devic": 73, "eigenvalu": [73, 76, 80], "eigenvector": 73, "einsum": 73, "subscript": 73, "operand": 73, "einstein": 73, "summat": 73, "eliminate_zero": 73, "smaller": [73, 97], "csr_matrix": 73, "exponenti": [73, 74], "flip": 73, "from_numpi": 73, "fill_valu": 73, "inv": 73, "is_floating_point": 73, "isfinit": 73, "infin": [73, 92], "isinf": 73, "isnan": 73, "nan": 73, "isspars": 73, "kl_div": 73, "stat": 73, "specifi": [73, 76, 90, 93, 97], "logsumexp": [73, 78, 96], "matmul": 73, "amax": 73, "arithmet": 73, "median": [73, 93], "amin": 73, "frobeniu": 73, "outer": 73, "expon": 73, "prod": 73, "qr": 73, "repeat": 73, "searchsort": 73, "insert": 73, "set_gradi": [73, 97], "equat": [73, 74, 82, 84, 91, 96], "sort2": 73, "ngeativ": 73, "root": [73, 95, 96], "squeez": 73, "deviat": [73, 77, 81, 82], "take_along_axi": 73, "arr": 73, "gather": [73, 76, 84], "tile": 73, "rep": 73, "tocsr": 73, "compress": 73, "trace": 73, "dim0": 73, "dim1": 73, "swap": 73, "return_invers": 73, "chosen": [73, 93, 96], "zero_pad": 73, "pad_width": 73, "pad": 73, "cp": 73, "relat": [74, 82, 95, 96, 97], "s_": 74, "empirical_sinkhorn_diverg": [74, 96, 97], "barycenter_sinkhorn": 74, "barycenter_stabil": 74, "tau": [74, 78, 92], "10000000000": 74, "mast": 74, "strength": 74, "stabthr": 74, "goe": [74, 95, 96], "butscher": [74, 95, 96], "nguyen": [74, 95, 96], "guiba": [74, 95, 96], "geometr": [74, 81, 95, 96, 97], "islazi": 74, "batchsiz": 74, "updat": [74, 82, 83, 84, 88, 91, 93, 97], "99977301e": 74, "26989344e": 74, "empirical_sinkhorn2": [74, 96], "53978687e": 74, "frechet": [74, 83], "w_i": [74, 80, 83], "measure_weight": [74, 83], "k_i": [74, 83], "There": [74, 83, 96], "arnaud": [74, 83], "doucet": [74, 83, 95, 96], "\u00e1lvarez": [74, 83, 95], "esteban": [74, 83, 95], "pedro": [74, 83, 95], "744": [74, 83, 95], "762": [74, 83, 95], "geometricbar": 74, "alldistribt": 74, "geometricmean": 74, "jcpot_barycent": 74, "lambda_k": 74, "gamma_k": 74, "th": [74, 75, 83, 88, 90], "n_k": 74, "unknown": 74, "nsk": 74, "control": [74, 76, 82, 83], "devi": [74, 76], "projc": 74, "projr": 74, "maxfun": 74, "pgtol": 74, "written": [74, 83], "u_i": 74, "ldot": [74, 83], "v_j": [74, 84], "regularis": 74, "bfg": [74, 90, 92, 96], "lbfg": 74, "final": [74, 83, 96, 97], "gain": 74, "isn": 74, "epsilon0": 74, "print_period": 74, "decreas": [74, 76, 84], "tabl": 74, "m0": 74, "h0": 74, "reg0": 74, "dh": 74, "m_0": 74, "_0": [74, 93], "n_atom": 74, "dim_prior": 74, "trust": [74, 78], "nakhostin": [74, 95], "corpetti": [74, 95], "planetari": [74, 95], "workshop": [74, 76, 82, 95, 96], "hyperspectr": [74, 95], "signal": [74, 95, 96], "remot": [74, 95], "whisper": [74, 95], "wx_samp": 75, "wx_feat": 75, "wy_feat": 75, "m_samp": 75, "m_feat": 75, "nits_bcd": 75, "tol_bcd": 75, "eval_bcd": 75, "nits_ot": 75, "tol_sinkhorn": 75, "method_sinkhorn": 75, "early_stopping_tol": 75, "xf": 75, "yf": 75, "alpha_": 75, "alpha_f": 75, "varepsilon_": 75, "varepsilon_f": 75, "n_sample_x": 75, "n_feature_x": 75, "n_sample_i": 75, "n_feature_i": 75, "duals_sampl": 75, "duals_featur": 75, "bcd": [75, 76, 78, 82, 84], "scheme": 75, "previou": [75, 88], "multipli": [75, 93], "earli": [75, 97], "pi_samp": 75, "pi_feat": 75, "pair": [75, 93], "ny_sampstem": 75, "alpha_1": 75, "alpha_2": 75, "varepsilon_1": 75, "varepsilon_2": 75, "distribution_estimation_uniform": 76, "emd_laplac": 76, "knn": 76, "sim_param": 76, "n_": [76, 83, 84], "s_i": 76, "s_j": 76, "n_t": 76, "t_i": 76, "t_j": 76, "neighbor": 76, "bandwidth": [76, 84], "otml": [76, 82, 95, 96], "sinkhorn_l1l2_gl": [76, 96, 97], "keyword": [76, 93], "transform_label": 76, "inverse_transform_label": 76, "y_t": 76, "transp_x": 76, "transp_xt": 76, "propag": 76, "transp_i": 76, "soft": 76, "nb_class": 76, "similarity_param": 76, "max_inner_it": 76, "inner_tol": 76, "distribution_estim": 76, "out_of_sample_map": 76, "disp": 76, "occur": [76, 96], "kind": [76, 83, 96], "emploi": 76, "limit_max": 76, "10e": 76, "849": 76, "858": 76, "nk_source_sampl": 76, "sign_eig": [76, 80], "skew": [76, 80], "desolneux": [76, 80, 95], "salmona": [76, 80, 95], "1178": [76, 80, 95], "1198": [76, 80, 95], "discuss": [76, 80, 82, 85, 95, 96, 97], "remark": [76, 80, 96], "daigon": 76, "knott": [76, 80, 95, 96], "smith": [76, 80, 95, 96], "theori": [76, 80, 95, 96], "1984": [76, 80, 95, 96], "verbose2": [76, 84], "jointli": [76, 84], "constant": [76, 82, 83, 84], "mapping_": 76, "nearestbrenierpotenti": [76, 84], "strongly_convex_const": [76, 84], "yield": 76, "simpler": [76, 97], "strong": [76, 84, 96], "initialis": [76, 84], "lpl1": 76, "infti": 76, "unbalancedsinkhorntransport": 76, "reduct": [78, 82, 93, 95, 97], "explicitli": [78, 81, 84, 87, 97], "u0": 78, "sinkhorn_method": 78, "maxiter_sink": 78, "maxiter_mm": 78, "stiefel": [78, 96], "eather": 78, "mm": 78, "major": [78, 96, 97], "fisher": [78, 86, 96], "ridg": 78, "proj": [78, 89], "projection_robust_wasserstein": 78, "max_": [78, 88, 90, 91], "stepsiz": 78, "riemannian": [78, 95, 96], "lai": [78, 95, 96], "split_class": 78, "limits_i": 78, "limits_": 78, "neq": [78, 83, 96], "steepest": 78, "trustregion": 78, "region": 78, "wasserstaiun": 78, "1608": [78, 95, 96], "08063": [78, 95, 96], "num_it": 80, "still": [80, 96, 97], "sigma_b": 80, "sigma_i": 80, "agueh": [80, 83, 95, 96], "904": [80, 83, 95, 96], "924": [80, 83, 95, 96], "bures_wasserstein_dist": 80, "ct": 80, "bures_wasserstein_map": [80, 96], "empirical_bures_wasserstein_barycent": 80, "empirical_bures_wasserstein_dist": 80, "empirical_gaussian_gromov_wasserstein_dist": 80, "gaussien": 80, "dt": 80, "_refer": [80, 82, 91], "gaussian_gromov_wasserstein_dist": 80, "gaussian_gromov_wasserstein_map": 80, "fgw_distance_to_templ": 81, "g_edg": 81, "tplt_adjac": 81, "g_featur": 81, "tplt_featur": 81, "tplt_weight": 81, "multi_alpha": 81, "n_edg": 81, "n_templates_nod": 81, "n_tplt": 81, "n_tplt_node": 81, "train_node_weight": 81, "tfgw": [81, 95], "pool": [81, 97], "tfgw_": 81, "overlin": 81, "fgw_": [81, 82], "_k": 81, "character": 81, "law": 81, "twpool": 81, "kown": 81, "tw_": 81, "charactersis": 81, "b\u00e9cigneul": [81, 95], "ganea": [81, 95], "chen": [81, 95], "barzilai": [81, 95], "jaakkola": [81, 95], "wasserstein_distance_to_templ": 81, "discard": [82, 83], "decompos": 82, "proposit": [82, 90, 91], "h_1": 82, "f_1": 82, "necessarili": 82, "correctli": [82, 97], "bapg_fused_gromov_wasserstein2": 82, "bapg_gromov_wasserstein": 82, "bapg_gromov_wasserstein2": 82, "recommand": 82, "correcli": 82, "gw_distance_estim": 82, "nb_samples_p": 82, "nb_samples_q": 82, "unbias": 82, "csr": 82, "replac": [82, 96, 97], "sebban": 82, "mlj": 82, "entropic_fused_gromov_barycent": [82, 97], "init_i": 82, "fixed_structur": [82, 97], "fixed_featur": [82, 97], "dure": [82, 83], "Such": 82, "suggest": 82, "entropic_fused_gromov_wasserstein2": 82, "asymetr": 82, "entropic_gromov_barycent": [82, 96], "entropic_gromov_wasserstein2": 82, "mirror": 82, "geometri": 82, "howev": [82, 96], "entropic_semirelaxed_fused_gromov_wasserstein2": 82, "entropic_semirelaxed_gromov_wasserstein2": 82, "init_x": [82, 97], "eq": [82, 90], "cdict_init": 82, "ydict_init": 82, "_d": 82, "distibut": 82, "cdict": 82, "ydict": 82, "randomli": 82, "nonneg": 82, "strategi": 82, "consecut": 82, "cdict_best_st": 82, "compos": 82, "ydict_best_st": 82, "w_d": 82, "emb": 82, "depict": 82, "span": [82, 83], "current_loss": 82, "gw_2": 82, "gwggrad": 82, "constc": 82, "hc1": 82, "hc2": 82, "h1": 82, "gwloss": 82, "init_matrix": 82, "otim": 82, "read": [82, 95], "2b": 82, "init_matrix_semirelax": 82, "anymor": 82, "fc2t": 82, "threshold_plan": 82, "frank": 82, "wolf": 82, "_iter": 82, "pn": 82, "delet": [82, 88], "violat": [82, 83, 96], "nb_samples_grad": 82, "assel": [82, 95], "cluster": [82, 95], "semirelaxed_fused_gromov_wasserstein2": 82, "semirelaxed_gromov_wasserstein2": 82, "solve_gromov_linesearch": [82, 85], "deltag": 82, "cost_g": 82, "alpha_min": [82, 85], "alpha_max": [82, 85], "fw": 82, "fc": [82, 85], "useless": [82, 97], "solve_semirelaxed_gromov_linesearch": [82, 85], "ones_p": 82, "tensor_product": 82, "ten": 82, "update_feature_matrix": 82, "update_kl_loss": 82, "accord": [82, 93], "update_square_loss": 82, "alpha0": [83, 85], "beta0": 83, "below": [83, 95, 97], "basic": 83, "alpha_0": 83, "beta_0": 83, "check_number_thread": 83, "request": [83, 89, 95], "valid": 83, "estimate_dual_null_weight": 83, "rather": 83, "coars": 83, "emd_c": 83, "max_j": 83, "max_i": 83, "beta_j": [83, 90], "y_init": 83, "nu_i": 83, "b_l": 83, "y_l": 83, "a_": 83, "d_i": 83, "p_i": 83, "p_ix_": 83, "rightarrow": 83, "don": 83, "ill": 83, "anywai": 83, "ipm": 83, "cvxopt": [83, 96, 97], "glpk": 83, "mosek": 83, "dmmot_monge_1dgrid_loss": 83, "concurr": 83, "prime": 83, "state": [83, 97], "textrm": 83, "i_1": 83, "i_d": 83, "i_2": 83, "a_1": 83, "i_i": 83, "qquad": 83, "vdot": 83, "i_": 83, "jefferi": [83, 95], "kline": [83, 95], "vishnu": [83, 95], "suresh": [83, 95], "lokhand": [83, 95], "glenn": [83, 95], "fung": [83, 95], "vika": [83, 95], "singh": [83, 95], "eleventh": [83, 90, 95], "leonid": 83, "transloc": 83, "dokl": 83, "akad": 83, "nauk": 83, "sssr": 83, "227": 83, "1942": 83, "995": 83, "print_rat": 83, "a_d": 83, "z_j": [83, 90, 93], "a_j": 83, "subject": 83, "z_": 83, "i_j": 83, "jin": 83, "a_2": 83, "nonumb": 83, "z_1": 83, "move": [83, 96, 97], "decai": 83, "olvi": 83, "mangasarian": 83, "rr": 83, "meyer": 83, "nonlinear": [83, 84, 96], "perturb": 83, "745": 83, "752": 83, "1979": 83, "ferri": 83, "1991": 83, "variant": [84, 96, 97], "joint_ot_mapping_kernel": [84, 96], "kerneltyp": 84, "2_f": 84, "2_": 84, "supplementari": 84, "materi": 84, "joint_ot_mapping_linear": [84, 96], "neutral": 84, "x_class": 84, "x_n": 84, "v_1": 84, "v_n": 84, "g_i": 84, "g_1": 84, "g_n": 84, "varphi_1": 84, "varphi_n": 84, "i_k": 84, "varphi_i": 84, "varphi_j": 84, "g_j": 84, "x_j": 84, "fact": 84, "polytop": 84, "qcqp": 84, "eco": 84, "basetransport": [84, 96, 97], "y_class": 84, "statement": 84, "typo": 84, "varphi_": 84, "line_search": 85, "line_search_armijo": 85, "reg_1": 85, "reg_2": 85, "generic_conditional_gradi": 85, "lp_solver": 85, "lp_semi_relaxed_ot": 85, "gcg_linesearch": 85, "xk": 85, "pk": 85, "gfk": 85, "old_fval": 85, "x_k": 85, "p_k": 85, "fa": 85, "const": 85, "semirelaxed_cg": 85, "solve_1d_linesearch_quad": 85, "bx": 85, "entropic_partial_gromov_wasserstein2": 86, "gwgrad_parti": 86, "n_p": 86, "n_u": 86, "nb_dummi": 86, "gwloss_parti": 86, "thre": 86, "costfr": 86, "dummi": [86, 97], "instabl": 86, "popul": 86, "partial_gromov_wasserstein2": 86, "especi": [86, 96], "smoother": 86, "repartit": 86, "reservoir": [86, 96], "caffarelli": [86, 95, 96], "mccann": [86, 95, 96], "boundari": [86, 95, 96], "amper": [86, 95, 96], "obstacl": [86, 95, 96], "annal": [86, 95, 96], "673": [86, 95, 96], "partial_wasserstein_lagrang": 86, "partial_wasserstein2": [86, 96], "rao": 86, "tune": 86, "shown": [87, 96], "na": 87, "thr": 87, "noth": 87, "complement_schur": 88, "m_current": 88, "id_pop": 88, "schur": 88, "complement": 88, "aris": 88, "bmatrix": 88, "m_k": 88, "h_a": 88, "th_a": 88, "backslash": 88, "r_": 88, "depriv": 88, "compute_next_remov": 88, "current_gamma": 88, "largest": 88, "vanish": [88, 96], "phi_j": 88, "delta_j": 88, "intercept": 88, "slope": 88, "next_removal_gamma": 88, "next_removal_index": 88, "gamma_list": 88, "pi_list": 88, "piecewis": 88, "flatten": 88, "19722222": 88, "05555556": 88, "24722222": 88, "construct_augmented_h": 88, "active_index": 88, "hc": 88, "hrhr": 88, "augment": 88, "_h": 88, "h_": 88, "h_r": 88, "h_c": 88, "h_augment": 88, "fully_relaxed_path": 88, "itmax": 88, "reformul": 88, "min_t": 88, "99958333e": 88, "00000000e": 88, "88888889e": 88, "99938889e": 88, "ot_next_gamma": 88, "hth": 88, "hty": 88, "inact": 88, "_a": 88, "next_gamma": 88, "next_active_index": 88, "recast_ot_as_lasso": 88, "recast": 88, "1_m": 88, "1_n": 88, "particularli": [88, 96], "uot2": 88, "recast_semi_relaxed_as_lasso": 88, "hr": 88, "auxiliari": 88, "constitut": 88, "semi_relaxed_next_gamma": 88, "phi_u": 88, "delta_u": 88, "hra": 88, "ri": 88, "ra": 88, "ith": 88, "lagrang": [88, 93], "semi_relaxed_path": 88, "99980556e": 88, "94444444e": 88, "get_random_project": 89, "proc": 90, "1710": 90, "06276": 90, "mblondel": 90, "puigcerv": [90, 95], "2209": 90, "15466": 90, "dual_obj_grad": 90, "regul": 90, "delta_omega": 90, "grad_alpha": 90, "grad_beta": 90, "get_plan_from_du": 90, "retriev": 90, "get_plan_from_semi_du": 90, "projection_simplex": 90, "substack": [90, 93], "z_i": [90, 93], "semi_dual_obj_grad": 90, "max_omega": 90, "decent": 90, "nbb": 90, "nonzero": 90, "sinhorn": 90, "smooth_ot_semi_du": [90, 96], "solve_du": 90, "solve_semi_du": 90, "negentropi": 90, "sup_": 90, "intend": 90, "appar": 90, "sparsityconstrain": 90, "squaredl2": 90, "averaged_sgd_entropic_transport": 91, "300000": 91, "contin": 91, "alg": 91, "ave_v": 91, "batch_grad_du": 91, "batch_alpha": 91, "batch_beta": 91, "partial_": 91, "b_": 91, "l_v": 91, "b_v": 91, "l_u": 91, "b_u": 91, "c_transform_entrop": 91, "coordinate_grad_semi_du": 91, "bewar": 91, "dual_loss": 91, "sag_entropic_transport": 91, "sgd_entropic_regular": 91, "barycenter_unbalanced_sinkhorn": 92, "barycenter_unbalanced_stabil": [92, 96], "absorpt": 92, "lbfgsb_unbalanc": 92, "reg_div": 92, "regm_div": 92, "div_m": 92, "three": 92, "quantifi": 92, "mm_unbalanced2": 92, "b_i": 92, "check_param": 93, "miss": 93, "check_random_st": 93, "turn": 93, "singleton": 93, "alreadi": [93, 96, 97], "valueerror": 93, "clean_zero": [93, 97], "cost_norm": 93, "loglog": 93, "lin_squar": 93, "euclidean_dist": 93, "n_samples_1": 93, "n_samples_2": 93, "y1": 93, "get_lowrank_lazytensor": 93, "lazytensor": [93, 97], "lowrank": 93, "get_parameter_pair": 93, "param_1": 93, "param_2": 93, "is_all_finit": 93, "label_norm": 93, "smallest": 93, "lst": 93, "parmap": 93, "nproc": 93, "multiprocess": 93, "closest": 93, "orthogon": 93, "projection_sparse_simplex": 93, "anastasio": 93, "kyrillidi": 93, "stephen": 93, "becker": 93, "volkan": 93, "cevher": 93, "christoph": 93, "koch": 93, "1206": 93, "1529": 93, "reduce_lazytensor": 93, "get_param": 93, "deep": 93, "subobject": 93, "param": 93, "set_param": 93, "nest": 93, "pipelin": 93, "latter": 93, "__": 93, "getitem": 93, "fly": 93, "sparse_plan": 93, "symbol": 93, "keop": 93, "potential_a": 93, "potential_b": 93, "marginal_a": 93, "a_to_b": 93, "b_to_a": 93, "citat": 93, "plain": 93, "bibtex": [93, 95], "extra": 93, "decor": 93, "mark": 93, "blob": 93, "parenthes": 93, "some_funct": 93, "undefinedparamet": 93, "undefin": 93, "ransport": 94, "sever": [95, 96, 97], "websit": 95, "jmlr": [95, 97], "aur\u00e9li": 95, "nemo": 95, "fournier": 95, "antoni": 95, "schutz": 95, "danica": 95, "sutherland": 95, "alexand": 95, "tong": 95, "articl": 95, "flamary2021pot": 95, "mi": 95, "aur": 95, "lie": [95, 96], "year": [95, 96, 97], "volum": 95, "url": 95, "v22": 95, "451": 95, "linux": [95, 97], "macosx": [95, 97], "window": [95, 97], "cython": [95, 96, 97], "latest": 95, "archiv": 95, "abl": 95, "easier": [95, 96], "wd": 95, "wd_reg": 95, "t_reg": [95, 96], "ba": 95, "question": 95, "slack": 95, "channel": 95, "gitter": 95, "bug": [95, 97], "2292": [95, 96], "38th": [95, 96], "roussillon": 95, "gori": 95, "scalabl": 95, "brain": 95, "tractogram": 95, "medic": 95, "intervent": 95, "miccai": 95, "shenzhen": 95, "china": 95, "octob": 95, "iii": 95, "644": 95, "charlier": 95, "glaun": 95, "collin": 95, "durif": 95, "autodiff": [95, 97], "3457": 95, "3462": 95, "pointer": [96, 97], "concret": 96, "book": 96, "ml": 96, "gaspard": 96, "1781": 96, "overal": 96, "difficult": 96, "kantorovitch": 96, "share": 96, "disjoint": 96, "favor": 96, "popular": 96, "jensen": 96, "shannon": 96, "meaning": 96, "becam": 96, "overcom": 96, "spectra": 96, "itself": 96, "context": 96, "recent": [96, 97], "rapidli": 96, "grow": 96, "novel": [96, 97], "abil": 96, "extend": 96, "proven": 96, "nearli": [96, 97], "exactli": 96, "filter": 96, "known": 96, "affin": 96, "hi": 96, "semin": 96, "procedur": 96, "slower": 96, "tu": 96, "kullbach": 96, "similarli": 96, "pure": 96, "densifi": 96, "lost": 96, "soon": 96, "_q": 96, "overlap": 96, "choic": [96, 97], "long": 96, "w_kw": 96, "mu_k": 96, "b_k": 96, "brought": 96, "eponym": 96, "interfac": 96, "classifi": [96, 97], "xs_map": 96, "inherit": 96, "w_u": 96, "interestingli": 96, "fr\u00e9chet": 96, "w_kw_u": 96, "barycenter_unbalanced_sinkhorn_unbalanc": 96, "surplu": 96, "resolut": 96, "c1_": 96, "c2_": 96, "realign": 96, "ck": 96, "fusion": 96, "coin": 96, "partli": 96, "linearli": 96, "projector": 96, "min_p": 96, "mu_j": 96, "hard": [96, 97], "seamlessli": [96, 97], "incur": 96, "far": 96, "lazili": [96, 97], "prevent": 96, "unwarr": 96, "pot_backend_disable_": 96, "export": 96, "pot_backend_disable_tensorflow": 96, "longer": 96, "hopefulli": [96, 97], "disappear": 96, "becom": 96, "fulli": 96, "importerror": 96, "shortli": 96, "readm": [96, 97], "tri": [96, 97], "quicker": [96, 97], "configur": 96, "nterpol": 96, "cc": 96, "9386": 96, "www": 96, "toronto": 96, "annals2010": 96, "2002": 96, "08276": 96, "535": 97, "tweak": 97, "525": 97, "callback": 97, "improv": 97, "507": 97, "536": 97, "537": 97, "wheel": 97, "old": 97, "i686": 97, "arch": 97, "543": 97, "upgrad": 97, "flexibl": 97, "539": 97, "544": 97, "559": 97, "551": 97, "563": 97, "571": 97, "un": 97, "578": 97, "581": 97, "582": 97, "584": 97, "outsid": 97, "502": 97, "504": 97, "unnecessari": 97, "516": 97, "547": 97, "566": 97, "572": 97, "567": 97, "569": 97, "574": 97, "573": 97, "576": 97, "august": 97, "submodul": 97, "front": 97, "unregist": 97, "celebr": 97, "neighborhood": 97, "streamlin": 97, "timeout": 97, "runner": 97, "made": 97, "428": 97, "372": 97, "376": 97, "387": 97, "388": 97, "437": 97, "395": 97, "393": 97, "394": 97, "371": 97, "373": 97, "374": 97, "hit": 97, "stderr": 97, "cerr": 97, "stream": 97, "377": 97, "378": 97, "379": 97, "beyond": 97, "certain": 97, "slightli": 97, "46k": 97, "roughli": 97, "381": 97, "mismatch": 97, "386": 97, "389": 97, "391": 97, "around": 97, "402": 97, "built": 97, "403": 97, "setuptool": 97, "408": 97, "409": 97, "404": 97, "412": 97, "413": 97, "render": 97, "subcal": 97, "421": 97, "break": 97, "try": 97, "424": 97, "425": 97, "notabl": 97, "less": 97, "background": 97, "359": 97, "358": 97, "brand": 97, "357": 97, "minigalleri": 97, "334": 97, "336": 97, "341": 97, "319": 97, "364": 97, "363": 97, "valfunct": 97, "338": 97, "abi": 97, "346": 97, "349": 97, "feed": 97, "345": 97, "backpropag": 97, "351": 97, "352": 97, "tag": 97, "332": 97, "namespac": 97, "331": 97, "333": 97, "enabl": 97, "bring": 97, "older": 97, "realli": 97, "315": 97, "code_of_conduct": 97, "322": 97, "308": 97, "326": 97, "305": 97, "306": 97, "309": 97, "sinkhornl1l2": 97, "313": 97, "317": 97, "3018": 97, "novemb": 97, "nice": 97, "mechan": 97, "wassersein": 97, "moment": 97, "ott": 97, "devias": 97, "sinkorn": 97, "simplifi": 97, "pyproject": 97, "toml": 97, "pe": 97, "aarch64": 97, "raspberri": 97, "android": 97, "phone": 97, "maco": 97, "arm": 97, "processor": 97, "softwar": 97, "cite": 97, "usual": 97, "peopl": 97, "kamel": 97, "guerda": 97, "ai": 97, "idri": 97, "249": 97, "282": 97, "294": 97, "302": 97, "304": 97, "303": 97, "291": 97, "275": 97, "293": 97, "259": 97, "cleanup": 97, "smartphon": 97, "236": 97, "253": 97, "202": 97, "introductori": 97, "leak": 97, "254": 97, "288": 97, "278": 97, "258": 97, "234": 97, "241": 97, "242": 97, "215": 97, "281": 97, "286": 97, "infeas": 97, "201": 97, "codecov": 97, "296": 97, "flake8": 97, "setup": 97, "flag": 97, "organ": 97, "own": 97, "host": 97, "offer": 97, "readthedoc": 97, "beauti": 97, "huge": 97, "travi": 97, "laplac": 97, "acknoledg": 97, "232": 97, "bad": 97, "wassertein": 97, "jump": 97, "wild": 97, "fundament": 97, "month": 97, "until": 97, "python3stat": 97, "exempl": 97, "labeld": 97, "relev": 97, "64bit": 97, "acknowledg": 97, "past": 97, "manylinux": 97, "sep": 97, "among": 97, "rewrit": 97, "unmaintain": 97, "cudamat": 97, "keed": 97, "were": 97, "happi": 97, "stai": 97, "stuff": 97, "markdown": 97, "pipi": 97, "renam": 97, "compliant": 97, "big": 97, "plug": 97, "unus": 97, "unicodedecodeerror": 97, "ascii": 97, "pytest": 97, "pep": 97, "du": 97, "jul": 97, "reloc": 97, "removimg": 97, "apr": 97, "tarnsport": 97, "paralel": 97, "jan": 97, "nov": 97, "oct": 97, "593": 98}, "objects": {"": [[0, 0, 0, "-", "ot"]], "ot": [[73, 0, 0, "-", "backend"], [0, 3, 1, "", "barycenter"], [0, 3, 1, "", "barycenter_unbalanced"], [0, 3, 1, "", "binary_search_circle"], [74, 0, 0, "-", "bregman"], [75, 0, 0, "-", "coot"], [76, 0, 0, "-", "da"], [77, 0, 0, "-", "datasets"], [0, 3, 1, "", "dist"], [78, 0, 0, "-", "dr"], [0, 3, 1, "", "emd"], [0, 3, 1, "", "emd2"], [0, 3, 1, "", "emd2_1d"], [0, 3, 1, "", "emd_1d"], [79, 0, 0, "-", "factored"], [0, 3, 1, "", "factored_optimal_transport"], [0, 3, 1, "", "fused_gromov_wasserstein"], [0, 3, 1, "", "fused_gromov_wasserstein2"], [80, 0, 0, "-", "gaussian"], [81, 0, 0, "-", "gnn"], [82, 0, 0, "-", "gromov"], [0, 3, 1, "", "gromov_barycenters"], [0, 3, 1, "", "gromov_wasserstein"], [0, 3, 1, "", "gromov_wasserstein2"], [83, 0, 0, "-", "lp"], [84, 0, 0, "-", "mapping"], [0, 3, 1, "", "max_sliced_wasserstein_distance"], [85, 0, 0, "-", "optim"], [86, 0, 0, "-", "partial"], [87, 0, 0, "-", "plot"], [88, 0, 0, "-", "regpath"], [0, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [0, 3, 1, "", "sinkhorn"], [0, 3, 1, "", "sinkhorn2"], [0, 3, 1, "", "sinkhorn_lpl1_mm"], [0, 3, 1, "", "sinkhorn_unbalanced"], [0, 3, 1, "", "sinkhorn_unbalanced2"], [89, 0, 0, "-", "sliced"], [0, 3, 1, "", "sliced_wasserstein_distance"], [0, 3, 1, "", "sliced_wasserstein_sphere"], [0, 3, 1, "", "sliced_wasserstein_sphere_unif"], [90, 0, 0, "-", "smooth"], [0, 3, 1, "", "solve"], [0, 3, 1, "", "solve_gromov"], [0, 3, 1, "", "solve_sample"], [91, 0, 0, "-", "stochastic"], [0, 3, 1, "", "tic"], [0, 3, 1, "", "toc"], [0, 3, 1, "", "toq"], [92, 0, 0, "-", "unbalanced"], [0, 3, 1, "", "unif"], [93, 0, 0, "-", "utils"], [0, 3, 1, "", "wasserstein_1d"], [0, 3, 1, "", "wasserstein_circle"], [94, 0, 0, "-", "weak"], [0, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[73, 1, 1, "id0", "Backend"], [73, 1, 1, "id83", "CupyBackend"], [73, 1, 1, "id164", "JaxBackend"], [73, 1, 1, "id245", "NumpyBackend"], [73, 1, 1, "id326", "TensorflowBackend"], [73, 1, 1, "id407", "TorchBackend"], [73, 3, 1, "id488", "get_available_backend_implementations"], [73, 3, 1, "id489", "get_backend"], [73, 3, 1, "id490", "get_backend_list"], [73, 3, 1, "id491", "to_numpy"]], "ot.backend.Backend": [[73, 2, 1, "id1", "abs"], [73, 2, 1, "id2", "allclose"], [73, 2, 1, "id3", "any"], [73, 2, 1, "id4", "arange"], [73, 2, 1, "id5", "argmax"], [73, 2, 1, "id6", "argmin"], [73, 2, 1, "id7", "argsort"], [73, 2, 1, "id8", "array_equal"], [73, 2, 1, "id9", "assert_same_dtype_device"], [73, 2, 1, "id10", "atan2"], [73, 2, 1, "id11", "bitsize"], [73, 2, 1, "id12", "clip"], [73, 2, 1, "id13", "concatenate"], [73, 2, 1, "id14", "coo_matrix"], [73, 2, 1, "id15", "copy"], [73, 2, 1, "id16", "cumsum"], [73, 2, 1, "id17", "detach"], [73, 2, 1, "id18", "device_type"], [73, 2, 1, "id19", "diag"], [73, 2, 1, "id20", "dot"], [73, 2, 1, "id21", "dtype_device"], [73, 2, 1, "id22", "eigh"], [73, 2, 1, "id23", "einsum"], [73, 2, 1, "id24", "eliminate_zeros"], [73, 2, 1, "id25", "exp"], [73, 2, 1, "id26", "eye"], [73, 2, 1, "id27", "flip"], [73, 2, 1, "id28", "floor"], [73, 2, 1, "id29", "from_numpy"], [73, 2, 1, "id30", "full"], [73, 2, 1, "id31", "inv"], [73, 2, 1, "id32", "is_floating_point"], [73, 2, 1, "id33", "isfinite"], [73, 2, 1, "id34", "isinf"], [73, 2, 1, "id35", "isnan"], [73, 2, 1, "id36", "issparse"], [73, 2, 1, "id37", "kl_div"], [73, 2, 1, "id38", "linspace"], [73, 2, 1, "id39", "log"], [73, 2, 1, "id40", "logsumexp"], [73, 2, 1, "id41", "matmul"], [73, 2, 1, "id42", "max"], [73, 2, 1, "id43", "maximum"], [73, 2, 1, "id44", "mean"], [73, 2, 1, "id45", "median"], [73, 2, 1, "id46", "meshgrid"], [73, 2, 1, "id47", "min"], [73, 2, 1, "id48", "minimum"], [73, 2, 1, "id49", "norm"], [73, 2, 1, "id50", "ones"], [73, 2, 1, "id51", "outer"], [73, 2, 1, "id52", "power"], [73, 2, 1, "id53", "prod"], [73, 2, 1, "id54", "qr"], [73, 2, 1, "id55", "rand"], [73, 2, 1, "id56", "randn"], [73, 2, 1, "id57", "repeat"], [73, 2, 1, "id58", "reshape"], [73, 2, 1, "id59", "searchsorted"], [73, 2, 1, "id60", "seed"], [73, 2, 1, "id61", "set_gradients"], [73, 2, 1, "id62", "sign"], [73, 2, 1, "id63", "solve"], [73, 2, 1, "id64", "sort"], [73, 2, 1, "id65", "sort2"], [73, 2, 1, "id66", "sqrt"], [73, 2, 1, "id67", "sqrtm"], [73, 2, 1, "id68", "squeeze"], [73, 2, 1, "id69", "stack"], [73, 2, 1, "id70", "std"], [73, 2, 1, "id71", "sum"], [73, 2, 1, "id72", "take_along_axis"], [73, 2, 1, "id73", "tile"], [73, 2, 1, "id74", "to_numpy"], [73, 2, 1, "id75", "tocsr"], [73, 2, 1, "id76", "todense"], [73, 2, 1, "id77", "trace"], [73, 2, 1, "id78", "transpose"], [73, 2, 1, "id79", "unique"], [73, 2, 1, "id80", "where"], [73, 2, 1, "id81", "zero_pad"], [73, 2, 1, "id82", "zeros"]], "ot.backend.CupyBackend": [[73, 2, 1, "id84", "abs"], [73, 2, 1, "id85", "allclose"], [73, 2, 1, "id86", "any"], [73, 2, 1, "id87", "arange"], [73, 2, 1, "id88", "argmax"], [73, 2, 1, "id89", "argmin"], [73, 2, 1, "id90", "argsort"], [73, 2, 1, "id91", "array_equal"], [73, 2, 1, "id92", "assert_same_dtype_device"], [73, 2, 1, "id93", "atan2"], [73, 2, 1, "id94", "bitsize"], [73, 2, 1, "id95", "clip"], [73, 2, 1, "id96", "concatenate"], [73, 2, 1, "id97", "coo_matrix"], [73, 2, 1, "id98", "copy"], [73, 2, 1, "id99", "cumsum"], [73, 2, 1, "id100", "detach"], [73, 2, 1, "id101", "device_type"], [73, 2, 1, "id102", "diag"], [73, 2, 1, "id103", "dot"], [73, 2, 1, "id104", "dtype_device"], [73, 2, 1, "id105", "eigh"], [73, 2, 1, "id106", "einsum"], [73, 2, 1, "id107", "eliminate_zeros"], [73, 2, 1, "id108", "exp"], [73, 2, 1, "id109", "eye"], [73, 2, 1, "id110", "flip"], [73, 2, 1, "id111", "floor"], [73, 2, 1, "id112", "full"], [73, 2, 1, "id113", "inv"], [73, 2, 1, "id114", "is_floating_point"], [73, 2, 1, "id115", "isfinite"], [73, 2, 1, "id116", "isinf"], [73, 2, 1, "id117", "isnan"], [73, 2, 1, "id118", "issparse"], [73, 2, 1, "id119", "kl_div"], [73, 2, 1, "id120", "linspace"], [73, 2, 1, "id121", "log"], [73, 2, 1, "id122", "logsumexp"], [73, 2, 1, "id123", "matmul"], [73, 2, 1, "id124", "max"], [73, 2, 1, "id125", "maximum"], [73, 2, 1, "id126", "mean"], [73, 2, 1, "id127", "median"], [73, 2, 1, "id128", "meshgrid"], [73, 2, 1, "id129", "min"], [73, 2, 1, "id130", "minimum"], [73, 2, 1, "id131", "norm"], [73, 2, 1, "id132", "ones"], [73, 2, 1, "id133", "outer"], [73, 2, 1, "id134", "power"], [73, 2, 1, "id135", "prod"], [73, 2, 1, "id136", "qr"], [73, 2, 1, "id137", "rand"], [73, 2, 1, "id138", "randn"], [73, 2, 1, "id139", "repeat"], [73, 2, 1, "id140", "reshape"], [73, 2, 1, "id141", "searchsorted"], [73, 2, 1, "id142", "seed"], [73, 2, 1, "id143", "set_gradients"], [73, 2, 1, "id144", "sign"], [73, 2, 1, "id145", "solve"], [73, 2, 1, "id146", "sort"], [73, 2, 1, "id147", "sort2"], [73, 2, 1, "id148", "sqrt"], [73, 2, 1, "id149", "sqrtm"], [73, 2, 1, "id150", "squeeze"], [73, 2, 1, "id151", "stack"], [73, 2, 1, "id152", "std"], [73, 2, 1, "id153", "sum"], [73, 2, 1, "id154", "take_along_axis"], [73, 2, 1, "id155", "tile"], [73, 2, 1, "id156", "tocsr"], [73, 2, 1, "id157", "todense"], [73, 2, 1, "id158", "trace"], [73, 2, 1, "id159", "transpose"], [73, 2, 1, "id160", "unique"], [73, 2, 1, "id161", "where"], [73, 2, 1, "id162", "zero_pad"], [73, 2, 1, "id163", "zeros"]], "ot.backend.JaxBackend": [[73, 2, 1, "id165", "abs"], [73, 2, 1, "id166", "allclose"], [73, 2, 1, "id167", "any"], [73, 2, 1, "id168", "arange"], [73, 2, 1, "id169", "argmax"], [73, 2, 1, "id170", "argmin"], [73, 2, 1, "id171", "argsort"], [73, 2, 1, "id172", "array_equal"], [73, 2, 1, "id173", "assert_same_dtype_device"], [73, 2, 1, "id174", "atan2"], [73, 2, 1, "id175", "bitsize"], [73, 2, 1, "id176", "clip"], [73, 2, 1, "id177", "concatenate"], [73, 2, 1, "id178", "coo_matrix"], [73, 2, 1, "id179", "copy"], [73, 2, 1, "id180", "cumsum"], [73, 2, 1, "id181", "detach"], [73, 2, 1, "id182", "device_type"], [73, 2, 1, "id183", "diag"], [73, 2, 1, "id184", "dot"], [73, 2, 1, "id185", "dtype_device"], [73, 2, 1, "id186", "eigh"], [73, 2, 1, "id187", "einsum"], [73, 2, 1, "id188", "eliminate_zeros"], [73, 2, 1, "id189", "exp"], [73, 2, 1, "id190", "eye"], [73, 2, 1, "id191", "flip"], [73, 2, 1, "id192", "floor"], [73, 2, 1, "id193", "full"], [73, 2, 1, "id194", "inv"], [73, 2, 1, "id195", "is_floating_point"], [73, 2, 1, "id196", "isfinite"], [73, 2, 1, "id197", "isinf"], [73, 2, 1, "id198", "isnan"], [73, 2, 1, "id199", "issparse"], [73, 2, 1, "id200", "kl_div"], [73, 2, 1, "id201", "linspace"], [73, 2, 1, "id202", "log"], [73, 2, 1, "id203", "logsumexp"], [73, 2, 1, "id204", "matmul"], [73, 2, 1, "id205", "max"], [73, 2, 1, "id206", "maximum"], [73, 2, 1, "id207", "mean"], [73, 2, 1, "id208", "median"], [73, 2, 1, "id209", "meshgrid"], [73, 2, 1, "id210", "min"], [73, 2, 1, "id211", "minimum"], [73, 2, 1, "id212", "norm"], [73, 2, 1, "id213", "ones"], [73, 2, 1, "id214", "outer"], [73, 2, 1, "id215", "power"], [73, 2, 1, "id216", "prod"], [73, 2, 1, "id217", "qr"], [73, 2, 1, "id218", "rand"], [73, 2, 1, "id219", "randn"], [73, 2, 1, "id220", "repeat"], [73, 2, 1, "id221", "reshape"], [73, 2, 1, "id222", "searchsorted"], [73, 2, 1, "id223", "seed"], [73, 2, 1, "id224", "set_gradients"], [73, 2, 1, "id225", "sign"], [73, 2, 1, "id226", "solve"], [73, 2, 1, "id227", "sort"], [73, 2, 1, "id228", "sort2"], [73, 2, 1, "id229", "sqrt"], [73, 2, 1, "id230", "sqrtm"], [73, 2, 1, "id231", "squeeze"], [73, 2, 1, "id232", "stack"], [73, 2, 1, "id233", "std"], [73, 2, 1, "id234", "sum"], [73, 2, 1, "id235", "take_along_axis"], [73, 2, 1, "id236", "tile"], [73, 2, 1, "id237", "tocsr"], [73, 2, 1, "id238", "todense"], [73, 2, 1, "id239", "trace"], [73, 2, 1, "id240", "transpose"], [73, 2, 1, "id241", "unique"], [73, 2, 1, "id242", "where"], [73, 2, 1, "id243", "zero_pad"], [73, 2, 1, "id244", "zeros"]], "ot.backend.NumpyBackend": [[73, 2, 1, "id246", "abs"], [73, 2, 1, "id247", "allclose"], [73, 2, 1, "id248", "any"], [73, 2, 1, "id249", "arange"], [73, 2, 1, "id250", "argmax"], [73, 2, 1, "id251", "argmin"], [73, 2, 1, "id252", "argsort"], [73, 2, 1, "id253", "array_equal"], [73, 2, 1, "id254", "assert_same_dtype_device"], [73, 2, 1, "id255", "atan2"], [73, 2, 1, "id256", "bitsize"], [73, 2, 1, "id257", "clip"], [73, 2, 1, "id258", "concatenate"], [73, 2, 1, "id259", "coo_matrix"], [73, 2, 1, "id260", "copy"], [73, 2, 1, "id261", "cumsum"], [73, 2, 1, "id262", "detach"], [73, 2, 1, "id263", "device_type"], [73, 2, 1, "id264", "diag"], [73, 2, 1, "id265", "dot"], [73, 2, 1, "id266", "dtype_device"], [73, 2, 1, "id267", "eigh"], [73, 2, 1, "id268", "einsum"], [73, 2, 1, "id269", "eliminate_zeros"], [73, 2, 1, "id270", "exp"], [73, 2, 1, "id271", "eye"], [73, 2, 1, "id272", "flip"], [73, 2, 1, "id273", "floor"], [73, 2, 1, "id274", "full"], [73, 2, 1, "id275", "inv"], [73, 2, 1, "id276", "is_floating_point"], [73, 2, 1, "id277", "isfinite"], [73, 2, 1, "id278", "isinf"], [73, 2, 1, "id279", "isnan"], [73, 2, 1, "id280", "issparse"], [73, 2, 1, "id281", "kl_div"], [73, 2, 1, "id282", "linspace"], [73, 2, 1, "id283", "log"], [73, 2, 1, "id284", "logsumexp"], [73, 2, 1, "id285", "matmul"], [73, 2, 1, "id286", "max"], [73, 2, 1, "id287", "maximum"], [73, 2, 1, "id288", "mean"], [73, 2, 1, "id289", "median"], [73, 2, 1, "id290", "meshgrid"], [73, 2, 1, "id291", "min"], [73, 2, 1, "id292", "minimum"], [73, 2, 1, "id293", "norm"], [73, 2, 1, "id294", "ones"], [73, 2, 1, "id295", "outer"], [73, 2, 1, "id296", "power"], [73, 2, 1, "id297", "prod"], [73, 2, 1, "id298", "qr"], [73, 2, 1, "id299", "rand"], [73, 2, 1, "id300", "randn"], [73, 2, 1, "id301", "repeat"], [73, 2, 1, "id302", "reshape"], [73, 2, 1, "id303", "searchsorted"], [73, 2, 1, "id304", "seed"], [73, 2, 1, "id305", "set_gradients"], [73, 2, 1, "id306", "sign"], [73, 2, 1, "id307", "solve"], [73, 2, 1, "id308", "sort"], [73, 2, 1, "id309", "sort2"], [73, 2, 1, "id310", "sqrt"], [73, 2, 1, "id311", "sqrtm"], [73, 2, 1, "id312", "squeeze"], [73, 2, 1, "id313", "stack"], [73, 2, 1, "id314", "std"], [73, 2, 1, "id315", "sum"], [73, 2, 1, "id316", "take_along_axis"], [73, 2, 1, "id317", "tile"], [73, 2, 1, "id318", "tocsr"], [73, 2, 1, "id319", "todense"], [73, 2, 1, "id320", "trace"], [73, 2, 1, "id321", "transpose"], [73, 2, 1, "id322", "unique"], [73, 2, 1, "id323", "where"], [73, 2, 1, "id324", "zero_pad"], [73, 2, 1, "id325", "zeros"]], "ot.backend.TensorflowBackend": [[73, 2, 1, "id327", "abs"], [73, 2, 1, "id328", "allclose"], [73, 2, 1, "id329", "any"], [73, 2, 1, "id330", "arange"], [73, 2, 1, "id331", "argmax"], [73, 2, 1, "id332", "argmin"], [73, 2, 1, "id333", "argsort"], [73, 2, 1, "id334", "array_equal"], [73, 2, 1, "id335", "assert_same_dtype_device"], [73, 2, 1, "id336", "atan2"], [73, 2, 1, "id337", "bitsize"], [73, 2, 1, "id338", "clip"], [73, 2, 1, "id339", "concatenate"], [73, 2, 1, "id340", "coo_matrix"], [73, 2, 1, "id341", "copy"], [73, 2, 1, "id342", "cumsum"], [73, 2, 1, "id343", "detach"], [73, 2, 1, "id344", "device_type"], [73, 2, 1, "id345", "diag"], [73, 2, 1, "id346", "dot"], [73, 2, 1, "id347", "dtype_device"], [73, 2, 1, "id348", "eigh"], [73, 2, 1, "id349", "einsum"], [73, 2, 1, "id350", "eliminate_zeros"], [73, 2, 1, "id351", "exp"], [73, 2, 1, "id352", "eye"], [73, 2, 1, "id353", "flip"], [73, 2, 1, "id354", "floor"], [73, 2, 1, "id355", "full"], [73, 2, 1, "id356", "inv"], [73, 2, 1, "id357", "is_floating_point"], [73, 2, 1, "id358", "isfinite"], [73, 2, 1, "id359", "isinf"], [73, 2, 1, "id360", "isnan"], [73, 2, 1, "id361", "issparse"], [73, 2, 1, "id362", "kl_div"], [73, 2, 1, "id363", "linspace"], [73, 2, 1, "id364", "log"], [73, 2, 1, "id365", "logsumexp"], [73, 2, 1, "id366", "matmul"], [73, 2, 1, "id367", "max"], [73, 2, 1, "id368", "maximum"], [73, 2, 1, "id369", "mean"], [73, 2, 1, "id370", "median"], [73, 2, 1, "id371", "meshgrid"], [73, 2, 1, "id372", "min"], [73, 2, 1, "id373", "minimum"], [73, 2, 1, "id374", "norm"], [73, 2, 1, "id375", "ones"], [73, 2, 1, "id376", "outer"], [73, 2, 1, "id377", "power"], [73, 2, 1, "id378", "prod"], [73, 2, 1, "id379", "qr"], [73, 2, 1, "id380", "rand"], [73, 2, 1, "id381", "randn"], [73, 2, 1, "id382", "repeat"], [73, 2, 1, "id383", "reshape"], [73, 2, 1, "id384", "searchsorted"], [73, 2, 1, "id385", "seed"], [73, 2, 1, "id386", "set_gradients"], [73, 2, 1, "id387", "sign"], [73, 2, 1, "id388", "solve"], [73, 2, 1, "id389", "sort"], [73, 2, 1, "id390", "sort2"], [73, 2, 1, "id391", "sqrt"], [73, 2, 1, "id392", "sqrtm"], [73, 2, 1, "id393", "squeeze"], [73, 2, 1, "id394", "stack"], [73, 2, 1, "id395", "std"], [73, 2, 1, "id396", "sum"], [73, 2, 1, "id397", "take_along_axis"], [73, 2, 1, "id398", "tile"], [73, 2, 1, "id399", "tocsr"], [73, 2, 1, "id400", "todense"], [73, 2, 1, "id401", "trace"], [73, 2, 1, "id402", "transpose"], [73, 2, 1, "id403", "unique"], [73, 2, 1, "id404", "where"], [73, 2, 1, "id405", "zero_pad"], [73, 2, 1, "id406", "zeros"]], "ot.backend.TorchBackend": [[73, 2, 1, "id408", "abs"], [73, 2, 1, "id409", "allclose"], [73, 2, 1, "id410", "any"], [73, 2, 1, "id411", "arange"], [73, 2, 1, "id412", "argmax"], [73, 2, 1, "id413", "argmin"], [73, 2, 1, "id414", "argsort"], [73, 2, 1, "id415", "array_equal"], [73, 2, 1, "id416", "assert_same_dtype_device"], [73, 2, 1, "id417", "atan2"], [73, 2, 1, "id418", "bitsize"], [73, 2, 1, "id419", "clip"], [73, 2, 1, "id420", "concatenate"], [73, 2, 1, "id421", "coo_matrix"], [73, 2, 1, "id422", "copy"], [73, 2, 1, "id423", "cumsum"], [73, 2, 1, "id424", "detach"], [73, 2, 1, "id425", "device_type"], [73, 2, 1, "id426", "diag"], [73, 2, 1, "id427", "dot"], [73, 2, 1, "id428", "dtype_device"], [73, 2, 1, "id429", "eigh"], [73, 2, 1, "id430", "einsum"], [73, 2, 1, "id431", "eliminate_zeros"], [73, 2, 1, "id432", "exp"], [73, 2, 1, "id433", "eye"], [73, 2, 1, "id434", "flip"], [73, 2, 1, "id435", "floor"], [73, 2, 1, "id436", "full"], [73, 2, 1, "id437", "inv"], [73, 2, 1, "id438", "is_floating_point"], [73, 2, 1, "id439", "isfinite"], [73, 2, 1, "id440", "isinf"], [73, 2, 1, "id441", "isnan"], [73, 2, 1, "id442", "issparse"], [73, 2, 1, "id443", "kl_div"], [73, 2, 1, "id444", "linspace"], [73, 2, 1, "id445", "log"], [73, 2, 1, "id446", "logsumexp"], [73, 2, 1, "id447", "matmul"], [73, 2, 1, "id448", "max"], [73, 2, 1, "id449", "maximum"], [73, 2, 1, "id450", "mean"], [73, 2, 1, "id451", "median"], [73, 2, 1, "id452", "meshgrid"], [73, 2, 1, "id453", "min"], [73, 2, 1, "id454", "minimum"], [73, 2, 1, "id455", "norm"], [73, 2, 1, "id456", "ones"], [73, 2, 1, "id457", "outer"], [73, 2, 1, "id458", "power"], [73, 2, 1, "id459", "prod"], [73, 2, 1, "id460", "qr"], [73, 2, 1, "id461", "rand"], [73, 2, 1, "id462", "randn"], [73, 2, 1, "id463", "repeat"], [73, 2, 1, "id464", "reshape"], [73, 2, 1, "id465", "searchsorted"], [73, 2, 1, "id466", "seed"], [73, 2, 1, "id467", "set_gradients"], [73, 2, 1, "id468", "sign"], [73, 2, 1, "id469", "solve"], [73, 2, 1, "id470", "sort"], [73, 2, 1, "id471", "sort2"], [73, 2, 1, "id472", "sqrt"], [73, 2, 1, "id473", "sqrtm"], [73, 2, 1, "id474", "squeeze"], [73, 2, 1, "id475", "stack"], [73, 2, 1, "id476", "std"], [73, 2, 1, "id477", "sum"], [73, 2, 1, "id478", "take_along_axis"], [73, 2, 1, "id479", "tile"], [73, 2, 1, "id480", "tocsr"], [73, 2, 1, "id481", "todense"], [73, 2, 1, "id482", "trace"], [73, 2, 1, "id483", "transpose"], [73, 2, 1, "id484", "unique"], [73, 2, 1, "id485", "where"], [73, 2, 1, "id486", "zero_pad"], [73, 2, 1, "id487", "zeros"]], "ot.bregman": [[74, 3, 1, "", "barycenter"], [74, 3, 1, "", "barycenter_debiased"], [74, 3, 1, "", "barycenter_sinkhorn"], [74, 3, 1, "", "barycenter_stabilized"], [74, 3, 1, "", "convolutional_barycenter2d"], [74, 3, 1, "", "convolutional_barycenter2d_debiased"], [74, 3, 1, "", "empirical_sinkhorn"], [74, 3, 1, "", "empirical_sinkhorn2"], [74, 3, 1, "", "free_support_sinkhorn_barycenter"], [74, 3, 1, "", "geometricBar"], [74, 3, 1, "", "geometricMean"], [74, 3, 1, "", "greenkhorn"], [74, 3, 1, "", "jcpot_barycenter"], [74, 3, 1, "", "projC"], [74, 3, 1, "", "projR"], [74, 3, 1, "", "screenkhorn"], [74, 3, 1, "", "sinkhorn"], [74, 3, 1, "", "sinkhorn2"], [74, 3, 1, "", "sinkhorn_epsilon_scaling"], [74, 3, 1, "", "sinkhorn_knopp"], [74, 3, 1, "", "sinkhorn_log"], [74, 3, 1, "", "sinkhorn_stabilized"], [74, 3, 1, "", "unmix"]], "ot.coot": [[75, 3, 1, "id0", "co_optimal_transport"], [75, 3, 1, "id4", "co_optimal_transport2"]], "ot.da": [[76, 1, 1, "id0", "BaseTransport"], [76, 1, 1, "id44", "EMDLaplaceTransport"], [76, 1, 1, "id51", "EMDTransport"], [76, 1, 1, "id57", "JCPOTTransport"], [76, 1, 1, "id70", "LinearGWTransport"], [76, 1, 1, "id74", "LinearTransport"], [76, 1, 1, "id81", "MappingTransport"], [76, 1, 1, "id88", "NearestBrenierPotential"], [76, 1, 1, "id96", "SinkhornL1l2Transport"], [76, 1, 1, "id104", "SinkhornLpl1Transport"], [76, 1, 1, "id111", "SinkhornTransport"], [76, 1, 1, "id119", "UnbalancedSinkhornTransport"], [76, 3, 1, "id126", "distribution_estimation_uniform"], [76, 3, 1, "id127", "emd_laplace"], [76, 3, 1, "id131", "sinkhorn_l1l2_gl"], [76, 3, 1, "id135", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[76, 2, 1, "id36", "fit"], [76, 2, 1, "id37", "fit_transform"], [76, 2, 1, "id38", "inverse_transform"], [76, 2, 1, "id39", "inverse_transform_labels"], [76, 2, 1, "id40", "transform"], [76, 2, 1, "id41", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[76, 4, 1, "id45", "coupling_"], [76, 2, 1, "id50", "fit"]], "ot.da.EMDTransport": [[76, 4, 1, "id52", "coupling_"], [76, 2, 1, "id56", "fit"]], "ot.da.JCPOTTransport": [[76, 4, 1, "id58", "coupling_"], [76, 2, 1, "id64", "fit"], [76, 2, 1, "id65", "inverse_transform_labels"], [76, 4, 1, "id60", "log_"], [76, 4, 1, "id59", "proportions_"], [76, 2, 1, "id66", "transform"], [76, 2, 1, "id67", "transform_labels"]], "ot.da.LinearGWTransport": [[76, 2, 1, "id73", "fit"]], "ot.da.LinearTransport": [[76, 2, 1, "id78", "fit"], [76, 2, 1, "id79", "inverse_transform"], [76, 2, 1, "id80", "transform"]], "ot.da.MappingTransport": [[76, 4, 1, "id82", "coupling_"], [76, 2, 1, "id86", "fit"], [76, 4, 1, "id84", "log_"], [76, 4, 1, "id83", "mapping_"], [76, 2, 1, "id87", "transform"]], "ot.da.NearestBrenierPotential": [[76, 2, 1, "id91", "fit"], [76, 2, 1, "id93", "transform"]], "ot.da.SinkhornL1l2Transport": [[76, 4, 1, "id97", "coupling_"], [76, 2, 1, "id103", "fit"], [76, 4, 1, "id98", "log_"]], "ot.da.SinkhornLpl1Transport": [[76, 4, 1, "id105", "coupling_"], [76, 2, 1, "id110", "fit"]], "ot.da.SinkhornTransport": [[76, 4, 1, "id112", "coupling_"], [76, 2, 1, "id118", "fit"], [76, 4, 1, "id113", "log_"]], "ot.da.UnbalancedSinkhornTransport": [[76, 4, 1, "id120", "coupling_"], [76, 2, 1, "id125", "fit"], [76, 4, 1, "id121", "log_"]], "ot.datasets": [[77, 3, 1, "id0", "make_1D_gauss"], [77, 3, 1, "id1", "make_2D_samples_gauss"], [77, 3, 1, "id2", "make_data_classif"]], "ot.dr": [[78, 3, 1, "id0", "dist"], [78, 3, 1, "id4", "ewca"], [78, 3, 1, "id7", "fda"], [78, 3, 1, "id8", "logsumexp"], [78, 3, 1, "id9", "projection_robust_wasserstein"], [78, 3, 1, "id12", "sinkhorn"], [78, 3, 1, "id13", "sinkhorn_log"], [78, 3, 1, "id14", "split_classes"], [78, 3, 1, "id15", "wda"]], "ot.factored": [[79, 3, 1, "id0", "factored_optimal_transport"]], "ot.gaussian": [[80, 3, 1, "id0", "bures_wasserstein_barycenter"], [80, 3, 1, "id18", "bures_wasserstein_distance"], [80, 3, 1, "id21", "bures_wasserstein_mapping"], [80, 3, 1, "id25", "empirical_bures_wasserstein_barycenter"], [80, 3, 1, "id28", "empirical_bures_wasserstein_distance"], [80, 3, 1, "id31", "empirical_bures_wasserstein_mapping"], [80, 3, 1, "id35", "empirical_gaussian_gromov_wasserstein_distance"], [80, 3, 1, "id38", "empirical_gaussian_gromov_wasserstein_mapping"], [80, 3, 1, "id40", "gaussian_gromov_wasserstein_distance"], [80, 3, 1, "id43", "gaussian_gromov_wasserstein_mapping"]], "ot.gnn": [[81, 3, 1, "", "FGW_distance_to_templates"], [81, 1, 1, "", "TFGWPooling"], [81, 1, 1, "", "TWPooling"], [81, 3, 1, "", "wasserstein_distance_to_templates"]], "ot.gnn.TFGWPooling": [[81, 2, 1, "", "forward"]], "ot.gnn.TWPooling": [[81, 2, 1, "", "forward"]], "ot.gromov": [[82, 3, 1, "", "BAPG_fused_gromov_wasserstein"], [82, 3, 1, "", "BAPG_fused_gromov_wasserstein2"], [82, 3, 1, "", "BAPG_gromov_wasserstein"], [82, 3, 1, "", "BAPG_gromov_wasserstein2"], [82, 3, 1, "", "GW_distance_estimation"], [82, 3, 1, "", "entropic_fused_gromov_barycenters"], [82, 3, 1, "", "entropic_fused_gromov_wasserstein"], [82, 3, 1, "", "entropic_fused_gromov_wasserstein2"], [82, 3, 1, "", "entropic_gromov_barycenters"], [82, 3, 1, "", "entropic_gromov_wasserstein"], [82, 3, 1, "", "entropic_gromov_wasserstein2"], [82, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein"], [82, 3, 1, "", "entropic_semirelaxed_fused_gromov_wasserstein2"], [82, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein"], [82, 3, 1, "", "entropic_semirelaxed_gromov_wasserstein2"], [82, 3, 1, "", "fgw_barycenters"], [82, 3, 1, "", "fused_gromov_wasserstein"], [82, 3, 1, "", "fused_gromov_wasserstein2"], [82, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [82, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [82, 3, 1, "", "gromov_barycenters"], [82, 3, 1, "", "gromov_wasserstein"], [82, 3, 1, "", "gromov_wasserstein2"], [82, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [82, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [82, 3, 1, "", "gwggrad"], [82, 3, 1, "", "gwloss"], [82, 3, 1, "", "init_matrix"], [82, 3, 1, "", "init_matrix_semirelaxed"], [82, 3, 1, "", "pointwise_gromov_wasserstein"], [82, 3, 1, "", "sampled_gromov_wasserstein"], [82, 3, 1, "", "semirelaxed_fused_gromov_wasserstein"], [82, 3, 1, "", "semirelaxed_fused_gromov_wasserstein2"], [82, 3, 1, "", "semirelaxed_gromov_wasserstein"], [82, 3, 1, "", "semirelaxed_gromov_wasserstein2"], [82, 3, 1, "", "solve_gromov_linesearch"], [82, 3, 1, "", "solve_semirelaxed_gromov_linesearch"], [82, 3, 1, "", "tensor_product"], [82, 3, 1, "", "update_feature_matrix"], [82, 3, 1, "", "update_kl_loss"], [82, 3, 1, "", "update_square_loss"]], "ot.lp": [[83, 3, 1, "", "barycenter"], [83, 3, 1, "", "binary_search_circle"], [83, 3, 1, "", "center_ot_dual"], [83, 3, 1, "", "check_number_threads"], [83, 3, 1, "", "dmmot_monge_1dgrid_loss"], [83, 3, 1, "", "dmmot_monge_1dgrid_optimize"], [83, 3, 1, "id0", "emd"], [83, 3, 1, "id17", "emd2"], [83, 3, 1, "", "emd2_1d"], [83, 3, 1, "", "emd_1d"], [83, 3, 1, "", "estimate_dual_null_weights"], [83, 3, 1, "id24", "free_support_barycenter"], [83, 3, 1, "id28", "generalized_free_support_barycenter"], [83, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [83, 3, 1, "", "wasserstein_1d"], [83, 3, 1, "", "wasserstein_circle"]], "ot.mapping": [[84, 3, 1, "id0", "joint_OT_mapping_kernel"], [84, 3, 1, "id8", "joint_OT_mapping_linear"], [84, 3, 1, "id11", "nearest_brenier_potential_fit"], [84, 3, 1, "id13", "nearest_brenier_potential_predict_bounds"]], "ot.optim": [[85, 3, 1, "id0", "cg"], [85, 3, 1, "id13", "gcg"], [85, 3, 1, "id17", "generic_conditional_gradient"], [85, 3, 1, "id23", "line_search_armijo"], [85, 3, 1, "id24", "semirelaxed_cg"], [85, 3, 1, "id27", "solve_1d_linesearch_quad"]], "ot.partial": [[86, 3, 1, "id0", "entropic_partial_gromov_wasserstein"], [86, 3, 1, "id17", "entropic_partial_gromov_wasserstein2"], [86, 3, 1, "id21", "entropic_partial_wasserstein"], [86, 3, 1, "id24", "gwgrad_partial"], [86, 3, 1, "id27", "gwloss_partial"], [86, 3, 1, "id28", "partial_gromov_wasserstein"], [86, 3, 1, "id31", "partial_gromov_wasserstein2"], [86, 3, 1, "id34", "partial_wasserstein"], [86, 3, 1, "id37", "partial_wasserstein2"], [86, 3, 1, "id40", "partial_wasserstein_lagrange"]], "ot.plot": [[87, 3, 1, "id0", "plot1D_mat"], [87, 3, 1, "id1", "plot2D_samples_mat"]], "ot.regpath": [[88, 3, 1, "id0", "complement_schur"], [88, 3, 1, "id12", "compute_next_removal"], [88, 3, 1, "id15", "compute_transport_plan"], [88, 3, 1, "id18", "construct_augmented_H"], [88, 3, 1, "id19", "fully_relaxed_path"], [88, 3, 1, "id21", "ot_next_gamma"], [88, 3, 1, "id23", "recast_ot_as_lasso"], [88, 3, 1, "id25", "recast_semi_relaxed_as_lasso"], [88, 3, 1, "id26", "regularization_path"], [88, 3, 1, "id28", "semi_relaxed_next_gamma"], [88, 3, 1, "id30", "semi_relaxed_path"]], "ot.sliced": [[89, 3, 1, "id0", "get_random_projections"], [89, 3, 1, "id5", "max_sliced_wasserstein_distance"], [89, 3, 1, "id7", "sliced_wasserstein_distance"], [89, 3, 1, "id9", "sliced_wasserstein_sphere"], [89, 3, 1, "id11", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[90, 1, 1, "id0", "NegEntropy"], [90, 1, 1, "id10", "Regularization"], [90, 1, 1, "id14", "SparsityConstrained"], [90, 1, 1, "id18", "SquaredL2"], [90, 3, 1, "id22", "dual_obj_grad"], [90, 3, 1, "id23", "get_plan_from_dual"], [90, 3, 1, "id24", "get_plan_from_semi_dual"], [90, 3, 1, "id25", "projection_simplex"], [90, 3, 1, "id26", "semi_dual_obj_grad"], [90, 3, 1, "id27", "smooth_ot_dual"], [90, 3, 1, "id32", "smooth_ot_semi_dual"], [90, 3, 1, "id37", "solve_dual"], [90, 3, 1, "id38", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[90, 2, 1, "id7", "Omega"], [90, 2, 1, "id8", "delta_Omega"], [90, 2, 1, "id9", "max_Omega"]], "ot.smooth.Regularization": [[90, 2, 1, "id11", "Omega"], [90, 2, 1, "id12", "delta_Omega"], [90, 2, 1, "id13", "max_Omega"]], "ot.smooth.SparsityConstrained": [[90, 2, 1, "id15", "Omega"], [90, 2, 1, "id16", "delta_Omega"], [90, 2, 1, "id17", "max_Omega"]], "ot.smooth.SquaredL2": [[90, 2, 1, "id19", "Omega"], [90, 2, 1, "id20", "delta_Omega"], [90, 2, 1, "id21", "max_Omega"]], "ot.stochastic": [[91, 3, 1, "id0", "averaged_sgd_entropic_transport"], [91, 3, 1, "id14", "batch_grad_dual"], [91, 3, 1, "id16", "c_transform_entropic"], [91, 3, 1, "id18", "coordinate_grad_semi_dual"], [91, 3, 1, "id20", "loss_dual_entropic"], [91, 3, 1, "id22", "loss_dual_quadratic"], [91, 3, 1, "id24", "plan_dual_entropic"], [91, 3, 1, "id26", "plan_dual_quadratic"], [91, 3, 1, "id28", "sag_entropic_transport"], [91, 3, 1, "id30", "sgd_entropic_regularization"], [91, 3, 1, "id32", "solve_dual_entropic"], [91, 3, 1, "id34", "solve_semi_dual_entropic"]], "ot.unbalanced": [[92, 3, 1, "id0", "barycenter_unbalanced"], [92, 3, 1, "id25", "barycenter_unbalanced_sinkhorn"], [92, 3, 1, "id29", "barycenter_unbalanced_stabilized"], [92, 3, 1, "id33", "lbfgsb_unbalanced"], [92, 3, 1, "id35", "mm_unbalanced"], [92, 3, 1, "id38", "mm_unbalanced2"], [92, 3, 1, "id40", "sinkhorn_knopp_unbalanced"], [92, 3, 1, "id44", "sinkhorn_stabilized_unbalanced"], [92, 3, 1, "id48", "sinkhorn_unbalanced"], [92, 3, 1, "id54", "sinkhorn_unbalanced2"]], "ot.utils": [[93, 1, 1, "id12", "BaseEstimator"], [93, 1, 1, "id15", "LazyTensor"], [93, 1, 1, "id16", "OTResult"], [93, 6, 1, "", "UndefinedParameter"], [93, 3, 1, "id46", "check_params"], [93, 3, 1, "id47", "check_random_state"], [93, 3, 1, "id48", "clean_zeros"], [93, 3, 1, "id49", "cost_normalization"], [93, 1, 1, "id50", "deprecated"], [93, 3, 1, "id51", "dist"], [93, 3, 1, "id52", "dist0"], [93, 3, 1, "id53", "dots"], [93, 3, 1, "id54", "euclidean_distances"], [93, 3, 1, "id55", "get_coordinate_circle"], [93, 3, 1, "id56", "get_lowrank_lazytensor"], [93, 3, 1, "id57", "get_parameter_pair"], [93, 3, 1, "id58", "is_all_finite"], [93, 3, 1, "id59", "kernel"], [93, 3, 1, "id60", "label_normalization"], [93, 3, 1, "id61", "laplacian"], [93, 3, 1, "id62", "list_to_array"], [93, 3, 1, "id63", "parmap"], [93, 3, 1, "id64", "proj_simplex"], [93, 3, 1, "id65", "projection_sparse_simplex"], [93, 3, 1, "id66", "reduce_lazytensor"], [93, 3, 1, "id67", "tic"], [93, 3, 1, "id68", "toc"], [93, 3, 1, "id69", "toq"], [93, 3, 1, "id70", "unif"]], "ot.utils.BaseEstimator": [[93, 2, 1, "id13", "get_params"], [93, 2, 1, "id14", "set_params"]], "ot.utils.OTResult": [[93, 5, 1, "id29", "a_to_b"], [93, 5, 1, "id30", "b_to_a"], [93, 5, 1, "id31", "citation"], [93, 5, 1, "id32", "lazy_plan"], [93, 5, 1, "id33", "log"], [93, 5, 1, "id34", "marginal_a"], [93, 5, 1, "id35", "marginal_b"], [93, 5, 1, "id36", "marginals"], [93, 5, 1, "id37", "plan"], [93, 5, 1, "id38", "potential_a"], [93, 5, 1, "id39", "potential_b"], [93, 5, 1, "id40", "potentials"], [93, 5, 1, "id41", "sparse_plan"], [93, 5, 1, "id42", "status"], [93, 5, 1, "id43", "value"], [93, 5, 1, "id44", "value_linear"], [93, 5, 1, "id45", "value_quad"]], "ot.weak": [[94, 3, 1, "id0", "weak_optimal_transport"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "modul": [0, 96], "main": 0, "ot": [0, 1, 5, 19, 20, 21, 22, 23, 24, 25, 26, 39, 44, 46, 52, 54, 56, 57, 58, 59, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96], "function": [0, 34, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94], "refer": [0, 89, 95, 96], "dual": [1, 5, 50, 52], "solver": [1, 32, 59, 96], "entrop": [1, 5, 11, 30, 41, 59, 68, 96], "quadrat": [1, 96], "regular": [1, 11, 23, 30, 39, 52, 59, 67, 68, 96], "pytorch": [1, 2, 3, 5, 6, 7, 8], "data": [1, 4, 5, 6, 8, 10, 11, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 35, 41, 43, 44, 46, 47, 48, 49, 53, 54, 55, 57, 58, 59, 61, 62, 64, 65, 67, 68], "gener": [1, 2, 4, 5, 6, 8, 10, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 37, 41, 43, 44, 45, 46, 47, 49, 53, 54, 55, 57, 59, 61, 62, 64, 65, 67, 68, 96], "plot": [1, 4, 5, 6, 8, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34, 41, 43, 44, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 65, 66, 67, 68, 87], "convert": [1, 5], "torch": [1, 5], "tensor": [1, 5], "estim": [1, 2, 5, 6, 24, 25, 26, 36, 47, 96], "variabl": [1, 5, 52], "plan": [1, 5, 34, 41, 52, 66], "optim": [2, 6, 19, 21, 22, 23, 27, 40, 44, 46, 47, 49, 52, 53, 55, 56, 64, 67, 68, 85, 95, 96], "gromov": [2, 30, 31, 32, 33, 34, 35, 36, 37, 39, 66, 82, 96], "wasserstein": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 17, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 43, 52, 58, 61, 62, 65, 66, 96], "distanc": [2, 6, 21, 27, 31, 32, 34, 39, 45, 47, 57, 58, 61, 66, 96], "graph": [2, 29, 30, 32, 33, 36, 37], "gw": [2, 31, 34, 96], "w": 2, "r": 2, "t": 2, "weight": [2, 6], "templat": 2, "structur": [2, 31], "commun": 2, "cluster": [2, 30, 32, 36, 37], "uniform": [2, 56, 58], "compress": 2, "slice": [3, 4, 39, 61, 62, 89], "barycent": [3, 7, 10, 11, 12, 13, 14, 15, 16, 17, 29, 35, 39, 45, 65, 96], "gradient": [3, 4], "flow": [3, 7], "anim": [3, 4, 8, 17, 67], "trajectori": [3, 4, 8], "along": [3, 4, 8], "iter": [3, 4, 8], "comput": [3, 9, 10, 12, 13, 14, 16, 17, 18, 28, 29, 30, 31, 32, 34, 35, 37, 38, 41, 43, 44, 45, 46, 50, 51, 52, 55, 57, 60, 63, 65, 66, 67, 68, 69, 96, 98], "descent": [3, 4], "spheric": [4, 62], "embed": [4, 36], "sphere": 4, "sampl": [4, 5, 8, 19, 21, 22, 23, 24, 25, 27, 34, 47, 56, 66], "continu": [5, 50], "deep": 5, "densiti": 5, "target": [5, 19, 21, 22, 23, 27], "given": 5, "sourc": [5, 6, 19, 21, 22, 23, 27], "unmix": 6, "model": [6, 8, 30, 32, 36, 37], "wrt": 6, "converg": 6, "object": 6, "reweight": 6, "distribut": [6, 14, 15, 16, 21, 26, 34, 45, 47, 49, 53, 54, 55, 61, 62, 64, 65, 66, 96], "1d": [7, 10, 11, 13, 53, 57, 64, 65], "2": [8, 19, 21, 22, 23, 27, 30, 32, 36, 37, 45, 56, 62, 97], "minibatch": 8, "gan": 8, "train": [8, 33], "visual": [8, 12, 13, 30, 31, 32, 35, 36, 37, 47, 52], "time": [9, 18, 28, 38, 51, 52, 60, 63, 69, 98], "demo": [10, 13, 17, 65], "barycentr": [10, 65], "interpol": [10, 15, 65], "exact": [11, 44, 46, 68], "lp": [11, 83], "v": [11, 27, 44], "gaussian": [11, 13, 16, 34, 66, 80], "stair": 11, "dirac": 11, "final": 11, "figur": 11, "convolut": [12, 96], "exampl": [12, 30, 34, 35, 37, 39, 50, 54, 66, 68, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96], "prepar": [12, 35], "debias": 13, "sinkhorn": [13, 15, 22, 50, 52, 53, 55, 57, 64, 96], "2d": [13, 14, 15, 34, 43, 55, 61, 66, 68], "imag": [13, 20, 24, 26], "free": [14, 15, 96], "support": [14, 15, 95, 96], "paramet": [15, 52], "inspect": 15, "empir": [15, 21, 55], "bure": 16, "defin": 16, "covari": 16, "them": [16, 19, 20, 21, 22, 23, 25, 34, 66], "project": [17, 41, 43, 61, 62], "match": [17, 30, 32, 37], "rotat": 17, "domain": [19, 21, 22, 23, 25, 26, 39, 96], "adapt": [19, 20, 21, 22, 23, 24, 25, 26, 39, 96], "instanti": [19, 20, 21, 22, 23, 25], "differ": [19, 20, 21, 23, 25, 27, 56, 57, 58, 61, 62], "transport": [19, 20, 21, 22, 23, 24, 25, 27, 31, 40, 41, 44, 46, 47, 49, 50, 52, 53, 55, 56, 64, 67, 68, 95, 96], "algorithm": [19, 20, 21, 22, 23, 25, 50, 52], "fit": [19, 20, 21, 22, 23, 25], "fig": [19, 21, 22, 23, 27], "1": [19, 21, 22, 23, 27, 36, 56, 97], "coupl": [19, 21, 22, 23, 27, 46], "color": [20, 26], "origin": [20, 26, 45], "scatter": 20, "new": [20, 71, 97], "matrix": [21, 27, 31, 49, 50, 52, 53, 54, 64], "pairwis": [21, 27], "method": [21, 27, 34, 45], "3": [21, 27, 30, 32, 36, 37, 97], "multi": 22, "shift": 22, "all": 22, "jcpot": 22, "run": 22, "oracl": 22, "known": 22, "proport": 22, "laplacian": 23, "linear": [24, 36], "map": [24, 25, 26, 52, 84, 96], "load": 24, "transform": [24, 26], "pixel": 26, "transfer": 26, "valu": 26, "otda": [27, 96], "unsupervis": 27, "semi": [27, 30, 37, 50, 67], "supervis": 27, "set": 27, "onto": 27, "us": [29, 33, 75, 76, 77, 78, 80, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 96], "fgw": [29, 31, 96], "relax": [30, 37, 67], "fuse": [30, 31, 32, 33, 36, 37, 39], "two": [30, 32, 34, 37, 66], "follow": [30, 32, 36, 37], "stochast": [30, 32, 34, 36, 37, 50, 91], "block": [30, 32, 36, 37], "diverg": [30, 37], "add": [30, 37], "node": [30, 36, 37], "featur": [30, 31, 36, 37, 97], "creat": 31, "matric": [31, 50, 56], "across": 31, "comparison": 32, "classif": 33, "tempat": 33, "base": 33, "pool": 33, "architectur": 33, "tfgw": 33, "layer": 33, "3d": [34, 66], "kernel": 34, "normal": 34, "displai": 34, "scalabl": 34, "ani": 34, "loss": [34, 49, 52, 53, 54, 57, 64], "smacof": 35, "md": 35, "dictionari": 36, "learn": [36, 47], "dataset": [36, 56, 77], "compos": 36, "from": 36, "atom": 36, "space": 36, "endow": 36, "attribut": [36, 70], "galleri": 39, "pot": [39, 48, 52, 71, 95, 96], "backend": [39, 73, 96], "other": [39, 96], "problem": [39, 50, 52], "unbalanc": [39, 64, 65, 67, 68, 92, 96], "partial": [39, 56, 66, 86, 96], "row": [40, 47], "column": [40, 47], "align": [40, 47], "co": [40, 47], "compon": 41, "analysi": [41, 43, 96], "ewca": [41, 78], "first": [41, 52, 97], "smooth": [42, 54, 90], "strongli": 42, "convex": 42, "nearest": 42, "brenier": 42, "potenti": 42, "discrimin": [43, 96], "fisher": 43, "weak": [44, 94], "an": [44, 46, 96], "solut": [44, 46], "d": 45, "dimension": 45, "via": 45, "mmot": 45, "minim": 45, "among": 45, "identifi": 45, "compar": [45, 50, 58], "both": 45, "more": 45, "than": 45, "mani": 45, "factor": [46, 79], "margin": 47, "coot": [47, 75], "respect": 47, "logo": 48, "toolbox": [48, 52, 95], "clear": 48, "background": 48, "dark": 48, "screen": 49, "screenkhorn": 49, "solv": [49, 52, 53, 54, 59, 64, 96], "discret": 50, "case": [50, 96], "result": [50, 68], "introduct": 52, "python": [52, 95], "instal": [52, 95], "import": 52, "get": 52, "help": 52, "bakeri": 52, "citi": 52, "cost": 52, "emd": [52, 53, 55, 57, 59, 96], "vari": 52, "spars": 54, "between": [55, 58, 96], "ground": 56, "metric": 56, "circl": [56, 58], "euclidean": 58, "von": 58, "mise": 58, "kappa": 58, "frobeniu": 59, "norm": 59, "seed": [61, 62], "number": [61, 62], "": 62, "mass": 64, "one": 66, "path": 67, "l2": [67, 68], "penal": 67, "fulli": 67, "regpath": [67, 88], "uot": [67, 68], "kl": 68, "code": [70, 95], "conduct": [70, 95], "our": 70, "pledg": 70, "standard": 70, "respons": 70, "scope": 70, "enforc": 70, "contribut": [71, 95], "how": [71, 96], "pull": 71, "request": 71, "checklist": 71, "file": 71, "bug": 71, "contributor": [71, 72], "tip": 71, "document": 71, "creator": 72, "maintain": 72, "acknowledg": [72, 95], "perform": 73, "class": [73, 76, 90, 93, 96], "bregman": [74, 96], "depend": [74, 95], "co_optimal_transport": 75, "co_optimal_transport2": 75, "da": 76, "basetransport": 76, "emdlaplacetransport": 76, "emdtransport": 76, "jcpottransport": 76, "lineargwtransport": 76, "lineartransport": 76, "mappingtransport": 76, "sinkhornl1l2transport": 76, "sinkhornlpl1transport": 76, "sinkhorntransport": 76, "make_1d_gauss": 77, "make_2d_samples_gauss": 77, "make_data_classif": 77, "dr": 78, "fda": 78, "wda": [78, 96], "bures_wasserstein_barycent": 80, "empirical_bures_wasserstein_map": 80, "empirical_gaussian_gromov_wasserstein_map": 80, "gnn": 81, "free_support_barycent": 83, "generalized_free_support_barycent": 83, "nearest_brenier_potential_fit": 84, "nearest_brenier_potential_predict_bound": 84, "cg": 85, "gcg": 85, "entropic_partial_gromov_wasserstein": 86, "entropic_partial_wasserstein": 86, "partial_gromov_wasserstein": 86, "partial_wasserstein": 86, "plot1d_mat": 87, "plot2d_samples_mat": 87, "compute_transport_plan": 88, "regularization_path": 88, "smooth_ot_du": 90, "loss_dual_entrop": 91, "loss_dual_quadrat": 91, "plan_dual_entrop": 91, "plan_dual_quadrat": 91, "solve_dual_entrop": 91, "solve_semi_dual_entrop": 91, "mm_unbalanc": 92, "util": 93, "dist0": 93, "proj_simplex": 93, "baseestim": 93, "except": 93, "content": 95, "cite": 95, "pip": 95, "anaconda": 95, "conda": 95, "forg": 95, "post": 95, "check": 95, "short": 95, "notebook": 95, "indic": 95, "tabl": 95, "quick": 96, "start": 96, "guid": 96, "why": 96, "when": 96, "emd2": 96, "special": 96, "sinkhorn2": 96, "group": 96, "lasso": 96, "fix": 96, "convolutional_barycenter2d": 96, "mong": 96, "extens": 96, "g": 96, "applic": 96, "multipl": 96, "cpu": 96, "gpu": 96, "work": 96, "acceler": 96, "list": 96, "compat": 96, "faq": 96, "releas": 97, "0": 97, "9": 97, "2dev": 97, "close": 97, "issu": 97, "8": 97, "7": 97, "6": 97, "5": 97, "deprec": 97, "4": 97, "v0": 97, "11": 97, "10": 97, "pre": 97}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"API and modules": [[0, "api-and-modules"]], "Main ot functions": [[0, "module-ot"]], "References:": [[0, "references"], [89, "references"], [89, "id12"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[1, "dual-ot-solvers-for-entropic-and-quadratic-regularized-ot-with-pytorch"]], "Data generation": [[1, "data-generation"], [4, "data-generation"], [5, "data-generation"], [8, "data-generation"]], "Plot data": [[1, "plot-data"], [4, "plot-data"], [5, "plot-data"], [6, "plot-data"], [8, "plot-data"], [24, "plot-data"], [25, "plot-data"], [29, "plot-data"], [31, "plot-data"], [33, "plot-data"], [41, "plot-data"], [43, "plot-data"], [55, "plot-data"], [57, "plot-data"], [58, "plot-data"], [61, "plot-data"], [62, "plot-data"], [65, "plot-data"], [67, "plot-data"]], "Convert data to torch tensors": [[1, "convert-data-to-torch-tensors"], [5, "convert-data-to-torch-tensors"]], "Estimating dual variables for entropic OT": [[1, "estimating-dual-variables-for-entropic-ot"]], "Plot the estimated entropic OT plan": [[1, "plot-the-estimated-entropic-ot-plan"]], "Estimating dual variables for quadratic OT": [[1, "estimating-dual-variables-for-quadratic-ot"]], "Plot the estimated quadratic OT plan": [[1, "plot-the-estimated-quadratic-ot-plan"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[2, "optimizing-the-gromov-wasserstein-distance-with-pytorch"]], "Graph generation": [[2, "graph-generation"]], "Optimizing GW w.r.t. the weights on a template structure": [[2, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Community clustering with uniform and estimated weights": [[2, "community-clustering-with-uniform-and-estimated-weights"]], "Graph compression with GW": [[2, "graph-compression-with-gw"]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[3, "sliced-wasserstein-barycenter-and-gradient-flow-with-pytorch"]], "Sliced Wasserstein gradient flow with Pytorch": [[3, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Animate trajectories of the gradient flow along iteration": [[3, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Compute the Sliced Wasserstein Barycenter": [[3, "compute-the-sliced-wasserstein-barycenter"]], "Animate trajectories of the barycenter along gradient descent": [[3, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[4, "spherical-sliced-wasserstein-embedding-on-sphere"]], "Gradient descent": [[4, "gradient-descent"]], "Plot trajectories of generated samples along iterations": [[4, "plot-trajectories-of-generated-samples-along-iterations"], [8, "plot-trajectories-of-generated-samples-along-iterations"]], "Animate trajectories of generated samples along iteration": [[4, "animate-trajectories-of-generated-samples-along-iteration"], [8, "animate-trajectories-of-generated-samples-along-iteration"]], "Continuous OT plan estimation with Pytorch": [[5, "continuous-ot-plan-estimation-with-pytorch"]], "Estimating deep dual variables for entropic OT": [[5, "estimating-deep-dual-variables-for-entropic-ot"]], "Plot the density on target for a given source sample": [[5, "plot-the-density-on-target-for-a-given-source-sample"]], "Wasserstein unmixing with PyTorch": [[6, "wasserstein-unmixing-with-pytorch"]], "Generate data": [[6, "generate-data"], [10, "generate-data"], [14, "generate-data"], [19, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [27, "generate-data"], [29, "generate-data"], [31, "generate-data"], [33, "generate-data"], [41, "generate-data"], [43, "generate-data"], [47, "generate-data"], [49, "generate-data"], [53, "generate-data"], [54, "generate-data"], [55, "generate-data"], [57, "generate-data"], [59, "generate-data"], [61, "generate-data"], [62, "generate-data"], [64, "generate-data"], [65, "generate-data"], [67, "generate-data"], [68, "generate-data"]], "Optimization of the model wrt the Wasserstein distance": [[6, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Estimated weights and convergence of the objective": [[6, "estimated-weights-and-convergence-of-the-objective"]], "Plotting the reweighted source distribution": [[6, "plotting-the-reweighted-source-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[7, "wasserstein-1d-flow-and-barycenter-with-pytorch"]], "Wasserstein barycenter": [[7, "wasserstein-barycenter"]], "Wasserstein 2 Minibatch GAN with PyTorch": [[8, "wasserstein-2-minibatch-gan-with-pytorch"]], "Generator Model": [[8, "generator-model"]], "Training the model": [[8, "training-the-model"]], "Generate and visualize data": [[8, "generate-and-visualize-data"]], "Computation times": [[9, "computation-times"], [18, "computation-times"], [28, "computation-times"], [38, "computation-times"], [51, "computation-times"], [60, "computation-times"], [63, "computation-times"], [69, "computation-times"], [98, "computation-times"]], "1D Wasserstein barycenter demo": [[10, "d-wasserstein-barycenter-demo"]], "Barycenter computation": [[10, "barycenter-computation"], [29, "barycenter-computation"], [35, "barycenter-computation"], [65, "barycenter-computation"]], "Barycentric interpolation": [[10, "barycentric-interpolation"], [65, "barycentric-interpolation"]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[11, "d-wasserstein-barycenter-exact-lp-vs-entropic-regularization"]], "Gaussian Data": [[11, "gaussian-data"]], "Stair Data": [[11, "stair-data"]], "Dirac Data": [[11, "dirac-data"]], "Final figure": [[11, "final-figure"]], "Convolutional Wasserstein Barycenter example": [[12, "convolutional-wasserstein-barycenter-example"]], "Data preparation": [[12, "data-preparation"], [35, "data-preparation"]], "Barycenter computation and visualization": [[12, "barycenter-computation-and-visualization"], [13, "barycenter-computation-and-visualization"]], "Debiased Sinkhorn barycenter demo": [[13, "debiased-sinkhorn-barycenter-demo"]], "Debiased barycenter of 1D Gaussians": [[13, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[13, "debiased-barycenter-of-2d-images"]], "2D free support Wasserstein barycenters of distributions": [[14, "d-free-support-wasserstein-barycenters-of-distributions"]], "Compute free support Wasserstein barycenter": [[14, "compute-free-support-wasserstein-barycenter"]], "Plot the Wasserstein barycenter": [[14, "plot-the-wasserstein-barycenter"], [14, "id1"]], "2D free support Sinkhorn barycenters of distributions": [[15, "d-free-support-sinkhorn-barycenters-of-distributions"]], "General Parameters": [[15, "general-parameters"]], "Generate Data": [[15, "generate-data"]], "Inspect generated distributions": [[15, "inspect-generated-distributions"]], "Interpolating Empirical Distributions": [[15, "interpolating-empirical-distributions"]], "Gaussian Bures-Wasserstein barycenters": [[16, "gaussian-bures-wasserstein-barycenters"]], "Define Gaussian Covariances and distributions": [[16, "define-gaussian-covariances-and-distributions"]], "Plot the distributions": [[16, "plot-the-distributions"]], "Compute Bures-Wasserstein barycenters and plot them": [[16, "compute-bures-wasserstein-barycenters-and-plot-them"]], "Generalized Wasserstein Barycenter Demo": [[17, "generalized-wasserstein-barycenter-demo"]], "Generate and plot data": [[17, "generate-and-plot-data"]], "Barycenter computation and plot": [[17, "barycenter-computation-and-plot"]], "Plotting projection matches": [[17, "plotting-projection-matches"]], "Rotation animation": [[17, "rotation-animation"]], "OT for domain adaptation": [[19, "ot-for-domain-adaptation"]], "Instantiate the different transport algorithms and fit them": [[19, "instantiate-the-different-transport-algorithms-and-fit-them"], [20, "instantiate-the-different-transport-algorithms-and-fit-them"], [21, "instantiate-the-different-transport-algorithms-and-fit-them"], [23, "instantiate-the-different-transport-algorithms-and-fit-them"], [25, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Fig 1 : plots source and target samples": [[19, "fig-1-plots-source-and-target-samples"], [22, "fig-1-plots-source-and-target-samples"], [23, "fig-1-plots-source-and-target-samples"]], "Fig 2 : plot optimal couplings and transported samples": [[19, "fig-2-plot-optimal-couplings-and-transported-samples"], [22, "fig-2-plot-optimal-couplings-and-transported-samples"], [23, "fig-2-plot-optimal-couplings-and-transported-samples"]], "OT for image color adaptation": [[20, "ot-for-image-color-adaptation"]], "Plot original image": [[20, "plot-original-image"]], "Scatter plot of colors": [[20, "scatter-plot-of-colors"]], "Plot new images": [[20, "plot-new-images"]], "OT for domain adaptation on empirical distributions": [[21, "ot-for-domain-adaptation-on-empirical-distributions"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[21, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [27, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plots optimal couplings for the different methods": [[21, "fig-2-plots-optimal-couplings-for-the-different-methods"], [27, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[21, "fig-3-plot-transported-samples"], [27, "fig-3-plot-transported-samples"]], "OT for multi-source target shift": [[22, "ot-for-multi-source-target-shift"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[22, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate JCPOT adaptation algorithm and fit it": [[22, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Run oracle transport algorithm with known proportions": [[22, "run-oracle-transport-algorithm-with-known-proportions"]], "OT with Laplacian regularization for domain adaptation": [[23, "ot-with-laplacian-regularization-for-domain-adaptation"]], "Linear OT mapping estimation": [[24, "linear-ot-mapping-estimation"]], "Estimate linear mapping and transport": [[24, "estimate-linear-mapping-and-transport"]], "Plot transported samples": [[24, "plot-transported-samples"], [25, "plot-transported-samples"]], "Load image data": [[24, "load-image-data"]], "Estimate mapping and adapt": [[24, "estimate-mapping-and-adapt"]], "Plot transformed images": [[24, "plot-transformed-images"], [26, "plot-transformed-images"]], "OT mapping estimation for domain adaptation": [[25, "ot-mapping-estimation-for-domain-adaptation"]], "OT for image color adaptation with mapping estimation": [[26, "ot-for-image-color-adaptation-with-mapping-estimation"]], "Domain adaptation for pixel distribution transfer": [[26, "domain-adaptation-for-pixel-distribution-transfer"]], "Plot original images": [[26, "plot-original-images"]], "Plot pixel values distribution": [[26, "plot-pixel-values-distribution"]], "OTDA unsupervised vs semi-supervised setting": [[27, "otda-unsupervised-vs-semi-supervised-setting"]], "Transport source samples onto target samples": [[27, "transport-source-samples-onto-target-samples"]], "Plot graphs barycenter using FGW": [[29, "plot-graphs-barycenter-using-fgw"]], "Plot Barycenter": [[29, "plot-barycenter"]], "Entropic-regularized semi-relaxed (Fused) Gromov-Wasserstein example": [[30, "entropic-regularized-semi-relaxed-fused-gromov-wasserstein-example"]], "Generate two graphs following Stochastic Block models of 2 and 3 clusters.": [[30, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [32, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"], [37, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"]], "Compute their entropic-regularized semi-relaxed Gromov-Wasserstein divergences": [[30, "compute-their-entropic-regularized-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the entropic-regularized semi-relaxed Gromov-Wasserstein matchings": [[30, "visualization-of-the-entropic-regularized-semi-relaxed-gromov-wasserstein-matchings"]], "Add node features": [[30, "add-node-features"], [37, "add-node-features"]], "Compute their semi-relaxed Fused Gromov-Wasserstein divergences": [[30, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"], [37, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"]], "Visualization of the entropic semi-relaxed Fused Gromov-Wasserstein matchings": [[30, "visualization-of-the-entropic-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Plot Fused-Gromov-Wasserstein": [[31, "plot-fused-gromov-wasserstein"]], "Create structure matrices and across-feature distance matrix": [[31, "create-structure-matrices-and-across-feature-distance-matrix"]], "Plot matrices": [[31, "plot-matrices"]], "Compute FGW/GW": [[31, "compute-fgw-gw"]], "Visualize transport matrices": [[31, "visualize-transport-matrices"]], "Comparison of Fused Gromov-Wasserstein solvers": [[32, "comparison-of-fused-gromov-wasserstein-solvers"]], "Compute their Fused Gromov-Wasserstein distances": [[32, "compute-their-fused-gromov-wasserstein-distances"]], "Visualization of the Fused Gromov-Wasserstein matchings": [[32, "visualization-of-the-fused-gromov-wasserstein-matchings"]], "Graph classification with Tempate Based Fused Gromov Wasserstein": [[33, "graph-classification-with-tempate-based-fused-gromov-wasserstein"]], "Pooling architecture using the TFGW layer": [[33, "pooling-architecture-using-the-tfgw-layer"]], "Graph classification training": [[33, "graph-classification-training"]], "Gromov-Wasserstein example": [[34, "gromov-wasserstein-example"]], "Sample two Gaussian distributions (2D and 3D)": [[34, "sample-two-gaussian-distributions-2d-and-3d"]], "Plotting the distributions": [[34, "plotting-the-distributions"]], "Compute distance kernels, normalize them and then display": [[34, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute Gromov-Wasserstein plans and distance": [[34, "compute-gromov-wasserstein-plans-and-distance"]], "Compute GW with scalable stochastic methods with any loss function": [[34, "compute-gw-with-scalable-stochastic-methods-with-any-loss-function"]], "Gromov-Wasserstein Barycenter example": [[35, "gromov-wasserstein-barycenter-example"]], "Smacof MDS": [[35, "smacof-mds"]], "Visualization": [[35, "visualization"]], "(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[36, "fused-gromov-wasserstein-linear-dictionary-learning"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[36, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Estimate the Gromov-Wasserstein dictionary from the dataset": [[36, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Visualization of the estimated dictionary atoms": [[36, "visualization-of-the-estimated-dictionary-atoms"], [36, "id1"]], "Visualization of the embedding space": [[36, "visualization-of-the-embedding-space"], [36, "id2"]], "Endow the dataset with node features": [[36, "endow-the-dataset-with-node-features"]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[36, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Semi-relaxed (Fused) Gromov-Wasserstein example": [[37, "semi-relaxed-fused-gromov-wasserstein-example"]], "Compute their semi-relaxed Gromov-Wasserstein divergences": [[37, "compute-their-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the semi-relaxed Gromov-Wasserstein matchings": [[37, "visualization-of-the-semi-relaxed-gromov-wasserstein-matchings"]], "Visualization of the semi-relaxed Fused Gromov-Wasserstein matchings": [[37, "visualization-of-the-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Examples gallery": [[39, "examples-gallery"]], "OT and regularized OT": [[39, "ot-and-regularized-ot"]], "POT backend examples": [[39, "pot-backend-examples"]], "Wasserstein barycenters": [[39, "wasserstein-barycenters"]], "Domain adaptation examples": [[39, "domain-adaptation-examples"]], "Gromov and Fused-Gromov-Wasserstein": [[39, "gromov-and-fused-gromov-wasserstein"]], "Other OT problems": [[39, "other-ot-problems"]], "Sliced Wasserstein Distance": [[39, "sliced-wasserstein-distance"]], "Unbalanced and Partial OT": [[39, "unbalanced-and-partial-ot"]], "Row and column alignments with CO-Optimal Transport": [[40, "row-and-column-alignments-with-co-optimal-transport"]], "Entropic Wasserstein Component Analysis": [[41, "entropic-wasserstein-component-analysis"]], "Compute EWCA": [[41, "compute-ewca"]], "Plot data, first component, and projected data": [[41, "plot-data-first-component-and-projected-data"]], "Plot transport plan": [[41, "plot-transport-plan"]], "Smooth and Strongly Convex Nearest Brenier Potentials": [[42, "smooth-and-strongly-convex-nearest-brenier-potentials"]], "Wasserstein Discriminant Analysis": [[43, "wasserstein-discriminant-analysis"], [96, "wasserstein-discriminant-analysis"]], "Compute Fisher Discriminant Analysis": [[43, "compute-fisher-discriminant-analysis"]], "Compute Wasserstein Discriminant Analysis": [[43, "compute-wasserstein-discriminant-analysis"]], "Plot 2D projections": [[43, "plot-2d-projections"]], "Weak Optimal Transport VS exact Optimal Transport": [[44, "weak-optimal-transport-vs-exact-optimal-transport"]], "Generate data an plot it": [[44, "generate-data-an-plot-it"], [46, "generate-data-an-plot-it"]], "Compute Weak OT and exact OT solutions": [[44, "compute-weak-ot-and-exact-ot-solutions"]], "Plot weak OT and exact OT solutions": [[44, "plot-weak-ot-and-exact-ot-solutions"]], "Computing d-dimensional Barycenters via d-MMOT": [[45, "computing-d-dimensional-barycenters-via-d-mmot"]], "Generating 2 distributions": [[45, "generating-2-distributions"]], "Minimize the distances among distributions, identify the Barycenter": [[45, "minimize-the-distances-among-distributions-identify-the-barycenter"]], "Compare Barycenters in both methods": [[45, "compare-barycenters-in-both-methods"], [45, "id1"]], "More than 2 distributions": [[45, "more-than-2-distributions"]], "Minimizing Distances Among Many Distributions": [[45, "minimizing-distances-among-many-distributions"]], "Compare with original distributions": [[45, "compare-with-original-distributions"]], "Optimal transport with factored couplings": [[46, "optimal-transport-with-factored-couplings"]], "Compute Factored OT and exact OT solutions": [[46, "compute-factored-ot-and-exact-ot-solutions"]], "Plot factored OT and exact OT solutions": [[46, "plot-factored-ot-and-exact-ot-solutions"]], "Learning sample marginal distribution with CO-Optimal Transport": [[47, "learning-sample-marginal-distribution-with-co-optimal-transport"]], "Optimize the COOT distance with respect to the sample marginal distribution": [[47, "optimize-the-coot-distance-with-respect-to-the-sample-marginal-distribution"]], "Visualizing the row and column alignments with the estimated sample marginal distribution": [[47, "visualizing-the-row-and-column-alignments-with-the-estimated-sample-marginal-distribution"]], "Logo of the POT toolbox": [[48, "logo-of-the-pot-toolbox"]], "Data for logo": [[48, "data-for-logo"]], "Plot the logo (clear background)": [[48, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[48, "plot-the-logo-dark-background"]], "Screened optimal transport (Screenkhorn)": [[49, "screened-optimal-transport-screenkhorn"]], "Plot distributions and loss matrix": [[49, "plot-distributions-and-loss-matrix"], [53, "plot-distributions-and-loss-matrix"], [54, "plot-distributions-and-loss-matrix"], [64, "plot-distributions-and-loss-matrix"]], "Solve Screenkhorn": [[49, "solve-screenkhorn"]], "Stochastic examples": [[50, "stochastic-examples"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[50, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Discrete case": [[50, "discrete-case"]], "Semi-Continuous Case": [[50, "semi-continuous-case"]], "Plot Transportation Matrices": [[50, "plot-transportation-matrices"], [50, "id2"]], "Compute the Transportation Matrix for the Dual Problem": [[50, "compute-the-transportation-matrix-for-the-dual-problem"]], "Semi-continuous case": [[50, "id1"]], "Compare the results with the Sinkhorn algorithm": [[50, "compare-the-results-with-the-sinkhorn-algorithm"]], "Introduction to Optimal Transport with Python": [[52, "introduction-to-optimal-transport-with-python"]], "POT Python Optimal Transport Toolbox": [[52, "pot-python-optimal-transport-toolbox"]], "POT installation": [[52, "pot-installation"]], "Import the toolbox": [[52, "import-the-toolbox"]], "Getting help": [[52, "getting-help"]], "First OT Problem": [[52, "first-ot-problem"]], "Plotting bakeries in the city": [[52, "plotting-bakeries-in-the-city"]], "Cost matrix": [[52, "cost-matrix"]], "Solving the OT problem with ot.emd": [[52, "solving-the-ot-problem-with-ot-emd"]], "Transportation plan visualization": [[52, "transportation-plan-visualization"]], "OT loss and dual variables": [[52, "ot-loss-and-dual-variables"]], "Regularized OT with Sinkhorn": [[52, "regularized-ot-with-sinkhorn"]], "Algorithm": [[52, "algorithm"]], "Plot the matrix and the map": [[52, "plot-the-matrix-and-the-map"]], "Varying the regularization parameter in Sinkhorn": [[52, "varying-the-regularization-parameter-in-sinkhorn"]], "Wasserstein loss and computational time": [[52, "wasserstein-loss-and-computational-time"]], "Optimal Transport for 1D distributions": [[53, "optimal-transport-for-1d-distributions"]], "Solve EMD": [[53, "solve-emd"], [59, "solve-emd"]], "Solve Sinkhorn": [[53, "solve-sinkhorn"]], "Smooth and sparse OT example": [[54, "smooth-and-sparse-ot-example"]], "Solve Smooth OT": [[54, "solve-smooth-ot"]], "Optimal Transport between 2D empirical distributions": [[55, "optimal-transport-between-2d-empirical-distributions"]], "Compute EMD": [[55, "compute-emd"]], "Compute Sinkhorn": [[55, "compute-sinkhorn"]], "Empirical Sinkhorn": [[55, "empirical-sinkhorn"]], "Optimal Transport with different ground metrics": [[56, "optimal-transport-with-different-ground-metrics"]], "Dataset 1 : uniform sampling": [[56, "dataset-1-uniform-sampling"]], "Dataset 1 : Plot OT Matrices": [[56, "dataset-1-plot-ot-matrices"]], "Dataset 2 : Partial circle": [[56, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[56, "dataset-2-plot-ot-matrices"]], "OT distances in 1D": [[57, "ot-distances-in-1d"]], "Compute EMD for the different losses": [[57, "compute-emd-for-the-different-losses"]], "Compute Sinkhorn for the different losses": [[57, "compute-sinkhorn-for-the-different-losses"]], "OT distance on the Circle": [[58, "ot-distance-on-the-circle"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[58, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Wasserstein distance between von Mises and uniform for different kappa": [[58, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Regularized OT with generic solver": [[59, "regularized-ot-with-generic-solver"]], "Solve EMD with Frobenius norm regularization": [[59, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[59, "solve-emd-with-entropic-regularization"]], "Solve EMD with Frobenius norm + entropic regularization": [[59, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Sliced Wasserstein Distance on 2D distributions": [[61, "sliced-wasserstein-distance-on-2d-distributions"]], "Sliced Wasserstein distance for different seeds and number of projections": [[61, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Plot Sliced Wasserstein Distance": [[61, "plot-sliced-wasserstein-distance"]], "Spherical Sliced Wasserstein on distributions in S^2": [[62, "spherical-sliced-wasserstein-on-distributions-in-s-2"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[62, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Plot Spherical Sliced Wasserstein": [[62, "plot-spherical-sliced-wasserstein"]], "1D Unbalanced optimal transport": [[64, "d-unbalanced-optimal-transport"]], "Solve Unbalanced Sinkhorn": [[64, "solve-unbalanced-sinkhorn"]], "plot the transported mass": [[64, "plot-the-transported-mass"]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[65, "d-wasserstein-barycenter-demo-for-unbalanced-distributions"]], "Partial Wasserstein and Gromov-Wasserstein example": [[66, "partial-wasserstein-and-gromov-wasserstein-example"]], "Sample two 2D Gaussian distributions and plot them": [[66, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Compute partial Wasserstein plans and distance": [[66, "compute-partial-wasserstein-plans-and-distance"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[66, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Compute partial Gromov-Wasserstein plans and distance": [[66, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Regularization path of l2-penalized unbalanced optimal transport": [[67, "regularization-path-of-l2-penalized-unbalanced-optimal-transport"]], "Compute semi-relaxed and fully relaxed regularization paths": [[67, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Plot the regularization path": [[67, "plot-the-regularization-path"]], "Animation of the regpath for UOT l2": [[67, "animation-of-the-regpath-for-uot-l2"]], "Plot the semi-relaxed regularization path": [[67, "plot-the-semi-relaxed-regularization-path"]], "Animation of the regpath for semi-relaxed UOT l2": [[67, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "2D examples of exact and entropic unbalanced optimal transport": [[68, "d-examples-of-exact-and-entropic-unbalanced-optimal-transport"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[68, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Plot the results": [[68, "plot-the-results"]], "Code of conduct": [[70, "code-of-conduct"]], "Our Pledge": [[70, "our-pledge"]], "Our Standards": [[70, "our-standards"]], "Our Responsibilities": [[70, "our-responsibilities"]], "Scope": [[70, "scope"]], "Enforcement": [[70, "enforcement"]], "Attribution": [[70, "attribution"]], "Contributing to POT": [[71, "contributing-to-pot"]], "How to contribute": [[71, "how-to-contribute"]], "Pull Request Checklist": [[71, "pull-request-checklist"]], "Filing bugs": [[71, "filing-bugs"]], "New contributor tips": [[71, "new-contributor-tips"]], "Documentation": [[71, "documentation"]], "Contributors": [[72, "contributors"], [72, "contributors"]], "Creators and Maintainers": [[72, "creators-and-maintainers"]], "Acknowledgments": [[72, "acknowledgments"]], "ot.backend": [[73, "module-ot.backend"]], "Performance": [[73, "performance"]], "Functions": [[73, "functions"], [75, "functions"], [76, "functions"], [77, "functions"], [78, "functions"], [79, "functions"], [80, "functions"], [83, "functions"], [84, "functions"], [85, "functions"], [86, "functions"], [87, "functions"], [88, "functions"], [89, "functions"], [90, "functions"], [91, "functions"], [92, "functions"], [93, "functions"], [94, "functions"]], "Classes": [[73, "classes"], [76, "classes"], [90, "classes"], [93, "classes"]], "ot.bregman": [[74, "module-ot.bregman"]], "Dependency": [[74, null]], "ot.coot": [[75, "module-ot.coot"]], "Examples using ot.coot.co_optimal_transport": [[75, "examples-using-ot-coot-co-optimal-transport"]], "Examples using ot.coot.co_optimal_transport2": [[75, "examples-using-ot-coot-co-optimal-transport2"]], "ot.da": [[76, "module-ot.da"]], "Examples using ot.da.BaseTransport": [[76, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[76, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[76, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[76, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearGWTransport": [[76, "examples-using-ot-da-lineargwtransport"]], "Examples using ot.da.LinearTransport": [[76, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[76, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[76, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[76, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[76, "examples-using-ot-da-sinkhorntransport"]], "ot.datasets": [[77, "module-ot.datasets"]], "Examples using ot.datasets.make_1D_gauss": [[77, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[77, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[77, "examples-using-ot-datasets-make-data-classif"]], "ot.dr": [[78, "module-ot.dr"]], "Examples using ot.dr.ewca": [[78, "examples-using-ot-dr-ewca"]], "Examples using ot.dr.fda": [[78, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[78, "examples-using-ot-dr-wda"]], "ot.factored": [[79, "module-ot.factored"]], "ot.gaussian": [[80, "module-ot.gaussian"]], "Examples using ot.gaussian.bures_wasserstein_barycenter": [[80, "examples-using-ot-gaussian-bures-wasserstein-barycenter"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[80, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "Examples using ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping": [[80, "examples-using-ot-gaussian-empirical-gaussian-gromov-wasserstein-mapping"]], "ot.gnn": [[81, "module-ot.gnn"]], "ot.gromov": [[82, "module-ot.gromov"]], "ot.lp": [[83, "module-ot.lp"]], "Examples using ot.lp.free_support_barycenter": [[83, "examples-using-ot-lp-free-support-barycenter"]], "Examples using ot.lp.generalized_free_support_barycenter": [[83, "examples-using-ot-lp-generalized-free-support-barycenter"]], "ot.mapping": [[84, "module-ot.mapping"]], "Examples using ot.mapping.nearest_brenier_potential_fit": [[84, "examples-using-ot-mapping-nearest-brenier-potential-fit"]], "Examples using ot.mapping.nearest_brenier_potential_predict_bounds": [[84, "examples-using-ot-mapping-nearest-brenier-potential-predict-bounds"]], "ot.optim": [[85, "module-ot.optim"]], "Examples using ot.optim.cg": [[85, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[85, "examples-using-ot-optim-gcg"]], "ot.partial": [[86, "module-ot.partial"]], "Examples using ot.partial.entropic_partial_gromov_wasserstein": [[86, "examples-using-ot-partial-entropic-partial-gromov-wasserstein"]], "Examples using ot.partial.entropic_partial_wasserstein": [[86, "examples-using-ot-partial-entropic-partial-wasserstein"]], "Examples using ot.partial.partial_gromov_wasserstein": [[86, "examples-using-ot-partial-partial-gromov-wasserstein"]], "Examples using ot.partial.partial_wasserstein": [[86, "examples-using-ot-partial-partial-wasserstein"]], "ot.plot": [[87, "module-ot.plot"]], "Examples using ot.plot.plot1D_mat": [[87, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[87, "examples-using-ot-plot-plot2d-samples-mat"]], "ot.regpath": [[88, "module-ot.regpath"]], "Examples using ot.regpath.compute_transport_plan": [[88, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[88, "examples-using-ot-regpath-regularization-path"]], "ot.sliced": [[89, "module-ot.sliced"]], "ot.smooth": [[90, "module-ot.smooth"]], "Examples using ot.smooth.smooth_ot_dual": [[90, "examples-using-ot-smooth-smooth-ot-dual"]], "ot.stochastic": [[91, "module-ot.stochastic"]], "Examples using ot.stochastic.loss_dual_entropic": [[91, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[91, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[91, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[91, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[91, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[91, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "ot.unbalanced": [[92, "module-ot.unbalanced"]], "Examples using ot.unbalanced.mm_unbalanced": [[92, "examples-using-ot-unbalanced-mm-unbalanced"]], "ot.utils": [[93, "module-ot.utils"]], "Examples using ot.utils.dist0": [[93, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_simplex": [[93, "examples-using-ot-utils-proj-simplex"]], "Examples using ot.utils.BaseEstimator": [[93, "examples-using-ot-utils-baseestimator"]], "Exceptions": [[93, "exceptions"]], "ot.weak": [[94, "module-ot.weak"]], "POT: Python Optimal Transport": [[95, "pot-python-optimal-transport"], [95, "pot-python-optimal-transport"]], "Contents": [[95, "contents"]], "Using and citing the toolbox": [[95, "using-and-citing-the-toolbox"]], "Installation": [[95, "installation"]], "Pip installation": [[95, "pip-installation"]], "Anaconda installation with conda-forge": [[95, "anaconda-installation-with-conda-forge"]], "Post installation check": [[95, "post-installation-check"]], "Dependencies": [[95, "dependencies"]], "Examples": [[95, "examples"]], "Short examples": [[95, "short-examples"]], "Examples and Notebooks": [[95, "examples-and-notebooks"]], "Acknowledgements": [[95, "acknowledgements"]], "Contributions and code of conduct": [[95, "contributions-and-code-of-conduct"]], "Support": [[95, "support"]], "References": [[95, "references"], [96, "references"]], "Indices and tables": [[95, "indices-and-tables"]], "Quick start guide": [[96, "quick-start-guide"]], "Why Optimal Transport ?": [[96, "why-optimal-transport"]], "When to use OT": [[96, "when-to-use-ot"]], "Wasserstein distance between distributions": [[96, "wasserstein-distance-between-distributions"]], "OT for mapping estimation": [[96, "ot-for-mapping-estimation"]], "When to use POT": [[96, "when-to-use-pot"]], "When not to use POT": [[96, "when-not-to-use-pot"]], "Optimal transport and Wasserstein distance": [[96, "optimal-transport-and-wasserstein-distance"]], "Solving optimal transport": [[96, "solving-optimal-transport"]], "Examples of use for ot.emd": [[96, "examples-of-use-for-ot-emd"]], "Computing Wasserstein distance": [[96, "computing-wasserstein-distance"]], "Examples of use for ot.emd2": [[96, "examples-of-use-for-ot-emd2"]], "Special cases": [[96, "special-cases"]], "Regularized Optimal Transport": [[96, "regularized-optimal-transport"]], "Entropic regularized OT": [[96, "entropic-regularized-ot"]], "Examples of use for ot.sinkhorn": [[96, "examples-of-use-for-ot-sinkhorn"]], "Examples of use for ot.sinkhorn2": [[96, "examples-of-use-for-ot-sinkhorn2"]], "Other regularizations": [[96, "other-regularizations"]], "Quadratic regularization": [[96, "quadratic-regularization"]], "Examples of use of quadratic regularization": [[96, "examples-of-use-of-quadratic-regularization"]], "Group Lasso regularization": [[96, "group-lasso-regularization"]], "Examples of group Lasso regularization": [[96, "examples-of-group-lasso-regularization"]], "Generic solvers": [[96, "generic-solvers"]], "Examples of the generic solvers": [[96, "examples-of-the-generic-solvers"]], "Wasserstein Barycenters": [[96, "wasserstein-barycenters"]], "Barycenters with fixed support": [[96, "barycenters-with-fixed-support"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[96, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[96, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Barycenters with free support": [[96, "barycenters-with-free-support"]], "Examples of free support barycenter estimation": [[96, "examples-of-free-support-barycenter-estimation"]], "Monge mapping and Domain adaptation": [[96, "monge-mapping-and-domain-adaptation"]], "Monge Mapping estimation": [[96, "monge-mapping-estimation"]], "Domain adaptation classes": [[96, "domain-adaptation-classes"]], "Examples of the use of OTDA classes": [[96, "examples-of-the-use-of-otda-classes"]], "Unbalanced and partial OT": [[96, "unbalanced-and-partial-ot"]], "Unbalanced optimal transport": [[96, "unbalanced-optimal-transport"]], "Examples of Unbalanced OT": [[96, "examples-of-unbalanced-ot"]], "Unbalanced Barycenters": [[96, "unbalanced-barycenters"]], "Examples of Unbalanced OT barycenters": [[96, "examples-of-unbalanced-ot-barycenters"]], "Partial optimal transport": [[96, "partial-optimal-transport"]], "Examples of Partial OT": [[96, "examples-of-partial-ot"]], "Gromov Wasserstein and extensions": [[96, "gromov-wasserstein-and-extensions"]], "Gromov Wasserstein(GW)": [[96, "gromov-wasserstein-gw"]], "Examples of computation of GW, regularized G and FGW": [[96, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Gromov Wasserstein barycenters": [[96, "gromov-wasserstein-barycenters"]], "Examples of GW, regularized G and FGW barycenters": [[96, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Other applications": [[96, "other-applications"]], "Examples of the use of WDA": [[96, "examples-of-the-use-of-wda"]], "Solving OT with Multiple backends on CPU/GPU": [[96, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "How it works": [[96, "how-it-works"]], "GPU acceleration": [[96, "gpu-acceleration"]], "List of compatible Backends": [[96, "list-of-compatible-backends"]], "List of compatible modules": [[96, "list-of-compatible-modules"]], "FAQ": [[96, "faq"]], "Releases": [[97, "releases"]], "0.9.2dev": [[97, "dev"]], "New features": [[97, "new-features"], [97, "id2"], [97, "id5"], [97, "id10"], [97, "id13"]], "Closed issues": [[97, "closed-issues"], [97, "id3"], [97, "id6"], [97, "id8"], [97, "id11"], [97, "id14"], [97, "id16"], [97, "id19"], [97, "id22"], [97, "id25"]], "0.9.1": [[97, "id1"]], "0.8.2": [[97, "id4"]], "0.8.1.0": [[97, "id7"]], "0.8.1": [[97, "id9"]], "0.8.0": [[97, "id12"]], "0.7.0": [[97, "id15"]], "Features": [[97, "features"], [97, "id18"], [97, "id21"], [97, "id24"]], "0.6.0": [[97, "id17"]], "0.5.0": [[97, "id20"]], "Deprecation": [[97, "deprecation"]], "0.4": [[97, "id23"]], "0.3.1": [[97, "id26"]], "0.3": [[97, "id27"]], "V0.2": [[97, "v0-2"]], "0.1.11": [[97, "id28"]], "0.1.10": [[97, "id29"]], "0.1.9": [[97, "id30"]], "0.1.7": [[97, "id31"]], "0.1.3": [[97, "id32"]], "First pre-release": [[97, "first-pre-release"]]}, "indexentries": {"barycenter() (in module ot)": [[0, "ot.barycenter"]], "barycenter_unbalanced() (in module ot)": [[0, "ot.barycenter_unbalanced"]], "binary_search_circle() (in module ot)": [[0, "ot.binary_search_circle"]], "dist() (in module ot)": [[0, "ot.dist"]], "emd() (in module ot)": [[0, "ot.emd"]], "emd2() (in module ot)": [[0, "ot.emd2"]], "emd2_1d() (in module ot)": [[0, "ot.emd2_1d"]], "emd_1d() (in module ot)": [[0, "ot.emd_1d"]], "factored_optimal_transport() (in module ot)": [[0, "ot.factored_optimal_transport"]], "fused_gromov_wasserstein() (in module ot)": [[0, "ot.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot)": [[0, "ot.fused_gromov_wasserstein2"]], "gromov_barycenters() (in module ot)": [[0, "ot.gromov_barycenters"]], "gromov_wasserstein() (in module ot)": [[0, "ot.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot)": [[0, "ot.gromov_wasserstein2"]], "max_sliced_wasserstein_distance() (in module ot)": [[0, "ot.max_sliced_wasserstein_distance"]], "module": [[0, "module-ot"], [73, "module-ot.backend"], [74, "module-ot.bregman"], [75, "module-ot.coot"], [76, "module-ot.da"], [77, "module-ot.datasets"], [78, "module-ot.dr"], [79, "module-ot.factored"], [80, "module-ot.gaussian"], [81, "module-ot.gnn"], [82, "module-ot.gromov"], [83, "module-ot.lp"], [84, "module-ot.mapping"], [85, "module-ot.optim"], [86, "module-ot.partial"], [87, "module-ot.plot"], [88, "module-ot.regpath"], [89, "module-ot.sliced"], [90, "module-ot.smooth"], [91, "module-ot.stochastic"], [92, "module-ot.unbalanced"], [93, "module-ot.utils"], [94, "module-ot.weak"]], "ot": [[0, "module-ot"]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[0, "ot.semidiscrete_wasserstein2_unif_circle"]], "sinkhorn() (in module ot)": [[0, "ot.sinkhorn"]], "sinkhorn2() (in module ot)": [[0, "ot.sinkhorn2"]], "sinkhorn_lpl1_mm() (in module ot)": [[0, "ot.sinkhorn_lpl1_mm"]], "sinkhorn_unbalanced() (in module ot)": [[0, "ot.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot)": [[0, "ot.sinkhorn_unbalanced2"]], "sliced_wasserstein_distance() (in module ot)": [[0, "ot.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot)": [[0, "ot.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot)": [[0, "ot.sliced_wasserstein_sphere_unif"]], "solve() (in module ot)": [[0, "ot.solve"]], "solve_gromov() (in module ot)": [[0, "ot.solve_gromov"]], "solve_sample() (in module ot)": [[0, "ot.solve_sample"]], "tic() (in module ot)": [[0, "ot.tic"]], "toc() (in module ot)": [[0, "ot.toc"]], "toq() (in module ot)": [[0, "ot.toq"]], "unif() (in module ot)": [[0, "ot.unif"]], "wasserstein_1d() (in module ot)": [[0, "ot.wasserstein_1d"]], "wasserstein_circle() (in module ot)": [[0, "ot.wasserstein_circle"]], "weak_optimal_transport() (in module ot)": [[0, "ot.weak_optimal_transport"]], "backend (class in ot.backend)": [[73, "id0"], [73, "ot.backend.Backend"]], "cupybackend (class in ot.backend)": [[73, "id83"], [73, "ot.backend.CupyBackend"]], "jaxbackend (class in ot.backend)": [[73, "id164"], [73, "ot.backend.JaxBackend"]], "numpybackend (class in ot.backend)": [[73, "id245"], [73, "ot.backend.NumpyBackend"]], "tensorflowbackend (class in ot.backend)": [[73, "id326"], [73, "ot.backend.TensorflowBackend"]], "torchbackend (class in ot.backend)": [[73, "id407"], [73, "ot.backend.TorchBackend"]], "abs() (ot.backend.backend method)": [[73, "id1"], [73, "ot.backend.Backend.abs"]], "abs() (ot.backend.cupybackend method)": [[73, "id84"], [73, "ot.backend.CupyBackend.abs"]], "abs() (ot.backend.jaxbackend method)": [[73, "id165"], [73, "ot.backend.JaxBackend.abs"]], "abs() (ot.backend.numpybackend method)": [[73, "id246"], [73, "ot.backend.NumpyBackend.abs"]], "abs() (ot.backend.tensorflowbackend method)": [[73, "id327"], [73, "ot.backend.TensorflowBackend.abs"]], "abs() (ot.backend.torchbackend method)": [[73, "id408"], [73, "ot.backend.TorchBackend.abs"]], "allclose() (ot.backend.backend method)": [[73, "id2"], [73, "ot.backend.Backend.allclose"]], "allclose() (ot.backend.cupybackend method)": [[73, "id85"], [73, "ot.backend.CupyBackend.allclose"]], "allclose() (ot.backend.jaxbackend method)": [[73, "id166"], [73, "ot.backend.JaxBackend.allclose"]], "allclose() (ot.backend.numpybackend method)": [[73, "id247"], [73, "ot.backend.NumpyBackend.allclose"]], "allclose() (ot.backend.tensorflowbackend method)": [[73, "id328"], [73, "ot.backend.TensorflowBackend.allclose"]], "allclose() (ot.backend.torchbackend method)": [[73, "id409"], [73, "ot.backend.TorchBackend.allclose"]], "any() (ot.backend.backend method)": [[73, "id3"], [73, "ot.backend.Backend.any"]], "any() (ot.backend.cupybackend method)": [[73, "id86"], [73, "ot.backend.CupyBackend.any"]], "any() (ot.backend.jaxbackend method)": [[73, "id167"], [73, "ot.backend.JaxBackend.any"]], "any() (ot.backend.numpybackend method)": [[73, "id248"], [73, "ot.backend.NumpyBackend.any"]], "any() (ot.backend.tensorflowbackend method)": [[73, "id329"], [73, "ot.backend.TensorflowBackend.any"]], "any() (ot.backend.torchbackend method)": [[73, "id410"], [73, "ot.backend.TorchBackend.any"]], "arange() (ot.backend.backend method)": [[73, "id4"], [73, "ot.backend.Backend.arange"]], "arange() (ot.backend.cupybackend method)": [[73, "id87"], [73, "ot.backend.CupyBackend.arange"]], "arange() (ot.backend.jaxbackend method)": [[73, "id168"], [73, "ot.backend.JaxBackend.arange"]], "arange() (ot.backend.numpybackend method)": [[73, "id249"], [73, "ot.backend.NumpyBackend.arange"]], "arange() (ot.backend.tensorflowbackend method)": [[73, "id330"], [73, "ot.backend.TensorflowBackend.arange"]], "arange() (ot.backend.torchbackend method)": [[73, "id411"], [73, "ot.backend.TorchBackend.arange"]], "argmax() (ot.backend.backend method)": [[73, "id5"], [73, "ot.backend.Backend.argmax"]], "argmax() (ot.backend.cupybackend method)": [[73, "id88"], [73, "ot.backend.CupyBackend.argmax"]], "argmax() (ot.backend.jaxbackend method)": [[73, "id169"], [73, "ot.backend.JaxBackend.argmax"]], "argmax() (ot.backend.numpybackend method)": [[73, "id250"], [73, "ot.backend.NumpyBackend.argmax"]], "argmax() (ot.backend.tensorflowbackend method)": [[73, "id331"], [73, "ot.backend.TensorflowBackend.argmax"]], "argmax() (ot.backend.torchbackend method)": [[73, "id412"], [73, "ot.backend.TorchBackend.argmax"]], "argmin() (ot.backend.backend method)": [[73, "id6"], [73, "ot.backend.Backend.argmin"]], "argmin() (ot.backend.cupybackend method)": [[73, "id89"], [73, "ot.backend.CupyBackend.argmin"]], "argmin() (ot.backend.jaxbackend method)": [[73, "id170"], [73, "ot.backend.JaxBackend.argmin"]], "argmin() (ot.backend.numpybackend method)": [[73, "id251"], [73, "ot.backend.NumpyBackend.argmin"]], "argmin() (ot.backend.tensorflowbackend method)": [[73, "id332"], [73, "ot.backend.TensorflowBackend.argmin"]], "argmin() (ot.backend.torchbackend method)": [[73, "id413"], [73, "ot.backend.TorchBackend.argmin"]], "argsort() (ot.backend.backend method)": [[73, "id7"], [73, "ot.backend.Backend.argsort"]], "argsort() (ot.backend.cupybackend method)": [[73, "id90"], [73, "ot.backend.CupyBackend.argsort"]], "argsort() (ot.backend.jaxbackend method)": [[73, "id171"], [73, "ot.backend.JaxBackend.argsort"]], "argsort() (ot.backend.numpybackend method)": [[73, "id252"], [73, "ot.backend.NumpyBackend.argsort"]], "argsort() (ot.backend.tensorflowbackend method)": [[73, "id333"], [73, "ot.backend.TensorflowBackend.argsort"]], "argsort() (ot.backend.torchbackend method)": [[73, "id414"], [73, "ot.backend.TorchBackend.argsort"]], "array_equal() (ot.backend.backend method)": [[73, "id8"], [73, "ot.backend.Backend.array_equal"]], "array_equal() (ot.backend.cupybackend method)": [[73, "id91"], [73, "ot.backend.CupyBackend.array_equal"]], "array_equal() (ot.backend.jaxbackend method)": [[73, "id172"], [73, "ot.backend.JaxBackend.array_equal"]], "array_equal() (ot.backend.numpybackend method)": [[73, "id253"], [73, "ot.backend.NumpyBackend.array_equal"]], "array_equal() (ot.backend.tensorflowbackend method)": [[73, "id334"], [73, "ot.backend.TensorflowBackend.array_equal"]], "array_equal() (ot.backend.torchbackend method)": [[73, "id415"], [73, "ot.backend.TorchBackend.array_equal"]], "assert_same_dtype_device() (ot.backend.backend method)": [[73, "id9"], [73, "ot.backend.Backend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[73, "id92"], [73, "ot.backend.CupyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[73, "id173"], [73, "ot.backend.JaxBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[73, "id254"], [73, "ot.backend.NumpyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[73, "id335"], [73, "ot.backend.TensorflowBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[73, "id416"], [73, "ot.backend.TorchBackend.assert_same_dtype_device"]], "atan2() (ot.backend.backend method)": [[73, "id10"], [73, "ot.backend.Backend.atan2"]], "atan2() (ot.backend.cupybackend method)": [[73, "id93"], [73, "ot.backend.CupyBackend.atan2"]], "atan2() (ot.backend.jaxbackend method)": [[73, "id174"], [73, "ot.backend.JaxBackend.atan2"]], "atan2() (ot.backend.numpybackend method)": [[73, "id255"], [73, "ot.backend.NumpyBackend.atan2"]], "atan2() (ot.backend.tensorflowbackend method)": [[73, "id336"], [73, "ot.backend.TensorflowBackend.atan2"]], "atan2() (ot.backend.torchbackend method)": [[73, "id417"], [73, "ot.backend.TorchBackend.atan2"]], "bitsize() (ot.backend.backend method)": [[73, "id11"], [73, "ot.backend.Backend.bitsize"]], "bitsize() (ot.backend.cupybackend method)": [[73, "id94"], [73, "ot.backend.CupyBackend.bitsize"]], "bitsize() (ot.backend.jaxbackend method)": [[73, "id175"], [73, "ot.backend.JaxBackend.bitsize"]], "bitsize() (ot.backend.numpybackend method)": [[73, "id256"], [73, "ot.backend.NumpyBackend.bitsize"]], "bitsize() (ot.backend.tensorflowbackend method)": [[73, "id337"], [73, "ot.backend.TensorflowBackend.bitsize"]], "bitsize() (ot.backend.torchbackend method)": [[73, "id418"], [73, "ot.backend.TorchBackend.bitsize"]], "clip() (ot.backend.backend method)": [[73, "id12"], [73, "ot.backend.Backend.clip"]], "clip() (ot.backend.cupybackend method)": [[73, "id95"], [73, "ot.backend.CupyBackend.clip"]], "clip() (ot.backend.jaxbackend method)": [[73, "id176"], [73, "ot.backend.JaxBackend.clip"]], "clip() (ot.backend.numpybackend method)": [[73, "id257"], [73, "ot.backend.NumpyBackend.clip"]], "clip() (ot.backend.tensorflowbackend method)": [[73, "id338"], [73, "ot.backend.TensorflowBackend.clip"]], "clip() (ot.backend.torchbackend method)": [[73, "id419"], [73, "ot.backend.TorchBackend.clip"]], "concatenate() (ot.backend.backend method)": [[73, "id13"], [73, "ot.backend.Backend.concatenate"]], "concatenate() (ot.backend.cupybackend method)": [[73, "id96"], [73, "ot.backend.CupyBackend.concatenate"]], "concatenate() (ot.backend.jaxbackend method)": [[73, "id177"], [73, "ot.backend.JaxBackend.concatenate"]], "concatenate() (ot.backend.numpybackend method)": [[73, "id258"], [73, "ot.backend.NumpyBackend.concatenate"]], "concatenate() (ot.backend.tensorflowbackend method)": [[73, "id339"], [73, "ot.backend.TensorflowBackend.concatenate"]], "concatenate() (ot.backend.torchbackend method)": [[73, "id420"], [73, "ot.backend.TorchBackend.concatenate"]], "coo_matrix() (ot.backend.backend method)": [[73, "id14"], [73, "ot.backend.Backend.coo_matrix"]], "coo_matrix() (ot.backend.cupybackend method)": [[73, "id97"], [73, "ot.backend.CupyBackend.coo_matrix"]], "coo_matrix() (ot.backend.jaxbackend method)": [[73, "id178"], [73, "ot.backend.JaxBackend.coo_matrix"]], "coo_matrix() (ot.backend.numpybackend method)": [[73, "id259"], [73, "ot.backend.NumpyBackend.coo_matrix"]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[73, "id340"], [73, "ot.backend.TensorflowBackend.coo_matrix"]], "coo_matrix() (ot.backend.torchbackend method)": [[73, "id421"], [73, "ot.backend.TorchBackend.coo_matrix"]], "copy() (ot.backend.backend method)": [[73, "id15"], [73, "ot.backend.Backend.copy"]], "copy() (ot.backend.cupybackend method)": [[73, "id98"], [73, "ot.backend.CupyBackend.copy"]], "copy() (ot.backend.jaxbackend method)": [[73, "id179"], [73, "ot.backend.JaxBackend.copy"]], "copy() (ot.backend.numpybackend method)": [[73, "id260"], [73, "ot.backend.NumpyBackend.copy"]], "copy() (ot.backend.tensorflowbackend method)": [[73, "id341"], [73, "ot.backend.TensorflowBackend.copy"]], "copy() (ot.backend.torchbackend method)": [[73, "id422"], [73, "ot.backend.TorchBackend.copy"]], "cumsum() (ot.backend.backend method)": [[73, "id16"], [73, "ot.backend.Backend.cumsum"]], "cumsum() (ot.backend.cupybackend method)": [[73, "id99"], [73, "ot.backend.CupyBackend.cumsum"]], "cumsum() (ot.backend.jaxbackend method)": [[73, "id180"], [73, "ot.backend.JaxBackend.cumsum"]], "cumsum() (ot.backend.numpybackend method)": [[73, "id261"], [73, "ot.backend.NumpyBackend.cumsum"]], "cumsum() (ot.backend.tensorflowbackend method)": [[73, "id342"], [73, "ot.backend.TensorflowBackend.cumsum"]], "cumsum() (ot.backend.torchbackend method)": [[73, "id423"], [73, "ot.backend.TorchBackend.cumsum"]], "detach() (ot.backend.backend method)": [[73, "id17"], [73, "ot.backend.Backend.detach"]], "detach() (ot.backend.cupybackend method)": [[73, "id100"], [73, "ot.backend.CupyBackend.detach"]], "detach() (ot.backend.jaxbackend method)": [[73, "id181"], [73, "ot.backend.JaxBackend.detach"]], "detach() (ot.backend.numpybackend method)": [[73, "id262"], [73, "ot.backend.NumpyBackend.detach"]], "detach() (ot.backend.tensorflowbackend method)": [[73, "id343"], [73, "ot.backend.TensorflowBackend.detach"]], "detach() (ot.backend.torchbackend method)": [[73, "id424"], [73, "ot.backend.TorchBackend.detach"]], "device_type() (ot.backend.backend method)": [[73, "id18"], [73, "ot.backend.Backend.device_type"]], "device_type() (ot.backend.cupybackend method)": [[73, "id101"], [73, "ot.backend.CupyBackend.device_type"]], "device_type() (ot.backend.jaxbackend method)": [[73, "id182"], [73, "ot.backend.JaxBackend.device_type"]], "device_type() (ot.backend.numpybackend method)": [[73, "id263"], [73, "ot.backend.NumpyBackend.device_type"]], "device_type() (ot.backend.tensorflowbackend method)": [[73, "id344"], [73, "ot.backend.TensorflowBackend.device_type"]], "device_type() (ot.backend.torchbackend method)": [[73, "id425"], [73, "ot.backend.TorchBackend.device_type"]], "diag() (ot.backend.backend method)": [[73, "id19"], [73, "ot.backend.Backend.diag"]], "diag() (ot.backend.cupybackend method)": [[73, "id102"], [73, "ot.backend.CupyBackend.diag"]], "diag() (ot.backend.jaxbackend method)": [[73, "id183"], [73, "ot.backend.JaxBackend.diag"]], "diag() (ot.backend.numpybackend method)": [[73, "id264"], [73, "ot.backend.NumpyBackend.diag"]], "diag() (ot.backend.tensorflowbackend method)": [[73, "id345"], [73, "ot.backend.TensorflowBackend.diag"]], "diag() (ot.backend.torchbackend method)": [[73, "id426"], [73, "ot.backend.TorchBackend.diag"]], "dot() (ot.backend.backend method)": [[73, "id20"], [73, "ot.backend.Backend.dot"]], "dot() (ot.backend.cupybackend method)": [[73, "id103"], [73, "ot.backend.CupyBackend.dot"]], "dot() (ot.backend.jaxbackend method)": [[73, "id184"], [73, "ot.backend.JaxBackend.dot"]], "dot() (ot.backend.numpybackend method)": [[73, "id265"], [73, "ot.backend.NumpyBackend.dot"]], "dot() (ot.backend.tensorflowbackend method)": [[73, "id346"], [73, "ot.backend.TensorflowBackend.dot"]], "dot() (ot.backend.torchbackend method)": [[73, "id427"], [73, "ot.backend.TorchBackend.dot"]], "dtype_device() (ot.backend.backend method)": [[73, "id21"], [73, "ot.backend.Backend.dtype_device"]], "dtype_device() (ot.backend.cupybackend method)": [[73, "id104"], [73, "ot.backend.CupyBackend.dtype_device"]], "dtype_device() (ot.backend.jaxbackend method)": [[73, "id185"], [73, "ot.backend.JaxBackend.dtype_device"]], "dtype_device() (ot.backend.numpybackend method)": [[73, "id266"], [73, "ot.backend.NumpyBackend.dtype_device"]], "dtype_device() (ot.backend.tensorflowbackend method)": [[73, "id347"], [73, "ot.backend.TensorflowBackend.dtype_device"]], "dtype_device() (ot.backend.torchbackend method)": [[73, "id428"], [73, "ot.backend.TorchBackend.dtype_device"]], "eigh() (ot.backend.backend method)": [[73, "id22"], [73, "ot.backend.Backend.eigh"]], "eigh() (ot.backend.cupybackend method)": [[73, "id105"], [73, "ot.backend.CupyBackend.eigh"]], "eigh() (ot.backend.jaxbackend method)": [[73, "id186"], [73, "ot.backend.JaxBackend.eigh"]], "eigh() (ot.backend.numpybackend method)": [[73, "id267"], [73, "ot.backend.NumpyBackend.eigh"]], "eigh() (ot.backend.tensorflowbackend method)": [[73, "id348"], [73, "ot.backend.TensorflowBackend.eigh"]], "eigh() (ot.backend.torchbackend method)": [[73, "id429"], [73, "ot.backend.TorchBackend.eigh"]], "einsum() (ot.backend.backend method)": [[73, "id23"], [73, "ot.backend.Backend.einsum"]], "einsum() (ot.backend.cupybackend method)": [[73, "id106"], [73, "ot.backend.CupyBackend.einsum"]], "einsum() (ot.backend.jaxbackend method)": [[73, "id187"], [73, "ot.backend.JaxBackend.einsum"]], "einsum() (ot.backend.numpybackend method)": [[73, "id268"], [73, "ot.backend.NumpyBackend.einsum"]], "einsum() (ot.backend.tensorflowbackend method)": [[73, "id349"], [73, "ot.backend.TensorflowBackend.einsum"]], "einsum() (ot.backend.torchbackend method)": [[73, "id430"], [73, "ot.backend.TorchBackend.einsum"]], "eliminate_zeros() (ot.backend.backend method)": [[73, "id24"], [73, "ot.backend.Backend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.cupybackend method)": [[73, "id107"], [73, "ot.backend.CupyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[73, "id188"], [73, "ot.backend.JaxBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.numpybackend method)": [[73, "id269"], [73, "ot.backend.NumpyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[73, "id350"], [73, "ot.backend.TensorflowBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.torchbackend method)": [[73, "id431"], [73, "ot.backend.TorchBackend.eliminate_zeros"]], "exp() (ot.backend.backend method)": [[73, "id25"], [73, "ot.backend.Backend.exp"]], "exp() (ot.backend.cupybackend method)": [[73, "id108"], [73, "ot.backend.CupyBackend.exp"]], "exp() (ot.backend.jaxbackend method)": [[73, "id189"], [73, "ot.backend.JaxBackend.exp"]], "exp() (ot.backend.numpybackend method)": [[73, "id270"], [73, "ot.backend.NumpyBackend.exp"]], "exp() (ot.backend.tensorflowbackend method)": [[73, "id351"], [73, "ot.backend.TensorflowBackend.exp"]], "exp() (ot.backend.torchbackend method)": [[73, "id432"], [73, "ot.backend.TorchBackend.exp"]], "eye() (ot.backend.backend method)": [[73, "id26"], [73, "ot.backend.Backend.eye"]], "eye() (ot.backend.cupybackend method)": [[73, "id109"], [73, "ot.backend.CupyBackend.eye"]], "eye() (ot.backend.jaxbackend method)": [[73, "id190"], [73, "ot.backend.JaxBackend.eye"]], "eye() (ot.backend.numpybackend method)": [[73, "id271"], [73, "ot.backend.NumpyBackend.eye"]], "eye() (ot.backend.tensorflowbackend method)": [[73, "id352"], [73, "ot.backend.TensorflowBackend.eye"]], "eye() (ot.backend.torchbackend method)": [[73, "id433"], [73, "ot.backend.TorchBackend.eye"]], "flip() (ot.backend.backend method)": [[73, "id27"], [73, "ot.backend.Backend.flip"]], "flip() (ot.backend.cupybackend method)": [[73, "id110"], [73, "ot.backend.CupyBackend.flip"]], "flip() (ot.backend.jaxbackend method)": [[73, "id191"], [73, "ot.backend.JaxBackend.flip"]], "flip() (ot.backend.numpybackend method)": [[73, "id272"], [73, "ot.backend.NumpyBackend.flip"]], "flip() (ot.backend.tensorflowbackend method)": [[73, "id353"], [73, "ot.backend.TensorflowBackend.flip"]], "flip() (ot.backend.torchbackend method)": [[73, "id434"], [73, "ot.backend.TorchBackend.flip"]], "floor() (ot.backend.backend method)": [[73, "id28"], [73, "ot.backend.Backend.floor"]], "floor() (ot.backend.cupybackend method)": [[73, "id111"], [73, "ot.backend.CupyBackend.floor"]], "floor() (ot.backend.jaxbackend method)": [[73, "id192"], [73, "ot.backend.JaxBackend.floor"]], "floor() (ot.backend.numpybackend method)": [[73, "id273"], [73, "ot.backend.NumpyBackend.floor"]], "floor() (ot.backend.tensorflowbackend method)": [[73, "id354"], [73, "ot.backend.TensorflowBackend.floor"]], "floor() (ot.backend.torchbackend method)": [[73, "id435"], [73, "ot.backend.TorchBackend.floor"]], "from_numpy() (ot.backend.backend method)": [[73, "id29"], [73, "ot.backend.Backend.from_numpy"]], "full() (ot.backend.backend method)": [[73, "id30"], [73, "ot.backend.Backend.full"]], "full() (ot.backend.cupybackend method)": [[73, "id112"], [73, "ot.backend.CupyBackend.full"]], "full() (ot.backend.jaxbackend method)": [[73, "id193"], [73, "ot.backend.JaxBackend.full"]], "full() (ot.backend.numpybackend method)": [[73, "id274"], [73, "ot.backend.NumpyBackend.full"]], "full() (ot.backend.tensorflowbackend method)": [[73, "id355"], [73, "ot.backend.TensorflowBackend.full"]], "full() (ot.backend.torchbackend method)": [[73, "id436"], [73, "ot.backend.TorchBackend.full"]], "get_available_backend_implementations() (in module ot.backend)": [[73, "id488"], [73, "ot.backend.get_available_backend_implementations"]], "get_backend() (in module ot.backend)": [[73, "id489"], [73, "ot.backend.get_backend"]], "get_backend_list() (in module ot.backend)": [[73, "id490"], [73, "ot.backend.get_backend_list"]], "inv() (ot.backend.backend method)": [[73, "id31"], [73, "ot.backend.Backend.inv"]], "inv() (ot.backend.cupybackend method)": [[73, "id113"], [73, "ot.backend.CupyBackend.inv"]], "inv() (ot.backend.jaxbackend method)": [[73, "id194"], [73, "ot.backend.JaxBackend.inv"]], "inv() (ot.backend.numpybackend method)": [[73, "id275"], [73, "ot.backend.NumpyBackend.inv"]], "inv() (ot.backend.tensorflowbackend method)": [[73, "id356"], [73, "ot.backend.TensorflowBackend.inv"]], "inv() (ot.backend.torchbackend method)": [[73, "id437"], [73, "ot.backend.TorchBackend.inv"]], "is_floating_point() (ot.backend.backend method)": [[73, "id32"], [73, "ot.backend.Backend.is_floating_point"]], "is_floating_point() (ot.backend.cupybackend method)": [[73, "id114"], [73, "ot.backend.CupyBackend.is_floating_point"]], "is_floating_point() (ot.backend.jaxbackend method)": [[73, "id195"], [73, "ot.backend.JaxBackend.is_floating_point"]], "is_floating_point() (ot.backend.numpybackend method)": [[73, "id276"], [73, "ot.backend.NumpyBackend.is_floating_point"]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[73, "id357"], [73, "ot.backend.TensorflowBackend.is_floating_point"]], "is_floating_point() (ot.backend.torchbackend method)": [[73, "id438"], [73, "ot.backend.TorchBackend.is_floating_point"]], "isfinite() (ot.backend.backend method)": [[73, "id33"], [73, "ot.backend.Backend.isfinite"]], "isfinite() (ot.backend.cupybackend method)": [[73, "id115"], [73, "ot.backend.CupyBackend.isfinite"]], "isfinite() (ot.backend.jaxbackend method)": [[73, "id196"], [73, "ot.backend.JaxBackend.isfinite"]], "isfinite() (ot.backend.numpybackend method)": [[73, "id277"], [73, "ot.backend.NumpyBackend.isfinite"]], "isfinite() (ot.backend.tensorflowbackend method)": [[73, "id358"], [73, "ot.backend.TensorflowBackend.isfinite"]], "isfinite() (ot.backend.torchbackend method)": [[73, "id439"], [73, "ot.backend.TorchBackend.isfinite"]], "isinf() (ot.backend.backend method)": [[73, "id34"], [73, "ot.backend.Backend.isinf"]], "isinf() (ot.backend.cupybackend method)": [[73, "id116"], [73, "ot.backend.CupyBackend.isinf"]], "isinf() (ot.backend.jaxbackend method)": [[73, "id197"], [73, "ot.backend.JaxBackend.isinf"]], "isinf() (ot.backend.numpybackend method)": [[73, "id278"], [73, "ot.backend.NumpyBackend.isinf"]], "isinf() (ot.backend.tensorflowbackend method)": [[73, "id359"], [73, "ot.backend.TensorflowBackend.isinf"]], "isinf() (ot.backend.torchbackend method)": [[73, "id440"], [73, "ot.backend.TorchBackend.isinf"]], "isnan() (ot.backend.backend method)": [[73, "id35"], [73, "ot.backend.Backend.isnan"]], "isnan() (ot.backend.cupybackend method)": [[73, "id117"], [73, "ot.backend.CupyBackend.isnan"]], "isnan() (ot.backend.jaxbackend method)": [[73, "id198"], [73, "ot.backend.JaxBackend.isnan"]], "isnan() (ot.backend.numpybackend method)": [[73, "id279"], [73, "ot.backend.NumpyBackend.isnan"]], "isnan() (ot.backend.tensorflowbackend method)": [[73, "id360"], [73, "ot.backend.TensorflowBackend.isnan"]], "isnan() (ot.backend.torchbackend method)": [[73, "id441"], [73, "ot.backend.TorchBackend.isnan"]], "issparse() (ot.backend.backend method)": [[73, "id36"], [73, "ot.backend.Backend.issparse"]], "issparse() (ot.backend.cupybackend method)": [[73, "id118"], [73, "ot.backend.CupyBackend.issparse"]], "issparse() (ot.backend.jaxbackend method)": [[73, "id199"], [73, "ot.backend.JaxBackend.issparse"]], "issparse() (ot.backend.numpybackend method)": [[73, "id280"], [73, "ot.backend.NumpyBackend.issparse"]], "issparse() (ot.backend.tensorflowbackend method)": [[73, "id361"], [73, "ot.backend.TensorflowBackend.issparse"]], "issparse() (ot.backend.torchbackend method)": [[73, "id442"], [73, "ot.backend.TorchBackend.issparse"]], "kl_div() (ot.backend.backend method)": [[73, "id37"], [73, "ot.backend.Backend.kl_div"]], "kl_div() (ot.backend.cupybackend method)": [[73, "id119"], [73, "ot.backend.CupyBackend.kl_div"]], "kl_div() (ot.backend.jaxbackend method)": [[73, "id200"], [73, "ot.backend.JaxBackend.kl_div"]], "kl_div() (ot.backend.numpybackend method)": [[73, "id281"], [73, "ot.backend.NumpyBackend.kl_div"]], "kl_div() (ot.backend.tensorflowbackend method)": [[73, "id362"], [73, "ot.backend.TensorflowBackend.kl_div"]], "kl_div() (ot.backend.torchbackend method)": [[73, "id443"], [73, "ot.backend.TorchBackend.kl_div"]], "linspace() (ot.backend.backend method)": [[73, "id38"], [73, "ot.backend.Backend.linspace"]], "linspace() (ot.backend.cupybackend method)": [[73, "id120"], [73, "ot.backend.CupyBackend.linspace"]], "linspace() (ot.backend.jaxbackend method)": [[73, "id201"], [73, "ot.backend.JaxBackend.linspace"]], "linspace() (ot.backend.numpybackend method)": [[73, "id282"], [73, "ot.backend.NumpyBackend.linspace"]], "linspace() (ot.backend.tensorflowbackend method)": [[73, "id363"], [73, "ot.backend.TensorflowBackend.linspace"]], "linspace() (ot.backend.torchbackend method)": [[73, "id444"], [73, "ot.backend.TorchBackend.linspace"]], "log() (ot.backend.backend method)": [[73, "id39"], [73, "ot.backend.Backend.log"]], "log() (ot.backend.cupybackend method)": [[73, "id121"], [73, "ot.backend.CupyBackend.log"]], "log() (ot.backend.jaxbackend method)": [[73, "id202"], [73, "ot.backend.JaxBackend.log"]], "log() (ot.backend.numpybackend method)": [[73, "id283"], [73, "ot.backend.NumpyBackend.log"]], "log() (ot.backend.tensorflowbackend method)": [[73, "id364"], [73, "ot.backend.TensorflowBackend.log"]], "log() (ot.backend.torchbackend method)": [[73, "id445"], [73, "ot.backend.TorchBackend.log"]], "logsumexp() (ot.backend.backend method)": [[73, "id40"], [73, "ot.backend.Backend.logsumexp"]], "logsumexp() (ot.backend.cupybackend method)": [[73, "id122"], [73, "ot.backend.CupyBackend.logsumexp"]], "logsumexp() (ot.backend.jaxbackend method)": [[73, "id203"], [73, "ot.backend.JaxBackend.logsumexp"]], "logsumexp() (ot.backend.numpybackend method)": [[73, "id284"], [73, "ot.backend.NumpyBackend.logsumexp"]], "logsumexp() (ot.backend.tensorflowbackend method)": [[73, "id365"], [73, "ot.backend.TensorflowBackend.logsumexp"]], "logsumexp() (ot.backend.torchbackend method)": [[73, "id446"], [73, "ot.backend.TorchBackend.logsumexp"]], "matmul() (ot.backend.backend method)": [[73, "id41"], [73, "ot.backend.Backend.matmul"]], "matmul() (ot.backend.cupybackend method)": [[73, "id123"], [73, "ot.backend.CupyBackend.matmul"]], "matmul() (ot.backend.jaxbackend method)": [[73, "id204"], [73, "ot.backend.JaxBackend.matmul"]], "matmul() (ot.backend.numpybackend method)": [[73, "id285"], [73, "ot.backend.NumpyBackend.matmul"]], "matmul() (ot.backend.tensorflowbackend method)": [[73, "id366"], [73, "ot.backend.TensorflowBackend.matmul"]], "matmul() (ot.backend.torchbackend method)": [[73, "id447"], [73, "ot.backend.TorchBackend.matmul"]], "max() (ot.backend.backend method)": [[73, "id42"], [73, "ot.backend.Backend.max"]], "max() (ot.backend.cupybackend method)": [[73, "id124"], [73, "ot.backend.CupyBackend.max"]], "max() (ot.backend.jaxbackend method)": [[73, "id205"], [73, "ot.backend.JaxBackend.max"]], "max() (ot.backend.numpybackend method)": [[73, "id286"], [73, "ot.backend.NumpyBackend.max"]], "max() (ot.backend.tensorflowbackend method)": [[73, "id367"], [73, "ot.backend.TensorflowBackend.max"]], "max() (ot.backend.torchbackend method)": [[73, "id448"], [73, "ot.backend.TorchBackend.max"]], "maximum() (ot.backend.backend method)": [[73, "id43"], [73, "ot.backend.Backend.maximum"]], "maximum() (ot.backend.cupybackend method)": [[73, "id125"], [73, "ot.backend.CupyBackend.maximum"]], "maximum() (ot.backend.jaxbackend method)": [[73, "id206"], [73, "ot.backend.JaxBackend.maximum"]], "maximum() (ot.backend.numpybackend method)": [[73, "id287"], [73, "ot.backend.NumpyBackend.maximum"]], "maximum() (ot.backend.tensorflowbackend method)": [[73, "id368"], [73, "ot.backend.TensorflowBackend.maximum"]], "maximum() (ot.backend.torchbackend method)": [[73, "id449"], [73, "ot.backend.TorchBackend.maximum"]], "mean() (ot.backend.backend method)": [[73, "id44"], [73, "ot.backend.Backend.mean"]], "mean() (ot.backend.cupybackend method)": [[73, "id126"], [73, "ot.backend.CupyBackend.mean"]], "mean() (ot.backend.jaxbackend method)": [[73, "id207"], [73, "ot.backend.JaxBackend.mean"]], "mean() (ot.backend.numpybackend method)": [[73, "id288"], [73, "ot.backend.NumpyBackend.mean"]], "mean() (ot.backend.tensorflowbackend method)": [[73, "id369"], [73, "ot.backend.TensorflowBackend.mean"]], "mean() (ot.backend.torchbackend method)": [[73, "id450"], [73, "ot.backend.TorchBackend.mean"]], "median() (ot.backend.backend method)": [[73, "id45"], [73, "ot.backend.Backend.median"]], "median() (ot.backend.cupybackend method)": [[73, "id127"], [73, "ot.backend.CupyBackend.median"]], "median() (ot.backend.jaxbackend method)": [[73, "id208"], [73, "ot.backend.JaxBackend.median"]], "median() (ot.backend.numpybackend method)": [[73, "id289"], [73, "ot.backend.NumpyBackend.median"]], "median() (ot.backend.tensorflowbackend method)": [[73, "id370"], [73, "ot.backend.TensorflowBackend.median"]], "median() (ot.backend.torchbackend method)": [[73, "id451"], [73, "ot.backend.TorchBackend.median"]], "meshgrid() (ot.backend.backend method)": [[73, "id46"], [73, "ot.backend.Backend.meshgrid"]], "meshgrid() (ot.backend.cupybackend method)": [[73, "id128"], [73, "ot.backend.CupyBackend.meshgrid"]], "meshgrid() (ot.backend.jaxbackend method)": [[73, "id209"], [73, "ot.backend.JaxBackend.meshgrid"]], "meshgrid() (ot.backend.numpybackend method)": [[73, "id290"], [73, "ot.backend.NumpyBackend.meshgrid"]], "meshgrid() (ot.backend.tensorflowbackend method)": [[73, "id371"], [73, "ot.backend.TensorflowBackend.meshgrid"]], "meshgrid() (ot.backend.torchbackend method)": [[73, "id452"], [73, "ot.backend.TorchBackend.meshgrid"]], "min() (ot.backend.backend method)": [[73, "id47"], [73, "ot.backend.Backend.min"]], "min() (ot.backend.cupybackend method)": [[73, "id129"], [73, "ot.backend.CupyBackend.min"]], "min() (ot.backend.jaxbackend method)": [[73, "id210"], [73, "ot.backend.JaxBackend.min"]], "min() (ot.backend.numpybackend method)": [[73, "id291"], [73, "ot.backend.NumpyBackend.min"]], "min() (ot.backend.tensorflowbackend method)": [[73, "id372"], [73, "ot.backend.TensorflowBackend.min"]], "min() (ot.backend.torchbackend method)": [[73, "id453"], [73, "ot.backend.TorchBackend.min"]], "minimum() (ot.backend.backend method)": [[73, "id48"], [73, "ot.backend.Backend.minimum"]], "minimum() (ot.backend.cupybackend method)": [[73, "id130"], [73, "ot.backend.CupyBackend.minimum"]], "minimum() (ot.backend.jaxbackend method)": [[73, "id211"], [73, "ot.backend.JaxBackend.minimum"]], "minimum() (ot.backend.numpybackend method)": [[73, "id292"], [73, "ot.backend.NumpyBackend.minimum"]], "minimum() (ot.backend.tensorflowbackend method)": [[73, "id373"], [73, "ot.backend.TensorflowBackend.minimum"]], "minimum() (ot.backend.torchbackend method)": [[73, "id454"], [73, "ot.backend.TorchBackend.minimum"]], "norm() (ot.backend.backend method)": [[73, "id49"], [73, "ot.backend.Backend.norm"]], "norm() (ot.backend.cupybackend method)": [[73, "id131"], [73, "ot.backend.CupyBackend.norm"]], "norm() (ot.backend.jaxbackend method)": [[73, "id212"], [73, "ot.backend.JaxBackend.norm"]], "norm() (ot.backend.numpybackend method)": [[73, "id293"], [73, "ot.backend.NumpyBackend.norm"]], "norm() (ot.backend.tensorflowbackend method)": [[73, "id374"], [73, "ot.backend.TensorflowBackend.norm"]], "norm() (ot.backend.torchbackend method)": [[73, "id455"], [73, "ot.backend.TorchBackend.norm"]], "ones() (ot.backend.backend method)": [[73, "id50"], [73, "ot.backend.Backend.ones"]], "ones() (ot.backend.cupybackend method)": [[73, "id132"], [73, "ot.backend.CupyBackend.ones"]], "ones() (ot.backend.jaxbackend method)": [[73, "id213"], [73, "ot.backend.JaxBackend.ones"]], "ones() (ot.backend.numpybackend method)": [[73, "id294"], [73, "ot.backend.NumpyBackend.ones"]], "ones() (ot.backend.tensorflowbackend method)": [[73, "id375"], [73, "ot.backend.TensorflowBackend.ones"]], "ones() (ot.backend.torchbackend method)": [[73, "id456"], [73, "ot.backend.TorchBackend.ones"]], "ot.backend": [[73, "module-ot.backend"]], "outer() (ot.backend.backend method)": [[73, "id51"], [73, "ot.backend.Backend.outer"]], "outer() (ot.backend.cupybackend method)": [[73, "id133"], [73, "ot.backend.CupyBackend.outer"]], "outer() (ot.backend.jaxbackend method)": [[73, "id214"], [73, "ot.backend.JaxBackend.outer"]], "outer() (ot.backend.numpybackend method)": [[73, "id295"], [73, "ot.backend.NumpyBackend.outer"]], "outer() (ot.backend.tensorflowbackend method)": [[73, "id376"], [73, "ot.backend.TensorflowBackend.outer"]], "outer() (ot.backend.torchbackend method)": [[73, "id457"], [73, "ot.backend.TorchBackend.outer"]], "power() (ot.backend.backend method)": [[73, "id52"], [73, "ot.backend.Backend.power"]], "power() (ot.backend.cupybackend method)": [[73, "id134"], [73, "ot.backend.CupyBackend.power"]], "power() (ot.backend.jaxbackend method)": [[73, "id215"], [73, "ot.backend.JaxBackend.power"]], "power() (ot.backend.numpybackend method)": [[73, "id296"], [73, "ot.backend.NumpyBackend.power"]], "power() (ot.backend.tensorflowbackend method)": [[73, "id377"], [73, "ot.backend.TensorflowBackend.power"]], "power() (ot.backend.torchbackend method)": [[73, "id458"], [73, "ot.backend.TorchBackend.power"]], "prod() (ot.backend.backend method)": [[73, "id53"], [73, "ot.backend.Backend.prod"]], "prod() (ot.backend.cupybackend method)": [[73, "id135"], [73, "ot.backend.CupyBackend.prod"]], "prod() (ot.backend.jaxbackend method)": [[73, "id216"], [73, "ot.backend.JaxBackend.prod"]], "prod() (ot.backend.numpybackend method)": [[73, "id297"], [73, "ot.backend.NumpyBackend.prod"]], "prod() (ot.backend.tensorflowbackend method)": [[73, "id378"], [73, "ot.backend.TensorflowBackend.prod"]], "prod() (ot.backend.torchbackend method)": [[73, "id459"], [73, "ot.backend.TorchBackend.prod"]], "qr() (ot.backend.backend method)": [[73, "id54"], [73, "ot.backend.Backend.qr"]], "qr() (ot.backend.cupybackend method)": [[73, "id136"], [73, "ot.backend.CupyBackend.qr"]], "qr() (ot.backend.jaxbackend method)": [[73, "id217"], [73, "ot.backend.JaxBackend.qr"]], "qr() (ot.backend.numpybackend method)": [[73, "id298"], [73, "ot.backend.NumpyBackend.qr"]], "qr() (ot.backend.tensorflowbackend method)": [[73, "id379"], [73, "ot.backend.TensorflowBackend.qr"]], "qr() (ot.backend.torchbackend method)": [[73, "id460"], [73, "ot.backend.TorchBackend.qr"]], "rand() (ot.backend.backend method)": [[73, "id55"], [73, "ot.backend.Backend.rand"]], "rand() (ot.backend.cupybackend method)": [[73, "id137"], [73, "ot.backend.CupyBackend.rand"]], "rand() (ot.backend.jaxbackend method)": [[73, "id218"], [73, "ot.backend.JaxBackend.rand"]], "rand() (ot.backend.numpybackend method)": [[73, "id299"], [73, "ot.backend.NumpyBackend.rand"]], "rand() (ot.backend.tensorflowbackend method)": [[73, "id380"], [73, "ot.backend.TensorflowBackend.rand"]], "rand() (ot.backend.torchbackend method)": [[73, "id461"], [73, "ot.backend.TorchBackend.rand"]], "randn() (ot.backend.backend method)": [[73, "id56"], [73, "ot.backend.Backend.randn"]], "randn() (ot.backend.cupybackend method)": [[73, "id138"], [73, "ot.backend.CupyBackend.randn"]], "randn() (ot.backend.jaxbackend method)": [[73, "id219"], [73, "ot.backend.JaxBackend.randn"]], "randn() (ot.backend.numpybackend method)": [[73, "id300"], [73, "ot.backend.NumpyBackend.randn"]], "randn() (ot.backend.tensorflowbackend method)": [[73, "id381"], [73, "ot.backend.TensorflowBackend.randn"]], "randn() (ot.backend.torchbackend method)": [[73, "id462"], [73, "ot.backend.TorchBackend.randn"]], "repeat() (ot.backend.backend method)": [[73, "id57"], [73, "ot.backend.Backend.repeat"]], "repeat() (ot.backend.cupybackend method)": [[73, "id139"], [73, "ot.backend.CupyBackend.repeat"]], "repeat() (ot.backend.jaxbackend method)": [[73, "id220"], [73, "ot.backend.JaxBackend.repeat"]], "repeat() (ot.backend.numpybackend method)": [[73, "id301"], [73, "ot.backend.NumpyBackend.repeat"]], "repeat() (ot.backend.tensorflowbackend method)": [[73, "id382"], [73, "ot.backend.TensorflowBackend.repeat"]], "repeat() (ot.backend.torchbackend method)": [[73, "id463"], [73, "ot.backend.TorchBackend.repeat"]], "reshape() (ot.backend.backend method)": [[73, "id58"], [73, "ot.backend.Backend.reshape"]], "reshape() (ot.backend.cupybackend method)": [[73, "id140"], [73, "ot.backend.CupyBackend.reshape"]], "reshape() (ot.backend.jaxbackend method)": [[73, "id221"], [73, "ot.backend.JaxBackend.reshape"]], "reshape() (ot.backend.numpybackend method)": [[73, "id302"], [73, "ot.backend.NumpyBackend.reshape"]], "reshape() (ot.backend.tensorflowbackend method)": [[73, "id383"], [73, "ot.backend.TensorflowBackend.reshape"]], "reshape() (ot.backend.torchbackend method)": [[73, "id464"], [73, "ot.backend.TorchBackend.reshape"]], "searchsorted() (ot.backend.backend method)": [[73, "id59"], [73, "ot.backend.Backend.searchsorted"]], "searchsorted() (ot.backend.cupybackend method)": [[73, "id141"], [73, "ot.backend.CupyBackend.searchsorted"]], "searchsorted() (ot.backend.jaxbackend method)": [[73, "id222"], [73, "ot.backend.JaxBackend.searchsorted"]], "searchsorted() (ot.backend.numpybackend method)": [[73, "id303"], [73, "ot.backend.NumpyBackend.searchsorted"]], "searchsorted() (ot.backend.tensorflowbackend method)": [[73, "id384"], [73, "ot.backend.TensorflowBackend.searchsorted"]], "searchsorted() (ot.backend.torchbackend method)": [[73, "id465"], [73, "ot.backend.TorchBackend.searchsorted"]], "seed() (ot.backend.backend method)": [[73, "id60"], [73, "ot.backend.Backend.seed"]], "seed() (ot.backend.cupybackend method)": [[73, "id142"], [73, "ot.backend.CupyBackend.seed"]], "seed() (ot.backend.jaxbackend method)": [[73, "id223"], [73, "ot.backend.JaxBackend.seed"]], "seed() (ot.backend.numpybackend method)": [[73, "id304"], [73, "ot.backend.NumpyBackend.seed"]], "seed() (ot.backend.tensorflowbackend method)": [[73, "id385"], [73, "ot.backend.TensorflowBackend.seed"]], "seed() (ot.backend.torchbackend method)": [[73, "id466"], [73, "ot.backend.TorchBackend.seed"]], "set_gradients() (ot.backend.backend method)": [[73, "id61"], [73, "ot.backend.Backend.set_gradients"]], "set_gradients() (ot.backend.cupybackend method)": [[73, "id143"], [73, "ot.backend.CupyBackend.set_gradients"]], "set_gradients() (ot.backend.jaxbackend method)": [[73, "id224"], [73, "ot.backend.JaxBackend.set_gradients"]], "set_gradients() (ot.backend.numpybackend method)": [[73, "id305"], [73, "ot.backend.NumpyBackend.set_gradients"]], "set_gradients() (ot.backend.tensorflowbackend method)": [[73, "id386"], [73, "ot.backend.TensorflowBackend.set_gradients"]], "set_gradients() (ot.backend.torchbackend method)": [[73, "id467"], [73, "ot.backend.TorchBackend.set_gradients"]], "sign() (ot.backend.backend method)": [[73, "id62"], [73, "ot.backend.Backend.sign"]], "sign() (ot.backend.cupybackend method)": [[73, "id144"], [73, "ot.backend.CupyBackend.sign"]], "sign() (ot.backend.jaxbackend method)": [[73, "id225"], [73, "ot.backend.JaxBackend.sign"]], "sign() (ot.backend.numpybackend method)": [[73, "id306"], [73, "ot.backend.NumpyBackend.sign"]], "sign() (ot.backend.tensorflowbackend method)": [[73, "id387"], [73, "ot.backend.TensorflowBackend.sign"]], "sign() (ot.backend.torchbackend method)": [[73, "id468"], [73, "ot.backend.TorchBackend.sign"]], "solve() (ot.backend.backend method)": [[73, "id63"], [73, "ot.backend.Backend.solve"]], "solve() (ot.backend.cupybackend method)": [[73, "id145"], [73, "ot.backend.CupyBackend.solve"]], "solve() (ot.backend.jaxbackend method)": [[73, "id226"], [73, "ot.backend.JaxBackend.solve"]], "solve() (ot.backend.numpybackend method)": [[73, "id307"], [73, "ot.backend.NumpyBackend.solve"]], "solve() (ot.backend.tensorflowbackend method)": [[73, "id388"], [73, "ot.backend.TensorflowBackend.solve"]], "solve() (ot.backend.torchbackend method)": [[73, "id469"], [73, "ot.backend.TorchBackend.solve"]], "sort() (ot.backend.backend method)": [[73, "id64"], [73, "ot.backend.Backend.sort"]], "sort() (ot.backend.cupybackend method)": [[73, "id146"], [73, "ot.backend.CupyBackend.sort"]], "sort() (ot.backend.jaxbackend method)": [[73, "id227"], [73, "ot.backend.JaxBackend.sort"]], "sort() (ot.backend.numpybackend method)": [[73, "id308"], [73, "ot.backend.NumpyBackend.sort"]], "sort() (ot.backend.tensorflowbackend method)": [[73, "id389"], [73, "ot.backend.TensorflowBackend.sort"]], "sort() (ot.backend.torchbackend method)": [[73, "id470"], [73, "ot.backend.TorchBackend.sort"]], "sort2() (ot.backend.backend method)": [[73, "id65"], [73, "ot.backend.Backend.sort2"]], "sort2() (ot.backend.cupybackend method)": [[73, "id147"], [73, "ot.backend.CupyBackend.sort2"]], "sort2() (ot.backend.jaxbackend method)": [[73, "id228"], [73, "ot.backend.JaxBackend.sort2"]], "sort2() (ot.backend.numpybackend method)": [[73, "id309"], [73, "ot.backend.NumpyBackend.sort2"]], "sort2() (ot.backend.tensorflowbackend method)": [[73, "id390"], [73, "ot.backend.TensorflowBackend.sort2"]], "sort2() (ot.backend.torchbackend method)": [[73, "id471"], [73, "ot.backend.TorchBackend.sort2"]], "sqrt() (ot.backend.backend method)": [[73, "id66"], [73, "ot.backend.Backend.sqrt"]], "sqrt() (ot.backend.cupybackend method)": [[73, "id148"], [73, "ot.backend.CupyBackend.sqrt"]], "sqrt() (ot.backend.jaxbackend method)": [[73, "id229"], [73, "ot.backend.JaxBackend.sqrt"]], "sqrt() (ot.backend.numpybackend method)": [[73, "id310"], [73, "ot.backend.NumpyBackend.sqrt"]], "sqrt() (ot.backend.tensorflowbackend method)": [[73, "id391"], [73, "ot.backend.TensorflowBackend.sqrt"]], "sqrt() (ot.backend.torchbackend method)": [[73, "id472"], [73, "ot.backend.TorchBackend.sqrt"]], "sqrtm() (ot.backend.backend method)": [[73, "id67"], [73, "ot.backend.Backend.sqrtm"]], "sqrtm() (ot.backend.cupybackend method)": [[73, "id149"], [73, "ot.backend.CupyBackend.sqrtm"]], "sqrtm() (ot.backend.jaxbackend method)": [[73, "id230"], [73, "ot.backend.JaxBackend.sqrtm"]], "sqrtm() (ot.backend.numpybackend method)": [[73, "id311"], [73, "ot.backend.NumpyBackend.sqrtm"]], "sqrtm() (ot.backend.tensorflowbackend method)": [[73, "id392"], [73, "ot.backend.TensorflowBackend.sqrtm"]], "sqrtm() (ot.backend.torchbackend method)": [[73, "id473"], [73, "ot.backend.TorchBackend.sqrtm"]], "squeeze() (ot.backend.backend method)": [[73, "id68"], [73, "ot.backend.Backend.squeeze"]], "squeeze() (ot.backend.cupybackend method)": [[73, "id150"], [73, "ot.backend.CupyBackend.squeeze"]], "squeeze() (ot.backend.jaxbackend method)": [[73, "id231"], [73, "ot.backend.JaxBackend.squeeze"]], "squeeze() (ot.backend.numpybackend method)": [[73, "id312"], [73, "ot.backend.NumpyBackend.squeeze"]], "squeeze() (ot.backend.tensorflowbackend method)": [[73, "id393"], [73, "ot.backend.TensorflowBackend.squeeze"]], "squeeze() (ot.backend.torchbackend method)": [[73, "id474"], [73, "ot.backend.TorchBackend.squeeze"]], "stack() (ot.backend.backend method)": [[73, "id69"], [73, "ot.backend.Backend.stack"]], "stack() (ot.backend.cupybackend method)": [[73, "id151"], [73, "ot.backend.CupyBackend.stack"]], "stack() (ot.backend.jaxbackend method)": [[73, "id232"], [73, "ot.backend.JaxBackend.stack"]], "stack() (ot.backend.numpybackend method)": [[73, "id313"], [73, "ot.backend.NumpyBackend.stack"]], "stack() (ot.backend.tensorflowbackend method)": [[73, "id394"], [73, "ot.backend.TensorflowBackend.stack"]], "stack() (ot.backend.torchbackend method)": [[73, "id475"], [73, "ot.backend.TorchBackend.stack"]], "std() (ot.backend.backend method)": [[73, "id70"], [73, "ot.backend.Backend.std"]], "std() (ot.backend.cupybackend method)": [[73, "id152"], [73, "ot.backend.CupyBackend.std"]], "std() (ot.backend.jaxbackend method)": [[73, "id233"], [73, "ot.backend.JaxBackend.std"]], "std() (ot.backend.numpybackend method)": [[73, "id314"], [73, "ot.backend.NumpyBackend.std"]], "std() (ot.backend.tensorflowbackend method)": [[73, "id395"], [73, "ot.backend.TensorflowBackend.std"]], "std() (ot.backend.torchbackend method)": [[73, "id476"], [73, "ot.backend.TorchBackend.std"]], "sum() (ot.backend.backend method)": [[73, "id71"], [73, "ot.backend.Backend.sum"]], "sum() (ot.backend.cupybackend method)": [[73, "id153"], [73, "ot.backend.CupyBackend.sum"]], "sum() (ot.backend.jaxbackend method)": [[73, "id234"], [73, "ot.backend.JaxBackend.sum"]], "sum() (ot.backend.numpybackend method)": [[73, "id315"], [73, "ot.backend.NumpyBackend.sum"]], "sum() (ot.backend.tensorflowbackend method)": [[73, "id396"], [73, "ot.backend.TensorflowBackend.sum"]], "sum() (ot.backend.torchbackend method)": [[73, "id477"], [73, "ot.backend.TorchBackend.sum"]], "take_along_axis() (ot.backend.backend method)": [[73, "id72"], [73, "ot.backend.Backend.take_along_axis"]], "take_along_axis() (ot.backend.cupybackend method)": [[73, "id154"], [73, "ot.backend.CupyBackend.take_along_axis"]], "take_along_axis() (ot.backend.jaxbackend method)": [[73, "id235"], [73, "ot.backend.JaxBackend.take_along_axis"]], "take_along_axis() (ot.backend.numpybackend method)": [[73, "id316"], [73, "ot.backend.NumpyBackend.take_along_axis"]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[73, "id397"], [73, "ot.backend.TensorflowBackend.take_along_axis"]], "take_along_axis() (ot.backend.torchbackend method)": [[73, "id478"], [73, "ot.backend.TorchBackend.take_along_axis"]], "tile() (ot.backend.backend method)": [[73, "id73"], [73, "ot.backend.Backend.tile"]], "tile() (ot.backend.cupybackend method)": [[73, "id155"], [73, "ot.backend.CupyBackend.tile"]], "tile() (ot.backend.jaxbackend method)": [[73, "id236"], [73, "ot.backend.JaxBackend.tile"]], "tile() (ot.backend.numpybackend method)": [[73, "id317"], [73, "ot.backend.NumpyBackend.tile"]], "tile() (ot.backend.tensorflowbackend method)": [[73, "id398"], [73, "ot.backend.TensorflowBackend.tile"]], "tile() (ot.backend.torchbackend method)": [[73, "id479"], [73, "ot.backend.TorchBackend.tile"]], "to_numpy() (in module ot.backend)": [[73, "id491"], [73, "ot.backend.to_numpy"]], "to_numpy() (ot.backend.backend method)": [[73, "id74"], [73, "ot.backend.Backend.to_numpy"]], "tocsr() (ot.backend.backend method)": [[73, "id75"], [73, "ot.backend.Backend.tocsr"]], "tocsr() (ot.backend.cupybackend method)": [[73, "id156"], [73, "ot.backend.CupyBackend.tocsr"]], "tocsr() (ot.backend.jaxbackend method)": [[73, "id237"], [73, "ot.backend.JaxBackend.tocsr"]], "tocsr() (ot.backend.numpybackend method)": [[73, "id318"], [73, "ot.backend.NumpyBackend.tocsr"]], "tocsr() (ot.backend.tensorflowbackend method)": [[73, "id399"], [73, "ot.backend.TensorflowBackend.tocsr"]], "tocsr() (ot.backend.torchbackend method)": [[73, "id480"], [73, "ot.backend.TorchBackend.tocsr"]], "todense() (ot.backend.backend method)": [[73, "id76"], [73, "ot.backend.Backend.todense"]], "todense() (ot.backend.cupybackend method)": [[73, "id157"], [73, "ot.backend.CupyBackend.todense"]], "todense() (ot.backend.jaxbackend method)": [[73, "id238"], [73, "ot.backend.JaxBackend.todense"]], "todense() (ot.backend.numpybackend method)": [[73, "id319"], [73, "ot.backend.NumpyBackend.todense"]], "todense() (ot.backend.tensorflowbackend method)": [[73, "id400"], [73, "ot.backend.TensorflowBackend.todense"]], "todense() (ot.backend.torchbackend method)": [[73, "id481"], [73, "ot.backend.TorchBackend.todense"]], "trace() (ot.backend.backend method)": [[73, "id77"], [73, "ot.backend.Backend.trace"]], "trace() (ot.backend.cupybackend method)": [[73, "id158"], [73, "ot.backend.CupyBackend.trace"]], "trace() (ot.backend.jaxbackend method)": [[73, "id239"], [73, "ot.backend.JaxBackend.trace"]], "trace() (ot.backend.numpybackend method)": [[73, "id320"], [73, "ot.backend.NumpyBackend.trace"]], "trace() (ot.backend.tensorflowbackend method)": [[73, "id401"], [73, "ot.backend.TensorflowBackend.trace"]], "trace() (ot.backend.torchbackend method)": [[73, "id482"], [73, "ot.backend.TorchBackend.trace"]], "transpose() (ot.backend.backend method)": [[73, "id78"], [73, "ot.backend.Backend.transpose"]], "transpose() (ot.backend.cupybackend method)": [[73, "id159"], [73, "ot.backend.CupyBackend.transpose"]], "transpose() (ot.backend.jaxbackend method)": [[73, "id240"], [73, "ot.backend.JaxBackend.transpose"]], "transpose() (ot.backend.numpybackend method)": [[73, "id321"], [73, "ot.backend.NumpyBackend.transpose"]], "transpose() (ot.backend.tensorflowbackend method)": [[73, "id402"], [73, "ot.backend.TensorflowBackend.transpose"]], "transpose() (ot.backend.torchbackend method)": [[73, "id483"], [73, "ot.backend.TorchBackend.transpose"]], "unique() (ot.backend.backend method)": [[73, "id79"], [73, "ot.backend.Backend.unique"]], "unique() (ot.backend.cupybackend method)": [[73, "id160"], [73, "ot.backend.CupyBackend.unique"]], "unique() (ot.backend.jaxbackend method)": [[73, "id241"], [73, "ot.backend.JaxBackend.unique"]], "unique() (ot.backend.numpybackend method)": [[73, "id322"], [73, "ot.backend.NumpyBackend.unique"]], "unique() (ot.backend.tensorflowbackend method)": [[73, "id403"], [73, "ot.backend.TensorflowBackend.unique"]], "unique() (ot.backend.torchbackend method)": [[73, "id484"], [73, "ot.backend.TorchBackend.unique"]], "where() (ot.backend.backend method)": [[73, "id80"], [73, "ot.backend.Backend.where"]], "where() (ot.backend.cupybackend method)": [[73, "id161"], [73, "ot.backend.CupyBackend.where"]], "where() (ot.backend.jaxbackend method)": [[73, "id242"], [73, "ot.backend.JaxBackend.where"]], "where() (ot.backend.numpybackend method)": [[73, "id323"], [73, "ot.backend.NumpyBackend.where"]], "where() (ot.backend.tensorflowbackend method)": [[73, "id404"], [73, "ot.backend.TensorflowBackend.where"]], "where() (ot.backend.torchbackend method)": [[73, "id485"], [73, "ot.backend.TorchBackend.where"]], "zero_pad() (ot.backend.backend method)": [[73, "id81"], [73, "ot.backend.Backend.zero_pad"]], "zero_pad() (ot.backend.cupybackend method)": [[73, "id162"], [73, "ot.backend.CupyBackend.zero_pad"]], "zero_pad() (ot.backend.jaxbackend method)": [[73, "id243"], [73, "ot.backend.JaxBackend.zero_pad"]], "zero_pad() (ot.backend.numpybackend method)": [[73, "id324"], [73, "ot.backend.NumpyBackend.zero_pad"]], "zero_pad() (ot.backend.tensorflowbackend method)": [[73, "id405"], [73, "ot.backend.TensorflowBackend.zero_pad"]], "zero_pad() (ot.backend.torchbackend method)": [[73, "id486"], [73, "ot.backend.TorchBackend.zero_pad"]], "zeros() (ot.backend.backend method)": [[73, "id82"], [73, "ot.backend.Backend.zeros"]], "zeros() (ot.backend.cupybackend method)": [[73, "id163"], [73, "ot.backend.CupyBackend.zeros"]], "zeros() (ot.backend.jaxbackend method)": [[73, "id244"], [73, "ot.backend.JaxBackend.zeros"]], "zeros() (ot.backend.numpybackend method)": [[73, "id325"], [73, "ot.backend.NumpyBackend.zeros"]], "zeros() (ot.backend.tensorflowbackend method)": [[73, "id406"], [73, "ot.backend.TensorflowBackend.zeros"]], "zeros() (ot.backend.torchbackend method)": [[73, "id487"], [73, "ot.backend.TorchBackend.zeros"]], "barycenter() (in module ot.bregman)": [[74, "ot.bregman.barycenter"]], "barycenter_debiased() (in module ot.bregman)": [[74, "ot.bregman.barycenter_debiased"]], "barycenter_sinkhorn() (in module ot.bregman)": [[74, "ot.bregman.barycenter_sinkhorn"]], "barycenter_stabilized() (in module ot.bregman)": [[74, "ot.bregman.barycenter_stabilized"]], "convolutional_barycenter2d() (in module ot.bregman)": [[74, "ot.bregman.convolutional_barycenter2d"]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[74, "ot.bregman.convolutional_barycenter2d_debiased"]], "empirical_sinkhorn() (in module ot.bregman)": [[74, "ot.bregman.empirical_sinkhorn"]], "empirical_sinkhorn2() (in module ot.bregman)": [[74, "ot.bregman.empirical_sinkhorn2"]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[74, "ot.bregman.free_support_sinkhorn_barycenter"]], "geometricbar() (in module ot.bregman)": [[74, "ot.bregman.geometricBar"]], "geometricmean() (in module ot.bregman)": [[74, "ot.bregman.geometricMean"]], "greenkhorn() (in module ot.bregman)": [[74, "ot.bregman.greenkhorn"]], "jcpot_barycenter() (in module ot.bregman)": [[74, "ot.bregman.jcpot_barycenter"]], "ot.bregman": [[74, "module-ot.bregman"]], "projc() (in module ot.bregman)": [[74, "ot.bregman.projC"]], "projr() (in module ot.bregman)": [[74, "ot.bregman.projR"]], "screenkhorn() (in module ot.bregman)": [[74, "ot.bregman.screenkhorn"]], "sinkhorn() (in module ot.bregman)": [[74, "ot.bregman.sinkhorn"]], "sinkhorn2() (in module ot.bregman)": [[74, "ot.bregman.sinkhorn2"]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[74, "ot.bregman.sinkhorn_epsilon_scaling"]], "sinkhorn_knopp() (in module ot.bregman)": [[74, "ot.bregman.sinkhorn_knopp"]], "sinkhorn_log() (in module ot.bregman)": [[74, "ot.bregman.sinkhorn_log"]], "sinkhorn_stabilized() (in module ot.bregman)": [[74, "ot.bregman.sinkhorn_stabilized"]], "unmix() (in module ot.bregman)": [[74, "ot.bregman.unmix"]], "co_optimal_transport() (in module ot.coot)": [[75, "id0"], [75, "ot.coot.co_optimal_transport"]], "co_optimal_transport2() (in module ot.coot)": [[75, "id4"], [75, "ot.coot.co_optimal_transport2"]], "ot.coot": [[75, "module-ot.coot"]], "basetransport (class in ot.da)": [[76, "id0"], [76, "ot.da.BaseTransport"]], "emdlaplacetransport (class in ot.da)": [[76, "id44"], [76, "ot.da.EMDLaplaceTransport"]], "emdtransport (class in ot.da)": [[76, "id51"], [76, "ot.da.EMDTransport"]], "jcpottransport (class in ot.da)": [[76, "id57"], [76, "ot.da.JCPOTTransport"]], "lineargwtransport (class in ot.da)": [[76, "id70"], [76, "ot.da.LinearGWTransport"]], "lineartransport (class in ot.da)": [[76, "id74"], [76, "ot.da.LinearTransport"]], "mappingtransport (class in ot.da)": [[76, "id81"], [76, "ot.da.MappingTransport"]], "nearestbrenierpotential (class in ot.da)": [[76, "id88"], [76, "ot.da.NearestBrenierPotential"]], "sinkhornl1l2transport (class in ot.da)": [[76, "id96"], [76, "ot.da.SinkhornL1l2Transport"]], "sinkhornlpl1transport (class in ot.da)": [[76, "id104"], [76, "ot.da.SinkhornLpl1Transport"]], "sinkhorntransport (class in ot.da)": [[76, "id111"], [76, "ot.da.SinkhornTransport"]], "unbalancedsinkhorntransport (class in ot.da)": [[76, "id119"], [76, "ot.da.UnbalancedSinkhornTransport"]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[76, "id45"], [76, "ot.da.EMDLaplaceTransport.coupling_"]], "coupling_ (ot.da.emdtransport attribute)": [[76, "id52"], [76, "ot.da.EMDTransport.coupling_"]], "coupling_ (ot.da.jcpottransport attribute)": [[76, "id58"], [76, "ot.da.JCPOTTransport.coupling_"]], "coupling_ (ot.da.mappingtransport attribute)": [[76, "id82"], [76, "ot.da.MappingTransport.coupling_"]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[76, "id97"], [76, "ot.da.SinkhornL1l2Transport.coupling_"]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[76, "id105"], [76, "ot.da.SinkhornLpl1Transport.coupling_"]], "coupling_ (ot.da.sinkhorntransport attribute)": [[76, "id112"], [76, "ot.da.SinkhornTransport.coupling_"]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[76, "id120"], [76, "ot.da.UnbalancedSinkhornTransport.coupling_"]], "distribution_estimation_uniform() (in module ot.da)": [[76, "id126"], [76, "ot.da.distribution_estimation_uniform"]], "emd_laplace() (in module ot.da)": [[76, "id127"], [76, "ot.da.emd_laplace"]], "fit() (ot.da.basetransport method)": [[76, "id36"], [76, "ot.da.BaseTransport.fit"]], "fit() (ot.da.emdlaplacetransport method)": [[76, "id50"], [76, "ot.da.EMDLaplaceTransport.fit"]], "fit() (ot.da.emdtransport method)": [[76, "id56"], [76, "ot.da.EMDTransport.fit"]], "fit() (ot.da.jcpottransport method)": [[76, "id64"], [76, "ot.da.JCPOTTransport.fit"]], "fit() (ot.da.lineargwtransport method)": [[76, "id73"], [76, "ot.da.LinearGWTransport.fit"]], "fit() (ot.da.lineartransport method)": [[76, "id78"], [76, "ot.da.LinearTransport.fit"]], "fit() (ot.da.mappingtransport method)": [[76, "id86"], [76, "ot.da.MappingTransport.fit"]], "fit() (ot.da.nearestbrenierpotential method)": [[76, "id91"], [76, "ot.da.NearestBrenierPotential.fit"]], "fit() (ot.da.sinkhornl1l2transport method)": [[76, "id103"], [76, "ot.da.SinkhornL1l2Transport.fit"]], "fit() (ot.da.sinkhornlpl1transport method)": [[76, "id110"], [76, "ot.da.SinkhornLpl1Transport.fit"]], "fit() (ot.da.sinkhorntransport method)": [[76, "id118"], [76, "ot.da.SinkhornTransport.fit"]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[76, "id125"], [76, "ot.da.UnbalancedSinkhornTransport.fit"]], "fit_transform() (ot.da.basetransport method)": [[76, "id37"], [76, "ot.da.BaseTransport.fit_transform"]], "inverse_transform() (ot.da.basetransport method)": [[76, "id38"], [76, "ot.da.BaseTransport.inverse_transform"]], "inverse_transform() (ot.da.lineartransport method)": [[76, "id79"], [76, "ot.da.LinearTransport.inverse_transform"]], "inverse_transform_labels() (ot.da.basetransport method)": [[76, "id39"], [76, "ot.da.BaseTransport.inverse_transform_labels"]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[76, "id65"], [76, "ot.da.JCPOTTransport.inverse_transform_labels"]], "log_ (ot.da.jcpottransport attribute)": [[76, "id60"], [76, "ot.da.JCPOTTransport.log_"]], "log_ (ot.da.mappingtransport attribute)": [[76, "id84"], [76, "ot.da.MappingTransport.log_"]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[76, "id98"], [76, "ot.da.SinkhornL1l2Transport.log_"]], "log_ (ot.da.sinkhorntransport attribute)": [[76, "id113"], [76, "ot.da.SinkhornTransport.log_"]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[76, "id121"], [76, "ot.da.UnbalancedSinkhornTransport.log_"]], "mapping_ (ot.da.mappingtransport attribute)": [[76, "id83"], [76, "ot.da.MappingTransport.mapping_"]], "ot.da": [[76, "module-ot.da"]], "proportions_ (ot.da.jcpottransport attribute)": [[76, "id59"], [76, "ot.da.JCPOTTransport.proportions_"]], "sinkhorn_l1l2_gl() (in module ot.da)": [[76, "id131"], [76, "ot.da.sinkhorn_l1l2_gl"]], "sinkhorn_lpl1_mm() (in module ot.da)": [[76, "id135"], [76, "ot.da.sinkhorn_lpl1_mm"]], "transform() (ot.da.basetransport method)": [[76, "id40"], [76, "ot.da.BaseTransport.transform"]], "transform() (ot.da.jcpottransport method)": [[76, "id66"], [76, "ot.da.JCPOTTransport.transform"]], "transform() (ot.da.lineartransport method)": [[76, "id80"], [76, "ot.da.LinearTransport.transform"]], "transform() (ot.da.mappingtransport method)": [[76, "id87"], [76, "ot.da.MappingTransport.transform"]], "transform() (ot.da.nearestbrenierpotential method)": [[76, "id93"], [76, "ot.da.NearestBrenierPotential.transform"]], "transform_labels() (ot.da.basetransport method)": [[76, "id41"], [76, "ot.da.BaseTransport.transform_labels"]], "transform_labels() (ot.da.jcpottransport method)": [[76, "id67"], [76, "ot.da.JCPOTTransport.transform_labels"]], "make_1d_gauss() (in module ot.datasets)": [[77, "id0"], [77, "ot.datasets.make_1D_gauss"]], "make_2d_samples_gauss() (in module ot.datasets)": [[77, "id1"], [77, "ot.datasets.make_2D_samples_gauss"]], "make_data_classif() (in module ot.datasets)": [[77, "id2"], [77, "ot.datasets.make_data_classif"]], "ot.datasets": [[77, "module-ot.datasets"]], "dist() (in module ot.dr)": [[78, "id0"], [78, "ot.dr.dist"]], "ewca() (in module ot.dr)": [[78, "id4"], [78, "ot.dr.ewca"]], "fda() (in module ot.dr)": [[78, "id7"], [78, "ot.dr.fda"]], "logsumexp() (in module ot.dr)": [[78, "id8"], [78, "ot.dr.logsumexp"]], "ot.dr": [[78, "module-ot.dr"]], "projection_robust_wasserstein() (in module ot.dr)": [[78, "id9"], [78, "ot.dr.projection_robust_wasserstein"]], "sinkhorn() (in module ot.dr)": [[78, "id12"], [78, "ot.dr.sinkhorn"]], "sinkhorn_log() (in module ot.dr)": [[78, "id13"], [78, "ot.dr.sinkhorn_log"]], "split_classes() (in module ot.dr)": [[78, "id14"], [78, "ot.dr.split_classes"]], "wda() (in module ot.dr)": [[78, "id15"], [78, "ot.dr.wda"]], "factored_optimal_transport() (in module ot.factored)": [[79, "id0"], [79, "ot.factored.factored_optimal_transport"]], "ot.factored": [[79, "module-ot.factored"]], "bures_wasserstein_barycenter() (in module ot.gaussian)": [[80, "id0"], [80, "ot.gaussian.bures_wasserstein_barycenter"]], "bures_wasserstein_distance() (in module ot.gaussian)": [[80, "id18"], [80, "ot.gaussian.bures_wasserstein_distance"]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[80, "id21"], [80, "ot.gaussian.bures_wasserstein_mapping"]], "empirical_bures_wasserstein_barycenter() (in module ot.gaussian)": [[80, "id25"], [80, "ot.gaussian.empirical_bures_wasserstein_barycenter"]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[80, "id28"], [80, "ot.gaussian.empirical_bures_wasserstein_distance"]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[80, "id31"], [80, "ot.gaussian.empirical_bures_wasserstein_mapping"]], "empirical_gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[80, "id35"], [80, "ot.gaussian.empirical_gaussian_gromov_wasserstein_distance"]], "empirical_gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[80, "id38"], [80, "ot.gaussian.empirical_gaussian_gromov_wasserstein_mapping"]], "gaussian_gromov_wasserstein_distance() (in module ot.gaussian)": [[80, "id40"], [80, "ot.gaussian.gaussian_gromov_wasserstein_distance"]], "gaussian_gromov_wasserstein_mapping() (in module ot.gaussian)": [[80, "id43"], [80, "ot.gaussian.gaussian_gromov_wasserstein_mapping"]], "ot.gaussian": [[80, "module-ot.gaussian"]], "fgw_distance_to_templates() (in module ot.gnn)": [[81, "ot.gnn.FGW_distance_to_templates"]], "tfgwpooling (class in ot.gnn)": [[81, "ot.gnn.TFGWPooling"]], "twpooling (class in ot.gnn)": [[81, "ot.gnn.TWPooling"]], "forward() (ot.gnn.tfgwpooling method)": [[81, "ot.gnn.TFGWPooling.forward"]], "forward() (ot.gnn.twpooling method)": [[81, "ot.gnn.TWPooling.forward"]], "ot.gnn": [[81, "module-ot.gnn"]], "wasserstein_distance_to_templates() (in module ot.gnn)": [[81, "ot.gnn.wasserstein_distance_to_templates"]], "bapg_fused_gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.BAPG_fused_gromov_wasserstein"]], "bapg_fused_gromov_wasserstein2() (in module ot.gromov)": [[82, "ot.gromov.BAPG_fused_gromov_wasserstein2"]], "bapg_gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.BAPG_gromov_wasserstein"]], "bapg_gromov_wasserstein2() (in module ot.gromov)": [[82, "ot.gromov.BAPG_gromov_wasserstein2"]], "gw_distance_estimation() (in module ot.gromov)": [[82, "ot.gromov.GW_distance_estimation"]], "entropic_fused_gromov_barycenters() (in module ot.gromov)": [[82, "ot.gromov.entropic_fused_gromov_barycenters"]], "entropic_fused_gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.entropic_fused_gromov_wasserstein"]], "entropic_fused_gromov_wasserstein2() (in module ot.gromov)": [[82, "ot.gromov.entropic_fused_gromov_wasserstein2"]], "entropic_gromov_barycenters() (in module ot.gromov)": [[82, "ot.gromov.entropic_gromov_barycenters"]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.entropic_gromov_wasserstein"]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[82, "ot.gromov.entropic_gromov_wasserstein2"]], "entropic_semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein"]], "entropic_semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[82, "ot.gromov.entropic_semirelaxed_fused_gromov_wasserstein2"]], "entropic_semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.entropic_semirelaxed_gromov_wasserstein"]], "entropic_semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[82, "ot.gromov.entropic_semirelaxed_gromov_wasserstein2"]], "fgw_barycenters() (in module ot.gromov)": [[82, "ot.gromov.fgw_barycenters"]], "fused_gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[82, "ot.gromov.fused_gromov_wasserstein2"]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[82, "ot.gromov.fused_gromov_wasserstein_dictionary_learning"]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[82, "ot.gromov.fused_gromov_wasserstein_linear_unmixing"]], "gromov_barycenters() (in module ot.gromov)": [[82, "ot.gromov.gromov_barycenters"]], "gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot.gromov)": [[82, "ot.gromov.gromov_wasserstein2"]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[82, "ot.gromov.gromov_wasserstein_dictionary_learning"]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[82, "ot.gromov.gromov_wasserstein_linear_unmixing"]], "gwggrad() (in module ot.gromov)": [[82, "ot.gromov.gwggrad"]], "gwloss() (in module ot.gromov)": [[82, "ot.gromov.gwloss"]], "init_matrix() (in module ot.gromov)": [[82, "ot.gromov.init_matrix"]], "init_matrix_semirelaxed() (in module ot.gromov)": [[82, "ot.gromov.init_matrix_semirelaxed"]], "ot.gromov": [[82, "module-ot.gromov"]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.pointwise_gromov_wasserstein"]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.sampled_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.semirelaxed_fused_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[82, "ot.gromov.semirelaxed_fused_gromov_wasserstein2"]], "semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[82, "ot.gromov.semirelaxed_gromov_wasserstein"]], "semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[82, "ot.gromov.semirelaxed_gromov_wasserstein2"]], "solve_gromov_linesearch() (in module ot.gromov)": [[82, "ot.gromov.solve_gromov_linesearch"]], "solve_semirelaxed_gromov_linesearch() (in module ot.gromov)": [[82, "ot.gromov.solve_semirelaxed_gromov_linesearch"]], "tensor_product() (in module ot.gromov)": [[82, "ot.gromov.tensor_product"]], "update_feature_matrix() (in module ot.gromov)": [[82, "ot.gromov.update_feature_matrix"]], "update_kl_loss() (in module ot.gromov)": [[82, "ot.gromov.update_kl_loss"]], "update_square_loss() (in module ot.gromov)": [[82, "ot.gromov.update_square_loss"]], "barycenter() (in module ot.lp)": [[83, "ot.lp.barycenter"]], "binary_search_circle() (in module ot.lp)": [[83, "ot.lp.binary_search_circle"]], "center_ot_dual() (in module ot.lp)": [[83, "ot.lp.center_ot_dual"]], "check_number_threads() (in module ot.lp)": [[83, "ot.lp.check_number_threads"]], "dmmot_monge_1dgrid_loss() (in module ot.lp)": [[83, "ot.lp.dmmot_monge_1dgrid_loss"]], "dmmot_monge_1dgrid_optimize() (in module ot.lp)": [[83, "ot.lp.dmmot_monge_1dgrid_optimize"]], "emd() (in module ot.lp)": [[83, "id0"], [83, "ot.lp.emd"]], "emd2() (in module ot.lp)": [[83, "id17"], [83, "ot.lp.emd2"]], "emd2_1d() (in module ot.lp)": [[83, "ot.lp.emd2_1d"]], "emd_1d() (in module ot.lp)": [[83, "ot.lp.emd_1d"]], "estimate_dual_null_weights() (in module ot.lp)": [[83, "ot.lp.estimate_dual_null_weights"]], "free_support_barycenter() (in module ot.lp)": [[83, "id24"], [83, "ot.lp.free_support_barycenter"]], "generalized_free_support_barycenter() (in module ot.lp)": [[83, "id28"], [83, "ot.lp.generalized_free_support_barycenter"]], "ot.lp": [[83, "module-ot.lp"]], "semidiscrete_wasserstein2_unif_circle() (in module ot.lp)": [[83, "ot.lp.semidiscrete_wasserstein2_unif_circle"]], "wasserstein_1d() (in module ot.lp)": [[83, "ot.lp.wasserstein_1d"]], "wasserstein_circle() (in module ot.lp)": [[83, "ot.lp.wasserstein_circle"]], "joint_ot_mapping_kernel() (in module ot.mapping)": [[84, "id0"], [84, "ot.mapping.joint_OT_mapping_kernel"]], "joint_ot_mapping_linear() (in module ot.mapping)": [[84, "id8"], [84, "ot.mapping.joint_OT_mapping_linear"]], "nearest_brenier_potential_fit() (in module ot.mapping)": [[84, "id11"], [84, "ot.mapping.nearest_brenier_potential_fit"]], "nearest_brenier_potential_predict_bounds() (in module ot.mapping)": [[84, "id13"], [84, "ot.mapping.nearest_brenier_potential_predict_bounds"]], "ot.mapping": [[84, "module-ot.mapping"]], "cg() (in module ot.optim)": [[85, "id0"], [85, "ot.optim.cg"]], "gcg() (in module ot.optim)": [[85, "id13"], [85, "ot.optim.gcg"]], "generic_conditional_gradient() (in module ot.optim)": [[85, "id17"], [85, "ot.optim.generic_conditional_gradient"]], "line_search_armijo() (in module ot.optim)": [[85, "id23"], [85, "ot.optim.line_search_armijo"]], "ot.optim": [[85, "module-ot.optim"]], "semirelaxed_cg() (in module ot.optim)": [[85, "id24"], [85, "ot.optim.semirelaxed_cg"]], "solve_1d_linesearch_quad() (in module ot.optim)": [[85, "id27"], [85, "ot.optim.solve_1d_linesearch_quad"]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[86, "id0"], [86, "ot.partial.entropic_partial_gromov_wasserstein"]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[86, "id17"], [86, "ot.partial.entropic_partial_gromov_wasserstein2"]], "entropic_partial_wasserstein() (in module ot.partial)": [[86, "id21"], [86, "ot.partial.entropic_partial_wasserstein"]], "gwgrad_partial() (in module ot.partial)": [[86, "id24"], [86, "ot.partial.gwgrad_partial"]], "gwloss_partial() (in module ot.partial)": [[86, "id27"], [86, "ot.partial.gwloss_partial"]], "ot.partial": [[86, "module-ot.partial"]], "partial_gromov_wasserstein() (in module ot.partial)": [[86, "id28"], [86, "ot.partial.partial_gromov_wasserstein"]], "partial_gromov_wasserstein2() (in module ot.partial)": [[86, "id31"], [86, "ot.partial.partial_gromov_wasserstein2"]], "partial_wasserstein() (in module ot.partial)": [[86, "id34"], [86, "ot.partial.partial_wasserstein"]], "partial_wasserstein2() (in module ot.partial)": [[86, "id37"], [86, "ot.partial.partial_wasserstein2"]], "partial_wasserstein_lagrange() (in module ot.partial)": [[86, "id40"], [86, "ot.partial.partial_wasserstein_lagrange"]], "ot.plot": [[87, "module-ot.plot"]], "plot1d_mat() (in module ot.plot)": [[87, "id0"], [87, "ot.plot.plot1D_mat"]], "plot2d_samples_mat() (in module ot.plot)": [[87, "id1"], [87, "ot.plot.plot2D_samples_mat"]], "complement_schur() (in module ot.regpath)": [[88, "id0"], [88, "ot.regpath.complement_schur"]], "compute_next_removal() (in module ot.regpath)": [[88, "id12"], [88, "ot.regpath.compute_next_removal"]], "compute_transport_plan() (in module ot.regpath)": [[88, "id15"], [88, "ot.regpath.compute_transport_plan"]], "construct_augmented_h() (in module ot.regpath)": [[88, "id18"], [88, "ot.regpath.construct_augmented_H"]], "fully_relaxed_path() (in module ot.regpath)": [[88, "id19"], [88, "ot.regpath.fully_relaxed_path"]], "ot.regpath": [[88, "module-ot.regpath"]], "ot_next_gamma() (in module ot.regpath)": [[88, "id21"], [88, "ot.regpath.ot_next_gamma"]], "recast_ot_as_lasso() (in module ot.regpath)": [[88, "id23"], [88, "ot.regpath.recast_ot_as_lasso"]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[88, "id25"], [88, "ot.regpath.recast_semi_relaxed_as_lasso"]], "regularization_path() (in module ot.regpath)": [[88, "id26"], [88, "ot.regpath.regularization_path"]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[88, "id28"], [88, "ot.regpath.semi_relaxed_next_gamma"]], "semi_relaxed_path() (in module ot.regpath)": [[88, "id30"], [88, "ot.regpath.semi_relaxed_path"]], "get_random_projections() (in module ot.sliced)": [[89, "id0"], [89, "ot.sliced.get_random_projections"]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[89, "id5"], [89, "ot.sliced.max_sliced_wasserstein_distance"]], "ot.sliced": [[89, "module-ot.sliced"]], "sliced_wasserstein_distance() (in module ot.sliced)": [[89, "id7"], [89, "ot.sliced.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[89, "id9"], [89, "ot.sliced.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[89, "id11"], [89, "ot.sliced.sliced_wasserstein_sphere_unif"]], "negentropy (class in ot.smooth)": [[90, "id0"], [90, "ot.smooth.NegEntropy"]], "omega() (ot.smooth.negentropy method)": [[90, "id7"], [90, "ot.smooth.NegEntropy.Omega"]], "omega() (ot.smooth.regularization method)": [[90, "id11"], [90, "ot.smooth.Regularization.Omega"]], "omega() (ot.smooth.sparsityconstrained method)": [[90, "id15"], [90, "ot.smooth.SparsityConstrained.Omega"]], "omega() (ot.smooth.squaredl2 method)": [[90, "id19"], [90, "ot.smooth.SquaredL2.Omega"]], "regularization (class in ot.smooth)": [[90, "id10"], [90, "ot.smooth.Regularization"]], "sparsityconstrained (class in ot.smooth)": [[90, "id14"], [90, "ot.smooth.SparsityConstrained"]], "squaredl2 (class in ot.smooth)": [[90, "id18"], [90, "ot.smooth.SquaredL2"]], "delta_omega() (ot.smooth.negentropy method)": [[90, "id8"], [90, "ot.smooth.NegEntropy.delta_Omega"]], "delta_omega() (ot.smooth.regularization method)": [[90, "id12"], [90, "ot.smooth.Regularization.delta_Omega"]], "delta_omega() (ot.smooth.sparsityconstrained method)": [[90, "id16"], [90, "ot.smooth.SparsityConstrained.delta_Omega"]], "delta_omega() (ot.smooth.squaredl2 method)": [[90, "id20"], [90, "ot.smooth.SquaredL2.delta_Omega"]], "dual_obj_grad() (in module ot.smooth)": [[90, "id22"], [90, "ot.smooth.dual_obj_grad"]], "get_plan_from_dual() (in module ot.smooth)": [[90, "id23"], [90, "ot.smooth.get_plan_from_dual"]], "get_plan_from_semi_dual() (in module ot.smooth)": [[90, "id24"], [90, "ot.smooth.get_plan_from_semi_dual"]], "max_omega() (ot.smooth.negentropy method)": [[90, "id9"], [90, "ot.smooth.NegEntropy.max_Omega"]], "max_omega() (ot.smooth.regularization method)": [[90, "id13"], [90, "ot.smooth.Regularization.max_Omega"]], "max_omega() (ot.smooth.sparsityconstrained method)": [[90, "id17"], [90, "ot.smooth.SparsityConstrained.max_Omega"]], "max_omega() (ot.smooth.squaredl2 method)": [[90, "id21"], [90, "ot.smooth.SquaredL2.max_Omega"]], "ot.smooth": [[90, "module-ot.smooth"]], "projection_simplex() (in module ot.smooth)": [[90, "id25"], [90, "ot.smooth.projection_simplex"]], "semi_dual_obj_grad() (in module ot.smooth)": [[90, "id26"], [90, "ot.smooth.semi_dual_obj_grad"]], "smooth_ot_dual() (in module ot.smooth)": [[90, "id27"], [90, "ot.smooth.smooth_ot_dual"]], "smooth_ot_semi_dual() (in module ot.smooth)": [[90, "id32"], [90, "ot.smooth.smooth_ot_semi_dual"]], "solve_dual() (in module ot.smooth)": [[90, "id37"], [90, "ot.smooth.solve_dual"]], "solve_semi_dual() (in module ot.smooth)": [[90, "id38"], [90, "ot.smooth.solve_semi_dual"]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[91, "id0"], [91, "ot.stochastic.averaged_sgd_entropic_transport"]], "batch_grad_dual() (in module ot.stochastic)": [[91, "id14"], [91, "ot.stochastic.batch_grad_dual"]], "c_transform_entropic() (in module ot.stochastic)": [[91, "id16"], [91, "ot.stochastic.c_transform_entropic"]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[91, "id18"], [91, "ot.stochastic.coordinate_grad_semi_dual"]], "loss_dual_entropic() (in module ot.stochastic)": [[91, "id20"], [91, "ot.stochastic.loss_dual_entropic"]], "loss_dual_quadratic() (in module ot.stochastic)": [[91, "id22"], [91, "ot.stochastic.loss_dual_quadratic"]], "ot.stochastic": [[91, "module-ot.stochastic"]], "plan_dual_entropic() (in module ot.stochastic)": [[91, "id24"], [91, "ot.stochastic.plan_dual_entropic"]], "plan_dual_quadratic() (in module ot.stochastic)": [[91, "id26"], [91, "ot.stochastic.plan_dual_quadratic"]], "sag_entropic_transport() (in module ot.stochastic)": [[91, "id28"], [91, "ot.stochastic.sag_entropic_transport"]], "sgd_entropic_regularization() (in module ot.stochastic)": [[91, "id30"], [91, "ot.stochastic.sgd_entropic_regularization"]], "solve_dual_entropic() (in module ot.stochastic)": [[91, "id32"], [91, "ot.stochastic.solve_dual_entropic"]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[91, "id34"], [91, "ot.stochastic.solve_semi_dual_entropic"]], "barycenter_unbalanced() (in module ot.unbalanced)": [[92, "id0"], [92, "ot.unbalanced.barycenter_unbalanced"]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[92, "id25"], [92, "ot.unbalanced.barycenter_unbalanced_sinkhorn"]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[92, "id29"], [92, "ot.unbalanced.barycenter_unbalanced_stabilized"]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[92, "id33"], [92, "ot.unbalanced.lbfgsb_unbalanced"]], "mm_unbalanced() (in module ot.unbalanced)": [[92, "id35"], [92, "ot.unbalanced.mm_unbalanced"]], "mm_unbalanced2() (in module ot.unbalanced)": [[92, "id38"], [92, "ot.unbalanced.mm_unbalanced2"]], "ot.unbalanced": [[92, "module-ot.unbalanced"]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[92, "id40"], [92, "ot.unbalanced.sinkhorn_knopp_unbalanced"]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[92, "id44"], [92, "ot.unbalanced.sinkhorn_stabilized_unbalanced"]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[92, "id48"], [92, "ot.unbalanced.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[92, "id54"], [92, "ot.unbalanced.sinkhorn_unbalanced2"]], "baseestimator (class in ot.utils)": [[93, "id12"], [93, "ot.utils.BaseEstimator"]], "lazytensor (class in ot.utils)": [[93, "id15"], [93, "ot.utils.LazyTensor"]], "otresult (class in ot.utils)": [[93, "id16"], [93, "ot.utils.OTResult"]], "undefinedparameter": [[93, "ot.utils.UndefinedParameter"]], "a_to_b (ot.utils.otresult property)": [[93, "id29"], [93, "ot.utils.OTResult.a_to_b"]], "b_to_a (ot.utils.otresult property)": [[93, "id30"], [93, "ot.utils.OTResult.b_to_a"]], "check_params() (in module ot.utils)": [[93, "id46"], [93, "ot.utils.check_params"]], "check_random_state() (in module ot.utils)": [[93, "id47"], [93, "ot.utils.check_random_state"]], "citation (ot.utils.otresult property)": [[93, "id31"], [93, "ot.utils.OTResult.citation"]], "clean_zeros() (in module ot.utils)": [[93, "id48"], [93, "ot.utils.clean_zeros"]], "cost_normalization() (in module ot.utils)": [[93, "id49"], [93, "ot.utils.cost_normalization"]], "deprecated (class in ot.utils)": [[93, "id50"], [93, "ot.utils.deprecated"]], "dist() (in module ot.utils)": [[93, "id51"], [93, "ot.utils.dist"]], "dist0() (in module ot.utils)": [[93, "id52"], [93, "ot.utils.dist0"]], "dots() (in module ot.utils)": [[93, "id53"], [93, "ot.utils.dots"]], "euclidean_distances() (in module ot.utils)": [[93, "id54"], [93, "ot.utils.euclidean_distances"]], "get_coordinate_circle() (in module ot.utils)": [[93, "id55"], [93, "ot.utils.get_coordinate_circle"]], "get_lowrank_lazytensor() (in module ot.utils)": [[93, "id56"], [93, "ot.utils.get_lowrank_lazytensor"]], "get_parameter_pair() (in module ot.utils)": [[93, "id57"], [93, "ot.utils.get_parameter_pair"]], "get_params() (ot.utils.baseestimator method)": [[93, "id13"], [93, "ot.utils.BaseEstimator.get_params"]], "is_all_finite() (in module ot.utils)": [[93, "id58"], [93, "ot.utils.is_all_finite"]], "kernel() (in module ot.utils)": [[93, "id59"], [93, "ot.utils.kernel"]], "label_normalization() (in module ot.utils)": [[93, "id60"], [93, "ot.utils.label_normalization"]], "laplacian() (in module ot.utils)": [[93, "id61"], [93, "ot.utils.laplacian"]], "lazy_plan (ot.utils.otresult attribute)": [[93, "id25"], [93, "ot.utils.OTResult.lazy_plan"]], "lazy_plan (ot.utils.otresult property)": [[93, "id0"], [93, "id32"]], "list_to_array() (in module ot.utils)": [[93, "id62"], [93, "ot.utils.list_to_array"]], "log (ot.utils.otresult property)": [[93, "id33"], [93, "ot.utils.OTResult.log"]], "marginal_a (ot.utils.otresult attribute)": [[93, "id27"], [93, "ot.utils.OTResult.marginal_a"]], "marginal_a (ot.utils.otresult property)": [[93, "id1"], [93, "id34"]], "marginal_b (ot.utils.otresult attribute)": [[93, "id28"], [93, "ot.utils.OTResult.marginal_b"]], "marginal_b (ot.utils.otresult property)": [[93, "id2"], [93, "id35"]], "marginals (ot.utils.otresult attribute)": [[93, "id26"], [93, "ot.utils.OTResult.marginals"]], "marginals (ot.utils.otresult property)": [[93, "id3"], [93, "id36"]], "ot.utils": [[93, "module-ot.utils"]], "parmap() (in module ot.utils)": [[93, "id63"], [93, "ot.utils.parmap"]], "plan (ot.utils.otresult attribute)": [[93, "id23"], [93, "ot.utils.OTResult.plan"]], "plan (ot.utils.otresult property)": [[93, "id37"], [93, "id4"]], "potential_a (ot.utils.otresult attribute)": [[93, "id18"], [93, "ot.utils.OTResult.potential_a"]], "potential_a (ot.utils.otresult property)": [[93, "id38"], [93, "id5"]], "potential_b (ot.utils.otresult attribute)": [[93, "id19"], [93, "ot.utils.OTResult.potential_b"]], "potential_b (ot.utils.otresult property)": [[93, "id39"], [93, "id6"]], "potentials (ot.utils.otresult attribute)": [[93, "id17"], [93, "ot.utils.OTResult.potentials"]], "potentials (ot.utils.otresult property)": [[93, "id40"], [93, "id7"]], "proj_simplex() (in module ot.utils)": [[93, "id64"], [93, "ot.utils.proj_simplex"]], "projection_sparse_simplex() (in module ot.utils)": [[93, "id65"], [93, "ot.utils.projection_sparse_simplex"]], "reduce_lazytensor() (in module ot.utils)": [[93, "id66"], [93, "ot.utils.reduce_lazytensor"]], "set_params() (ot.utils.baseestimator method)": [[93, "id14"], [93, "ot.utils.BaseEstimator.set_params"]], "sparse_plan (ot.utils.otresult attribute)": [[93, "id24"], [93, "ot.utils.OTResult.sparse_plan"]], "sparse_plan (ot.utils.otresult property)": [[93, "id41"], [93, "id8"]], "status (ot.utils.otresult property)": [[93, "id42"], [93, "ot.utils.OTResult.status"]], "tic() (in module ot.utils)": [[93, "id67"], [93, "ot.utils.tic"]], "toc() (in module ot.utils)": [[93, "id68"], [93, "ot.utils.toc"]], "toq() (in module ot.utils)": [[93, "id69"], [93, "ot.utils.toq"]], "unif() (in module ot.utils)": [[93, "id70"], [93, "ot.utils.unif"]], "value (ot.utils.otresult attribute)": [[93, "id20"], [93, "ot.utils.OTResult.value"]], "value (ot.utils.otresult property)": [[93, "id43"], [93, "id9"]], "value_linear (ot.utils.otresult attribute)": [[93, "id21"], [93, "ot.utils.OTResult.value_linear"]], "value_linear (ot.utils.otresult property)": [[93, "id10"], [93, "id44"]], "value_quad (ot.utils.otresult attribute)": [[93, "id22"], [93, "ot.utils.OTResult.value_quad"]], "value_quad (ot.utils.otresult property)": [[93, "id11"], [93, "id45"]], "ot.weak": [[94, "module-ot.weak"]], "weak_optimal_transport() (in module ot.weak)": [[94, "id0"], [94, "ot.weak.weak_optimal_transport"]]}})