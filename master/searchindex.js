Search.setIndex({"docnames": ["all", "auto_examples/backends/plot_dual_ot_pytorch", "auto_examples/backends/plot_optim_gromov_pytorch", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch", "auto_examples/backends/plot_ssw_unif_torch", "auto_examples/backends/plot_stoch_continuous_ot_pytorch", "auto_examples/backends/plot_unmix_optim_torch", "auto_examples/backends/plot_wass1d_torch", "auto_examples/backends/plot_wass2_gan_torch", "auto_examples/backends/sg_execution_times", "auto_examples/barycenters/plot_barycenter_1D", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic", "auto_examples/barycenters/plot_convolutional_barycenter", "auto_examples/barycenters/plot_debiased_barycenter", "auto_examples/barycenters/plot_free_support_barycenter", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter", "auto_examples/barycenters/plot_generalized_free_support_barycenter", "auto_examples/barycenters/sg_execution_times", "auto_examples/domain-adaptation/plot_otda_classes", "auto_examples/domain-adaptation/plot_otda_color_images", "auto_examples/domain-adaptation/plot_otda_d2", "auto_examples/domain-adaptation/plot_otda_jcpot", "auto_examples/domain-adaptation/plot_otda_laplacian", "auto_examples/domain-adaptation/plot_otda_linear_mapping", "auto_examples/domain-adaptation/plot_otda_mapping", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images", "auto_examples/domain-adaptation/plot_otda_semi_supervised", "auto_examples/domain-adaptation/sg_execution_times", "auto_examples/gromov/plot_barycenter_fgw", "auto_examples/gromov/plot_fgw", "auto_examples/gromov/plot_gromov", "auto_examples/gromov/plot_gromov_barycenter", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning", "auto_examples/gromov/plot_semirelaxed_fgw", "auto_examples/gromov/sg_execution_times", "auto_examples/index", "auto_examples/others/plot_COOT", "auto_examples/others/plot_WDA", "auto_examples/others/plot_WeakOT_VS_OT", "auto_examples/others/plot_factored_coupling", "auto_examples/others/plot_learning_weights_with_COOT", "auto_examples/others/plot_logo", "auto_examples/others/plot_screenkhorn_1D", "auto_examples/others/plot_stochastic", "auto_examples/others/sg_execution_times", "auto_examples/plot_Intro_OT", "auto_examples/plot_OT_1D", "auto_examples/plot_OT_1D_smooth", "auto_examples/plot_OT_2D_samples", "auto_examples/plot_OT_L1_vs_L2", "auto_examples/plot_compute_emd", "auto_examples/plot_compute_wasserstein_circle", "auto_examples/plot_optim_OTreg", "auto_examples/sg_execution_times", "auto_examples/sliced-wasserstein/plot_variance", "auto_examples/sliced-wasserstein/plot_variance_ssw", "auto_examples/sliced-wasserstein/sg_execution_times", "auto_examples/unbalanced-partial/plot_UOT_1D", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov", "auto_examples/unbalanced-partial/plot_regpath", "auto_examples/unbalanced-partial/plot_unbalanced_OT", "auto_examples/unbalanced-partial/sg_execution_times", "code_of_conduct", "contributing", "contributors", "gen_modules/ot.backend", "gen_modules/ot.bregman", "gen_modules/ot.coot", "gen_modules/ot.da", "gen_modules/ot.datasets", "gen_modules/ot.dr", "gen_modules/ot.factored", "gen_modules/ot.gaussian", "gen_modules/ot.gromov", "gen_modules/ot.lp", "gen_modules/ot.optim", "gen_modules/ot.partial", "gen_modules/ot.plot", "gen_modules/ot.regpath", "gen_modules/ot.sliced", "gen_modules/ot.smooth", "gen_modules/ot.stochastic", "gen_modules/ot.unbalanced", "gen_modules/ot.utils", "gen_modules/ot.weak", "index", "quickstart", "releases"], "filenames": ["all.rst", "auto_examples/backends/plot_dual_ot_pytorch.rst", "auto_examples/backends/plot_optim_gromov_pytorch.rst", "auto_examples/backends/plot_sliced_wass_grad_flow_pytorch.rst", "auto_examples/backends/plot_ssw_unif_torch.rst", "auto_examples/backends/plot_stoch_continuous_ot_pytorch.rst", "auto_examples/backends/plot_unmix_optim_torch.rst", "auto_examples/backends/plot_wass1d_torch.rst", "auto_examples/backends/plot_wass2_gan_torch.rst", "auto_examples/backends/sg_execution_times.rst", "auto_examples/barycenters/plot_barycenter_1D.rst", "auto_examples/barycenters/plot_barycenter_lp_vs_entropic.rst", "auto_examples/barycenters/plot_convolutional_barycenter.rst", "auto_examples/barycenters/plot_debiased_barycenter.rst", "auto_examples/barycenters/plot_free_support_barycenter.rst", "auto_examples/barycenters/plot_free_support_sinkhorn_barycenter.rst", "auto_examples/barycenters/plot_generalized_free_support_barycenter.rst", "auto_examples/barycenters/sg_execution_times.rst", "auto_examples/domain-adaptation/plot_otda_classes.rst", "auto_examples/domain-adaptation/plot_otda_color_images.rst", "auto_examples/domain-adaptation/plot_otda_d2.rst", "auto_examples/domain-adaptation/plot_otda_jcpot.rst", "auto_examples/domain-adaptation/plot_otda_laplacian.rst", "auto_examples/domain-adaptation/plot_otda_linear_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping.rst", "auto_examples/domain-adaptation/plot_otda_mapping_colors_images.rst", "auto_examples/domain-adaptation/plot_otda_semi_supervised.rst", "auto_examples/domain-adaptation/sg_execution_times.rst", "auto_examples/gromov/plot_barycenter_fgw.rst", "auto_examples/gromov/plot_fgw.rst", "auto_examples/gromov/plot_gromov.rst", "auto_examples/gromov/plot_gromov_barycenter.rst", "auto_examples/gromov/plot_gromov_wasserstein_dictionary_learning.rst", "auto_examples/gromov/plot_semirelaxed_fgw.rst", "auto_examples/gromov/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/others/plot_COOT.rst", "auto_examples/others/plot_WDA.rst", "auto_examples/others/plot_WeakOT_VS_OT.rst", "auto_examples/others/plot_factored_coupling.rst", "auto_examples/others/plot_learning_weights_with_COOT.rst", "auto_examples/others/plot_logo.rst", "auto_examples/others/plot_screenkhorn_1D.rst", "auto_examples/others/plot_stochastic.rst", "auto_examples/others/sg_execution_times.rst", "auto_examples/plot_Intro_OT.rst", "auto_examples/plot_OT_1D.rst", "auto_examples/plot_OT_1D_smooth.rst", "auto_examples/plot_OT_2D_samples.rst", "auto_examples/plot_OT_L1_vs_L2.rst", "auto_examples/plot_compute_emd.rst", "auto_examples/plot_compute_wasserstein_circle.rst", "auto_examples/plot_optim_OTreg.rst", "auto_examples/sg_execution_times.rst", "auto_examples/sliced-wasserstein/plot_variance.rst", "auto_examples/sliced-wasserstein/plot_variance_ssw.rst", "auto_examples/sliced-wasserstein/sg_execution_times.rst", "auto_examples/unbalanced-partial/plot_UOT_1D.rst", "auto_examples/unbalanced-partial/plot_UOT_barycenter_1D.rst", "auto_examples/unbalanced-partial/plot_partial_wass_and_gromov.rst", "auto_examples/unbalanced-partial/plot_regpath.rst", "auto_examples/unbalanced-partial/plot_unbalanced_OT.rst", "auto_examples/unbalanced-partial/sg_execution_times.rst", "code_of_conduct.rst", "contributing.rst", "contributors.rst", "gen_modules/ot.backend.rst", "gen_modules/ot.bregman.rst", "gen_modules/ot.coot.rst", "gen_modules/ot.da.rst", "gen_modules/ot.datasets.rst", "gen_modules/ot.dr.rst", "gen_modules/ot.factored.rst", "gen_modules/ot.gaussian.rst", "gen_modules/ot.gromov.rst", "gen_modules/ot.lp.rst", "gen_modules/ot.optim.rst", "gen_modules/ot.partial.rst", "gen_modules/ot.plot.rst", "gen_modules/ot.regpath.rst", "gen_modules/ot.sliced.rst", "gen_modules/ot.smooth.rst", "gen_modules/ot.stochastic.rst", "gen_modules/ot.unbalanced.rst", "gen_modules/ot.utils.rst", "gen_modules/ot.weak.rst", "index.rst", "quickstart.rst", "releases.rst"], "titles": ["API and modules", "Dual OT solvers for entropic and quadratic regularized OT with Pytorch", "Optimizing the Gromov-Wasserstein distance with PyTorch", "Sliced Wasserstein barycenter and gradient flow with PyTorch", "Spherical Sliced-Wasserstein Embedding on Sphere", "Continuous OT plan estimation with Pytorch", "Wasserstein unmixing with PyTorch", "Wasserstein 1D (flow and barycenter) with PyTorch", "Wasserstein 2 Minibatch GAN with PyTorch", "Computation times", "1D Wasserstein barycenter demo", "1D Wasserstein barycenter: exact LP vs entropic regularization", "Convolutional Wasserstein Barycenter example", "Debiased Sinkhorn barycenter demo", "2D free support Wasserstein barycenters of distributions", "2D free support Sinkhorn barycenters of distributions", "Generalized Wasserstein Barycenter Demo", "Computation times", "OT for domain adaptation", "OT for image color adaptation", "OT for domain adaptation on empirical distributions", "OT for multi-source target shift", "OT with Laplacian regularization for domain adaptation", "Linear OT mapping estimation", "OT mapping estimation for domain adaptation", "OT for image color adaptation with mapping estimation", "OTDA unsupervised vs semi-supervised setting", "Computation times", "Plot graphs barycenter using FGW", "Plot Fused-Gromov-Wasserstein", "Gromov-Wasserstein example", "Gromov-Wasserstein Barycenter example", "(Fused) Gromov-Wasserstein Linear Dictionary Learning", "Semi-relaxed (Fused) Gromov-Wasserstein example", "Computation times", "Examples gallery", "Row and column alignments with CO-Optimal Transport", "Wasserstein Discriminant Analysis", "Weak Optimal Transport VS exact Optimal Transport", "Optimal transport with factored couplings", "Learning sample marginal distribution with CO-Optimal Transport", "Logo of the POT toolbox", "Screened optimal transport (Screenkhorn)", "Stochastic examples", "Computation times", "Introduction to Optimal Transport with Python", "Optimal Transport for 1D distributions", "Smooth and sparse OT example", "Optimal Transport between 2D empirical distributions", "Optimal Transport with different ground metrics", "OT distances in 1D", "OT distance on the Circle", "Regularized OT with generic solver", "Computation times", "Sliced Wasserstein Distance on 2D distributions", "Spherical Sliced Wasserstein on distributions in S^2", "Computation times", "1D Unbalanced optimal transport", "1D Wasserstein barycenter demo for Unbalanced distributions", "Partial Wasserstein and Gromov-Wasserstein example", "Regularization path of l2-penalized unbalanced optimal transport", "2D examples of exact and entropic unbalanced optimal transport", "Computation times", "Code of conduct", "Contributing to POT", "Contributors", "ot.backend", "ot.bregman", "ot.coot", "ot.da", "ot.datasets", "ot.dr", "ot.factored", "ot.gaussian", "ot.gromov", "ot.lp", "ot.optim", "ot.partial", "ot.plot", "ot.regpath", "ot.sliced", "ot.smooth", "ot.stochastic", "ot.unbalanced", "ot.utils", "ot.weak", "POT: Python Optimal Transport", "Quick start guide", "Releases"], "terms": {"The": [0, 2, 7, 10, 12, 26, 28, 30, 31, 32, 38, 40, 45, 48, 51, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88], "list": [0, 5, 10, 28, 58, 64, 66, 67, 68, 69, 72, 74, 75, 79, 82, 84, 85, 86, 88], "automat": [0, 6, 7, 40, 75, 87, 88], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 66, 67, 69, 71, 75, 77, 78, 79, 82, 83, 84, 86, 87, 88], "sub": [0, 79, 86, 87], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 21, 26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 43, 45, 48, 50, 51, 54, 55, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "follow": [0, 6, 7, 8, 11, 31, 40, 45, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 86, 87, 88], "lp": [0, 7, 14, 16, 17, 35, 51, 67, 68, 69, 70, 76, 81, 83, 84, 86, 87, 88], "bregman": [0, 10, 11, 12, 13, 14, 15, 18, 20, 21, 22, 26, 30, 42, 45, 48, 52, 69, 72, 75, 76, 77, 83, 85, 86, 88], "optim": [0, 1, 3, 5, 8, 9, 11, 14, 19, 24, 25, 28, 29, 33, 35, 37, 43, 44, 52, 53, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 88], "util": [0, 2, 6, 7, 10, 11, 13, 40, 43, 45, 58, 66, 69, 75, 82, 87, 88], "dataset": [0, 1, 7, 8, 10, 11, 13, 18, 20, 21, 22, 24, 26, 28, 30, 37, 38, 42, 46, 47, 48, 50, 52, 54, 57, 58, 59, 60, 61, 71, 74, 82, 87, 88], "gromov": [0, 9, 28, 34, 62, 65, 70, 76, 77, 84, 86, 88], "smooth": [0, 11, 35, 53, 65, 70, 78, 86, 87, 88], "stochast": [0, 1, 2, 5, 35, 44, 65, 67, 74, 78, 86, 87, 88], "partial": [0, 58, 61, 62, 65, 70, 82, 86, 88], "regpath": 0, "unbalanc": [0, 59, 62, 65, 67, 69, 70, 77, 78, 79, 84, 86, 88], "ar": [0, 7, 12, 14, 20, 26, 28, 31, 32, 33, 38, 40, 43, 45, 47, 48, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "due": [0, 69, 75, 87, 88], "addit": [0, 64, 68, 75, 79, 86, 87, 88], "depend": [0, 32, 66, 74, 76, 87, 88], "dr": [0, 37, 86, 87, 88], "pymanopt": [0, 71, 86, 87, 88], "autograd": [0, 4, 71, 86, 87, 88], "plot": [0, 2, 7, 10, 11, 13, 32, 33, 34, 35, 40, 52, 87, 88], "matplotlib": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 88], "barycent": [0, 9, 17, 34, 54, 62, 65, 67, 69, 70, 74, 75, 80, 83, 84, 86, 88], "A": [0, 3, 10, 11, 12, 13, 16, 23, 24, 25, 26, 28, 37, 42, 43, 45, 52, 58, 64, 67, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 86, 87, 88], "m": [0, 2, 6, 7, 8, 10, 11, 13, 20, 21, 24, 25, 29, 32, 33, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 50, 52, 55, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "reg": [0, 1, 5, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 26, 30, 32, 37, 43, 45, 47, 48, 50, 52, 58, 59, 60, 61, 67, 69, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 86, 87, 88], "weight": [0, 10, 11, 12, 13, 14, 15, 16, 32, 33, 38, 40, 45, 48, 58, 60, 67, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88], "none": [0, 2, 5, 13, 15, 28, 29, 32, 33, 36, 40, 45, 51, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 88], "method": [0, 7, 13, 28, 43, 64, 67, 68, 69, 71, 74, 75, 81, 82, 83, 84, 86, 87, 88], "sinkhorn": [0, 8, 14, 17, 18, 20, 22, 26, 30, 35, 42, 52, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 83, 84, 85, 86, 88], "numitermax": [0, 14, 15, 18, 20, 21, 22, 26, 30, 43, 45, 52, 67, 69, 72, 75, 76, 77, 81, 82, 83, 85], "10000": [0, 5, 66, 67, 74, 82], "stopthr": [0, 67, 69, 71, 72, 75, 76, 77, 81, 83, 85, 88], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87], "0001": [0, 67, 76, 79], "verbos": [0, 11, 18, 21, 24, 25, 29, 30, 32, 36, 40, 42, 46, 52, 57, 59, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 83, 85], "fals": [0, 13, 25, 28, 32, 33, 40, 42, 51, 55, 60, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85], "log": [0, 13, 21, 28, 29, 30, 32, 33, 36, 40, 43, 52, 54, 55, 59, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88], "warn": [0, 2, 15, 18, 20, 21, 22, 26, 30, 31, 32, 42, 45, 52, 58, 64, 67, 69, 84, 88], "true": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 13, 16, 18, 21, 24, 25, 28, 29, 30, 32, 33, 36, 37, 40, 41, 42, 43, 45, 46, 52, 55, 57, 59, 60, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 88], "kwarg": [0, 67, 69, 70, 72, 74, 76, 77, 78, 83, 84, 85], "sourc": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "comput": [0, 2, 6, 7, 8, 11, 32, 40, 42, 46, 47, 51, 54, 55, 57, 66, 67, 68, 69, 71, 73, 74, 75, 77, 79, 80, 81, 82, 83, 84, 86, 88], "entrop": [0, 9, 15, 17, 30, 35, 59, 62, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 88], "regular": [0, 9, 10, 12, 15, 17, 18, 19, 20, 21, 25, 26, 27, 30, 32, 42, 53, 58, 62, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88], "wasserstein": [0, 9, 17, 34, 44, 50, 56, 62, 65, 67, 69, 70, 71, 73, 74, 75, 76, 77, 80, 83, 84, 86, 88], "distribut": [0, 1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 17, 24, 27, 29, 31, 35, 38, 39, 44, 45, 49, 50, 51, 52, 53, 56, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 75, 77, 78, 79, 80, 82, 83, 84, 85, 86, 88], "mathbf": [0, 6, 32, 33, 45, 61, 67, 68, 69, 71, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85], "solv": [0, 2, 20, 26, 40, 41, 61, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 88], "problem": [0, 6, 7, 8, 10, 11, 20, 21, 26, 40, 41, 58, 61, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88], "mathop": [0, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85], "arg": [0, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 87], "min": [0, 32, 37, 45, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 87], "_": [0, 24, 32, 36, 40, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87], "quad": [0, 6, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 87], "sum_i": [0, 29, 66, 67, 75, 81, 82, 83, 84, 85, 87], "w_": [0, 32, 67, 74, 75, 83], "_i": [0, 67, 71, 75, 79, 81, 82, 83, 84, 85], "where": [0, 4, 6, 7, 28, 32, 40, 43, 45, 61, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 85, 87, 88], "cdot": [0, 61, 67, 69, 71, 75, 76, 77, 82, 83, 87], "distanc": [0, 3, 8, 9, 28, 31, 32, 33, 36, 45, 53, 55, 56, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 80, 81, 83, 84, 86, 88], "see": [0, 2, 5, 8, 45, 64, 66, 67, 69, 70, 74, 75, 77, 79, 81, 82, 83, 87, 88], "sinkhorn_stabil": [0, 67, 69, 83, 87], "sinkhorn_log": [0, 67, 68, 71, 87, 88], "train": [0, 19, 25, 37, 40, 67, 69, 70, 71, 75, 83, 87, 88], "column": [0, 6, 33, 35, 44, 47, 67, 68, 75, 79, 81, 83], "matrix": [0, 2, 6, 8, 10, 11, 13, 19, 23, 25, 28, 31, 32, 38, 40, 48, 49, 50, 52, 58, 60, 61, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "respect": [0, 6, 16, 32, 45, 63, 66, 67, 68, 69, 71, 74, 75, 83, 86, 87, 88], "term": [0, 8, 48, 52, 67, 68, 69, 71, 74, 75, 76, 77, 81, 82, 83, 84, 87, 88], "cost": [0, 20, 26, 36, 37, 38, 40, 42, 43, 46, 47, 48, 49, 57, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "algorithm": [0, 15, 31, 42, 58, 64, 67, 68, 69, 71, 72, 74, 75, 76, 81, 82, 83, 85, 86, 87, 88], "us": [0, 2, 3, 6, 7, 8, 10, 11, 19, 24, 25, 26, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 45, 46, 52, 57, 58, 59, 61, 63, 64, 66, 72, 74, 80, 85, 88], "knopp": [0, 65, 66, 67, 83, 86, 87, 88], "scale": [0, 31, 33, 41, 43, 58, 67, 69, 75, 81, 82, 83, 84, 86, 87, 88], "propos": [0, 3, 6, 8, 10, 11, 13, 16, 37, 52, 54, 55, 58, 67, 69, 72, 73, 74, 75, 77, 82, 83, 85, 87, 88], "3": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 28, 29, 30, 31, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 61, 67, 69, 75, 76, 77, 79, 80, 82, 83, 86, 87], "paramet": [0, 2, 5, 6, 7, 8, 11, 12, 18, 20, 21, 22, 26, 28, 30, 31, 32, 39, 42, 51, 52, 57, 58, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "arrai": [0, 2, 6, 7, 10, 11, 12, 13, 15, 16, 21, 23, 28, 30, 31, 32, 38, 41, 45, 48, 54, 58, 59, 60, 61, 66, 67, 68, 69, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88], "like": [0, 2, 45, 64, 65, 67, 68, 69, 72, 73, 74, 75, 76, 82, 83, 84, 85, 88], "shape": [0, 2, 3, 4, 7, 10, 11, 13, 14, 16, 19, 21, 23, 25, 26, 28, 29, 31, 32, 33, 37, 41, 45, 58, 64, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88], "dim": [0, 4, 31, 67, 80, 83, 84], "n_hist": [0, 67, 83], "size": [0, 4, 6, 8, 15, 19, 25, 32, 33, 36, 45, 51, 63, 66, 67, 68, 69, 70, 71, 74, 75, 79, 82, 84, 88], "loss": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 18, 24, 25, 29, 32, 38, 40, 48, 49, 52, 58, 59, 60, 61, 67, 69, 74, 75, 76, 77, 81, 82, 83, 84, 86, 87, 88], "float": [0, 1, 5, 6, 7, 8, 12, 28, 31, 40, 45, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "str": [0, 30, 32, 45, 59, 61, 67, 69, 70, 71, 74, 75, 81, 82, 83, 84], "option": [0, 45, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88], "solver": [0, 9, 11, 35, 41, 46, 53, 65, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 88], "either": [0, 24, 61, 67, 69, 71, 74, 75, 83], "each": [0, 6, 8, 28, 32, 45, 67, 68, 69, 74, 75, 81, 82, 83, 84, 86, 87, 88], "histogram": [0, 40, 67, 68, 70, 72, 75, 77, 79, 81, 83, 84, 85, 86, 87, 88], "simplex": [0, 2, 6, 7, 32, 40, 67, 75, 81, 84, 86, 87], "barycentr": [0, 24, 67, 69, 75, 83, 87], "coodin": [0, 67, 83], "int": [0, 2, 31, 32, 54, 55, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87], "max": [0, 10, 11, 13, 30, 31, 32, 33, 38, 42, 45, 46, 47, 49, 50, 51, 52, 57, 58, 60, 61, 66, 67, 69, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "number": [0, 1, 5, 6, 8, 14, 15, 16, 18, 20, 21, 22, 26, 28, 29, 30, 31, 32, 42, 45, 52, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "iter": [0, 1, 2, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 26, 30, 31, 36, 37, 40, 45, 52, 58, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 85, 86, 87, 88], "stop": [0, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 83, 85, 88], "threshold": [0, 28, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 81, 83, 85, 87], "error": [0, 7, 15, 28, 32, 58, 64, 66, 67, 69, 71, 74, 75, 77, 81, 83, 86, 87, 88], "bool": [0, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85], "print": [0, 1, 2, 4, 5, 6, 8, 30, 32, 33, 36, 40, 43, 45, 59, 64, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 83, 85, 88], "inform": [0, 24, 25, 32, 36, 40, 42, 43, 63, 64, 67, 68, 69, 71, 72, 74, 75, 76, 77, 81, 82, 83, 85, 86, 87], "along": [0, 2, 6, 7, 66, 67, 69, 71, 72, 74, 75, 76, 77, 79, 81, 83, 85], "record": [0, 7, 64, 67, 68, 69, 72, 73, 74, 75, 76, 77, 81, 82, 83, 85], "rais": [0, 64, 66, 67, 74, 75, 77, 84, 88], "doesn": [0, 67], "t": [0, 6, 7, 10, 11, 13, 31, 32, 33, 36, 37, 40, 41, 45, 51, 55, 58, 60, 61, 67, 68, 69, 71, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "converg": [0, 2, 15, 18, 20, 21, 22, 26, 30, 31, 45, 52, 67, 69, 74, 75, 76, 86, 87, 88], "return": [0, 2, 3, 4, 5, 6, 8, 16, 19, 23, 25, 28, 30, 31, 33, 45, 51, 52, 60, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "dict": [0, 32, 67, 68, 69, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 85], "dictionari": [0, 2, 34, 35, 65, 67, 68, 69, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 85, 86, 87, 88], "onli": [0, 6, 14, 29, 45, 66, 67, 68, 69, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88], "benam": [0, 10, 11, 67, 77, 83, 86, 87], "j": [0, 2, 10, 11, 12, 16, 19, 21, 25, 29, 31, 32, 33, 36, 40, 41, 45, 52, 60, 61, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87], "d": [0, 10, 11, 14, 15, 23, 28, 32, 45, 52, 59, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87], "carlier": [0, 10, 11, 67, 75, 77, 83, 86, 87], "g": [0, 4, 8, 10, 11, 19, 21, 25, 28, 29, 32, 33, 42, 43, 45, 46, 48, 52, 57, 58, 60, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88], "cuturi": [0, 8, 10, 11, 13, 37, 43, 65, 67, 69, 71, 73, 74, 75, 77, 81, 82, 83, 86, 87], "nenna": [0, 10, 11, 67, 77, 83, 86, 87], "l": [0, 8, 10, 11, 13, 29, 55, 58, 60, 67, 68, 69, 71, 74, 75, 77, 79, 80, 81, 83, 86, 87], "peyr\u00e9": [0, 8, 10, 11, 43, 52, 58, 65, 67, 69, 73, 74, 75, 76, 77, 82, 83, 86, 87], "2015": [0, 3, 10, 11, 52, 54, 67, 69, 76, 77, 80, 83, 86, 87], "project": [0, 2, 3, 4, 5, 6, 7, 10, 11, 15, 18, 20, 21, 22, 26, 30, 32, 33, 40, 42, 45, 51, 52, 58, 59, 63, 64, 65, 67, 71, 74, 75, 77, 80, 81, 83, 84, 86, 87, 88], "transport": [0, 3, 5, 10, 11, 25, 28, 33, 35, 44, 52, 53, 58, 59, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 88], "siam": [0, 10, 11, 19, 25, 52, 67, 69, 75, 76, 77, 83, 86, 87], "journal": [0, 3, 10, 11, 19, 25, 52, 54, 67, 69, 73, 74, 75, 76, 77, 80, 83, 85, 86, 87, 88], "scientif": [0, 10, 11, 67, 77, 83, 86, 87, 88], "37": [0, 5, 10, 11, 13, 25, 27, 37, 52, 67, 77, 83, 86, 87, 88], "2": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "a1111": [0, 10, 11, 67, 77, 83, 86, 87], "a1138": [0, 10, 11, 67, 77, 83, 86, 87], "barycenter_unbalanc": [0, 58, 83, 87], "reg_m": [0, 61, 69, 77, 83, 87], "1000": [0, 4, 5, 8, 14, 21, 23, 37, 40, 43, 51, 66, 67, 69, 74, 77, 83], "1e": [0, 2, 7, 8, 10, 11, 13, 15, 18, 19, 20, 21, 24, 25, 26, 29, 31, 40, 41, 45, 46, 47, 48, 50, 52, 58, 60, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 88], "06": [0, 11, 17, 24, 34, 37, 43, 46, 52, 67, 68, 69, 73, 75, 77, 82, 83], "u_": [0, 80, 83], "sinkhorn_unbalanc": [0, 57, 61, 83, 87], "reg_mi": [0, 83], "margin": [0, 35, 44, 60, 67, 68, 74, 75, 77, 79, 83, 84, 87, 88], "relax": [0, 34, 35, 57, 65, 74, 76, 79, 81, 83, 86, 87, 88], "hyperparamet": [0, 83], "gener": [0, 3, 7, 11, 12, 13, 17, 30, 31, 35, 36, 41, 43, 45, 49, 51, 53, 59, 64, 65, 66, 67, 69, 70, 72, 75, 76, 78, 80, 81, 83, 84, 85, 86, 88], "10": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 15, 17, 18, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 40, 42, 46, 47, 51, 52, 55, 57, 58, 59, 60, 61, 67, 69, 71, 74, 75, 76, 81, 82, 83, 86, 87], "dimens": [0, 7, 31, 37, 66, 67, 71, 74, 77, 79, 80, 83, 88], "ground": [0, 35, 50, 53, 67, 69, 75, 78, 81, 82, 83, 86, 87], "metric": [0, 20, 21, 30, 35, 41, 45, 50, 53, 59, 67, 69, 74, 75, 76, 77, 78, 79, 82, 83, 84, 86, 87, 88], "entropi": [0, 42, 57, 66, 67, 71, 74, 81, 83, 86, 87], "If": [0, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 81, 83, 84, 85, 86, 87, 88], "uniform": [0, 4, 6, 32, 38, 39, 42, 45, 48, 54, 55, 60, 61, 66, 67, 68, 69, 72, 74, 75, 80, 83, 84, 85, 87, 88], "chizat": [0, 58, 67, 69, 77, 83, 86, 87], "schmitzer": [0, 58, 67, 69, 77, 83, 86, 87], "b": [0, 6, 7, 11, 14, 15, 21, 23, 26, 29, 30, 31, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "vialard": [0, 58, 67, 69, 77, 83, 86, 87], "f": [0, 3, 4, 10, 13, 19, 25, 29, 32, 33, 40, 43, 45, 52, 55, 58, 66, 67, 68, 69, 74, 75, 76, 77, 80, 82, 83, 84, 86, 87, 88], "x": [0, 1, 2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 37, 38, 39, 40, 42, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "2016": [0, 11, 24, 25, 37, 43, 58, 67, 69, 71, 74, 75, 77, 82, 83, 86, 87, 88], "arxiv": [0, 16, 49, 52, 58, 67, 69, 71, 75, 76, 81, 83, 84, 86, 87], "preprin": [0, 83], "1607": [0, 58, 67, 69, 83, 86, 87], "05816": [0, 58, 67, 69, 83, 86, 87], "binary_search_circl": [0, 75, 88], "u_valu": [0, 75], "v_valu": [0, 75], "u_weight": [0, 75], "v_weight": [0, 75], "p": [0, 2, 4, 7, 21, 28, 29, 30, 31, 32, 33, 37, 41, 45, 51, 55, 59, 60, 61, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 80, 81, 84, 85, 86, 87, 88], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 23, 24, 25, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 71, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87], "lm": [0, 75], "tm": [0, 51, 75], "tp": [0, 51, 60, 75], "ep": [0, 8, 13, 31, 66, 75], "require_sort": [0, 75], "circl": [0, 35, 37, 45, 53, 65, 75, 84, 86, 88], "binari": [0, 32, 70, 75], "search": [0, 28, 33, 45, 67, 74, 75, 76, 86, 87], "44": [0, 34, 52, 75, 77, 86, 88], "sampl": [0, 1, 6, 19, 25, 32, 35, 37, 38, 39, 41, 43, 44, 45, 48, 51, 54, 55, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88], "need": [0, 45, 59, 64, 67, 71, 75, 78, 87, 88], "": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 25, 26, 29, 31, 32, 33, 35, 40, 42, 45, 46, 47, 50, 51, 52, 56, 57, 58, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 79, 80, 82, 83, 84, 85, 86, 87, 88], "cong": [0, 75], "thei": [0, 63, 75, 87, 88], "mathbb": [0, 67, 74, 75, 80, 82, 84, 87], "r": [0, 3, 4, 7, 8, 10, 11, 13, 21, 24, 25, 30, 31, 32, 33, 36, 37, 39, 40, 42, 43, 45, 46, 47, 50, 51, 52, 55, 57, 58, 59, 60, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 86, 87, 88], "take": [0, 51, 63, 75, 76, 79, 82, 83, 87], "valu": [0, 2, 7, 11, 26, 28, 29, 31, 32, 45, 50, 51, 58, 66, 67, 68, 69, 70, 74, 75, 76, 77, 78, 79, 81, 83, 84, 87, 88], "modulo": [0, 75], "subset": [0, 75, 84], "requir": [0, 28, 66, 69, 75, 86, 87, 88], "first": [0, 2, 3, 29, 32, 33, 64, 66, 67, 68, 74, 75, 79, 81, 84, 86, 87], "find": [0, 28, 31, 43, 66, 75, 76, 86, 87, 88], "coordin": [0, 12, 29, 31, 66, 68, 69, 71, 74, 75, 82, 83, 84, 86, 87], "e": [0, 40, 63, 67, 74, 75, 80, 84, 86], "atan2": [0, 66, 75, 84], "w_p": [0, 75, 80, 87], "u": [0, 1, 2, 3, 5, 6, 14, 15, 40, 45, 55, 58, 64, 67, 71, 75, 77, 80, 82, 83, 84, 86, 87, 88], "v": [0, 1, 5, 15, 17, 27, 28, 33, 35, 43, 44, 45, 55, 58, 66, 67, 69, 70, 75, 78, 80, 81, 82, 83, 84, 86, 87, 88], "inf_": [0, 75], "theta": [0, 1, 5, 8, 24, 51, 67, 70, 75, 80], "int_0": [0, 75], "f_u": [0, 75], "q": [0, 29, 30, 32, 58, 59, 66, 67, 68, 74, 75, 77, 79, 87], "f_v": [0, 75], "mathrm": [0, 4, 51, 61, 67, 69, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84], "cdf": [0, 75], "For": [0, 26, 30, 32, 43, 45, 59, 64, 67, 68, 75, 76, 79, 82, 84, 87, 88], "x_1": [0, 36, 45, 75, 84], "x_2": [0, 36, 45, 75, 84], "get": [0, 2, 31, 32, 33, 67, 69, 71, 74, 75, 84, 86, 87, 88], "frac": [0, 4, 36, 40, 66, 67, 69, 71, 74, 75, 77, 79, 80, 81, 82, 84, 85, 87], "pi": [0, 1, 5, 8, 16, 23, 24, 28, 36, 37, 40, 49, 51, 55, 71, 75, 82, 84, 88], "get_coordinate_circl": [0, 75, 84], "run": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 66, 75, 80, 86, 88], "backend": [0, 2, 3, 5, 6, 7, 40, 45, 65, 67, 72, 74, 75, 76, 80, 82, 84, 85, 86, 88], "tensorflow": [0, 66, 75, 80, 86, 87, 88], "jax": [0, 66, 75, 80, 84, 86, 87, 88], "support": [0, 3, 5, 7, 17, 18, 35, 65, 67, 68, 72, 75, 80, 88], "ndarrai": [0, 28, 31, 66, 67, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 84], "n": [0, 2, 4, 6, 7, 8, 10, 11, 13, 14, 16, 19, 21, 23, 24, 25, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 42, 43, 46, 47, 48, 49, 50, 52, 54, 55, 57, 58, 60, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87], "domain": [0, 26, 27, 52, 67, 69, 70, 71, 73, 74, 75, 76, 78, 80, 81, 83, 84, 86, 88], "target": [0, 1, 6, 7, 8, 23, 24, 27, 31, 35, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 60, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "default": [0, 2, 31, 32, 45, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 87, 88], "power": [0, 45, 66, 75, 80, 88], "lower": [0, 14, 18, 22, 45, 75], "bound": [0, 75, 88], "dc": [0, 75], "upper": [0, 57, 75], "condit": [0, 52, 65, 66, 69, 72, 74, 75, 76, 85, 86, 87, 88], "sort": [0, 64, 66, 75, 87], "also": [0, 2, 45, 64, 66, 67, 69, 74, 75, 84, 86, 87, 88], "associ": [0, 40, 69, 74, 75, 77, 80, 84], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 34, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 60, 62, 63, 64, 66, 80, 88], "np": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 66, 67, 69, 70, 75, 77, 79, 80, 81, 82, 83, 84, 87, 88], "5": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 67, 69, 70, 74, 75, 76, 77, 79, 80, 82, 83, 84, 86, 87], "8": [0, 3, 4, 7, 8, 10, 11, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 40, 41, 43, 46, 48, 49, 52, 54, 58, 59, 60, 61, 68, 69, 74, 75, 82, 84, 86, 87], "4": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 52, 54, 57, 58, 59, 60, 61, 63, 67, 68, 74, 75, 77, 79, 82, 83, 86, 87], "7": [0, 10, 11, 12, 13, 16, 18, 19, 23, 24, 25, 28, 29, 32, 33, 36, 37, 40, 41, 43, 45, 48, 49, 50, 52, 58, 61, 68, 69, 75, 76, 79, 81, 82, 86, 87], "delon": [0, 16, 75, 86], "juli": [0, 8, 75, 86, 88], "julien": [0, 75, 86], "salomon": [0, 75, 86], "andrei": [0, 75, 86], "sobolevski": [0, 75, 86], "fast": [0, 46, 67, 74, 75, 86, 87, 88], "mong": [0, 75, 77, 86], "appli": [0, 24, 63, 68, 69, 75, 84, 86], "mathemat": [0, 3, 54, 64, 67, 74, 75, 77, 80, 86, 87, 88], "70": [0, 1, 5, 8, 29, 33, 46, 52, 75, 86], "2010": [0, 75, 77, 86], "2239": [0, 75, 86], "2258": [0, 75, 86], "dist": [0, 6, 8, 20, 28, 29, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 57, 58, 60, 61, 71, 74, 75, 79, 82, 84, 87, 88], "x1": [0, 2, 3, 14, 15, 19, 23, 25, 36, 41, 45, 51, 71, 84], "x2": [0, 3, 14, 15, 19, 23, 25, 36, 41, 45, 51, 71, 84], "sqeuclidean": [0, 20, 21, 45, 49, 50, 67, 69, 75, 82, 84], "w": [0, 6, 7, 8, 31, 32, 41, 45, 59, 61, 67, 68, 71, 73, 74, 75, 80, 81, 82, 83, 84, 86, 87, 88], "between": [0, 2, 3, 6, 15, 16, 19, 28, 31, 32, 33, 35, 36, 38, 39, 40, 41, 45, 53, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 83, 84, 85, 86, 88], "thi": [0, 2, 3, 6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 20, 21, 22, 24, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 42, 43, 45, 46, 47, 51, 54, 55, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 72, 73, 74, 75, 79, 80, 81, 82, 84, 85, 86, 87, 88], "compat": [0, 45, 66, 67, 71, 72, 74, 75, 81, 82, 84, 85, 88], "work": [0, 12, 45, 64, 66, 67, 72, 74, 75, 76, 84, 85, 88], "from": [0, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13, 19, 21, 23, 25, 28, 29, 30, 31, 33, 36, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "all": [0, 10, 11, 13, 26, 28, 31, 32, 35, 41, 45, 58, 63, 64, 66, 67, 69, 72, 74, 75, 79, 83, 84, 85, 86, 87, 88], "n1": [0, 36, 40, 45, 84], "n2": [0, 29, 33, 36, 40, 45, 84], "callabl": [0, 45, 69, 71, 74, 76, 82, 84, 88], "euclidean": [0, 11, 28, 33, 41, 45, 49, 50, 69, 71, 75, 81, 84, 87, 88], "On": [0, 45, 69, 73, 84, 86, 87, 88], "numpi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 66, 67, 71, 74, 75, 77, 79, 80, 83, 84, 86, 87, 88], "accept": [0, 45, 63, 64, 75, 84, 88], "scipi": [0, 28, 30, 31, 45, 51, 59, 64, 66, 75, 77, 81, 83, 84, 86, 87, 88], "spatial": [0, 30, 31, 45, 59, 77, 84], "cdist": [0, 30, 31, 45, 59, 77, 84], "braycurti": [0, 45, 84], "canberra": [0, 45, 84], "chebyshev": [0, 45, 84], "cityblock": [0, 45, 49, 75, 84], "correl": [0, 45, 84], "cosin": [0, 45, 84], "dice": [0, 45, 84], "ham": [0, 45, 84, 88], "jaccard": [0, 45, 84], "kulsinski": [0, 45, 84], "mahalanobi": [0, 45, 84], "match": [0, 45, 69, 74, 84, 86, 87], "minkowski": [0, 45, 75, 84], "rogerstanimoto": [0, 45, 84], "russellrao": [0, 45, 84], "seuclidean": [0, 45, 84], "sokalmichen": [0, 45, 84], "sokalsneath": [0, 45, 84], "wminkowski": [0, 45, 84], "yule": [0, 45, 84], "norm": [0, 15, 28, 37, 45, 61, 66, 68, 69, 75, 84], "rank": [0, 39, 45, 72, 81, 84], "given": [0, 2, 31, 32, 33, 40, 45, 66, 67, 69, 71, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88], "type": [0, 64, 66, 67, 69, 70, 74, 75, 76, 77, 79, 80, 81, 82, 84, 87, 88], "emd": [0, 18, 20, 22, 29, 38, 39, 41, 49, 65, 67, 68, 69, 75, 76, 77, 80, 81, 83, 85, 86, 88], "100000": [0, 43, 69, 75, 76, 83], "center_du": [0, 75], "numthread": [0, 75, 88], "earth": [0, 69, 75, 86, 88], "mover": [0, 69, 75, 86, 88], "gamma": [0, 45, 60, 61, 67, 69, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85, 87], "langl": [0, 67, 69, 74, 75, 76, 77, 80, 82, 83], "rangle_f": [0, 67, 69, 74, 75, 76, 77, 82, 83], "geq": [0, 61, 67, 69, 74, 75, 76, 77, 79, 82, 83, 84, 85, 87], "note": [0, 26, 45, 67, 69, 71, 74, 75, 77, 78, 81, 84, 86, 87, 88], "c": [0, 2, 7, 8, 15, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 37, 38, 39, 43, 45, 48, 49, 51, 55, 60, 61, 65, 66, 67, 69, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "order": [0, 6, 20, 26, 28, 45, 66, 71, 75, 78, 87], "float64": [0, 3, 7, 10, 11, 13, 14, 16, 19, 23, 25, 31, 42, 46, 47, 50, 52, 57, 58, 67, 75], "format": [0, 1, 2, 3, 4, 5, 8, 21, 36, 45, 60, 64, 66, 75, 84, 86, 88], "It": [0, 2, 11, 18, 20, 21, 24, 25, 26, 29, 30, 46, 52, 59, 64, 74, 75, 82, 86, 87, 88], "convert": [0, 6, 19, 23, 25, 31, 66, 75, 84], "But": [0, 72, 74, 75, 85, 87, 88], "cpu": [0, 2, 3, 7, 66, 72, 74, 75, 85, 88], "which": [0, 2, 28, 40, 45, 63, 66, 67, 68, 69, 72, 74, 75, 76, 78, 79, 85, 86, 87, 88], "can": [0, 2, 6, 45, 61, 64, 67, 69, 71, 72, 74, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88], "lead": [0, 6, 45, 67, 72, 74, 75, 76, 85, 87, 88], "copi": [0, 7, 10, 33, 58, 64, 66, 72, 74, 75, 85, 87], "overhead": [0, 67, 72, 74, 75, 85, 87], "gpu": [0, 65, 66, 67, 72, 74, 75, 85, 88], "cast": [0, 75, 87], "plan": [0, 2, 9, 33, 35, 39, 41, 46, 47, 60, 61, 67, 68, 72, 74, 75, 77, 79, 81, 82, 83, 84, 87, 88], "data": [0, 2, 3, 7, 13, 32, 45, 49, 64, 66, 67, 68, 69, 74, 75, 86, 87, 88], "provid": [0, 2, 32, 45, 64, 65, 66, 67, 69, 74, 75, 76, 79, 86, 87, 88], "input": [0, 13, 16, 58, 66, 67, 68, 69, 72, 74, 75, 81, 84, 85, 87], "prioriti": [0, 75], "an": [0, 2, 7, 8, 19, 23, 25, 28, 31, 45, 47, 63, 64, 66, 67, 69, 72, 74, 75, 76, 77, 79, 81, 82, 84, 88], "integ": [0, 28, 75, 88], "tensor": [0, 2, 3, 6, 7, 40, 66, 74, 75, 76, 87, 88], "might": [0, 15, 18, 20, 21, 22, 26, 30, 45, 52, 67, 75, 87, 88], "result": [0, 2, 45, 63, 64, 66, 74, 75, 84, 87, 88], "precis": [0, 40, 66, 67, 69, 74, 75], "behaviour": [0, 75], "unwant": [0, 75], "pleas": [0, 64, 66, 75, 86], "make": [0, 33, 45, 49, 57, 58, 63, 64, 66, 70, 75, 86, 87, 88], "sure": [0, 64, 75, 86], "point": [0, 11, 15, 16, 29, 31, 41, 42, 43, 51, 64, 67, 71, 75, 77, 84, 86, 87, 88], "vector": [0, 6, 66, 67, 68, 75, 79, 80, 84, 86, 87], "do": [0, 8, 20, 26, 30, 45, 59, 63, 64, 66, 67, 75, 84, 87, 88], "sum": [0, 2, 5, 6, 7, 11, 12, 13, 14, 32, 33, 37, 38, 45, 48, 50, 52, 55, 57, 60, 61, 66, 67, 69, 71, 74, 75, 76, 77, 79, 80, 81, 82, 84, 86, 87, 88], "same": [0, 24, 30, 33, 45, 59, 66, 68, 75, 84, 87], "empti": [0, 54, 55, 69, 72, 75, 84, 85], "nt": [0, 6, 32, 67, 69, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 85], "maximum": [0, 4, 15, 28, 31, 45, 51, 66, 67, 69, 74, 75, 76, 79, 81, 84], "befor": [0, 64, 69, 75, 88], "ha": [0, 2, 6, 8, 45, 65, 67, 69, 74, 75, 77, 84, 86, 87, 88], "contain": [0, 10, 11, 13, 58, 68, 72, 74, 75, 79, 84, 85, 86, 87, 88], "dual": [0, 8, 9, 11, 35, 67, 68, 70, 72, 75, 78, 81, 82, 84, 85, 86, 87, 88], "variabl": [0, 32, 67, 69, 72, 74, 75, 79, 81, 82, 85, 87, 88], "otherwis": [0, 63, 66, 74, 75, 84], "boolean": [0, 66, 67, 69, 73, 75, 84], "center": [0, 45, 71, 75, 88], "potenti": [0, 5, 8, 67, 75, 81, 82, 84, 88], "center_ot_du": [0, 75], "openmp": [0, 75, 88], "compil": [0, 75, 86, 87, 88], "choos": [0, 28, 51, 67, 71, 75, 87], "thread": [0, 75], "parallel": [0, 75, 84, 87, 88], "select": [0, 42, 74, 75, 87], "highest": [0, 75], "possibl": [0, 64, 67, 69, 75, 84, 87, 88], "exit": [0, 72, 75, 85, 88], "statu": [0, 72, 75, 84, 85, 88], "simpl": [0, 2, 6, 12, 31, 40, 45, 70, 75, 84, 87, 88], "obviou": [0, 75], "solut": [0, 41, 45, 67, 75, 79, 87, 88], "perform": [0, 2, 3, 7, 42, 64, 74, 75, 84, 87, 88], "convers": [0, 75], "bonneel": [0, 3, 54, 65, 75, 80, 86, 87], "van": [0, 75, 86, 87], "de": [0, 67, 75, 86, 87], "pann": [0, 75, 86, 87], "pari": [0, 14, 15, 75, 86, 87], "heidrich": [0, 75, 86, 87], "2011": [0, 74, 75, 86, 87], "decemb": [0, 66, 75, 86, 87, 88], "displac": [0, 50, 75, 84, 86, 87], "interpol": [0, 2, 7, 12, 18, 20, 22, 26, 29, 31, 32, 38, 45, 48, 49, 67, 75, 77, 86, 87], "lagrangian": [0, 75, 77, 79, 86, 87], "mass": [0, 2, 21, 45, 59, 61, 69, 74, 75, 77, 86, 87, 88], "In": [0, 2, 3, 6, 7, 8, 32, 36, 40, 41, 45, 63, 64, 67, 68, 71, 72, 75, 78, 80, 81, 86, 87, 88], "acm": [0, 67, 75, 86, 87], "transact": [0, 52, 67, 69, 75, 76, 86, 87], "graphic": [0, 67, 75, 86, 87, 88], "tog": [0, 67, 75, 86, 87], "vol": [0, 8, 52, 69, 73, 75, 76, 86, 87], "30": [0, 1, 3, 5, 8, 11, 18, 20, 22, 26, 28, 29, 30, 31, 32, 33, 37, 42, 45, 46, 52, 69, 75, 86, 87, 88], "No": [0, 2, 32, 64, 75, 86, 87], "6": [0, 2, 5, 7, 11, 13, 15, 16, 18, 19, 20, 22, 24, 25, 30, 32, 37, 39, 41, 42, 43, 45, 46, 47, 48, 49, 52, 57, 58, 59, 61, 68, 69, 74, 75, 79, 82, 86, 87], "158": [0, 52, 75, 86, 87], "cg": [0, 52, 67, 69, 72, 74, 75, 81, 83, 85, 87], "emd2": [0, 6, 8, 50, 65, 75, 83, 86, 88], "process": [0, 24, 25, 33, 36, 40, 42, 43, 45, 67, 68, 69, 75, 81, 82, 83, 86, 87, 88], "return_matrix": [0, 75], "min_": [0, 4, 6, 7, 8, 40, 61, 67, 69, 71, 74, 75, 77, 79, 83, 87], "nb": [0, 7, 10, 11, 13, 19, 25, 30, 31, 33, 37, 38, 39, 42, 46, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 61, 74, 75, 76, 78], "multipl": [0, 50, 67, 74, 75, 81, 83, 84, 88], "deprec": [0, 7, 10, 58, 59, 75, 84], "emd2_1d": [0, 75, 87], "x_a": [0, 75], "x_b": [0, 75], "dens": [0, 66, 74, 75, 84], "1d": [0, 9, 17, 29, 35, 53, 62, 65, 70, 74, 75, 76, 78, 84, 86, 87, 88], "measur": [0, 3, 7, 14, 16, 29, 43, 54, 67, 68, 71, 74, 75, 80, 82, 84, 86, 87], "sum_j": [0, 29, 75, 81, 82, 85], "gamma_": [0, 45, 67, 69, 75, 76, 77, 82, 83, 85, 87], "ij": [0, 75, 85], "when": [0, 2, 51, 61, 63, 64, 67, 68, 71, 74, 75, 77, 79, 84, 86, 88], "y": [0, 1, 4, 8, 10, 15, 16, 18, 20, 21, 22, 24, 26, 28, 29, 30, 32, 37, 40, 55, 58, 66, 67, 68, 69, 70, 71, 74, 75, 77, 79, 80, 81, 84, 86, 87], "detail": [0, 63, 64, 75, 87, 88], "dirac": [0, 14, 38, 48, 75], "locat": [0, 14, 16, 66, 67, 75], "real": [0, 75], "line": [0, 19, 23, 25, 31, 45, 67, 74, 75, 76, 78, 87], "string": [0, 67, 68, 69, 74, 75, 82, 83, 84], "implement": [0, 5, 45, 64, 65, 66, 67, 71, 74, 75, 81, 84, 87, 88], "faster": [0, 75, 88], "math": [0, 28, 45, 75, 77, 81, 87], "spars": [0, 28, 35, 45, 53, 66, 67, 70, 71, 74, 75, 78, 81, 83, 84, 86, 87, 88], "represent": [0, 32, 33, 43, 55, 63, 74, 75, 76, 80, 81, 82, 86, 87], "coo_matrix": [0, 66, 75], "set": [0, 2, 8, 18, 20, 22, 27, 28, 31, 32, 35, 45, 63, 66, 67, 69, 70, 74, 75, 76, 79, 84, 86, 87], "2017": [0, 8, 67, 69, 73, 75, 85, 86, 87, 88], "2018": [0, 8, 43, 67, 69, 73, 75, 77, 81, 82, 86, 87, 88], "multidimension": [0, 31, 75], "emd_1d": [0, 46, 75, 87, 88], "instead": [0, 5, 8, 10, 32, 58, 66, 67, 68, 75, 86, 87, 88], "factored_optimal_transport": [0, 39, 72], "xa": [0, 72, 85], "xb": [0, 3, 15, 39, 72, 85], "100": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 22, 24, 28, 30, 31, 32, 37, 39, 41, 42, 45, 46, 47, 50, 51, 52, 57, 58, 59, 60, 66, 67, 68, 69, 71, 72, 74, 75, 77, 80], "x0": [0, 4, 28, 72, 75, 80], "07": [0, 11, 25, 37, 43, 44, 46, 52, 59, 67, 68, 72, 75, 77, 82, 83], "factor": [0, 35, 44, 66, 78, 86, 87, 88], "intermedi": [0, 5, 72], "40": [0, 1, 5, 8, 32, 33, 37, 45, 46, 52, 61, 72, 79, 86, 87], "mu": [0, 3, 6, 7, 24, 25, 28, 29, 51, 59, 69, 71, 72, 80, 87], "w_2": [0, 51, 72, 75, 87], "mu_a": [0, 72], "mu_b": [0, 72], "empir": [0, 2, 3, 27, 35, 39, 49, 53, 65, 67, 69, 70, 72, 73, 75, 78, 84, 85, 86, 87, 88], "And": [0, 72], "two": [0, 2, 3, 10, 19, 21, 29, 36, 40, 43, 45, 47, 50, 58, 64, 66, 67, 68, 69, 72, 73, 74, 75, 79, 83, 85, 86, 87, 88], "gradient": [0, 2, 6, 7, 8, 9, 35, 37, 40, 52, 65, 66, 67, 69, 71, 72, 74, 75, 76, 77, 79, 81, 82, 85, 86, 87, 88], "39": [0, 1, 3, 5, 9, 37, 52, 72, 85, 86, 87], "rel": [0, 18, 29, 30, 31, 52, 67, 69, 72, 74, 76, 85, 88], "variat": [0, 11, 50, 72, 76, 85, 87, 88], "ga": [0, 39, 72], "gb": [0, 39, 72], "forrow": [0, 72, 86, 87], "h\u00fctter": [0, 72, 86, 87], "nitzan": [0, 72, 86, 87], "rigollet": [0, 67, 72, 86, 87], "schiebing": [0, 72, 86, 87], "weed": [0, 67, 72, 86, 87], "2019": [0, 3, 28, 29, 42, 67, 69, 72, 74, 80, 86, 87, 88], "april": [0, 67, 72, 86, 87], "statist": [0, 8, 67, 69, 72, 75, 81, 86, 87], "via": [0, 2, 3, 32, 63, 67, 72, 74, 86, 87], "coupl": [0, 24, 35, 44, 67, 68, 69, 72, 74, 78, 86, 87, 88], "22nd": [0, 67, 72, 86, 87], "intern": [0, 2, 3, 7, 8, 13, 28, 29, 32, 33, 43, 55, 67, 69, 72, 74, 75, 76, 77, 80, 81, 82, 86, 87], "confer": [0, 2, 3, 8, 13, 28, 29, 32, 33, 43, 55, 67, 69, 72, 74, 75, 76, 77, 80, 81, 82, 86, 87], "artifici": [0, 8, 67, 69, 72, 81, 86, 87], "intellig": [0, 8, 52, 67, 69, 72, 76, 81, 86, 87], "pp": [0, 3, 8, 52, 67, 69, 72, 76, 80, 86, 87], "2454": [0, 72, 86, 87], "2465": [0, 72, 86, 87], "pmlr": [0, 3, 8, 13, 67, 72, 86, 87], "fused_gromov_wasserstein": [0, 29, 33, 74, 87], "c1": [0, 2, 29, 30, 33, 59, 60, 61, 74, 76, 77, 87], "c2": [0, 2, 29, 30, 33, 59, 60, 61, 74, 77, 87], "loss_fun": [0, 29, 74], "square_loss": [0, 29, 30, 31, 74], "symmetr": [0, 33, 67, 74, 87, 88], "alpha": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 18, 20, 21, 22, 24, 26, 28, 29, 32, 33, 39, 41, 43, 45, 50, 51, 54, 55, 57, 58, 60, 61, 67, 68, 69, 74, 75, 76, 78, 81, 82, 88], "armijo": [0, 74, 76, 88], "g0": [0, 33, 38, 39, 46, 48, 52, 74, 76, 77, 83, 85], "max_it": [0, 18, 21, 24, 25, 30, 31, 69, 74, 81, 88], "tol_rel": [0, 74], "09": [0, 11, 43, 46, 52, 67, 69, 74, 76, 81, 82], "tol_ab": [0, 74], "fgw": [0, 33, 34, 35, 65, 74, 86, 88], "graph": [0, 29, 34, 35, 45, 65, 66, 74, 76, 86, 87, 88], "24": [0, 37, 52, 68, 74, 86, 87, 88], "sum_": [0, 4, 6, 45, 67, 68, 69, 71, 74, 75, 76, 77, 80, 82, 83, 87], "k": [0, 2, 6, 8, 13, 14, 15, 21, 28, 29, 32, 33, 37, 41, 45, 47, 51, 66, 67, 68, 69, 71, 74, 75, 77, 79, 87], "c_1": [0, 29, 74, 76, 77], "c_2": [0, 29, 33, 74, 77], "account": [0, 51, 63, 64, 67, 74], "misfit": [0, 74], "similar": [0, 8, 26, 45, 69, 74, 79, 87], "matric": [0, 7, 31, 36, 40, 45, 52, 66, 67, 68, 69, 71, 74, 75, 76, 77, 78, 84, 85, 86, 87, 88], "conjug": [0, 74, 81], "done": [0, 6, 40, 41, 45, 74, 87, 88], "limit": [0, 66, 74, 88], "memori": [0, 67, 74, 75, 82, 87, 88], "discuss": [0, 69, 73, 74, 76, 86, 87, 88], "featur": [0, 28, 40, 64, 67, 68, 74, 86], "across": [0, 74, 88], "repres": [0, 20, 26, 28, 63, 67, 74, 75, 87], "structur": [0, 28, 32, 66, 74, 86, 87, 88], "space": [0, 16, 30, 31, 59, 63, 66, 67, 68, 74, 75, 77, 80, 86, 87, 88], "assum": [0, 74, 88], "let": [0, 74, 76], "its": [0, 1, 2, 5, 24, 32, 33, 45, 51, 63, 66, 67, 74, 76, 77, 80, 86, 87, 88], "symmetri": [0, 74], "test": [0, 28, 37, 64, 66, 74, 76, 86, 88], "conduct": [0, 74, 76], "els": [0, 2, 3, 7, 12, 16, 21, 28, 32, 33, 51, 69, 71, 73, 74, 83], "resp": [0, 67, 74, 76], "asymmetr": [0, 74, 88], "trade": [0, 32, 74], "off": [0, 2, 4, 12, 13, 19, 21, 23, 25, 32, 33, 41, 52, 64, 74], "step": [0, 1, 2, 3, 5, 6, 7, 8, 11, 28, 40, 64, 66, 67, 74, 76, 88], "found": [0, 28, 64, 74, 87], "research": [0, 65, 74, 86, 87, 88], "close": [0, 28, 29, 45, 69, 73, 74, 75, 84, 87], "form": [0, 6, 8, 45, 69, 73, 74, 75, 79, 84, 87, 88], "issu": [0, 63, 64, 67, 74, 84, 86, 87], "initi": [0, 14, 65, 67, 68, 71, 74, 75, 76, 77, 83, 85, 87], "pq": [0, 74], "must": [0, 74, 81, 84], "satisfi": [0, 74, 76], "constraint": [0, 67, 74, 75, 76, 81, 84, 87], "absolut": [0, 18, 29, 30, 52, 66, 68, 74, 76, 85, 88], "directli": [0, 45, 74, 77, 87], "pass": [0, 64, 74, 75, 77, 81, 84], "vayer": [0, 2, 28, 29, 32, 33, 36, 40, 65, 68, 74, 76, 86, 87], "titouan": [0, 28, 29, 33, 65, 74, 76, 86], "chapel": [0, 28, 29, 59, 60, 61, 65, 74, 77, 79, 83, 86, 87], "laetitia": [0, 28, 29, 59, 61, 65, 74, 86], "flamari": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 28, 29, 32, 33, 36, 37, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 52, 60, 65, 67, 68, 69, 71, 74, 76, 79, 82, 83, 86, 87], "r\u00e9mi": [0, 2, 3, 7, 14, 28, 29, 33, 65, 67, 69, 74, 76, 86, 87], "tavenard": [0, 28, 29, 65, 74, 86, 87], "romain": [0, 28, 29, 65, 74, 86], "courti": [0, 2, 7, 8, 12, 24, 25, 28, 29, 30, 31, 32, 33, 36, 37, 40, 43, 45, 52, 55, 65, 67, 68, 69, 71, 74, 75, 76, 80, 82, 86, 87], "nicola": [0, 3, 7, 12, 28, 29, 30, 31, 33, 45, 54, 65, 67, 69, 74, 76, 80, 86, 87], "applic": [0, 26, 28, 29, 33, 52, 67, 69, 73, 74, 75, 76, 77, 85, 86], "machin": [0, 2, 3, 8, 13, 28, 29, 32, 52, 67, 69, 74, 75, 76, 77, 86, 87, 88], "learn": [0, 2, 3, 6, 8, 13, 24, 28, 29, 33, 34, 35, 43, 44, 55, 64, 65, 67, 68, 69, 74, 75, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88], "icml": [0, 2, 28, 29, 32, 71, 74, 77, 84, 86, 87], "47": [0, 9, 36, 40, 52, 68, 74, 86, 88], "chowdhuri": [0, 74, 86], "m\u00e9moli": [0, 74, 86, 87], "network": [0, 8, 74, 86, 87, 88], "stabl": [0, 5, 66, 74, 86, 87, 88], "invari": [0, 74, 86], "infer": [0, 66, 74, 86], "ima": [0, 74, 86], "757": [0, 74, 86], "787": [0, 74, 86], "fused_gromov_wasserstein2": [0, 74], "differenti": [0, 6, 7, 40, 74, 86, 87, 88], "wrt": [0, 2, 66, 74, 84], "quadrat": [0, 9, 35, 61, 70, 74, 76, 77, 78, 82, 83, 84, 86, 88], "38": [0, 2, 5, 32, 37, 52, 74, 86, 87], "fuse": [0, 34, 65, 74, 86, 87, 88], "vincent": [0, 2, 32, 33, 65, 74, 76, 86, 87], "cuaz": [0, 2, 32, 33, 65, 74, 76, 86, 87], "corn": [0, 2, 32, 33, 74, 76, 86, 87], "onlin": [0, 2, 32, 45, 63, 74, 86, 87], "2021": [0, 2, 16, 32, 33, 60, 66, 71, 74, 75, 76, 79, 83, 86, 87, 88], "gromov_barycent": [0, 31, 74, 87, 88], "lambda": [0, 28, 74, 77, 79, 87], "tol": [0, 21, 31, 69, 74, 77, 81], "init_c": [0, 74], "random_st": [0, 2, 31, 32, 70, 74], "leq": [0, 74, 76, 77, 87], "block": [0, 2, 26, 64, 67, 68, 69, 71, 74, 86, 87], "descent": [0, 2, 6, 7, 40, 68, 69, 71, 74, 76, 86, 87], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 66, 67, 69, 74, 75, 82, 84, 86, 87, 88], "lambda_": [0, 74, 87], "gw": [0, 33, 74, 76, 77, 86, 88], "base": [0, 33, 64, 67, 69, 74, 81, 84, 87, 88], "specif": [0, 31, 63, 64, 67, 69, 74, 83, 87, 88], "updat": [0, 67, 69, 74, 75, 79, 82, 84, 88], "accord": [0, 74, 84], "kernel": [0, 24, 69, 74, 77, 84, 86, 87], "calcul": [0, 15, 36, 66, 67, 68, 74], "random": [0, 2, 3, 5, 6, 8, 14, 15, 19, 21, 23, 25, 28, 29, 30, 31, 32, 33, 36, 37, 39, 40, 43, 51, 55, 59, 60, 61, 66, 70, 74, 80, 82, 84, 88], "user": [0, 52, 64, 74, 86, 87, 88], "randomst": [0, 2, 6, 19, 23, 25, 31, 43, 70, 74, 80, 82, 84], "instanc": [0, 5, 63, 70, 74, 76, 84, 87, 88], "fix": [0, 32, 40, 64, 67, 71, 74, 75, 77, 81, 86, 88], "seed": [0, 3, 5, 21, 28, 29, 31, 32, 33, 37, 39, 40, 60, 61, 66, 70, 74, 80, 82, 84], "reproduc": [0, 11, 64, 74, 87], "permut": [0, 2, 3, 7, 74], "arbitrarili": [0, 74], "dure": [0, 74], "12": [0, 5, 9, 11, 13, 14, 18, 25, 30, 32, 37, 40, 52, 74, 75, 77, 86, 87], "gabriel": [0, 8, 65, 67, 74, 77, 86, 87], "marco": [0, 8, 33, 65, 67, 74, 75, 76, 77, 86, 87], "justin": [0, 74, 77, 86, 87], "solomon": [0, 67, 74, 77, 86, 87], "averag": [0, 66, 69, 71, 74, 77, 86, 87], "gromov_wasserstein": [0, 2, 29, 30, 33, 74, 87], "kl_loss": [0, 74], "minim": [0, 2, 3, 4, 6, 7, 28, 32, 33, 40, 74, 76, 81, 83, 84, 87, 88], "13": [0, 1, 9, 11, 13, 18, 25, 29, 37, 45, 50, 52, 74, 77, 86, 87, 88], "facundo": [0, 74, 86, 87], "approach": [0, 11, 18, 20, 22, 26, 67, 74, 75, 86, 87], "object": [0, 1, 2, 3, 4, 5, 8, 11, 23, 31, 46, 47, 50, 51, 67, 68, 69, 74, 75, 81, 84, 86, 87, 88], "foundat": [0, 74, 77, 86, 87, 88], "11": [0, 10, 11, 18, 25, 32, 37, 44, 52, 58, 60, 71, 74, 85, 86, 87], "417": [0, 74, 86, 87, 88], "487": [0, 74, 86, 87], "gromov_wasserstein2": [0, 2, 74, 87, 88], "discrep": [0, 55, 74, 77, 80, 88], "gw_dist": [0, 30, 33, 74], "max_sliced_wasserstein_dist": [0, 80], "x_": [0, 40, 67, 69, 75, 80], "x_t": [0, 67, 69, 80, 84], "n_project": [0, 3, 4, 54, 55, 80], "50": [0, 1, 3, 4, 5, 6, 8, 11, 15, 16, 21, 32, 38, 46, 48, 52, 54, 55, 60, 67, 77, 80, 81, 86, 88], "mont": [0, 80], "carlo": [0, 80], "approxim": [0, 8, 11, 24, 67, 68, 69, 74, 76, 80, 86, 87], "slice": [0, 9, 56, 65, 70, 75, 86, 87, 88], "mathcal": [0, 36, 69, 70, 73, 74, 80, 84, 87], "swd": [0, 54, 80], "_p": [0, 80, 87], "nu": [0, 3, 4, 7, 29, 71, 75, 80], "underset": [0, 80], "_in": [0, 80], "theta_": [0, 80], "stand": [0, 80, 88], "pushforward": [0, 80], "ni": [0, 80], "mapsto": [0, 74, 80], "rangl": [0, 67, 80], "n_samples_a": [0, 67, 80], "n_samples_b": [0, 67, 80], "case": [0, 26, 45, 60, 64, 66, 68, 75, 79, 80, 81, 86], "sliced_wasserstein_dist": [0, 3, 54, 80, 88], "20": [0, 1, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 18, 24, 25, 28, 29, 30, 33, 36, 37, 40, 42, 45, 46, 47, 49, 50, 51, 52, 55, 57, 58, 59, 67, 74, 75, 80, 86, 87, 88], "normal": [0, 4, 10, 11, 13, 14, 28, 33, 50, 58, 66, 69, 71, 80, 84, 88], "35": [0, 5, 21, 37, 52, 80, 86, 87, 88], "deshpand": [0, 80, 86, 87], "hu": [0, 80, 86, 87], "sun": [0, 80, 86, 87], "pyrro": [0, 80, 86, 87], "siddiqui": [0, 80, 86, 87], "koyejo": [0, 80, 86, 87], "schwing": [0, 80, 86, 87], "gan": [0, 9, 35, 80, 86, 87, 88], "proceed": [0, 13, 67, 80, 81, 86, 87], "ieee": [0, 52, 69, 76, 80, 86, 87], "cvf": [0, 80, 86, 87], "vision": [0, 3, 54, 80, 86, 87], "pattern": [0, 52, 69, 76, 80, 86, 87], "recognit": [0, 80, 86, 87], "10648": [0, 80, 86, 87], "10656": [0, 80, 86, 87], "semidiscrete_wasserstein2_unif_circl": [0, 51, 75, 88], "mu_n": [0, 4, 8, 75, 80], "alpha_i": [0, 75, 80], "x_i": [0, 4, 29, 75, 80, 87], "left": [0, 6, 13, 18, 22, 40, 66, 67, 69, 73, 74, 75, 78, 80, 81, 82, 84, 85], "right": [0, 6, 13, 14, 33, 40, 45, 57, 63, 64, 67, 69, 73, 74, 75, 80, 81, 82, 84, 85, 88], "alpha_k": [0, 75], "unif": [0, 2, 4, 6, 14, 15, 16, 29, 30, 31, 32, 38, 39, 40, 43, 49, 51, 59, 75, 80, 82, 84], "delta_": [0, 4, 29, 75, 80, 81, 87], "02111111": [0, 75], "46": [0, 52, 55, 75, 80, 86, 88], "bonet": [0, 4, 51, 55, 65, 75, 80, 86], "berg": [0, 55, 75, 80, 86], "septier": [0, 55, 75, 80, 86], "drumetz": [0, 55, 75, 80, 86], "pham": [0, 55, 75, 80, 86], "2023": [0, 55, 75, 80, 81, 86], "spheric": [0, 9, 35, 56, 65, 75, 80, 86, 88], "warmstart": [0, 67, 68, 88], "omega": [0, 61, 67, 76, 77, 81, 82, 83, 87], "dim_a": [0, 67, 77, 79, 83], "dim_b": [0, 67, 77, 79, 83], "both": [0, 2, 7, 24, 45, 60, 63, 67, 68, 75, 79, 87, 88], "By": [0, 67, 71, 79, 87], "too": [0, 67, 71, 87], "small": [0, 2, 7, 45, 64, 67, 71, 74, 75, 86, 87, 88], "should": [0, 26, 40, 61, 64, 66, 67, 69, 71, 74, 75, 79, 81, 84, 86, 87, 88], "enough": [0, 28, 67, 71, 87], "you": [0, 15, 18, 20, 21, 22, 26, 30, 45, 52, 64, 66, 67, 71, 78, 86, 87, 88], "sharper": [0, 67, 87], "avoid": [0, 64, 66, 67, 69, 71, 77, 87], "numer": [0, 15, 45, 58, 66, 67, 69, 71, 77, 84, 86, 87, 88], "last": [0, 45, 67, 68, 79, 87, 88], "veri": [0, 26, 45, 67, 74, 84, 86, 87, 88], "slow": [0, 67, 71, 87, 88], "practic": [0, 8, 64, 67, 71, 87], "even": [0, 10, 11, 58, 59, 67, 87, 88], "reason": [0, 63, 67, 87, 88], "finit": [0, 66, 67, 87], "why": [0, 64, 67, 88], "sinkhorn_epsilon_sc": [0, 67, 69, 87], "reli": [0, 67, 74, 86, 87], "warm": [0, 67, 87], "start": [0, 32, 45, 64, 66, 67, 71, 79, 84, 86, 88], "sometim": [0, 67, 87], "better": [0, 8, 42, 67, 81, 87, 88], "greedi": [0, 67, 86, 87, 88], "version": [0, 2, 31, 32, 51, 63, 64, 66, 67, 76, 79, 86, 87, 88], "greenkhorn": [0, 65, 67, 87, 88], "speedup": [0, 67, 87, 88], "screen": [0, 35, 44, 67, 70, 78, 86, 87], "screenkhorn": [0, 35, 44, 65, 70, 78, 87, 88], "aim": [0, 4, 8, 61, 67, 69, 84, 87], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 26, 28, 29, 30, 32, 33, 36, 40, 41, 45, 51, 59, 60, 63, 64, 65, 66, 67, 75, 77, 79, 87, 88], "strongli": [0, 64, 67, 87, 88], "recommend": [0, 64, 67, 87, 88], "check": [0, 64, 66, 67, 75, 84, 87, 88], "those": [0, 12, 45, 67, 69, 74, 75, 83, 87, 88], "tupl": [0, 67, 68, 76], "logarithm": [0, 66, 67], "36552929": [0, 67, 87], "13447071": [0, 67, 87], "lightspe": [0, 67, 69, 81, 83, 86, 87], "advanc": [0, 36, 40, 42, 43, 63, 67, 68, 69, 81, 82, 83, 86, 87], "neural": [0, 8, 24, 25, 36, 40, 42, 43, 67, 68, 69, 81, 82, 83, 86, 87, 88], "system": [0, 24, 25, 36, 40, 42, 43, 64, 66, 67, 69, 81, 82, 83, 86, 87], "nip": [0, 24, 25, 67, 69, 81, 83, 86, 87], "26": [0, 37, 42, 52, 67, 69, 81, 83, 86, 87, 88], "2013": [0, 67, 69, 81, 83, 84, 86, 87], "9": [0, 2, 4, 8, 11, 16, 18, 21, 24, 25, 28, 30, 31, 32, 33, 36, 37, 39, 40, 41, 43, 46, 52, 59, 67, 69, 79, 81, 82, 83, 86, 87], "stabil": [0, 67, 75, 83, 86, 87, 88], "preprint": [0, 16, 52, 58, 67, 69, 71, 75, 76, 83, 86, 87], "1610": [0, 67, 83, 86, 87], "06519": [0, 67, 83, 86, 87], "34": [0, 5, 15, 37, 52, 67, 86, 87], "feydi": [0, 67, 86, 87], "s\u00e9journ\u00e9": [0, 67, 86, 87], "amari": [0, 67, 86, 87], "trouv\u00e9": [0, 67, 86, 87], "mmd": [0, 67, 86, 87], "diverg": [0, 8, 50, 61, 66, 67, 74, 76, 83, 86, 87, 88], "2681": [0, 67, 86, 87], "2690": [0, 67, 86, 87], "unregular": [0, 67, 69, 76, 79, 81, 83], "sinkhorn_knopp": [0, 67, 83, 87], "classic": [0, 67, 69, 83, 87, 88], "epsilon": [0, 13, 30, 42, 57, 66, 67, 68, 74, 83, 87, 88], "sinkhorn2": [0, 50, 67, 86, 88], "without": [0, 63, 64, 66, 67, 74, 79, 86, 88], "contribut": [0, 63, 67, 87, 88], "26894142136999516": [0, 67], "21": [0, 5, 37, 52, 67, 86, 87], "altschul": [0, 67, 86, 87], "Near": [0, 67, 86, 87], "linear": [0, 1, 5, 8, 24, 25, 27, 34, 35, 60, 65, 66, 67, 68, 69, 71, 73, 74, 75, 76, 79, 83, 84, 86, 87, 88], "31": [0, 1, 3, 5, 15, 37, 45, 52, 54, 67, 73, 80, 86, 87, 88], "sinkhorn_lpl1_mm": [0, 69, 87], "labels_a": [0, 69], "eta": [0, 7, 24, 25, 69], "numinneritermax": [0, 15, 67, 69, 76], "200": [0, 1, 4, 5, 8, 14, 15, 46, 51, 52, 69, 74, 76, 77, 88], "stopinnerthr": [0, 69], "non": [0, 47, 58, 60, 64, 65, 66, 67, 69, 75, 76, 79, 81, 83, 84, 86, 87, 88], "convex": [0, 32, 49, 69, 76, 81, 87], "group": [0, 18, 20, 69, 86, 88], "lasso": [0, 18, 20, 69, 79, 86, 88], "omega_": [0, 69, 87], "omega_g": [0, 69], "_c": [0, 69], "_1": [0, 67, 69, 77, 87], "index": [0, 2, 68, 69, 79, 82, 86], "class": [0, 2, 5, 8, 21, 26, 65, 67, 70, 71, 88], "label": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 24, 26, 28, 30, 32, 37, 38, 39, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 67, 69, 70, 71, 84, 87, 88], "inner": [0, 67, 69, 74], "tuia": [0, 52, 67, 69, 76, 86, 87], "rakotomamonji": [0, 37, 42, 52, 65, 67, 69, 71, 76, 86, 87], "adapt": [0, 26, 27, 52, 63, 67, 69, 70, 74, 76, 78, 84, 86, 88], "analysi": [0, 35, 44, 52, 64, 67, 69, 71, 75, 76, 85, 86, 88], "99": [0, 2, 52, 69, 76, 86, 87, 88], "1510": [0, 52, 69, 76, 86, 87], "06567": [0, 52, 69, 76, 86, 87], "kl": [0, 47, 57, 66, 67, 68, 74, 81, 83, 86, 87, 88], "kullback": [0, 57, 61, 66, 74, 81, 83, 87], "leibler": [0, 57, 61, 66, 74, 81, 83, 87], "25": [0, 4, 5, 8, 11, 28, 29, 37, 51, 52, 54, 55, 77, 79, 83, 86, 87, 88], "unnorm": [0, 77, 83], "One": [0, 69, 83, 86, 87, 88], "mani": [0, 83, 88], "sinkhorn_reg_sc": [0, 83], "ot_dist": [0, 83], "51122823": [0, 83], "18807035": [0, 83], "frogner": [0, 83, 86, 87], "zhang": [0, 83, 86, 87], "mobahi": [0, 83, 86, 87], "h": [0, 6, 13, 28, 60, 67, 69, 70, 71, 74, 79, 83, 84, 86, 87], "araya": [0, 83, 86, 87], "polo": [0, 83, 86, 87], "poggio": [0, 83, 86, 87], "sinkhorn_knopp_unbalanc": [0, 83, 87], "sinkhorn_stabilized_unbalanc": [0, 83, 87], "sinkhorn_reg_scaling_unbalanc": [0, 83], "sinkhorn_unbalanced2": [0, 83, 87], "31912866": [0, 83], "sim": [0, 69, 80], "et": [0, 3, 54, 60, 67, 75, 80, 86, 87], "al": [0, 3, 54, 60, 67, 75, 80, 86, 87], "radon": [0, 3, 54, 80, 86, 87], "imag": [0, 3, 11, 12, 27, 31, 35, 45, 52, 54, 67, 69, 76, 80, 84, 86, 87, 88], "51": [0, 3, 4, 5, 9, 52, 54, 80, 86, 87], "22": [0, 3, 11, 37, 52, 54, 55, 56, 67, 80, 86, 87, 88], "45": [0, 3, 16, 52, 54, 75, 80, 86, 87, 88], "sliced_wasserstein_spher": [0, 55, 80, 88], "ssw_p": [0, 80], "int_": [0, 80], "sigma": [0, 8, 21, 23, 24, 25, 28, 36, 69, 70, 80, 84], "foral": [0, 67, 74, 80, 84], "tx": [0, 12, 80], "_2": [0, 67, 73, 74, 79, 80, 84], "sqrt": [0, 4, 32, 37, 55, 66, 73, 77, 80], "keepdim": [0, 37, 55, 66, 80], "sliced_wasserstein_sphere_unif": [0, 4, 80, 88], "ssw_2": [0, 4, 80], "42": [0, 1, 2, 3, 5, 16, 19, 23, 25, 32, 39, 52, 54, 56, 75, 80, 86, 88], "randn": [0, 1, 3, 5, 6, 8, 15, 23, 29, 30, 36, 37, 40, 43, 55, 59, 66, 80, 82], "500": [0, 3, 4, 5, 6, 8, 19, 25, 51, 54, 55, 66, 68, 74, 80, 81], "ssw": [0, 4, 80], "allclos": [0, 66, 80], "01734": [0, 80], "atol": [0, 66, 80], "reg_typ": [0, 47, 69, 81, 87, 88], "unbalanced_typ": [0, 88], "n_thread": 0, "plan_init": 0, "potentials_init": 0, "discret": [0, 19, 24, 25, 32, 52, 67, 69, 75, 76, 82, 86, 87, 88], "otresult": [0, 84, 88], "t_": 0, "m_": [0, 29, 79, 87], "lambda_r": 0, "lambda_u": 0, "penal": [0, 35, 62, 70, 79, 83, 86], "exact": [0, 17, 35, 44, 52, 62, 67, 70, 75, 77, 78, 83, 84, 86, 87, 88], "array_lik": [0, 84], "l2": [0, 10, 11, 35, 47, 58, 62, 70, 74, 79, 81, 83, 86, 87, 88], "balanc": [0, 84, 87], "unction": 0, "tv": [0, 50], "omp": 0, "_type_": 0, "toler": [0, 31, 66, 68, 77, 81], "re": [0, 54, 55, 59, 60, 66, 75, 88], "obtain": [0, 51, 69, 79, 87], "value_linear": [0, 84, 88], "more": [0, 33, 40, 45, 64, 67, 75, 87, 88], "avail": [0, 26, 63, 64, 66, 86, 87, 88], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 75, 81, 84, 87, 88], "origin": [0, 2, 24, 28, 64, 65, 75, 81, 87, 88], "paper": [0, 11, 67, 86, 87, 88], "formul": [0, 77, 81, 86, 87], "17": [0, 17, 18, 25, 37, 52, 81, 86, 87], "blondel": [0, 43, 65, 81, 82, 86, 87, 88], "segui": [0, 14, 43, 81, 82, 86, 87], "rolet": [0, 43, 65, 81, 82, 86, 87], "twenti": [0, 67, 81, 86, 87], "aistat": [0, 67, 69, 81, 86, 87], "tic": [0, 11, 29, 84, 88], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 66, 84, 87, 88], "matlab": [0, 65, 84], "toc": [0, 11, 29, 84, 88], "messag": [0, 64, 67, 84, 88], "elaps": [0, 11, 29, 84], "toq": [0, 84], "julia": [0, 84], "type_a": [0, 66, 80, 84], "length": [0, 66, 68, 79, 82, 84], "bin": [0, 7, 10, 11, 13, 42, 46, 47, 50, 52, 57, 58, 70, 84, 87], "expect": [0, 8, 40, 63, 64, 67, 84, 86, 87], "output": [0, 5, 8, 31, 64, 67, 84, 86, 87, 88], "pytorch": [0, 9, 35, 40, 65, 66, 70, 78, 82, 84, 86, 87, 88], "wasserstein_1d": [0, 7, 51, 75, 87, 88], "dimension": [0, 30, 59, 67, 71, 75, 86, 88], "15": [0, 8, 13, 14, 17, 18, 22, 25, 28, 29, 37, 40, 52, 53, 59, 69, 75, 83, 86, 87, 88], "batch": [0, 7, 8, 67, 69, 74, 75, 82], "formal": [0, 67, 75], "so": [0, 2, 8, 61, 74, 75, 84, 87, 88], "wai": [0, 19, 64, 75, 87, 88], "build": [0, 8, 28, 64, 69, 75, 86, 87, 88], "individu": [0, 63, 75], "quantil": [0, 75, 77], "integr": [0, 75], "them": [0, 33, 69, 75, 77, 88], "prefer": [0, 64, 75, 88], "whenev": [0, 75], "differ": [0, 2, 16, 35, 45, 53, 63, 67, 68, 69, 74, 75, 78, 83, 86, 87, 88], "over": [0, 8, 32, 66, 67, 74, 75, 77], "posit": [0, 2, 7, 10, 11, 13, 32, 42, 45, 46, 47, 50, 52, 57, 58, 63, 66, 75, 76, 77, 78, 86, 87], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 66, 68, 74, 75, 76, 81, 84, 86, 87, 88], "least": [0, 64, 69, 75], "chap": [0, 75], "atom": [0, 67, 74, 75], "consid": [0, 7, 26, 28, 32, 36, 63, 64, 67, 75, 77, 84, 87], "have": [0, 8, 26, 32, 45, 63, 64, 66, 74, 75, 84, 87, 88], "been": [0, 8, 65, 75, 77, 84, 86, 87, 88], "prior": [0, 64, 67, 75, 87], "being": [0, 45, 64, 69, 75, 87, 88], "wasserstein_circl": [0, 51, 75, 88], "ot_": [0, 75, 87], "cdf_u": [0, 75], "cdf_v": [0, 75], "w_1": [0, 75, 87], "levm": [0, 75], "hundries": [0, 75, 86], "shayan": [0, 75, 86], "marcel": [0, 75, 86], "klatt": [0, 75, 86], "axel": [0, 75, 86], "munk": [0, 75, 86], "circular": [0, 28, 75, 86], "direct": [0, 32, 50, 75, 76, 81, 86, 88], "innov": [0, 75, 86], "bicentenni": [0, 75, 86], "tribut": [0, 75, 86], "florenc": [0, 75, 86], "nightingal": [0, 75, 86], "singapor": [0, 75, 86], "springer": [0, 75, 86], "natur": [0, 66, 75, 86], "2022": [0, 74, 75, 86], "57": [0, 52, 75, 83, 86, 88], "82": [0, 45, 52, 75, 86, 88], "weak_optimal_transport": [0, 38, 85], "weak": [0, 35, 44, 65, 70, 78, 86, 87, 88], "_j": [0, 71, 75, 81, 82, 85], "guess": [0, 76, 85], "indep": [0, 76, 85], "joint": [0, 32, 67, 69, 76, 85, 86, 87, 88], "densiti": [0, 76, 85], "numitermaxemd": [0, 76, 85], "stopthr2": [0, 76, 85], "gozlan": [0, 16, 75, 85, 86, 87], "roberto": [0, 85, 86, 87], "samson": [0, 85, 86, 87], "tetali": [0, 85, 86, 87], "kantorovich": [0, 85, 86, 87], "dualiti": [0, 11, 85, 86, 87], "273": [0, 85, 86, 87], "3327": [0, 85, 86, 87], "3405": [0, 85, 86, 87], "go": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 88], "end": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 75, 79, 87, 88], "download": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61], "full": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 66, 67, 82, 84, 86, 88], "author": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 86], "remi": [1, 2, 3, 5, 6, 7, 8, 10, 11, 14, 18, 19, 20, 21, 23, 24, 25, 26, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50], "polytechniqu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 38, 39, 41], "edu": [1, 2, 3, 5, 6, 7, 8, 14, 16, 38, 39, 41, 87], "licens": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61], "mit": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 86], "sphinx_gallery_thumbnail_numb": [1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 19, 20, 23, 24, 25, 26, 29, 32, 33, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60], "pyplot": [1, 4, 5, 8, 10, 12, 13, 15, 16, 19, 23, 25, 28, 29, 31, 40, 41], "pl": [1, 2, 3, 4, 5, 6, 7, 8, 11, 14, 16, 18, 20, 21, 22, 24, 26, 29, 30, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61], "manual_se": [1, 3, 4, 5, 8], "n_source_sampl": [1, 5, 18, 22, 24, 69], "n_target_sampl": [1, 5, 18, 22, 24, 69], "noise_level": [1, 5, 24], "make_data_classif": [1, 18, 20, 21, 22, 24, 26], "gaussrot": [1, 24], "nz": [1, 21, 24, 37, 70], "xt": [1, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 37, 38, 39, 48, 49, 51, 54, 55, 59, 60, 61, 67, 69, 73, 78, 79, 82, 87], "yt": [1, 18, 20, 21, 22, 24, 26, 29, 37, 69], "one": [1, 3, 5, 7, 19, 23, 24, 25, 28, 31, 32, 43, 45, 64, 66, 67, 69, 70, 75, 79, 87, 88], "mode": [1, 5, 24, 69], "chang": [1, 2, 5, 24, 31, 32, 64, 66, 67, 75, 87, 88], "varianc": [1, 5, 24, 30], "map": [1, 5, 27, 35, 43, 61, 65, 69, 70, 73, 74, 75, 82, 84, 86, 88], "figur": [1, 2, 3, 4, 5, 6, 7, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64], "clf": [1, 2, 3, 4, 5, 8, 11, 21, 23, 24, 29, 31, 32, 33, 36, 40, 41, 45, 49, 50, 58, 60], "scatter": [1, 2, 3, 4, 5, 6, 8, 14, 15, 16, 18, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 37, 45, 51, 55, 59, 60, 61], "marker": [1, 5, 14, 16, 18, 20, 21, 22, 24, 26, 32, 37], "o": [1, 5, 12, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 31, 32, 41, 45, 74, 86, 87, 88], "legend": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 20, 21, 22, 24, 26, 32, 37, 38, 39, 42, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 60], "loc": [1, 5, 14, 18, 20, 22, 24, 26, 33, 37, 38, 39, 48, 49, 54, 55, 57, 60], "titl": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 32, 33, 36, 37, 38, 39, 40, 45, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 78, 86], "text": [1, 4, 5, 6, 8, 14, 19, 21, 23, 24, 38, 39, 40, 45, 48, 52, 54, 55, 57, 64, 67, 73, 75, 79, 84, 87], "requires_grad": [1, 6, 40], "adam": [1, 5, 74], "lr": [1, 2, 3, 4, 5, 6, 7, 8, 40, 43, 82], "n_iter": [1, 4, 5, 8], "rang": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 15, 21, 28, 31, 32, 33, 36, 40, 41, 45, 50, 51, 54, 55, 58, 60, 61], "nois": [1, 5, 8, 28, 59, 70], "minu": [1, 5], "becaus": [1, 5, 75, 87, 88], "maxim": [1, 5, 82, 83, 88], "te": [1, 5], "loss_dual_entrop": [1, 5], "append": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 28, 31, 32, 33, 40, 58, 59, 84], "detach": [1, 2, 3, 4, 5, 6, 7, 8, 40, 66], "3d": [1, 4, 5, 8, 10, 11, 16, 55, 58], "backward": [1, 2, 3, 5, 6, 7, 8, 40], "zero_grad": [1, 5, 8], "grid": [1, 4, 5, 6, 8, 55, 88], "neg": [1, 5, 60, 66, 67, 74, 75, 79, 81, 83, 86], "xlabel": [1, 4, 5, 6, 8, 19, 25, 29, 32, 36, 40, 45, 50, 51, 54, 55], "ge": [1, 48, 52], "plan_dual_entrop": [1, 5], "202049490022488": 1, "19": [1, 5, 18, 25, 27, 37, 43, 52, 82, 86, 87, 88], "51292634416229": 1, "4247153200245": 1, "36": [1, 3, 5, 37, 52, 79, 83, 86, 87], "37926362624975": 1, "883504961787075": 1, "41": [1, 7, 37, 45, 52, 79, 83, 86, 88], "827819154984844": 1, "60": [1, 3, 5, 7, 8, 10, 11, 13, 32, 42, 46, 47, 52, 57, 58], "83516459038643": 1, "43": [1, 41, 52, 67, 69, 73, 75, 86, 87, 88], "21768464906025": 1, "80": [1, 5, 8, 11, 14, 32, 46, 52, 88], "382939475705705": 1, "90": [1, 5, 8, 16, 45, 46, 50, 52, 88], "48041308656748": 1, "5091634038816": 1, "110": [1, 5, 8, 46, 52], "52416250159091": 1, "120": [1, 5, 8, 46, 52, 55], "52979868568572": 1, "130": [1, 5, 8, 46, 52, 88], "533902016002294": 1, "140": [1, 5, 8, 46, 52, 88], "536379306584216": 1, "150": [1, 4, 5, 8, 16, 18, 20, 22, 26, 41, 46, 51, 52, 88], "53840266353707": 1, "160": [1, 4, 5, 8, 9, 46, 49, 52, 53, 88], "54000579490704": 1, "170": [1, 5, 8, 46, 52, 88], "541271373088584": 1, "180": [1, 5, 8, 46, 52], "542277347407186": 1, "190": [1, 5, 8, 46, 52], "54306042784618": 1, "plot2d_samples_mat": [1, 20, 38, 39, 48, 49], "zorder": [1, 2, 5, 32, 41], "01": [1, 9, 10, 17, 18, 22, 27, 29, 30, 33, 37, 43, 46, 50, 52, 53, 56, 58, 59, 62, 67, 77, 79, 82], "loss_dual_quadrat": 1, "gq": 1, "plan_dual_quadrat": 1, "0018442196020623663": 1, "642236595524523": 1, "399453029589875": 1, "27207538086476": 1, "573955774711145": 1, "655248007525394": 1, "547276792644034": 1, "018622298394995": 1, "2488841741984": 1, "34636322355823": 1, "39019641504579": 1, "40478167844131": 1, "41156339918332": 1, "41571147590538": 1, "4184731717328": 1, "420659684979746": 1, "42281660275529": 1, "424756674347336": 1, "42634015654531": 1, "427541021767276": 1, "total": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 87], "script": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 88], "minut": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61], "521": [1, 9, 22, 27], "plot_dual_ot_pytorch": [1, 9], "py": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 84, 88], "jupyt": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 88], "notebook": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 87, 88], "ipynb": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61], "galleri": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 86, 88], "sphinx": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 64, 88], "express": [2, 6, 63, 87], "part": [2, 88], "node": [2, 28], "model": [2, 3, 5, 67, 86, 87], "actual": [2, 87], "recov": [2, 8, 82, 87, 88], "proport": [2, 32, 33, 45, 67, 69, 70, 78], "sbm": [2, 32, 33], "allow": [2, 6, 30, 31, 36, 40, 59, 64, 68, 77, 87, 88], "accur": 2, "simultan": [2, 88], "other": [2, 6, 7, 37, 45, 63, 64, 74, 81, 82, 84, 86, 88], "properti": [2, 8, 74, 84, 87], "sklearn": [2, 31, 32, 84, 88], "manifold": [2, 31, 32, 71, 87], "md": [2, 32, 88], "pylab": [2, 3, 6, 7, 11, 14, 16, 18, 20, 21, 22, 24, 26, 30, 32, 33, 36, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61], "torch": [2, 3, 4, 6, 7, 8, 40, 66, 87, 88], "ot": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 43, 46, 48, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 86, 88], "rng": [2, 6, 19, 23, 25, 31, 43, 82], "def": [2, 3, 4, 5, 6, 8, 16, 19, 21, 23, 25, 28, 30, 31, 32, 33, 51, 52, 60, 66, 84], "get_sbm": 2, "nc": [2, 32], "ratio": 2, "nbpc": 2, "round": [2, 32, 33, 45, 77, 83], "astyp": [2, 3, 14, 15, 16, 19, 23, 25, 31, 32], "zero": [2, 3, 4, 6, 8, 10, 11, 15, 32, 33, 40, 45, 47, 49, 50, 51, 58, 66, 68, 74, 75, 84, 88], "rand": [2, 4, 8, 23, 37, 39, 59, 61, 66], "ey": [2, 32, 66], "05": [2, 5, 11, 18, 24, 25, 37, 43, 46, 52, 53, 56, 61, 66, 67, 69, 74, 79, 82], "ones": [2, 8, 14, 15, 28, 29, 32, 33, 45, 48, 54, 55, 60, 61, 66, 69, 74], "2d": [2, 16, 17, 18, 20, 21, 22, 26, 32, 35, 38, 39, 45, 49, 53, 56, 60, 62, 67, 70, 75, 77, 78, 83, 84, 87, 88], "dissimilar": [2, 31, 32], "precomput": [2, 31, 32, 87], "fit_transform": [2, 31, 32, 69], "plot_graph": [2, 32], "color": [2, 4, 5, 6, 7, 10, 13, 15, 27, 28, 30, 31, 32, 33, 35, 36, 40, 41, 45, 48, 51, 55, 59, 60, 61, 69, 78, 84, 87, 88], "c0": [2, 5, 32, 60, 61], "edgecolor": [2, 15, 32], "cmap": [2, 5, 10, 12, 13, 21, 28, 29, 30, 32, 45, 58, 59, 61], "tab10": [2, 32], "vmax": [2, 21, 28, 32, 40, 45], "subplot": [2, 4, 5, 8, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 25, 26, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 45, 49, 50, 52, 58, 59, 60, 61, 78], "axi": [2, 3, 4, 5, 12, 13, 15, 16, 19, 21, 23, 25, 32, 33, 41, 49, 51, 52, 54, 55, 59, 61, 66, 71, 81, 84], "imshow": [2, 12, 13, 18, 19, 20, 22, 23, 25, 26, 29, 30, 32, 36, 38, 40, 45, 48, 49, 52, 59, 61], "nearest": [2, 18, 20, 22, 26, 29, 32, 38, 48, 49, 69], "adjac": [2, 28], "home": [2, 5, 7, 10, 15, 18, 20, 21, 22, 26, 30, 31, 32, 42, 45, 51, 52, 58, 59], "circleci": [2, 5, 7, 10, 15, 18, 20, 21, 22, 26, 30, 31, 32, 42, 45, 51, 52, 58, 59, 88], "local": [2, 31, 32, 64, 87], "lib": [2, 31, 32, 66], "python3": [2, 31, 32], "site": [2, 31, 32], "packag": [2, 31, 32, 67, 84, 87], "_md": [2, 31, 32], "299": [2, 31, 32], "futurewarn": [2, 31, 32], "normalized_stress": [2, 31, 32], "auto": [2, 29, 31, 32, 59], "To": [2, 8, 31, 32, 66, 67, 77, 84, 86, 87], "suppress": [2, 31, 32], "manual": [2, 31, 32], "plot_optim_gromov_pytorch": [2, 9], "81": [2, 52], "userwarn": [2, 5, 7, 15, 18, 20, 21, 22, 26, 30, 32, 42, 45, 52, 58], "colormap": [2, 10, 32, 58], "ignor": [2, 32, 40, 76], "diagon": [2, 26, 28, 66, 73], "want": [2, 8, 15, 18, 20, 21, 22, 26, 30, 40, 45, 52, 87, 88], "up": [2, 64, 88], "min_weight_gw": 2, "a2": [2, 10, 11, 13, 15, 58], "nb_iter_max": [2, 3, 7], "min_a": [2, 87], "our": [2, 3, 7, 86, 87, 88], "c1_torch": 2, "c2_torch": 2, "a0": 2, "random_init": 2, "a1_torch": 2, "requires_grad_": [2, 3, 4, 7], "a2_torch": 2, "loss_it": [2, 3, 7], "clone": [2, 3, 4, 7, 64, 66], "03d": 2, "no_grad": [2, 3, 6, 7, 40], "grad": [2, 3, 4, 6, 7, 37, 40, 66, 74, 81, 82], "zero_": [2, 3, 6, 7, 40], "proj_simplex": [2, 6, 7, 40], "a1": [2, 10, 11, 13, 15, 58], "a0_est": 2, "loss_iter0": 2, "29850312": 2, "20157616": 2, "49992072": 2, "clear": 2, "noe": 2, "receiv": [2, 64], "most": [2, 67, 84, 87, 88], "show": [2, 7, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 36, 37, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 63, 75], "here": [2, 4, 60, 74, 86, 87, 88], "previous": 2, "t_unif": 2, "label_unif": 2, "argmax": [2, 32, 33, 36, 40, 66], "t_est": 2, "label_est": 2, "est": 2, "7760154087782544": 2, "5785554952306825": 2, "7708789474386256": 2, "6510858680019992": 2, "now": [2, 4, 45, 66, 87, 88], "seen": [2, 67, 75, 87], "probabl": [2, 7, 16, 32, 40, 74, 75, 86], "link": [2, 64, 86, 88], "graph_compression_gw": 2, "nb_node": 2, "clamp": 2, "a0_est2": 2, "c0_est2": 2, "loss_iter2": 2, "5e": [2, 13, 21, 30, 31, 60], "vmin": [2, 28, 40, 45], "colorbar": [2, 32, 45], "29985821": 2, "18926744": 2, "51087435": 2, "0x7fc827e74ee0": 2, "546": [2, 9], "liutku": [3, 86, 87], "simsekli": [3, 86, 87], "majewski": [3, 86, 87], "durmu": [3, 86, 87], "st\u00f6ter": [3, 86, 87], "mai": [3, 63, 64, 74, 75, 77, 79, 86, 87, 88], "nonparametr": [3, 86, 87], "diffus": [3, 86, 87], "4104": [3, 86, 87], "4113": [3, 86, 87], "load": [3, 19, 25, 45], "i1": [3, 14, 16, 19, 23, 25], "imread": [3, 12, 13, 14, 16, 19, 23, 25, 31], "redcross": [3, 12, 14, 16], "png": [3, 12, 13, 14, 16, 31, 41], "i2": [3, 14, 16, 19, 23, 25], "tooth": [3, 12, 16], "sz": [3, 14, 16], "xx": [3, 5, 14], "yy": [3, 5, 14], "meshgrid": [3, 4, 5, 14, 16, 66], "arang": [3, 7, 10, 11, 13, 14, 16, 29, 36, 37, 40, 42, 46, 47, 49, 50, 52, 57, 58, 66, 67], "stack": [3, 14, 16, 32, 66], "32": [3, 5, 14, 37, 52, 71, 74, 86, 87], "x3": [3, 14, 15], "collect": [3, 10, 11, 31, 51, 58, 67], "pathcollect": [3, 31, 51], "0x7fc727dee070": 3, "devic": [3, 7, 66, 87, 88], "cuda": [3, 7, 65, 88], "is_avail": [3, 7], "x1_torch": 3, "x2_torch": 3, "1e3": 3, "x_all": 3, "gen": 3, "5e1": 3, "ax": [3, 4, 10, 12, 13, 15, 16, 40, 45, 55, 58, 59, 66, 76, 87], "_update_plot": [3, 4, 8, 16, 60], "ani": [3, 4, 8, 16, 60, 63, 64, 66, 68, 76, 79, 84, 86, 87], "funcanim": [3, 4, 8, 16, 60], "gcf": [3, 4, 8, 10, 58, 60], "interv": [3, 4, 8, 16, 54, 55, 60, 66], "repeat_delai": [3, 4, 8, 16, 60], "2000": [3, 4, 7, 8, 16, 60], "onc": [3, 4, 8, 16, 60], "loop": [3, 4, 8, 16, 45, 60, 69], "reflect": [3, 4, 8, 16, 60], "x3_torch": 3, "xbinit": 3, "16": [3, 5, 7, 15, 18, 25, 29, 32, 36, 37, 40, 52, 66, 68, 71, 75, 79, 86, 87], "xbary_torch": 3, "728": [3, 9, 51], "plot_sliced_wass_grad_flow_pytorch": [3, 9], "transform": [4, 18, 19, 20, 22, 24, 26, 69, 82, 84, 87], "cl\u00e9ment": [4, 51, 55, 65], "clement": [4, 51, 55], "univ": [4, 21, 22, 36, 40, 51, 55, 60, 61], "ub": [4, 36, 40, 51, 55, 60, 61], "fr": [4, 7, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 36, 37, 40, 46, 47, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61], "nn": [4, 5, 8, 88], "function": [4, 7, 10, 11, 12, 31, 45, 58, 60, 64, 74, 86, 87, 88], "plot_spher": 4, "xlist": 4, "linspac": [4, 5, 10, 15, 28, 50, 51, 58, 66], "ylist": 4, "z": [4, 10, 32, 42, 55, 58, 65, 67, 81, 84, 86, 87], "plot_wirefram": [4, 55], "grai": [4, 55], "bottom": [4, 13, 45], "half": 4, "set_titl": [4, 10, 13, 15, 40], "0x7fc727f2b160": 4, "xvisu": [4, 8], "sw": 4, "grad_x": 4, "item": [4, 28, 33, 64], "semilogi": [4, 6, 8], "1487005203962326": 4, "010112249292433262": 4, "0027540859300643206": 4, "300": [4, 5, 32], "002495632041245699": 4, "400": [4, 5, 88], "0023963679559528828": 4, "23": [4, 5, 6, 8, 19, 27, 37, 50, 52, 67, 86, 87, 88], "52222222222222": [4, 5, 6, 8], "ivisu": [4, 8], "75": [4, 8, 52, 88], "350": [4, 5, 88], "499": 4, "fig": [4, 12, 13, 15, 16, 30, 31, 36, 40, 49, 55, 59], "add_subplot": [4, 10, 16, 30, 58, 59], "set_xlim": [4, 15, 55], "set_ylim": [4, 15, 55], "plot_ssw_unif_torch": [4, 9], "nvisu": [5, 52], "ax_bound": 5, "defin": [5, 8, 31, 36, 43, 45, 63, 66, 67, 69, 75, 79, 81, 87, 88], "mlp": [5, 8], "modul": [5, 8, 42, 45, 64, 67, 71, 78, 86, 88], "__init__": [5, 8, 69, 84], "self": [5, 8, 69, 84], "super": [5, 8], "fc1": [5, 8], "fc2": [5, 8], "relu": [5, 8], "heavisid": [5, 8], "fn": [5, 8], "forward": [5, 8, 87], "ravel": [5, 28, 60, 61, 81, 84], "doubl": [5, 40, 45], "005": [5, 61], "n_batch": 5, "iperm": 5, "randint": [5, 19, 25, 28], "ipermt": 5, "xsi": 5, "xti": 5, "2393484646308117": 5, "642282658482282": 5, "17414737436737": 5, "163954594319065": 5, "568419626220432": 5, "30142104232135": 5, "27": [5, 32, 34, 37, 52, 67, 69, 86, 88], "83083778430649": 5, "876519593594548": 5, "21879930758375": 5, "33": [5, 36, 37, 40, 42, 52, 67, 68, 86, 87], "4451848716634": 5, "85373096612886": 5, "34720398072969": 5, "710736296778066": 5, "41460794588291": 5, "42733527689799": 5, "956475233802664": 5, "633523577460544": 5, "147411707619916": 5, "380450160762436": 5, "20851722920263": 5, "04832525738659": 5, "210": [5, 88], "92018401264584": 5, "220": [5, 88], "28786346616246": 5, "230": 5, "59548196836587": 5, "240": [5, 88], "74007551169938": 5, "250": 5, "87532094924726": 5, "260": [5, 88], "16038650643604": 5, "270": 5, "51952191315499": 5, "280": [5, 88], "21124977745395": 5, "290": [5, 88], "77647345402473": 5, "23611304685019": 5, "310": [5, 88], "17877897507476": 5, "320": [5, 11], "675230089410675": 5, "330": 5, "47856020676343": 5, "340": [5, 88], "20515530483855": 5, "31842178792489": 5, "360": [5, 88], "41746085650229": 5, "370": 5, "49945342906268": 5, "380": [5, 88], "10140960022083": 5, "390": 5, "95709453591491": 5, "35196434989731": 5, "410": [5, 8, 9, 88], "09752366661001": 5, "420": 5, "76370892349192": 5, "430": 5, "03460532012972": 5, "440": [5, 88], "11701064614925": 5, "450": 5, "6314392473137": 5, "460": [5, 88], "3493275492541": 5, "470": 5, "85056949023975": 5, "480": 5, "67325977340096": 5, "490": 5, "501296932771325": 5, "69137367120989": 5, "510": 5, "25065772288269": 5, "520": 5, "48779395563361": 5, "530": 5, "79890479507191": 5, "540": 5, "57060888796475": 5, "550": 5, "5638137066962": 5, "560": 5, "46562709782847": 5, "570": 5, "40687844211681": 5, "580": 5, "20922619478149": 5, "590": 5, "24178255185049": 5, "600": [5, 32, 34], "83767190886772": 5, "610": 5, "091495197788845": 5, "620": 5, "226919963425395": 5, "630": 5, "799585822959976": 5, "640": 5, "257120957823304": 5, "650": 5, "69321505002742": 5, "660": [5, 17], "68384667580914": 5, "670": 5, "19213769075986": 5, "680": 5, "91790237056651": 5, "690": 5, "3058789007125": 5, "700": 5, "76524124674425": 5, "710": 5, "09665287526145": 5, "720": 5, "64052506463496": 5, "730": [5, 77, 86, 87], "63630669836856": 5, "740": 5, "223618598061506": 5, "750": 5, "92249432681105": 5, "760": 5, "97476232035201": 5, "770": 5, "23452025643506": 5, "780": [5, 7, 9], "16928305689463": 5, "790": 5, "2578859647569": 5, "800": [5, 7, 59, 62], "23397446378046": 5, "810": 5, "1721306311481": 5, "820": 5, "247867302837534": 5, "830": 5, "96014658076261": 5, "840": 5, "03767527010372": 5, "850": 5, "030040026953046": 5, "860": 5, "14482662014769": 5, "870": 5, "93227580081683": 5, "880": 5, "14373204690508": 5, "890": 5, "26008919084345": 5, "900": 5, "517689779489814": 5, "910": [5, 58], "39905188612141": 5, "920": 5, "46077222226741": 5, "930": 5, "018913815021016": 5, "940": 5, "49951821381371": 5, "950": 5, "969868723277074": 5, "960": 5, "024141665861244": 5, "970": 5, "88576653718013": 5, "980": 5, "428442172282146": 5, "990": 5, "10248001587743": 5, "nv": [5, 60], "xl": 5, "yl": 5, "xg": [5, 8], "concaten": [5, 6, 15, 23, 37, 41, 51, 59, 61, 66, 79, 84], "wxg": 5, "exp": [5, 45, 51, 66, 71, 82, 87], "iv": [5, 51, 60], "gg": [5, 29], "wt": [5, 73, 82], "reshap": [5, 19, 23, 25, 28, 31, 37, 42, 46, 47, 50, 52, 57, 59, 60, 66, 67, 77, 79], "pcolormesh": 5, "green": [5, 7], "plot_stoch_continuous_ot_pytorch": [5, 9], "159": [5, 52], "doe": [5, 45, 64, 66, 74, 87, 88], "handl": [5, 7, 87, 88], "quadmesh": 5, "http": [5, 42, 45, 49, 63, 66, 67, 81, 84, 86, 87, 88], "org": [5, 42, 49, 63, 66, 67, 81, 84, 86, 87, 88], "tutori": [5, 64, 87], "legend_guid": 5, "html": [5, 45, 64, 66, 86], "custom": 5, "handler": 5, "173": [5, 52], "187": [5, 52], "447": [5, 9, 88], "mix": [6, 7, 40], "word": [6, 87], "suppos": [6, 67, 87], "s_k": 6, "w_k": [6, 87], "belong": [6, 30, 59, 79], "delta_k": 6, "observ": [6, 67, 70], "pot": [6, 7, 12, 18, 30, 31, 36, 40, 43, 44, 59, 61, 65, 66, 68, 84, 88], "nt1": 6, "ns1": 6, "xs1": [6, 21], "xs2": [6, 21, 51], "correspond": [6, 7, 26, 45, 71, 74, 79, 87, 88], "s_1": 6, "s_2": 6, "0x7fc727a39040": 6, "h2": [6, 33, 74], "m2": [6, 49, 50], "2e": [6, 42, 47, 60], "rate": [6, 74, 82], "niter": [6, 40], "get_loss": 6, "mv": 6, "squar": [6, 31, 45, 49, 50, 66, 69, 71, 74, 80, 81, 84, 86, 87, 88], "mixtur": 6, "09980706": 6, "90019294": 6, "dot": [6, 10, 11, 15, 21, 23, 30, 33, 39, 45, 58, 59, 66, 84], "c3": [6, 33, 41], "0x7fc727dc1a30": 6, "603": [6, 9], "plot_unmix_optim_torch": [6, 9], "refer": [7, 33, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 79, 81, 82, 83, 84, 85], "ensur": [7, 64, 75, 87], "remain": 7, "illustr": [7, 10, 11, 12, 13, 14, 15, 16, 28, 29, 32, 33, 37, 38, 39, 40, 42, 45, 46, 47, 48, 51, 52, 54, 55, 57, 58, 60, 64, 88], "within": [7, 63, 66, 74], "framework": [7, 32, 88], "ncourti": [7, 12, 30, 31], "irisa": [7, 12, 28, 29, 30, 31, 48, 59], "mpl": 7, "make_1d_gauss": [7, 10, 11, 13, 42, 46, 47, 50, 52, 57, 58], "gauss": [7, 42, 46, 47, 50, 57, 69], "red": [7, 19, 25, 29, 45], "to_rgb": 7, "blue": [7, 12, 19, 25, 29, 36, 40, 45], "dtype": [7, 10, 11, 13, 42, 46, 47, 50, 52, 54, 55, 57, 58, 66, 67], "gaussian": [7, 8, 10, 23, 24, 25, 28, 42, 46, 47, 50, 52, 57, 58, 65, 66, 69, 70, 84, 87, 88], "mean": [7, 10, 11, 13, 33, 42, 46, 47, 50, 51, 52, 54, 55, 57, 58, 66, 67, 70, 71, 73, 75, 87, 88], "std": [7, 10, 11, 13, 29, 42, 46, 47, 50, 51, 52, 54, 55, 57, 58, 66, 70, 74, 88], "enforc": [7, 87], "x_torch": 7, "a_torch": 7, "b_torch": 7, "figsiz": [7, 11, 12, 13, 15, 16, 18, 19, 20, 22, 23, 25, 26, 28, 31, 33, 37, 40, 42, 43, 46, 47, 49, 52, 55, 57, 58], "onto": [7, 18, 20, 22, 69, 74, 81, 84, 87], "curv": [7, 40], "everi": [7, 32, 68, 74, 86], "lw": [7, 13, 33, 45], "evolut": [7, 32, 51, 67, 74, 86], "fontsiz": [7, 13, 28, 29, 32, 33, 45, 55, 60], "solver_1d": [7, 51, 88], "than": [7, 45, 66, 74, 87, 88], "revers": [7, 66], "throw": [7, 88], "futur": [7, 67, 88], "releas": [7, 10, 58, 59, 67, 86, 87], "mt": [7, 73], "transpos": [7, 36, 40, 66, 88], "ndim": 7, "trigger": [7, 68], "aten": 7, "src": 7, "nativ": 7, "tensorshap": 7, "cpp": 7, "3571": 7, "cw": 7, "contigu": 7, "tw": 7, "bary_torch": 7, "instant": 7, "plot_wass1d_torch": [7, 9], "fit": [8, 23, 25, 26, 31, 67, 69, 75, 87], "g_": 8, "realist": 8, "drawn": [8, 70, 78], "indistinguish": 8, "mu_d": 8, "arjovsky2017": 8, "access": [8, 45, 86], "cannot": [8, 26, 69, 87, 88], "larg": [8, 26, 43, 69, 77, 82, 86, 87, 88], "genevay2018": 8, "studi": 8, "fatras2019": 8, "arjovski": 8, "chintala": 8, "bottou": 8, "adversari": [8, 87], "214": 8, "223": 8, "genevai": [8, 43, 67, 82, 86, 87], "aud": [8, 67, 86], "fatra": [8, 43, 48, 65, 86], "zine": 8, "gribonv": 8, "2020": [8, 13, 36, 40, 67, 68, 77, 86, 87, 88], "june": 8, "asymptot": 8, "23nd": 8, "108": [8, 52, 88], "n_dim": 8, "n_featur": [8, 69, 84], "get_data": 8, "n_sampl": [8, 15, 30, 31, 59, 69], "angl": [8, 23, 51], "cat": 8, "co": [8, 23, 35, 37, 44, 49, 51, 55, 68, 84, 86, 88], "sin": [8, 23, 28, 37, 49, 51, 55, 84], "0x7fc725932400": 8, "fc3": 8, "rmsprop": 8, "00019": 8, "doc": [8, 64, 66, 88], "size_batch": 8, "stati": 8, "n_visu": 8, "xnvisu": 8, "ab": [8, 29, 30, 50, 66, 81, 84, 87, 88], "xn": 8, "xd": 8, "smapl": 8, "compt": 8, "del": 8, "9009847640991211": 8, "10964284837245941": 8, "04564394801855087": 8, "03516071289777756": 8, "05013977363705635": 8, "058588504791259766": 8, "03730057179927826": 8, "04171676188707352": 8, "03168988972902298": 8, "031197285279631615": 8, "03596879169344902": 8, "03272819146513939": 8, "032379165291786194": 8, "03959248960018158": 8, "029337508603930473": 8, "05796702206134796": 8, "034939464181661606": 8, "022607704624533653": 8, "04347885772585869": 8, "1164197325706482": 8, "125": [8, 10, 11, 41, 52], "175": [8, 52, 88], "199": [8, 52, 77, 88], "xtick": [8, 11, 18, 20, 22, 26, 29, 50, 60, 61], "ytick": [8, 11, 18, 20, 22, 26, 29, 61], "xlim": [8, 31, 45, 50, 51], "ylim": [8, 31, 50, 51], "0x7fc725723ca0": 8, "54": [8, 9, 12, 17, 52], "plot_wass2_gan_torch": [8, 9], "196": [9, 52], "execut": [9, 17, 27, 34, 44, 53, 56, 62, 87, 88], "auto_examples_backend": 9, "file": [9, 17, 27, 34, 35, 41, 44, 53, 56, 62, 87, 88], "continu": [9, 32, 35, 67, 75, 82, 87], "estim": [9, 21, 27, 30, 35, 43, 64, 65, 67, 69, 70, 73, 74, 75, 76, 82, 84, 86, 88], "04": [9, 18, 24, 25, 29, 30, 34, 37, 43, 46, 52, 62, 82], "mb": [9, 17, 27, 34, 44, 53, 56, 62], "embed": [9, 31, 35, 74, 87], "sphere": [9, 35, 80, 88], "flow": [9, 35, 70, 84, 86, 87, 88], "minibatch": [9, 35, 82, 87, 88], "00": [9, 17, 18, 21, 24, 25, 27, 29, 30, 34, 44, 52, 53, 56, 59, 62, 79], "unmix": [9, 32, 35, 67, 74, 84, 86, 87, 88], "unic": [10, 11, 18, 19, 20, 21, 23, 24, 25, 26, 36, 37, 40, 46, 47, 48, 49, 50, 75], "plt": [10, 12, 13, 15, 16, 19, 23, 25, 28, 31], "necessari": [10, 11, 58, 59, 63, 64, 75, 86, 88], "mpl_toolkit": [10, 11, 30, 58, 59], "mplot3d": [10, 11, 30, 58, 59], "axes3d": [10, 11, 30, 58, 59], "noqa": [10, 11, 30, 58, 59], "polycollect": [10, 11, 58], "creat": [10, 11, 13, 28, 58, 63, 64, 65, 66, 78, 86, 88], "vstack": [10, 11, 13, 29, 58], "n_distribut": [10, 11, 13, 58], "dist0": [10, 11, 13, 58], "l2bari": [10, 11, 58], "bary_l2": [10, 11, 58], "bary_wass": [10, 11, 58], "ax1": [10, 29, 30, 31, 36, 40, 59], "ax2": [10, 29, 30, 31, 36, 40, 59], "tight_layout": [10, 11, 12, 13, 15, 16, 18, 19, 20, 22, 24, 25, 26, 29, 32, 33, 36, 37, 40, 45, 49, 50, 58], "num": [10, 13, 66], "black": [10, 32, 33, 36, 40, 78], "n_alpha": 10, "alpha_list": 10, "b_l2": [10, 58], "b_wass": [10, 58], "cm": [10, 12, 28, 58], "get_cmap": [10, 58], "viridi": [10, 28, 58], "vert": [10, 58], "enumer": [10, 13, 28, 32, 33, 50, 51, 54, 55, 58], "zip": [10, 13, 16, 32, 35, 58, 86], "poli": [10, 58], "facecolor": [10, 41, 58], "set_alpha": [10, 58], "add_collection3d": [10, 58], "zdir": [10, 58], "set_xlabel": [10, 55, 58], "set_xlim3d": [10, 58], "set_ylabel": [10, 13, 45, 55, 58], "set_ylim3d": [10, 58], "set_zlabel": [10, 55, 58], "set_zlim3d": [10, 58], "plot_barycenter_1d": [10, 17], "103": [10, 52], "matplotlibdeprecationwarn": [10, 58, 59], "wa": [10, 45, 58, 87, 88], "remov": [10, 58, 59, 63, 66, 75, 79, 84, 88], "minor": [10, 58, 59, 88], "later": [10, 33, 58, 59, 69], "name": [10, 21, 58, 66, 74, 84, 86, 87], "obj": [10, 58, 81], "696": [10, 17], "standard": [11, 66, 70, 74, 84, 88], "scienc": [11, 19, 25, 52, 69, 76, 86, 87], "343": [11, 88], "cvx": 11, "bary_wass2": 11, "interior": [11, 75, 87], "0035169124603271484": 11, "primal": [11, 75, 82], "feasibl": [11, 75], "gap": 11, "path": [11, 12, 13, 19, 23, 25, 31, 35, 62, 64, 70, 79, 86, 88], "1700": 11, "336700337": 11, "006776453137633": 11, "006776453137634": 11, "9932238647293": 11, "6700527543": 11, "004018712867874": 11, "4301142633": 11, "26594150092": 11, "001172775061627": 11, "7599932455028": 11, "3378536968897": 11, "0004375137005385": 11, "6422331807989": 11, "1468420566358": 11, "000232669046734": 11, "0002326690467341": 11, "5016999460893": 11, "09381703231432": 11, "430121674303e": 11, "7035962305812": 11, "0577787025717": 11, "321227838882e": 11, "321227838879e": 11, "3087841864401": 11, "05266249477204": 11, "990900379202e": 11, "990900379201e": 11, "6520472013245": 11, "0452605440552": 11, "305442046817e": 11, "30544204679e": 11, "305442046812e": 11, "7073953304073": 11, "305442046809e": 11, "04237597591383": 11, "290148391578e": 11, "290148391587e": 11, "290148391592e": 11, "6941812711476": 11, "290148391602e": 11, "041522849321": 11, "182864875418e": 11, "182864875486e": 11, "182864875459e": 11, "508455204664": 11, "182864875475e": 11, "04129461872827": 11, "626786380237e": 11, "626786380498e": 11, "626786380591e": 11, "7101651574148": 11, "626786380499e": 11, "04113032448919": 11, "53975423377e": 11, "539754239097e": 11, "539754238957e": 11, "627932209399": 11, "539754244458e": 11, "04108867636364": 11, "193221588102e": 11, "08": [11, 27, 30, 43, 46, 52, 66, 69, 78], "193221525716e": 11, "193221527893e": 11, "6843453372866": 11, "193221744194e": 11, "04106859618425": 11, "888204557375e": 11, "888204466916e": 11, "888204464386e": 11, "6673444754752": 11, "888205403e": 11, "04106214175154": 11, "676851456731e": 11, "676853754852e": 11, "676853775137e": 11, "7281705629265": 11, "676886118764e": 11, "04105958648699": 11, "50115020171e": 11, "501137125386e": 11, "501137136515e": 11, "4140221641718": 11, "501151490466e": 11, "04105916265115": 11, "110591805675e": 11, "110570750049e": 11, "110570733855e": 11, "699900032435": 11, "110619438659e": 11, "04105870073191": 11, "770990264961e": 11, "776274527894e": 11, "776273877079e": 11, "4996170321381": 11, "772744208187e": 11, "04105859774172": 11, "536197932746e": 11, "538885612866e": 11, "538885001653e": 11, "7515062666584": 11, "537834631178e": 11, "04105851682752": 11, "743041081423e": 11, "740002462354e": 11, "740001907827e": 11, "5949277749653": 11, "73465642858e": 11, "04105850033226": 11, "794231989236e": 11, "747423074042e": 11, "747429829833e": 11, "7557701998162": 11, "741755335329e": 11, "04105849090303": 11, "termin": [11, 37], "successfulli": [11, 40], "current": [11, 18, 64, 66, 68, 69, 74, 76, 79, 81, 88], "041058": 11, "1814112663269043": 11, "004489421844482422": 11, "006776466288967": 11, "9932238515788": 11, "006776466288968": 11, "6649255808": 11, "004036918865497": 11, "4272973099314": 11, "34716170111": 11, "001219232687069": 11, "7496986855994": 11, "3243835647407": 11, "0003837422984427": 11, "6926882608286": 11, "1361719397492": 11, "0001070128410182": 11, "7643889137854": 11, "07581952832515": 11, "0001001275033711": 11, "000100127503371": 11, "07058704837782": 11, "07347394936348": 11, "550897507833e": 11, "550897507832e": 11, "5761172484836": 11, "05555077655044": 11, "557124125502e": 11, "557124125495e": 11, "8535925441154": 11, "557124125503e": 11, "0443981466022": 11, "611995628362e": 11, "611995628359e": 11, "611995628375e": 11, "6002277331592": 11, "611995628377e": 11, "04283007762151": 11, "590393750322e": 11, "59039375014e": 11, "590393750355e": 11, "822148653339": 11, "590393750361e": 11, "04192322976247": 11, "299929287269e": 11, "299929283142e": 11, "299929287457e": 11, "9017467938803": 11, "299929287509e": 11, "04170825633295": 11, "117560215317e": 11, "117560474123e": 11, "117560204434e": 11, "9970399692198": 11, "117560202277e": 11, "04168179329766": 11, "559775055372e": 11, "14": [11, 18, 25, 32, 37, 39, 45, 52, 59, 66, 69, 74, 86, 87], "561428379782e": 11, "559760203488e": 11, "9999499685222": 11, "559752674386e": 11, "04168169240444": 11, "041682": 11, "6718719005584717": 11, "0010159015655517578": 11, "006774675520687": 11, "9932256422636": 11, "6956034733": 11, "002048208707529": 11, "7343095368176": 11, "213991622021": 11, "0002697365474824": 11, "8839403501148": 11, "5059383903968": 11, "832109993819e": 11, "832109993818e": 11, "7601171076044": 11, "2339657807265": 11, "437682932226e": 11, "6663448297416": 11, "1471256246326": 11, "134983216297e": 11, "134983216299e": 11, "5553643816468": 11, "1181584941169": 11, "342312725774e": 11, "342312725781e": 11, "723813357168": 11, "1006387519744": 11, "078561231268e": 11, "078561231235e": 11, "078561231266e": 11, "8033142552548": 11, "09474734646262": 11, "966870958108e": 11, "966870953918e": 11, "966870953989e": 11, "7525479178458": 11, "966870954248e": 11, "09354342735761": 11, "199895240123e": 11, "199895384126e": 11, "199895235332e": 11, "9984019849396": 11, "199895236104e": 11, "0931036778586": 11, "1017793609e": 11, "101768735229e": 11, "101780822184e": 11, "9999499563876": 11, "101780420221e": 11, "0931027446646": 11, "093103": 11, "7962939739227295": 11, "nbm": 11, "len": [11, 13, 15, 28, 31, 32, 33, 45, 81, 84], "nbm2": 11, "013": [11, 17], "plot_barycenter_lp_vs_entrop": [11, 17], "design": [12, 30, 31, 33, 36, 43, 52, 59, 61, 79, 87, 88], "how": [12, 24, 30, 31, 32, 33, 36, 40, 43, 45, 50, 51, 59, 61, 67, 88], "pathlib": [12, 13, 19, 23, 25, 31], "four": [12, 31], "construct": [12, 31, 63, 66, 69, 79], "this_fil": [12, 13, 19, 23, 25, 31], "realpath": [12, 13, 19, 23, 25, 31], "__file__": [12, 13, 19, 23, 25, 31], "data_path": [12, 13, 19, 23, 25, 31], "join": [12, 13, 19, 23, 25, 31, 66, 86], "parent": [12, 13, 19, 23, 25, 31], "f1": [12, 13], "f2": [12, 13, 33, 74], "f3": [12, 33], "heart": [12, 13, 16], "f4": 12, "duck": [12, 13, 14], "nb_imag": 12, "corner": [12, 87], "bilinear": [12, 45], "v1": [12, 33], "v2": [12, 33], "v3": 12, "v4": 12, "suptitl": [12, 28], "004": 12, "ty": 12, "tmp1": 12, "tmp2": 12, "elif": [12, 32, 33], "call": [12, 43, 59, 61, 67, 69, 74, 75, 76, 84, 87, 88], "convolutional_barycenter2d": [12, 13], "156": [12, 17, 52, 88], "plot_convolutional_barycent": [12, 17], "janati": [13, 57, 58, 65, 67, 86, 87], "gramfort": [13, 65, 67, 86, 87], "37th": [13, 67, 86, 87], "119": [13, 52, 67, 86, 87], "4692": [13, 67, 86, 87], "4701": [13, 67, 86, 87], "hicham": [13, 57, 58, 65, 86], "janati100": 13, "gmail": [13, 18, 19, 20, 24, 25, 26, 30, 31, 33, 42, 43], "com": [13, 18, 19, 20, 24, 25, 26, 30, 31, 33, 42, 43, 64, 66, 81, 84, 86, 88], "barycenter_debias": 13, "convolutional_barycenter2d_debias": 13, "bar": [13, 79], "bars_debias": 13, "indianr": 13, "gold": [13, 66], "sharei": [13, 29], "bar_debias": 13, "varepsilon": [13, 68], "3f": [13, 21, 60], "asarrai": 13, "displai": [13, 20, 26, 45, 67], "img": [13, 19, 23, 25, 31], "grei": [13, 32], "bars_sinkhorn": 13, "7e": 13, "all_bar": 13, "jj": 13, "ax_row": 13, "ii": [13, 15], "set_xtick": [13, 16, 55], "set_ytick": [13, 16, 55], "spine": 13, "top": [13, 64, 74, 78], "set_vis": 13, "089": [13, 17], "plot_debiased_barycent": [13, 17], "vivien": [14, 81, 86], "iip": 14, "ist": 14, "kyoto": 14, "ac": 14, "jp": 14, "eduardo": [14, 15, 65], "fernand": [14, 15, 65], "montesuma": [14, 15, 65], "universit": [14, 15], "saclai": [14, 15], "measures_loc": [14, 15, 67, 75], "measures_weight": [14, 15, 67, 75], "x_init": [14, 15, 67, 75], "free_support_barycent": [14, 67, 87, 88], "free_support_sinkhorn_barycent": [14, 15], "151": [14, 17, 52], "plot_free_support_barycent": [14, 17], "understood": 15, "cloud": [15, 31], "linalg": [15, 28, 30, 59, 66], "x4": 15, "multivariate_norm": 15, "a3": 15, "a4": 15, "steelblu": 15, "float32": 15, "xb_init": 15, "subplot2grid": [15, 31], "536": [15, 18, 20, 21, 22, 26, 30, 45, 52], "did": [15, 18, 20, 21, 22, 26, 30, 45, 52, 74, 88], "increas": [15, 18, 20, 21, 22, 26, 30, 45, 52, 77], "504": 15, "runtimewarn": [15, 51, 58], "overflow": [15, 58, 88], "encount": [15, 51, 58], "divid": [15, 45, 51, 58], "nx": [15, 28, 66, 74, 76, 84, 88], "kp": 15, "511": 15, "503": 15, "ktransposeu": 15, "704": [15, 17], "plot_free_support_sinkhorn_barycent": [15, 17], "saint": [16, 75, 86], "dizier": [16, 75, 86], "live": [16, 32, 64, 75, 86], "subspac": [16, 71, 75, 86, 87], "2105": [16, 75, 86], "09755": [16, 75, 86], "eloi": [16, 65], "tangui": [16, 65, 74], "sub_sample_factor": 16, "i3": 16, "uu": 16, "vv": 16, "x_list": [16, 75], "im": [16, 23, 25, 45], "a_list": [16, 75], "p1": [16, 21, 33, 41], "p2": [16, 21, 33, 41], "p3": [16, 33], "p_list": [16, 75], "n_samples_bari": [16, 75], "send": [16, 64], "visual": [16, 20, 26, 36, 46, 47], "x_visu": 16, "xi": 16, "view_init": [16, 55], "azim": 16, "set_ztick": [16, 55], "generalized_free_support_barycent": 16, "elev": 16, "_init": 16, "init_func": 16, "frame": 16, "136": [16, 52], "blit": 16, "48": [16, 17, 33, 45, 52, 74, 76, 86, 88], "852": [16, 17], "plot_generalized_free_support_barycent": [16, 17], "03": [17, 18, 24, 27, 29, 30, 34, 37, 41, 42, 43, 44, 46, 52, 55, 77, 82], "auto_examples_barycent": 17, "convolut": [17, 35, 65, 67, 86, 88], "demo": [17, 35, 62, 67, 70, 75, 84, 87], "debias": [17, 35, 65, 67, 70, 84, 86, 87, 88], "free": [17, 35, 63, 64, 65, 67, 75, 77, 86, 88], "02": [17, 18, 24, 25, 27, 30, 34, 37, 43, 44, 46, 52, 53, 56, 59, 62, 77, 82], "introduc": [18, 19, 20, 21, 22, 24, 26, 67, 87, 88], "otda": [18, 21, 22, 27, 35, 69, 70, 84, 88], "stanisla": [18, 19, 20, 24, 25, 26, 65, 86], "chambon": [18, 19, 20, 24, 25, 26, 65, 86], "stan": [18, 19, 20, 24, 25, 26], "3gauss": [18, 20, 22, 26], "3gauss2": [18, 20, 22, 26], "ot_emd": [18, 19, 20, 22, 25, 45, 87], "da": [18, 19, 20, 21, 22, 23, 24, 25, 26, 65, 87, 88], "emdtransport": [18, 19, 20, 22, 25, 87, 88], "ot_sinkhorn": [18, 19, 20, 21, 22, 25, 45], "sinkhorntransport": [18, 19, 20, 21, 22, 25, 26, 87, 88], "reg_": [18, 19, 20, 21, 22, 25, 26, 69], "ot_lpl1": [18, 20], "sinkhornlpl1transport": [18, 20, 87, 88], "reg_cl": [18, 20, 69], "1e0": [18, 20, 24, 25, 37], "l1l2": [18, 69], "ot_l1l2": 18, "sinkhornl1l2transport": [18, 87], "2e0": 18, "transp_xs_emd": [18, 19, 20, 22, 25], "transp_xs_sinkhorn": [18, 19, 20, 22, 25], "transp_xs_lpl1": [18, 20], "transp_xs_l1l2": 18, "810186e": 18, "000000e": [18, 24, 25, 29, 30, 52], "256314e": 18, "347882e": 18, "553872e": 18, "024772e": 18, "143541e": 18, "315410e": 18, "983120e": 18, "100377e": 18, "165298e": 18, "952423e": 18, "572201e": 18, "069602e": 18, "940671e": 18, "056036e": 18, "175277e": 18, "935891e": 18, "468876e": 18, "779475e": 18, "935712e": 18, "282198e": 18, "796766e": 18, "929184e": 18, "383684e": 18, "527748e": 18, "922702e": 18, "371329e": 18, "482060e": 18, "921877e": 18, "288872e": 18, "242687e": 18, "921176e": 18, "650182e": 18, "012642e": 18, "917865e": 18, "726393e": 18, "310990e": 18, "916184e": 18, "774185e": 18, "681295e": 18, "913438e": 18, "435240e": 18, "746242e": 18, "912211e": 18, "414793e": 18, "226644e": 18, "910786e": 18, "455476e": 18, "424582e": 18, "909969e": 18, "279559e": 18, "173825e": 18, "18": [18, 25, 28, 29, 37, 43, 52, 77, 82, 86, 87], "909593e": 18, "968598e": 18, "759221e": 18, "908595e": 18, "229761e": 18, "981496e": 18, "907940e": 18, "432707e": 18, "549400e": 18, "param_img": [18, 22], "coupling_": [18, 20, 21, 22, 26, 69], "nemdtransport": [18, 20, 22, 26], "nsinkhorntransport": [18, 20, 22, 26], "nsinkhornlpl1transport": [18, 20], "nsinkhornl1l2transport": 18, "transp": [18, 20, 22, 26, 61], "149": [18, 27, 52], "plot_otda_class": [18, 27], "present": [19, 24, 26, 60, 64, 74, 88], "transfer": [19, 87], "ferradan": [19, 25, 52, 69, 76, 86, 87], "papadaki": [19, 25, 52, 69, 76, 86, 87], "peyr": [19, 25], "aujol": [19, 25, 52, 69, 76, 86, 87], "2014": [19, 25, 52, 67, 69, 75, 76, 86, 87], "1853": [19, 25, 52, 69, 76, 86, 87], "1882": [19, 25, 52, 69, 76, 86, 87], "im2mat": [19, 23, 25, 31], "pixel": [19, 23, 31], "per": [19, 23, 25, 31, 47, 75, 81], "mat2im": [19, 23, 25], "back": [19, 23, 25, 64], "minmax": [19, 23, 25], "clip": [19, 23, 25, 66], "ocean_dai": [19, 23, 25], "jpg": [19, 23, 25], "256": [19, 23, 25], "ocean_sunset": [19, 23, 25], "idx1": [19, 25], "idx2": [19, 25], "ylabel": [19, 25, 29, 32, 45, 54, 55, 61], "predict": [19, 74], "out": [19, 24, 69, 80], "transp_xt_emd": 19, "inverse_transform": [19, 23, 69, 87], "transp_xt_sinkhorn": 19, "i1t": [19, 23], "i2t": [19, 23], "574": [19, 27], "plot_otda_color_imag": [19, 27], "explicit": [20, 26, 63, 69, 84], "some": [20, 26, 59, 64, 65, 69, 75, 77, 84, 86, 87, 88], "quantiti": [20, 26, 32], "greater": [20, 26, 88], "coeffici": [20, 26, 32, 67, 68, 74, 75, 76, 79], "give": [20, 26, 45, 61, 64, 66, 74, 79, 88], "understand": [20, 26], "what": [20, 26, 63, 64, 87], "n_samples_sourc": [20, 26], "n_samples_target": [20, 26], "main": [20, 64, 75, 87, 88], "667": [20, 27], "plot_otda_d2": [20, 27], "ievgen": [21, 22, 65, 67, 69, 86], "redko": [21, 22, 36, 40, 65, 67, 68, 69, 86], "st": [21, 22, 71], "etienn": [21, 22], "1985": 21, "dec1": 21, "dec2": 21, "pt": 21, "dect": 21, "ys1": 21, "2gauss_prop": 21, "bia": [21, 24, 25, 69, 73], "ys2": 21, "all_xr": 21, "all_yr": 21, "plot_ax": 21, "dec": 21, "set1": 21, "2f": [21, 45], "equal": [21, 41, 49, 66, 79], "85": [21, 52, 88], "046431138906241": 21, "129455496299416": 21, "print_g": 21, "independ": [21, 87], "jcpottransport": 21, "ws1": 21, "proportions_": [21, 69], "log_": [21, 69], "d2": [21, 36, 40], "ws2": 21, "prop": [21, 77], "err": [21, 30, 46, 59], "069551e": 21, "h_re": 21, "1f": 21, "268": [21, 27], "plot_otda_jcpot": [21, 27], "ot_emd_laplac": 22, "emdlaplacetransport": 22, "reg_lap": [22, 69], "reg_src": [22, 69], "transp_xs_emd_laplac": 22, "nemdlaplacetransport": 22, "plot_otda_laplacian": [22, 27], "anglet": 23, "line2d": 23, "0x7fc8281b25b0": 23, "ae": 23, "empirical_bures_wasserstein_map": 23, "xst": 23, "lineartransport": [23, 87], "invers": [23, 33, 60, 66, 69, 75, 79], "181": [23, 27, 52, 88], "plot_otda_linear_map": [23, 27], "mappingtransport": [24, 25, 87], "perrot": [24, 25, 65, 69, 86, 87], "habrard": [24, 25, 69, 86, 87], "xs_new": 24, "ot_mapping_linear": [24, 25], "transp_xs_linear": 24, "transp_xs_linear_new": 24, "ot_mapping_gaussian": [24, 25], "transp_xs_gaussian": 24, "transp_xs_gaussian_new": 24, "delta": [24, 25, 40, 79], "986844e": 24, "972764e": 24, "531477e": 24, "972389e": 24, "461658e": 24, "972245e": 24, "624025e": 24, "972160e": 24, "117504e": 24, "972106e": 24, "373173e": 24, "972080e": 24, "562692e": 24, "003857e": 24, "958192e": 24, "140527e": 24, "955664e": 24, "387672e": 24, "954245e": 24, "587321e": 24, "953256e": 24, "500806e": 24, "952519e": 24, "864201e": 24, "951984e": 24, "351734e": 24, "951585e": 24, "009586e": 24, "951268e": 24, "023501e": 24, "951019e": 24, "311744e": 24, "950798e": 24, "579922e": 24, "bari": [24, 28], "081": [24, 27], "plot_otda_map": [24, 27], "image_emd": 25, "image_sinkhorn": 25, "x1tl": 25, "image_mapping_linear": 25, "x1tn": 25, "image_mapping_gaussian": 25, "797245e": 25, "758014e": 25, "182822e": 25, "757026e": 25, "620752e": 25, "756521e": 25, "875691e": 25, "756218e": 25, "725224e": 25, "756015e": 25, "153553e": 25, "755868e": 25, "348118e": 25, "755759e": 25, "234582e": 25, "755673e": 25, "893582e": 25, "755604e": 25, "942771e": 25, "755547e": 25, "206000e": 25, "755500e": 25, "695056e": 25, "755460e": 25, "307154e": 25, "755426e": 25, "944208e": 25, "755395e": 25, "715960e": 25, "755369e": 25, "515613e": 25, "755345e": 25, "367864e": 25, "755324e": 25, "197885e": 25, "755305e": 25, "071067e": 25, "755303e": 25, "898122e": 25, "842001e": 25, "780145e": 25, "358084e": 25, "778490e": 25, "296544e": 25, "777841e": 25, "648247e": 25, "777495e": 25, "948923e": 25, "777284e": 25, "184075e": 25, "777135e": 25, "396988e": 25, "777027e": 25, "059322e": 25, "776945e": 25, "619816e": 25, "776880e": 25, "672789e": 25, "776827e": 25, "971430e": 25, "221": [25, 27], "plot_otda_mapping_colors_imag": [25, 27], "ot_sinkhorn_un": 26, "transp_xs_sinkhorn_un": 26, "ot_sinkhorn_semi": 26, "transp_xs_sinkhorn_semi": 26, "modifi": 26, "involv": [26, 64], "infinit": [26, 69], "daili": 26, "element": [26, 28, 45, 66, 67, 69, 74, 75, 79, 84], "fill": [26, 57, 66, 69], "recal": [26, 79], "cost_": [26, 69], "exhibit": [26, 69], "nunsupervis": 26, "nsemi": 26, "794": [26, 27], "plot_otda_semi_supervis": [26, 27], "456": 27, "auto_examples_domain": 27, "multi": [27, 35, 66, 67, 69, 70, 84, 86, 87, 88], "shift": [27, 35, 67, 69, 70, 84, 86, 87, 88], "laplacian": [27, 35, 65, 69, 70, 84, 86, 87], "unsupervis": [27, 35, 69, 70, 84, 87], "semi": [27, 34, 35, 65, 69, 70, 74, 76, 79, 81, 82, 84, 86, 87, 88], "supervis": [27, 35, 67, 69, 70, 84, 86, 87, 88], "networkx": [28, 32, 33], "csgraph": 28, "shortest_path": 28, "mcol": 28, "fgw_barycent": [28, 74, 87], "find_thresh": 28, "inf": [28, 69], "sup": 28, "trick": [28, 77, 87], "adequ": 28, "sai": 28, "connect": [28, 32, 33], "linesearch": [28, 74, 76, 88], "reconstruct": [28, 32, 74, 81, 88], "come": [28, 64, 87, 88], "n_node": [28, 32], "begin": [28, 79], "thresh": 28, "cprime": 28, "sp_to_adjac": 28, "sc": 28, "argmin": [28, 33, 66], "threshinf": 28, "threshsup": 28, "minimum": [28, 66, 69, 74, 76, 87, 88], "new": [28, 66, 84, 87], "zeros_lik": 28, "fill_diagon": [28, 32], "build_noisy_circular_graph": 28, "with_nois": 28, "structure_nois": 28, "noisi": [28, 40], "add_nodes_from": 28, "add_nod": [28, 33], "attr_nam": 28, "add_edg": [28, 33], "randomint": 28, "graph_color": 28, "nx_graph": 28, "cnorm": 28, "cpick": 28, "scalarmapp": 28, "set_arrai": 28, "val_map": 28, "get_node_attribut": 28, "to_rgba": 28, "ad": [28, 40, 64, 66, 69, 73, 75, 77, 79, 84, 87, 88], "po": [28, 31, 33, 69], "kamada_kawai_layout": 28, "draw": 28, "node_color": [28, 33], "with_label": 28, "node_s": [28, 33], "indic": [28, 64, 66, 79], "adjacency_matrix": 28, "sizebari": 28, "95": [28, 31, 33, 52, 54, 55], "from_numpy_arrai": 28, "020": [28, 34], "plot_barycenter_fgw": [28, 34], "sig": 29, "sig2": 29, "phi": [29, 79], "phi2": 29, "a_i": [29, 67, 75, 87], "y_j": [29, 87], "b_j": [29, 67, 75, 87], "w1": [29, 71], "w2": [29, 51, 71], "got": 29, "l_x": 29, "l_y": 29, "gridspec": 29, "set_aspect": 29, "ax3": [29, 31, 59], "sharex": 29, "gwg": 29, "logw": 29, "reload_ext": 29, "wgw": 29, "734412e": 29, "508254e": 29, "875326e": 29, "226158e": 29, "189327e": 29, "456740e": 29, "189279e": 29, "622743e": 29, "552714e": 29, "0024645328521728516": 29, "683978e": 29, "860061e": 29, "134468e": 29, "239175e": 29, "182948e": 29, "682787e": 29, "677113e": 29, "869": [29, 34], "plot_fgw": [29, 34], "erwan": [30, 31, 65], "vautier": [30, 31, 65], "sp": [30, 31, 59, 77], "demonstr": [30, 59, 64, 88], "purpos": [30, 59, 87], "mu_": [30, 38, 48, 51, 54, 59, 60, 61, 69, 73, 87], "cov_": [30, 38, 48, 54, 59, 60, 61], "mu_t": [30, 38, 48, 54, 59, 60, 61, 69, 73, 87], "cov_t": [30, 38, 48, 54, 59, 60, 61], "make_2d_samples_gauss": [30, 38, 48, 54, 59, 60, 61], "sqrtm": [30, 59, 66], "121": [30, 33, 45, 52, 59, 88], "122": [30, 33, 45, 52, 59, 88], "gw0": 30, "log0": [30, 59], "entropic_gromov_wasserstein": [30, 74, 87, 88], "jet": [30, 59, 61], "040183e": 30, "680045e": 30, "312927e": 30, "721780e": 30, "810735e": 30, "807022e": 30, "693103e": 30, "071265e": 30, "833502e": 30, "306601e": 30, "414525e": 30, "04810734779562988": 30, "04097168403053387": 30, "pgw": 30, "plog": 30, "pointwise_gromov_wasserstein": [30, 74], "sgw": 30, "slog": [30, 67], "sampled_gromov_wasserstein": [30, 74], "pointwis": [30, 88], "gw_dist_estim": 30, "gw_dist_std": 30, "toarrai": [30, 66, 79], "18827653307627662": 30, "1534777663986762": 30, "001626689010280435": 30, "631": [30, 34], "plot_gromov": [30, 34], "decomposit": 31, "pca": 31, "smacof_md": 31, "3000": 31, "singl": 31, "stress": 31, "declar": 31, "npo": 31, "isometri": 31, "n_init": 31, "embedding_": 31, "nmd": 31, "init": [31, 74, 88], "cross": 31, "triangl": 31, "star": 31, "lambdast": 31, "ct01": 31, "ct02": 31, "ct13": 31, "ct23": 31, "help": [31, 64, 75, 87, 88], "consist": [31, 64, 66, 67, 69, 75, 87], "rotat": [31, 45], "n_compon": 31, "npost01": 31, "npost02": 31, "npost13": 31, "npost23": 31, "ax4": 31, "ax5": 31, "ax6": 31, "ax7": 31, "ax8": 31, "ax9": 31, "ax10": 31, "ax11": 31, "ax12": 31, "0x7fc725a96280": 31, "088": [31, 34], "plot_gromov_barycent": [31, 34], "denot": [32, 45, 67, 69, 75], "c_": [32, 45, 74], "p_": [32, 74], "combin": [32, 87], "sigma_d": 32, "sum_d": [32, 74], "taken": [32, 87], "vari": 32, "extens": 32, "aforement": 32, "unattribut": 32, "add": [32, 59, 64, 75, 77, 84, 88], "uniformli": 32, "Then": [32, 51, 87], "c\u00e9dric": [32, 33, 65, 74, 76, 86], "cedric": 32, "inria": [32, 57, 58], "gromov_wasserstein_linear_unmix": [32, 74], "gromov_wasserstein_dictionary_learn": [32, 74], "fused_gromov_wasserstein_linear_unmix": [32, 74], "fused_gromov_wasserstein_dictionary_learn": [32, 74], "commun": [32, 33, 63, 87], "stochastic_block_model": [32, 33], "inter": 32, "intra": [32, 33, 77], "nlabel": 32, "p_inter": 32, "p_intra": 32, "n_cluster": 32, "low": [32, 39, 45, 72], "high": [32, 64], "int32": 32, "to_numpy_arrai": [32, 33], "intens": 32, "idx_c": 32, "plot_gromov_wasserstein_dictionary_learn": [32, 34], "93": [32, 52, 88], "promot": [32, 74, 87], "sparsiti": [32, 47, 74, 81, 86, 87, 88], "cdict_gw": 32, "epoch": [32, 74], "batch_siz": [32, 43, 69, 74, 82], "learning_r": [32, 74], "nonnegative_symmetr": [32, 74], "tol_out": [32, 74], "tol_inn": [32, 74], "max_iter_out": [32, 74], "max_iter_inn": [32, 74], "use_log": [32, 74], "use_adam_optim": [32, 74], "loss_epoch": 32, "cumul": [32, 66], "928070954885737": 32, "528435380634622": 32, "481496257647932": 32, "7251645422089865": 32, "5896787585765": 32, "904249565820505": 32, "894474501829586": 32, "839762947251266": 32, "8357620167079265": 32, "57323879230497": 32, "shade": 32, "dark": [32, 88], "white": 32, "idx_atom": 32, "scaled_atom": 32, "reconstruction_error": 32, "cembed": [32, 74], "unmixings2d": 32, "extrem": 32, "linewidth": [32, 41, 55], "876122061653427": 32, "assign": [32, 33, 67, 68, 74], "hot": 32, "encod": [32, 84], "dataset_featur": 32, "001": [32, 47, 49, 53, 67, 69, 71, 81], "cdict_fgw": 32, "ydict_fgw": 32, "learning_rate_c": [32, 74], "learning_rate_i": [32, 74], "488307468700953": 32, "409377567767253": 32, "7999724972950055": 32, "590157056733561": 32, "8883324021076806": 32, "6222694197786383": 32, "638584123604814": 32, "537256942676492": 32, "4127469295470614": 32, "315769238894676": 32, "max_featur": 32, "min_featur": 32, "catom": 32, "fatom": 32, "scaled_f": 32, "yembed": [32, 74], "1390622525410854": 32, "sr": [33, 76], "g1": [33, 49], "g2": [33, 49], "reweigh": 33, "srgw": [33, 74], "These": [33, 64], "endow": 33, "srfgw": [33, 74], "iclr": [33, 74, 76, 81, 86], "cedvincentcuaz": 33, "semirelaxed_gromov_wasserstein": [33, 74], "semirelaxed_fused_gromov_wasserstein": [33, 74], "n3": 33, "g3": 33, "h3": 33, "edg": 33, "weight_intra_g2": 33, "weight_inter_g2": 33, "weight_intra_g3": 33, "weight_inter_g3": 33, "weightedg2": 33, "part_g2": 33, "weightedg3": 33, "part_g3": 33, "ot_23": 33, "log_23": 33, "srgw_23": 33, "srgw_dist": 33, "ot_32": 33, "log_32": 33, "srgw_32": 33, "255": 33, "105007529006411": 33, "1622222222222223": 33, "draw_graph": 33, "nodes_color_part": 33, "gweight": 33, "edge_color": 33, "shiftx": 33, "spring_layout": 33, "alpha_edg": 33, "width_edg": 33, "draw_networkx_edg": 33, "width": [33, 67], "visibl": [33, 88], "activ": [33, 66, 67, 79], "edgelist_activ": 33, "edgelist_deactiv": 33, "edgelist": 33, "draw_networkx_nod": 33, "nodelist": 33, "scaled_gweight": 33, "nodes_s": 33, "draw_transp_colored_srgw": 33, "part_g1": 33, "pos1": 33, "pos2": 33, "switchx": 33, "seed_g1": 33, "seed_g2": 33, "starting_color": 33, "partit": 33, "part1": 33, "unique_color": 33, "uniqu": [33, 66, 75, 87], "nodes_color_part1": 33, "nodes_color_part2": 33, "k1": 33, "k2": 33, "seed_g3": 33, "h_2": [33, 74], "c_3": 33, "hbar2": 33, "hbar3": 33, "h_3": 33, "pairwis": [33, 69, 74], "fgw_alpha": 33, "fgw_dist": 33, "srfgw_23": 33, "srfgw_dist": 33, "srfgw_32": 33, "38017836704293934": 33, "04004733478713954": 33, "24196480586404343": 33, "f_2": [33, 74], "f_3": 33, "054": [33, 34], "plot_semirelaxed_fgw": [33, 34], "262": [34, 88], "auto_examples_gromov": 34, "introduct": [35, 53, 87, 88], "row": [35, 44, 66, 67, 68, 75, 79, 84], "align": [35, 44, 63, 68, 69, 73, 87], "discrimin": [35, 44, 71, 86, 88], "logo": [35, 44, 87, 88], "toolbox": [35, 44, 65, 87, 88], "auto_examples_python": 35, "auto_examples_jupyt": 35, "arbitrari": 36, "n_1": [36, 40], "d_1": [36, 40], "n_2": [36, 40], "d_2": [36, 40], "49": [36, 40, 52, 68, 86, 88], "quang": [36, 40], "hui": [36, 40], "tran": [36, 40], "patch": [36, 40], "connectionpatch": [36, 40], "coot": 36, "co_optimal_transport": [36, 40], "co_optimal_transport2": [36, 40], "coot2": [36, 40], "d1": [36, 40], "pi_sampl": [36, 40, 68], "pi_featur": [36, 40, 68], "coot_dist": 36, "5f": 36, "yaxi": [36, 40], "tick_right": [36, 40], "xaxi": [36, 40], "tick_top": [36, 40], "xya": [36, 40], "xyb": [36, 40], "con": [36, 40], "coordsa": [36, 40], "transdata": [36, 40], "coordsb": [36, 40], "add_artist": [36, 40], "10903416567681642": 36, "09875680836922485": 36, "09685398028260431": 36, "09685": 36, "445": [36, 44, 88], "plot_coot": [36, 44], "wda": [37, 65, 88], "fda": [37, 87], "floor": [37, 66], "nbnois": 37, "hstack": 37, "pfda": 37, "projfda": 37, "maxit": [37, 67, 71], "p0": [37, 71], "pwda": 37, "projwda": 37, "3042776946697494e": 37, "65147154e": 37, "4401037686381040e": 37, "16760501e": 37, "2234351238819945e": 37, "30555049e": 37, "2169879996364423e": 37, "39115407e": 37, "1924746118060369e": 37, "25387848e": 37, "1177409528990178e": 37, "70993539e": 37, "0862213476139214e": 37, "52716830e": 37, "0747229322240075e": 37, "34923131e": 37, "0678766065262878e": 37, "74029183e": 37, "0621337155458664e": 37, "03651803e": 37, "0577080390746906e": 37, "59605592e": 37, "0543140912455111e": 37, "28883715e": 37, "0470236926306019e": 37, "47528039e": 37, "0445628468810180e": 37, "03183256e": 37, "0364189460477085e": 37, "31006516e": 37, "0303977559883736e": 37, "39885317e": 37, "0301476256880614e": 37, "17467742e": 37, "0292344398773650e": 37, "79960372e": 37, "0271888385606963e": 37, "94406489e": 37, "0183211343527492e": 37, "98310561e": 37, "9762394340964535e": 37, "03201905e": 37, "8224395769425140e": 37, "36060492e": 37, "0851966893250043e": 37, "92701407e": 37, "8009717220864577e": 37, "02061998e": 37, "3668193677962859e": 37, "88563896e": 37, "3483413930117983e": 37, "71452936e": 37, "3067537677687422e": 37, "86310495e": 37, "28": [37, 52, 77, 79, 86, 87, 88], "3065518346568345e": 37, "46077174e": 37, "29": [37, 44, 52, 69, 73, 77, 86, 87, 88], "3060670920565279e": 37, "75578987e": 37, "3060470256115403e": 37, "25868759e": 37, "3060461627418530e": 37, "22639654e": 37, "3060442892822819e": 37, "01961700e": 37, "3060442772382622e": 37, "00748140e": 37, "3060442756281188e": 37, "62773999e": 37, "3060442713240839e": 37, "89229822e": 37, "3060442712307608e": 37, "18154399e": 37, "3060442709316276e": 37, "93366573e": 37, "3060442708553130e": 37, "70367603e": 37, "3060442707941986e": 37, "23768945e": 37, "3060442707803397e": 37, "73721750e": 37, "3060442707621306e": 37, "01134868e": 37, "reach": [37, 88], "after": [37, 86], "xsp": 37, "xtp": 37, "xspw": 37, "xtpw": 37, "964": [37, 44], "plot_wda": [37, 44], "xr": [38, 39, 48, 49, 54], "gweak": 38, "548": [38, 44], "plot_weakot_vs_ot": [38, 44], "sign": 39, "og": 39, "templat": [39, 88], "184": [39, 44, 52, 88], "plot_factored_coupl": [39, 44], "mu_x": 40, "mu_i": [40, 87], "clean": [40, 88], "y_": [40, 69, 74], "contamin": 40, "outlier": 40, "intuit": [40, 64], "182": [40, 52], "y_noisi": 40, "nrow": 40, "ncol": 40, "wy_samp": [40, 68], "07503408": 40, "07999275": 40, "09471755": 40, "10023423": 40, "09997926": 40, "09998085": 40, "10000592": 40, "09981116": 40, "11468648": 40, "13555772": 40, "clearli": [40, 87], "complet": [40, 64, 87, 88], "010396790451735978": 40, "994": [40, 44], "plot_learning_weights_with_coot": [40, 44], "letter": 41, "o1": 41, "o2": 41, "translat": 41, "t1": 41, "t2": [41, 60, 79], "horizont": 41, "vertic": 41, "sx": 41, "sy": [41, 64], "markerfacecolor": 41, "markeredgecolor": 41, "save": [41, 67, 74], "savefig": 41, "svg": 41, "dpi": 41, "transpar": 41, "bbox_inch": 41, "tight": 41, "375": [41, 88], "darkgrai": 41, "logo_dark": 41, "068": [41, 44], "plot_logo": [41, 44], "alaya": [42, 65, 67, 77, 86, 87], "b\u00e9rar": [42, 67, 86, 87], "gasso": [42, 60, 67, 77, 79, 83, 86, 87], "neurip": [42, 77, 79, 83, 86, 87], "mokhtar": [42, 65, 86], "mokhtarzahdi": 42, "plot1d_mat": [42, 43, 46, 47, 52, 57], "lambd": [42, 46, 47, 48], "ns_budget": [42, 67], "budget": [42, 67], "kept": [42, 67, 88], "nt_budget": [42, 67], "g_screen": 42, "restrict": [42, 67], "3524": 42, "bottleneck": [42, 67], "instal": [42, 64, 67, 75, 87, 88], "pypi": [42, 67, 86, 88], "020986042861303855": 42, "kappa": [42, 67], "7476531411890917": 42, "cardin": [42, 67, 84], "isel": 42, "jsel": 42, "408": [42, 44, 88], "plot_screenkhorn_1d": [42, 44], "librari": [43, 65, 86, 87, 88], "bach": [43, 82, 86, 87], "bhushan": [43, 82, 86, 87], "damodaran": [43, 82, 86, 87], "kilian": [43, 48, 65, 86], "n_sourc": [43, 82], "n_target": [43, 50, 82], "x_sourc": [43, 82], "y_target": [43, 82], "sag": [43, 82], "sag_pi": 43, "solve_semi_dual_entrop": 43, "55553509e": 43, "96395660e": 43, "76579142e": 43, "31178196e": 43, "21640234e": 43, "25357448e": 43, "30225078e": 43, "37891338e": 43, "56123975e": 43, "61451746e": 43, "31505947e": 43, "33831456e": 43, "61515202e": 43, "34246014e": 43, "28734709e": 43, "07550428e": 43, "85500870e": 43, "52288517e": 43, "08262628e": 43, "21423583e": 43, "16904253e": 43, "03825797e": 43, "87178503e": 43, "18391107e": 43, "15462212e": 43, "65987989e": 43, "23177216e": 43, "39440107e": 43, "semicontinu": 43, "asgd": [43, 82], "asgd_pi": 43, "log_asgd": 43, "beta": [43, 67, 75, 81, 82, 88], "87919564": 43, "64972912": 43, "90370867": 43, "65425719": 43, "46885467": 43, "30171991": 43, "77560865": 43, "50927934": 43, "40235686": 43, "91006054": 43, "82169674": 43, "44871332e": 43, "00795848e": 43, "75697554e": 43, "40659699e": 43, "20593540e": 43, "31205385e": 43, "34063837e": 43, "80242597e": 43, "40238837e": 43, "68032820e": 43, "26513361e": 43, "36373920e": 43, "52546195e": 43, "40772739e": 43, "31054753e": 43, "19774150e": 43, "29902872e": 43, "49410422e": 43, "06078986e": 43, "22200805e": 43, "05396464e": 43, "03575289e": 43, "84056467e": 43, "19573357e": 43, "02994053e": 43, "72385417e": 43, "28420336e": 43, "47716225e": 43, "sinkhorn_pi": 43, "55553508e": 43, "96395661e": 43, "31178193e": 43, "30225079e": 43, "37891333e": 43, "56123974e": 43, "33831455e": 43, "61515201e": 43, "07550425e": 43, "85500876e": 43, "52288523e": 43, "08262629e": 43, "16904255e": 43, "03825804e": 43, "87178504e": 43, "23177217e": 43, "39440105e": 43, "sgd": [43, 74, 82], "sgd_dual_pi": [43, 82], "log_sgd": 43, "solve_dual_entrop": 43, "92075753": 43, "80864372": 43, "07370578": 43, "0179414": 43, "60239916": 43, "8141425": 43, "11122763": 43, "346688": 43, "47228889": 43, "57636303": 43, "9534778": 43, "21021974e": 43, "26940978e": 43, "09590373e": 43, "59858662e": 43, "65652588e": 43, "83627521e": 43, "27260904e": 43, "58648690e": 43, "49188637e": 43, "03096858e": 43, "44340331e": 43, "37764488e": 43, "14582303e": 43, "32484188e": 43, "15372556e": 43, "26187284e": 43, "79941580e": 43, "58297483e": 43, "36009581e": 43, "15632652e": 43, "07006729e": 43, "61709962e": 43, "99740394e": 43, "13377026e": 43, "88094057e": 43, "36124884e": 43, "09671824e": 43, "24045368e": 43, "727": [43, 44], "plot_stochast": [43, 44], "337": [44, 88], "auto_examples_oth": 44, "aureli": 45, "boisbunon": [45, 86], "pip": [45, 64, 87, 88], "conda": [45, 87], "forg": [45, 87], "alwai": [45, 64, 69, 87, 88], "document": [45, 65, 86, 87, 88], "pythonot": [45, 66, 86, 88], "github": [45, 64, 66, 81, 84, 86, 87, 88], "io": [45, 86, 88], "Or": 45, "inlin": 45, "caf\u00e9": 45, "croissant": 45, "manhattan": 45, "quick": [45, 86, 88], "googl": 45, "extract": [45, 66], "fiction": 45, "product": [45, 66, 79, 84, 87], "sale": 45, "bakery_po": 45, "bakery_prod": 45, "describ": [45, 64, 67, 74], "sold": 45, "cafe_po": 45, "cafe_prod": 45, "fun": 45, "imap": 45, "shop": 45, "npz": 45, "cafe": 45, "89": [45, 52, 69, 88], "73": [45, 52], "88": [45, 52, 88], "92": [45, 52, 88], "91": [45, 52, 88], "441": [45, 67, 75, 86], "next": [45, 74, 75, 79, 87, 88], "ec": 45, "thing": 45, "fontweight": 45, "bold": 45, "va": 45, "coolwarm": 45, "cbar": 45, "shrink": 45, "use_gridspec": 45, "cell": 45, "further": [45, 63, 64], "awai": 45, "thu": [45, 84], "costli": 45, "while": [45, 75, 87, 88], "time_emd": 45, "section": [45, 87, 88], "good": [45, 63, 64, 87], "plane": 45, "easili": [45, 87], "interpret": 45, "10838179": 45, "pseudo": 45, "oslash": 45, "wise": [45, 66, 87], "divis": 45, "altern": [45, 64, 69, 87], "Be": 45, "care": 45, "pre": [45, 67, 87], "nit": 45, "ot_sink_algo": 45, "atleast_2d": 45, "equival": [45, 46, 69, 73, 77], "diag": [45, 66, 67, 87], "algo": [45, 67], "2g": 45, "0008": 45, "notic": 45, "deliv": 45, "fraction": 45, "sens": [45, 67, 75, 86, 87], "reg_paramet": 45, "logspac": [45, 51, 54, 55, 60], "w_sinkhorn_reg": 45, "time_sinkhorn_reg": 45, "max_ot": 45, "few": [45, 88], "compar": [45, 64, 87], "seri": 45, "someth": [45, 64], "although": 45, "tend": 45, "comparison": [45, 52, 87], "972222222222223": 45, "impact": [45, 87], "higher": [45, 74, 81], "much": [45, 64, 67], "littl": [45, 75], "quickli": [45, 64], "415": [45, 53], "plot_intro_ot": [45, 53], "0x7fc727f2bb20": 46, "861463e": 46, "860154e": 46, "144529e": 46, "130143e": 46, "178815e": 46, "426078e": 46, "661047e": 46, "233110e": 46, "338932e": 46, "776627e": 46, "293340e": 46, "235791e": 46, "637176e": 46, "740051e": 46, "529356e": 46, "450071e": 46, "193632e": 46, "449812e": 46, "294505e": 46, "857493e": 46, "822723e": 46, "635": [46, 53], "plot_ot_1d": [46, 53], "constrain": [47, 81, 86, 87, 88], "togeth": 47, "0x7fc727cb5ac0": 47, "gsm": 47, "smooth_ot_du": [47, 87], "max_nz": [47, 81, 84], "entri": [47, 66], "permit": 47, "gsc": 47, "sparsity_constrain": [47, 81], "plot_ot_1d_smooth": [47, 53], "empirical_sinkhorn": [48, 87], "588": [48, 53], "plot_ot_2d_sampl": [48, 53], "stole": 49, "idea": [49, 75, 87, 88], "pdf": [49, 51, 64, 87], "1706": 49, "07650": 49, "strictli": [49, 75, 87], "m1": 49, "mp": 49, "l1": [49, 68], "gp": 49, "xtot": 49, "plot_ot_l1_vs_l2": [49, 53], "lst_m": 50, "d_emd": 50, "d_emd2": 50, "d_tv": 50, "0x7fc727e7d730": 50, "d_sinkhorn": 50, "d_sinkhorn2": 50, "628": [50, 53], "plot_compute_emd": [50, 53], "special": [51, 66], "pdf_von_mis": 51, "endpoint": 51, "mu1": 51, "kappa1": 51, "mu_target": 51, "pdf1": 51, "pdf_t": 51, "mu2": 51, "kappa2": 51, "vonmis": 51, "0x7fc727f4ae20": 51, "period": 51, "attain": [51, 77], "antipod": 51, "contrari": 51, "n_try": 51, "deal": [51, 77], "put": 51, "xts2": 51, "l_w2_circl": 51, "l_w2": 51, "w2_circl": 51, "m_w2_circl": 51, "std_w2_circl": 51, "m_w2": 51, "std_w2": 51, "fill_between": [51, 54, 55], "vline": 51, "ymin": 51, "ymax": 51, "linestyl": 51, "tc": 51, "mask_end": 51, "ctp": 51, "ctm": 51, "dcptm": 51, "dcmtp": 51, "invalid": [51, 58], "vm": 51, "755": [51, 53], "plot_compute_wasserstein_circl": [51, 53], "df": [52, 76, 87], "gl2": 52, "frob": 52, "760578e": 52, "669467e": 52, "457501e": 52, "111116e": 52, "665639e": 52, "298130e": 52, "827855e": 52, "664378e": 52, "572776e": 52, "260396e": 52, "664077e": 52, "811855e": 52, "015066e": 52, "663912e": 52, "936787e": 52, "653393e": 52, "663852e": 52, "555826e": 52, "916369e": 52, "663814e": 52, "305693e": 52, "836245e": 52, "663785e": 52, "760450e": 52, "929009e": 52, "663767e": 52, "078011e": 52, "793559e": 52, "663751e": 52, "525192e": 52, "584755e": 52, "663737e": 52, "396466e": 52, "396951e": 52, "663727e": 52, "086938e": 52, "012700e": 52, "663720e": 52, "042609e": 52, "725769e": 52, "663713e": 52, "160914e": 52, "922568e": 52, "663707e": 52, "823502e": 52, "361187e": 52, "663702e": 52, "022440e": 52, "028438e": 52, "663697e": 52, "181249e": 52, "292634e": 52, "663692e": 52, "698532e": 52, "489527e": 52, "663687e": 52, "258253e": 52, "420712e": 52, "663682e": 52, "741118e": 52, "560349e": 52, "663678e": 52, "624135e": 52, "365715e": 52, "663673e": 52, "645179e": 52, "400714e": 52, "663670e": 52, "957237e": 52, "256196e": 52, "663666e": 52, "261541e": 52, "762450e": 52, "663663e": 52, "851305e": 52, "079948e": 52, "663660e": 52, "942296e": 52, "231320e": 52, "663657e": 52, "092896e": 52, "481860e": 52, "663653e": 52, "924361e": 52, "201470e": 52, "663651e": 52, "625455e": 52, "704189e": 52, "663648e": 52, "641123e": 52, "730250e": 52, "663645e": 52, "566666e": 52, "606377e": 52, "663643e": 52, "338514e": 52, "226810e": 52, "663641e": 52, "222711e": 52, "034152e": 52, "663639e": 52, "221805e": 52, "032642e": 52, "663637e": 52, "440781e": 52, "396935e": 52, "663634e": 52, "520091e": 52, "528875e": 52, "663632e": 52, "288193e": 52, "143080e": 52, "663630e": 52, "123055e": 52, "868347e": 52, "663628e": 52, "024487e": 52, "704365e": 52, "663627e": 52, "079606e": 52, "796061e": 52, "663625e": 52, "172093e": 52, "949922e": 52, "663623e": 52, "047880e": 52, "743277e": 52, "663621e": 52, "010577e": 52, "681217e": 52, "663619e": 52, "064438e": 52, "770820e": 52, "663618e": 52, "882375e": 52, "644049e": 52, "663616e": 52, "532647e": 52, "419505e": 52, "663615e": 52, "930189e": 52, "652001e": 52, "663613e": 52, "728955e": 52, "452161e": 52, "663612e": 52, "524214e": 52, "584459e": 52, "663610e": 52, "088418e": 52, "511958e": 52, "663609e": 52, "639430e": 52, "270902e": 52, "52": [52, 88], "663608e": 52, "662611e": 52, "108397e": 52, "53": [52, 60, 62], "663607e": 52, "133700e": 52, "186767e": 52, "663605e": 52, "648141e": 52, "272349e": 52, "55": [52, 88], "663604e": 52, "557516e": 52, "090911e": 52, "56": [52, 88], "663603e": 52, "304213e": 52, "215131e": 52, "663602e": 52, "353809e": 52, "057021e": 52, "58": [52, 88], "663601e": 52, "968279e": 52, "325603e": 52, "59": [52, 87, 88], "663600e": 52, "367159e": 52, "059240e": 52, "663599e": 52, "610790e": 52, "334102e": 52, "61": 52, "663598e": 52, "787466e": 52, "628015e": 52, "62": [52, 88], "663596e": 52, "937777e": 52, "154166e": 52, "63": 52, "599432e": 52, "315190e": 52, "64": [52, 88], "663595e": 52, "813048e": 52, "670555e": 52, "65": [52, 59], "663594e": 52, "724600e": 52, "523409e": 52, "66": [52, 59, 67, 86, 87, 88], "663593e": 52, "081892e": 52, "011779e": 52, "67": [52, 88], "663592e": 52, "948732e": 52, "896260e": 52, "68": 52, "663591e": 52, "941833e": 52, "221188e": 52, "69": [52, 77], "663590e": 52, "213739e": 52, "673523e": 52, "663589e": 52, "127355e": 52, "529811e": 52, "71": 52, "663588e": 52, "349251e": 52, "235363e": 52, "72": [52, 88], "007084e": 52, "329722e": 52, "663587e": 52, "880265e": 52, "118744e": 52, "74": 52, "663586e": 52, "931950e": 52, "204723e": 52, "663585e": 52, "981309e": 52, "286832e": 52, "76": [52, 88], "663584e": 52, "952959e": 52, "576082e": 52, "77": 52, "544857e": 52, "560750e": 52, "78": [52, 86], "663583e": 52, "237579e": 52, "049564e": 52, "79": [52, 88], "663582e": 52, "382386e": 52, "290460e": 52, "646051e": 52, "065503e": 52, "663581e": 52, "197994e": 52, "983702e": 52, "663580e": 52, "072764e": 52, "775370e": 52, "83": 52, "994645e": 52, "645410e": 52, "84": [52, 88], "663579e": 52, "842721e": 52, "056248e": 52, "663578e": 52, "276486e": 52, "450691e": 52, "86": [52, 88], "737346e": 52, "217366e": 52, "87": [52, 77, 88], "663577e": 52, "282043e": 52, "123508e": 52, "663576e": 52, "020937e": 52, "689135e": 52, "431951e": 52, "709310e": 52, "663575e": 52, "052335e": 52, "077789e": 52, "500538e": 52, "823407e": 52, "663574e": 52, "063176e": 52, "095821e": 52, "663573e": 52, "576367e": 52, "949549e": 52, "94": 52, "224681e": 52, "364492e": 52, "663572e": 52, "673221e": 52, "110670e": 52, "96": 52, "635561e": 52, "048017e": 52, "97": 52, "663571e": 52, "527236e": 52, "867807e": 52, "98": [52, 77], "788548e": 52, "638946e": 52, "663570e": 52, "727141e": 52, "536791e": 52, "127278e": 52, "202445e": 52, "101": 52, "663569e": 52, "637504e": 52, "387670e": 52, "102": 52, "922750e": 52, "862195e": 52, "663568e": 52, "076454e": 52, "117891e": 52, "104": 52, "911509e": 52, "843492e": 52, "105": 52, "663567e": 52, "403398e": 52, "998215e": 52, "106": [52, 88], "439790e": 52, "058755e": 52, "107": [52, 88], "634542e": 52, "382735e": 52, "663566e": 52, "452203e": 52, "079401e": 52, "109": 52, "852991e": 52, "746137e": 52, "663565e": 52, "165490e": 52, "602434e": 52, "111": 52, "450250e": 52, "076149e": 52, "112": 52, "663564e": 52, "685294e": 52, "467159e": 52, "113": [52, 88], "821800e": 52, "694245e": 52, "114": [52, 88], "237390e": 52, "722040e": 52, "115": 52, "663563e": 52, "992842e": 52, "315219e": 52, "116": [52, 88], "166739e": 52, "604506e": 52, "117": 52, "086064e": 52, "470297e": 52, "118": [52, 88], "663562e": 52, "435945e": 52, "052346e": 52, "292497e": 52, "813711e": 52, "663561e": 52, "366209e": 52, "936334e": 52, "138746e": 52, "557935e": 52, "009637e": 52, "343153e": 52, "123": [52, 58], "663560e": 52, "386258e": 52, "969683e": 52, "124": [52, 88], "927442e": 52, "206415e": 52, "081681e": 52, "463000e": 52, "126": [52, 88], "663559e": 52, "759123e": 52, "926406e": 52, "127": [52, 88], "890771e": 52, "145409e": 52, "128": [52, 69], "971315e": 52, "279398e": 52, "129": 52, "663558e": 52, "101983e": 52, "496771e": 52, "035645e": 52, "386414e": 52, "131": [52, 59], "984492e": 52, "301317e": 52, "132": [52, 59, 88], "663557e": 52, "849064e": 52, "076024e": 52, "133": [52, 59], "795703e": 52, "987255e": 52, "134": [52, 88], "624087e": 52, "701762e": 52, "135": 52, "689557e": 52, "810673e": 52, "663556e": 52, "644308e": 52, "735399e": 52, "137": [52, 88], "618007e": 52, "691644e": 52, "138": [52, 59, 88], "483013e": 52, "467075e": 52, "139": [52, 88], "663555e": 52, "708771e": 52, "842636e": 52, "013847e": 52, "350146e": 52, "141": [52, 88], "721217e": 52, "863339e": 52, "142": [52, 88], "663554e": 52, "027911e": 52, "373540e": 52, "143": [52, 88], "764565e": 52, "935449e": 52, "144": [52, 88], "677151e": 52, "790030e": 52, "145": [52, 58, 88], "351982e": 52, "249094e": 52, "146": [52, 88], "663553e": 52, "423360e": 52, "367836e": 52, "147": 52, "541112e": 52, "563722e": 52, "148": [52, 88], "491601e": 52, "481358e": 52, "466407e": 52, "439446e": 52, "663552e": 52, "801524e": 52, "996929e": 52, "714107e": 52, "851507e": 52, "152": 52, "491257e": 52, "480784e": 52, "153": 52, "513799e": 52, "518282e": 52, "154": 52, "663551e": 52, "354539e": 52, "253345e": 52, "155": [52, 88], "233818e": 52, "052519e": 52, "576219e": 52, "622121e": 52, "157": [52, 88], "452791e": 52, "416792e": 52, "663550e": 52, "262867e": 52, "100843e": 52, "316379e": 52, "189863e": 52, "295447e": 52, "155041e": 52, "161": 52, "283286e": 52, "134810e": 52, "162": 52, "569222e": 52, "610479e": 52, "163": 52, "663549e": 52, "172942e": 52, "951247e": 52, "164": 52, "399809e": 52, "328651e": 52, "165": 52, "229432e": 52, "045221e": 52, "166": 52, "326191e": 52, "206184e": 52, "167": 52, "663548e": 52, "209694e": 52, "012384e": 52, "168": 52, "372136e": 52, "282614e": 52, "169": [52, 88], "338395e": 52, "226484e": 52, "416497e": 52, "356410e": 52, "171": 52, "298576e": 52, "160242e": 52, "172": [52, 88], "663547e": 52, "190590e": 52, "980603e": 52, "167083e": 52, "941497e": 52, "174": [52, 88], "069425e": 52, "779038e": 52, "217780e": 52, "025834e": 52, "176": [52, 88], "140754e": 52, "897697e": 52, "177": 52, "663546e": 52, "160707e": 52, "930890e": 52, "178": [52, 88], "101798e": 52, "832892e": 52, "179": 52, "114904e": 52, "854694e": 52, "064022e": 52, "770049e": 52, "258231e": 52, "540149e": 52, "213120e": 52, "018080e": 52, "183": 52, "663545e": 52, "164296e": 52, "936859e": 52, "188762e": 52, "977559e": 52, "185": 52, "394153e": 52, "562760e": 52, "186": 52, "028656e": 52, "711216e": 52, "115348e": 52, "855431e": 52, "188": 52, "663544e": 52, "768310e": 52, "625002e": 52, "189": [52, 88], "021806e": 52, "699820e": 52, "086303e": 52, "807113e": 52, "191": [52, 88], "879008e": 52, "643416e": 52, "192": 52, "050210e": 52, "747071e": 52, "193": 52, "002463e": 52, "667641e": 52, "194": 52, "663543e": 52, "062747e": 52, "767925e": 52, "195": [52, 88], "348538e": 52, "555170e": 52, "992512e": 52, "329589e": 52, "197": 52, "558020e": 52, "590018e": 52, "198": [52, 88], "993772e": 52, "662507e": 52, "588499e": 52, "428734e": 52, "737134e": 52, "453459e": 52, "692289e": 52, "617643e": 52, "614437e": 52, "464513e": 52, "612639e": 52, "102965e": 52, "003963e": 52, "611291e": 52, "371098e": 52, "348827e": 52, "610468e": 52, "110558e": 52, "230389e": 52, "610198e": 52, "672927e": 52, "693743e": 52, "610130e": 52, "232417e": 52, "814742e": 52, "610090e": 52, "513455e": 52, "046887e": 52, "610002e": 52, "443507e": 52, "764057e": 52, "609996e": 52, "657071e": 52, "887869e": 52, "609948e": 52, "998735e": 52, "827807e": 52, "609695e": 52, "569217e": 52, "525962e": 52, "609533e": 52, "010779e": 52, "626881e": 52, "609520e": 52, "043897e": 52, "294681e": 52, "609465e": 52, "415246e": 52, "496718e": 52, "609386e": 52, "898605e": 52, "883745e": 52, "609324e": 52, "837052e": 52, "175060e": 52, "609298e": 52, "617826e": 52, "603564e": 52, "609184e": 52, "080015e": 52, "139305e": 52, "609083e": 52, "273206e": 52, "009411e": 52, "608988e": 52, "940805e": 52, "558681e": 52, "608853e": 52, "380030e": 52, "348223e": 52, "608844e": 52, "185045e": 52, "341930e": 52, "608824e": 52, "279113e": 52, "057868e": 52, "608819e": 52, "156821e": 52, "078753e": 52, "608783e": 52, "205746e": 52, "548567e": 52, "608764e": 52, "189894e": 52, "914259e": 52, "608755e": 52, "474607e": 52, "807303e": 52, "608737e": 52, "144227e": 52, "840760e": 52, "608676e": 52, "775335e": 52, "073291e": 52, "608638e": 52, "348020e": 52, "777116e": 52, "608627e": 52, "863136e": 52, "104023e": 52, "608529e": 52, "110230e": 52, "828482e": 52, "608487e": 52, "641106e": 52, "248184e": 52, "608409e": 52, "823638e": 52, "758383e": 52, "608373e": 52, "256641e": 52, "629519e": 52, "608338e": 52, "132444e": 52, "429691e": 52, "608310e": 52, "786649e": 52, "873484e": 52, "608260e": 52, "103848e": 52, "991794e": 52, "608206e": 52, "321265e": 52, "341279e": 52, "608201e": 52, "054747e": 52, "912648e": 52, "608195e": 52, "198335e": 52, "751739e": 52, "608193e": 52, "458736e": 52, "360328e": 52, "608159e": 52, "153759e": 52, "463587e": 52, "608115e": 52, "738314e": 52, "403523e": 52, "608108e": 52, "960032e": 52, "368161e": 52, "608081e": 52, "675447e": 52, "694254e": 52, "608072e": 52, "976340e": 52, "610383e": 52, "608046e": 52, "604130e": 52, "579515e": 52, "608020e": 52, "617036e": 52, "600226e": 52, "608014e": 52, "957795e": 52, "364188e": 52, "608011e": 52, "292411e": 52, "078211e": 52, "607998e": 52, "431795e": 52, "355831e": 52, "607964e": 52, "127054e": 52, "420225e": 52, "607947e": 52, "021878e": 52, "643126e": 52, "560621e": 52, "725288e": 52, "607900e": 52, "929781e": 52, "710793e": 52, "607890e": 52, "740229e": 52, "229659e": 52, "607858e": 52, "039550e": 52, "279306e": 52, "607836e": 52, "319545e": 52, "121612e": 52, "607826e": 52, "378947e": 52, "025624e": 52, "607808e": 52, "145102e": 52, "841105e": 52, "607776e": 52, "941743e": 52, "121889e": 52, "607743e": 52, "087422e": 52, "356037e": 52, "607741e": 52, "310249e": 52, "106541e": 52, "607738e": 52, "682752e": 52, "705425e": 52, "607691e": 52, "913936e": 52, "684709e": 52, "607671e": 52, "288855e": 52, "072055e": 52, "607654e": 52, "002448e": 52, "611590e": 52, "607641e": 52, "209492e": 52, "319792e": 52, "607632e": 52, "588467e": 52, "984199e": 52, "607619e": 52, "050388e": 52, "294196e": 52, "607618e": 52, "417493e": 52, "513973e": 52, "607598e": 52, "210509e": 52, "946012e": 52, "607591e": 52, "392914e": 52, "062009e": 52, "607579e": 52, "759587e": 52, "247415e": 52, "607574e": 52, "760280e": 52, "437356e": 52, "607556e": 52, "146469e": 52, "843012e": 52, "607550e": 52, "689456e": 52, "930984e": 52, "065631e": 52, "535705e": 52, "607539e": 52, "555681e": 52, "053852e": 52, "607528e": 52, "177470e": 52, "153798e": 52, "607527e": 52, "306068e": 52, "529648e": 52, "607514e": 52, "816045e": 52, "256440e": 52, "607511e": 52, "301970e": 52, "700442e": 52, "607504e": 52, "281072e": 52, "881840e": 52, "607503e": 52, "821886e": 52, "257370e": 52, "607480e": 52, "403013e": 52, "255315e": 52, "169298e": 52, "879624e": 52, "607473e": 52, "235982e": 52, "809227e": 52, "607470e": 52, "717105e": 52, "760195e": 52, "148402e": 52, "883374e": 52, "reg1": [52, 76], "reg2": [52, 76], "gel2": 52, "gcg": [52, 69, 87], "693084e": 52, "610202e": 52, "147342e": 52, "288260e": 52, "610179e": 52, "406304e": 52, "264402e": 52, "610174e": 52, "352083e": 52, "397436e": 52, "715023e": 52, "371659e": 52, "154387e": 52, "474015e": 52, "451": [52, 53, 86], "plot_optim_otreg": [52, 53], "632": 53, "auto_exampl": 53, "adrien": [54, 65, 86], "corenflo": [54, 65, 86], "aalto": 54, "fi": [54, 58], "n_seed": [54, 55], "n_projections_arr": [54, 55], "res_mean": [54, 55], "res_std": [54, 55], "xscale": [54, 55], "confid": [54, 55], "693": [54, 56], "plot_vari": [54, 56], "mgrid": 55, "30j": 55, "plot_surfac": 55, "set_zlim": 55, "tick": 55, "ssw_1": 55, "581": [55, 56], "plot_variance_ssw": [55, 56], "274": [56, 88], "auto_examples_sl": 56, "uot": [57, 79, 86, 87], "719": [57, 62], "plot_uot_1d": [57, 62], "n_weight": 58, "weight_list": 58, "kv": 58, "915": 58, "ktu": 58, "922": 58, "595": 58, "974": 58, "615": 58, "455": 58, "361": [58, 88], "plot_uot_barycenter_1d": [58, 62], "373": [58, 62, 88], "n_nois": [59, 61], "cov": 59, "w0": 59, "partial_wasserstein": [59, 61, 87], "entropic_partial_wasserstein": [59, 87], "partial_w_dist": 59, "47910182636916243": 59, "5034205945081646": 59, "res0": 59, "partial_gromov_wasserstein": [59, 87], "entropic_partial_gromov_wasserstein": [59, 87], "partial_gw_dist": [59, 77], "611280e": 59, "345385e": 59, "584346e": 59, "659015e": 59, "38071035222889": 59, "59015303098326": 59, "plot_partial_wass_and_gromov": [59, 62], "overlap": [59, 87], "sinc": [59, 75, 87, 88], "explicitli": [59, 71, 78, 88], "478237e": 59, "894947e": 59, "251769e": 59, "596705e": 59, "808371e": 59, "136110e": 59, "859072e": 59, "136043e": 59, "11743971783944865": 59, "9136043100219415": 59, "wu": [60, 79, 83, 86], "f\u00e9vott": [60, 79, 83, 86], "through": [60, 79, 83, 86, 87], "regress": [60, 64, 79, 83, 86], "haoran": 60, "final_gamma": 60, "t_list": [60, 79], "g_list": [60, 79], "regularization_path": 60, "semi_relax": [60, 79], "t_list2": 60, "g_list2": 60, "selected_gamma": 60, "compute_transport_plan": 60, "ell_2": [60, 61, 83], "g_list_v": 60, "l_2": 60, "219": [60, 62], "plot_regpath": [60, 62], "_f": [61, 87], "div": [61, 83], "ell_1": 61, "reg_m_kl": 61, "reg_m_l2": 61, "entropic_kl_uot": 61, "kl_uot": 61, "mm_unbalanc": 61, "l2_uot": 61, "partial_ot": 61, "773": [61, 62], "plot_unbalanced_ot": [61, 62], "885": 62, "auto_examples_unbalanc": 62, "interest": [63, 87], "foster": [63, 87], "open": [63, 64, 65, 86, 87, 88], "welcom": [63, 86], "environ": 63, "contributor": [63, 86, 88], "maintain": [63, 66, 86, 88], "particip": 63, "harass": 63, "experi": 63, "everyon": 63, "regardless": [63, 88], "ag": 63, "bodi": 63, "disabl": 63, "ethnic": 63, "gender": 63, "ident": [63, 66, 69], "level": [63, 67, 69, 70, 84, 87], "nation": 63, "person": [63, 65], "appear": [63, 67], "race": 63, "religion": 63, "sexual": 63, "orient": 63, "behavior": [63, 64, 88], "includ": [63, 64, 68, 71, 84, 87, 88], "inclus": [63, 64], "languag": [63, 65, 87], "Being": 63, "viewpoint": 63, "gracefulli": 63, "critic": 63, "focus": 63, "best": [63, 64, 74, 87, 88], "empathi": 63, "toward": [63, 88], "member": [63, 86], "unaccept": 63, "imageri": 63, "unwelcom": 63, "attent": 63, "troll": 63, "insult": 63, "derogatori": 63, "comment": 63, "polit": 63, "attack": 63, "public": [63, 64, 88], "privat": 63, "publish": 63, "physic": 63, "electron": 63, "address": [63, 64, 87], "permiss": 63, "could": [63, 88], "inappropri": 63, "profession": 63, "clarifi": 63, "appropri": [63, 64, 84], "fair": [63, 75], "correct": [63, 64, 75, 86, 88], "action": [63, 88], "edit": [63, 64], "reject": 63, "commit": [63, 64, 66, 88], "wiki": 63, "ban": 63, "temporarili": 63, "perman": 63, "deem": 63, "threaten": 63, "offens": 63, "harm": 63, "offici": [63, 88], "mail": [63, 64, 86], "post": 63, "social": 63, "media": 63, "act": 63, "appoint": 63, "offlin": 63, "event": 63, "abus": 63, "report": [63, 64, 86, 88], "contact": 63, "team": [63, 64, 88], "complaint": 63, "review": [63, 64], "investig": [63, 87], "circumst": 63, "oblig": 63, "confidenti": 63, "regard": 63, "incid": 63, "polici": 63, "separ": [63, 87, 88], "who": [63, 88], "faith": 63, "face": [63, 77], "temporari": 63, "repercuss": 63, "determin": [63, 67], "leadership": 63, "coven": 63, "thank": [64, 65, 79, 88], "workflow": 64, "fork": 64, "repositori": [64, 88], "develop": [64, 86, 87, 88], "branch": [64, 88], "click": 64, "button": 64, "page": [64, 86, 88], "under": [64, 67, 68, 69, 86], "your": [64, 86, 87], "guid": [64, 86, 88], "repo": [64, 88], "disk": 64, "git": 64, "yourlogin": 64, "cd": 64, "hold": 64, "checkout": 64, "my": 64, "never": [64, 88], "master": [64, 84, 86, 88], "modified_fil": 64, "push": [64, 87, 88], "instruct": 64, "email": 64, "committ": 64, "abov": [64, 74, 78, 79, 87, 88], "seem": 64, "magic": 64, "look": [64, 79], "web": 64, "ask": [64, 86, 88], "friend": 64, "anoth": [64, 69, 75, 87, 88], "compli": 64, "rule": [64, 76], "submit": 64, "pep8": [64, 88], "guidelin": [64, 86], "mention": 64, "descript": 64, "docstr": [64, 84, 88], "usag": 64, "doctest": [64, 88], "prefix": 64, "mrg": 64, "readi": 64, "merg": [64, 88], "core": [64, 88], "approv": 64, "elig": 64, "incomplet": [64, 88], "wip": 64, "progress": 64, "matur": 64, "duplic": 64, "broad": 64, "api": [64, 66, 86, 88], "seek": [64, 87], "collabor": 64, "often": [64, 87], "benefit": [64, 65, 86], "task": 64, "pr": [64, 66, 88], "folder": [64, 86, 88], "coverag": [64, 88], "enhanc": 64, "verifi": 64, "manner": 64, "modif": 64, "grant": 64, "desir": [64, 67, 74, 75, 84], "fail": [64, 75, 87, 88], "At": [64, 87], "paragraph": 64, "narr": 64, "literatur": [64, 67, 87], "common": [64, 87], "program": [64, 67, 75, 76, 86, 87, 88], "tool": [64, 87], "pyflak": 64, "autopep8": 64, "easi": [64, 86, 87], "redund": [64, 88], "bonu": 64, "benchmark": [64, 66, 88], "profil": 64, "track": [64, 74, 88], "feel": 64, "wish": 64, "snippet": 64, "highlight": [64, 88], "oper": [64, 69, 71, 73, 87], "well": [64, 66, 75, 84, 87], "platform": [64, 88], "__version__": 64, "about": [64, 67, 87, 88], "gist": 64, "except": 64, "traceback": 64, "great": 64, "pick": [64, 82], "tracker": 64, "resolv": 64, "knowledg": [64, 87], "assist": 64, "area": [64, 87], "greatli": [64, 87, 88], "appreci": 64, "experienc": 64, "concentr": 64, "glad": 64, "restructuredtext": 64, "etc": [64, 68], "directori": 64, "editor": 64, "noplot": 64, "place": [64, 88], "viewabl": 64, "browser": 64, "pillow": 64, "write": [64, 66], "keep": [64, 87, 88], "compromis": 64, "reader": [64, 87], "hand": 64, "wave": 64, "explan": 64, "inpir": 64, "scikit": [64, 84, 87, 88], "wrapper": [65, 87], "alexandr": [65, 86], "ci": [65, 88], "michael": 65, "l\u00e9o": [65, 86], "gautheron": [65, 86], "nathali": [65, 86], "gayraud": [65, 86], "antoin": [65, 81, 86], "debug": [65, 88], "alain": [65, 86], "jcpot": [65, 86, 88], "kerdoncuff": [65, 74, 86, 87], "minhui": 65, "huang": [65, 71, 86, 87], "robust": [65, 71, 86, 87, 88], "nathan": [65, 88], "cassereau": [65, 88], "camil": 65, "le": [65, 84], "coz": 65, "theo": 65, "gnassoun": 65, "wassertstein": 65, "lot": [65, 88], "would": [65, 66, 88], "variou": [65, 84, 88], "mathieu": [65, 81, 88], "financ": [65, 86], "manpow": [65, 86], "partner": [65, 86], "goal": [66, 82], "agnost": 66, "whether": [66, 74, 75, 84], "cupi": [66, 86, 87, 88], "nonetheless": 66, "achiev": 66, "imit": 66, "As": [66, 75, 87, 88], "convent": [66, 69], "list_to_arrai": [66, 84], "get_backend": 66, "know": 66, "argument": [66, 69, 76, 84, 88], "op": 66, "numpy_op": 66, "np_config": 66, "enable_numpy_behavior": 66, "intel": 66, "xeon": 66, "6248": 66, "50ghz": 66, "tesla": 66, "v100": 66, "sxm2": 66, "32gb": 66, "date": [66, 88], "8th": 66, "316": [66, 88], "pull": [66, 88], "bitsize32": 66, "bit": 66, "devicecpugpu": 66, "sizenumpypytorchtensorflowcupyjaxpytorchtensorflow": 66, "00080": 66, "00220": 66, "01510": 66, "00950": 66, "01930": 66, "00510": 66, "0293": 66, "00050": 66, "00130": 66, "00970": 66, "00570": 66, "01150": 66, "00290": 66, "0173": 66, "5000": 66, "00090": 66, "00160": 66, "01100": 66, "00580": 66, "0166": 66, "00210": 66, "01450": 66, "00560": 66, "01180": 66, "0168": 66, "20000": [66, 82], "00690": 66, "00430": 66, "02780": 66, "00590": 66, "00300": 66, "0165": 66, "50000": [66, 79], "07070": 66, "03140": 66, "13950": 66, "00740": 66, "01250": 66, "00350": 66, "0198": 66, "nbsp": 66, "bitsize64": 66, "00200": 66, "01540": 66, "00930": 66, "01910": 66, "0328": 66, "00940": 66, "01140": 66, "0169": 66, "00170": 66, "01200": 66, "01160": 66, "00340": 66, "00270": 66, "01770": 66, "0167": 66, "01460": 66, "00750": 66, "04360": 66, "14670": 66, "05680": 66, "24680": 66, "00770": 66, "00450": 66, "0204": 66, "proper": [66, 88], "typeerror": 66, "get_backend_list": 66, "to_numpi": 66, "abstract": 66, "jaxbackend": 66, "numpybackend": 66, "torchbackend": [66, 88], "cupybackend": 66, "tensorflowbackend": 66, "__name__": 66, "attribut": [66, 69, 74, 88], "__type__": 66, "rtol": 66, "equal_nan": 66, "evalu": [66, 67, 68], "evenli": 66, "argsort": 66, "array_equ": 66, "assert_same_dtype_devic": 66, "arctang": 66, "arctan2": 66, "bitsiz": 66, "a_min": 66, "a_max": 66, "sequenc": 66, "exist": [66, 67, 87, 88], "col": 66, "cumsum": 66, "device_typ": 66, "dtype_devic": 66, "einsum": 66, "subscript": 66, "operand": 66, "einstein": 66, "summat": 66, "eliminate_zero": 66, "smaller": [66, 88], "csr_matrix": 66, "exponenti": [66, 67], "flip": 66, "from_numpi": 66, "fill_valu": 66, "inv": 66, "is_floating_point": 66, "isfinit": 66, "infin": 66, "Not": 66, "isinf": 66, "isnan": 66, "nan": 66, "isspars": 66, "kl_div": 66, "stat": 66, "specifi": [66, 69, 81, 84, 88], "logsumexp": [66, 71, 87], "amax": 66, "arithmet": 66, "amin": 66, "frobeniu": 66, "outer": 66, "expon": 66, "prod": 66, "qr": 66, "repeat": 66, "searchsort": 66, "side": [66, 79], "insert": 66, "set_gradi": [66, 88], "val": 66, "equat": [66, 67, 74, 82, 87], "scalar": [66, 67, 68], "sort2": 66, "ngeativ": 66, "root": [66, 86, 87], "definit": [66, 87], "squeez": 66, "deviat": [66, 70, 74], "take_along_axi": 66, "arr": 66, "gather": 66, "tile": 66, "rep": 66, "tocsr": 66, "compress": 66, "todens": 66, "trace": 66, "dim0": 66, "dim1": 66, "swap": 66, "chosen": [66, 84, 87], "zero_pad": 66, "pad_width": 66, "pad": 66, "cp": 66, "s_": 67, "empirical_sinkhorn_diverg": [67, 87, 88], "barycenter_sinkhorn": 67, "barycenter_stabil": 67, "tau": [67, 71, 83], "10000000000": 67, "mast": 67, "strength": 67, "height": 67, "stabthr": 67, "goe": [67, 86, 87], "butscher": [67, 86, 87], "nguyen": [67, 86, 87], "guiba": [67, 86, 87], "effici": [67, 75, 86, 87, 88], "geometr": [67, 86, 87], "islazi": 67, "batchsiz": 67, "99977301e": 67, "26989344e": 67, "empirical_sinkhorn2": [67, 87], "53978687e": 67, "w_a": 67, "gamma_a": 67, "m_a": 67, "w_b": 67, "gamma_b": 67, "m_b": 67, "_a": [67, 79], "_b": 67, "499887176049052": 67, "frechet": [67, 75], "w_i": [67, 75], "measure_weight": [67, 75], "k_i": [67, 75], "There": [67, 75, 87], "arnaud": [67, 75], "doucet": [67, 75, 86, 87], "\u00e1lvarez": [67, 75, 86], "esteban": [67, 75, 86], "pedro": [67, 75, 86], "744": [67, 75, 86], "762": [67, 75, 86], "geometricbar": 67, "alldistribt": 67, "geometricmean": 67, "jcpot_barycent": 67, "lambda_k": 67, "gamma_k": 67, "_n": 67, "th": [67, 68, 79, 81], "relat": [67, 74, 86, 87, 88], "n_k": 67, "unknown": 67, "nsk": 67, "control": [67, 69], "devi": [67, 69], "projc": 67, "constrint": 67, "projr": 67, "maxfun": 67, "pgtol": 67, "written": [67, 75], "u_i": 67, "ldot": 67, "v_j": 67, "regularis": 67, "bfg": [67, 81, 83, 87], "lbfg": 67, "final": [67, 75, 87, 88], "accuraci": 67, "gain": [67, 88], "isn": 67, "epsilon0": 67, "print_period": 67, "decreas": [67, 69], "tabl": 67, "m0": 67, "h0": 67, "reg0": 67, "dh": 67, "m_0": 67, "_0": [67, 84], "n_atom": 67, "dim_prior": 67, "trust": [67, 71], "nakhostin": [67, 86], "corpetti": [67, 86], "planetari": [67, 86], "workshop": [67, 69, 86, 87], "hyperspectr": [67, 86], "signal": [67, 86, 87], "remot": [67, 86], "whisper": [67, 86], "wx_samp": 68, "wx_feat": 68, "wy_feat": 68, "m_samp": 68, "m_feat": 68, "nits_bcd": 68, "tol_bcd": 68, "eval_bcd": 68, "nits_ot": 68, "tol_sinkhorn": 68, "method_sinkhorn": 68, "early_stopping_tol": 68, "xf": 68, "yf": 68, "alpha_": 68, "alpha_f": 68, "varepsilon_": 68, "varepsilon_f": 68, "n_sample_x": 68, "n_feature_x": 68, "n_sample_i": 68, "n_feature_i": 68, "kei": [68, 74], "duals_sampl": 68, "duals_featur": 68, "whose": [68, 74, 75, 79], "bcd": [68, 69, 74], "scheme": 68, "previou": [68, 79], "multipli": [68, 84], "earli": [68, 88], "pi_samp": 68, "pi_feat": 68, "pair": [68, 84], "ny_sampstem": 68, "alpha_1": 68, "alpha_2": 68, "varepsilon_1": 68, "varepsilon_2": 68, "distribution_estimation_uniform": 69, "emd_laplac": 69, "knn": 69, "sim_param": 69, "n_": 69, "s_i": 69, "s_j": 69, "n_t": 69, "t_i": 69, "t_j": 69, "neighbor": 69, "bandwidth": 69, "otml": [69, 86, 87], "joint_ot_mapping_kernel": [69, 87], "kerneltyp": 69, "verbose2": 69, "nonlinear": [69, 87], "2_f": 69, "2_": 69, "jointli": 69, "constant": [69, 74, 75], "supplementari": 69, "materi": 69, "joint_ot_mapping_linear": [69, 87], "neutral": 69, "sinkhorn_l1l2_gl": [69, 87], "keyword": [69, 84], "store": 69, "transform_label": 69, "inverse_transform_label": 69, "y_t": 69, "unlabel": [69, 77, 86, 87], "transp_x": 69, "transp_xt": 69, "propag": 69, "transp_i": 69, "soft": 69, "nb_class": 69, "similarity_param": 69, "max_inner_it": 69, "inner_tol": 69, "distribution_estim": 69, "out_of_sample_map": 69, "disp": 69, "occur": [69, 87], "kind": [69, 75, 87], "emploi": 69, "limit_max": 69, "10e": 69, "n_class": 69, "849": 69, "858": 69, "nk_source_sampl": 69, "sigma_": [69, 73], "sigma_t": [69, 73], "remark": [69, 73, 87], "daigon": 69, "covari": [69, 70, 73, 87], "knott": [69, 73, 86, 87], "smith": [69, 73, 86, 87], "theori": [69, 73, 86, 87], "1984": [69, 73, 86, 87], "mapping_": 69, "lpl1": 69, "infti": 69, "unbalancedsinkhorntransport": 69, "classif": 70, "reduct": [71, 86, 88], "fisher": [71, 77, 87], "ridg": 71, "proj": [71, 80], "projection_robust_wasserstein": 71, "u0": 71, "max_": [71, 79, 81, 82], "pi_": 71, "stiefel": [71, 87], "stepsiz": 71, "riemannian": [71, 86, 87], "ma": [71, 86, 87], "lai": [71, 86, 87], "split_class": 71, "split": 71, "sinkhorn_method": 71, "limits_i": 71, "limits_": 71, "neq": [71, 87], "steepest": 71, "trustregion": 71, "region": 71, "wasserstaiun": 71, "1608": [71, 86, 87], "08063": [71, 86, 87], "bures_wasserstein_dist": 73, "ct": 73, "bure": [73, 88], "lvert": 73, "_t": 73, "rvert": 73, "tr": 73, "bures_wasserstein_map": [73, 87], "empirical_bures_wasserstein_dist": 73, "gw_distance_estim": 74, "nb_samples_p": 74, "nb_samples_q": 74, "unbias": 74, "csr": 74, "replac": [74, 87, 88], "emonet": [74, 86, 87], "sebban": 74, "marc": [74, 86, 87], "mlj": 74, "entropic_gromov_barycent": [74, 87], "necessarili": 74, "entropic_gromov_wasserstein2": 74, "fixed_structur": 74, "fixed_featur": 74, "init_x": 74, "eq": [74, 81], "cdict_init": 74, "ydict_init": 74, "fgw_": 74, "Such": 74, "_d": 74, "distibut": 74, "cdict": 74, "ydict": 74, "randomli": 74, "nonneg": 74, "strategi": 74, "consecut": 74, "cdict_best_st": 74, "compos": 74, "ydict_best_st": 74, "w_d": 74, "emb": 74, "depict": 74, "span": [74, 75], "current_loss": 74, "gw_2": 74, "gwggrad": 74, "constc": 74, "hc1": 74, "hc2": 74, "proposit": [74, 81, 82], "h1": 74, "gwloss": 74, "init_matrix": 74, "otim": 74, "read": [74, 86], "f_1": 74, "h_1": 74, "2b": 74, "init_matrix_semirelax": 74, "anymor": 74, "fc2t": 74, "threshold_plan": 74, "frank": 74, "wolf": 74, "_iter": 74, "pn": 74, "complex": [74, 87], "delet": [74, 79], "violat": [74, 75, 87], "nb_samples_grad": 74, "howev": [74, 87], "yet": [74, 87, 88], "semirelaxed_fused_gromov_wasserstein2": 74, "semirelaxed_gromov_wasserstein2": 74, "solve_gromov_linesearch": [74, 76], "deltag": 74, "cost_g": 74, "alpha_min": [74, 76], "alpha_max": [74, 76], "fw": 74, "fc": [74, 76], "useless": [74, 88], "solve_semirelaxed_gromov_linesearch": [74, 76], "ones_p": 74, "tensor_product": 74, "ten": 74, "update_feature_matrix": 74, "update_kl_loss": 74, "update_square_loss": 74, "update_structure_matrix": 74, "alpha0": [75, 76], "beta0": 75, "below": [75, 86, 88], "basic": 75, "alpha_0": 75, "beta_0": 75, "check_number_thread": 75, "request": [75, 80, 86], "valid": 75, "estimate_dual_null_weight": 75, "rather": 75, "coars": 75, "emd_c": 75, "discard": 75, "amount": [75, 77, 87, 88], "max_j": 75, "max_i": 75, "beta_j": [75, 81], "y_init": 75, "nu_i": 75, "b_l": 75, "y_l": 75, "a_": 75, "d_i": 75, "p_i": 75, "p_ix_": 75, "rightarrow": 75, "don": 75, "ill": 75, "anywai": 75, "cvxopt": [75, 87, 88], "glpk": 75, "mosek": 75, "agueh": [75, 86, 87], "904": [75, 86, 87], "924": [75, 86, 87], "line_search": 76, "line_search_armijo": [76, 88], "reg_1": 76, "reg_2": 76, "generic_conditional_gradi": 76, "lp_solver": 76, "lp_semi_relaxed_ot": 76, "gcg_linesearch": 76, "xk": 76, "pk": 76, "gfk": 76, "old_fval": 76, "x_k": 76, "p_k": 76, "fa": 76, "const": 76, "semirelaxed_cg": 76, "solve_1d_linesearch_quad": 76, "bx": 76, "entropic_partial_gromov_wasserstein2": 77, "gwgrad_parti": 77, "n_p": 77, "n_u": 77, "nb_dummi": 77, "gwloss_parti": 77, "thre": 77, "costfr": 77, "dummi": [77, 88], "instabl": 77, "popul": 77, "partial_gromov_wasserstein2": 77, "especi": [77, 87], "smoother": 77, "repartit": 77, "reservoir": [77, 87], "caffarelli": [77, 86, 87], "mccann": [77, 86, 87], "boundari": [77, 86, 87], "amper": [77, 86, 87], "obstacl": [77, 86, 87], "annal": [77, 86, 87], "673": [77, 86, 87], "partial_wasserstein_lagrang": 77, "partial_wasserstein2": [77, 87], "rao": 77, "tune": 77, "shown": [78, 87], "na": 78, "thr": 78, "noth": 78, "complement_schur": 79, "m_current": 79, "id_pop": 79, "schur": 79, "complement": 79, "aris": 79, "bmatrix": 79, "m_k": 79, "h_a": 79, "th_a": 79, "backslash": 79, "r_": 79, "depriv": 79, "compute_next_remov": 79, "current_gamma": 79, "largest": 79, "vanish": [79, 87], "phi_j": 79, "delta_j": 79, "intercept": 79, "slope": 79, "next_removal_gamma": 79, "next_removal_index": 79, "gamma_list": 79, "pi_list": 79, "piecewis": 79, "flatten": 79, "19722222": 79, "05555556": 79, "24722222": 79, "construct_augmented_h": 79, "active_index": 79, "hc": 79, "hrhr": 79, "augment": 79, "_h": 79, "h_": 79, "h_r": 79, "h_c": 79, "h_augment": 79, "fully_relaxed_path": 79, "itmax": 79, "reformul": 79, "min_t": 79, "99958333e": 79, "00000000e": 79, "88888889e": 79, "99938889e": 79, "ot_next_gamma": 79, "hth": 79, "hty": 79, "inact": 79, "next_gamma": 79, "next_active_index": 79, "recast_ot_as_lasso": 79, "recast": 79, "1_m": 79, "1_n": 79, "particularli": [79, 87], "uot2": 79, "recast_semi_relaxed_as_lasso": 79, "hr": 79, "auxiliari": 79, "constitut": 79, "semi_relaxed_next_gamma": 79, "phi_u": 79, "delta_u": 79, "hra": 79, "ri": 79, "ra": 79, "ith": 79, "lagrang": [79, 84], "semi_relaxed_path": 79, "99980556e": 79, "94444444e": 79, "get_random_project": 80, "unit": [80, 87], "ue": 80, "proc": 81, "1710": 81, "06276": 81, "mblondel": 81, "liu": [81, 86], "puigcerv": [81, 86], "eleventh": [81, 86], "2209": 81, "15466": 81, "dual_obj_grad": 81, "regul": 81, "delta_omega": 81, "grad_alpha": 81, "grad_beta": 81, "get_plan_from_du": 81, "retriev": 81, "get_plan_from_semi_du": 81, "projection_simplex": 81, "substack": [81, 84], "z_i": [81, 84], "z_j": [81, 84], "semi_dual_obj_grad": 81, "max_omega": 81, "decent": 81, "nbb": 81, "nonzero": 81, "sinhorn": 81, "smooth_ot_semi_du": [81, 87], "solve_du": 81, "solve_semi_du": 81, "negentropi": 81, "sup_": 81, "nabla": 81, "intend": 81, "appar": 81, "sparsityconstrain": 81, "squaredl2": 81, "averaged_sgd_entropic_transport": 82, "300000": 82, "contin": 82, "alg": 82, "ave_v": 82, "53942342e": 82, "98640673e": 82, "75945647e": 82, "27664307e": 82, "21556999e": 82, "26350515e": 82, "30491795e": 82, "36017394e": 82, "54070702e": 82, "63581358e": 82, "29581672e": 82, "32812798e": 82, "60578198e": 82, "35916645e": 82, "28023223e": 82, "05336238e": 82, "86808864e": 82, "59774324e": 82, "08702729e": 82, "21359007e": 82, "17218856e": 82, "12931802e": 82, "87962526e": 82, "18342700e": 82, "14237512e": 82, "67487857e": 82, "23016955e": 82, "38291052e": 82, "batch_grad_du": 82, "batch_alpha": 82, "batch_beta": 82, "partial_": 82, "b_": 82, "l_v": 82, "b_v": 82, "l_u": 82, "b_u": 82, "30000": 82, "71759102": 82, "57057384": 82, "85576566": 82, "1208211": 82, "59190466": 82, "197148": 82, "17805133": 82, "49741367": 82, "57478564": 82, "40075528": 82, "75890102": 82, "09730063e": 82, "38169324e": 82, "50365455e": 82, "72731415e": 82, "58432437e": 82, "89881299e": 82, "09558411e": 82, "35469849e": 82, "26489515e": 82, "15536035e": 82, "99778211e": 82, "02601593e": 82, "05390622e": 82, "31085068e": 82, "65191787e": 82, "55812785e": 82, "82299812e": 82, "12099102e": 82, "44989098e": 82, "37719187e": 82, "06266486e": 82, "16230494e": 82, "26215141e": 82, "81514609e": 82, "06713990e": 82, "98139808e": 82, "46829338e": 82, "62371424e": 82, "c_transform_entrop": 82, "coordinate_grad_semi_du": 82, "bewar": 82, "dual_loss": 82, "sag_entropic_transport": 82, "sgd_entropic_regular": 82, "64171798": 82, "27932201": 82, "78132257": 82, "15638935": 82, "54888354": 82, "03663469": 82, "20595781": 82, "51207194": 82, "58033189": 82, "28922676": 82, "26859736": 82, "97276541e": 82, "81248547e": 82, "22136048e": 82, "95442423e": 82, "23494310e": 82, "43286263e": 82, "06927079e": 82, "82389139e": 82, "07542414e": 82, "67897769e": 82, "48904999e": 82, "72030247e": 82, "26271990e": 82, "53375455e": 82, "16535024e": 82, "88812650e": 82, "60423265e": 82, "89585256e": 82, "81267087e": 82, "39458256e": 82, "37557504e": 82, "85189176e": 82, "72335760e": 82, "55491279e": 82, "33096109e": 82, "11683954e": 82, "02962051e": 82, "43097516e": 82, "64057733": 82, "2683513": 82, "75610161": 82, "16024284": 82, "54926534": 82, "0514201": 82, "19958936": 82, "51372571": 82, "58843489": 82, "27993921": 82, "24344807": 82, "97377795e": 82, "86706853e": 82, "15682001e": 82, "82586997e": 82, "19566963e": 82, "42016865e": 82, "02777272e": 82, "68823708e": 82, "00379244e": 82, "56562018e": 82, "40462171e": 82, "63579656e": 82, "28626062e": 82, "60031599e": 82, "13193826e": 82, "67977735e": 82, "61972739e": 82, "94609051e": 82, "77886693e": 82, "36046648e": 82, "44810042e": 82, "89476742e": 82, "73285847e": 82, "51826036e": 82, "30118293e": 82, "12398660e": 82, "95148998e": 82, "26247246e": 82, "barycenter_unbalanced_sinkhorn": 83, "barycenter_unbalanced_stabil": [83, 87], "absorpt": 83, "lbfgsb_unbalanc": 83, "reg_div": 83, "regm_div": 83, "div_m": 83, "quantifi": 83, "mm_unbalanced2": 83, "b_i": 83, "check_param": 84, "miss": 84, "check_random_st": 84, "turn": 84, "singleton": 84, "alreadi": [84, 87, 88], "valueerror": 84, "clean_zero": [84, 88], "compon": [84, 87], "cost_norm": 84, "median": 84, "loglog": 84, "lin_squar": 84, "euclidean_dist": 84, "n_samples_1": 84, "n_samples_2": 84, "ambient": 84, "y1": 84, "label_norm": 84, "smallest": 84, "lst": 84, "parmap": 84, "nproc": 84, "multiprocess": 84, "closest": 84, "orthogon": 84, "projection_sparse_simplex": [84, 88], "anastasio": 84, "kyrillidi": 84, "stephen": 84, "becker": 84, "volkan": 84, "cevher": 84, "christoph": 84, "koch": 84, "1206": 84, "1529": 84, "get_param": 84, "deep": 84, "subobject": 84, "param": 84, "set_param": 84, "nest": 84, "pipelin": 84, "latter": 84, "__": 84, "sparse_plan": 84, "lazy_plan": 84, "a_to_b": 84, "b_to_a": 84, "citat": 84, "plain": 84, "bibtex": [84, 86], "symbol": 84, "keop": 84, "lazytensor": 84, "marginal_a": 84, "marginal_b": 84, "potential_a": 84, "potential_b": 84, "extra": 84, "decor": 84, "mark": 84, "blob": 84, "instanti": [84, 88], "parenthes": 84, "some_funct": 84, "undefinedparamet": 84, "undefin": 84, "ransport": 85, "sever": [86, 87, 88], "websit": 86, "jmlr": [86, 88], "aur\u00e9li": 86, "nemo": 86, "fournier": 86, "antoni": 86, "schutz": 86, "danica": 86, "sutherland": 86, "alexand": 86, "tong": 86, "articl": 86, "flamary2021pot": 86, "mi": 86, "aur": 86, "lie": [86, 87], "year": [86, 87, 88], "volum": 86, "url": 86, "v22": 86, "linux": [86, 88], "macosx": [86, 88], "window": [86, 88], "cython": [86, 87, 88], "latest": 86, "archiv": 86, "abl": 86, "easier": [86, 87], "wd": 86, "wd_reg": 86, "t_reg": [86, 87], "ba": 86, "question": 86, "slack": 86, "channel": 86, "gitter": 86, "bug": [86, 88], "2292": [86, 87], "2300": [86, 87], "36th": [86, 87], "38th": [86, 87], "mjl": [86, 87], "pointer": [87, 88], "concret": 87, "book": 87, "ml": 87, "gaspard": 87, "1781": 87, "move": [87, 88], "overal": 87, "difficult": 87, "kantorovitch": 87, "aspect": [87, 88], "share": 87, "disjoint": 87, "favor": 87, "popular": 87, "jensen": 87, "shannon": 87, "meaning": 87, "becam": 87, "overcom": 87, "spectra": 87, "itself": 87, "criterion": [87, 88], "context": 87, "recent": [87, 88], "rapidli": 87, "grow": 87, "novel": [87, 88], "abil": 87, "extend": 87, "proven": 87, "nearli": 87, "still": [87, 88], "geomloss": 87, "lipschitz": 87, "exactli": 87, "filter": 87, "quit": [87, 88], "known": 87, "affin": 87, "hi": 87, "semin": 87, "strong": 87, "procedur": 87, "slower": 87, "variant": [87, 88], "tu": 87, "kullbach": 87, "similarli": 87, "pure": 87, "speed": [87, 88], "effect": 87, "densifi": 87, "lost": 87, "soon": 87, "_q": 87, "forc": 87, "choic": [87, 88], "major": [87, 88], "long": [87, 88], "w_kw": 87, "mu_k": 87, "b_k": 87, "linprog": 87, "brought": 87, "brenier": 87, "eponym": 87, "theorem": 87, "interfac": 87, "basetransport": [87, 88], "classifi": [87, 88], "xs_map": 87, "inherit": [87, 88], "w_u": 87, "interestingli": 87, "fr\u00e9chet": 87, "w_kw_u": 87, "barycenter_unbalanced_sinkhorn_unbalanc": 87, "surplu": 87, "sent": 87, "resolut": 87, "c1_": 87, "c2_": 87, "realign": 87, "ck": 87, "fusion": 87, "coin": 87, "partli": 87, "linearli": 87, "projector": 87, "min_p": 87, "mu_j": 87, "hard": [87, 88], "seamlessli": [87, 88], "en": 87, "incur": 87, "far": 87, "longer": 87, "hopefulli": [87, 88], "disappear": 87, "becom": 87, "fulli": [87, 88], "importerror": 87, "shortli": 87, "readm": [87, 88], "tri": [87, 88], "quicker": [87, 88], "configur": 87, "nterpol": 87, "cc": 87, "9386": 87, "www": 87, "toronto": 87, "annals2010": 87, "2002": 87, "08276": 87, "463": 88, "459": 88, "redirector": 88, "codecov": 88, "457": 88, "cleanup": 88, "462": 88, "467": 88, "wasserstein2": 88, "466": 88, "decid": 88, "bring": 88, "431": 88, "happi": 88, "began": 88, "unifi": 88, "behind": 88, "facilit": 88, "explor": 88, "just": 88, "old": 88, "sol": 88, "ot_loss": 88, "ot_loss_linear": 88, "sol2": 88, "sol_rkl": 88, "sol_rl2": 88, "sol_ul2": 88, "sol_rkl_ukl": 88, "kickstart": 88, "encourag": 88, "plai": 88, "made": 88, "big": 88, "434": 88, "428": 88, "372": 88, "376": 88, "387": 88, "388": 88, "449": 88, "437": 88, "443": 88, "448": 88, "395": 88, "393": 88, "394": 88, "371": 88, "374": 88, "hit": 88, "stderr": 88, "cerr": 88, "stream": 88, "377": 88, "378": 88, "379": 88, "beyond": 88, "certain": 88, "slightli": 88, "46k": 88, "roughli": 88, "381": 88, "mismatch": 88, "386": 88, "389": 88, "391": 88, "around": 88, "402": 88, "built": 88, "403": 88, "setuptool": 88, "409": 88, "404": 88, "412": 88, "413": 88, "render": 88, "subcal": 88, "421": 88, "422": 88, "break": 88, "try": 88, "424": 88, "425": 88, "444": 88, "446": 88, "notabl": 88, "less": 88, "background": 88, "autodiff": 88, "front": 88, "submodul": 88, "359": 88, "358": 88, "brand": 88, "357": 88, "minigalleri": 88, "334": 88, "336": 88, "341": 88, "319": 88, "362": 88, "364": 88, "363": 88, "valfunct": 88, "338": 88, "abi": 88, "346": 88, "349": 88, "feed": 88, "345": 88, "backpropag": 88, "351": 88, "352": 88, "tag": 88, "332": 88, "global": 88, "namespac": 88, "331": 88, "333": 88, "enabl": 88, "wheel": 88, "older": 88, "realli": 88, "315": 88, "code_of_conduct": 88, "322": 88, "308": 88, "326": 88, "305": 88, "306": 88, "309": 88, "sinkhornl1l2": 88, "311": 88, "313": 88, "317": 88, "3018": 88, "novemb": 88, "nice": 88, "mechan": 88, "moment": 88, "ott": 88, "simplifi": 88, "pyproject": 88, "toml": 88, "pe": 88, "aarch64": 88, "raspberri": 88, "android": 88, "phone": 88, "maco": 88, "arm": 88, "processor": 88, "softwar": 88, "cite": 88, "improv": 88, "particular": 88, "usual": 88, "peopl": 88, "kamel": 88, "guerda": 88, "ai": 88, "idri": 88, "249": 88, "282": 88, "294": 88, "302": 88, "304": 88, "303": 88, "267": 88, "291": 88, "275": 88, "293": 88, "lazi": 88, "259": 88, "298": 88, "smartphon": 88, "238": 88, "236": 88, "253": 88, "202": 88, "203": 88, "introductori": 88, "leak": 88, "254": 88, "284": 88, "287": 88, "288": 88, "278": 88, "258": 88, "234": 88, "241": 88, "242": 88, "215": 88, "281": 88, "286": 88, "infeas": 88, "217": 88, "201": 88, "207": 88, "208": 88, "296": 88, "flake8": 88, "setup": 88, "flag": 88, "organ": 88, "own": 88, "host": 88, "offer": 88, "readthedoc": 88, "beauti": 88, "huge": 88, "correctli": 88, "travi": 88, "simpler": 88, "laplac": 88, "acknowledg": 88, "231": 88, "232": 88, "bad": 88, "jump": 88, "wild": 88, "state": 88, "fundament": 88, "month": 88, "until": 88, "python3stat": 88, "relev": 88, "64bit": 88, "past": 88, "manylinux": 88, "sep": 88, "among": 88, "rewrit": 88, "unmaintain": 88, "cudamat": 88, "were": 88, "stai": 88, "qualiti": 88, "stuff": 88, "markdown": 88, "pipi": 88, "renam": 88, "compliant": 88, "un": 88, "plug": 88, "unus": 88, "unicodedecodeerror": 88, "ascii": 88, "pytest": 88, "pep": 88, "du": 88, "jul": 88, "reloc": 88, "apr": 88, "jan": 88, "tweak": 88, "nov": 88, "oct": 88}, "objects": {"": [[0, 0, 0, "-", "ot"]], "ot": [[66, 0, 0, "-", "backend"], [0, 3, 1, "", "barycenter"], [0, 3, 1, "", "barycenter_unbalanced"], [0, 3, 1, "", "binary_search_circle"], [67, 0, 0, "-", "bregman"], [68, 0, 0, "-", "coot"], [69, 0, 0, "-", "da"], [70, 0, 0, "-", "datasets"], [0, 3, 1, "", "dist"], [71, 0, 0, "-", "dr"], [0, 3, 1, "", "emd"], [0, 3, 1, "", "emd2"], [0, 3, 1, "", "emd2_1d"], [0, 3, 1, "", "emd_1d"], [72, 0, 0, "-", "factored"], [0, 3, 1, "", "factored_optimal_transport"], [0, 3, 1, "", "fused_gromov_wasserstein"], [0, 3, 1, "", "fused_gromov_wasserstein2"], [73, 0, 0, "-", "gaussian"], [74, 0, 0, "-", "gromov"], [0, 3, 1, "", "gromov_barycenters"], [0, 3, 1, "", "gromov_wasserstein"], [0, 3, 1, "", "gromov_wasserstein2"], [75, 0, 0, "-", "lp"], [0, 3, 1, "", "max_sliced_wasserstein_distance"], [76, 0, 0, "-", "optim"], [77, 0, 0, "-", "partial"], [78, 0, 0, "-", "plot"], [79, 0, 0, "-", "regpath"], [0, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [0, 3, 1, "", "sinkhorn"], [0, 3, 1, "", "sinkhorn2"], [0, 3, 1, "", "sinkhorn_lpl1_mm"], [0, 3, 1, "", "sinkhorn_unbalanced"], [0, 3, 1, "", "sinkhorn_unbalanced2"], [80, 0, 0, "-", "sliced"], [0, 3, 1, "", "sliced_wasserstein_distance"], [0, 3, 1, "", "sliced_wasserstein_sphere"], [0, 3, 1, "", "sliced_wasserstein_sphere_unif"], [81, 0, 0, "-", "smooth"], [0, 3, 1, "", "solve"], [82, 0, 0, "-", "stochastic"], [0, 3, 1, "", "tic"], [0, 3, 1, "", "toc"], [0, 3, 1, "", "toq"], [83, 0, 0, "-", "unbalanced"], [0, 3, 1, "", "unif"], [84, 0, 0, "-", "utils"], [0, 3, 1, "", "wasserstein_1d"], [0, 3, 1, "", "wasserstein_circle"], [85, 0, 0, "-", "weak"], [0, 3, 1, "", "weak_optimal_transport"]], "ot.backend": [[66, 1, 1, "id0", "Backend"], [66, 1, 1, "id79", "CupyBackend"], [66, 1, 1, "id156", "JaxBackend"], [66, 1, 1, "id233", "NumpyBackend"], [66, 1, 1, "id310", "TensorflowBackend"], [66, 1, 1, "id387", "TorchBackend"], [66, 3, 1, "id464", "get_backend"], [66, 3, 1, "id465", "get_backend_list"], [66, 3, 1, "id466", "to_numpy"]], "ot.backend.Backend": [[66, 2, 1, "id1", "abs"], [66, 2, 1, "id2", "allclose"], [66, 2, 1, "id3", "any"], [66, 2, 1, "id4", "arange"], [66, 2, 1, "id5", "argmax"], [66, 2, 1, "id6", "argmin"], [66, 2, 1, "id7", "argsort"], [66, 2, 1, "id8", "array_equal"], [66, 2, 1, "id9", "assert_same_dtype_device"], [66, 2, 1, "id10", "atan2"], [66, 2, 1, "id11", "bitsize"], [66, 2, 1, "id12", "clip"], [66, 2, 1, "id13", "concatenate"], [66, 2, 1, "id14", "coo_matrix"], [66, 2, 1, "id15", "copy"], [66, 2, 1, "id16", "cumsum"], [66, 2, 1, "id17", "detach"], [66, 2, 1, "id18", "device_type"], [66, 2, 1, "id19", "diag"], [66, 2, 1, "id20", "dot"], [66, 2, 1, "id21", "dtype_device"], [66, 2, 1, "id22", "einsum"], [66, 2, 1, "id23", "eliminate_zeros"], [66, 2, 1, "id24", "exp"], [66, 2, 1, "id25", "eye"], [66, 2, 1, "id26", "flip"], [66, 2, 1, "id27", "floor"], [66, 2, 1, "id28", "from_numpy"], [66, 2, 1, "id29", "full"], [66, 2, 1, "id30", "inv"], [66, 2, 1, "id31", "is_floating_point"], [66, 2, 1, "id32", "isfinite"], [66, 2, 1, "id33", "isinf"], [66, 2, 1, "id34", "isnan"], [66, 2, 1, "id35", "issparse"], [66, 2, 1, "id36", "kl_div"], [66, 2, 1, "id37", "linspace"], [66, 2, 1, "id38", "log"], [66, 2, 1, "id39", "logsumexp"], [66, 2, 1, "id40", "max"], [66, 2, 1, "id41", "maximum"], [66, 2, 1, "id42", "mean"], [66, 2, 1, "id43", "meshgrid"], [66, 2, 1, "id44", "min"], [66, 2, 1, "id45", "minimum"], [66, 2, 1, "id46", "norm"], [66, 2, 1, "id47", "ones"], [66, 2, 1, "id48", "outer"], [66, 2, 1, "id49", "power"], [66, 2, 1, "id50", "prod"], [66, 2, 1, "id51", "qr"], [66, 2, 1, "id52", "rand"], [66, 2, 1, "id53", "randn"], [66, 2, 1, "id54", "repeat"], [66, 2, 1, "id55", "reshape"], [66, 2, 1, "id56", "searchsorted"], [66, 2, 1, "id57", "seed"], [66, 2, 1, "id58", "set_gradients"], [66, 2, 1, "id59", "solve"], [66, 2, 1, "id60", "sort"], [66, 2, 1, "id61", "sort2"], [66, 2, 1, "id62", "sqrt"], [66, 2, 1, "id63", "sqrtm"], [66, 2, 1, "id64", "squeeze"], [66, 2, 1, "id65", "stack"], [66, 2, 1, "id66", "std"], [66, 2, 1, "id67", "sum"], [66, 2, 1, "id68", "take_along_axis"], [66, 2, 1, "id69", "tile"], [66, 2, 1, "id70", "to_numpy"], [66, 2, 1, "id71", "tocsr"], [66, 2, 1, "id72", "todense"], [66, 2, 1, "id73", "trace"], [66, 2, 1, "id74", "transpose"], [66, 2, 1, "id75", "unique"], [66, 2, 1, "id76", "where"], [66, 2, 1, "id77", "zero_pad"], [66, 2, 1, "id78", "zeros"]], "ot.backend.CupyBackend": [[66, 2, 1, "id80", "abs"], [66, 2, 1, "id81", "allclose"], [66, 2, 1, "id82", "any"], [66, 2, 1, "id83", "arange"], [66, 2, 1, "id84", "argmax"], [66, 2, 1, "id85", "argmin"], [66, 2, 1, "id86", "argsort"], [66, 2, 1, "id87", "array_equal"], [66, 2, 1, "id88", "assert_same_dtype_device"], [66, 2, 1, "id89", "atan2"], [66, 2, 1, "id90", "bitsize"], [66, 2, 1, "id91", "clip"], [66, 2, 1, "id92", "concatenate"], [66, 2, 1, "id93", "coo_matrix"], [66, 2, 1, "id94", "copy"], [66, 2, 1, "id95", "cumsum"], [66, 2, 1, "id96", "detach"], [66, 2, 1, "id97", "device_type"], [66, 2, 1, "id98", "diag"], [66, 2, 1, "id99", "dot"], [66, 2, 1, "id100", "dtype_device"], [66, 2, 1, "id101", "einsum"], [66, 2, 1, "id102", "eliminate_zeros"], [66, 2, 1, "id103", "exp"], [66, 2, 1, "id104", "eye"], [66, 2, 1, "id105", "flip"], [66, 2, 1, "id106", "floor"], [66, 2, 1, "id107", "full"], [66, 2, 1, "id108", "inv"], [66, 2, 1, "id109", "is_floating_point"], [66, 2, 1, "id110", "isfinite"], [66, 2, 1, "id111", "isinf"], [66, 2, 1, "id112", "isnan"], [66, 2, 1, "id113", "issparse"], [66, 2, 1, "id114", "kl_div"], [66, 2, 1, "id115", "linspace"], [66, 2, 1, "id116", "log"], [66, 2, 1, "id117", "logsumexp"], [66, 2, 1, "id118", "max"], [66, 2, 1, "id119", "maximum"], [66, 2, 1, "id120", "mean"], [66, 2, 1, "id121", "meshgrid"], [66, 2, 1, "id122", "min"], [66, 2, 1, "id123", "minimum"], [66, 2, 1, "id124", "norm"], [66, 2, 1, "id125", "ones"], [66, 2, 1, "id126", "outer"], [66, 2, 1, "id127", "power"], [66, 2, 1, "id128", "prod"], [66, 2, 1, "id129", "qr"], [66, 2, 1, "id130", "rand"], [66, 2, 1, "id131", "randn"], [66, 2, 1, "id132", "repeat"], [66, 2, 1, "id133", "reshape"], [66, 2, 1, "id134", "searchsorted"], [66, 2, 1, "id135", "seed"], [66, 2, 1, "id136", "set_gradients"], [66, 2, 1, "id137", "solve"], [66, 2, 1, "id138", "sort"], [66, 2, 1, "id139", "sort2"], [66, 2, 1, "id140", "sqrt"], [66, 2, 1, "id141", "sqrtm"], [66, 2, 1, "id142", "squeeze"], [66, 2, 1, "id143", "stack"], [66, 2, 1, "id144", "std"], [66, 2, 1, "id145", "sum"], [66, 2, 1, "id146", "take_along_axis"], [66, 2, 1, "id147", "tile"], [66, 2, 1, "id148", "tocsr"], [66, 2, 1, "id149", "todense"], [66, 2, 1, "id150", "trace"], [66, 2, 1, "id151", "transpose"], [66, 2, 1, "id152", "unique"], [66, 2, 1, "id153", "where"], [66, 2, 1, "id154", "zero_pad"], [66, 2, 1, "id155", "zeros"]], "ot.backend.JaxBackend": [[66, 2, 1, "id157", "abs"], [66, 2, 1, "id158", "allclose"], [66, 2, 1, "id159", "any"], [66, 2, 1, "id160", "arange"], [66, 2, 1, "id161", "argmax"], [66, 2, 1, "id162", "argmin"], [66, 2, 1, "id163", "argsort"], [66, 2, 1, "id164", "array_equal"], [66, 2, 1, "id165", "assert_same_dtype_device"], [66, 2, 1, "id166", "atan2"], [66, 2, 1, "id167", "bitsize"], [66, 2, 1, "id168", "clip"], [66, 2, 1, "id169", "concatenate"], [66, 2, 1, "id170", "coo_matrix"], [66, 2, 1, "id171", "copy"], [66, 2, 1, "id172", "cumsum"], [66, 2, 1, "id173", "detach"], [66, 2, 1, "id174", "device_type"], [66, 2, 1, "id175", "diag"], [66, 2, 1, "id176", "dot"], [66, 2, 1, "id177", "dtype_device"], [66, 2, 1, "id178", "einsum"], [66, 2, 1, "id179", "eliminate_zeros"], [66, 2, 1, "id180", "exp"], [66, 2, 1, "id181", "eye"], [66, 2, 1, "id182", "flip"], [66, 2, 1, "id183", "floor"], [66, 2, 1, "id184", "full"], [66, 2, 1, "id185", "inv"], [66, 2, 1, "id186", "is_floating_point"], [66, 2, 1, "id187", "isfinite"], [66, 2, 1, "id188", "isinf"], [66, 2, 1, "id189", "isnan"], [66, 2, 1, "id190", "issparse"], [66, 2, 1, "id191", "kl_div"], [66, 2, 1, "id192", "linspace"], [66, 2, 1, "id193", "log"], [66, 2, 1, "id194", "logsumexp"], [66, 2, 1, "id195", "max"], [66, 2, 1, "id196", "maximum"], [66, 2, 1, "id197", "mean"], [66, 2, 1, "id198", "meshgrid"], [66, 2, 1, "id199", "min"], [66, 2, 1, "id200", "minimum"], [66, 2, 1, "id201", "norm"], [66, 2, 1, "id202", "ones"], [66, 2, 1, "id203", "outer"], [66, 2, 1, "id204", "power"], [66, 2, 1, "id205", "prod"], [66, 2, 1, "id206", "qr"], [66, 2, 1, "id207", "rand"], [66, 2, 1, "id208", "randn"], [66, 2, 1, "id209", "repeat"], [66, 2, 1, "id210", "reshape"], [66, 2, 1, "id211", "searchsorted"], [66, 2, 1, "id212", "seed"], [66, 2, 1, "id213", "set_gradients"], [66, 2, 1, "id214", "solve"], [66, 2, 1, "id215", "sort"], [66, 2, 1, "id216", "sort2"], [66, 2, 1, "id217", "sqrt"], [66, 2, 1, "id218", "sqrtm"], [66, 2, 1, "id219", "squeeze"], [66, 2, 1, "id220", "stack"], [66, 2, 1, "id221", "std"], [66, 2, 1, "id222", "sum"], [66, 2, 1, "id223", "take_along_axis"], [66, 2, 1, "id224", "tile"], [66, 2, 1, "id225", "tocsr"], [66, 2, 1, "id226", "todense"], [66, 2, 1, "id227", "trace"], [66, 2, 1, "id228", "transpose"], [66, 2, 1, "id229", "unique"], [66, 2, 1, "id230", "where"], [66, 2, 1, "id231", "zero_pad"], [66, 2, 1, "id232", "zeros"]], "ot.backend.NumpyBackend": [[66, 2, 1, "id234", "abs"], [66, 2, 1, "id235", "allclose"], [66, 2, 1, "id236", "any"], [66, 2, 1, "id237", "arange"], [66, 2, 1, "id238", "argmax"], [66, 2, 1, "id239", "argmin"], [66, 2, 1, "id240", "argsort"], [66, 2, 1, "id241", "array_equal"], [66, 2, 1, "id242", "assert_same_dtype_device"], [66, 2, 1, "id243", "atan2"], [66, 2, 1, "id244", "bitsize"], [66, 2, 1, "id245", "clip"], [66, 2, 1, "id246", "concatenate"], [66, 2, 1, "id247", "coo_matrix"], [66, 2, 1, "id248", "copy"], [66, 2, 1, "id249", "cumsum"], [66, 2, 1, "id250", "detach"], [66, 2, 1, "id251", "device_type"], [66, 2, 1, "id252", "diag"], [66, 2, 1, "id253", "dot"], [66, 2, 1, "id254", "dtype_device"], [66, 2, 1, "id255", "einsum"], [66, 2, 1, "id256", "eliminate_zeros"], [66, 2, 1, "id257", "exp"], [66, 2, 1, "id258", "eye"], [66, 2, 1, "id259", "flip"], [66, 2, 1, "id260", "floor"], [66, 2, 1, "id261", "full"], [66, 2, 1, "id262", "inv"], [66, 2, 1, "id263", "is_floating_point"], [66, 2, 1, "id264", "isfinite"], [66, 2, 1, "id265", "isinf"], [66, 2, 1, "id266", "isnan"], [66, 2, 1, "id267", "issparse"], [66, 2, 1, "id268", "kl_div"], [66, 2, 1, "id269", "linspace"], [66, 2, 1, "id270", "log"], [66, 2, 1, "id271", "logsumexp"], [66, 2, 1, "id272", "max"], [66, 2, 1, "id273", "maximum"], [66, 2, 1, "id274", "mean"], [66, 2, 1, "id275", "meshgrid"], [66, 2, 1, "id276", "min"], [66, 2, 1, "id277", "minimum"], [66, 2, 1, "id278", "norm"], [66, 2, 1, "id279", "ones"], [66, 2, 1, "id280", "outer"], [66, 2, 1, "id281", "power"], [66, 2, 1, "id282", "prod"], [66, 2, 1, "id283", "qr"], [66, 2, 1, "id284", "rand"], [66, 2, 1, "id285", "randn"], [66, 2, 1, "id286", "repeat"], [66, 2, 1, "id287", "reshape"], [66, 2, 1, "id288", "searchsorted"], [66, 2, 1, "id289", "seed"], [66, 2, 1, "id290", "set_gradients"], [66, 2, 1, "id291", "solve"], [66, 2, 1, "id292", "sort"], [66, 2, 1, "id293", "sort2"], [66, 2, 1, "id294", "sqrt"], [66, 2, 1, "id295", "sqrtm"], [66, 2, 1, "id296", "squeeze"], [66, 2, 1, "id297", "stack"], [66, 2, 1, "id298", "std"], [66, 2, 1, "id299", "sum"], [66, 2, 1, "id300", "take_along_axis"], [66, 2, 1, "id301", "tile"], [66, 2, 1, "id302", "tocsr"], [66, 2, 1, "id303", "todense"], [66, 2, 1, "id304", "trace"], [66, 2, 1, "id305", "transpose"], [66, 2, 1, "id306", "unique"], [66, 2, 1, "id307", "where"], [66, 2, 1, "id308", "zero_pad"], [66, 2, 1, "id309", "zeros"]], "ot.backend.TensorflowBackend": [[66, 2, 1, "id311", "abs"], [66, 2, 1, "id312", "allclose"], [66, 2, 1, "id313", "any"], [66, 2, 1, "id314", "arange"], [66, 2, 1, "id315", "argmax"], [66, 2, 1, "id316", "argmin"], [66, 2, 1, "id317", "argsort"], [66, 2, 1, "id318", "array_equal"], [66, 2, 1, "id319", "assert_same_dtype_device"], [66, 2, 1, "id320", "atan2"], [66, 2, 1, "id321", "bitsize"], [66, 2, 1, "id322", "clip"], [66, 2, 1, "id323", "concatenate"], [66, 2, 1, "id324", "coo_matrix"], [66, 2, 1, "id325", "copy"], [66, 2, 1, "id326", "cumsum"], [66, 2, 1, "id327", "detach"], [66, 2, 1, "id328", "device_type"], [66, 2, 1, "id329", "diag"], [66, 2, 1, "id330", "dot"], [66, 2, 1, "id331", "dtype_device"], [66, 2, 1, "id332", "einsum"], [66, 2, 1, "id333", "eliminate_zeros"], [66, 2, 1, "id334", "exp"], [66, 2, 1, "id335", "eye"], [66, 2, 1, "id336", "flip"], [66, 2, 1, "id337", "floor"], [66, 2, 1, "id338", "full"], [66, 2, 1, "id339", "inv"], [66, 2, 1, "id340", "is_floating_point"], [66, 2, 1, "id341", "isfinite"], [66, 2, 1, "id342", "isinf"], [66, 2, 1, "id343", "isnan"], [66, 2, 1, "id344", "issparse"], [66, 2, 1, "id345", "kl_div"], [66, 2, 1, "id346", "linspace"], [66, 2, 1, "id347", "log"], [66, 2, 1, "id348", "logsumexp"], [66, 2, 1, "id349", "max"], [66, 2, 1, "id350", "maximum"], [66, 2, 1, "id351", "mean"], [66, 2, 1, "id352", "meshgrid"], [66, 2, 1, "id353", "min"], [66, 2, 1, "id354", "minimum"], [66, 2, 1, "id355", "norm"], [66, 2, 1, "id356", "ones"], [66, 2, 1, "id357", "outer"], [66, 2, 1, "id358", "power"], [66, 2, 1, "id359", "prod"], [66, 2, 1, "id360", "qr"], [66, 2, 1, "id361", "rand"], [66, 2, 1, "id362", "randn"], [66, 2, 1, "id363", "repeat"], [66, 2, 1, "id364", "reshape"], [66, 2, 1, "id365", "searchsorted"], [66, 2, 1, "id366", "seed"], [66, 2, 1, "id367", "set_gradients"], [66, 2, 1, "id368", "solve"], [66, 2, 1, "id369", "sort"], [66, 2, 1, "id370", "sort2"], [66, 2, 1, "id371", "sqrt"], [66, 2, 1, "id372", "sqrtm"], [66, 2, 1, "id373", "squeeze"], [66, 2, 1, "id374", "stack"], [66, 2, 1, "id375", "std"], [66, 2, 1, "id376", "sum"], [66, 2, 1, "id377", "take_along_axis"], [66, 2, 1, "id378", "tile"], [66, 2, 1, "id379", "tocsr"], [66, 2, 1, "id380", "todense"], [66, 2, 1, "id381", "trace"], [66, 2, 1, "id382", "transpose"], [66, 2, 1, "id383", "unique"], [66, 2, 1, "id384", "where"], [66, 2, 1, "id385", "zero_pad"], [66, 2, 1, "id386", "zeros"]], "ot.backend.TorchBackend": [[66, 2, 1, "id388", "abs"], [66, 2, 1, "id389", "allclose"], [66, 2, 1, "id390", "any"], [66, 2, 1, "id391", "arange"], [66, 2, 1, "id392", "argmax"], [66, 2, 1, "id393", "argmin"], [66, 2, 1, "id394", "argsort"], [66, 2, 1, "id395", "array_equal"], [66, 2, 1, "id396", "assert_same_dtype_device"], [66, 2, 1, "id397", "atan2"], [66, 2, 1, "id398", "bitsize"], [66, 2, 1, "id399", "clip"], [66, 2, 1, "id400", "concatenate"], [66, 2, 1, "id401", "coo_matrix"], [66, 2, 1, "id402", "copy"], [66, 2, 1, "id403", "cumsum"], [66, 2, 1, "id404", "detach"], [66, 2, 1, "id405", "device_type"], [66, 2, 1, "id406", "diag"], [66, 2, 1, "id407", "dot"], [66, 2, 1, "id408", "dtype_device"], [66, 2, 1, "id409", "einsum"], [66, 2, 1, "id410", "eliminate_zeros"], [66, 2, 1, "id411", "exp"], [66, 2, 1, "id412", "eye"], [66, 2, 1, "id413", "flip"], [66, 2, 1, "id414", "floor"], [66, 2, 1, "id415", "full"], [66, 2, 1, "id416", "inv"], [66, 2, 1, "id417", "is_floating_point"], [66, 2, 1, "id418", "isfinite"], [66, 2, 1, "id419", "isinf"], [66, 2, 1, "id420", "isnan"], [66, 2, 1, "id421", "issparse"], [66, 2, 1, "id422", "kl_div"], [66, 2, 1, "id423", "linspace"], [66, 2, 1, "id424", "log"], [66, 2, 1, "id425", "logsumexp"], [66, 2, 1, "id426", "max"], [66, 2, 1, "id427", "maximum"], [66, 2, 1, "id428", "mean"], [66, 2, 1, "id429", "meshgrid"], [66, 2, 1, "id430", "min"], [66, 2, 1, "id431", "minimum"], [66, 2, 1, "id432", "norm"], [66, 2, 1, "id433", "ones"], [66, 2, 1, "id434", "outer"], [66, 2, 1, "id435", "power"], [66, 2, 1, "id436", "prod"], [66, 2, 1, "id437", "qr"], [66, 2, 1, "id438", "rand"], [66, 2, 1, "id439", "randn"], [66, 2, 1, "id440", "repeat"], [66, 2, 1, "id441", "reshape"], [66, 2, 1, "id442", "searchsorted"], [66, 2, 1, "id443", "seed"], [66, 2, 1, "id444", "set_gradients"], [66, 2, 1, "id445", "solve"], [66, 2, 1, "id446", "sort"], [66, 2, 1, "id447", "sort2"], [66, 2, 1, "id448", "sqrt"], [66, 2, 1, "id449", "sqrtm"], [66, 2, 1, "id450", "squeeze"], [66, 2, 1, "id451", "stack"], [66, 2, 1, "id452", "std"], [66, 2, 1, "id453", "sum"], [66, 2, 1, "id454", "take_along_axis"], [66, 2, 1, "id455", "tile"], [66, 2, 1, "id456", "tocsr"], [66, 2, 1, "id457", "todense"], [66, 2, 1, "id458", "trace"], [66, 2, 1, "id459", "transpose"], [66, 2, 1, "id460", "unique"], [66, 2, 1, "id461", "where"], [66, 2, 1, "id462", "zero_pad"], [66, 2, 1, "id463", "zeros"]], "ot.bregman": [[67, 3, 1, "id0", "barycenter"], [67, 3, 1, "id43", "barycenter_debiased"], [67, 3, 1, "id46", "barycenter_sinkhorn"], [67, 3, 1, "id49", "barycenter_stabilized"], [67, 3, 1, "id52", "convolutional_barycenter2d"], [67, 3, 1, "id56", "convolutional_barycenter2d_debiased"], [67, 3, 1, "id59", "empirical_sinkhorn"], [67, 3, 1, "id63", "empirical_sinkhorn2"], [67, 3, 1, "id67", "empirical_sinkhorn_divergence"], [67, 3, 1, "id69", "free_support_sinkhorn_barycenter"], [67, 3, 1, "id72", "geometricBar"], [67, 3, 1, "id73", "geometricMean"], [67, 3, 1, "id74", "greenkhorn"], [67, 3, 1, "id78", "jcpot_barycenter"], [67, 3, 1, "id81", "projC"], [67, 3, 1, "id82", "projR"], [67, 3, 1, "id83", "screenkhorn"], [67, 3, 1, "id87", "sinkhorn"], [67, 3, 1, "id93", "sinkhorn2"], [67, 3, 1, "id100", "sinkhorn_epsilon_scaling"], [67, 3, 1, "id105", "sinkhorn_knopp"], [67, 3, 1, "id108", "sinkhorn_log"], [67, 3, 1, "id112", "sinkhorn_stabilized"], [67, 3, 1, "id117", "unmix"]], "ot.coot": [[68, 3, 1, "id0", "co_optimal_transport"], [68, 3, 1, "id4", "co_optimal_transport2"]], "ot.da": [[69, 1, 1, "id0", "BaseTransport"], [69, 1, 1, "id40", "EMDLaplaceTransport"], [69, 1, 1, "id47", "EMDTransport"], [69, 1, 1, "id53", "JCPOTTransport"], [69, 1, 1, "id66", "LinearTransport"], [69, 1, 1, "id73", "MappingTransport"], [69, 1, 1, "id80", "SinkhornL1l2Transport"], [69, 1, 1, "id88", "SinkhornLpl1Transport"], [69, 1, 1, "id95", "SinkhornTransport"], [69, 1, 1, "id103", "UnbalancedSinkhornTransport"], [69, 3, 1, "id110", "distribution_estimation_uniform"], [69, 3, 1, "id111", "emd_laplace"], [69, 3, 1, "id115", "joint_OT_mapping_kernel"], [69, 3, 1, "id118", "joint_OT_mapping_linear"], [69, 3, 1, "id121", "sinkhorn_l1l2_gl"], [69, 3, 1, "id125", "sinkhorn_lpl1_mm"]], "ot.da.BaseTransport": [[69, 2, 1, "id32", "fit"], [69, 2, 1, "id33", "fit_transform"], [69, 2, 1, "id34", "inverse_transform"], [69, 2, 1, "id35", "inverse_transform_labels"], [69, 2, 1, "id36", "transform"], [69, 2, 1, "id37", "transform_labels"]], "ot.da.EMDLaplaceTransport": [[69, 4, 1, "id41", "coupling_"], [69, 2, 1, "id46", "fit"]], "ot.da.EMDTransport": [[69, 4, 1, "id48", "coupling_"], [69, 2, 1, "id52", "fit"]], "ot.da.JCPOTTransport": [[69, 4, 1, "id54", "coupling_"], [69, 2, 1, "id60", "fit"], [69, 2, 1, "id61", "inverse_transform_labels"], [69, 4, 1, "id56", "log_"], [69, 4, 1, "id55", "proportions_"], [69, 2, 1, "id62", "transform"], [69, 2, 1, "id63", "transform_labels"]], "ot.da.LinearTransport": [[69, 2, 1, "id70", "fit"], [69, 2, 1, "id71", "inverse_transform"], [69, 2, 1, "id72", "transform"]], "ot.da.MappingTransport": [[69, 4, 1, "id74", "coupling_"], [69, 2, 1, "id78", "fit"], [69, 4, 1, "id76", "log_"], [69, 4, 1, "id75", "mapping_"], [69, 2, 1, "id79", "transform"]], "ot.da.SinkhornL1l2Transport": [[69, 4, 1, "id81", "coupling_"], [69, 2, 1, "id87", "fit"], [69, 4, 1, "id82", "log_"]], "ot.da.SinkhornLpl1Transport": [[69, 4, 1, "id89", "coupling_"], [69, 2, 1, "id94", "fit"]], "ot.da.SinkhornTransport": [[69, 4, 1, "id96", "coupling_"], [69, 2, 1, "id102", "fit"], [69, 4, 1, "id97", "log_"]], "ot.da.UnbalancedSinkhornTransport": [[69, 4, 1, "id104", "coupling_"], [69, 2, 1, "id109", "fit"], [69, 4, 1, "id105", "log_"]], "ot.datasets": [[70, 3, 1, "id0", "make_1D_gauss"], [70, 3, 1, "id1", "make_2D_samples_gauss"], [70, 3, 1, "id2", "make_data_classif"]], "ot.dr": [[71, 3, 1, "id0", "dist"], [71, 3, 1, "id3", "fda"], [71, 3, 1, "id4", "logsumexp"], [71, 3, 1, "id5", "projection_robust_wasserstein"], [71, 3, 1, "id8", "sinkhorn"], [71, 3, 1, "id9", "sinkhorn_log"], [71, 3, 1, "id10", "split_classes"], [71, 3, 1, "id11", "wda"]], "ot.factored": [[72, 3, 1, "id0", "factored_optimal_transport"]], "ot.gaussian": [[73, 3, 1, "id0", "bures_wasserstein_distance"], [73, 3, 1, "id11", "bures_wasserstein_mapping"], [73, 3, 1, "id15", "empirical_bures_wasserstein_distance"], [73, 3, 1, "id18", "empirical_bures_wasserstein_mapping"]], "ot.gromov": [[74, 3, 1, "", "GW_distance_estimation"], [74, 3, 1, "", "entropic_gromov_barycenters"], [74, 3, 1, "", "entropic_gromov_wasserstein"], [74, 3, 1, "", "entropic_gromov_wasserstein2"], [74, 3, 1, "", "fgw_barycenters"], [74, 3, 1, "", "fused_gromov_wasserstein"], [74, 3, 1, "", "fused_gromov_wasserstein2"], [74, 3, 1, "", "fused_gromov_wasserstein_dictionary_learning"], [74, 3, 1, "", "fused_gromov_wasserstein_linear_unmixing"], [74, 3, 1, "", "gromov_barycenters"], [74, 3, 1, "", "gromov_wasserstein"], [74, 3, 1, "", "gromov_wasserstein2"], [74, 3, 1, "", "gromov_wasserstein_dictionary_learning"], [74, 3, 1, "", "gromov_wasserstein_linear_unmixing"], [74, 3, 1, "", "gwggrad"], [74, 3, 1, "", "gwloss"], [74, 3, 1, "", "init_matrix"], [74, 3, 1, "", "init_matrix_semirelaxed"], [74, 3, 1, "", "pointwise_gromov_wasserstein"], [74, 3, 1, "", "sampled_gromov_wasserstein"], [74, 3, 1, "", "semirelaxed_fused_gromov_wasserstein"], [74, 3, 1, "", "semirelaxed_fused_gromov_wasserstein2"], [74, 3, 1, "", "semirelaxed_gromov_wasserstein"], [74, 3, 1, "", "semirelaxed_gromov_wasserstein2"], [74, 3, 1, "", "solve_gromov_linesearch"], [74, 3, 1, "", "solve_semirelaxed_gromov_linesearch"], [74, 3, 1, "", "tensor_product"], [74, 3, 1, "", "update_feature_matrix"], [74, 3, 1, "", "update_kl_loss"], [74, 3, 1, "", "update_square_loss"], [74, 3, 1, "", "update_structure_matrix"]], "ot.lp": [[75, 3, 1, "", "barycenter"], [75, 3, 1, "", "binary_search_circle"], [75, 3, 1, "", "center_ot_dual"], [75, 3, 1, "", "check_number_threads"], [75, 3, 1, "id0", "emd"], [75, 3, 1, "id11", "emd2"], [75, 3, 1, "", "emd2_1d"], [75, 3, 1, "", "emd_1d"], [75, 3, 1, "", "estimate_dual_null_weights"], [75, 3, 1, "id18", "free_support_barycenter"], [75, 3, 1, "id22", "generalized_free_support_barycenter"], [75, 3, 1, "", "semidiscrete_wasserstein2_unif_circle"], [75, 3, 1, "", "wasserstein_1d"], [75, 3, 1, "", "wasserstein_circle"]], "ot.optim": [[76, 3, 1, "id0", "cg"], [76, 3, 1, "id13", "gcg"], [76, 3, 1, "id17", "generic_conditional_gradient"], [76, 3, 1, "id23", "line_search_armijo"], [76, 3, 1, "id24", "semirelaxed_cg"], [76, 3, 1, "id27", "solve_1d_linesearch_quad"]], "ot.partial": [[77, 3, 1, "id0", "entropic_partial_gromov_wasserstein"], [77, 3, 1, "id17", "entropic_partial_gromov_wasserstein2"], [77, 3, 1, "id21", "entropic_partial_wasserstein"], [77, 3, 1, "id24", "gwgrad_partial"], [77, 3, 1, "id27", "gwloss_partial"], [77, 3, 1, "id28", "partial_gromov_wasserstein"], [77, 3, 1, "id31", "partial_gromov_wasserstein2"], [77, 3, 1, "id34", "partial_wasserstein"], [77, 3, 1, "id37", "partial_wasserstein2"], [77, 3, 1, "id40", "partial_wasserstein_lagrange"]], "ot.plot": [[78, 3, 1, "id0", "plot1D_mat"], [78, 3, 1, "id1", "plot2D_samples_mat"]], "ot.regpath": [[79, 3, 1, "id0", "complement_schur"], [79, 3, 1, "id12", "compute_next_removal"], [79, 3, 1, "id15", "compute_transport_plan"], [79, 3, 1, "id18", "construct_augmented_H"], [79, 3, 1, "id19", "fully_relaxed_path"], [79, 3, 1, "id21", "ot_next_gamma"], [79, 3, 1, "id23", "recast_ot_as_lasso"], [79, 3, 1, "id25", "recast_semi_relaxed_as_lasso"], [79, 3, 1, "id26", "regularization_path"], [79, 3, 1, "id28", "semi_relaxed_next_gamma"], [79, 3, 1, "id30", "semi_relaxed_path"]], "ot.sliced": [[80, 3, 1, "id0", "get_random_projections"], [80, 3, 1, "id5", "max_sliced_wasserstein_distance"], [80, 3, 1, "id7", "sliced_wasserstein_distance"], [80, 3, 1, "id9", "sliced_wasserstein_sphere"], [80, 3, 1, "id11", "sliced_wasserstein_sphere_unif"]], "ot.smooth": [[81, 1, 1, "id0", "NegEntropy"], [81, 1, 1, "id10", "Regularization"], [81, 1, 1, "id14", "SparsityConstrained"], [81, 1, 1, "id18", "SquaredL2"], [81, 3, 1, "id22", "dual_obj_grad"], [81, 3, 1, "id23", "get_plan_from_dual"], [81, 3, 1, "id24", "get_plan_from_semi_dual"], [81, 3, 1, "id25", "projection_simplex"], [81, 3, 1, "id26", "semi_dual_obj_grad"], [81, 3, 1, "id27", "smooth_ot_dual"], [81, 3, 1, "id32", "smooth_ot_semi_dual"], [81, 3, 1, "id37", "solve_dual"], [81, 3, 1, "id38", "solve_semi_dual"]], "ot.smooth.NegEntropy": [[81, 2, 1, "id7", "Omega"], [81, 2, 1, "id8", "delta_Omega"], [81, 2, 1, "id9", "max_Omega"]], "ot.smooth.Regularization": [[81, 2, 1, "id11", "Omega"], [81, 2, 1, "id12", "delta_Omega"], [81, 2, 1, "id13", "max_Omega"]], "ot.smooth.SparsityConstrained": [[81, 2, 1, "id15", "Omega"], [81, 2, 1, "id16", "delta_Omega"], [81, 2, 1, "id17", "max_Omega"]], "ot.smooth.SquaredL2": [[81, 2, 1, "id19", "Omega"], [81, 2, 1, "id20", "delta_Omega"], [81, 2, 1, "id21", "max_Omega"]], "ot.stochastic": [[82, 3, 1, "id0", "averaged_sgd_entropic_transport"], [82, 3, 1, "id15", "batch_grad_dual"], [82, 3, 1, "id18", "c_transform_entropic"], [82, 3, 1, "id21", "coordinate_grad_semi_dual"], [82, 3, 1, "id24", "loss_dual_entropic"], [82, 3, 1, "id26", "loss_dual_quadratic"], [82, 3, 1, "id28", "plan_dual_entropic"], [82, 3, 1, "id30", "plan_dual_quadratic"], [82, 3, 1, "id32", "sag_entropic_transport"], [82, 3, 1, "id35", "sgd_entropic_regularization"], [82, 3, 1, "id37", "solve_dual_entropic"], [82, 3, 1, "id39", "solve_semi_dual_entropic"]], "ot.unbalanced": [[83, 3, 1, "id0", "barycenter_unbalanced"], [83, 3, 1, "id25", "barycenter_unbalanced_sinkhorn"], [83, 3, 1, "id29", "barycenter_unbalanced_stabilized"], [83, 3, 1, "id33", "lbfgsb_unbalanced"], [83, 3, 1, "id35", "mm_unbalanced"], [83, 3, 1, "id38", "mm_unbalanced2"], [83, 3, 1, "id40", "sinkhorn_knopp_unbalanced"], [83, 3, 1, "id44", "sinkhorn_stabilized_unbalanced"], [83, 3, 1, "id48", "sinkhorn_unbalanced"], [83, 3, 1, "id54", "sinkhorn_unbalanced2"]], "ot.utils": [[84, 1, 1, "id0", "BaseEstimator"], [84, 1, 1, "", "OTResult"], [84, 6, 1, "", "UndefinedParameter"], [84, 3, 1, "id3", "check_params"], [84, 3, 1, "id4", "check_random_state"], [84, 3, 1, "id5", "clean_zeros"], [84, 3, 1, "id6", "cost_normalization"], [84, 1, 1, "id7", "deprecated"], [84, 3, 1, "id8", "dist"], [84, 3, 1, "id9", "dist0"], [84, 3, 1, "id10", "dots"], [84, 3, 1, "id11", "euclidean_distances"], [84, 3, 1, "id12", "get_coordinate_circle"], [84, 3, 1, "id13", "kernel"], [84, 3, 1, "id14", "label_normalization"], [84, 3, 1, "id15", "laplacian"], [84, 3, 1, "id16", "list_to_array"], [84, 3, 1, "id17", "parmap"], [84, 3, 1, "id18", "proj_simplex"], [84, 3, 1, "id19", "projection_sparse_simplex"], [84, 3, 1, "id20", "tic"], [84, 3, 1, "id21", "toc"], [84, 3, 1, "id22", "toq"], [84, 3, 1, "id23", "unif"]], "ot.utils.BaseEstimator": [[84, 2, 1, "id1", "get_params"], [84, 2, 1, "id2", "set_params"]], "ot.utils.OTResult": [[84, 5, 1, "", "a_to_b"], [84, 5, 1, "", "b_to_a"], [84, 5, 1, "", "citation"], [84, 5, 1, "", "lazy_plan"], [84, 5, 1, "", "marginal_a"], [84, 5, 1, "", "marginal_b"], [84, 5, 1, "", "marginals"], [84, 5, 1, "", "plan"], [84, 5, 1, "", "potential_a"], [84, 5, 1, "", "potential_b"], [84, 5, 1, "", "potentials"], [84, 5, 1, "", "sparse_plan"], [84, 5, 1, "", "status"], [84, 5, 1, "", "value"], [84, 5, 1, "", "value_linear"]], "ot.weak": [[85, 3, 1, "id0", "weak_optimal_transport"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "titleterms": {"api": 0, "modul": [0, 87], "main": 0, "ot": [0, 1, 5, 18, 19, 20, 21, 22, 23, 24, 25, 35, 38, 39, 45, 47, 49, 50, 51, 52, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87], "function": [0, 30, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "refer": [0, 80, 86, 87], "dual": [1, 5, 43, 45], "solver": [1, 52, 87], "entrop": [1, 5, 11, 52, 61, 87], "quadrat": [1, 87], "regular": [1, 11, 22, 35, 45, 52, 60, 61, 87], "pytorch": [1, 2, 3, 5, 6, 7, 8], "data": [1, 4, 5, 6, 8, 10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 37, 38, 39, 40, 41, 42, 46, 47, 48, 50, 51, 52, 54, 55, 57, 58, 60, 61], "gener": [1, 2, 4, 5, 6, 8, 10, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32, 33, 37, 38, 39, 40, 42, 46, 47, 48, 50, 52, 54, 55, 57, 58, 60, 61, 87], "plot": [1, 4, 5, 6, 8, 14, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 37, 38, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 78], "convert": [1, 5], "torch": [1, 5], "tensor": [1, 5], "estim": [1, 2, 5, 6, 23, 24, 25, 32, 40, 87], "variabl": [1, 5, 45], "plan": [1, 5, 30, 45, 59], "optim": [2, 6, 18, 20, 21, 22, 26, 36, 38, 39, 40, 42, 45, 46, 48, 49, 57, 60, 61, 76, 86, 87], "gromov": [2, 29, 30, 31, 32, 33, 35, 59, 74, 87], "wasserstein": [2, 3, 4, 6, 7, 8, 10, 11, 12, 14, 16, 29, 30, 31, 32, 33, 35, 37, 45, 51, 54, 55, 58, 59, 87], "distanc": [2, 6, 20, 26, 29, 30, 35, 40, 50, 51, 54, 59, 87], "graph": [2, 28, 32, 33], "gw": [2, 29, 30, 87], "w": 2, "r": 2, "t": 2, "weight": [2, 6], "templat": 2, "structur": [2, 29], "commun": 2, "cluster": [2, 32, 33], "uniform": [2, 49, 51], "compress": 2, "slice": [3, 4, 35, 54, 55, 80], "barycent": [3, 7, 10, 11, 12, 13, 14, 15, 16, 28, 31, 35, 58, 87], "gradient": [3, 4], "flow": [3, 7], "anim": [3, 4, 8, 16, 60], "trajectori": [3, 4, 8], "along": [3, 4, 8], "iter": [3, 4, 8], "comput": [3, 9, 10, 12, 13, 14, 16, 17, 27, 28, 29, 30, 31, 33, 34, 37, 38, 39, 43, 44, 45, 48, 50, 53, 56, 58, 59, 60, 61, 62, 87], "descent": [3, 4], "spheric": [4, 55], "embed": [4, 32], "sphere": 4, "sampl": [4, 5, 8, 18, 20, 21, 22, 23, 24, 26, 30, 40, 49, 59], "continu": [5, 43], "deep": 5, "densiti": 5, "target": [5, 18, 20, 21, 22, 26], "given": 5, "sourc": [5, 6, 18, 20, 21, 22, 26], "unmix": 6, "model": [6, 8, 32, 33], "wrt": 6, "converg": 6, "object": 6, "reweight": 6, "distribut": [6, 14, 15, 20, 25, 30, 40, 42, 46, 47, 48, 54, 55, 57, 58, 59, 87], "1d": [7, 10, 11, 13, 46, 50, 57, 58], "2": [8, 18, 20, 21, 22, 26, 32, 33, 49, 55, 88], "minibatch": 8, "gan": 8, "train": 8, "visual": [8, 12, 13, 29, 31, 32, 33, 40, 45], "time": [9, 17, 27, 34, 44, 45, 53, 56, 62], "demo": [10, 13, 16, 58], "barycentr": [10, 58], "interpol": [10, 15, 58], "exact": [11, 38, 39, 61], "lp": [11, 75], "v": [11, 26, 38], "gaussian": [11, 13, 30, 59, 73], "stair": 11, "dirac": 11, "final": 11, "figur": 11, "convolut": [12, 87], "exampl": [12, 30, 31, 33, 35, 43, 47, 59, 61, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87], "prepar": [12, 31], "debias": 13, "sinkhorn": [13, 15, 21, 43, 45, 46, 48, 50, 57, 87], "2d": [13, 14, 15, 30, 37, 48, 54, 59, 61], "imag": [13, 19, 23, 25], "free": [14, 15, 87], "support": [14, 15, 86, 87], "paramet": [15, 45], "inspect": 15, "empir": [15, 20, 48], "project": [16, 37, 54, 55], "match": [16, 33], "rotat": 16, "domain": [18, 20, 21, 22, 24, 25, 35, 87], "adapt": [18, 19, 20, 21, 22, 23, 24, 25, 35, 87], "instanti": [18, 19, 20, 21, 22, 24], "differ": [18, 19, 20, 22, 24, 26, 49, 50, 51, 54, 55], "transport": [18, 19, 20, 21, 22, 23, 24, 26, 29, 36, 38, 39, 40, 42, 43, 45, 46, 48, 49, 57, 60, 61, 86, 87], "algorithm": [18, 19, 20, 21, 22, 24, 43, 45], "fit": [18, 19, 20, 21, 22, 24], "them": [18, 19, 20, 21, 22, 24, 30, 59], "fig": [18, 20, 21, 22, 26], "1": [18, 20, 21, 22, 26, 32, 49, 88], "coupl": [18, 20, 21, 22, 26, 39], "color": [19, 25], "origin": [19, 25], "scatter": 19, "new": [19, 64, 88], "matrix": [20, 26, 29, 42, 43, 45, 46, 47, 57], "pairwis": [20, 26], "method": [20, 26, 30], "3": [20, 26, 32, 33, 88], "multi": 21, "shift": 21, "all": 21, "jcpot": 21, "run": 21, "oracl": 21, "known": 21, "proport": 21, "laplacian": 22, "linear": [23, 32], "map": [23, 24, 25, 45, 87], "load": 23, "transform": [23, 25], "pixel": 25, "transfer": 25, "valu": 25, "otda": [26, 87], "unsupervis": 26, "semi": [26, 33, 43, 60], "supervis": 26, "set": 26, "onto": 26, "us": [28, 67, 68, 69, 70, 71, 73, 75, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87], "fgw": [28, 29, 87], "fuse": [29, 32, 33, 35], "creat": 29, "matric": [29, 43, 49], "across": 29, "featur": [29, 32, 33, 88], "two": [30, 33, 59], "3d": [30, 59], "kernel": 30, "normal": 30, "displai": 30, "scalabl": 30, "stochast": [30, 32, 33, 43, 82], "ani": 30, "loss": [30, 42, 45, 46, 47, 50, 57], "smacof": 31, "md": 31, "dictionari": 32, "learn": [32, 40], "dataset": [32, 49, 70], "compos": 32, "follow": [32, 33], "block": [32, 33], "from": 32, "atom": 32, "space": 32, "endow": 32, "node": [32, 33], "attribut": [32, 63], "relax": [33, 60], "diverg": 33, "add": 33, "galleri": 35, "pot": [35, 41, 45, 64, 86, 87], "backend": [35, 66, 87], "other": [35, 87], "problem": [35, 43, 45], "unbalanc": [35, 57, 58, 60, 61, 83, 87], "partial": [35, 49, 59, 77, 87], "row": [36, 40], "column": [36, 40], "align": [36, 40], "co": [36, 40], "discrimin": [37, 87], "analysi": [37, 87], "fisher": 37, "weak": [38, 85], "an": [38, 39, 87], "solut": [38, 39], "factor": [39, 72], "margin": 40, "coot": [40, 68], "respect": 40, "logo": 41, "toolbox": [41, 45, 86], "clear": 41, "background": 41, "dark": 41, "screen": 42, "screenkhorn": [42, 67], "solv": [42, 45, 46, 47, 52, 57, 87], "discret": 43, "case": [43, 87], "compar": [43, 51], "result": [43, 61], "introduct": 45, "python": [45, 86], "instal": [45, 86], "import": 45, "get": 45, "help": 45, "first": [45, 88], "bakeri": 45, "citi": 45, "cost": 45, "emd": [45, 46, 48, 50, 52, 87], "vari": 45, "smooth": [47, 81], "spars": 47, "between": [48, 51, 87], "ground": 49, "metric": 49, "circl": [49, 51], "euclidean": 51, "von": 51, "mise": 51, "kappa": 51, "frobeniu": 52, "norm": 52, "seed": [54, 55], "number": [54, 55], "": 55, "mass": 57, "one": 59, "path": 60, "l2": [60, 61], "penal": 60, "fulli": 60, "regpath": [60, 79], "uot": [60, 61], "kl": 61, "code": [63, 86], "conduct": [63, 86], "our": 63, "pledg": 63, "standard": 63, "respons": 63, "scope": 63, "enforc": 63, "contribut": [64, 86], "how": [64, 87], "pull": 64, "request": 64, "checklist": 64, "file": 64, "bug": 64, "contributor": [64, 65], "tip": 64, "document": 64, "creator": 65, "maintain": 65, "acknowledg": [65, 86], "perform": 66, "class": [66, 69, 81, 84, 87], "bregman": [67, 87], "barycenter_debias": 67, "convolutional_barycenter2d": [67, 87], "convolutional_barycenter2d_debias": 67, "empirical_sinkhorn": 67, "free_support_sinkhorn_barycent": 67, "depend": [67, 86], "co_optimal_transport": 68, "co_optimal_transport2": 68, "da": 69, "basetransport": 69, "emdlaplacetransport": 69, "emdtransport": 69, "jcpottransport": 69, "lineartransport": 69, "mappingtransport": 69, "sinkhornl1l2transport": 69, "sinkhornlpl1transport": 69, "sinkhorntransport": 69, "make_1d_gauss": 70, "make_2d_samples_gauss": 70, "make_data_classif": 70, "dr": 71, "fda": 71, "wda": [71, 87], "empirical_bures_wasserstein_map": 73, "free_support_barycent": 75, "generalized_free_support_barycent": 75, "cg": 76, "gcg": 76, "entropic_partial_gromov_wasserstein": 77, "entropic_partial_wasserstein": 77, "partial_gromov_wasserstein": 77, "partial_wasserstein": 77, "plot1d_mat": 78, "plot2d_samples_mat": 78, "compute_transport_plan": 79, "regularization_path": 79, "smooth_ot_du": 81, "loss_dual_entrop": 82, "loss_dual_quadrat": 82, "plan_dual_entrop": 82, "plan_dual_quadrat": 82, "solve_dual_entrop": 82, "solve_semi_dual_entrop": 82, "mm_unbalanc": 83, "util": 84, "dist0": 84, "proj_simplex": 84, "baseestim": 84, "except": 84, "content": 86, "cite": 86, "pip": 86, "anaconda": 86, "conda": 86, "forg": 86, "post": 86, "check": 86, "short": 86, "notebook": 86, "indic": 86, "tabl": 86, "quick": 87, "start": 87, "guid": 87, "why": 87, "when": 87, "emd2": 87, "special": 87, "sinkhorn2": 87, "group": 87, "lasso": 87, "fix": 87, "mong": 87, "extens": 87, "g": 87, "applic": 87, "multipl": 87, "cpu": 87, "gpu": 87, "work": 87, "acceler": 87, "list": 87, "compat": 87, "faq": 87, "releas": 88, "0": 88, "9": 88, "1dev": 88, "close": 88, "issu": 88, "8": 88, "7": 88, "6": 88, "5": 88, "deprec": 88, "4": 88, "v0": 88, "11": 88, "10": 88, "pre": 88}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"API and modules": [[0, "api-and-modules"]], "Main ot functions": [[0, "module-ot"]], "References:": [[0, "references"], [80, "references"], [80, "id12"]], "Dual OT solvers for entropic and quadratic regularized OT with Pytorch": [[1, "dual-ot-solvers-for-entropic-and-quadratic-regularized-ot-with-pytorch"]], "Data generation": [[1, "data-generation"], [4, "data-generation"], [5, "data-generation"], [8, "data-generation"]], "Plot data": [[1, "plot-data"], [4, "plot-data"], [5, "plot-data"], [6, "plot-data"], [8, "plot-data"], [23, "plot-data"], [24, "plot-data"], [28, "plot-data"], [29, "plot-data"], [37, "plot-data"], [48, "plot-data"], [50, "plot-data"], [51, "plot-data"], [54, "plot-data"], [55, "plot-data"], [58, "plot-data"], [60, "plot-data"]], "Convert data to torch tensors": [[1, "convert-data-to-torch-tensors"], [5, "convert-data-to-torch-tensors"]], "Estimating dual variables for entropic OT": [[1, "estimating-dual-variables-for-entropic-ot"]], "Plot the estimated entropic OT plan": [[1, "plot-the-estimated-entropic-ot-plan"]], "Estimating dual variables for quadratic OT": [[1, "estimating-dual-variables-for-quadratic-ot"]], "Plot the estimated quadratic OT plan": [[1, "plot-the-estimated-quadratic-ot-plan"]], "Optimizing the Gromov-Wasserstein distance with PyTorch": [[2, "optimizing-the-gromov-wasserstein-distance-with-pytorch"]], "Graph generation": [[2, "graph-generation"]], "Optimizing GW w.r.t. the weights on a template structure": [[2, "optimizing-gw-w-r-t-the-weights-on-a-template-structure"]], "Community clustering with uniform and estimated weights": [[2, "community-clustering-with-uniform-and-estimated-weights"]], "Graph compression with GW": [[2, "graph-compression-with-gw"]], "Sliced Wasserstein barycenter and gradient flow with PyTorch": [[3, "sliced-wasserstein-barycenter-and-gradient-flow-with-pytorch"]], "Sliced Wasserstein gradient flow with Pytorch": [[3, "sliced-wasserstein-gradient-flow-with-pytorch"]], "Animate trajectories of the gradient flow along iteration": [[3, "animate-trajectories-of-the-gradient-flow-along-iteration"]], "Compute the Sliced Wasserstein Barycenter": [[3, "compute-the-sliced-wasserstein-barycenter"]], "Animate trajectories of the barycenter along gradient descent": [[3, "animate-trajectories-of-the-barycenter-along-gradient-descent"]], "Spherical Sliced-Wasserstein Embedding on Sphere": [[4, "spherical-sliced-wasserstein-embedding-on-sphere"]], "Gradient descent": [[4, "gradient-descent"]], "Plot trajectories of generated samples along iterations": [[4, "plot-trajectories-of-generated-samples-along-iterations"], [8, "plot-trajectories-of-generated-samples-along-iterations"]], "Animate trajectories of generated samples along iteration": [[4, "animate-trajectories-of-generated-samples-along-iteration"], [8, "animate-trajectories-of-generated-samples-along-iteration"]], "Continuous OT plan estimation with Pytorch": [[5, "continuous-ot-plan-estimation-with-pytorch"]], "Estimating deep dual variables for entropic OT": [[5, "estimating-deep-dual-variables-for-entropic-ot"]], "Plot the density on target for a given source sample": [[5, "plot-the-density-on-target-for-a-given-source-sample"]], "Wasserstein unmixing with PyTorch": [[6, "wasserstein-unmixing-with-pytorch"]], "Generate data": [[6, "generate-data"], [10, "generate-data"], [14, "generate-data"], [18, "generate-data"], [19, "generate-data"], [20, "generate-data"], [21, "generate-data"], [22, "generate-data"], [23, "generate-data"], [24, "generate-data"], [25, "generate-data"], [26, "generate-data"], [28, "generate-data"], [29, "generate-data"], [37, "generate-data"], [40, "generate-data"], [42, "generate-data"], [46, "generate-data"], [47, "generate-data"], [48, "generate-data"], [50, "generate-data"], [52, "generate-data"], [54, "generate-data"], [55, "generate-data"], [57, "generate-data"], [58, "generate-data"], [60, "generate-data"], [61, "generate-data"]], "Optimization of the model wrt the Wasserstein distance": [[6, "optimization-of-the-model-wrt-the-wasserstein-distance"]], "Estimated weights and convergence of the objective": [[6, "estimated-weights-and-convergence-of-the-objective"]], "Plotting the reweighted source distribution": [[6, "plotting-the-reweighted-source-distribution"]], "Wasserstein 1D (flow and barycenter) with PyTorch": [[7, "wasserstein-1d-flow-and-barycenter-with-pytorch"]], "Wasserstein barycenter": [[7, "wasserstein-barycenter"]], "Wasserstein 2 Minibatch GAN with PyTorch": [[8, "wasserstein-2-minibatch-gan-with-pytorch"]], "Generator Model": [[8, "generator-model"]], "Training the model": [[8, "training-the-model"]], "Generate and visualize data": [[8, "generate-and-visualize-data"]], "Computation times": [[9, "computation-times"], [17, "computation-times"], [27, "computation-times"], [34, "computation-times"], [44, "computation-times"], [53, "computation-times"], [56, "computation-times"], [62, "computation-times"]], "1D Wasserstein barycenter demo": [[10, "d-wasserstein-barycenter-demo"]], "Barycenter computation": [[10, "barycenter-computation"], [28, "barycenter-computation"], [31, "barycenter-computation"], [58, "barycenter-computation"]], "Barycentric interpolation": [[10, "barycentric-interpolation"], [58, "barycentric-interpolation"]], "1D Wasserstein barycenter: exact LP vs entropic regularization": [[11, "d-wasserstein-barycenter-exact-lp-vs-entropic-regularization"]], "Gaussian Data": [[11, "gaussian-data"]], "Stair Data": [[11, "stair-data"]], "Dirac Data": [[11, "dirac-data"]], "Final figure": [[11, "final-figure"]], "Convolutional Wasserstein Barycenter example": [[12, "convolutional-wasserstein-barycenter-example"]], "Data preparation": [[12, "data-preparation"], [31, "data-preparation"]], "Barycenter computation and visualization": [[12, "barycenter-computation-and-visualization"], [13, "barycenter-computation-and-visualization"]], "Debiased Sinkhorn barycenter demo": [[13, "debiased-sinkhorn-barycenter-demo"]], "Debiased barycenter of 1D Gaussians": [[13, "debiased-barycenter-of-1d-gaussians"]], "Debiased barycenter of 2D images": [[13, "debiased-barycenter-of-2d-images"]], "2D free support Wasserstein barycenters of distributions": [[14, "d-free-support-wasserstein-barycenters-of-distributions"]], "Compute free support Wasserstein barycenter": [[14, "compute-free-support-wasserstein-barycenter"]], "Plot the Wasserstein barycenter": [[14, "plot-the-wasserstein-barycenter"], [14, "id1"]], "2D free support Sinkhorn barycenters of distributions": [[15, "d-free-support-sinkhorn-barycenters-of-distributions"]], "General Parameters": [[15, "general-parameters"]], "Generate Data": [[15, "generate-data"]], "Inspect generated distributions": [[15, "inspect-generated-distributions"]], "Interpolating Empirical Distributions": [[15, "interpolating-empirical-distributions"]], "Generalized Wasserstein Barycenter Demo": [[16, "generalized-wasserstein-barycenter-demo"]], "Generate and plot data": [[16, "generate-and-plot-data"]], "Barycenter computation and plot": [[16, "barycenter-computation-and-plot"]], "Plotting projection matches": [[16, "plotting-projection-matches"]], "Rotation animation": [[16, "rotation-animation"]], "OT for domain adaptation": [[18, "ot-for-domain-adaptation"]], "Instantiate the different transport algorithms and fit them": [[18, "instantiate-the-different-transport-algorithms-and-fit-them"], [19, "instantiate-the-different-transport-algorithms-and-fit-them"], [20, "instantiate-the-different-transport-algorithms-and-fit-them"], [22, "instantiate-the-different-transport-algorithms-and-fit-them"], [24, "instantiate-the-different-transport-algorithms-and-fit-them"]], "Fig 1 : plots source and target samples": [[18, "fig-1-plots-source-and-target-samples"], [21, "fig-1-plots-source-and-target-samples"], [22, "fig-1-plots-source-and-target-samples"]], "Fig 2 : plot optimal couplings and transported samples": [[18, "fig-2-plot-optimal-couplings-and-transported-samples"], [21, "fig-2-plot-optimal-couplings-and-transported-samples"], [22, "fig-2-plot-optimal-couplings-and-transported-samples"]], "OT for image color adaptation": [[19, "ot-for-image-color-adaptation"]], "Plot original image": [[19, "plot-original-image"]], "Scatter plot of colors": [[19, "scatter-plot-of-colors"]], "Plot new images": [[19, "plot-new-images"]], "OT for domain adaptation on empirical distributions": [[20, "ot-for-domain-adaptation-on-empirical-distributions"]], "Fig 1 : plots source and target samples + matrix of pairwise distance": [[20, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"], [26, "fig-1-plots-source-and-target-samples-matrix-of-pairwise-distance"]], "Fig 2 : plots optimal couplings for the different methods": [[20, "fig-2-plots-optimal-couplings-for-the-different-methods"], [26, "fig-2-plots-optimal-couplings-for-the-different-methods"]], "Fig 3 : plot transported samples": [[20, "fig-3-plot-transported-samples"], [26, "fig-3-plot-transported-samples"]], "OT for multi-source target shift": [[21, "ot-for-multi-source-target-shift"]], "Instantiate Sinkhorn transport algorithm and fit them for all source domains": [[21, "instantiate-sinkhorn-transport-algorithm-and-fit-them-for-all-source-domains"]], "Instantiate JCPOT adaptation algorithm and fit it": [[21, "instantiate-jcpot-adaptation-algorithm-and-fit-it"]], "Run oracle transport algorithm with known proportions": [[21, "run-oracle-transport-algorithm-with-known-proportions"]], "OT with Laplacian regularization for domain adaptation": [[22, "ot-with-laplacian-regularization-for-domain-adaptation"]], "Linear OT mapping estimation": [[23, "linear-ot-mapping-estimation"]], "Estimate linear mapping and transport": [[23, "estimate-linear-mapping-and-transport"]], "Plot transported samples": [[23, "plot-transported-samples"], [24, "plot-transported-samples"]], "Load image data": [[23, "load-image-data"]], "Estimate mapping and adapt": [[23, "estimate-mapping-and-adapt"]], "Plot transformed images": [[23, "plot-transformed-images"], [25, "plot-transformed-images"]], "OT mapping estimation for domain adaptation": [[24, "ot-mapping-estimation-for-domain-adaptation"]], "OT for image color adaptation with mapping estimation": [[25, "ot-for-image-color-adaptation-with-mapping-estimation"]], "Domain adaptation for pixel distribution transfer": [[25, "domain-adaptation-for-pixel-distribution-transfer"]], "Plot original images": [[25, "plot-original-images"]], "Plot pixel values distribution": [[25, "plot-pixel-values-distribution"]], "OTDA unsupervised vs semi-supervised setting": [[26, "otda-unsupervised-vs-semi-supervised-setting"]], "Transport source samples onto target samples": [[26, "transport-source-samples-onto-target-samples"]], "Plot graphs barycenter using FGW": [[28, "plot-graphs-barycenter-using-fgw"]], "Plot Barycenter": [[28, "plot-barycenter"]], "Plot Fused-Gromov-Wasserstein": [[29, "plot-fused-gromov-wasserstein"]], "Create structure matrices and across-feature distance matrix": [[29, "create-structure-matrices-and-across-feature-distance-matrix"]], "Plot matrices": [[29, "plot-matrices"]], "Compute FGW/GW": [[29, "compute-fgw-gw"]], "Visualize transport matrices": [[29, "visualize-transport-matrices"]], "Gromov-Wasserstein example": [[30, "gromov-wasserstein-example"]], "Sample two Gaussian distributions (2D and 3D)": [[30, "sample-two-gaussian-distributions-2d-and-3d"]], "Plotting the distributions": [[30, "plotting-the-distributions"]], "Compute distance kernels, normalize them and then display": [[30, "compute-distance-kernels-normalize-them-and-then-display"]], "Compute Gromov-Wasserstein plans and distance": [[30, "compute-gromov-wasserstein-plans-and-distance"]], "Compute GW with a scalable stochastic method with any loss function": [[30, "compute-gw-with-a-scalable-stochastic-method-with-any-loss-function"]], "Gromov-Wasserstein Barycenter example": [[31, "gromov-wasserstein-barycenter-example"]], "Smacof MDS": [[31, "smacof-mds"]], "Visualization": [[31, "visualization"]], "(Fused) Gromov-Wasserstein Linear Dictionary Learning": [[32, "fused-gromov-wasserstein-linear-dictionary-learning"]], "Generate a dataset composed of graphs following Stochastic Block models of 1, 2 and 3 clusters.": [[32, "generate-a-dataset-composed-of-graphs-following-stochastic-block-models-of-1-2-and-3-clusters"]], "Estimate the Gromov-Wasserstein dictionary from the dataset": [[32, "estimate-the-gromov-wasserstein-dictionary-from-the-dataset"]], "Visualization of the estimated dictionary atoms": [[32, "visualization-of-the-estimated-dictionary-atoms"], [32, "id1"]], "Visualization of the embedding space": [[32, "visualization-of-the-embedding-space"], [32, "id2"]], "Endow the dataset with node features": [[32, "endow-the-dataset-with-node-features"]], "Estimate a Fused Gromov-Wasserstein dictionary from the dataset of attributed graphs": [[32, "estimate-a-fused-gromov-wasserstein-dictionary-from-the-dataset-of-attributed-graphs"]], "Semi-relaxed (Fused) Gromov-Wasserstein example": [[33, "semi-relaxed-fused-gromov-wasserstein-example"]], "Generate two graphs following Stochastic Block models of 2 and 3 clusters.": [[33, "generate-two-graphs-following-stochastic-block-models-of-2-and-3-clusters"]], "Compute their semi-relaxed Gromov-Wasserstein divergences": [[33, "compute-their-semi-relaxed-gromov-wasserstein-divergences"]], "Visualization of the semi-relaxed Gromov-Wasserstein matchings": [[33, "visualization-of-the-semi-relaxed-gromov-wasserstein-matchings"]], "Add node features": [[33, "add-node-features"]], "Compute their semi-relaxed Fused Gromov-Wasserstein divergences": [[33, "compute-their-semi-relaxed-fused-gromov-wasserstein-divergences"]], "Visualization of the semi-relaxed Fused Gromov-Wasserstein matchings": [[33, "visualization-of-the-semi-relaxed-fused-gromov-wasserstein-matchings"]], "Examples gallery": [[35, "examples-gallery"]], "OT and regularized OT": [[35, "ot-and-regularized-ot"]], "POT backend examples": [[35, "pot-backend-examples"]], "Wasserstein barycenters": [[35, "wasserstein-barycenters"]], "Domain adaptation examples": [[35, "domain-adaptation-examples"]], "Gromov and Fused-Gromov-Wasserstein": [[35, "gromov-and-fused-gromov-wasserstein"]], "Other OT problems": [[35, "other-ot-problems"]], "Sliced Wasserstein Distance": [[35, "sliced-wasserstein-distance"]], "Unbalanced and Partial OT": [[35, "unbalanced-and-partial-ot"]], "Row and column alignments with CO-Optimal Transport": [[36, "row-and-column-alignments-with-co-optimal-transport"]], "Wasserstein Discriminant Analysis": [[37, "wasserstein-discriminant-analysis"], [87, "wasserstein-discriminant-analysis"]], "Compute Fisher Discriminant Analysis": [[37, "compute-fisher-discriminant-analysis"]], "Compute Wasserstein Discriminant Analysis": [[37, "compute-wasserstein-discriminant-analysis"]], "Plot 2D projections": [[37, "plot-2d-projections"]], "Weak Optimal Transport VS exact Optimal Transport": [[38, "weak-optimal-transport-vs-exact-optimal-transport"]], "Generate data an plot it": [[38, "generate-data-an-plot-it"], [39, "generate-data-an-plot-it"]], "Compute Weak OT and exact OT solutions": [[38, "compute-weak-ot-and-exact-ot-solutions"]], "Plot weak OT and exact OT solutions": [[38, "plot-weak-ot-and-exact-ot-solutions"]], "Optimal transport with factored couplings": [[39, "optimal-transport-with-factored-couplings"]], "Compute Factored OT and exact OT solutions": [[39, "compute-factored-ot-and-exact-ot-solutions"]], "Plot factored OT and exact OT solutions": [[39, "plot-factored-ot-and-exact-ot-solutions"]], "Learning sample marginal distribution with CO-Optimal Transport": [[40, "learning-sample-marginal-distribution-with-co-optimal-transport"]], "Optimize the COOT distance with respect to the sample marginal distribution": [[40, "optimize-the-coot-distance-with-respect-to-the-sample-marginal-distribution"]], "Visualizing the row and column alignments with the estimated sample marginal distribution": [[40, "visualizing-the-row-and-column-alignments-with-the-estimated-sample-marginal-distribution"]], "Logo of the POT toolbox": [[41, "logo-of-the-pot-toolbox"]], "Data for logo": [[41, "data-for-logo"]], "Plot the logo (clear background)": [[41, "plot-the-logo-clear-background"]], "Plot the logo (dark background)": [[41, "plot-the-logo-dark-background"]], "Screened optimal transport (Screenkhorn)": [[42, "screened-optimal-transport-screenkhorn"]], "Plot distributions and loss matrix": [[42, "plot-distributions-and-loss-matrix"], [46, "plot-distributions-and-loss-matrix"], [47, "plot-distributions-and-loss-matrix"], [57, "plot-distributions-and-loss-matrix"]], "Solve Screenkhorn": [[42, "solve-screenkhorn"]], "Stochastic examples": [[43, "stochastic-examples"]], "Compute the Transportation Matrix for the Semi-Dual Problem": [[43, "compute-the-transportation-matrix-for-the-semi-dual-problem"]], "Discrete case": [[43, "discrete-case"]], "Semi-Continuous Case": [[43, "semi-continuous-case"]], "Plot Transportation Matrices": [[43, "plot-transportation-matrices"], [43, "id2"]], "Compute the Transportation Matrix for the Dual Problem": [[43, "compute-the-transportation-matrix-for-the-dual-problem"]], "Semi-continuous case": [[43, "id1"]], "Compare the results with the Sinkhorn algorithm": [[43, "compare-the-results-with-the-sinkhorn-algorithm"]], "Introduction to Optimal Transport with Python": [[45, "introduction-to-optimal-transport-with-python"]], "POT Python Optimal Transport Toolbox": [[45, "pot-python-optimal-transport-toolbox"]], "POT installation": [[45, "pot-installation"]], "Import the toolbox": [[45, "import-the-toolbox"]], "Getting help": [[45, "getting-help"]], "First OT Problem": [[45, "first-ot-problem"]], "Plotting bakeries in the city": [[45, "plotting-bakeries-in-the-city"]], "Cost matrix": [[45, "cost-matrix"]], "Solving the OT problem with ot.emd": [[45, "solving-the-ot-problem-with-ot-emd"]], "Transportation plan visualization": [[45, "transportation-plan-visualization"]], "OT loss and dual variables": [[45, "ot-loss-and-dual-variables"]], "Regularized OT with Sinkhorn": [[45, "regularized-ot-with-sinkhorn"]], "Algorithm": [[45, "algorithm"]], "Plot the matrix and the map": [[45, "plot-the-matrix-and-the-map"]], "Varying the regularization parameter in Sinkhorn": [[45, "varying-the-regularization-parameter-in-sinkhorn"]], "Wasserstein loss and computational time": [[45, "wasserstein-loss-and-computational-time"]], "Optimal Transport for 1D distributions": [[46, "optimal-transport-for-1d-distributions"]], "Solve EMD": [[46, "solve-emd"], [52, "solve-emd"]], "Solve Sinkhorn": [[46, "solve-sinkhorn"]], "Smooth and sparse OT example": [[47, "smooth-and-sparse-ot-example"]], "Solve Smooth OT": [[47, "solve-smooth-ot"]], "Optimal Transport between 2D empirical distributions": [[48, "optimal-transport-between-2d-empirical-distributions"]], "Compute EMD": [[48, "compute-emd"]], "Compute Sinkhorn": [[48, "compute-sinkhorn"]], "Empirical Sinkhorn": [[48, "empirical-sinkhorn"]], "Optimal Transport with different ground metrics": [[49, "optimal-transport-with-different-ground-metrics"]], "Dataset 1 : uniform sampling": [[49, "dataset-1-uniform-sampling"]], "Dataset 1 : Plot OT Matrices": [[49, "dataset-1-plot-ot-matrices"]], "Dataset 2 : Partial circle": [[49, "dataset-2-partial-circle"]], "Dataset 2 : Plot  OT Matrices": [[49, "dataset-2-plot-ot-matrices"]], "OT distances in 1D": [[50, "ot-distances-in-1d"]], "Compute EMD for the different losses": [[50, "compute-emd-for-the-different-losses"]], "Compute Sinkhorn for the different losses": [[50, "compute-sinkhorn-for-the-different-losses"]], "OT distance on the Circle": [[51, "ot-distance-on-the-circle"]], "Compare the Euclidean Wasserstein distance with the Wasserstein distance on the  circle": [[51, "compare-the-euclidean-wasserstein-distance-with-the-wasserstein-distance-on-the-circle"]], "Wasserstein distance between von Mises and uniform for different kappa": [[51, "wasserstein-distance-between-von-mises-and-uniform-for-different-kappa"]], "Regularized OT with generic solver": [[52, "regularized-ot-with-generic-solver"]], "Solve EMD with Frobenius norm regularization": [[52, "solve-emd-with-frobenius-norm-regularization"]], "Solve EMD with entropic regularization": [[52, "solve-emd-with-entropic-regularization"]], "Solve EMD with Frobenius norm + entropic regularization": [[52, "solve-emd-with-frobenius-norm-entropic-regularization"]], "Sliced Wasserstein Distance on 2D distributions": [[54, "sliced-wasserstein-distance-on-2d-distributions"]], "Sliced Wasserstein distance for different seeds and number of projections": [[54, "sliced-wasserstein-distance-for-different-seeds-and-number-of-projections"]], "Plot Sliced Wasserstein Distance": [[54, "plot-sliced-wasserstein-distance"]], "Spherical Sliced Wasserstein on distributions in S^2": [[55, "spherical-sliced-wasserstein-on-distributions-in-s-2"]], "Spherical Sliced Wasserstein for different seeds and number of projections": [[55, "spherical-sliced-wasserstein-for-different-seeds-and-number-of-projections"]], "Plot Spherical Sliced Wasserstein": [[55, "plot-spherical-sliced-wasserstein"]], "1D Unbalanced optimal transport": [[57, "d-unbalanced-optimal-transport"]], "Solve Unbalanced Sinkhorn": [[57, "solve-unbalanced-sinkhorn"]], "plot the transported mass": [[57, "plot-the-transported-mass"]], "1D Wasserstein barycenter demo for Unbalanced distributions": [[58, "d-wasserstein-barycenter-demo-for-unbalanced-distributions"]], "Partial Wasserstein and Gromov-Wasserstein example": [[59, "partial-wasserstein-and-gromov-wasserstein-example"]], "Sample two 2D Gaussian distributions and plot them": [[59, "sample-two-2d-gaussian-distributions-and-plot-them"]], "Compute partial Wasserstein plans and distance": [[59, "compute-partial-wasserstein-plans-and-distance"]], "Sample one 2D and 3D Gaussian distributions and plot them": [[59, "sample-one-2d-and-3d-gaussian-distributions-and-plot-them"]], "Compute partial Gromov-Wasserstein plans and distance": [[59, "compute-partial-gromov-wasserstein-plans-and-distance"]], "Regularization path of l2-penalized unbalanced optimal transport": [[60, "regularization-path-of-l2-penalized-unbalanced-optimal-transport"]], "Compute semi-relaxed and fully relaxed regularization paths": [[60, "compute-semi-relaxed-and-fully-relaxed-regularization-paths"]], "Plot the regularization path": [[60, "plot-the-regularization-path"]], "Animation of the regpath for UOT l2": [[60, "animation-of-the-regpath-for-uot-l2"]], "Plot the semi-relaxed regularization path": [[60, "plot-the-semi-relaxed-regularization-path"]], "Animation of the regpath for semi-relaxed UOT l2": [[60, "animation-of-the-regpath-for-semi-relaxed-uot-l2"]], "2D examples of exact and entropic unbalanced optimal transport": [[61, "d-examples-of-exact-and-entropic-unbalanced-optimal-transport"]], "Compute entropic kl-regularized UOT, kl- and l2-regularized UOT": [[61, "compute-entropic-kl-regularized-uot-kl-and-l2-regularized-uot"]], "Plot the results": [[61, "plot-the-results"]], "Code of conduct": [[63, "code-of-conduct"]], "Our Pledge": [[63, "our-pledge"]], "Our Standards": [[63, "our-standards"]], "Our Responsibilities": [[63, "our-responsibilities"]], "Scope": [[63, "scope"]], "Enforcement": [[63, "enforcement"]], "Attribution": [[63, "attribution"]], "Contributing to POT": [[64, "contributing-to-pot"]], "How to contribute": [[64, "how-to-contribute"]], "Pull Request Checklist": [[64, "pull-request-checklist"]], "Filing bugs": [[64, "filing-bugs"]], "New contributor tips": [[64, "new-contributor-tips"]], "Documentation": [[64, "documentation"]], "Contributors": [[65, "contributors"], [65, "contributors"]], "Creators and Maintainers": [[65, "creators-and-maintainers"]], "Acknowledgments": [[65, "acknowledgments"]], "ot.backend": [[66, "module-ot.backend"]], "Performance": [[66, "performance"]], "Functions": [[66, "functions"], [67, "functions"], [68, "functions"], [69, "functions"], [70, "functions"], [71, "functions"], [72, "functions"], [73, "functions"], [75, "functions"], [76, "functions"], [77, "functions"], [78, "functions"], [79, "functions"], [80, "functions"], [81, "functions"], [82, "functions"], [83, "functions"], [84, "functions"], [85, "functions"]], "Classes": [[66, "classes"], [69, "classes"], [81, "classes"], [84, "classes"]], "ot.bregman": [[67, "module-ot.bregman"]], "Examples using ot.bregman.barycenter_debiased": [[67, "examples-using-ot-bregman-barycenter-debiased"]], "Examples using ot.bregman.convolutional_barycenter2d": [[67, "examples-using-ot-bregman-convolutional-barycenter2d"]], "Examples using ot.bregman.convolutional_barycenter2d_debiased": [[67, "examples-using-ot-bregman-convolutional-barycenter2d-debiased"]], "Examples using ot.bregman.empirical_sinkhorn": [[67, "examples-using-ot-bregman-empirical-sinkhorn"]], "Examples using ot.bregman.free_support_sinkhorn_barycenter": [[67, "examples-using-ot-bregman-free-support-sinkhorn-barycenter"]], "Dependency": [[67, null], [67, null]], "Examples using ot.bregman.screenkhorn": [[67, "examples-using-ot-bregman-screenkhorn"]], "ot.coot": [[68, "module-ot.coot"]], "Examples using ot.coot.co_optimal_transport": [[68, "examples-using-ot-coot-co-optimal-transport"]], "Examples using ot.coot.co_optimal_transport2": [[68, "examples-using-ot-coot-co-optimal-transport2"]], "ot.da": [[69, "module-ot.da"]], "Examples using ot.da.BaseTransport": [[69, "examples-using-ot-da-basetransport"]], "Examples using ot.da.EMDLaplaceTransport": [[69, "examples-using-ot-da-emdlaplacetransport"]], "Examples using ot.da.EMDTransport": [[69, "examples-using-ot-da-emdtransport"]], "Examples using ot.da.JCPOTTransport": [[69, "examples-using-ot-da-jcpottransport"]], "Examples using ot.da.LinearTransport": [[69, "examples-using-ot-da-lineartransport"]], "Examples using ot.da.MappingTransport": [[69, "examples-using-ot-da-mappingtransport"]], "Examples using ot.da.SinkhornL1l2Transport": [[69, "examples-using-ot-da-sinkhornl1l2transport"]], "Examples using ot.da.SinkhornLpl1Transport": [[69, "examples-using-ot-da-sinkhornlpl1transport"]], "Examples using ot.da.SinkhornTransport": [[69, "examples-using-ot-da-sinkhorntransport"]], "ot.datasets": [[70, "module-ot.datasets"]], "Examples using ot.datasets.make_1D_gauss": [[70, "examples-using-ot-datasets-make-1d-gauss"]], "Examples using ot.datasets.make_2D_samples_gauss": [[70, "examples-using-ot-datasets-make-2d-samples-gauss"]], "Examples using ot.datasets.make_data_classif": [[70, "examples-using-ot-datasets-make-data-classif"]], "ot.dr": [[71, "module-ot.dr"]], "Examples using ot.dr.fda": [[71, "examples-using-ot-dr-fda"]], "Examples using ot.dr.wda": [[71, "examples-using-ot-dr-wda"]], "ot.factored": [[72, "module-ot.factored"]], "ot.gaussian": [[73, "module-ot.gaussian"]], "Examples using ot.gaussian.empirical_bures_wasserstein_mapping": [[73, "examples-using-ot-gaussian-empirical-bures-wasserstein-mapping"]], "ot.gromov": [[74, "module-ot.gromov"]], "ot.lp": [[75, "module-ot.lp"]], "Examples using ot.lp.free_support_barycenter": [[75, "examples-using-ot-lp-free-support-barycenter"]], "Examples using ot.lp.generalized_free_support_barycenter": [[75, "examples-using-ot-lp-generalized-free-support-barycenter"]], "ot.optim": [[76, "module-ot.optim"]], "Examples using ot.optim.cg": [[76, "examples-using-ot-optim-cg"]], "Examples using ot.optim.gcg": [[76, "examples-using-ot-optim-gcg"]], "ot.partial": [[77, "module-ot.partial"]], "Examples using ot.partial.entropic_partial_gromov_wasserstein": [[77, "examples-using-ot-partial-entropic-partial-gromov-wasserstein"]], "Examples using ot.partial.entropic_partial_wasserstein": [[77, "examples-using-ot-partial-entropic-partial-wasserstein"]], "Examples using ot.partial.partial_gromov_wasserstein": [[77, "examples-using-ot-partial-partial-gromov-wasserstein"]], "Examples using ot.partial.partial_wasserstein": [[77, "examples-using-ot-partial-partial-wasserstein"]], "ot.plot": [[78, "module-ot.plot"]], "Examples using ot.plot.plot1D_mat": [[78, "examples-using-ot-plot-plot1d-mat"]], "Examples using ot.plot.plot2D_samples_mat": [[78, "examples-using-ot-plot-plot2d-samples-mat"]], "ot.regpath": [[79, "module-ot.regpath"]], "Examples using ot.regpath.compute_transport_plan": [[79, "examples-using-ot-regpath-compute-transport-plan"]], "Examples using ot.regpath.regularization_path": [[79, "examples-using-ot-regpath-regularization-path"]], "ot.sliced": [[80, "module-ot.sliced"]], "ot.smooth": [[81, "module-ot.smooth"]], "Examples using ot.smooth.smooth_ot_dual": [[81, "examples-using-ot-smooth-smooth-ot-dual"]], "ot.stochastic": [[82, "module-ot.stochastic"]], "Examples using ot.stochastic.loss_dual_entropic": [[82, "examples-using-ot-stochastic-loss-dual-entropic"]], "Examples using ot.stochastic.loss_dual_quadratic": [[82, "examples-using-ot-stochastic-loss-dual-quadratic"]], "Examples using ot.stochastic.plan_dual_entropic": [[82, "examples-using-ot-stochastic-plan-dual-entropic"]], "Examples using ot.stochastic.plan_dual_quadratic": [[82, "examples-using-ot-stochastic-plan-dual-quadratic"]], "Examples using ot.stochastic.solve_dual_entropic": [[82, "examples-using-ot-stochastic-solve-dual-entropic"]], "Examples using ot.stochastic.solve_semi_dual_entropic": [[82, "examples-using-ot-stochastic-solve-semi-dual-entropic"]], "ot.unbalanced": [[83, "module-ot.unbalanced"]], "Examples using ot.unbalanced.mm_unbalanced": [[83, "examples-using-ot-unbalanced-mm-unbalanced"]], "ot.utils": [[84, "module-ot.utils"]], "Examples using ot.utils.dist0": [[84, "examples-using-ot-utils-dist0"]], "Examples using ot.utils.proj_simplex": [[84, "examples-using-ot-utils-proj-simplex"]], "Examples using ot.utils.BaseEstimator": [[84, "examples-using-ot-utils-baseestimator"]], "Exceptions": [[84, "exceptions"]], "ot.weak": [[85, "module-ot.weak"]], "POT: Python Optimal Transport": [[86, "pot-python-optimal-transport"], [86, "pot-python-optimal-transport"]], "Contents": [[86, "contents"]], "Using and citing the toolbox": [[86, "using-and-citing-the-toolbox"]], "Installation": [[86, "installation"]], "Pip installation": [[86, "pip-installation"]], "Anaconda installation with conda-forge": [[86, "anaconda-installation-with-conda-forge"]], "Post installation check": [[86, "post-installation-check"]], "Dependencies": [[86, "dependencies"]], "Examples": [[86, "examples"]], "Short examples": [[86, "short-examples"]], "Examples and Notebooks": [[86, "examples-and-notebooks"]], "Acknowledgements": [[86, "acknowledgements"]], "Contributions and code of conduct": [[86, "contributions-and-code-of-conduct"]], "Support": [[86, "support"]], "References": [[86, "references"], [87, "references"]], "Indices and tables": [[86, "indices-and-tables"]], "Quick start guide": [[87, "quick-start-guide"]], "Why Optimal Transport ?": [[87, "why-optimal-transport"]], "When to use OT": [[87, "when-to-use-ot"]], "Wasserstein distance between distributions": [[87, "wasserstein-distance-between-distributions"]], "OT for mapping estimation": [[87, "ot-for-mapping-estimation"]], "When to use POT": [[87, "when-to-use-pot"]], "When not to use POT": [[87, "when-not-to-use-pot"]], "Optimal transport and Wasserstein distance": [[87, "optimal-transport-and-wasserstein-distance"]], "Solving optimal transport": [[87, "solving-optimal-transport"]], "Examples of use for ot.emd": [[87, "examples-of-use-for-ot-emd"]], "Computing Wasserstein distance": [[87, "computing-wasserstein-distance"]], "Examples of use for ot.emd2": [[87, "examples-of-use-for-ot-emd2"]], "Special cases": [[87, "special-cases"]], "Regularized Optimal Transport": [[87, "regularized-optimal-transport"]], "Entropic regularized OT": [[87, "entropic-regularized-ot"]], "Examples of use for ot.sinkhorn": [[87, "examples-of-use-for-ot-sinkhorn"]], "Examples of use for ot.sinkhorn2": [[87, "examples-of-use-for-ot-sinkhorn2"]], "Other regularizations": [[87, "other-regularizations"]], "Quadratic regularization": [[87, "quadratic-regularization"]], "Examples of use of quadratic regularization": [[87, "examples-of-use-of-quadratic-regularization"]], "Group Lasso regularization": [[87, "group-lasso-regularization"]], "Examples of group Lasso regularization": [[87, "examples-of-group-lasso-regularization"]], "Generic solvers": [[87, "generic-solvers"]], "Examples of the generic solvers": [[87, "examples-of-the-generic-solvers"]], "Wasserstein Barycenters": [[87, "wasserstein-barycenters"]], "Barycenters with fixed support": [[87, "barycenters-with-fixed-support"]], "Examples of Wasserstein and regularized Wasserstein barycenters": [[87, "examples-of-wasserstein-and-regularized-wasserstein-barycenters"]], "An example of convolutional barycenter (ot.bregman.convolutional_barycenter2d) computation": [[87, "an-example-of-convolutional-barycenter-ot-bregman-convolutional-barycenter2d-computation"]], "Barycenters with free support": [[87, "barycenters-with-free-support"]], "Examples of free support barycenter estimation": [[87, "examples-of-free-support-barycenter-estimation"]], "Monge mapping and Domain adaptation": [[87, "monge-mapping-and-domain-adaptation"]], "Monge Mapping estimation": [[87, "monge-mapping-estimation"]], "Domain adaptation classes": [[87, "domain-adaptation-classes"]], "Examples of the use of OTDA classes": [[87, "examples-of-the-use-of-otda-classes"]], "Unbalanced and partial OT": [[87, "unbalanced-and-partial-ot"]], "Unbalanced optimal transport": [[87, "unbalanced-optimal-transport"]], "Examples of Unbalanced OT": [[87, "examples-of-unbalanced-ot"]], "Unbalanced Barycenters": [[87, "unbalanced-barycenters"]], "Examples of Unbalanced OT barycenters": [[87, "examples-of-unbalanced-ot-barycenters"]], "Partial optimal transport": [[87, "partial-optimal-transport"]], "Examples of Partial OT": [[87, "examples-of-partial-ot"]], "Gromov Wasserstein and extensions": [[87, "gromov-wasserstein-and-extensions"]], "Gromov Wasserstein(GW)": [[87, "gromov-wasserstein-gw"]], "Examples of computation of GW, regularized G and FGW": [[87, "examples-of-computation-of-gw-regularized-g-and-fgw"]], "Gromov Wasserstein barycenters": [[87, "gromov-wasserstein-barycenters"]], "Examples of GW, regularized G and FGW barycenters": [[87, "examples-of-gw-regularized-g-and-fgw-barycenters"]], "Other applications": [[87, "other-applications"]], "Examples of the use of WDA": [[87, "examples-of-the-use-of-wda"]], "Solving OT with Multiple backends on CPU/GPU": [[87, "solving-ot-with-multiple-backends-on-cpu-gpu"]], "How it works": [[87, "how-it-works"]], "GPU acceleration": [[87, "gpu-acceleration"]], "List of compatible Backends": [[87, "list-of-compatible-backends"]], "List of compatible modules": [[87, "list-of-compatible-modules"]], "FAQ": [[87, "faq"]], "Releases": [[88, "releases"]], "0.9.1dev": [[88, "dev"]], "New features": [[88, "new-features"], [88, "id2"], [88, "id5"], [88, "id10"], [88, "id13"]], "Closed issues": [[88, "closed-issues"], [88, "id3"], [88, "id6"], [88, "id8"], [88, "id11"], [88, "id14"], [88, "id16"], [88, "id19"], [88, "id22"], [88, "id25"]], "0.9.0": [[88, "id1"]], "0.8.2": [[88, "id4"]], "0.8.1.0": [[88, "id7"]], "0.8.1": [[88, "id9"]], "0.8.0": [[88, "id12"]], "0.7.0": [[88, "id15"]], "Features": [[88, "features"], [88, "id18"], [88, "id21"], [88, "id24"]], "0.6.0": [[88, "id17"]], "0.5.0": [[88, "id20"]], "Deprecation": [[88, "deprecation"]], "0.4": [[88, "id23"]], "0.3.1": [[88, "id26"]], "0.3": [[88, "id27"]], "V0.2": [[88, "v0-2"]], "0.1.11": [[88, "id28"]], "0.1.10": [[88, "id29"]], "0.1.9": [[88, "id30"]], "0.1.7": [[88, "id31"]], "0.1.3": [[88, "id32"]], "First pre-release": [[88, "first-pre-release"]]}, "indexentries": {"barycenter() (in module ot)": [[0, "ot.barycenter"]], "barycenter_unbalanced() (in module ot)": [[0, "ot.barycenter_unbalanced"]], "binary_search_circle() (in module ot)": [[0, "ot.binary_search_circle"]], "dist() (in module ot)": [[0, "ot.dist"]], "emd() (in module ot)": [[0, "ot.emd"]], "emd2() (in module ot)": [[0, "ot.emd2"]], "emd2_1d() (in module ot)": [[0, "ot.emd2_1d"]], "emd_1d() (in module ot)": [[0, "ot.emd_1d"]], "factored_optimal_transport() (in module ot)": [[0, "ot.factored_optimal_transport"]], "fused_gromov_wasserstein() (in module ot)": [[0, "ot.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot)": [[0, "ot.fused_gromov_wasserstein2"]], "gromov_barycenters() (in module ot)": [[0, "ot.gromov_barycenters"]], "gromov_wasserstein() (in module ot)": [[0, "ot.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot)": [[0, "ot.gromov_wasserstein2"]], "max_sliced_wasserstein_distance() (in module ot)": [[0, "ot.max_sliced_wasserstein_distance"]], "module": [[0, "module-ot"], [66, "module-ot.backend"], [67, "module-ot.bregman"], [68, "module-ot.coot"], [69, "module-ot.da"], [70, "module-ot.datasets"], [71, "module-ot.dr"], [72, "module-ot.factored"], [73, "module-ot.gaussian"], [74, "module-ot.gromov"], [75, "module-ot.lp"], [76, "module-ot.optim"], [77, "module-ot.partial"], [78, "module-ot.plot"], [79, "module-ot.regpath"], [80, "module-ot.sliced"], [81, "module-ot.smooth"], [82, "module-ot.stochastic"], [83, "module-ot.unbalanced"], [84, "module-ot.utils"], [85, "module-ot.weak"]], "ot": [[0, "module-ot"]], "semidiscrete_wasserstein2_unif_circle() (in module ot)": [[0, "ot.semidiscrete_wasserstein2_unif_circle"]], "sinkhorn() (in module ot)": [[0, "ot.sinkhorn"]], "sinkhorn2() (in module ot)": [[0, "ot.sinkhorn2"]], "sinkhorn_lpl1_mm() (in module ot)": [[0, "ot.sinkhorn_lpl1_mm"]], "sinkhorn_unbalanced() (in module ot)": [[0, "ot.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot)": [[0, "ot.sinkhorn_unbalanced2"]], "sliced_wasserstein_distance() (in module ot)": [[0, "ot.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot)": [[0, "ot.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot)": [[0, "ot.sliced_wasserstein_sphere_unif"]], "solve() (in module ot)": [[0, "ot.solve"]], "tic() (in module ot)": [[0, "ot.tic"]], "toc() (in module ot)": [[0, "ot.toc"]], "toq() (in module ot)": [[0, "ot.toq"]], "unif() (in module ot)": [[0, "ot.unif"]], "wasserstein_1d() (in module ot)": [[0, "ot.wasserstein_1d"]], "wasserstein_circle() (in module ot)": [[0, "ot.wasserstein_circle"]], "weak_optimal_transport() (in module ot)": [[0, "ot.weak_optimal_transport"]], "backend (class in ot.backend)": [[66, "id0"], [66, "ot.backend.Backend"]], "cupybackend (class in ot.backend)": [[66, "id79"], [66, "ot.backend.CupyBackend"]], "jaxbackend (class in ot.backend)": [[66, "id156"], [66, "ot.backend.JaxBackend"]], "numpybackend (class in ot.backend)": [[66, "id233"], [66, "ot.backend.NumpyBackend"]], "tensorflowbackend (class in ot.backend)": [[66, "id310"], [66, "ot.backend.TensorflowBackend"]], "torchbackend (class in ot.backend)": [[66, "id387"], [66, "ot.backend.TorchBackend"]], "abs() (ot.backend.backend method)": [[66, "id1"], [66, "ot.backend.Backend.abs"]], "abs() (ot.backend.cupybackend method)": [[66, "id80"], [66, "ot.backend.CupyBackend.abs"]], "abs() (ot.backend.jaxbackend method)": [[66, "id157"], [66, "ot.backend.JaxBackend.abs"]], "abs() (ot.backend.numpybackend method)": [[66, "id234"], [66, "ot.backend.NumpyBackend.abs"]], "abs() (ot.backend.tensorflowbackend method)": [[66, "id311"], [66, "ot.backend.TensorflowBackend.abs"]], "abs() (ot.backend.torchbackend method)": [[66, "id388"], [66, "ot.backend.TorchBackend.abs"]], "allclose() (ot.backend.backend method)": [[66, "id2"], [66, "ot.backend.Backend.allclose"]], "allclose() (ot.backend.cupybackend method)": [[66, "id81"], [66, "ot.backend.CupyBackend.allclose"]], "allclose() (ot.backend.jaxbackend method)": [[66, "id158"], [66, "ot.backend.JaxBackend.allclose"]], "allclose() (ot.backend.numpybackend method)": [[66, "id235"], [66, "ot.backend.NumpyBackend.allclose"]], "allclose() (ot.backend.tensorflowbackend method)": [[66, "id312"], [66, "ot.backend.TensorflowBackend.allclose"]], "allclose() (ot.backend.torchbackend method)": [[66, "id389"], [66, "ot.backend.TorchBackend.allclose"]], "any() (ot.backend.backend method)": [[66, "id3"], [66, "ot.backend.Backend.any"]], "any() (ot.backend.cupybackend method)": [[66, "id82"], [66, "ot.backend.CupyBackend.any"]], "any() (ot.backend.jaxbackend method)": [[66, "id159"], [66, "ot.backend.JaxBackend.any"]], "any() (ot.backend.numpybackend method)": [[66, "id236"], [66, "ot.backend.NumpyBackend.any"]], "any() (ot.backend.tensorflowbackend method)": [[66, "id313"], [66, "ot.backend.TensorflowBackend.any"]], "any() (ot.backend.torchbackend method)": [[66, "id390"], [66, "ot.backend.TorchBackend.any"]], "arange() (ot.backend.backend method)": [[66, "id4"], [66, "ot.backend.Backend.arange"]], "arange() (ot.backend.cupybackend method)": [[66, "id83"], [66, "ot.backend.CupyBackend.arange"]], "arange() (ot.backend.jaxbackend method)": [[66, "id160"], [66, "ot.backend.JaxBackend.arange"]], "arange() (ot.backend.numpybackend method)": [[66, "id237"], [66, "ot.backend.NumpyBackend.arange"]], "arange() (ot.backend.tensorflowbackend method)": [[66, "id314"], [66, "ot.backend.TensorflowBackend.arange"]], "arange() (ot.backend.torchbackend method)": [[66, "id391"], [66, "ot.backend.TorchBackend.arange"]], "argmax() (ot.backend.backend method)": [[66, "id5"], [66, "ot.backend.Backend.argmax"]], "argmax() (ot.backend.cupybackend method)": [[66, "id84"], [66, "ot.backend.CupyBackend.argmax"]], "argmax() (ot.backend.jaxbackend method)": [[66, "id161"], [66, "ot.backend.JaxBackend.argmax"]], "argmax() (ot.backend.numpybackend method)": [[66, "id238"], [66, "ot.backend.NumpyBackend.argmax"]], "argmax() (ot.backend.tensorflowbackend method)": [[66, "id315"], [66, "ot.backend.TensorflowBackend.argmax"]], "argmax() (ot.backend.torchbackend method)": [[66, "id392"], [66, "ot.backend.TorchBackend.argmax"]], "argmin() (ot.backend.backend method)": [[66, "id6"], [66, "ot.backend.Backend.argmin"]], "argmin() (ot.backend.cupybackend method)": [[66, "id85"], [66, "ot.backend.CupyBackend.argmin"]], "argmin() (ot.backend.jaxbackend method)": [[66, "id162"], [66, "ot.backend.JaxBackend.argmin"]], "argmin() (ot.backend.numpybackend method)": [[66, "id239"], [66, "ot.backend.NumpyBackend.argmin"]], "argmin() (ot.backend.tensorflowbackend method)": [[66, "id316"], [66, "ot.backend.TensorflowBackend.argmin"]], "argmin() (ot.backend.torchbackend method)": [[66, "id393"], [66, "ot.backend.TorchBackend.argmin"]], "argsort() (ot.backend.backend method)": [[66, "id7"], [66, "ot.backend.Backend.argsort"]], "argsort() (ot.backend.cupybackend method)": [[66, "id86"], [66, "ot.backend.CupyBackend.argsort"]], "argsort() (ot.backend.jaxbackend method)": [[66, "id163"], [66, "ot.backend.JaxBackend.argsort"]], "argsort() (ot.backend.numpybackend method)": [[66, "id240"], [66, "ot.backend.NumpyBackend.argsort"]], "argsort() (ot.backend.tensorflowbackend method)": [[66, "id317"], [66, "ot.backend.TensorflowBackend.argsort"]], "argsort() (ot.backend.torchbackend method)": [[66, "id394"], [66, "ot.backend.TorchBackend.argsort"]], "array_equal() (ot.backend.backend method)": [[66, "id8"], [66, "ot.backend.Backend.array_equal"]], "array_equal() (ot.backend.cupybackend method)": [[66, "id87"], [66, "ot.backend.CupyBackend.array_equal"]], "array_equal() (ot.backend.jaxbackend method)": [[66, "id164"], [66, "ot.backend.JaxBackend.array_equal"]], "array_equal() (ot.backend.numpybackend method)": [[66, "id241"], [66, "ot.backend.NumpyBackend.array_equal"]], "array_equal() (ot.backend.tensorflowbackend method)": [[66, "id318"], [66, "ot.backend.TensorflowBackend.array_equal"]], "array_equal() (ot.backend.torchbackend method)": [[66, "id395"], [66, "ot.backend.TorchBackend.array_equal"]], "assert_same_dtype_device() (ot.backend.backend method)": [[66, "id9"], [66, "ot.backend.Backend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.cupybackend method)": [[66, "id88"], [66, "ot.backend.CupyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.jaxbackend method)": [[66, "id165"], [66, "ot.backend.JaxBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.numpybackend method)": [[66, "id242"], [66, "ot.backend.NumpyBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.tensorflowbackend method)": [[66, "id319"], [66, "ot.backend.TensorflowBackend.assert_same_dtype_device"]], "assert_same_dtype_device() (ot.backend.torchbackend method)": [[66, "id396"], [66, "ot.backend.TorchBackend.assert_same_dtype_device"]], "atan2() (ot.backend.backend method)": [[66, "id10"], [66, "ot.backend.Backend.atan2"]], "atan2() (ot.backend.cupybackend method)": [[66, "id89"], [66, "ot.backend.CupyBackend.atan2"]], "atan2() (ot.backend.jaxbackend method)": [[66, "id166"], [66, "ot.backend.JaxBackend.atan2"]], "atan2() (ot.backend.numpybackend method)": [[66, "id243"], [66, "ot.backend.NumpyBackend.atan2"]], "atan2() (ot.backend.tensorflowbackend method)": [[66, "id320"], [66, "ot.backend.TensorflowBackend.atan2"]], "atan2() (ot.backend.torchbackend method)": [[66, "id397"], [66, "ot.backend.TorchBackend.atan2"]], "bitsize() (ot.backend.backend method)": [[66, "id11"], [66, "ot.backend.Backend.bitsize"]], "bitsize() (ot.backend.cupybackend method)": [[66, "id90"], [66, "ot.backend.CupyBackend.bitsize"]], "bitsize() (ot.backend.jaxbackend method)": [[66, "id167"], [66, "ot.backend.JaxBackend.bitsize"]], "bitsize() (ot.backend.numpybackend method)": [[66, "id244"], [66, "ot.backend.NumpyBackend.bitsize"]], "bitsize() (ot.backend.tensorflowbackend method)": [[66, "id321"], [66, "ot.backend.TensorflowBackend.bitsize"]], "bitsize() (ot.backend.torchbackend method)": [[66, "id398"], [66, "ot.backend.TorchBackend.bitsize"]], "clip() (ot.backend.backend method)": [[66, "id12"], [66, "ot.backend.Backend.clip"]], "clip() (ot.backend.cupybackend method)": [[66, "id91"], [66, "ot.backend.CupyBackend.clip"]], "clip() (ot.backend.jaxbackend method)": [[66, "id168"], [66, "ot.backend.JaxBackend.clip"]], "clip() (ot.backend.numpybackend method)": [[66, "id245"], [66, "ot.backend.NumpyBackend.clip"]], "clip() (ot.backend.tensorflowbackend method)": [[66, "id322"], [66, "ot.backend.TensorflowBackend.clip"]], "clip() (ot.backend.torchbackend method)": [[66, "id399"], [66, "ot.backend.TorchBackend.clip"]], "concatenate() (ot.backend.backend method)": [[66, "id13"], [66, "ot.backend.Backend.concatenate"]], "concatenate() (ot.backend.cupybackend method)": [[66, "id92"], [66, "ot.backend.CupyBackend.concatenate"]], "concatenate() (ot.backend.jaxbackend method)": [[66, "id169"], [66, "ot.backend.JaxBackend.concatenate"]], "concatenate() (ot.backend.numpybackend method)": [[66, "id246"], [66, "ot.backend.NumpyBackend.concatenate"]], "concatenate() (ot.backend.tensorflowbackend method)": [[66, "id323"], [66, "ot.backend.TensorflowBackend.concatenate"]], "concatenate() (ot.backend.torchbackend method)": [[66, "id400"], [66, "ot.backend.TorchBackend.concatenate"]], "coo_matrix() (ot.backend.backend method)": [[66, "id14"], [66, "ot.backend.Backend.coo_matrix"]], "coo_matrix() (ot.backend.cupybackend method)": [[66, "id93"], [66, "ot.backend.CupyBackend.coo_matrix"]], "coo_matrix() (ot.backend.jaxbackend method)": [[66, "id170"], [66, "ot.backend.JaxBackend.coo_matrix"]], "coo_matrix() (ot.backend.numpybackend method)": [[66, "id247"], [66, "ot.backend.NumpyBackend.coo_matrix"]], "coo_matrix() (ot.backend.tensorflowbackend method)": [[66, "id324"], [66, "ot.backend.TensorflowBackend.coo_matrix"]], "coo_matrix() (ot.backend.torchbackend method)": [[66, "id401"], [66, "ot.backend.TorchBackend.coo_matrix"]], "copy() (ot.backend.backend method)": [[66, "id15"], [66, "ot.backend.Backend.copy"]], "copy() (ot.backend.cupybackend method)": [[66, "id94"], [66, "ot.backend.CupyBackend.copy"]], "copy() (ot.backend.jaxbackend method)": [[66, "id171"], [66, "ot.backend.JaxBackend.copy"]], "copy() (ot.backend.numpybackend method)": [[66, "id248"], [66, "ot.backend.NumpyBackend.copy"]], "copy() (ot.backend.tensorflowbackend method)": [[66, "id325"], [66, "ot.backend.TensorflowBackend.copy"]], "copy() (ot.backend.torchbackend method)": [[66, "id402"], [66, "ot.backend.TorchBackend.copy"]], "cumsum() (ot.backend.backend method)": [[66, "id16"], [66, "ot.backend.Backend.cumsum"]], "cumsum() (ot.backend.cupybackend method)": [[66, "id95"], [66, "ot.backend.CupyBackend.cumsum"]], "cumsum() (ot.backend.jaxbackend method)": [[66, "id172"], [66, "ot.backend.JaxBackend.cumsum"]], "cumsum() (ot.backend.numpybackend method)": [[66, "id249"], [66, "ot.backend.NumpyBackend.cumsum"]], "cumsum() (ot.backend.tensorflowbackend method)": [[66, "id326"], [66, "ot.backend.TensorflowBackend.cumsum"]], "cumsum() (ot.backend.torchbackend method)": [[66, "id403"], [66, "ot.backend.TorchBackend.cumsum"]], "detach() (ot.backend.backend method)": [[66, "id17"], [66, "ot.backend.Backend.detach"]], "detach() (ot.backend.cupybackend method)": [[66, "id96"], [66, "ot.backend.CupyBackend.detach"]], "detach() (ot.backend.jaxbackend method)": [[66, "id173"], [66, "ot.backend.JaxBackend.detach"]], "detach() (ot.backend.numpybackend method)": [[66, "id250"], [66, "ot.backend.NumpyBackend.detach"]], "detach() (ot.backend.tensorflowbackend method)": [[66, "id327"], [66, "ot.backend.TensorflowBackend.detach"]], "detach() (ot.backend.torchbackend method)": [[66, "id404"], [66, "ot.backend.TorchBackend.detach"]], "device_type() (ot.backend.backend method)": [[66, "id18"], [66, "ot.backend.Backend.device_type"]], "device_type() (ot.backend.cupybackend method)": [[66, "id97"], [66, "ot.backend.CupyBackend.device_type"]], "device_type() (ot.backend.jaxbackend method)": [[66, "id174"], [66, "ot.backend.JaxBackend.device_type"]], "device_type() (ot.backend.numpybackend method)": [[66, "id251"], [66, "ot.backend.NumpyBackend.device_type"]], "device_type() (ot.backend.tensorflowbackend method)": [[66, "id328"], [66, "ot.backend.TensorflowBackend.device_type"]], "device_type() (ot.backend.torchbackend method)": [[66, "id405"], [66, "ot.backend.TorchBackend.device_type"]], "diag() (ot.backend.backend method)": [[66, "id19"], [66, "ot.backend.Backend.diag"]], "diag() (ot.backend.cupybackend method)": [[66, "id98"], [66, "ot.backend.CupyBackend.diag"]], "diag() (ot.backend.jaxbackend method)": [[66, "id175"], [66, "ot.backend.JaxBackend.diag"]], "diag() (ot.backend.numpybackend method)": [[66, "id252"], [66, "ot.backend.NumpyBackend.diag"]], "diag() (ot.backend.tensorflowbackend method)": [[66, "id329"], [66, "ot.backend.TensorflowBackend.diag"]], "diag() (ot.backend.torchbackend method)": [[66, "id406"], [66, "ot.backend.TorchBackend.diag"]], "dot() (ot.backend.backend method)": [[66, "id20"], [66, "ot.backend.Backend.dot"]], "dot() (ot.backend.cupybackend method)": [[66, "id99"], [66, "ot.backend.CupyBackend.dot"]], "dot() (ot.backend.jaxbackend method)": [[66, "id176"], [66, "ot.backend.JaxBackend.dot"]], "dot() (ot.backend.numpybackend method)": [[66, "id253"], [66, "ot.backend.NumpyBackend.dot"]], "dot() (ot.backend.tensorflowbackend method)": [[66, "id330"], [66, "ot.backend.TensorflowBackend.dot"]], "dot() (ot.backend.torchbackend method)": [[66, "id407"], [66, "ot.backend.TorchBackend.dot"]], "dtype_device() (ot.backend.backend method)": [[66, "id21"], [66, "ot.backend.Backend.dtype_device"]], "dtype_device() (ot.backend.cupybackend method)": [[66, "id100"], [66, "ot.backend.CupyBackend.dtype_device"]], "dtype_device() (ot.backend.jaxbackend method)": [[66, "id177"], [66, "ot.backend.JaxBackend.dtype_device"]], "dtype_device() (ot.backend.numpybackend method)": [[66, "id254"], [66, "ot.backend.NumpyBackend.dtype_device"]], "dtype_device() (ot.backend.tensorflowbackend method)": [[66, "id331"], [66, "ot.backend.TensorflowBackend.dtype_device"]], "dtype_device() (ot.backend.torchbackend method)": [[66, "id408"], [66, "ot.backend.TorchBackend.dtype_device"]], "einsum() (ot.backend.backend method)": [[66, "id22"], [66, "ot.backend.Backend.einsum"]], "einsum() (ot.backend.cupybackend method)": [[66, "id101"], [66, "ot.backend.CupyBackend.einsum"]], "einsum() (ot.backend.jaxbackend method)": [[66, "id178"], [66, "ot.backend.JaxBackend.einsum"]], "einsum() (ot.backend.numpybackend method)": [[66, "id255"], [66, "ot.backend.NumpyBackend.einsum"]], "einsum() (ot.backend.tensorflowbackend method)": [[66, "id332"], [66, "ot.backend.TensorflowBackend.einsum"]], "einsum() (ot.backend.torchbackend method)": [[66, "id409"], [66, "ot.backend.TorchBackend.einsum"]], "eliminate_zeros() (ot.backend.backend method)": [[66, "id23"], [66, "ot.backend.Backend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.cupybackend method)": [[66, "id102"], [66, "ot.backend.CupyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.jaxbackend method)": [[66, "id179"], [66, "ot.backend.JaxBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.numpybackend method)": [[66, "id256"], [66, "ot.backend.NumpyBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.tensorflowbackend method)": [[66, "id333"], [66, "ot.backend.TensorflowBackend.eliminate_zeros"]], "eliminate_zeros() (ot.backend.torchbackend method)": [[66, "id410"], [66, "ot.backend.TorchBackend.eliminate_zeros"]], "exp() (ot.backend.backend method)": [[66, "id24"], [66, "ot.backend.Backend.exp"]], "exp() (ot.backend.cupybackend method)": [[66, "id103"], [66, "ot.backend.CupyBackend.exp"]], "exp() (ot.backend.jaxbackend method)": [[66, "id180"], [66, "ot.backend.JaxBackend.exp"]], "exp() (ot.backend.numpybackend method)": [[66, "id257"], [66, "ot.backend.NumpyBackend.exp"]], "exp() (ot.backend.tensorflowbackend method)": [[66, "id334"], [66, "ot.backend.TensorflowBackend.exp"]], "exp() (ot.backend.torchbackend method)": [[66, "id411"], [66, "ot.backend.TorchBackend.exp"]], "eye() (ot.backend.backend method)": [[66, "id25"], [66, "ot.backend.Backend.eye"]], "eye() (ot.backend.cupybackend method)": [[66, "id104"], [66, "ot.backend.CupyBackend.eye"]], "eye() (ot.backend.jaxbackend method)": [[66, "id181"], [66, "ot.backend.JaxBackend.eye"]], "eye() (ot.backend.numpybackend method)": [[66, "id258"], [66, "ot.backend.NumpyBackend.eye"]], "eye() (ot.backend.tensorflowbackend method)": [[66, "id335"], [66, "ot.backend.TensorflowBackend.eye"]], "eye() (ot.backend.torchbackend method)": [[66, "id412"], [66, "ot.backend.TorchBackend.eye"]], "flip() (ot.backend.backend method)": [[66, "id26"], [66, "ot.backend.Backend.flip"]], "flip() (ot.backend.cupybackend method)": [[66, "id105"], [66, "ot.backend.CupyBackend.flip"]], "flip() (ot.backend.jaxbackend method)": [[66, "id182"], [66, "ot.backend.JaxBackend.flip"]], "flip() (ot.backend.numpybackend method)": [[66, "id259"], [66, "ot.backend.NumpyBackend.flip"]], "flip() (ot.backend.tensorflowbackend method)": [[66, "id336"], [66, "ot.backend.TensorflowBackend.flip"]], "flip() (ot.backend.torchbackend method)": [[66, "id413"], [66, "ot.backend.TorchBackend.flip"]], "floor() (ot.backend.backend method)": [[66, "id27"], [66, "ot.backend.Backend.floor"]], "floor() (ot.backend.cupybackend method)": [[66, "id106"], [66, "ot.backend.CupyBackend.floor"]], "floor() (ot.backend.jaxbackend method)": [[66, "id183"], [66, "ot.backend.JaxBackend.floor"]], "floor() (ot.backend.numpybackend method)": [[66, "id260"], [66, "ot.backend.NumpyBackend.floor"]], "floor() (ot.backend.tensorflowbackend method)": [[66, "id337"], [66, "ot.backend.TensorflowBackend.floor"]], "floor() (ot.backend.torchbackend method)": [[66, "id414"], [66, "ot.backend.TorchBackend.floor"]], "from_numpy() (ot.backend.backend method)": [[66, "id28"], [66, "ot.backend.Backend.from_numpy"]], "full() (ot.backend.backend method)": [[66, "id29"], [66, "ot.backend.Backend.full"]], "full() (ot.backend.cupybackend method)": [[66, "id107"], [66, "ot.backend.CupyBackend.full"]], "full() (ot.backend.jaxbackend method)": [[66, "id184"], [66, "ot.backend.JaxBackend.full"]], "full() (ot.backend.numpybackend method)": [[66, "id261"], [66, "ot.backend.NumpyBackend.full"]], "full() (ot.backend.tensorflowbackend method)": [[66, "id338"], [66, "ot.backend.TensorflowBackend.full"]], "full() (ot.backend.torchbackend method)": [[66, "id415"], [66, "ot.backend.TorchBackend.full"]], "get_backend() (in module ot.backend)": [[66, "id464"], [66, "ot.backend.get_backend"]], "get_backend_list() (in module ot.backend)": [[66, "id465"], [66, "ot.backend.get_backend_list"]], "inv() (ot.backend.backend method)": [[66, "id30"], [66, "ot.backend.Backend.inv"]], "inv() (ot.backend.cupybackend method)": [[66, "id108"], [66, "ot.backend.CupyBackend.inv"]], "inv() (ot.backend.jaxbackend method)": [[66, "id185"], [66, "ot.backend.JaxBackend.inv"]], "inv() (ot.backend.numpybackend method)": [[66, "id262"], [66, "ot.backend.NumpyBackend.inv"]], "inv() (ot.backend.tensorflowbackend method)": [[66, "id339"], [66, "ot.backend.TensorflowBackend.inv"]], "inv() (ot.backend.torchbackend method)": [[66, "id416"], [66, "ot.backend.TorchBackend.inv"]], "is_floating_point() (ot.backend.backend method)": [[66, "id31"], [66, "ot.backend.Backend.is_floating_point"]], "is_floating_point() (ot.backend.cupybackend method)": [[66, "id109"], [66, "ot.backend.CupyBackend.is_floating_point"]], "is_floating_point() (ot.backend.jaxbackend method)": [[66, "id186"], [66, "ot.backend.JaxBackend.is_floating_point"]], "is_floating_point() (ot.backend.numpybackend method)": [[66, "id263"], [66, "ot.backend.NumpyBackend.is_floating_point"]], "is_floating_point() (ot.backend.tensorflowbackend method)": [[66, "id340"], [66, "ot.backend.TensorflowBackend.is_floating_point"]], "is_floating_point() (ot.backend.torchbackend method)": [[66, "id417"], [66, "ot.backend.TorchBackend.is_floating_point"]], "isfinite() (ot.backend.backend method)": [[66, "id32"], [66, "ot.backend.Backend.isfinite"]], "isfinite() (ot.backend.cupybackend method)": [[66, "id110"], [66, "ot.backend.CupyBackend.isfinite"]], "isfinite() (ot.backend.jaxbackend method)": [[66, "id187"], [66, "ot.backend.JaxBackend.isfinite"]], "isfinite() (ot.backend.numpybackend method)": [[66, "id264"], [66, "ot.backend.NumpyBackend.isfinite"]], "isfinite() (ot.backend.tensorflowbackend method)": [[66, "id341"], [66, "ot.backend.TensorflowBackend.isfinite"]], "isfinite() (ot.backend.torchbackend method)": [[66, "id418"], [66, "ot.backend.TorchBackend.isfinite"]], "isinf() (ot.backend.backend method)": [[66, "id33"], [66, "ot.backend.Backend.isinf"]], "isinf() (ot.backend.cupybackend method)": [[66, "id111"], [66, "ot.backend.CupyBackend.isinf"]], "isinf() (ot.backend.jaxbackend method)": [[66, "id188"], [66, "ot.backend.JaxBackend.isinf"]], "isinf() (ot.backend.numpybackend method)": [[66, "id265"], [66, "ot.backend.NumpyBackend.isinf"]], "isinf() (ot.backend.tensorflowbackend method)": [[66, "id342"], [66, "ot.backend.TensorflowBackend.isinf"]], "isinf() (ot.backend.torchbackend method)": [[66, "id419"], [66, "ot.backend.TorchBackend.isinf"]], "isnan() (ot.backend.backend method)": [[66, "id34"], [66, "ot.backend.Backend.isnan"]], "isnan() (ot.backend.cupybackend method)": [[66, "id112"], [66, "ot.backend.CupyBackend.isnan"]], "isnan() (ot.backend.jaxbackend method)": [[66, "id189"], [66, "ot.backend.JaxBackend.isnan"]], "isnan() (ot.backend.numpybackend method)": [[66, "id266"], [66, "ot.backend.NumpyBackend.isnan"]], "isnan() (ot.backend.tensorflowbackend method)": [[66, "id343"], [66, "ot.backend.TensorflowBackend.isnan"]], "isnan() (ot.backend.torchbackend method)": [[66, "id420"], [66, "ot.backend.TorchBackend.isnan"]], "issparse() (ot.backend.backend method)": [[66, "id35"], [66, "ot.backend.Backend.issparse"]], "issparse() (ot.backend.cupybackend method)": [[66, "id113"], [66, "ot.backend.CupyBackend.issparse"]], "issparse() (ot.backend.jaxbackend method)": [[66, "id190"], [66, "ot.backend.JaxBackend.issparse"]], "issparse() (ot.backend.numpybackend method)": [[66, "id267"], [66, "ot.backend.NumpyBackend.issparse"]], "issparse() (ot.backend.tensorflowbackend method)": [[66, "id344"], [66, "ot.backend.TensorflowBackend.issparse"]], "issparse() (ot.backend.torchbackend method)": [[66, "id421"], [66, "ot.backend.TorchBackend.issparse"]], "kl_div() (ot.backend.backend method)": [[66, "id36"], [66, "ot.backend.Backend.kl_div"]], "kl_div() (ot.backend.cupybackend method)": [[66, "id114"], [66, "ot.backend.CupyBackend.kl_div"]], "kl_div() (ot.backend.jaxbackend method)": [[66, "id191"], [66, "ot.backend.JaxBackend.kl_div"]], "kl_div() (ot.backend.numpybackend method)": [[66, "id268"], [66, "ot.backend.NumpyBackend.kl_div"]], "kl_div() (ot.backend.tensorflowbackend method)": [[66, "id345"], [66, "ot.backend.TensorflowBackend.kl_div"]], "kl_div() (ot.backend.torchbackend method)": [[66, "id422"], [66, "ot.backend.TorchBackend.kl_div"]], "linspace() (ot.backend.backend method)": [[66, "id37"], [66, "ot.backend.Backend.linspace"]], "linspace() (ot.backend.cupybackend method)": [[66, "id115"], [66, "ot.backend.CupyBackend.linspace"]], "linspace() (ot.backend.jaxbackend method)": [[66, "id192"], [66, "ot.backend.JaxBackend.linspace"]], "linspace() (ot.backend.numpybackend method)": [[66, "id269"], [66, "ot.backend.NumpyBackend.linspace"]], "linspace() (ot.backend.tensorflowbackend method)": [[66, "id346"], [66, "ot.backend.TensorflowBackend.linspace"]], "linspace() (ot.backend.torchbackend method)": [[66, "id423"], [66, "ot.backend.TorchBackend.linspace"]], "log() (ot.backend.backend method)": [[66, "id38"], [66, "ot.backend.Backend.log"]], "log() (ot.backend.cupybackend method)": [[66, "id116"], [66, "ot.backend.CupyBackend.log"]], "log() (ot.backend.jaxbackend method)": [[66, "id193"], [66, "ot.backend.JaxBackend.log"]], "log() (ot.backend.numpybackend method)": [[66, "id270"], [66, "ot.backend.NumpyBackend.log"]], "log() (ot.backend.tensorflowbackend method)": [[66, "id347"], [66, "ot.backend.TensorflowBackend.log"]], "log() (ot.backend.torchbackend method)": [[66, "id424"], [66, "ot.backend.TorchBackend.log"]], "logsumexp() (ot.backend.backend method)": [[66, "id39"], [66, "ot.backend.Backend.logsumexp"]], "logsumexp() (ot.backend.cupybackend method)": [[66, "id117"], [66, "ot.backend.CupyBackend.logsumexp"]], "logsumexp() (ot.backend.jaxbackend method)": [[66, "id194"], [66, "ot.backend.JaxBackend.logsumexp"]], "logsumexp() (ot.backend.numpybackend method)": [[66, "id271"], [66, "ot.backend.NumpyBackend.logsumexp"]], "logsumexp() (ot.backend.tensorflowbackend method)": [[66, "id348"], [66, "ot.backend.TensorflowBackend.logsumexp"]], "logsumexp() (ot.backend.torchbackend method)": [[66, "id425"], [66, "ot.backend.TorchBackend.logsumexp"]], "max() (ot.backend.backend method)": [[66, "id40"], [66, "ot.backend.Backend.max"]], "max() (ot.backend.cupybackend method)": [[66, "id118"], [66, "ot.backend.CupyBackend.max"]], "max() (ot.backend.jaxbackend method)": [[66, "id195"], [66, "ot.backend.JaxBackend.max"]], "max() (ot.backend.numpybackend method)": [[66, "id272"], [66, "ot.backend.NumpyBackend.max"]], "max() (ot.backend.tensorflowbackend method)": [[66, "id349"], [66, "ot.backend.TensorflowBackend.max"]], "max() (ot.backend.torchbackend method)": [[66, "id426"], [66, "ot.backend.TorchBackend.max"]], "maximum() (ot.backend.backend method)": [[66, "id41"], [66, "ot.backend.Backend.maximum"]], "maximum() (ot.backend.cupybackend method)": [[66, "id119"], [66, "ot.backend.CupyBackend.maximum"]], "maximum() (ot.backend.jaxbackend method)": [[66, "id196"], [66, "ot.backend.JaxBackend.maximum"]], "maximum() (ot.backend.numpybackend method)": [[66, "id273"], [66, "ot.backend.NumpyBackend.maximum"]], "maximum() (ot.backend.tensorflowbackend method)": [[66, "id350"], [66, "ot.backend.TensorflowBackend.maximum"]], "maximum() (ot.backend.torchbackend method)": [[66, "id427"], [66, "ot.backend.TorchBackend.maximum"]], "mean() (ot.backend.backend method)": [[66, "id42"], [66, "ot.backend.Backend.mean"]], "mean() (ot.backend.cupybackend method)": [[66, "id120"], [66, "ot.backend.CupyBackend.mean"]], "mean() (ot.backend.jaxbackend method)": [[66, "id197"], [66, "ot.backend.JaxBackend.mean"]], "mean() (ot.backend.numpybackend method)": [[66, "id274"], [66, "ot.backend.NumpyBackend.mean"]], "mean() (ot.backend.tensorflowbackend method)": [[66, "id351"], [66, "ot.backend.TensorflowBackend.mean"]], "mean() (ot.backend.torchbackend method)": [[66, "id428"], [66, "ot.backend.TorchBackend.mean"]], "meshgrid() (ot.backend.backend method)": [[66, "id43"], [66, "ot.backend.Backend.meshgrid"]], "meshgrid() (ot.backend.cupybackend method)": [[66, "id121"], [66, "ot.backend.CupyBackend.meshgrid"]], "meshgrid() (ot.backend.jaxbackend method)": [[66, "id198"], [66, "ot.backend.JaxBackend.meshgrid"]], "meshgrid() (ot.backend.numpybackend method)": [[66, "id275"], [66, "ot.backend.NumpyBackend.meshgrid"]], "meshgrid() (ot.backend.tensorflowbackend method)": [[66, "id352"], [66, "ot.backend.TensorflowBackend.meshgrid"]], "meshgrid() (ot.backend.torchbackend method)": [[66, "id429"], [66, "ot.backend.TorchBackend.meshgrid"]], "min() (ot.backend.backend method)": [[66, "id44"], [66, "ot.backend.Backend.min"]], "min() (ot.backend.cupybackend method)": [[66, "id122"], [66, "ot.backend.CupyBackend.min"]], "min() (ot.backend.jaxbackend method)": [[66, "id199"], [66, "ot.backend.JaxBackend.min"]], "min() (ot.backend.numpybackend method)": [[66, "id276"], [66, "ot.backend.NumpyBackend.min"]], "min() (ot.backend.tensorflowbackend method)": [[66, "id353"], [66, "ot.backend.TensorflowBackend.min"]], "min() (ot.backend.torchbackend method)": [[66, "id430"], [66, "ot.backend.TorchBackend.min"]], "minimum() (ot.backend.backend method)": [[66, "id45"], [66, "ot.backend.Backend.minimum"]], "minimum() (ot.backend.cupybackend method)": [[66, "id123"], [66, "ot.backend.CupyBackend.minimum"]], "minimum() (ot.backend.jaxbackend method)": [[66, "id200"], [66, "ot.backend.JaxBackend.minimum"]], "minimum() (ot.backend.numpybackend method)": [[66, "id277"], [66, "ot.backend.NumpyBackend.minimum"]], "minimum() (ot.backend.tensorflowbackend method)": [[66, "id354"], [66, "ot.backend.TensorflowBackend.minimum"]], "minimum() (ot.backend.torchbackend method)": [[66, "id431"], [66, "ot.backend.TorchBackend.minimum"]], "norm() (ot.backend.backend method)": [[66, "id46"], [66, "ot.backend.Backend.norm"]], "norm() (ot.backend.cupybackend method)": [[66, "id124"], [66, "ot.backend.CupyBackend.norm"]], "norm() (ot.backend.jaxbackend method)": [[66, "id201"], [66, "ot.backend.JaxBackend.norm"]], "norm() (ot.backend.numpybackend method)": [[66, "id278"], [66, "ot.backend.NumpyBackend.norm"]], "norm() (ot.backend.tensorflowbackend method)": [[66, "id355"], [66, "ot.backend.TensorflowBackend.norm"]], "norm() (ot.backend.torchbackend method)": [[66, "id432"], [66, "ot.backend.TorchBackend.norm"]], "ones() (ot.backend.backend method)": [[66, "id47"], [66, "ot.backend.Backend.ones"]], "ones() (ot.backend.cupybackend method)": [[66, "id125"], [66, "ot.backend.CupyBackend.ones"]], "ones() (ot.backend.jaxbackend method)": [[66, "id202"], [66, "ot.backend.JaxBackend.ones"]], "ones() (ot.backend.numpybackend method)": [[66, "id279"], [66, "ot.backend.NumpyBackend.ones"]], "ones() (ot.backend.tensorflowbackend method)": [[66, "id356"], [66, "ot.backend.TensorflowBackend.ones"]], "ones() (ot.backend.torchbackend method)": [[66, "id433"], [66, "ot.backend.TorchBackend.ones"]], "ot.backend": [[66, "module-ot.backend"]], "outer() (ot.backend.backend method)": [[66, "id48"], [66, "ot.backend.Backend.outer"]], "outer() (ot.backend.cupybackend method)": [[66, "id126"], [66, "ot.backend.CupyBackend.outer"]], "outer() (ot.backend.jaxbackend method)": [[66, "id203"], [66, "ot.backend.JaxBackend.outer"]], "outer() (ot.backend.numpybackend method)": [[66, "id280"], [66, "ot.backend.NumpyBackend.outer"]], "outer() (ot.backend.tensorflowbackend method)": [[66, "id357"], [66, "ot.backend.TensorflowBackend.outer"]], "outer() (ot.backend.torchbackend method)": [[66, "id434"], [66, "ot.backend.TorchBackend.outer"]], "power() (ot.backend.backend method)": [[66, "id49"], [66, "ot.backend.Backend.power"]], "power() (ot.backend.cupybackend method)": [[66, "id127"], [66, "ot.backend.CupyBackend.power"]], "power() (ot.backend.jaxbackend method)": [[66, "id204"], [66, "ot.backend.JaxBackend.power"]], "power() (ot.backend.numpybackend method)": [[66, "id281"], [66, "ot.backend.NumpyBackend.power"]], "power() (ot.backend.tensorflowbackend method)": [[66, "id358"], [66, "ot.backend.TensorflowBackend.power"]], "power() (ot.backend.torchbackend method)": [[66, "id435"], [66, "ot.backend.TorchBackend.power"]], "prod() (ot.backend.backend method)": [[66, "id50"], [66, "ot.backend.Backend.prod"]], "prod() (ot.backend.cupybackend method)": [[66, "id128"], [66, "ot.backend.CupyBackend.prod"]], "prod() (ot.backend.jaxbackend method)": [[66, "id205"], [66, "ot.backend.JaxBackend.prod"]], "prod() (ot.backend.numpybackend method)": [[66, "id282"], [66, "ot.backend.NumpyBackend.prod"]], "prod() (ot.backend.tensorflowbackend method)": [[66, "id359"], [66, "ot.backend.TensorflowBackend.prod"]], "prod() (ot.backend.torchbackend method)": [[66, "id436"], [66, "ot.backend.TorchBackend.prod"]], "qr() (ot.backend.backend method)": [[66, "id51"], [66, "ot.backend.Backend.qr"]], "qr() (ot.backend.cupybackend method)": [[66, "id129"], [66, "ot.backend.CupyBackend.qr"]], "qr() (ot.backend.jaxbackend method)": [[66, "id206"], [66, "ot.backend.JaxBackend.qr"]], "qr() (ot.backend.numpybackend method)": [[66, "id283"], [66, "ot.backend.NumpyBackend.qr"]], "qr() (ot.backend.tensorflowbackend method)": [[66, "id360"], [66, "ot.backend.TensorflowBackend.qr"]], "qr() (ot.backend.torchbackend method)": [[66, "id437"], [66, "ot.backend.TorchBackend.qr"]], "rand() (ot.backend.backend method)": [[66, "id52"], [66, "ot.backend.Backend.rand"]], "rand() (ot.backend.cupybackend method)": [[66, "id130"], [66, "ot.backend.CupyBackend.rand"]], "rand() (ot.backend.jaxbackend method)": [[66, "id207"], [66, "ot.backend.JaxBackend.rand"]], "rand() (ot.backend.numpybackend method)": [[66, "id284"], [66, "ot.backend.NumpyBackend.rand"]], "rand() (ot.backend.tensorflowbackend method)": [[66, "id361"], [66, "ot.backend.TensorflowBackend.rand"]], "rand() (ot.backend.torchbackend method)": [[66, "id438"], [66, "ot.backend.TorchBackend.rand"]], "randn() (ot.backend.backend method)": [[66, "id53"], [66, "ot.backend.Backend.randn"]], "randn() (ot.backend.cupybackend method)": [[66, "id131"], [66, "ot.backend.CupyBackend.randn"]], "randn() (ot.backend.jaxbackend method)": [[66, "id208"], [66, "ot.backend.JaxBackend.randn"]], "randn() (ot.backend.numpybackend method)": [[66, "id285"], [66, "ot.backend.NumpyBackend.randn"]], "randn() (ot.backend.tensorflowbackend method)": [[66, "id362"], [66, "ot.backend.TensorflowBackend.randn"]], "randn() (ot.backend.torchbackend method)": [[66, "id439"], [66, "ot.backend.TorchBackend.randn"]], "repeat() (ot.backend.backend method)": [[66, "id54"], [66, "ot.backend.Backend.repeat"]], "repeat() (ot.backend.cupybackend method)": [[66, "id132"], [66, "ot.backend.CupyBackend.repeat"]], "repeat() (ot.backend.jaxbackend method)": [[66, "id209"], [66, "ot.backend.JaxBackend.repeat"]], "repeat() (ot.backend.numpybackend method)": [[66, "id286"], [66, "ot.backend.NumpyBackend.repeat"]], "repeat() (ot.backend.tensorflowbackend method)": [[66, "id363"], [66, "ot.backend.TensorflowBackend.repeat"]], "repeat() (ot.backend.torchbackend method)": [[66, "id440"], [66, "ot.backend.TorchBackend.repeat"]], "reshape() (ot.backend.backend method)": [[66, "id55"], [66, "ot.backend.Backend.reshape"]], "reshape() (ot.backend.cupybackend method)": [[66, "id133"], [66, "ot.backend.CupyBackend.reshape"]], "reshape() (ot.backend.jaxbackend method)": [[66, "id210"], [66, "ot.backend.JaxBackend.reshape"]], "reshape() (ot.backend.numpybackend method)": [[66, "id287"], [66, "ot.backend.NumpyBackend.reshape"]], "reshape() (ot.backend.tensorflowbackend method)": [[66, "id364"], [66, "ot.backend.TensorflowBackend.reshape"]], "reshape() (ot.backend.torchbackend method)": [[66, "id441"], [66, "ot.backend.TorchBackend.reshape"]], "searchsorted() (ot.backend.backend method)": [[66, "id56"], [66, "ot.backend.Backend.searchsorted"]], "searchsorted() (ot.backend.cupybackend method)": [[66, "id134"], [66, "ot.backend.CupyBackend.searchsorted"]], "searchsorted() (ot.backend.jaxbackend method)": [[66, "id211"], [66, "ot.backend.JaxBackend.searchsorted"]], "searchsorted() (ot.backend.numpybackend method)": [[66, "id288"], [66, "ot.backend.NumpyBackend.searchsorted"]], "searchsorted() (ot.backend.tensorflowbackend method)": [[66, "id365"], [66, "ot.backend.TensorflowBackend.searchsorted"]], "searchsorted() (ot.backend.torchbackend method)": [[66, "id442"], [66, "ot.backend.TorchBackend.searchsorted"]], "seed() (ot.backend.backend method)": [[66, "id57"], [66, "ot.backend.Backend.seed"]], "seed() (ot.backend.cupybackend method)": [[66, "id135"], [66, "ot.backend.CupyBackend.seed"]], "seed() (ot.backend.jaxbackend method)": [[66, "id212"], [66, "ot.backend.JaxBackend.seed"]], "seed() (ot.backend.numpybackend method)": [[66, "id289"], [66, "ot.backend.NumpyBackend.seed"]], "seed() (ot.backend.tensorflowbackend method)": [[66, "id366"], [66, "ot.backend.TensorflowBackend.seed"]], "seed() (ot.backend.torchbackend method)": [[66, "id443"], [66, "ot.backend.TorchBackend.seed"]], "set_gradients() (ot.backend.backend method)": [[66, "id58"], [66, "ot.backend.Backend.set_gradients"]], "set_gradients() (ot.backend.cupybackend method)": [[66, "id136"], [66, "ot.backend.CupyBackend.set_gradients"]], "set_gradients() (ot.backend.jaxbackend method)": [[66, "id213"], [66, "ot.backend.JaxBackend.set_gradients"]], "set_gradients() (ot.backend.numpybackend method)": [[66, "id290"], [66, "ot.backend.NumpyBackend.set_gradients"]], "set_gradients() (ot.backend.tensorflowbackend method)": [[66, "id367"], [66, "ot.backend.TensorflowBackend.set_gradients"]], "set_gradients() (ot.backend.torchbackend method)": [[66, "id444"], [66, "ot.backend.TorchBackend.set_gradients"]], "solve() (ot.backend.backend method)": [[66, "id59"], [66, "ot.backend.Backend.solve"]], "solve() (ot.backend.cupybackend method)": [[66, "id137"], [66, "ot.backend.CupyBackend.solve"]], "solve() (ot.backend.jaxbackend method)": [[66, "id214"], [66, "ot.backend.JaxBackend.solve"]], "solve() (ot.backend.numpybackend method)": [[66, "id291"], [66, "ot.backend.NumpyBackend.solve"]], "solve() (ot.backend.tensorflowbackend method)": [[66, "id368"], [66, "ot.backend.TensorflowBackend.solve"]], "solve() (ot.backend.torchbackend method)": [[66, "id445"], [66, "ot.backend.TorchBackend.solve"]], "sort() (ot.backend.backend method)": [[66, "id60"], [66, "ot.backend.Backend.sort"]], "sort() (ot.backend.cupybackend method)": [[66, "id138"], [66, "ot.backend.CupyBackend.sort"]], "sort() (ot.backend.jaxbackend method)": [[66, "id215"], [66, "ot.backend.JaxBackend.sort"]], "sort() (ot.backend.numpybackend method)": [[66, "id292"], [66, "ot.backend.NumpyBackend.sort"]], "sort() (ot.backend.tensorflowbackend method)": [[66, "id369"], [66, "ot.backend.TensorflowBackend.sort"]], "sort() (ot.backend.torchbackend method)": [[66, "id446"], [66, "ot.backend.TorchBackend.sort"]], "sort2() (ot.backend.backend method)": [[66, "id61"], [66, "ot.backend.Backend.sort2"]], "sort2() (ot.backend.cupybackend method)": [[66, "id139"], [66, "ot.backend.CupyBackend.sort2"]], "sort2() (ot.backend.jaxbackend method)": [[66, "id216"], [66, "ot.backend.JaxBackend.sort2"]], "sort2() (ot.backend.numpybackend method)": [[66, "id293"], [66, "ot.backend.NumpyBackend.sort2"]], "sort2() (ot.backend.tensorflowbackend method)": [[66, "id370"], [66, "ot.backend.TensorflowBackend.sort2"]], "sort2() (ot.backend.torchbackend method)": [[66, "id447"], [66, "ot.backend.TorchBackend.sort2"]], "sqrt() (ot.backend.backend method)": [[66, "id62"], [66, "ot.backend.Backend.sqrt"]], "sqrt() (ot.backend.cupybackend method)": [[66, "id140"], [66, "ot.backend.CupyBackend.sqrt"]], "sqrt() (ot.backend.jaxbackend method)": [[66, "id217"], [66, "ot.backend.JaxBackend.sqrt"]], "sqrt() (ot.backend.numpybackend method)": [[66, "id294"], [66, "ot.backend.NumpyBackend.sqrt"]], "sqrt() (ot.backend.tensorflowbackend method)": [[66, "id371"], [66, "ot.backend.TensorflowBackend.sqrt"]], "sqrt() (ot.backend.torchbackend method)": [[66, "id448"], [66, "ot.backend.TorchBackend.sqrt"]], "sqrtm() (ot.backend.backend method)": [[66, "id63"], [66, "ot.backend.Backend.sqrtm"]], "sqrtm() (ot.backend.cupybackend method)": [[66, "id141"], [66, "ot.backend.CupyBackend.sqrtm"]], "sqrtm() (ot.backend.jaxbackend method)": [[66, "id218"], [66, "ot.backend.JaxBackend.sqrtm"]], "sqrtm() (ot.backend.numpybackend method)": [[66, "id295"], [66, "ot.backend.NumpyBackend.sqrtm"]], "sqrtm() (ot.backend.tensorflowbackend method)": [[66, "id372"], [66, "ot.backend.TensorflowBackend.sqrtm"]], "sqrtm() (ot.backend.torchbackend method)": [[66, "id449"], [66, "ot.backend.TorchBackend.sqrtm"]], "squeeze() (ot.backend.backend method)": [[66, "id64"], [66, "ot.backend.Backend.squeeze"]], "squeeze() (ot.backend.cupybackend method)": [[66, "id142"], [66, "ot.backend.CupyBackend.squeeze"]], "squeeze() (ot.backend.jaxbackend method)": [[66, "id219"], [66, "ot.backend.JaxBackend.squeeze"]], "squeeze() (ot.backend.numpybackend method)": [[66, "id296"], [66, "ot.backend.NumpyBackend.squeeze"]], "squeeze() (ot.backend.tensorflowbackend method)": [[66, "id373"], [66, "ot.backend.TensorflowBackend.squeeze"]], "squeeze() (ot.backend.torchbackend method)": [[66, "id450"], [66, "ot.backend.TorchBackend.squeeze"]], "stack() (ot.backend.backend method)": [[66, "id65"], [66, "ot.backend.Backend.stack"]], "stack() (ot.backend.cupybackend method)": [[66, "id143"], [66, "ot.backend.CupyBackend.stack"]], "stack() (ot.backend.jaxbackend method)": [[66, "id220"], [66, "ot.backend.JaxBackend.stack"]], "stack() (ot.backend.numpybackend method)": [[66, "id297"], [66, "ot.backend.NumpyBackend.stack"]], "stack() (ot.backend.tensorflowbackend method)": [[66, "id374"], [66, "ot.backend.TensorflowBackend.stack"]], "stack() (ot.backend.torchbackend method)": [[66, "id451"], [66, "ot.backend.TorchBackend.stack"]], "std() (ot.backend.backend method)": [[66, "id66"], [66, "ot.backend.Backend.std"]], "std() (ot.backend.cupybackend method)": [[66, "id144"], [66, "ot.backend.CupyBackend.std"]], "std() (ot.backend.jaxbackend method)": [[66, "id221"], [66, "ot.backend.JaxBackend.std"]], "std() (ot.backend.numpybackend method)": [[66, "id298"], [66, "ot.backend.NumpyBackend.std"]], "std() (ot.backend.tensorflowbackend method)": [[66, "id375"], [66, "ot.backend.TensorflowBackend.std"]], "std() (ot.backend.torchbackend method)": [[66, "id452"], [66, "ot.backend.TorchBackend.std"]], "sum() (ot.backend.backend method)": [[66, "id67"], [66, "ot.backend.Backend.sum"]], "sum() (ot.backend.cupybackend method)": [[66, "id145"], [66, "ot.backend.CupyBackend.sum"]], "sum() (ot.backend.jaxbackend method)": [[66, "id222"], [66, "ot.backend.JaxBackend.sum"]], "sum() (ot.backend.numpybackend method)": [[66, "id299"], [66, "ot.backend.NumpyBackend.sum"]], "sum() (ot.backend.tensorflowbackend method)": [[66, "id376"], [66, "ot.backend.TensorflowBackend.sum"]], "sum() (ot.backend.torchbackend method)": [[66, "id453"], [66, "ot.backend.TorchBackend.sum"]], "take_along_axis() (ot.backend.backend method)": [[66, "id68"], [66, "ot.backend.Backend.take_along_axis"]], "take_along_axis() (ot.backend.cupybackend method)": [[66, "id146"], [66, "ot.backend.CupyBackend.take_along_axis"]], "take_along_axis() (ot.backend.jaxbackend method)": [[66, "id223"], [66, "ot.backend.JaxBackend.take_along_axis"]], "take_along_axis() (ot.backend.numpybackend method)": [[66, "id300"], [66, "ot.backend.NumpyBackend.take_along_axis"]], "take_along_axis() (ot.backend.tensorflowbackend method)": [[66, "id377"], [66, "ot.backend.TensorflowBackend.take_along_axis"]], "take_along_axis() (ot.backend.torchbackend method)": [[66, "id454"], [66, "ot.backend.TorchBackend.take_along_axis"]], "tile() (ot.backend.backend method)": [[66, "id69"], [66, "ot.backend.Backend.tile"]], "tile() (ot.backend.cupybackend method)": [[66, "id147"], [66, "ot.backend.CupyBackend.tile"]], "tile() (ot.backend.jaxbackend method)": [[66, "id224"], [66, "ot.backend.JaxBackend.tile"]], "tile() (ot.backend.numpybackend method)": [[66, "id301"], [66, "ot.backend.NumpyBackend.tile"]], "tile() (ot.backend.tensorflowbackend method)": [[66, "id378"], [66, "ot.backend.TensorflowBackend.tile"]], "tile() (ot.backend.torchbackend method)": [[66, "id455"], [66, "ot.backend.TorchBackend.tile"]], "to_numpy() (in module ot.backend)": [[66, "id466"], [66, "ot.backend.to_numpy"]], "to_numpy() (ot.backend.backend method)": [[66, "id70"], [66, "ot.backend.Backend.to_numpy"]], "tocsr() (ot.backend.backend method)": [[66, "id71"], [66, "ot.backend.Backend.tocsr"]], "tocsr() (ot.backend.cupybackend method)": [[66, "id148"], [66, "ot.backend.CupyBackend.tocsr"]], "tocsr() (ot.backend.jaxbackend method)": [[66, "id225"], [66, "ot.backend.JaxBackend.tocsr"]], "tocsr() (ot.backend.numpybackend method)": [[66, "id302"], [66, "ot.backend.NumpyBackend.tocsr"]], "tocsr() (ot.backend.tensorflowbackend method)": [[66, "id379"], [66, "ot.backend.TensorflowBackend.tocsr"]], "tocsr() (ot.backend.torchbackend method)": [[66, "id456"], [66, "ot.backend.TorchBackend.tocsr"]], "todense() (ot.backend.backend method)": [[66, "id72"], [66, "ot.backend.Backend.todense"]], "todense() (ot.backend.cupybackend method)": [[66, "id149"], [66, "ot.backend.CupyBackend.todense"]], "todense() (ot.backend.jaxbackend method)": [[66, "id226"], [66, "ot.backend.JaxBackend.todense"]], "todense() (ot.backend.numpybackend method)": [[66, "id303"], [66, "ot.backend.NumpyBackend.todense"]], "todense() (ot.backend.tensorflowbackend method)": [[66, "id380"], [66, "ot.backend.TensorflowBackend.todense"]], "todense() (ot.backend.torchbackend method)": [[66, "id457"], [66, "ot.backend.TorchBackend.todense"]], "trace() (ot.backend.backend method)": [[66, "id73"], [66, "ot.backend.Backend.trace"]], "trace() (ot.backend.cupybackend method)": [[66, "id150"], [66, "ot.backend.CupyBackend.trace"]], "trace() (ot.backend.jaxbackend method)": [[66, "id227"], [66, "ot.backend.JaxBackend.trace"]], "trace() (ot.backend.numpybackend method)": [[66, "id304"], [66, "ot.backend.NumpyBackend.trace"]], "trace() (ot.backend.tensorflowbackend method)": [[66, "id381"], [66, "ot.backend.TensorflowBackend.trace"]], "trace() (ot.backend.torchbackend method)": [[66, "id458"], [66, "ot.backend.TorchBackend.trace"]], "transpose() (ot.backend.backend method)": [[66, "id74"], [66, "ot.backend.Backend.transpose"]], "transpose() (ot.backend.cupybackend method)": [[66, "id151"], [66, "ot.backend.CupyBackend.transpose"]], "transpose() (ot.backend.jaxbackend method)": [[66, "id228"], [66, "ot.backend.JaxBackend.transpose"]], "transpose() (ot.backend.numpybackend method)": [[66, "id305"], [66, "ot.backend.NumpyBackend.transpose"]], "transpose() (ot.backend.tensorflowbackend method)": [[66, "id382"], [66, "ot.backend.TensorflowBackend.transpose"]], "transpose() (ot.backend.torchbackend method)": [[66, "id459"], [66, "ot.backend.TorchBackend.transpose"]], "unique() (ot.backend.backend method)": [[66, "id75"], [66, "ot.backend.Backend.unique"]], "unique() (ot.backend.cupybackend method)": [[66, "id152"], [66, "ot.backend.CupyBackend.unique"]], "unique() (ot.backend.jaxbackend method)": [[66, "id229"], [66, "ot.backend.JaxBackend.unique"]], "unique() (ot.backend.numpybackend method)": [[66, "id306"], [66, "ot.backend.NumpyBackend.unique"]], "unique() (ot.backend.tensorflowbackend method)": [[66, "id383"], [66, "ot.backend.TensorflowBackend.unique"]], "unique() (ot.backend.torchbackend method)": [[66, "id460"], [66, "ot.backend.TorchBackend.unique"]], "where() (ot.backend.backend method)": [[66, "id76"], [66, "ot.backend.Backend.where"]], "where() (ot.backend.cupybackend method)": [[66, "id153"], [66, "ot.backend.CupyBackend.where"]], "where() (ot.backend.jaxbackend method)": [[66, "id230"], [66, "ot.backend.JaxBackend.where"]], "where() (ot.backend.numpybackend method)": [[66, "id307"], [66, "ot.backend.NumpyBackend.where"]], "where() (ot.backend.tensorflowbackend method)": [[66, "id384"], [66, "ot.backend.TensorflowBackend.where"]], "where() (ot.backend.torchbackend method)": [[66, "id461"], [66, "ot.backend.TorchBackend.where"]], "zero_pad() (ot.backend.backend method)": [[66, "id77"], [66, "ot.backend.Backend.zero_pad"]], "zero_pad() (ot.backend.cupybackend method)": [[66, "id154"], [66, "ot.backend.CupyBackend.zero_pad"]], "zero_pad() (ot.backend.jaxbackend method)": [[66, "id231"], [66, "ot.backend.JaxBackend.zero_pad"]], "zero_pad() (ot.backend.numpybackend method)": [[66, "id308"], [66, "ot.backend.NumpyBackend.zero_pad"]], "zero_pad() (ot.backend.tensorflowbackend method)": [[66, "id385"], [66, "ot.backend.TensorflowBackend.zero_pad"]], "zero_pad() (ot.backend.torchbackend method)": [[66, "id462"], [66, "ot.backend.TorchBackend.zero_pad"]], "zeros() (ot.backend.backend method)": [[66, "id78"], [66, "ot.backend.Backend.zeros"]], "zeros() (ot.backend.cupybackend method)": [[66, "id155"], [66, "ot.backend.CupyBackend.zeros"]], "zeros() (ot.backend.jaxbackend method)": [[66, "id232"], [66, "ot.backend.JaxBackend.zeros"]], "zeros() (ot.backend.numpybackend method)": [[66, "id309"], [66, "ot.backend.NumpyBackend.zeros"]], "zeros() (ot.backend.tensorflowbackend method)": [[66, "id386"], [66, "ot.backend.TensorflowBackend.zeros"]], "zeros() (ot.backend.torchbackend method)": [[66, "id463"], [66, "ot.backend.TorchBackend.zeros"]], "barycenter() (in module ot.bregman)": [[67, "id0"], [67, "ot.bregman.barycenter"]], "barycenter_debiased() (in module ot.bregman)": [[67, "id43"], [67, "ot.bregman.barycenter_debiased"]], "barycenter_sinkhorn() (in module ot.bregman)": [[67, "id46"], [67, "ot.bregman.barycenter_sinkhorn"]], "barycenter_stabilized() (in module ot.bregman)": [[67, "id49"], [67, "ot.bregman.barycenter_stabilized"]], "convolutional_barycenter2d() (in module ot.bregman)": [[67, "id52"], [67, "ot.bregman.convolutional_barycenter2d"]], "convolutional_barycenter2d_debiased() (in module ot.bregman)": [[67, "id56"], [67, "ot.bregman.convolutional_barycenter2d_debiased"]], "empirical_sinkhorn() (in module ot.bregman)": [[67, "id59"], [67, "ot.bregman.empirical_sinkhorn"]], "empirical_sinkhorn2() (in module ot.bregman)": [[67, "id63"], [67, "ot.bregman.empirical_sinkhorn2"]], "empirical_sinkhorn_divergence() (in module ot.bregman)": [[67, "id67"], [67, "ot.bregman.empirical_sinkhorn_divergence"]], "free_support_sinkhorn_barycenter() (in module ot.bregman)": [[67, "id69"], [67, "ot.bregman.free_support_sinkhorn_barycenter"]], "geometricbar() (in module ot.bregman)": [[67, "id72"], [67, "ot.bregman.geometricBar"]], "geometricmean() (in module ot.bregman)": [[67, "id73"], [67, "ot.bregman.geometricMean"]], "greenkhorn() (in module ot.bregman)": [[67, "id74"], [67, "ot.bregman.greenkhorn"]], "jcpot_barycenter() (in module ot.bregman)": [[67, "id78"], [67, "ot.bregman.jcpot_barycenter"]], "ot.bregman": [[67, "module-ot.bregman"]], "projc() (in module ot.bregman)": [[67, "id81"], [67, "ot.bregman.projC"]], "projr() (in module ot.bregman)": [[67, "id82"], [67, "ot.bregman.projR"]], "screenkhorn() (in module ot.bregman)": [[67, "id83"], [67, "ot.bregman.screenkhorn"]], "sinkhorn() (in module ot.bregman)": [[67, "id87"], [67, "ot.bregman.sinkhorn"]], "sinkhorn2() (in module ot.bregman)": [[67, "id93"], [67, "ot.bregman.sinkhorn2"]], "sinkhorn_epsilon_scaling() (in module ot.bregman)": [[67, "id100"], [67, "ot.bregman.sinkhorn_epsilon_scaling"]], "sinkhorn_knopp() (in module ot.bregman)": [[67, "id105"], [67, "ot.bregman.sinkhorn_knopp"]], "sinkhorn_log() (in module ot.bregman)": [[67, "id108"], [67, "ot.bregman.sinkhorn_log"]], "sinkhorn_stabilized() (in module ot.bregman)": [[67, "id112"], [67, "ot.bregman.sinkhorn_stabilized"]], "unmix() (in module ot.bregman)": [[67, "id117"], [67, "ot.bregman.unmix"]], "co_optimal_transport() (in module ot.coot)": [[68, "id0"], [68, "ot.coot.co_optimal_transport"]], "co_optimal_transport2() (in module ot.coot)": [[68, "id4"], [68, "ot.coot.co_optimal_transport2"]], "ot.coot": [[68, "module-ot.coot"]], "basetransport (class in ot.da)": [[69, "id0"], [69, "ot.da.BaseTransport"]], "emdlaplacetransport (class in ot.da)": [[69, "id40"], [69, "ot.da.EMDLaplaceTransport"]], "emdtransport (class in ot.da)": [[69, "id47"], [69, "ot.da.EMDTransport"]], "jcpottransport (class in ot.da)": [[69, "id53"], [69, "ot.da.JCPOTTransport"]], "lineartransport (class in ot.da)": [[69, "id66"], [69, "ot.da.LinearTransport"]], "mappingtransport (class in ot.da)": [[69, "id73"], [69, "ot.da.MappingTransport"]], "sinkhornl1l2transport (class in ot.da)": [[69, "id80"], [69, "ot.da.SinkhornL1l2Transport"]], "sinkhornlpl1transport (class in ot.da)": [[69, "id88"], [69, "ot.da.SinkhornLpl1Transport"]], "sinkhorntransport (class in ot.da)": [[69, "id95"], [69, "ot.da.SinkhornTransport"]], "unbalancedsinkhorntransport (class in ot.da)": [[69, "id103"], [69, "ot.da.UnbalancedSinkhornTransport"]], "coupling_ (ot.da.emdlaplacetransport attribute)": [[69, "id41"], [69, "ot.da.EMDLaplaceTransport.coupling_"]], "coupling_ (ot.da.emdtransport attribute)": [[69, "id48"], [69, "ot.da.EMDTransport.coupling_"]], "coupling_ (ot.da.jcpottransport attribute)": [[69, "id54"], [69, "ot.da.JCPOTTransport.coupling_"]], "coupling_ (ot.da.mappingtransport attribute)": [[69, "id74"], [69, "ot.da.MappingTransport.coupling_"]], "coupling_ (ot.da.sinkhornl1l2transport attribute)": [[69, "id81"], [69, "ot.da.SinkhornL1l2Transport.coupling_"]], "coupling_ (ot.da.sinkhornlpl1transport attribute)": [[69, "id89"], [69, "ot.da.SinkhornLpl1Transport.coupling_"]], "coupling_ (ot.da.sinkhorntransport attribute)": [[69, "id96"], [69, "ot.da.SinkhornTransport.coupling_"]], "coupling_ (ot.da.unbalancedsinkhorntransport attribute)": [[69, "id104"], [69, "ot.da.UnbalancedSinkhornTransport.coupling_"]], "distribution_estimation_uniform() (in module ot.da)": [[69, "id110"], [69, "ot.da.distribution_estimation_uniform"]], "emd_laplace() (in module ot.da)": [[69, "id111"], [69, "ot.da.emd_laplace"]], "fit() (ot.da.basetransport method)": [[69, "id32"], [69, "ot.da.BaseTransport.fit"]], "fit() (ot.da.emdlaplacetransport method)": [[69, "id46"], [69, "ot.da.EMDLaplaceTransport.fit"]], "fit() (ot.da.emdtransport method)": [[69, "id52"], [69, "ot.da.EMDTransport.fit"]], "fit() (ot.da.jcpottransport method)": [[69, "id60"], [69, "ot.da.JCPOTTransport.fit"]], "fit() (ot.da.lineartransport method)": [[69, "id70"], [69, "ot.da.LinearTransport.fit"]], "fit() (ot.da.mappingtransport method)": [[69, "id78"], [69, "ot.da.MappingTransport.fit"]], "fit() (ot.da.sinkhornl1l2transport method)": [[69, "id87"], [69, "ot.da.SinkhornL1l2Transport.fit"]], "fit() (ot.da.sinkhornlpl1transport method)": [[69, "id94"], [69, "ot.da.SinkhornLpl1Transport.fit"]], "fit() (ot.da.sinkhorntransport method)": [[69, "id102"], [69, "ot.da.SinkhornTransport.fit"]], "fit() (ot.da.unbalancedsinkhorntransport method)": [[69, "id109"], [69, "ot.da.UnbalancedSinkhornTransport.fit"]], "fit_transform() (ot.da.basetransport method)": [[69, "id33"], [69, "ot.da.BaseTransport.fit_transform"]], "inverse_transform() (ot.da.basetransport method)": [[69, "id34"], [69, "ot.da.BaseTransport.inverse_transform"]], "inverse_transform() (ot.da.lineartransport method)": [[69, "id71"], [69, "ot.da.LinearTransport.inverse_transform"]], "inverse_transform_labels() (ot.da.basetransport method)": [[69, "id35"], [69, "ot.da.BaseTransport.inverse_transform_labels"]], "inverse_transform_labels() (ot.da.jcpottransport method)": [[69, "id61"], [69, "ot.da.JCPOTTransport.inverse_transform_labels"]], "joint_ot_mapping_kernel() (in module ot.da)": [[69, "id115"], [69, "ot.da.joint_OT_mapping_kernel"]], "joint_ot_mapping_linear() (in module ot.da)": [[69, "id118"], [69, "ot.da.joint_OT_mapping_linear"]], "log_ (ot.da.jcpottransport attribute)": [[69, "id56"], [69, "ot.da.JCPOTTransport.log_"]], "log_ (ot.da.mappingtransport attribute)": [[69, "id76"], [69, "ot.da.MappingTransport.log_"]], "log_ (ot.da.sinkhornl1l2transport attribute)": [[69, "id82"], [69, "ot.da.SinkhornL1l2Transport.log_"]], "log_ (ot.da.sinkhorntransport attribute)": [[69, "id97"], [69, "ot.da.SinkhornTransport.log_"]], "log_ (ot.da.unbalancedsinkhorntransport attribute)": [[69, "id105"], [69, "ot.da.UnbalancedSinkhornTransport.log_"]], "mapping_ (ot.da.mappingtransport attribute)": [[69, "id75"], [69, "ot.da.MappingTransport.mapping_"]], "ot.da": [[69, "module-ot.da"]], "proportions_ (ot.da.jcpottransport attribute)": [[69, "id55"], [69, "ot.da.JCPOTTransport.proportions_"]], "sinkhorn_l1l2_gl() (in module ot.da)": [[69, "id121"], [69, "ot.da.sinkhorn_l1l2_gl"]], "sinkhorn_lpl1_mm() (in module ot.da)": [[69, "id125"], [69, "ot.da.sinkhorn_lpl1_mm"]], "transform() (ot.da.basetransport method)": [[69, "id36"], [69, "ot.da.BaseTransport.transform"]], "transform() (ot.da.jcpottransport method)": [[69, "id62"], [69, "ot.da.JCPOTTransport.transform"]], "transform() (ot.da.lineartransport method)": [[69, "id72"], [69, "ot.da.LinearTransport.transform"]], "transform() (ot.da.mappingtransport method)": [[69, "id79"], [69, "ot.da.MappingTransport.transform"]], "transform_labels() (ot.da.basetransport method)": [[69, "id37"], [69, "ot.da.BaseTransport.transform_labels"]], "transform_labels() (ot.da.jcpottransport method)": [[69, "id63"], [69, "ot.da.JCPOTTransport.transform_labels"]], "make_1d_gauss() (in module ot.datasets)": [[70, "id0"], [70, "ot.datasets.make_1D_gauss"]], "make_2d_samples_gauss() (in module ot.datasets)": [[70, "id1"], [70, "ot.datasets.make_2D_samples_gauss"]], "make_data_classif() (in module ot.datasets)": [[70, "id2"], [70, "ot.datasets.make_data_classif"]], "ot.datasets": [[70, "module-ot.datasets"]], "dist() (in module ot.dr)": [[71, "id0"], [71, "ot.dr.dist"]], "fda() (in module ot.dr)": [[71, "id3"], [71, "ot.dr.fda"]], "logsumexp() (in module ot.dr)": [[71, "id4"], [71, "ot.dr.logsumexp"]], "ot.dr": [[71, "module-ot.dr"]], "projection_robust_wasserstein() (in module ot.dr)": [[71, "id5"], [71, "ot.dr.projection_robust_wasserstein"]], "sinkhorn() (in module ot.dr)": [[71, "id8"], [71, "ot.dr.sinkhorn"]], "sinkhorn_log() (in module ot.dr)": [[71, "id9"], [71, "ot.dr.sinkhorn_log"]], "split_classes() (in module ot.dr)": [[71, "id10"], [71, "ot.dr.split_classes"]], "wda() (in module ot.dr)": [[71, "id11"], [71, "ot.dr.wda"]], "factored_optimal_transport() (in module ot.factored)": [[72, "id0"], [72, "ot.factored.factored_optimal_transport"]], "ot.factored": [[72, "module-ot.factored"]], "bures_wasserstein_distance() (in module ot.gaussian)": [[73, "id0"], [73, "ot.gaussian.bures_wasserstein_distance"]], "bures_wasserstein_mapping() (in module ot.gaussian)": [[73, "id11"], [73, "ot.gaussian.bures_wasserstein_mapping"]], "empirical_bures_wasserstein_distance() (in module ot.gaussian)": [[73, "id15"], [73, "ot.gaussian.empirical_bures_wasserstein_distance"]], "empirical_bures_wasserstein_mapping() (in module ot.gaussian)": [[73, "id18"], [73, "ot.gaussian.empirical_bures_wasserstein_mapping"]], "ot.gaussian": [[73, "module-ot.gaussian"]], "gw_distance_estimation() (in module ot.gromov)": [[74, "ot.gromov.GW_distance_estimation"]], "entropic_gromov_barycenters() (in module ot.gromov)": [[74, "ot.gromov.entropic_gromov_barycenters"]], "entropic_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.entropic_gromov_wasserstein"]], "entropic_gromov_wasserstein2() (in module ot.gromov)": [[74, "ot.gromov.entropic_gromov_wasserstein2"]], "fgw_barycenters() (in module ot.gromov)": [[74, "ot.gromov.fgw_barycenters"]], "fused_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.fused_gromov_wasserstein"]], "fused_gromov_wasserstein2() (in module ot.gromov)": [[74, "ot.gromov.fused_gromov_wasserstein2"]], "fused_gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[74, "ot.gromov.fused_gromov_wasserstein_dictionary_learning"]], "fused_gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[74, "ot.gromov.fused_gromov_wasserstein_linear_unmixing"]], "gromov_barycenters() (in module ot.gromov)": [[74, "ot.gromov.gromov_barycenters"]], "gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.gromov_wasserstein"]], "gromov_wasserstein2() (in module ot.gromov)": [[74, "ot.gromov.gromov_wasserstein2"]], "gromov_wasserstein_dictionary_learning() (in module ot.gromov)": [[74, "ot.gromov.gromov_wasserstein_dictionary_learning"]], "gromov_wasserstein_linear_unmixing() (in module ot.gromov)": [[74, "ot.gromov.gromov_wasserstein_linear_unmixing"]], "gwggrad() (in module ot.gromov)": [[74, "ot.gromov.gwggrad"]], "gwloss() (in module ot.gromov)": [[74, "ot.gromov.gwloss"]], "init_matrix() (in module ot.gromov)": [[74, "ot.gromov.init_matrix"]], "init_matrix_semirelaxed() (in module ot.gromov)": [[74, "ot.gromov.init_matrix_semirelaxed"]], "ot.gromov": [[74, "module-ot.gromov"]], "pointwise_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.pointwise_gromov_wasserstein"]], "sampled_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.sampled_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.semirelaxed_fused_gromov_wasserstein"]], "semirelaxed_fused_gromov_wasserstein2() (in module ot.gromov)": [[74, "ot.gromov.semirelaxed_fused_gromov_wasserstein2"]], "semirelaxed_gromov_wasserstein() (in module ot.gromov)": [[74, "ot.gromov.semirelaxed_gromov_wasserstein"]], "semirelaxed_gromov_wasserstein2() (in module ot.gromov)": [[74, "ot.gromov.semirelaxed_gromov_wasserstein2"]], "solve_gromov_linesearch() (in module ot.gromov)": [[74, "ot.gromov.solve_gromov_linesearch"]], "solve_semirelaxed_gromov_linesearch() (in module ot.gromov)": [[74, "ot.gromov.solve_semirelaxed_gromov_linesearch"]], "tensor_product() (in module ot.gromov)": [[74, "ot.gromov.tensor_product"]], "update_feature_matrix() (in module ot.gromov)": [[74, "ot.gromov.update_feature_matrix"]], "update_kl_loss() (in module ot.gromov)": [[74, "ot.gromov.update_kl_loss"]], "update_square_loss() (in module ot.gromov)": [[74, "ot.gromov.update_square_loss"]], "update_structure_matrix() (in module ot.gromov)": [[74, "ot.gromov.update_structure_matrix"]], "barycenter() (in module ot.lp)": [[75, "ot.lp.barycenter"]], "binary_search_circle() (in module ot.lp)": [[75, "ot.lp.binary_search_circle"]], "center_ot_dual() (in module ot.lp)": [[75, "ot.lp.center_ot_dual"]], "check_number_threads() (in module ot.lp)": [[75, "ot.lp.check_number_threads"]], "emd() (in module ot.lp)": [[75, "id0"], [75, "ot.lp.emd"]], "emd2() (in module ot.lp)": [[75, "id11"], [75, "ot.lp.emd2"]], "emd2_1d() (in module ot.lp)": [[75, "ot.lp.emd2_1d"]], "emd_1d() (in module ot.lp)": [[75, "ot.lp.emd_1d"]], "estimate_dual_null_weights() (in module ot.lp)": [[75, "ot.lp.estimate_dual_null_weights"]], "free_support_barycenter() (in module ot.lp)": [[75, "id18"], [75, "ot.lp.free_support_barycenter"]], "generalized_free_support_barycenter() (in module ot.lp)": [[75, "id22"], [75, "ot.lp.generalized_free_support_barycenter"]], "ot.lp": [[75, "module-ot.lp"]], "semidiscrete_wasserstein2_unif_circle() (in module ot.lp)": [[75, "ot.lp.semidiscrete_wasserstein2_unif_circle"]], "wasserstein_1d() (in module ot.lp)": [[75, "ot.lp.wasserstein_1d"]], "wasserstein_circle() (in module ot.lp)": [[75, "ot.lp.wasserstein_circle"]], "cg() (in module ot.optim)": [[76, "id0"], [76, "ot.optim.cg"]], "gcg() (in module ot.optim)": [[76, "id13"], [76, "ot.optim.gcg"]], "generic_conditional_gradient() (in module ot.optim)": [[76, "id17"], [76, "ot.optim.generic_conditional_gradient"]], "line_search_armijo() (in module ot.optim)": [[76, "id23"], [76, "ot.optim.line_search_armijo"]], "ot.optim": [[76, "module-ot.optim"]], "semirelaxed_cg() (in module ot.optim)": [[76, "id24"], [76, "ot.optim.semirelaxed_cg"]], "solve_1d_linesearch_quad() (in module ot.optim)": [[76, "id27"], [76, "ot.optim.solve_1d_linesearch_quad"]], "entropic_partial_gromov_wasserstein() (in module ot.partial)": [[77, "id0"], [77, "ot.partial.entropic_partial_gromov_wasserstein"]], "entropic_partial_gromov_wasserstein2() (in module ot.partial)": [[77, "id17"], [77, "ot.partial.entropic_partial_gromov_wasserstein2"]], "entropic_partial_wasserstein() (in module ot.partial)": [[77, "id21"], [77, "ot.partial.entropic_partial_wasserstein"]], "gwgrad_partial() (in module ot.partial)": [[77, "id24"], [77, "ot.partial.gwgrad_partial"]], "gwloss_partial() (in module ot.partial)": [[77, "id27"], [77, "ot.partial.gwloss_partial"]], "ot.partial": [[77, "module-ot.partial"]], "partial_gromov_wasserstein() (in module ot.partial)": [[77, "id28"], [77, "ot.partial.partial_gromov_wasserstein"]], "partial_gromov_wasserstein2() (in module ot.partial)": [[77, "id31"], [77, "ot.partial.partial_gromov_wasserstein2"]], "partial_wasserstein() (in module ot.partial)": [[77, "id34"], [77, "ot.partial.partial_wasserstein"]], "partial_wasserstein2() (in module ot.partial)": [[77, "id37"], [77, "ot.partial.partial_wasserstein2"]], "partial_wasserstein_lagrange() (in module ot.partial)": [[77, "id40"], [77, "ot.partial.partial_wasserstein_lagrange"]], "ot.plot": [[78, "module-ot.plot"]], "plot1d_mat() (in module ot.plot)": [[78, "id0"], [78, "ot.plot.plot1D_mat"]], "plot2d_samples_mat() (in module ot.plot)": [[78, "id1"], [78, "ot.plot.plot2D_samples_mat"]], "complement_schur() (in module ot.regpath)": [[79, "id0"], [79, "ot.regpath.complement_schur"]], "compute_next_removal() (in module ot.regpath)": [[79, "id12"], [79, "ot.regpath.compute_next_removal"]], "compute_transport_plan() (in module ot.regpath)": [[79, "id15"], [79, "ot.regpath.compute_transport_plan"]], "construct_augmented_h() (in module ot.regpath)": [[79, "id18"], [79, "ot.regpath.construct_augmented_H"]], "fully_relaxed_path() (in module ot.regpath)": [[79, "id19"], [79, "ot.regpath.fully_relaxed_path"]], "ot.regpath": [[79, "module-ot.regpath"]], "ot_next_gamma() (in module ot.regpath)": [[79, "id21"], [79, "ot.regpath.ot_next_gamma"]], "recast_ot_as_lasso() (in module ot.regpath)": [[79, "id23"], [79, "ot.regpath.recast_ot_as_lasso"]], "recast_semi_relaxed_as_lasso() (in module ot.regpath)": [[79, "id25"], [79, "ot.regpath.recast_semi_relaxed_as_lasso"]], "regularization_path() (in module ot.regpath)": [[79, "id26"], [79, "ot.regpath.regularization_path"]], "semi_relaxed_next_gamma() (in module ot.regpath)": [[79, "id28"], [79, "ot.regpath.semi_relaxed_next_gamma"]], "semi_relaxed_path() (in module ot.regpath)": [[79, "id30"], [79, "ot.regpath.semi_relaxed_path"]], "get_random_projections() (in module ot.sliced)": [[80, "id0"], [80, "ot.sliced.get_random_projections"]], "max_sliced_wasserstein_distance() (in module ot.sliced)": [[80, "id5"], [80, "ot.sliced.max_sliced_wasserstein_distance"]], "ot.sliced": [[80, "module-ot.sliced"]], "sliced_wasserstein_distance() (in module ot.sliced)": [[80, "id7"], [80, "ot.sliced.sliced_wasserstein_distance"]], "sliced_wasserstein_sphere() (in module ot.sliced)": [[80, "id9"], [80, "ot.sliced.sliced_wasserstein_sphere"]], "sliced_wasserstein_sphere_unif() (in module ot.sliced)": [[80, "id11"], [80, "ot.sliced.sliced_wasserstein_sphere_unif"]], "negentropy (class in ot.smooth)": [[81, "id0"], [81, "ot.smooth.NegEntropy"]], "omega() (ot.smooth.negentropy method)": [[81, "id7"], [81, "ot.smooth.NegEntropy.Omega"]], "omega() (ot.smooth.regularization method)": [[81, "id11"], [81, "ot.smooth.Regularization.Omega"]], "omega() (ot.smooth.sparsityconstrained method)": [[81, "id15"], [81, "ot.smooth.SparsityConstrained.Omega"]], "omega() (ot.smooth.squaredl2 method)": [[81, "id19"], [81, "ot.smooth.SquaredL2.Omega"]], "regularization (class in ot.smooth)": [[81, "id10"], [81, "ot.smooth.Regularization"]], "sparsityconstrained (class in ot.smooth)": [[81, "id14"], [81, "ot.smooth.SparsityConstrained"]], "squaredl2 (class in ot.smooth)": [[81, "id18"], [81, "ot.smooth.SquaredL2"]], "delta_omega() (ot.smooth.negentropy method)": [[81, "id8"], [81, "ot.smooth.NegEntropy.delta_Omega"]], "delta_omega() (ot.smooth.regularization method)": [[81, "id12"], [81, "ot.smooth.Regularization.delta_Omega"]], "delta_omega() (ot.smooth.sparsityconstrained method)": [[81, "id16"], [81, "ot.smooth.SparsityConstrained.delta_Omega"]], "delta_omega() (ot.smooth.squaredl2 method)": [[81, "id20"], [81, "ot.smooth.SquaredL2.delta_Omega"]], "dual_obj_grad() (in module ot.smooth)": [[81, "id22"], [81, "ot.smooth.dual_obj_grad"]], "get_plan_from_dual() (in module ot.smooth)": [[81, "id23"], [81, "ot.smooth.get_plan_from_dual"]], "get_plan_from_semi_dual() (in module ot.smooth)": [[81, "id24"], [81, "ot.smooth.get_plan_from_semi_dual"]], "max_omega() (ot.smooth.negentropy method)": [[81, "id9"], [81, "ot.smooth.NegEntropy.max_Omega"]], "max_omega() (ot.smooth.regularization method)": [[81, "id13"], [81, "ot.smooth.Regularization.max_Omega"]], "max_omega() (ot.smooth.sparsityconstrained method)": [[81, "id17"], [81, "ot.smooth.SparsityConstrained.max_Omega"]], "max_omega() (ot.smooth.squaredl2 method)": [[81, "id21"], [81, "ot.smooth.SquaredL2.max_Omega"]], "ot.smooth": [[81, "module-ot.smooth"]], "projection_simplex() (in module ot.smooth)": [[81, "id25"], [81, "ot.smooth.projection_simplex"]], "semi_dual_obj_grad() (in module ot.smooth)": [[81, "id26"], [81, "ot.smooth.semi_dual_obj_grad"]], "smooth_ot_dual() (in module ot.smooth)": [[81, "id27"], [81, "ot.smooth.smooth_ot_dual"]], "smooth_ot_semi_dual() (in module ot.smooth)": [[81, "id32"], [81, "ot.smooth.smooth_ot_semi_dual"]], "solve_dual() (in module ot.smooth)": [[81, "id37"], [81, "ot.smooth.solve_dual"]], "solve_semi_dual() (in module ot.smooth)": [[81, "id38"], [81, "ot.smooth.solve_semi_dual"]], "averaged_sgd_entropic_transport() (in module ot.stochastic)": [[82, "id0"], [82, "ot.stochastic.averaged_sgd_entropic_transport"]], "batch_grad_dual() (in module ot.stochastic)": [[82, "id15"], [82, "ot.stochastic.batch_grad_dual"]], "c_transform_entropic() (in module ot.stochastic)": [[82, "id18"], [82, "ot.stochastic.c_transform_entropic"]], "coordinate_grad_semi_dual() (in module ot.stochastic)": [[82, "id21"], [82, "ot.stochastic.coordinate_grad_semi_dual"]], "loss_dual_entropic() (in module ot.stochastic)": [[82, "id24"], [82, "ot.stochastic.loss_dual_entropic"]], "loss_dual_quadratic() (in module ot.stochastic)": [[82, "id26"], [82, "ot.stochastic.loss_dual_quadratic"]], "ot.stochastic": [[82, "module-ot.stochastic"]], "plan_dual_entropic() (in module ot.stochastic)": [[82, "id28"], [82, "ot.stochastic.plan_dual_entropic"]], "plan_dual_quadratic() (in module ot.stochastic)": [[82, "id30"], [82, "ot.stochastic.plan_dual_quadratic"]], "sag_entropic_transport() (in module ot.stochastic)": [[82, "id32"], [82, "ot.stochastic.sag_entropic_transport"]], "sgd_entropic_regularization() (in module ot.stochastic)": [[82, "id35"], [82, "ot.stochastic.sgd_entropic_regularization"]], "solve_dual_entropic() (in module ot.stochastic)": [[82, "id37"], [82, "ot.stochastic.solve_dual_entropic"]], "solve_semi_dual_entropic() (in module ot.stochastic)": [[82, "id39"], [82, "ot.stochastic.solve_semi_dual_entropic"]], "barycenter_unbalanced() (in module ot.unbalanced)": [[83, "id0"], [83, "ot.unbalanced.barycenter_unbalanced"]], "barycenter_unbalanced_sinkhorn() (in module ot.unbalanced)": [[83, "id25"], [83, "ot.unbalanced.barycenter_unbalanced_sinkhorn"]], "barycenter_unbalanced_stabilized() (in module ot.unbalanced)": [[83, "id29"], [83, "ot.unbalanced.barycenter_unbalanced_stabilized"]], "lbfgsb_unbalanced() (in module ot.unbalanced)": [[83, "id33"], [83, "ot.unbalanced.lbfgsb_unbalanced"]], "mm_unbalanced() (in module ot.unbalanced)": [[83, "id35"], [83, "ot.unbalanced.mm_unbalanced"]], "mm_unbalanced2() (in module ot.unbalanced)": [[83, "id38"], [83, "ot.unbalanced.mm_unbalanced2"]], "ot.unbalanced": [[83, "module-ot.unbalanced"]], "sinkhorn_knopp_unbalanced() (in module ot.unbalanced)": [[83, "id40"], [83, "ot.unbalanced.sinkhorn_knopp_unbalanced"]], "sinkhorn_stabilized_unbalanced() (in module ot.unbalanced)": [[83, "id44"], [83, "ot.unbalanced.sinkhorn_stabilized_unbalanced"]], "sinkhorn_unbalanced() (in module ot.unbalanced)": [[83, "id48"], [83, "ot.unbalanced.sinkhorn_unbalanced"]], "sinkhorn_unbalanced2() (in module ot.unbalanced)": [[83, "id54"], [83, "ot.unbalanced.sinkhorn_unbalanced2"]], "baseestimator (class in ot.utils)": [[84, "id0"], [84, "ot.utils.BaseEstimator"]], "otresult (class in ot.utils)": [[84, "ot.utils.OTResult"]], "undefinedparameter": [[84, "ot.utils.UndefinedParameter"]], "a_to_b (ot.utils.otresult property)": [[84, "ot.utils.OTResult.a_to_b"]], "b_to_a (ot.utils.otresult property)": [[84, "ot.utils.OTResult.b_to_a"]], "check_params() (in module ot.utils)": [[84, "id3"], [84, "ot.utils.check_params"]], "check_random_state() (in module ot.utils)": [[84, "id4"], [84, "ot.utils.check_random_state"]], "citation (ot.utils.otresult property)": [[84, "ot.utils.OTResult.citation"]], "clean_zeros() (in module ot.utils)": [[84, "id5"], [84, "ot.utils.clean_zeros"]], "cost_normalization() (in module ot.utils)": [[84, "id6"], [84, "ot.utils.cost_normalization"]], "deprecated (class in ot.utils)": [[84, "id7"], [84, "ot.utils.deprecated"]], "dist() (in module ot.utils)": [[84, "id8"], [84, "ot.utils.dist"]], "dist0() (in module ot.utils)": [[84, "id9"], [84, "ot.utils.dist0"]], "dots() (in module ot.utils)": [[84, "id10"], [84, "ot.utils.dots"]], "euclidean_distances() (in module ot.utils)": [[84, "id11"], [84, "ot.utils.euclidean_distances"]], "get_coordinate_circle() (in module ot.utils)": [[84, "id12"], [84, "ot.utils.get_coordinate_circle"]], "get_params() (ot.utils.baseestimator method)": [[84, "id1"], [84, "ot.utils.BaseEstimator.get_params"]], "kernel() (in module ot.utils)": [[84, "id13"], [84, "ot.utils.kernel"]], "label_normalization() (in module ot.utils)": [[84, "id14"], [84, "ot.utils.label_normalization"]], "laplacian() (in module ot.utils)": [[84, "id15"], [84, "ot.utils.laplacian"]], "lazy_plan (ot.utils.otresult property)": [[84, "ot.utils.OTResult.lazy_plan"]], "list_to_array() (in module ot.utils)": [[84, "id16"], [84, "ot.utils.list_to_array"]], "marginal_a (ot.utils.otresult property)": [[84, "ot.utils.OTResult.marginal_a"]], "marginal_b (ot.utils.otresult property)": [[84, "ot.utils.OTResult.marginal_b"]], "marginals (ot.utils.otresult property)": [[84, "ot.utils.OTResult.marginals"]], "ot.utils": [[84, "module-ot.utils"]], "parmap() (in module ot.utils)": [[84, "id17"], [84, "ot.utils.parmap"]], "plan (ot.utils.otresult property)": [[84, "ot.utils.OTResult.plan"]], "potential_a (ot.utils.otresult property)": [[84, "ot.utils.OTResult.potential_a"]], "potential_b (ot.utils.otresult property)": [[84, "ot.utils.OTResult.potential_b"]], "potentials (ot.utils.otresult property)": [[84, "ot.utils.OTResult.potentials"]], "proj_simplex() (in module ot.utils)": [[84, "id18"], [84, "ot.utils.proj_simplex"]], "projection_sparse_simplex() (in module ot.utils)": [[84, "id19"], [84, "ot.utils.projection_sparse_simplex"]], "set_params() (ot.utils.baseestimator method)": [[84, "id2"], [84, "ot.utils.BaseEstimator.set_params"]], "sparse_plan (ot.utils.otresult property)": [[84, "ot.utils.OTResult.sparse_plan"]], "status (ot.utils.otresult property)": [[84, "ot.utils.OTResult.status"]], "tic() (in module ot.utils)": [[84, "id20"], [84, "ot.utils.tic"]], "toc() (in module ot.utils)": [[84, "id21"], [84, "ot.utils.toc"]], "toq() (in module ot.utils)": [[84, "id22"], [84, "ot.utils.toq"]], "unif() (in module ot.utils)": [[84, "id23"], [84, "ot.utils.unif"]], "value (ot.utils.otresult property)": [[84, "ot.utils.OTResult.value"]], "value_linear (ot.utils.otresult property)": [[84, "ot.utils.OTResult.value_linear"]], "ot.weak": [[85, "module-ot.weak"]], "weak_optimal_transport() (in module ot.weak)": [[85, "id0"], [85, "ot.weak.weak_optimal_transport"]]}})