
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/barycenters/plot_convolutional_barycenter.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_barycenters_plot_convolutional_barycenter.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_barycenters_plot_convolutional_barycenter.py:


============================================
Convolutional Wasserstein Barycenter example
============================================

This example is designed to illustrate how the Convolutional Wasserstein Barycenter
function of POT works.

.. GENERATED FROM PYTHON SOURCE LINES 12-22

.. code-block:: default


    # Author: Nicolas Courty <ncourty@irisa.fr>
    #
    # License: MIT License


    import numpy as np
    import pylab as pl
    import ot








.. GENERATED FROM PYTHON SOURCE LINES 23-27

Data preparation
----------------

The four distributions are constructed from 4 simple images

.. GENERATED FROM PYTHON SOURCE LINES 27-55

.. code-block:: default



    f1 = 1 - pl.imread('../../data/redcross.png')[:, :, 2]
    f2 = 1 - pl.imread('../../data/duck.png')[:, :, 2]
    f3 = 1 - pl.imread('../../data/heart.png')[:, :, 2]
    f4 = 1 - pl.imread('../../data/tooth.png')[:, :, 2]

    A = []
    f1 = f1 / np.sum(f1)
    f2 = f2 / np.sum(f2)
    f3 = f3 / np.sum(f3)
    f4 = f4 / np.sum(f4)
    A.append(f1)
    A.append(f2)
    A.append(f3)
    A.append(f4)
    A = np.array(A)

    nb_images = 5

    # those are the four corners coordinates that will be interpolated by bilinear
    # interpolation
    v1 = np.array((1, 0, 0, 0))
    v2 = np.array((0, 1, 0, 0))
    v3 = np.array((0, 0, 1, 0))
    v4 = np.array((0, 0, 0, 1))









.. GENERATED FROM PYTHON SOURCE LINES 56-59

Barycenter computation and visualization
----------------------------------------


.. GENERATED FROM PYTHON SOURCE LINES 59-93

.. code-block:: default


    pl.figure(figsize=(10, 10))
    pl.title('Convolutional Wasserstein Barycenters in POT')
    cm = 'Blues'
    # regularization parameter
    reg = 0.004
    for i in range(nb_images):
        for j in range(nb_images):
            pl.subplot(nb_images, nb_images, i * nb_images + j + 1)
            tx = float(i) / (nb_images - 1)
            ty = float(j) / (nb_images - 1)

            # weights are constructed by bilinear interpolation
            tmp1 = (1 - tx) * v1 + tx * v2
            tmp2 = (1 - tx) * v3 + tx * v4
            weights = (1 - ty) * tmp1 + ty * tmp2

            if i == 0 and j == 0:
                pl.imshow(f1, cmap=cm)
                pl.axis('off')
            elif i == 0 and j == (nb_images - 1):
                pl.imshow(f3, cmap=cm)
                pl.axis('off')
            elif i == (nb_images - 1) and j == 0:
                pl.imshow(f2, cmap=cm)
                pl.axis('off')
            elif i == (nb_images - 1) and j == (nb_images - 1):
                pl.imshow(f4, cmap=cm)
                pl.axis('off')
            else:
                # call to barycenter computation
                pl.imshow(ot.bregman.convolutional_barycenter2d(A, reg, weights), cmap=cm)
                pl.axis('off')
    pl.show()



.. image-sg:: /auto_examples/barycenters/images/sphx_glr_plot_convolutional_barycenter_001.png
   :alt: plot convolutional barycenter
   :srcset: /auto_examples/barycenters/images/sphx_glr_plot_convolutional_barycenter_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  53.616 seconds)


.. _sphx_glr_download_auto_examples_barycenters_plot_convolutional_barycenter.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_convolutional_barycenter.py <plot_convolutional_barycenter.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_convolutional_barycenter.ipynb <plot_convolutional_barycenter.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
